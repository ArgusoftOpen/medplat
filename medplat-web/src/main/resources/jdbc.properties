#datasource configuration

spring.datasource.platform=postgres
spring.database.driverClassName=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://@jdbc.url@:@jdbc.port@/@jdbc.database@?currentSchema=public
spring.datasource.url=jdbc:postgresql://@jdbc.url@:@jdbc.port@/@jdbc.database@
spring.datasource.username=@jdbc.username@
spring.datasource.password=@jdbc.password@
spring.datasource.max-active = @jdbc.maxActiveConnection@
spring.datasource.max-wait=1000000


#app.master.platform=postgres
#app.master.driverClassName=org.postgresql.Driver
#app.master.jdbc-url=jdbc:postgresql://@jdbc.url@:@jdbc.port@/@jdbc.database@?currentSchema=master
#app.master.username=@jdbc.username@
#app.master.password=@jdbc.password@
#
#app.tenant.maxActiveConnection=@jdbc.maxActiveConnection@
#kp
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
#jpa configuration
#spring.jpa.database=POSTGRESQL
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update

#================================================================================
#                JPA/Hibernate
#================================================================================
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext
#Disable default flyway
spring.flyway.enabled=false
#Enable flyway for master database
#flyway.master.enable=true
#Enable flyway for tenant database
#flyway.tenant.enable=true
#flyway configuration
#flyway.locations = classpath:db/migration2
#flyway.schemas=public
# schemas to update
#flyway.init-version=1
#flyway.baseline-on-migrate=true
# version to start migration
#flyway.init-sqls= # SQL statements to execute to initialize a connection immediately after obtaining it
#flyway.sql-migration-prefix=V
#flyway.sql-migration-suffix=.sql
#flyway.validate-on-migrate=false
#flyway.url=jdbc:postgresql://@jdbc.url@:@jdbc.port@/@jdbc.database@
# JDBC url if you want Flyway to create its own DataSource
#flyway.user=@jdbc.username@
# JDBC username if you want Flyway to create its own DataSource
#flyway.password=@jdbc.password@
# JDBC password if you want Flyway to create its own DataSource
#flyway.out-of-order=true

