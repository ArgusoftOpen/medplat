
/**
 * Author:  hmorzariya
 * Created: 4 Jul, 2023
 */
DELETE FROM public.report_master;

INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(627, 'Eligible Couple Not Registered	( Aanmol Pregnancy Analytic Details )', NULL, true, 'DYNAMIC', NULL, '2020-07-26 23:38:16.249', 74841, '2020-07-17 18:58:08.609', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with financial_year as (\n\tSELECT\n        to_date(\n            CASE WHEN ''#from_month#'' = ''null'' THEN\n                NULL\n            ELSE\n                ''#from_month#''\n            END, ''MM/DD/YYYY'') AS from_date,\n        to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date\n), final_det as (\n\tselect\n\trprd.pregnancy_reg_location_id as location_id,\n\trprd.member_id\n\tfrom rch_pregnancy_analytics_details rprd \n\tinner join anmol_location_mapping mapping on rprd.pregnancy_reg_location_id = mapping.location_id\n\tINNER JOIN location_hierchy_closer_det lm on lm.child_id = mapping.location_id and parent_loc_type  = ''V''\n\tleft join anmol_master am on rprd.member_id = am.member_id\n\tleft join financial_year fy on true \n\twhere parent_loc_type = ''V'' and \n\tcast(rprd.reg_service_date_month_year as date) between fy.from_date and fy.to_date  \n\tand rprd.preg_reg_state in (''DELIVERY_DONE'', ''PENDING'', ''PREGNANT'')\n\tand \n(am.id is null )\nand rprd.pregnancy_reg_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id# )\n\tORDER BY rprd.pregnancy_reg_id\n\t#limit_offset#\n)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nget_location_hierarchy(fd.location_id) as \"Location\",\nim.first_name || '' '' || im.middle_name || '' '' || im.last_name || '' ('' || im.unique_health_id || '')'' as \"Member Det\",\ncast(age(cast(im.dob as date))  as text) as \"Age\",\nim.basic_state as \"Member Basic State\",\nimf.basic_state as \"Family Basic State\",\ncase when im.gender = ''F'' then ''Female'' else ''Male'' end as \"Gender\",\nlfvd.value as \"Marital Status\"\nfrom final_det fd\nleft join imt_member im on im.id = fd.member_id\nleft join imt_family imf on imf.family_id = im.family_id\nleft join listvalue_field_value_detail lfvd on lfvd.id = im.marital_status", "queryId": 1691, "fieldName": "tableField", "queryUUID": "672d490c-ec2c-4822-b119-b62326bc5523", "queryParams": "to_month,limit_offset,from_month,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month#'' as date),''MM/YYYY'') as to_date", "queryIdForParam": 1690, "queryUUIDForParam": "449a521a-bce1-42fd-9c1a-d3e4eb31f0f5"}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''> '' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1689, "queryUUIDForParam": "03d4b822-db5f-4382-af3f-0ccc82422619"}, {"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "isMandatory": false, "queryForParam": "select to_char(cast(''#from_month#'' as date),''MM/YYYY'') as from_date", "queryIdForParam": 1688, "queryUUIDForParam": "d6aaa3a6-290a-47c4-b0f8-d750b00136ff", "requiredUptoLevel": ""}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'anmol_preg_not_reg', 'f22a0cf3-b423-4626-8efa-20cad27d651f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(621, 'CMAM Weekly Visit Report', NULL, true, 'DYNAMIC', NULL, '2020-10-01 10:21:15.838', 60512, '2020-06-29 12:04:00.441', 74841, '{"layout":"dynamicReport1","containers":{"tableContainer":[{"query":"with prefered_language as(\n\tselect case when prefered_language = ''EN'' then true else false end as is_english \n\tfrom um_user\n\twhere id = #loggedInUserId#\n),location_detail as (\n\tselect child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1\n),dates as (\n\tselect to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date,\n\tto_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date\n),cmam_counts as (\n\tselect location_detail.child_id,\n\tsum(cmam_total_admission) as cmam_admission_count,\n\tsum(cmam_visit_1) as cmam_visit_1_count,\n\tsum(cmam_visit_2) as cmam_visit_2_count,\n\tsum(cmam_visit_3) as cmam_visit_3_count,\n\tsum(cmam_visit_4) as cmam_visit_4_count,\n\tsum(cmam_visit_5) as cmam_visit_5_count,\n\tsum(cmam_visit_6) as cmam_visit_6_count,\n\tsum(cmam_visit_7) as cmam_visit_7_count,\n\tsum(cmam_visit_8) as cmam_visit_8_count\n\tfrom location_detail\n\tinner join location_hierchy_closer_det on location_detail.child_id = location_hierchy_closer_det.parent_id\n\tinner join child_cmam_analytics_location_wise_details on location_hierchy_closer_det.child_id = child_cmam_analytics_location_wise_details.location_id\n\tinner join dates on child_cmam_analytics_location_wise_details.month_year between dates.from_date and dates.to_date\n\tgroup by location_detail.child_id\n),details as (\n\tselect row_number() over() as sr_no,\n\tlocation_master.id as hidden_location_id,\n\tcase when prefered_language.is_english and location_master.english_name is not null then location_master.english_name else location_master.name end as loc,\n\tcoalesce(cmam_counts.cmam_admission_count,0) as cmam_admission_count,\n\tcoalesce(cmam_counts.cmam_visit_1_count,0) as cmam_visit_1_count,\n\tcoalesce(cmam_counts.cmam_visit_2_count,0) as cmam_visit_2_count,\n\tcoalesce(cmam_counts.cmam_visit_3_count,0) as cmam_visit_3_count,\n\tcoalesce(cmam_counts.cmam_visit_4_count,0) as cmam_visit_4_count,\n\tcoalesce(cmam_counts.cmam_visit_5_count,0) as cmam_visit_5_count,\n\tcoalesce(cmam_counts.cmam_visit_6_count,0) as cmam_visit_6_count,\n\tcoalesce(cmam_counts.cmam_visit_7_count,0) as cmam_visit_7_count,\n\tcoalesce(cmam_counts.cmam_visit_8_count,0) as cmam_visit_8_count\n\tfrom location_detail\n\tinner join location_master on location_master.id = location_detail.child_id\n\tleft join cmam_counts on location_detail.child_id = cmam_counts.child_id\n    cross join prefered_language\n)\nselect details.loc as \"Location\",\ndetails.hidden_location_id,\ndetails.cmam_admission_count as \"Total CMAM Admission\",\ndetails.cmam_visit_1_count as \"Week 1\",\ndetails.cmam_visit_2_count as \"Week 2\",\ndetails.cmam_visit_3_count as \"Week 3\",\ndetails.cmam_visit_4_count as \"Week 4\",\ndetails.cmam_visit_5_count as \"Week 5\",\ndetails.cmam_visit_6_count as \"Week 6\",\ndetails.cmam_visit_7_count as \"Week 7\",\ndetails.cmam_visit_8_count as \"Week 8\"\nfrom details\nunion all\nselect ''<b>Total<b>'',\n#location_id#,\nsum(details.cmam_admission_count),\nsum(details.cmam_visit_1_count),\nsum(details.cmam_visit_2_count),\nsum(details.cmam_visit_3_count),\nsum(details.cmam_visit_4_count),\nsum(details.cmam_visit_5_count),\nsum(details.cmam_visit_6_count),\nsum(details.cmam_visit_7_count),\nsum(details.cmam_visit_8_count)\nfrom details;","queryId":1660,"fieldName":"tableField","queryUUID":"e7369e63-cd9a-4d60-b552-9ddf9f23d89d","queryParams":"from_date,to_date,loggedInUserId,location_id"}],"fieldsContainer":[{"fieldName":"date","fieldType":"onlyMonthFromTo","queryUUID":null,"displayName":"Month","isMandatory":true,"queryUUIDForParam":null,"requiredUptoLevel":1,"index":0,"ckSetCustomMaxMonth":true,"setCustomMaxMonth":0},{"fieldName":"location_id","fieldType":"location","queryUUID":null,"displayName":"Location","isMandatory":true,"fetchUptoLevel":"6","queryUUIDForParam":null,"requiredUptoLevel":1,"fetchAccordingToUserAoi":true}]},"isFilterOpen":true,"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'cmam_weekly_visit', '8a7df09f-7928-4638-93c2-2b2935a42669'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(229, 'Hep B Given (Yearly)', NULL, true, 'DYNAMIC', NULL, '2019-04-05 19:08:04.625', 1, '2019-02-15 19:00:28.583', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, f.location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f\n\twhere l.child_id = c.hep_b_loc and m.id = c.member_id and f.family_id = m.family_id\n\tand l.parent_id = #location_id#\n\tand c.hep_b is not null\n        group by m.id, f.location_id,c.dob,hep_b\n\thaving case when extract(month from hep_b) > 3 \n\tthen concat(extract(year from hep_b), ''-'', extract(year from hep_b) + 1)\n\telse concat(extract(year from hep_b) - 1, ''-'', extract(year from hep_b)) end = \n\t\tcase when #financial_year# is null then \n\t\t\tcase when extract(month from current_date) > 3 \n\t\t\tthen concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)\n\t\t\telse concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end\n\t\telse ''#financial_year#'' end\n\t\t\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 555, "fieldName": "tableField", "queryUUID": "788f197c-a260-4cf9-8c73-d0a2bba7a352", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryForParam": "", "queryIdForParam": "", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 554, "queryUUIDForParam": "b2c7b06d-762a-4b9e-8186-d8f489d230dd"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_hepb_date_wise', '15d2d5d0-09b9-425b-ba4b-5c7cb7b6e6f9'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(656, '15% weight gain (CMTC/NRC Follow-up Visit - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-06 15:52:36.615', 60512, '2020-09-18 11:28:31.244', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1753,"queryUUIDForParam":"94f9dee9-16fd-405c-8d8a-3dad03b6c2f7"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_discharge_15_weight_gain\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1754,"queryUUID":"380782b7-aee0-4ff7-9d0d-d7a5d401dbb1","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', '15_wt_gain_fol_mon', '39f1d1c4-1024-4e45-a378-97ad03fd8082'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(46, 'FHS IMPORTED FROM EMAMTA', NULL, true, 'DYNAMIC', NULL, '2018-09-06 12:01:16.979', 1027, '2018-07-20 11:45:21.620', 1027, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "", "queryId": 58, "fieldName": "tableField", "queryUUID": "b99f1412-49d3-4e5f-9585-cc8aff7f3125", "queryParams": "user_id,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "location id", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "user_id", "fieldType": "text", "queryUUID": null, "displayName": "user id", "queryUUIDForParam": null}]}, "templateType": "DYNAMIC_REPORTS", "selectedContainer": "tableContainer", "isBackButtonRequired": true}', 'fhs_imported_emamta', '2bce75fa-3622-4871-b5cd-da0826236bd9'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(593, 'Pending Positive Admission Report (Facility Status Report)', NULL, true, 'DYNAMIC', NULL, '2020-07-24 15:08:00.094', 74841, '2020-04-20 19:01:37.931', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with location_det as (\n\tselect child_id as loc_id\n\tfrom location_hierchy_closer_det lhc\n\twhere \n\tparent_id = #location_id# \n), paratemeter_det as (\n\tselect\n\t(case when ''#from_date#'' = ''null'' then current_date else to_date(''#from_date#'',''MM/DD/YYYY'') end) as from_date\n\t,(case when ''#from_date#'' = ''null'' then current_date + interval ''1 day'' - interval ''1 milliseconds'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) + interval ''1 day'' - interval ''1 milliseconds'' as upto_date\n)\n,lab_test_det as (\n\tselect\n\tdistinct on\n\t(cad.id)\n\tcad.id as covid_admission_detail_id\n\tfrom covid19_admission_detail cad \n    inner join covid19_lab_test_detail cltd on cad.id = cltd.covid_admission_detail_id \n\tleft join health_infrastructure_details hid on hid.id = cad.suggested_health_infra\n\tleft join location_hierchy_closer_det loch on loch.child_id = hid.location_id\n\tinner join paratemeter_det on cltd.lab_collection_on <= paratemeter_det.upto_date and cltd.lab_result_entry_on <= paratemeter_det.upto_date\n\twhere\t\t\n\t(case when ''#infra_id#'' = ''null'' then (loch.parent_id in (select distinct loc_id from location_det)) else cad.suggested_health_infra = cast(#infra_id# as integer) end) and  \n\tcad.admission_date <= paratemeter_det.upto_date\t\n\tand cad.health_infra_id is null and cltd.lab_result = ''POSITIVE''\n    and cad.suggested_health_infra is not null\n\torder by cad.id\n)\n\tselect\n\trow_number() over (ORDER BY cad.id) as \"Sr. No\",\n\tconcat_ws('' '', cad.first_name, cad.last_name, cad.middle_name) as \"Name\",\n\tcad.age as \"Age\",\n\tcad.gender as \"Gender\",\n\tcad.address as \"Address\",\n\tcad.occupation as \"Occupation\",\n\tcad.contact_number as \"Contact Number\",\n\td.english_name as \"District\",\n\ts.english_name as \"State\",\n\tcast(''N/A'' as text) as \"Date of arrival in India\",\n\tcad.travelled_place as \"Travel to COVID affected country (Name of country)\",\n\tcad.flight_no as \"Flight No\",\n\tcast(''N/A'' as text) as \"Seat No\",\n\tcase\n\t\twhen cad.in_contact_with_covid19_paitent is not null then cad.in_contact_with_covid19_paitent\n\t\telse ''No''\n\tend as \"H/O contact with COVID-19 case\",\n\tcad.date_of_onset_symptom as \"Date of onset of symptoms\",\n\tconcat_ws('', '' ,(case when cad.is_fever then ''Fever'' else null end) \n\t,(case when cad.is_cough then ''Cough'' else null end)\n\t,(case when cad.is_breathlessness then ''Breathlessness'' else null end)\n\t,(case when cad.is_sari then ''SARI'' else null end)\n\t) as \"Symptoms at admission\",\n\tto_char(cad.admission_date,''DD/MM/YYYY'') as \"Date of isolation\"\nfrom\n\tcovid19_admission_detail cad\ninner join lab_test_det ltd on\n\tcad.id = ltd.covid_admission_detail_id\nleft join covid19_admitted_case_daily_status cacds on\n\tcad.last_check_up_detail_id = cacds.id\nleft join location_master lm on\n\tlm.id = cad.location_id\nleft join location_level_hierarchy_master lh on\n\tlh.id = lm.location_hierarchy_id\nleft join health_infrastructure_details hid on\n\thid.id = cad.suggested_health_infra\nleft join location_master s on\n\tlh.level1 = s.id\n\tand s.state = ''ACTIVE''\n\tand s.name not ilike ''%delete%''\nleft join location_master d on\n\tlh.level3 = d.id\n\tand d.state = ''ACTIVE''\n\tand d.name not ilike ''%delete%''\norder by\n\tcad.id\n #limit_offset#", "queryId": 1602, "fieldName": "tableField", "queryUUID": "e0af9542-450c-4ce1-8d35-ae5c93c89593", "queryParams": "infra_id,limit_offset,from_date,location_id"}], "fieldsContainer": [{"index": 2, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \ncase when  prefered_language.is_enlish then get_location_hierarchy_language_wise(#location_id#, ''EN'') else \nget_location_hierarchy(#location_id#) \nend as location_id\nfrom  prefered_language", "queryIdForParam": 1696, "queryUUIDForParam": "b4826635-7fb7-463a-97e1-a35cab9ce9b6"}, {"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "infra_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Infra Id", "queryUUIDForParam": null}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'pend_pos_add', '7b02c195-0e89-4640-980e-244c99f8df08'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(312, 'Total Home Delivery (Maternal Service Delivery)', NULL, true, 'DYNAMIC', NULL, '2020-10-22 15:25:55.289', 58981, '2019-03-06 17:36:58.890', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n member_det as (\n\tselect \n    m.id,\n    r.member_id, f.location_id as loc_id,\n\tm.unique_health_id, m.family_id, \n\tm.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,\n\tto_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd,\n    EXTRACT(YEAR from age(m.dob)) as age,\n    r.haemoglobin_tested_count,\n    r.last_systolic_bp as last_systolic_bp,\n    to_char(p.delivery_date,''DD/MM/YYYY'') as delivery_date,\n    r.delivery_outcome,\n    r.live_birth,\n    r.maternal_detah\n\tfrom rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, imt_family f, rch_pregnancy_registration_det p\n\twhere r.member_id = m.id and r.delivery_location_id = l.child_id and r.pregnancy_reg_id = p.id and m.family_id = f.family_id\n\tand home_del \n\tand delivery_outcome in (''LBIRTH'',''SBIRTH'') and (delivery_out_of_state_govt is false and delivery_out_of_state_pvt is false)\n\tand l.parent_id = #location_id#\n\tand r.date_of_delivery_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by p.lmp_date\n\t#limit_offset#\n), member_det_extra as(\n\tselect \n\tmd.id,\n\tconcat(f.address1,'','',f.address2) as address,\n\tf.area_id,\n    f.caste\n\tfrom member_det md \n\tinner join imt_family f on f.family_id = md.family_id \n)\n,caste_filter as (\n\tselect md.id,list.value as caste from member_det_extra md inner join listvalue_field_value_detail list on md.caste = cast(list.id as text)\n),gravida_count as (\n\tselect rch_pregnancy_registration_det.member_id,count(*) as gravida\n\tfrom rch_pregnancy_registration_det\n\twhere rch_pregnancy_registration_det.member_id in (select id from member_det)\n\tgroup by rch_pregnancy_registration_det.member_id\n),parity_count as (\n\tselect imt_member.id,count(distinct m2.dob) as parity\n\tfrom imt_member\n\tinner join imt_member m2 on imt_member.id = m2.mother_id\n\twhere imt_member.id in (select id from member_det)\n\tgroup by imt_member.id\n), loc as (\n\tselect distinct loc_id from member_det\n), loc_det as (\nselect distinct\n\tloc.loc_id,\n    (case when ( prefered_language.is_enlish and (s.english_name is not null)) then s.english_name else s.name end) as stateName,\n    (case when ( prefered_language.is_enlish and (d.english_name is not null)) then d.english_name else d.name end) as districtName,\n    (case when ( prefered_language.is_enlish and (b.english_name is not null)) then b.english_name else b.name end) as talukaName,\n    (case when ( prefered_language.is_enlish and (p.english_name is not null)) then p.english_name else p.name end)  as facilityName,\n    (case when ( prefered_language.is_enlish and (sc.english_name is not null)) then sc.english_name else sc.name end) as subCenterName,\n    (case when ( prefered_language.is_enlish and (v.english_name is not null)) then v.english_name else v.name end) as villageName,\n    (case when ( prefered_language.is_enlish and (a.english_name is not null)) then a.english_name else a.name end) as areaName\n\tfrom loc\n    inner join prefered_language on true\n    inner join location_master lm\n    on lm.id = loc.loc_id\n    left join location_level_hierarchy_master lh\n    on lh.id = lm.location_hierarchy_id\n    left join location_master s\n    on lh.level1 = s.id and s.state = ''ACTIVE'' and s.name not ilike ''%delete%''\n    left join location_master d\n    on lh.level3 = d.id and d.state = ''ACTIVE'' and d.name not ilike ''%delete%''\n    left join location_master b\n    on lh.level4 = b.id and b.state = ''ACTIVE'' and b.name not ilike ''%delete%''\n    left join location_master p\n    on lh.level5 = p.id and p.state = ''ACTIVE'' and p.name not ilike ''%delete%''\n    left join location_master sc\n    on lh.level6 = sc.id and sc.state = ''ACTIVE'' and sc.name not ilike ''%delete%''\n    left join location_master v\n    on lh.level7 = v.id and v.state = ''ACTIVE'' and v.name not ilike ''%delete%''\n    left join location_master a\n    on lh.level8 = a.id and a.state = ''ACTIVE'' and a.name not ilike ''%delete%''\n    where lm.state = ''ACTIVE'' and lm.name not ilike ''%delete%''\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n),\nasha_areas as (\nselect\n\tdistinct area_id\nfrom\n\tmember_det_extra ),\nasha_det_temp as(\nselect\n\tasha_areas.area_id,\n\tmax(u.id) as user_id\nfrom\n\tum_user_location ul,\n\tum_user u,\n\tasha_areas\nwhere\n\tasha_areas.area_id = ul.loc_id\n\tand u.id = ul.user_id\n\tand u.state = ''ACTIVE''\n\tand ul.state = ''ACTIVE''\n\tand u.role_id = (\n\tselect\n\t\tid\n\tfrom\n\t\tum_role_master\n\twhere\n\t\tname = ''ASHA'') group by asha_areas.area_id\n),\t\nasha_det as (\nselect\n\tu.id,\n\tasha_det_temp.area_id,\n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''(''||\n\tcase\n\t\twhen u.contact_number is not null then u.contact_number || '')''\n\t\telse ''N/A'' || '')''\n\tend as asha \nfrom\n\tum_user u,\n\tasha_det_temp\nwhere\n\tu.id = asha_det_temp.user_id\n),last_service_details as (\n\tselect to_char(max(service_date),''dd-MM-yyyy'') as last_service_date ,services.member_id from rch_member_services services\n\tinner join member_det mem on mem.member_id = services.member_id\n\tgroup by services.member_id\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.districtName as \"District / Corp\",\nloc_det.talukaName as \"Taluka / zone\",\nloc_det.facilityName as \"PHC / UHC\",\nloc_det.subCenterName as \"Sub Centre\",\nm_extra.address as \"Address\",\nmember_det.name as \"Name\",\ncaste_filter.caste as \"Caste\",\nmember_det.unique_health_id as \"TeCHO+ ID\",\nmember_det.age as \"Age in Years\",\ncoalesce(gravida_count.gravida,0) as \"Gravida\",\ncoalesce(parity_count.parity,0) as \"Parity\",\nmember_det.live_birth as \"No of Live Children\",\nmember_det.lmp as \"LMP\",\nmember_det.edd as \"EDD\",\nmember_det.delivery_date as \"Date of Home Delivery\",\ncase when member_det.maternal_detah then ''Death'' else ''Live'' end as \"Maternal outcome\",\ncase when member_det.delivery_outcome = ''LBIRTH'' then ''Live'' when member_det.delivery_outcome = ''SBIRTH'' then ''Still'' else ''Death'' end  as \"Newborn outcome (live/ still/ death)\",\nservices.last_service_date as \"Last check up ANC date\",\ncoalesce(haemoglobin_tested_count,0) as \"lastHb\",\ncoalesce(last_systolic_bp,0) as \"lastBP\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Name\",\ncase when asha_det.asha is null then ''No Asha Assigned'' else asha_det.asha end as \"Asha Name\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id\nleft join gravida_count on member_det.id = gravida_count.member_id\nleft join parity_count on member_det.id = parity_count.id\nleft join member_det_extra m_extra on m_extra.id = member_det.id\nleft join caste_filter on member_det.id = caste_filter.id\nleft join fhw_det on member_det.loc_id = fhw_det.loc_id\nleft join asha_det on asha_det.area_id = m_extra.area_id\nleft join last_service_details services on services.member_id = member_det.id;","queryId":815,"fieldName":"tableField","queryUUID":"b795a342-e302-476b-9ebe-b5fe89ba98c8","queryParams":"limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}],"fieldsContainer":[{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":812,"queryUUIDForParam":"3d00a157-69aa-4e67-a985-ed61310de0f5"},{"isHidden":true,"fieldName":"from_month_year","fieldType":"text","queryUUID":null,"displayName":"From Month","queryForParam":"select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year","queryIdForParam":814,"queryUUIDForParam":"facc57ff-5e7f-45fc-97cb-72ecd021da72"},{"isHidden":true,"fieldName":"to_month_year","fieldType":"text","queryUUID":null,"displayName":"To Month","queryForParam":"select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year","queryIdForParam":813,"queryUUIDForParam":"5cb6072d-8cef-4a9c-9a1f-5539e72c5b48"}]},"isFilterOpen":false,"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'mtr_serv_del_tot_hom', '1d6e3546-9a4b-458e-813c-d85db524694b'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(613, 'Total SAM Children identified', NULL, true, 'DYNAMIC', NULL, '2020-09-02 16:06:41.770', 60512, '2020-06-29 11:25:55.803', 60512, '{"layout":"dynamicReport1","containers":{"tableContainer":[{"query":"WITH loc_det AS (\n    SELECT\n        child_id as id\n    FROM\n        location_hierchy_closer_det\n    WHERE\n       parent_id = #location_id#\n        AND \"depth\" = 1\n),\ndates AS (\n    SELECT\n        to_date(\n            CASE WHEN ''#from_date#'' = ''null'' THEN\n                NULL\n            ELSE\n                ''#from_date#''\n            END, ''MM/DD/YYYY'') AS from_date,\n        to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date\n),\nlocation_wise_analytics as (\nselect\n\tlh.parent_id as location_id,\n\tsum(ccna.sam_boys_greater_than_6_month + ccna.sam_boys_less_than_6_month + ccna.sam_girls_less_than_6_month + ccna.sam_girls_greater_than_6_month) as gross_total,\n\tsum(ccna.sam_boys_less_than_6_month) as sam_boys_less_than_6_month,\n\tsum(ccna.sam_girls_less_than_6_month) as sam_girls_less_than_6_month,\n\tsum(ccna.sam_girls_greater_than_6_month) as sam_girls_greater_than_6_month,\n\tsum(ccna.sam_boys_greater_than_6_month) as sam_boys_greater_than_6_month\nfrom\n\tchild_cmtc_nrc_analytics_location_wise_details ccna,\n    location_hierchy_closer_det lh,\n\tdates\nwhere\nlh.parent_id in (select id from loc_det) and\n\tccna.location_id = lh.child_id\n\tand ccna.month_year between dates.from_date and dates.to_date\ngroup by\n\tlh.parent_id)\nselect\n\tlm.id as hidden_location_id,\n\tlm.english_name as \"Location\",\n\tCOALESCE(gross_total, 0) as \"Gross Total\",\n\tCOALESCE(sam_boys_less_than_6_month, 0) as \"Less than 6 months Boys\",\n\tCOALESCE(sam_girls_less_than_6_month, 0) as \"Less than 6 months Girls\",\n\tCOALESCE(sam_boys_less_than_6_month + sam_girls_less_than_6_month, 0) as \"Less than 6 months Total\",\n\tCOALESCE(sam_boys_greater_than_6_month, 0) as \"More than 6 months Boys\",\n\tCOALESCE(sam_girls_greater_than_6_month, 0) as \"More than 6 months Girls\",\n\tCOALESCE(sam_girls_greater_than_6_month + sam_boys_greater_than_6_month, 0) as \"More than 6 months Total\",\n\tCOALESCE(sam_boys_less_than_6_month + sam_boys_greater_than_6_month, 0) as \"Gender wise Total Boys\",\n\tCOALESCE(round((((sam_boys_less_than_6_month + sam_boys_greater_than_6_month) * 100.0) / NULLIF((gross_total), 0)), 2),0) as \"percent_col_Gender wise Total Boys\",\n\tCOALESCE(sam_girls_less_than_6_month + sam_girls_greater_than_6_month, 0) as \"Gender wise Total Girls\",\n\tCOALESCE(round((((sam_girls_less_than_6_month + sam_girls_greater_than_6_month) * 100.0) / NULLIF((gross_total), 0)), 2),0) as \"percent_col_Gender wise Total Girls\"\nfrom\n\tloc_det ld\ninner join location_master lm on\n\tlm.id = ld.id\nleft join location_wise_analytics lwa on\n\tlwa.location_id = ld.id\nunion all\nselect\tnull,\n\t''<b>Total</b>'',\n\tCOALESCE(sum(gross_total), 0) as \"Gross Total\",\n\tCOALESCE(sum(sam_boys_less_than_6_month), 0) as \"less than 6 months Boys\",\n\tCOALESCE(sum(sam_girls_less_than_6_month), 0) as \"less than 6 months Girls\",\n\tCOALESCE(sum(sam_boys_less_than_6_month) + sum(sam_girls_less_than_6_month), 0) as \"less than 6 months Total\",\n\tCOALESCE(sum(sam_boys_greater_than_6_month), 0) as \"more than 6 months Boys\",\n\tCOALESCE(sum(sam_girls_greater_than_6_month), 0) as \"more than 6 months Girls\",\n\tCOALESCE(sum(sam_girls_greater_than_6_month) + sum(sam_boys_greater_than_6_month), 0) as \"more than 6 months Total\",\n\tCOALESCE(sum(sam_boys_less_than_6_month) + sum(sam_boys_greater_than_6_month), 0) as \"Gender wise Total Boys\",\n\tCOALESCE(round((((sum(sam_boys_less_than_6_month) + sum(sam_boys_greater_than_6_month)) * 100.0) / NULLIF((sum(gross_total)), 0)), 2), 0) as \"percent_col_Gender wise Total Boys\",\n\tCOALESCE(sum(sam_girls_less_than_6_month) + sum(sam_girls_greater_than_6_month), 0) as \"Gender wise Total Girls\",\n\tCOALESCE(round((((sum(sam_girls_less_than_6_month) + sum(sam_girls_greater_than_6_month)) * 100.0) / NULLIF((sum(gross_total)), 0)), 2), 0) as \"percent_col_Gender wise Total Girls\"\nfrom location_wise_analytics","queryId":1652,"fieldName":"tableField","queryUUID":"d598ab95-d364-45da-9a19-2d67aa3e82b7","queryParams":"from_date,to_date,location_id"}],"fieldsContainer":[{"fieldName":"date","fieldType":"onlyMonthFromTo","queryUUID":null,"displayName":"Month","isMandatory":true,"queryUUIDForParam":null,"requiredUptoLevel":1},{"fieldName":"location_id","fieldType":"location","queryUUID":null,"displayName":"Location","isMandatory":true,"fetchUptoLevel":"6","queryUUIDForParam":null,"requiredUptoLevel":1,"fetchAccordingToUserAoi":true}]},"isFilterOpen":true,"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 't_sam_ch_identify', 'd9cd3903-1bd4-41d1-9407-2f4d255668a9'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(234, 'FIPV 1 given (Yearly)', NULL, true, 'DYNAMIC', NULL, '2019-04-09 13:56:22.747', 57698, '2019-02-18 12:42:27.226', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, f.location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f\n\twhere l.child_id = c.f_ipv1_loc and m.id = c.member_id and f.family_id = m.family_id\n\tand l.parent_id = #location_id#\n\tand c.f_ipv1 is not null\n\tgroup by m.id, f.location_id, c.dob, c.f_ipv1\n\thaving  (case when extract(month from f_ipv1) > 3 \n\tthen concat(extract(year from f_ipv1), ''-'', extract(year from f_ipv1) + 1)\n\telse concat(extract(year from f_ipv1) - 1, ''-'', extract(year from f_ipv1)) end = \n\t\tcase when #financial_year# is null then \n\t\t\tcase when extract(month from current_date) > 3 \n\t\t\tthen concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)\n\t\t\telse concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end\n\t\telse ''#financial_year#'' end) \n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 568, "fieldName": "tableField", "queryUUID": "12fa5d21-4efc-4f64-81f8-46adb96618dd", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "isMandatory": false, "queryUUIDForParam": null, "requiredUptoLevel": ""}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 567, "queryUUIDForParam": "46fc2179-facf-404e-8605-38d8e6d80138"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_fipv1_yeardate', '5255ffee-e906-4bd5-8da3-ab7c1390da5c'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(574, 'Current confirmed  Suspected Sample_collecting cases (Covid2019 Hospitalwise detail )', NULL, true, 'DYNAMIC', NULL, '2020-11-05 17:13:23.244', 74840, '2020-04-07 18:52:58.648', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with location_det as (\n\tselect child_id as loc_id\n\tfrom location_hierchy_closer_det lhc\n\twhere \n\tparent_id = #location_id# \n), lab_test_det as (\n\tselect *\n\tfrom covid19_lab_test_detail ctd \n    where \n    case when ''#status#'' = ''COLLECTION_PENDING'' and lab_collection_status = ''COLLECTION_PENDING'' then true else ctd.lab_result = ''POSITIVE'' end  \n    order by covid_admission_detail_id,id\n), infra_info as (\n\tselect\n\thid.id as infra_id,\n\thid.location_id,\n\thid.name infra_name\n\tfrom health_infrastructure_details  hid\n\tinner join location_hierchy_closer_det loch on loch.child_id = hid.location_id\n\tleft join health_infrastructure_ward_details hiwd on hiwd.health_infra_id = hid.id\n\twhere (is_covid_hospital or is_covid_lab)\n    and (case when #infra_id# is null then (loch.parent_id in (select distinct loc_id from location_det)) else hid.id = cast(#infra_id# as integer) end)\n\tgroup by hid.id,hid.location_id,hid.name\n)\n,member_det as (\n\tselect\n    cad.id,\n\tconcat_ws('' '', cad.first_name, cad.last_name, cad.middle_name) as member_name,\n\tcad.age as age,\n\tcad.gender as gender,\n\tcad.address as address,\n\tcad.occupation as occupation,\n\tcad.contact_number as contact_number,\n\td.english_name as district,\n\ts.english_name as state,\n\tcast(''N/A'' as text) as date_of_arrival_in_india,\n\tcad.travelled_place as travelled_to_covid_affected_country,\n\tcad.flight_no as flight_no,\n\tcast(''N/A'' as text) as seat_no,\n\tcase\n\t\twhen cad.in_contact_with_covid19_paitent is not null then cad.in_contact_with_covid19_paitent\n\t\telse ''No''\n\tend as had_contact_with_covid19_case,\n\tto_char(cad.date_of_onset_symptom,''DD/MM/YYYY'') as date_of_onset_of_symptoms,\n\t\n\tconcat_ws('', '' ,(case when cad.is_fever then ''Fever'' else null end) \n\t,(case when cad.is_cough then ''Cough'' else null end)\n\t,(case when cad.is_breathlessness then ''Breathlessness'' else null end)\n\t,(case when cad.is_sari then ''SARI'' else null end)\n\t) as symptoms_at_admission,\n\t\n\tto_char(cad.admission_date,''DD/MM/YYYY'') as date_of_isolation,\n\t\n\tcase\n\t\twhen ltd.id is not null then ''Yes''\n\t\telse ''No''\n\tend sample_collected,\n\tltd.lab_test_number as sample_id,\n\tto_char(ltd.lab_collection_on,''DD/MM/YYYY'') as date_of_sample_collected,\n\t\n\thid_sample.name_in_english as sample_collection_center,\n\thid_tested.name_in_english as sample_tested_at,\n\thid_tested.name_in_english as lab_that_have_confirmed_the_result,\n\t\n\tconcat_ws('', '' ,(case when cad.is_hiv then ''HIV'' else null end) \n\t,(case when cad.is_heart_patient then ''Heart Patient'' else null end)\n\t,(case when cad.is_diabetes then ''Diabetes'' else null end)\n\t,(case when cad.is_copd then ''COPD'' else null end)\n\t,(case when cad.is_hypertension then ''Hypertension'' else null end)\n\t,(case when cad.is_renal_condition then ''Renal Condition'' else null end)\n\t,(case when cad.is_immunocompromized then ''Immunocompromized'' else null end)\n\t,(case when cad.is_malignancy then ''Malignancy'' else null end)\n\t,(case when cad.is_other_co_mobidity then cad.other_co_mobidity else null end)\n\t) as underlying_medical_condition,\n\t\n\tcacds.health_status as health_status,\n\tcase when cad.discharge_status is null then ''Admitted'' else cad.discharge_status end as outcome,\n\tto_char(cad.discharge_date,''DD/MM/YYYY'') as date_of_outcome,\n\tcast(''N/A'' as text) as is_patitnet_member_of_covid_19,\n\tcast(''N/A'' as text) as household_contact,\n\tcast(''N/A'' as text) as workplace_contact,\n\tcast(''N/A'' as text) as community_contact,\n\tcast(''N/A'' as text) as health_care_contact,\n\tcast(''N/A'' as text) as co_traveller\n\tfrom infra_info info\n    left join health_infrastructure_ward_details hiwd on hiwd.health_infra_id = info.infra_id \n\tleft join covid19_admission_detail cad on cad.current_ward_id = hiwd.id\n\tleft join lab_test_det ltd on cad.id = ltd.covid_admission_detail_id    \n\tleft join covid19_admitted_case_daily_status cacds on cad.last_check_up_detail_id = cacds.id\n\tleft join location_master lm on lm.id = cad.location_id\n\tleft join location_level_hierarchy_master lh on\tlh.id = lm.location_hierarchy_id\n\tleft join health_infrastructure_details hid_sample on hid_sample.id = ltd.sample_health_infra\n\tleft join health_infrastructure_details hid_tested on hid_tested.id = ltd.sample_health_infra_send_to\n\tleft join location_master s on lh.level1 = s.id and s.state = ''ACTIVE''\n\tand s.name not ilike ''%delete%''\tleft join location_master d on\n\tlh.level3 = d.id and d.state = ''ACTIVE''\n\tand d.name not ilike ''%delete%''\t\n\twhere ((case when (''#status#'' = ''CONFORMED'' or ''#status#'' = ''SUSPECT'' ) and cad.status = ''#status#'' then true else false end)\t\n        or (case when ''#status#'' = ''COLLECTION_PENDING'' and lab_collection_status = ''#status#'' then true else false end))\n     and cad.health_infra_id is not null\n     #limit_offset#\n)\nselect\nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr. No\",\nmember_name as \"Name\",\nage as \"Age\",\ngender as \"Gender\",\naddress as \"Address\",\noccupation as \"Occupation\",\ncontact_number as \"Contact Number\",\ndistrict as \"District\",\nstate as \"State\",\ndate_of_arrival_in_india as \"Date of arrival in India\",\ntravelled_to_covid_affected_country as \"Travel to COVID affected country (Name of country)\",\nflight_no as \"Flight No\",\nseat_no as \"Seat No\",\nhad_contact_with_covid19_case as \"H/O contact with COVID-19 case\",\ndate_of_onset_of_symptoms as \"Date of onset of symptoms\",\nsymptoms_at_admission as \"Symptoms at admission\",\ndate_of_isolation as \"Date of isolation\",\nsample_collected as \"Sample collected (yes/No)\",\nsample_id as \"Sample ID\",\ndate_of_sample_collected as \"Date of sample collection\",\nsample_collection_center \"Sample collection centre\",\nsample_tested_at as \"Sample tested at\",\nlab_that_have_confirmed_the_result as \"Lab that confirmed the result\",\nunderlying_medical_condition as \"Underlying medical condition\",\nhealth_status as \"Health Status\",\noutcome as \"Outcome (Discharged/ Death/ Admitted)\",\ndate_of_outcome as \"Date of outcome\",\nis_patitnet_member_of_covid_19 as \"is patient member of covid 19\",\nhousehold_contact as \"house hold contact\",\nworkplace_contact as \"workplace contact\",\ncommunity_contact as \"community contact\",\nhealth_care_contact as \"health care contact\",\nco_traveller as \"co traveller\"\nfrom member_det","queryId":1559,"fieldName":"tableField","queryUUID":"656ab5a8-9a59-4f33-85fd-914065c3b627","queryParams":"infra_id,limit_offset,location_id,status"}],"fieldsContainer":[{"index":2,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"Location Id","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \ncase when  prefered_language.is_enlish then get_location_hierarchy_language_wise(#location_id#, ''EN'') else \nget_location_hierarchy(#location_id#) \nend as location_id\nfrom  prefered_language","queryIdForParam":1694,"queryUUIDForParam":"9e1eb3b3-639f-4cfa-9599-17c0b2ab6543"},{"index":1,"isHidden":true,"fieldName":"status","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"Status","queryForParam":"select case when ''#status#'' = ''CONFORMED'' then ''CONFIRMED'' else ''#status#'' end as status","queryIdForParam":1692,"queryUUIDForParam":"041530b8-11cd-4429-87c0-934433af5d2c"},{"index":0,"isHidden":true,"fieldName":"infra_id","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"Infra Id","queryUUIDForParam":null}]},"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'confirm_covid_case_d', '9244b066-0516-49fc-9ae9-1e5e1d4e4fa4'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(434, 'Inst Del (Gvt + Pvt)(Service provide to pregnant women with lmp)', NULL, true, 'DYNAMIC', NULL, '2020-08-03 16:48:20.100', 63746, '2019-05-28 16:35:10.599', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Inst Del (Gvt + Pvt)(Service provide to pregnant women with lmp)\nwith parameters as (\nselect CAST(#location_id# AS INTEGER) as location_id,\nto_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_month_year,\nto_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') as to_month_year,\nCAST(''#demographic_location_id#'' AS TEXT) as demographic_group,\n(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language\n),\nmember_det as (\n\tselect r.member_id, r.native_location_id as loc_id,\n\tr.unique_health_id, r.family_id, r.member_name as name,\n\tto_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd\n\tfrom rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p\n\twhere r.native_location_id  = l.child_id\n\tand l.parent_id = p.location_id\n\tand (((institutional_del or delivery_108)and delivery_outcome in (''LBIRTH'',''SBIRTH'')))\n\tand r.lmp_month_year between p.from_month_year and p.to_month_year\n\tand (p.demographic_group=''null'' or l.child_loc_demographic_type in ( select distinct demographic_type from location_demographic_type_master \n\twhere demographic_group = p.demographic_group)) \n\torder by r.lmp_date\n\t#limit_offset#\n),  loc_det as (\n\tselect loc.loc_id, \n        string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p\n\twhere lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',\n\tcase when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 1149, "fieldName": "tableField", "queryUUID": "87f2f2b0-9e19-4eff-b8ba-980b351709aa", "queryParams": "limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 1147, "queryUUIDForParam": "766262c8-3414-4e4c-a077-9a2abef0c6c1"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 1146, "queryUUIDForParam": "6c1c0002-1519-4946-a61b-7c6947c84867"}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1148, "queryUUIDForParam": "ca52d81b-cb0d-4819-9582-c75575c758b7"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mtr_instreg_with_lmp', '4c008411-3313-4bb4-8ec0-472b443f1275'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(614, 'Child with Improved Nutritional Status on Discharge From Facility', NULL, true, 'DYNAMIC', NULL, '2020-09-02 16:07:08.104', 60512, '2020-06-29 11:28:50.733', 60512, '{"layout":"dynamicReport1","containers":{"tableContainer":[{"query":"with prefered_language as(\n\tselect case when prefered_language = ''EN'' then true else false end as is_english \n\tfrom um_user\n\twhere id = #loggedInUserId#\n),location_detail as (\n\tselect child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1\n),dates as (\n\tselect to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date,\n\tto_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date\n),status_counts as (\n\tselect location_detail.child_id,\n\tcount(*) filter (where fsam_discharge_id is not null) as total_discharged,\n\tcount(*) filter (where fsam_discharge_status = ''SAM_TO_SAM'') as sam_to_sam,\n\tcount(*) filter (where fsam_discharge_status = ''SAM_TO_MAM'') as sam_to_mam,\n\tcount(*) filter (where fsam_discharge_status = ''SAM_TO_NORMAL'') as sam_to_normal\n\tfrom location_detail\n\tinner join location_hierchy_closer_det on location_detail.child_id = location_hierchy_closer_det.parent_id\n\tinner join child_cmtc_nrc_analytics_details on location_hierchy_closer_det.child_id = child_cmtc_nrc_analytics_details.sam_screening_location_id\n\tinner join dates on child_cmtc_nrc_analytics_details.fsam_admission_date between dates.from_date and dates.to_date\n\tgroup by location_detail.child_id\n),details as (\n\tselect row_number() over() as sr_no,\n\tlocation_master.id as hidden_location_id,\n\tcase when prefered_language.is_english and location_master.english_name is not null then location_master.english_name else location_master.name end as loc,\n\tcoalesce(status_counts.total_discharged) as total_discharged,\n\tcoalesce(status_counts.sam_to_sam,0) as sam_to_sam,\n\tcoalesce(status_counts.sam_to_mam,0) as sam_to_mam,\n\tcoalesce(status_counts.sam_to_normal,0) as sam_to_normal\n\tfrom location_detail\n\tinner join location_master on location_master.id = location_detail.child_id\n\tleft join status_counts on location_detail.child_id = status_counts.child_id\n    cross join prefered_language\n)\nselect details.loc as \"Location\",\ndetails.hidden_location_id,\ndetails.sam_to_sam as \"SAM-SAM\",\n\tcase when details.sam_to_sam = 0 or details.sam_to_sam is null or details.total_discharged = 0 or details.total_discharged is null then 0 else\n\tround(details.sam_to_sam * 100.0/details.total_discharged) end as \"percent_col_SAM-SAM\",\ndetails.sam_to_mam as \"SAM-MAM\",\n\tcase when details.sam_to_mam = 0 or details.sam_to_mam is null or details.total_discharged = 0 or details.total_discharged is null then 0 else\n\tround(details.sam_to_mam * 100.0/details.total_discharged) end as \"percent_col_SAM-MAM\",\ndetails.sam_to_normal as \"SAM-Normal\",\n\tcase when details.sam_to_normal = 0 or details.sam_to_normal is null or details.total_discharged = 0 or details.total_discharged is null then 0 else\n\tround(details.sam_to_normal * 100.0/details.total_discharged) end as \"percent_col_SAM-Normal\"\nfrom details\nunion all\nselect ''<b>Total<b>'',\n#location_id#,\nsum(details.sam_to_sam),\n\tcase when (sum(details.sam_to_sam) = 0 or sum(details.sam_to_sam) is null or sum(details.total_discharged) = 0 or sum(details.total_discharged) is null) then 0 else \n\tround(sum(details.sam_to_sam)*100.0/sum(details.total_discharged),2) end,\nsum(details.sam_to_mam),\n\tcase when (sum(details.sam_to_mam) = 0 or sum(details.sam_to_mam) is null or sum(details.total_discharged) = 0 or sum(details.total_discharged) is null) then 0 else \n\tround(sum(details.sam_to_mam)*100.0/sum(details.total_discharged),2) end,\nsum(details.sam_to_normal),\n\tcase when (sum(details.sam_to_normal) = 0 or sum(details.sam_to_normal) is null or sum(details.total_discharged) = 0 or sum(details.total_discharged) is null) then 0 else \n\tround(sum(details.sam_to_normal)*100.0/sum(details.total_discharged),2) end\nfrom details;","queryId":1653,"fieldName":"tableField","queryUUID":"2fbda17f-3891-4d48-92f7-ef39f00f11f9","queryParams":"from_date,to_date,loggedInUserId,location_id"}],"fieldsContainer":[{"fieldName":"date","fieldType":"onlyMonthFromTo","queryUUID":null,"displayName":"Month","isMandatory":true,"queryUUIDForParam":null,"requiredUptoLevel":1},{"fieldName":"location_id","fieldType":"location","queryUUID":null,"displayName":"Location","isMandatory":true,"fetchUptoLevel":"6","queryUUIDForParam":null,"requiredUptoLevel":1,"fetchAccordingToUserAoi":true}]},"isFilterOpen":true,"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'improved_nutritional', 'cc3c65b3-91ae-43ac-b0c7-0fbe038022e3'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(664, 'Dashboard RCH Indicators', NULL, true, 'DYNAMIC', NULL, '2020-12-28 14:47:16.019', 74841, '2020-10-12 14:10:20.918', 60512, '{"layout":"dynamicReport1","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"queryForParam":"","isMandatory":true,"requiredUptoLevel":1,"isHidden":false,"fieldName":"financial_year","displayName":"Year","fieldType":"comboForReport","isQuery":true,"availableOptions":[],"query":"select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as year \nfrom generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by year desc;","queryIdForParam":"","queryId":1783,"queryParams":null,"queryUUID":"8fabdcd8-38ab-4fcb-9941-a00871323639"}],"tableContainer":[{"fieldName":"tableField","query":"with prefered_language as (\nselect \tcase \n\t\twhen report_preferred_language = ''EN'' then true  \n\t\telse false \n\tend as is_enlish\nfrom um_user where id = null\n), params as (\n\t\tselect  to_date(''04-01-'' || SUBSTRING(case when ''#financial_year#'' != ''null'' then ''#financial_year#'' else null end, 0, 5), ''MM/DD/YYYY'') as from_date,\n\t\tto_date(''03-31-'' || SUBSTRING(case when ''#financial_year#'' != ''null'' then ''#financial_year#'' else null end, 6, 8), ''MM/DD/YYYY'') as to_date\n),ldp as (\n\tselect child_id, case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name\n\t\t\t\telse location_master.name end\n\tfrom location_hierchy_closer_det,location_master\n        left join prefered_language on true\n        where parent_id =  2\n\tand depth = 2 and location_master.id = location_hierchy_closer_det.child_id\n),expected_target as (\n\tselect ldp.child_id,\n\tlocation_wise_expected_target.expected_mother_reg as expected_mother_reg,\n\tlocation_wise_expected_target.expected_delivery_reg as expected_delivery_reg,\n\tlocation_wise_expected_target.ela_dpt_opv_mes_vita_1dose as ela_dpt_opv_mes_vita_1dose,\n    ((75*location_wise_expected_target.expected_mother_reg)/100000) as expected_mmr,\n\t((30*location_wise_expected_target.expected_mother_reg)/1000) as expected_imr\n\tfrom ldp\n\tinner join location_wise_expected_target on ldp.child_id = location_wise_expected_target.location_id\n\tand location_wise_expected_target.financial_year = ''#financial_year#''\n    and location_wise_expected_target.state = ''LOCKED''\n), rch_service_provided_during_year_det as (\n\tselect \n\tlocation_id\n\t,coalesce(sum(stat.anc_reg),0) as anc_reg\n\t,coalesce(sum(stat.early_anc),0) as early_anc\n\t,coalesce(sum(stat.no_of_delivery),0) as no_of_delivery\n\t,coalesce(sum(stat.mother_death),0) as mother_death\n\t,coalesce(sum(stat.ppiucd),0) as ppiucd\n\tfrom rch_service_provided_during_year stat \n\tinner join params on true\n\twhere stat.month_year between params.from_date and params.to_date\n\tgroup by stat.location_id\n), child_services_given_analytics_t as (\n\tselect \n\tlocation_id,\n\tcoalesce(sum(infant_death),0) as infant_death,\n\tcoalesce(sum(live_births_since_april_1),0) as live_birth_delivery,\n\tcoalesce(sum(weighed),0) as weighed,\n\tcoalesce(sum(weighed_less_than_2_5),0) as weighed_less_than_2_5,\n\tcoalesce(sum(fully_immunized),0) as fully_immunized\n\tfrom child_services_given_analytics\n\tinner join params on true\n\twhere month_year between params.from_date and params.to_date\n\tgroup by location_id\n), rch_delivery_date_base_location_wise_data_point_t as (\n\tselect  \n\tlocation_id,\n\tsum(inst_del) as inst_del,\n\tsum(sc+phc+chc+sdh+uhc+gia+chiranjivi+mdh+dh+delivery_108) as phi,\n\tsum(breast_feeding) as breast_feeding,\n\tsum(del_less_eq_34) as del_less_eq_34,\n\tsum(cortico_steroid) as cortico_steroid\n\tfrom rch_delivery_date_base_location_wise_data_point\n\tinner join params on true\n\twhere month_year between params.from_date and params.to_date\n\tgroup by location_id\n),sex_ration as (\n\tselect CAST(delivery_location_id as integer) as loc_id,\n\tsum(case when gender in (''M'',''F'') then 1 else 0 end) as total,\n\tsum(case when gender = ''M'' then 1 else 0 end) as total_male,\n\tsum(case when gender = ''F'' then 1 else 0 end) as total_female\n\tfrom rch_child_analytics_details analytics\n\tleft join params on true\n\twhere member_id is not null and dob between params.from_date and params.to_date\n\tgroup by delivery_location_id\n), rch_pmsma_service_statatics_t as (\n\tselect \n\tlocation_id,\n\tsum(high_risk_mother_2nd_trimester) as high_risk_mother_2nd_trimester,\n\tsum(total_beneficiary_under_pmsma) as total_beneficiary_under_pmsma\n\tfrom rch_pmsma_service_statatics\n\tinner join params on month_year between from_date and to_date\n\tgroup by location_id\n), anemia as (\n    select \n    rprd.native_location_id as loc_id,\n    count(1) filter(where hb between 0.1 and 6.99) as total_severe_anemic,\n    count(1) filter(where hb between 0.1 and 10.99) as total_anemic,\n    count(1) filter(where hb between 0.1 and 6.99 and (iron_def_anemia_inj is not null or blood_transfusion)) as total_severe_anemic_treated\n    from rch_pregnancy_analytics_details rprd, params\n    where cast(date_trunc(''month'', rprd.reg_service_date) as date) between params.from_date and params.to_date\n    group by rprd.native_location_id\n), sam_child as (\n\tselect  rcad.loc_id,\n\tcount(1) as total_0_to_5_child\n\tfrom rch_child_analytics_details rcad  \n\tinner join params on true\n\twhere cast(dob as date) between cast((case when params.to_date > current_date then current_date else params.to_date end) - interval ''5 years'' as date) and cast(params.from_date as date)\n\tand rcad.member_state != ''DEAD''\n\tand rcad.death_date is null\n\tand rcad.member_id is not null\n\tgroup by rcad.loc_id\n), screening_sam as (\n\tselect\n\tlocation_id,\n\tsum(analytics.childer_screen_by_anm) as total_screened_for_malnutition,\n \tsum(analytics.sam_child) as total_sam_child\n\tfrom child_cmtc_nrc_analytics_location_wise_details analytics\n\tinner join params on true\n\twhere analytics.month_year between params.from_date and params.to_date\n\tgroup by location_id\n),location_wise_det as (\n\tselect lhcd.parent_id as id\n\t,coalesce(sum(stat.anc_reg),0) as anc_reg\n\t,coalesce(sum(stat.early_anc),0) as early_anc\n\t,coalesce(sum(stat.no_of_delivery),0) as no_of_del\n\t,coalesce(sum(stat.mother_death),0) as maternal_detah\n\t,coalesce(sum(rdwp.inst_del),0) as inst_del\n\t,coalesce(sum(rdwp.phi) ,0) as phi_del\n\t,coalesce(sum(rdwp.breast_feeding) ,0) as breast_feeding,\n\tcoalesce(sum(csga.infant_death),0) as infant_death,\n\tcoalesce(sum(csga.live_birth_delivery),0) as live_birth,\n\tcoalesce(sum(csga.weighed),0) as weighed,\n\tcoalesce(sum(csga.weighed_less_than_2_5),0) as weighed_less_than_2_5,\n\tcoalesce(sum(csga.fully_immunized),0) as fully_immunized,\n\tcoalesce(sum(total_male),0) as total_male,\n\tcoalesce(sum(total_female),0) as total_female,\n\tcoalesce(sum(high_risk_mother_2nd_trimester),0) as high_risk_mother_2nd_trimester,\n\tcoalesce(sum(total_beneficiary_under_pmsma),0) as total_beneficiary_under_pmsma,\n\tcoalesce(sum(rdwp.del_less_eq_34),0) as del_less_eq_34,\n\tcoalesce(sum(rdwp.cortico_steroid),0) as cortico_steroid,\n\tcoalesce(sum(total_anemic),0) as total_anemic,\n\tcoalesce(sum(total_severe_anemic),0) as total_severe_anemic,\n\tcoalesce(sum(total_severe_anemic_treated),0) as total_severe_anemic_treated,\n\tcoalesce(sum(total_0_to_5_child),0) as total_0_to_5_child,\n\tcoalesce(sum(total_sam_child),0) as total_sam_child,\n\tcoalesce(sum(total_screened_for_malnutition),0) as total_screened_for_malnutition,\n\tcoalesce(sum(stat.ppiucd),0) as ppiucd\n\tfrom location_hierchy_closer_det lhcd \n\tinner join ldp on lhcd.parent_id = ldp.child_id\n\tinner join params on true\n\tleft join rch_service_provided_during_year_det stat on lhcd.child_id = stat.location_id\n\tleft join child_services_given_analytics_t csga on csga.location_id = lhcd.child_id \n\tleft join rch_delivery_date_base_location_wise_data_point_t rdwp on rdwp.location_id = lhcd.child_id\n\tleft join sex_ration on sex_ration.loc_id = lhcd.child_id\n\tleft join rch_pmsma_service_statatics_t on rch_pmsma_service_statatics_t.location_id = lhcd.child_id\n\tleft join anemia on anemia.loc_id = lhcd.child_id\n\tleft join sam_child on sam_child.loc_id = lhcd.child_id\n\tleft join screening_sam on screening_sam.location_id = lhcd.child_id\n\tgroup by lhcd.parent_id\n), percentage_det as (\n\tselect id as loc_id,\n\tcase when expected_mother_reg is null then ''Not available'' else cast(expected_mother_reg as text) end as expected_mother_reg,\n\tcase when expected_mother_reg is null or expected_mother_reg = 0 then 0 else round(anc_reg*100.0/expected_mother_reg,2) end as per_anc_reg,\n\tcase when ela_dpt_opv_mes_vita_1dose is null then ''Not available'' else cast(ela_dpt_opv_mes_vita_1dose as text) end as expected_fully_immu,\n\tcase when anc_reg = 0 then 0 else round(early_anc*100.0/anc_reg ,2) end as per_early_anc,\n\tcase when expected_delivery_reg is null then ''Not available'' else cast(expected_delivery_reg as text) end as expected_delivery_reg,\n\tcase when expected_delivery_reg is null then 0 else round(no_of_del*100.0/expected_delivery_reg,2) end as per_no_of_del,\n\tcase when inst_del = 0 then 0 else round(phi_del*100.0/inst_del,2) end as per_phi_del,\n\tcase when inst_del = 0 then 0 else round(breast_feeding*100.0/inst_del,2) end as per_breast_feeding,\n\tcase when expected_mmr is null then ''Not available'' else cast(expected_mmr as text) end as expected_mmr,\n\tcase when expected_mmr = 0 then 0 else round(maternal_detah*100.0/expected_mmr ,2) end as per_maternal_death,\n\tcase when expected_imr is null then ''Not available'' else cast(expected_imr as text) end as expected_imr,\n\tcase when expected_imr = 0 then 0 else round(infant_death*100.0/expected_imr ,2) end as per_imr,\n\tcase when weighed = 0 then 0 else round(weighed_less_than_2_5*100.0/weighed ,2) end as per_lbw,\n\tcase when ela_dpt_opv_mes_vita_1dose is null then 0 else round(fully_immunized*100.0/ela_dpt_opv_mes_vita_1dose,2) end as per_fully_immu,\n\tcase when high_risk_mother_2nd_trimester = 0 then 0 else round(total_beneficiary_under_pmsma*100.0/high_risk_mother_2nd_trimester ,2) end as per_total_beneficiary_under_pmsma,\n\tcase when total_male = 0 then 0 else round(total_female*1000.0/total_male ,2) end as per_sex_ratio,\n\tcase when del_less_eq_34 = 0 then 0 else round(cortico_steroid*100.0/del_less_eq_34 ,2) end as per_cortico_steroid,\n\tcase when phi_del = 0 then 0 else round(ppiucd*100.0/phi_del ,2) end as per_ppiucd,\n\tcase when anc_reg = 0 then 0 else round(total_anemic*100.0/anc_reg ,2) end as per_total_anemic,\n\tcase when total_anemic = 0 then 0 else round(total_severe_anemic*100.0/total_anemic ,2) end as per_total_sever_anemic,\n\tcase when total_0_to_5_child = 0 then 0 else round(total_screened_for_malnutition*100.0/total_0_to_5_child ,2) end as per_total_anemic_malnutrition_treated,\n\tcase when total_screened_for_malnutition = 0 then 0 else round(total_sam_child*100.0/total_screened_for_malnutition ,2) end as per_total_sam_malnutrition,\n\tcase when total_severe_anemic = 0 then 0 else round(total_severe_anemic_treated*100.0/total_severe_anemic ,2) end as per_total_anemic_treated\n\tfrom location_wise_det lwd\n\tleft join expected_target on lwd.id = expected_target.child_id\n),  rank_det as (\n\tselect *,\n\tDENSE_RANK () OVER (\n\t\tORDER BY per_anc_reg desc\n\t) as anc_reg_rank,\n\tDENSE_RANK () OVER (\n\t\tORDER BY per_early_anc desc\n\t) as early_anc_rank,\n\tDENSE_RANK () OVER (\n\t\tORDER BY per_no_of_del desc\n\t) as no_of_del_rank,\n\tDENSE_RANK () OVER (\n\t\tORDER BY per_maternal_death\n\t) as maternal_detah_rank,\n\tDENSE_RANK () OVER (\n\t\tORDER BY per_phi_del desc\n\t) as phi_del_rank,\n\tDENSE_RANK () OVER (\n\t\tORDER BY per_breast_feeding desc\n\t) as breast_feeding_rank,\n\tDENSE_RANK () OVER (\n\t\tORDER BY per_imr\n\t) as imr_rank,\n\tDENSE_RANK () OVER (\n\t\tORDER BY per_lbw \n\t) as lbw_rank,\n\tDENSE_RANK () OVER (\n\t\tORDER BY per_fully_immu desc\n\t) as fully_immu_rank,\n\tDENSE_RANK () OVER (\n\t\tORDER BY per_sex_ratio desc\n\t) as sex_ratio_rank,\n\tDENSE_RANK () OVER (\n\t\tORDER BY per_total_beneficiary_under_pmsma\n\t) as pmsma_rank,\n\tDENSE_RANK () OVER (\n\t\tORDER BY per_cortico_steroid\n\t) as cortico_steroid_rank,\n\tDENSE_RANK () OVER (\n\t\tORDER BY per_ppiucd\n\t) as ppiucd_rank,\n\tDENSE_RANK () OVER (\n\t\tORDER BY per_total_anemic\n\t) as total_anemic_rank,\n\tDENSE_RANK () OVER (\n\t\tORDER BY per_total_anemic_malnutrition_treated\n\t) as total_anemic_malnutrition_rank,\n\tDENSE_RANK () OVER (\n\t\tORDER BY per_total_sam_malnutrition desc\n\t) as per_total_sam_malnutrition_rank \n\tfrom percentage_det\n),\ns as (\n\tselect ldp.name,lwd.*,rd.* from ldp\n\tleft join location_wise_det lwd on ldp.child_id = lwd.id\n\tleft join rank_det rd on rd.loc_id = lwd.id\n\twhere ldp.child_id = lwd.id\n\torder by ldp.name\n)\nselect row_number() over() as \"Sr. no\"\n,id as hidden_location_id\n,name as  \"Location\"\n,expected_mother_reg as \"Pro-rata target for ANC\"\n,anc_reg as \"ANC Reg.\"\n,per_anc_reg as \"% of ANC\"\n,anc_reg_rank  as \"Rank (ANC reg.)\"\n,early_anc as \"Early ANC\"\n,per_early_anc as \"% Early ANC against ANC reg.\"\n,early_anc_rank  as \"Rank (Early ANC)\"\n,expected_delivery_reg as \"Pro-rata target for Delivery\"\n,no_of_del as \"Delivery Reg.\"\n,per_no_of_del as \"% Delivery reg against pro-rata target\"\n,no_of_del_rank as \"Rank (Del Reg.)\"\n,inst_del as \"Institutional Deliveries\"\n,phi_del as \"PHI Deliveries\"\n,per_phi_del as \"% PHI del against total Institutional Deliveries\"\n,phi_del_rank as \"Rank ( PHI del)\"\n,breast_feeding as \"Early Breastfeeding\"\n,per_breast_feeding as \"% of Early Breastfeeding  against total  Institutional Deliveries\"\n,breast_feeding_rank as \"Rank (Early BF)\"\n,maternal_detah as \"Maternal deaths\"\n,expected_mmr as \"Estimated Maternal deaths ( Calc MMR (75) * estimated Live births/100000)\"\n,per_maternal_death as \"% Reported maternal deaths against estimated deaths\"\n,maternal_detah_rank as \"Rank ( Maternal deaths reported against est. deaths)\"\n,high_risk_mother_2nd_trimester as \"2nd and 3rd trimester High risk mother reg. in TeCHO+\"\n,total_beneficiary_under_pmsma as \"2nd and 3rd trimester High risk mother given service under PMSMA\"\n,per_total_beneficiary_under_pmsma as \"% High Risk mother examined during PMSMA\"\n,pmsma_rank as \"Rank ( High risk mother examined at PMSMA)\"\n,infant_death as \"No. of Infant deaths\"\n,expected_imr as \"Est. Infant deaths (Calc IMR (30) * estimated Live births/1000)\"\n,per_imr as \"% Infant Deaths reported estimated deaths\"\n,imr_rank as \"Rank ( Infant deaths)\"\n,del_less_eq_34 as \"Pre-term deliveries\" \n,cortico_steroid as \"Antenatal Corticosteriod Injection given in case of preterm deliveries\"\n,per_cortico_steroid as \"% Antenatal Corticosteriod Injection in case of preterm deliveries\"\n,cortico_steroid_rank as \"Rank ( ANC inj. in case of preterm del)\"\n,live_birth as \"Live Birth\"\n,weighed as \"Child weighed\"\n,weighed_less_than_2_5 as \"Low Birth Weight ( less than 2.5 kg)\"\n,per_lbw as \"% Low birth weight babies\"\n,lbw_rank as \"Rank ( LBW)\"\n,expected_fully_immu as \"Pro-rata Target for Full Immunization\"\n,fully_immunized as \"Full Immunization ach.\"\n,per_fully_immu as \"% Full Immunization against pro-rata target\"\n,fully_immu_rank as \"Rank ( Full Immunization)\"\n,total_male as \"Male (Live Birth)\"\n,total_female as \"Female (Live Birth)\"\n,per_sex_ratio as \"Sex ratio at birth\"\n,sex_ratio_rank as \"Rank (Sex ratio)\"\n,ppiucd as \"PPIUCD inserted for PHI Del\"\n,per_ppiucd as \"%PPIUCD against PHI deliveries\"\n,ppiucd_rank as \"Rank ( PPIUCD)\"\n,total_0_to_5_child as \"0 to 5 years child registered\"\n,total_screened_for_malnutition as \"Child screening for malnutrition\"\n,per_total_anemic_malnutrition_treated as \"% Child screening for malnutrition\"\n,total_anemic_malnutrition_rank as \"Rank ( Child screening)\"\n,total_sam_child as \"SAM Identified\"\n,per_total_sam_malnutrition as \"% of SAM identified against child screened\"\n,per_total_sam_malnutrition_rank as \"Rank ( SAM)\"\n,total_anemic as \"Total Anemic Mothers\"\n,per_total_anemic as \"% Anaemic Pregnant Mothers (NotePz cal. % Anemia against ANC reg.)\"\n,total_anemic_rank as \"Rank ( Anemic Mother)\"\n,total_severe_anemic as \"Severe Anemia Identified\"\n,per_total_sever_anemic as \"% Severe Anaemic Mother Identified (Note- Plz cal sever anemia against total anemia reg.)\"\n,total_severe_anemic_treated as \"Severe Anemia treated (Plz calc FCM/iron sucrose or/and blood transfusion given to severe anemia)\"\n,per_total_anemic_treated as \"% Severe Anaemic Mother treated against identified ( Note Plz calc FCM/iron sucrose or/and blood transfusion given to severe anemia against total severe anemia)\"\nfrom s","queryId":1784,"queryUUID":"fa80e464-f55b-4b02-be9a-a6a53283c413","queryParams":"financial_year"}],"tableFieldContainer":[]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"isLandscape":false,"numberOfRecordsPerPage":20,"numberOfColumnPerPage":10}', 'dash_rch_indicator', 'd3e14515-7ebe-41ca-a736-b8761a25a08f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(241, 'Fully Immunized Children (Yearly)', NULL, true, 'DYNAMIC', NULL, '2019-10-10 18:08:13.234', 1, '2019-02-18 13:36:15.551', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\nchild_det as (\n\tselect m.id, c.native_loc_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.native_loc_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.fully_immunization_in_number_of_month <= 12\n\t\tgroup by m.id, c.native_loc_id, c.dob, full_immunization_date\n\thaving case when extract(month from full_immunization_date) > 3 \n\tthen concat(extract(year from full_immunization_date), ''-'', extract(year from full_immunization_date) + 1)\n\telse concat(extract(year from full_immunization_date) - 1, ''-'', extract(year from full_immunization_date)) end = \n\t\tcase when #financial_year# is null then \n\t\t\tcase when extract(month from current_date) > 3 \n\t\t\tthen concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)\n\t\t\telse concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end\n\t\telse ''#financial_year#'' end\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 587, "fieldName": "tableField", "queryUUID": "74528c2a-ae89-4971-89eb-8b6423a2a88b", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 586, "queryUUIDForParam": "2df97650-8703-4d39-a5b6-aa420a0becfe"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_fullyimm_yeardate', '18e6170d-b9e4-4068-b093-ccffb3fd09d8'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(136, 'Dummy Report', NULL, true, 'DYNAMIC', NULL, '2019-02-08 14:58:13.168', 60512, '2019-01-30 11:12:58.357', 60512, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "select\nim.first_name || '' '' || im.middle_name || '' '' || im.last_name as \"Child Name\",\nu.first_name || '' '' || u.middle_name || '' '' || u.last_name as \"User name\"\nfrom imt_member im\ninner join child_cmtc_nrc_screening_detail screening on screening.child_id = im.id\ninner join um_user u on u.id = screening.created_by\nwhere screening.screening_center is null and screening.admission_id is not null;", "queryId": 215, "fieldName": "tableField", "queryUUID": "fc504bb4-5658-4404-8327-fb7c2f7ed5d3", "queryParams": null}], "fieldsContainer": []}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": false, "isPrintOption": false, "locationLevel": ""}', 'dummy', 'e36d17b7-7b5a-4130-a9b4-bdc6b49a8f23'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(290, 'ANC(Work Progress - Institutions)', NULL, true, 'DYNAMIC', NULL, '2019-11-20 14:05:12.713', 64189, '2019-03-04 11:54:10.884', 75398, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\ndates as(\nselect\n\tto_date (\n\tcase\n\t\twhen ''#from_date#'' = ''null'' then null\n\t\telse ''#from_date#''\n\tend,\n\t''MM/DD/YYYY'') as from_date ,\n\tto_date (\n\tcase\n\t\twhen ''#to_date#'' = ''null'' then null\n\t\telse ''#to_date#''\n\tend,\n\t''MM/DD/YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as too_date ) ,\nmember_det as(\nselect\n\timt_member.id,\n\timt_member.unique_health_id,\n\tconcat(imt_member.first_name, ''  '', imt_member.middle_name, ''  '', imt_member.last_name) as \"Member name\",\n\timt_member.mobile_number,\n\timt_family.location_id as loc_id,\n\timt_family.area_id as area_id\nfrom\n\thealth_infrastructure_details infra\ninner join rch_anc_master ram on\n\tinfra.id = ram.health_infrastructure_id\ninner join imt_member on\n\timt_member.id = ram.member_id\ninner join imt_family on\n\timt_member.family_id = imt_family.family_id\ninner join dates on\n\tram.created_on between dates.from_date and dates.too_date\nwhere\n\tinfra.location_id = #location_id#\n\tand ram.is_from_web = true\n\tand infra.id = #health_infra_id# ) ,\nloc as (\nselect\n\tdistinct loc_id\nfrom\n\tmember_det ),\nloc_det as (\nselect\n\tloc.loc_id,\n\tstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \nfrom\n\tloc,\n\tlocation_master l1,\n\tlocation_hierchy_closer_det lhcd,\n\tlocation_master l2,\n        prefered_language\nwhere\n\tl1.id = loc.loc_id\n\tand lhcd.child_id = l1.id\n\tand l2.id = lhcd.parent_id\ngroup by\n\tloc.loc_id ),\nfhw_det as (\nselect\n\tloc.loc_id,\n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' || ''Contact : '' ||\n\tcase\n\t\twhen u.contact_number is not null then u.contact_number\n\t\telse ''N/A''\n\tend as fhw\nfrom\n\tum_user_location ul,\n\tum_user u,\n\tloc\nwhere\n\tloc.loc_id = ul.loc_id\n\tand u.id = ul.user_id\n\tand u.state = ''ACTIVE''\n\tand ul.state = ''ACTIVE''\n\tand u.role_id = (\n\tselect\n\t\tid\n\tfrom\n\t\tum_role_master\n\twhere\n\t\tname = ''FHW'')\ngroup by\n\tloc.loc_id,\n\tul.state,\n\tu.state,\n\tu.first_name,\n\tu.last_name,\n\tu.user_name,\n\tu.contact_number),\nasha_areas as (\nselect\n\tdistinct area_id\nfrom\n\tmember_det ),\nasha_det as (\nselect\n\tasha_areas.area_id,\n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' || ''Contact : '' ||\n\tcase\n\t\twhen u.contact_number is not null then u.contact_number\n\t\telse ''N/A''\n\tend as asha\nfrom\n\tum_user_location ul,\n\tum_user u,\n\tasha_areas\nwhere\n\tasha_areas.area_id = ul.loc_id\n\tand u.id = ul.user_id\n\tand u.state = ''ACTIVE''\n\tand ul.state = ''ACTIVE''\n\tand u.role_id = (\n\tselect\n\t\tid\n\tfrom\n\t\tum_role_master\n\twhere\n\t\tname = ''Asha'')\ngroup by\n\tasha_areas.area_id,\n\tul.state,\n\tu.state,\n\tu.first_name,\n\tu.last_name,\n\tu.user_name,\n\tu.contact_number) select\n\tROW_NUMBER() over () as \"Sr No\",\n\tmember_det.unique_health_id as \"Member ID\",\n\tmember_det.\"Member name\",\n\tmember_det.mobile_number as \"Phone number\",\n\tloc_det.aoi as \"Location\",\n\tcase\n\t\twhen fhw_det.fhw is null then ''No FHW Assigned''\n\t\telse fhw_det.fhw\n\tend as \"FHW Details\",\n\tcase\n\t\twhen asha_det.asha is null then ''No Asha Assigned''\n\t\telse asha_det.asha\n\tend as \"Asha Details\"\nfrom\n\tmember_det\ninner join loc_det on\n\tmember_det.loc_id = loc_det.loc_id\nleft join fhw_det on\n\tmember_det.loc_id = fhw_det.loc_id\nleft join asha_det on\n\tmember_det.area_id = asha_det.area_id #limit_offset#;", "queryId": 763, "fieldName": "tableField", "queryUUID": "686226f9-b38f-405b-be55-8a23a3e72208", "queryParams": "limit_offset,from_date,to_date,loggedInUserId,location_id,health_infra_id"}], "fieldsContainer": [{"index": 3, "isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(to_date(''#to_date#'',''MM/DD/YYYY''),''DD/MM/YYYY'') as to_date;", "queryIdForParam": 895, "queryUUIDForParam": "8218fbfd-a2f4-410c-a5c9-9a795ff30d31"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId# )\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 761, "queryUUIDForParam": "c4750cd2-97de-48f7-92c8-ed897360f98c"}, {"index": 2, "isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(to_date(''#from_date#'',''MM/DD/YYYY''),''DD/MM/YYYY'') as from_date;", "queryIdForParam": 894, "queryUUIDForParam": "88f6c9c3-2be0-4bc9-8bb2-c39b3b18321d"}, {"index": 1, "isHidden": true, "fieldName": "health_infra_id", "fieldType": "text", "queryUUID": null, "displayName": "Health Infrastructure Name", "queryForParam": "select name as health_infra_id from health_infrastructure_details where id = #health_infra_id#", "queryIdForParam": 762, "queryUUIDForParam": "a568d8bc-4d8a-4cc8-a1bd-44e6e00c682f"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'anc_ins_progress', '95243815-f1dc-4aa4-bfc5-7766a8b46d47'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(492, 'ANC Reg (Anemia Status of Registered ANC)', NULL, true, 'DYNAMIC', NULL, '2019-09-24 14:24:32.792', 60512, '2019-08-19 16:52:34.769', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1332, "fieldName": "tableField", "queryUUID": "d1e37878-5311-45a2-8b77-477fbc602dc0", "queryParams": "to_month,limit_offset,demographic_location_id,from_month,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month#'' as date),''MM/YYYY'') as to_month", "queryIdForParam": 1331, "queryUUIDForParam": "4f33b9c1-9f8f-4fa7-b71e-aff477f04114"}, {"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month#'' as date),''MM/YYYY'') as from_month", "queryIdForParam": 1330, "queryUUIDForParam": "69b2f96f-bbb8-42ee-bddf-d16ecd14b35c"}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1329, "queryUUIDForParam": "d1228d39-4e36-4064-8a88-0fc240c77044"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'anc_reg_anemia', '8f228f27-ca13-40f0-94ca-c2a8f6fb655b'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(199, 'Fully Immunized Children after 11 months(Immunization Services Provided to Children with Date of Birth)', NULL, true, 'DYNAMIC', NULL, '2020-05-25 12:02:51.424', 1, '2019-02-14 00:25:46.636', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Fully Immunized Children after 11 months(Immunization Services Provided to Children with Date of Birth)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.member_id is not null\n\tand c.death_date is null\n    and c.is_valid_for_tracking_report = true\n\tand c.fully_immunization_in_number_of_month is not null \n\tand c.fully_immunization_in_number_of_month > 11\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 423, "fieldName": "tableField", "queryUUID": "645b71b4-f78a-4902-9d95-7dda43b136df", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 422, "queryUUIDForParam": "3976e3c0-8f7d-4e42-a7e7-f2bac4b2a80c"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 420, "queryUUIDForParam": "abe98431-e40d-4b14-b410-f9bf3907311e"}, {"index": 1, "isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 421, "queryUUIDForParam": "c60104db-7d6a-4539-bb59-ab9e16e95c59"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'chmn_fullyimmunized', '1a76e483-78bb-4cae-a7f2-4bc92a1d9f80'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(208, 'Fully Immunised Children before 11 months(Immunization Services Provided to Children with Date of Birth)', NULL, true, 'DYNAMIC', NULL, '2020-05-20 13:50:16.325', 1, '2019-02-14 12:59:49.514', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Fully Immunised Children before 11 months(Immunization Services Provided to Children with Date of Birth)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.member_id is not null\n\tand c.death_date is null\n    and c.is_valid_for_tracking_report = true\n\tand c.fully_immunization_in_number_of_month is not null \n\tand c.fully_immunization_in_number_of_month <= 11\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language\n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 459, "fieldName": "tableField", "queryUUID": "d5d663a8-757a-46ab-846b-2ab0b2383930", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 458, "queryUUIDForParam": "75dc8d21-44f6-471b-b686-d48c28f96dd7"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 456, "queryUUIDForParam": "280a7c7d-8629-4d6c-afa2-90c8b092f3b3"}, {"index": 1, "isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 457, "queryUUIDForParam": "784e5272-796f-4c06-9659-bb3a0794e3ee"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_fullyimunized_b11', 'b4936495-ea40-442c-af6e-46cdbbdf1b32'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(231, 'BCG given (Yearly)', NULL, true, 'DYNAMIC', NULL, '2019-04-09 15:23:13.056', 57698, '2019-02-18 12:26:54.478', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, f.location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f\n\twhere l.child_id = c.bcg_loc and m.id = c.member_id and f.family_id = m.family_id\n\tand l.parent_id = #location_id#\n\tand c.bcg is not null\n\tgroup by m.id, f.location_id, c.dob, bcg\n\thaving case when extract(month from bcg) > 3 \n\tthen concat(extract(year from bcg), ''-'', extract(year from bcg) + 1)\n\telse concat(extract(year from bcg) - 1, ''-'', extract(year from bcg)) end = \n\t\tcase when #financial_year# is null then \n\t\t\tcase when extract(month from current_date) > 3 \n\t\t\tthen concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)\n\t\t\telse concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end\n\t\telse ''#financial_year#'' end\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language\n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 562, "fieldName": "tableField", "queryUUID": "ef381b79-e372-44e0-bd68-87a6bc7650ec", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 561, "queryUUIDForParam": "138126b3-6b6e-4bf1-9ee2-cec0dc31512f"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'ch_bcg_yeardate_wise', '14faf77c-7ab2-40be-8474-d83e4f7d4a21'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(109, 'New Pregnancy Registered in TeCHO+', NULL, true, 'DYNAMIC', NULL, '2020-11-04 16:14:14.873', 58981, '2019-01-11 15:55:59.650', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with dates as(\n\nselect to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date\n\n, to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_date\n\n),prefered_language as(\n\nselect (case \n\nwhen report_preferred_language = ''EN'' then true  \n\nelse false \n\nend) as is_enlish \n\nfrom um_user where id = #loggedInUserId#), \n\n preg_women as (\n\n\tselect rch_pregnancy_analytics_details.native_location_id as loc_id,\n\n\timt_member.first_name || '' '' || imt_member.middle_name || '' '' || imt_member.last_name || '' ('' || imt_member.unique_health_id || '')'' || ''<br>'' || imt_member.family_id as member_det,\n\n\tto_char(imt_member.dob, ''DD/MM/YYYY'') as dob,\n\n\tto_char(rch_pregnancy_analytics_details.lmp_date, ''DD/MM/YYYY'') as lmp,\n\n\tcase when rch_pregnancy_analytics_details.edd is null then cast(''N/A'' as text) else to_char(rch_pregnancy_analytics_details.edd, ''DD/MM/YYYY'') end as edd\n\n\tfrom rch_pregnancy_analytics_details,location_hierchy_closer_det,imt_member,imt_family,dates\n\n\twhere location_hierchy_closer_det.parent_id = #location_id#\n\n\tand rch_pregnancy_analytics_details.native_location_id = location_hierchy_closer_det.child_id\n\n\tand rch_pregnancy_analytics_details.member_id = imt_member.id\n\n\tand imt_member.family_id = imt_family.family_id\n\n\tand rch_pregnancy_analytics_details.reg_service_date between dates.from_date and dates.to_date\n\n\torder by rch_pregnancy_analytics_details.lmp_date\n\n\t#limit_offset#\n\n), loc as (\n\n\tselect distinct loc_id from preg_women\n\n), loc_det as (\n\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\n\tgroup by loc.loc_id\n\n), fhw_det as (\n\n\tselect loc.loc_id, \n\n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det\n\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n\n)\n\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\n\npreg_women.member_det as \"Member Details\", \n\nloc_det.aoi as \"Location\",\n\npreg_women.dob as \"Date of Birth\",\n\npreg_women.lmp as \"LMP Date\",\n\npreg_women.edd as \"Estimated Delivery Date\",\n\nfhw_det.fhw as \"FHW Details\"\n\nfrom preg_women \n\ninner join loc_det on preg_women.loc_id = loc_det.loc_id \n\nleft join fhw_det on preg_women.loc_id = fhw_det.loc_id;","queryId":129,"fieldName":"tableField","queryUUID":"74696335-4b99-4a53-b155-b6eea5cb3d86","queryParams":"limit_offset,from_date,to_date,loggedInUserId,location_id"}],"fieldsContainer":[{"index":2,"isHidden":true,"fieldName":"to_date","fieldType":"text","queryUUID":null,"displayName":"To date","queryForParam":"select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date","queryIdForParam":192,"queryUUIDForParam":"e5175168-f41b-402e-a246-71ce5498c97a"},{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":144,"queryUUIDForParam":"6e9ca662-f848-4586-9629-9ed1c9453831","requiredUptoLevel":"1","fetchAccordingToUserAoi":true},{"index":1,"isHidden":true,"fieldName":"from_date","fieldType":"text","queryUUID":null,"displayName":"From Date","isMandatory":false,"queryForParam":"select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date","queryIdForParam":191,"queryUUIDForParam":"e5dbd828-2b9a-466f-ae01-5841080e063f","requiredUptoLevel":""}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","selectedContainer":"tableContainer"}', 'new_preg_reg_techo', '568d101e-216a-41f2-9a8d-622b6a1c3566'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(111, 'Concurrent Pregnant Women in TeCHO+', NULL, true, 'DYNAMIC', NULL, '2020-03-23 17:09:38.928', 58981, '2019-01-21 10:48:51.856', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n preg_women as (\n\tselect \n\trch_pregnancy_analytics_details.member_current_location_id as loc_id,\n\timt_member.first_name || '' '' || imt_member.middle_name || '' '' || imt_member.last_name || '' ('' || imt_member.unique_health_id || '')'' || ''<br>'' || imt_member.family_id as member_det,\n\tto_char(imt_member.dob, ''DD/MM/YYYY'') as dob,\n\tto_char(imt_member.lmp, ''DD/MM/YYYY'') as lmp,\n    rch_pregnancy_analytics_details.mobile_number as contactPersonMobileNo,\n\tcase when imt_member.edd is null then cast(''N/A'' as text) else to_char(imt_member.edd, ''DD/MM/YYYY'') end as edd\n\tfrom location_hierchy_closer_det ldp, imt_member,rch_pregnancy_analytics_details\n\twhere ldp.child_id = rch_pregnancy_analytics_details.member_current_location_id\n\tand imt_member.id = rch_pregnancy_analytics_details.member_id\n\tand ldp.parent_id = #location_id#\n\tand rch_pregnancy_analytics_details.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')\n\tand rch_pregnancy_analytics_details.preg_reg_state in (''PENDING'',''PREGNANT'')\n\torder by imt_member.lmp\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from preg_women\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi  \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\npreg_women.member_det as \"Member Details\", \nloc_det.aoi as \"Location\",\npreg_women.dob as \"Date of Birth\",\npreg_women.lmp as \"LMP Date\",\npreg_women.edd as \"Estimated Delivery Date\",\npreg_women.contactPersonMobileNo as \"Contact Person MobileNo\",\nfhw_det.fhw as \"FHW Details\"\nfrom preg_women \ninner join loc_det on preg_women.loc_id = loc_det.loc_id \nleft join fhw_det on preg_women.loc_id = fhw_det.loc_id;", "queryId": 134, "fieldName": "tableField", "queryUUID": "dfb59d77-a587-4a35-9717-d9b229bedaaa", "queryParams": "limit_offset,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 140, "queryUUIDForParam": "aa774c85-855f-47f2-9762-5613d069003c"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'concurent_preg_women', '23f5b0b5-e06f-47c0-a0ae-2ada72b34fdd'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(113, '0-1 Year Infants in TeCHO+', NULL, true, 'DYNAMIC', NULL, '2019-09-11 15:06:59.920', 58981, '2019-01-21 11:47:42.097', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n infants as (\n\tselect rch_child_analytics_details.loc_id as loc_id,\n\timt_member.first_name || '' '' || imt_member.middle_name || '' '' || imt_member.last_name || '' ('' || imt_member.unique_health_id || '')'' || ''<br>'' || imt_member.family_id as member_det,\n\tto_char(imt_member.dob, ''DD/MM/YYYY'') as dob\n\tfrom location_hierchy_closer_det, rch_child_analytics_details, imt_member\n\twhere location_hierchy_closer_det.parent_id = #location_id#\n\tand location_hierchy_closer_det.child_id = rch_child_analytics_details.loc_id\n\tand rch_child_analytics_details.dob >= current_date - interval ''1 year''\n\tand rch_child_analytics_details.member_id = imt_member.id\n\tand rch_child_analytics_details.death_date is null\n\torder by rch_child_analytics_details.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from infants\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\ninfants.member_det as \"Member Details\", \nloc_det.aoi as \"Location\",\ninfants.dob as \"Date of Birth\",\nfhw_det.fhw as \"FHW Details\"\nfrom infants \ninner join loc_det on infants.loc_id = loc_det.loc_id \nleft join fhw_det on infants.loc_id = fhw_det.loc_id;", "queryId": 136, "fieldName": "tableField", "queryUUID": "52cc79dd-3388-4acd-94ed-2aa008bc535b", "queryParams": "limit_offset,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 142, "queryUUIDForParam": "bd38e2fa-295a-45de-acfd-c2464d4249ab"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', '0_to_1_year_infants', 'b1724dc8-00b5-49f4-9e3a-f59924e531e5'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(114, '0-5 Year Children in TeCHO+', NULL, true, 'DYNAMIC', NULL, '2020-05-25 17:50:49.434', 58981, '2019-01-21 12:27:35.017', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n infants as (\n\tselect rch_child_analytics_details.loc_id as loc_id,\n\timt_member.first_name || '' '' || imt_member.middle_name || '' '' || imt_member.last_name || '' ('' || imt_member.unique_health_id || '')'' || ''<br>'' || imt_member.family_id as member_det,\n\tto_char(imt_member.dob, ''DD/MM/YYYY'') as dob\n\tfrom location_hierchy_closer_det, rch_child_analytics_details,imt_member\n\twhere location_hierchy_closer_det.parent_id = #location_id#\n\tand location_hierchy_closer_det.child_id = rch_child_analytics_details.loc_id\n\tand rch_child_analytics_details.member_id = imt_member.id\n\tand rch_child_analytics_details.dob >= current_date - interval ''5 year''\n\tand rch_child_analytics_details.death_date is null\n\tand rch_child_analytics_details.member_state != ''DEAD''\n\torder by rch_child_analytics_details.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from infants\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\ninfants.member_det as \"Member Details\", \nloc_det.aoi as \"Location\",\ninfants.dob as \"Date of Birth\",\nfhw_det.fhw as \"FHW Details\"\nfrom infants \ninner join loc_det on infants.loc_id = loc_det.loc_id \nleft join fhw_det on infants.loc_id = fhw_det.loc_id;", "queryId": 137, "fieldName": "tableField", "queryUUID": "5b7a9556-70a7-454f-9ccb-8a60f14adfd6", "queryParams": "limit_offset,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 139, "queryUUIDForParam": "f3bbe591-5a40-40aa-948f-9e1a316e252f"}]}, "isFilterOpen": false, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', '0_to_5_year_children', '1bf02be4-c789-447d-8197-3692fceb5162'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(117, 'Infants not given BCG(Monitoring BCG Vaccine as per DOB)', NULL, true, 'DYNAMIC', NULL, '2019-12-11 12:51:29.650', 58981, '2019-01-21 19:55:31.335', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 148, "fieldName": "tableField", "queryUUID": "8fda4313-09b0-4eca-9fcb-057a3e496872", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 149, "queryUUIDForParam": "8c5d27ba-7917-4213-bd61-0af2d8ca9778"}, {"index": 2, "isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year", "queryIdForParam": 207, "queryUUIDForParam": "96b3814b-786b-4438-923d-3d9bc8be6c9b"}, {"index": 1, "isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year", "queryIdForParam": 206, "queryUUIDForParam": "e67b74b7-e2e9-4a56-8ce1-3bc3402b4902"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'infant_not_given_bcg', '5e2cf658-6991-4e49-8aa1-ad1556f64243'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(122, 'Blood pressure (More than 140/90)(Either or both)(High Risk Mother-Present Pregnancy Complication)', NULL, true, 'DYNAMIC', NULL, '2019-10-03 16:07:16.352', 58981, '2019-01-22 19:08:40.019', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \n\t\twhen report_preferred_language = ''EN'' then true  \n\t\telse false \n\tend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\n,dates as (\n\tselect to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date\n\t,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date\n)\n, member_det as (\n\tselect r.member_id, r.native_location_id as loc_id,\n\tm.unique_health_id, m.family_id, \n\tm.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,\n\tto_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd\n\tfrom rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, rch_pregnancy_registration_det p, dates d\n\twhere r.member_id = m.id and r.native_location_id  = l.child_id and m.cur_preg_reg_det_id = p.id\n\tand l.parent_id = #location_id#\n\tand r.reg_service_date  between d.from_date and d.to_date\n\tand r.cur_blood_pressure_issue = true\n\t--and r.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')\n\t--and r.preg_reg_state in (''PENDING'',''PREGNANT'')\n\torder by p.lmp_date\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from member_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 160, "fieldName": "tableField", "queryUUID": "80e70912-ba10-4839-9cfb-c85514b40e44", "queryParams": "to_month,limit_offset,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 159, "queryUUIDForParam": "dc621660-6537-452c-8cd4-b290b9ad4492"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'hrm_bp_more_140_70', '37caca31-39ed-409c-b1ca-5ab4bbc7dcfb'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(233, 'OPV 1 given (Yearly)', NULL, true, 'DYNAMIC', NULL, '2019-04-28 17:06:25.418', 57698, '2019-02-18 12:31:32.682', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, f.location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f\n\twhere l.child_id = c.opv1_loc and m.id = c.member_id and f.family_id = m.family_id\n\tand l.parent_id = #location_id#\n\tand c.opv1 is not null\n\t\tgroup by m.id, f.location_id, c.dob, opv1\n\thaving case when extract(month from opv1) > 3 \n\tthen concat(extract(year from opv1), ''-'', extract(year from opv1) + 1)\n\telse concat(extract(year from opv1) - 1, ''-'', extract(year from opv1)) end = \n\t\tcase when #financial_year# is null then \n\t\t\tcase when extract(month from current_date) > 3 \n\t\t\tthen concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)\n\t\t\telse concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end\n\t\telse ''#financial_year#'' end\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 566, "fieldName": "tableField", "queryUUID": "f9fcf43c-e705-4ee4-9889-f56b9bb55d0f", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryForParam": "", "queryIdForParam": "", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 565, "queryUUIDForParam": "7b425ae8-f058-4e14-b213-6ad4499bd468"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_opv1_yeardate', '12148bea-f956-4a0b-8aa0-d9bbd69633e9'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(327, 'Defaulter List (CMTC/NRC Facility Monitoring)', NULL, true, 'DYNAMIC', NULL, '2020-09-07 16:35:23.034', 60512, '2019-03-13 15:57:37.175', 60512, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with prefered_language as(\nselect (case \nwhen prefered_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_ids as(\n\tselect distinct child_cmtc_nrc_admission_detail.child_id,child_cmtc_nrc_admission_detail.screening_center \n\tfrom health_infrastructure_details\n\tinner join child_cmtc_nrc_admission_detail on health_infrastructure_details.id = child_cmtc_nrc_admission_detail.screening_center\n\tinner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id\n\twhere health_infrastructure_details.location_id in (\n\t\tselect child_id from location_hierchy_closer_det where parent_id = #location_id#\n\t) and child_cmtc_nrc_admission_detail.admission_date between \n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) \n\tand \n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''\n\tand child_cmtc_nrc_screening_detail.state=''DEFAULTER''\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\", \nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nimt_member.dob as \"Child DOB\",\nhealth_infrastructure_details.name as \"Health Infrastructure\"\nfrom child_ids\ninner join imt_member on imt_member.id = child_ids.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on child_ids.screening_center = health_infrastructure_details.id","queryId":923,"fieldName":"tableField","queryUUID":"cc06837c-9d11-49fc-a155-3fb39f50d5ea","queryParams":"limit_offset,from_date,to_date,loggedInUserId,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"from_date","fieldType":"text","queryUUID":null,"displayName":"From Date","queryUUIDForParam":null},{"isHidden":true,"fieldName":"to_date","fieldType":"text","queryUUID":null,"displayName":"To Date","queryUUIDForParam":null},{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":922,"queryUUIDForParam":"7ec252a7-4648-4f4c-952c-36e0ace5dab1"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'defaulter_cmtc', 'ebf3de70-85e7-4033-bf81-1d9122aa60a5'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(124, 'Malaria(High Risk Mother-Present Pregnancy Complication)', NULL, true, 'DYNAMIC', NULL, '2019-10-03 16:09:15.047', 58981, '2019-01-22 19:18:19.342', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 164, "fieldName": "tableField", "queryUUID": "89e9c439-e1b9-432c-9db7-35fd0565fc8e", "queryParams": "to_month,limit_offset,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 163, "queryUUIDForParam": "6a69d392-423c-423f-b514-149c7ecc531d"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'hrm_malaria', 'b23ca25f-c772-4f6b-9b53-cdacd73f57fa'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(125, 'Grand Multipara(High Risk Mother-Present Pregnancy Complication)', NULL, true, 'DYNAMIC', NULL, '2019-09-25 15:30:15.272', 58981, '2019-01-22 19:19:49.115', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 166, "fieldName": "tableField", "queryUUID": "cb12a4c6-6efe-4261-aeb6-d68b5535ab02", "queryParams": "to_month,limit_offset,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 165, "queryUUIDForParam": "e15c9a1c-4404-4ae7-a0d1-acd02198de43"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'hrm_grand_multipara', 'de35c18d-1a4b-41df-83d1-90d665165bd3'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(126, 'Mal Presentation(High Risk Mother-Present Pregnancy Complication)', NULL, true, 'DYNAMIC', NULL, '2019-10-03 16:10:04.146', 58981, '2019-01-22 19:20:45.352', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 168, "fieldName": "tableField", "queryUUID": "17ec4793-0f4e-41bd-9fe6-644888f3c743", "queryParams": "to_month,limit_offset,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 167, "queryUUIDForParam": "2892dbe6-2f82-44a6-8280-e2d8bba933e9"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'hrm_mal_presentation', 'b6246846-f6fb-433a-ab4a-3727727552f6'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(131, 'Urine Albumin Present(High Risk Mother-Present Pregnancy Complication)', NULL, true, 'DYNAMIC', NULL, '2019-10-03 16:12:59.185', 58981, '2019-01-22 19:33:50.129', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \n\t\twhen report_preferred_language = ''EN'' then true  \n\t\telse false \n\tend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\n,dates as (\n\tselect to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date\n\t,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date\n)\n, member_det as (\n\tselect r.member_id, r.native_location_id as loc_id,\n\tm.unique_health_id, m.family_id, \n\tm.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,\n\tto_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd\n\tfrom rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, rch_pregnancy_registration_det p, dates d\n\twhere r.member_id = m.id and r.native_location_id  = l.child_id and m.cur_preg_reg_det_id = p.id\n\tand l.parent_id = #location_id#\n\tand r.reg_service_date  between d.from_date and d.to_date\n\tand r.urine_albumin = true\n\t--and r.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')\n\t--and r.preg_reg_state in (''PENDING'',''PREGNANT'')\n\torder by p.lmp_date\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from member_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 182, "fieldName": "tableField", "queryUUID": "2711fa8b-d158-4b7e-980a-2e7b52700f27", "queryParams": "to_month,limit_offset,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 181, "queryUUIDForParam": "cb57bcba-ca75-413a-a103-6cb3fe4fdae2"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'hrm_urine_albumin', '343bbc69-6bf4-4003-aebf-5b67de89fbb6'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(341, 'Facility Monitoring Report', NULL, false, 'DYNAMIC', NULL, '2019-04-09 11:21:34.158', 60512, '2019-04-09 11:19:06.578', 60512, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "", "queryId": 946, "fieldName": "tableField", "queryUUID": "01b5ae9d-c4e4-41f8-9282-9a766ca79d6a", "dataColspan": "<th></th>\n<th></th>\n<th colspan=\"6\" style=\"text-align:center\"></th>\n<th colspan=\"6\" style=\"text-align:center\"></th>\n<th colspan=\"6\" style=\"text-align:center\"></th>", "queryParams": "from_date,to_date,location_id"}], "fieldsContainer": [{"fieldName": "location_id", "fieldType": "location", "queryUUID": null, "displayName": "Location", "isMandatory": true, "queryUUIDForParam": null, "requiredUptoLevel": 1}, {"fieldName": "date", "fieldType": "dateFromTo", "queryUUID": null, "displayName": "Date", "isMandatory": true, "queryUUIDForParam": null, "requiredUptoLevel": 1}]}, "colspanData": true, "isFilterOpen": true, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer", "isBackButtonRequired": true}', 'fac_monitoring', '8b364f36-a8c8-4577-a4bb-0d5807299940'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(128, 'less than 18 months between last pregnancy( High Risk Mother-Present Pregnancy Complication)', NULL, true, 'DYNAMIC', NULL, '2019-10-03 16:11:23.458', 58981, '2019-01-22 19:29:53.411', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 176, "fieldName": "tableField", "queryUUID": "5f868a6b-e7c4-4698-8744-be7d7f595630", "queryParams": "to_month,limit_offset,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 175, "queryUUIDForParam": "dd3d2d38-6d8c-4339-a26d-cdb40a32f93b"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'hrm_less_thn_18_mnth', '11c9869c-d72a-48e0-818d-58056f351775'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(129, 'Height less than 140 cm(High Risk Mother-Present Pregnancy Complication)', NULL, true, 'DYNAMIC', NULL, '2019-10-03 16:12:00.698', 58981, '2019-01-22 19:31:24.133', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 178, "fieldName": "tableField", "queryUUID": "a8830ac8-26c7-4d40-b02a-4a5fb903905d", "queryParams": "to_month,limit_offset,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 177, "queryUUIDForParam": "dba5c875-1e1e-42d3-9eaf-49017616edea"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'hrm_height_less_140', '368de818-27a6-4399-8b48-e49fd4d2d716'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(354, 'No. of Major Operations (OPD/IPD Daily Performance Report)', NULL, true, 'DYNAMIC', NULL, '2020-11-24 15:06:18.648', 60512, '2019-04-11 11:52:35.655', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with prefered_language as (\nselect \tcase \n\t\twhen report_preferred_language = ''EN'' then true  \n\t\telse false \n\tend as is_enlish\nfrom um_user where id = #loggedInUserId#\n),health_infra_ids as(\n\tselect health_infrastructure_details.id as health_infrastrucutre_id,sum(facility_performance_master.no_of_major_operation_conducted) as no_of_major_operation_conducted\n\tfrom health_infrastructure_details\n\tleft join facility_performance_master on health_infrastructure_details.id = facility_performance_master.health_infrastrucutre_id\n\tand facility_performance_master.performance_date between \n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) \n\tand \n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''\n\twhere health_infrastructure_details.location_id in\n\t(select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth <= (case when #depth_flag# = -1 then 0 else 8 end))\n\tand health_infrastructure_details.type in (1061,1063,1009,1008,1007,1012,1084)\n\tgroup by health_infrastructure_details.id\n\t#limit_offset#\n)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nhealth_infrastructure_details.name as \"Name\",\nlistvalue_field_value_detail.value as \"Type\",\ncase when prefered_language.is_enlish then get_location_hierarchy_language_wise(health_infrastructure_details.location_id, ''EN'')\n\t\t\t\telse get_location_hierarchy(health_infrastructure_details.location_id) end as \"Location\",\ncoalesce(health_infra_ids.no_of_major_operation_conducted, 0) as \"No. of Major Operations\"\nfrom health_infra_ids\ninner join health_infrastructure_details on health_infra_ids.health_infrastrucutre_id = health_infrastructure_details.id\ninner join listvalue_field_value_detail on health_infrastructure_details.type = listvalue_field_value_detail.id\ninner join prefered_language on true","queryId":970,"fieldName":"tableField","queryUUID":"25ce1506-101a-4444-974c-df829d41e6cb","queryParams":"depth_flag,limit_offset,from_date,to_date,loggedInUserId,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"from_date","fieldType":"text","queryUUID":null,"displayName":"From Date","queryUUIDForParam":null},{"isHidden":true,"fieldName":"to_date","fieldType":"text","queryUUID":null,"displayName":"To Date","queryUUIDForParam":null},{"isHidden":true,"fieldName":"depth_flag","fieldType":"text","queryUUID":null,"displayName":"Depth Flag","queryUUIDForParam":null,"index":2},{"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":969,"queryUUIDForParam":"85035f01-a785-4ee8-9208-685f5d660e7f"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","isBackButtonRequired":true}', 'major_op_count_fac', '1f02ff8a-827e-441f-9bb3-abb6ed556a8d'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(343, 'Facility Monitoring Report', NULL, true, 'DYNAMIC', NULL, '2019-04-22 11:31:06.164', 60512, '2019-04-09 11:47:28.862', 60512, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "with location_ids as(\n\tselect child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1\n),health_infra_count as (\n\tselect location_ids.child_id,\n\tcoalesce(sum(case when health_infrastructure_details.type = 1061 then 1 else 0 end),0) as phc_count,\n\tcoalesce(sum(case when health_infrastructure_details.type = 1009 then 1 else 0 end),0) as chc_count,\n\tcoalesce(sum(case when health_infrastructure_details.type = 1008 then 1 else 0 end),0) as sdh_count,\n\tcoalesce(sum(case when health_infrastructure_details.type = 1007 then 1 else 0 end),0) as dh_count,\n\tcoalesce(sum(case when health_infrastructure_details.type = 1012 then 1 else 0 end),0) as mch_count\n\tfrom location_ids\n\tinner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id\n\tinner join health_infrastructure_details on location_hierchy_closer_det.child_id = health_infrastructure_details.location_id\n\tgroup by location_ids.child_id\n), dist_health_infra as (\n\tselect distinct health_infrastrucutre_id from facility_performance_master\n\twhere facility_performance_master.performance_date between \n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) \n\tand \n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''\n),health_infra_entry_count as (\n\tselect location_ids.child_id,\n\tcoalesce(sum(case when health_infrastructure_details.type = 1061 then 1 else 0 end),0) as phc_entry_count,\n\tcoalesce(sum(case when health_infrastructure_details.type = 1009 then 1 else 0 end),0) as chc_entry_count,\n\tcoalesce(sum(case when health_infrastructure_details.type = 1008 then 1 else 0 end),0) as sdh_entry_count,\n\tcoalesce(sum(case when health_infrastructure_details.type = 1007 then 1 else 0 end),0) as dh_entry_count,\n\tcoalesce(sum(case when health_infrastructure_details.type = 1012 then 1 else 0 end),0) as mch_entry_count\n\tfrom location_ids\n\tinner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id\n\tinner join health_infrastructure_details on location_hierchy_closer_det.child_id = health_infrastructure_details.location_id\n\tinner join dist_health_infra on health_infrastructure_details.id = dist_health_infra.health_infrastrucutre_id\n\tgroup by location_ids.child_id\n), det as (\n\tselect row_number() over() as sr_no, \n\tlocation_master.name as loc,\n\tlocation_master.id as hidden_location_id,\n\tcoalesce(health_infra_count.phc_count,0) as phc_count,\n\tcoalesce(health_infra_count.chc_count,0) as chc_count,\n\tcoalesce(health_infra_count.sdh_count,0) as sdh_count,\n\tcoalesce(health_infra_count.dh_count,0) as dh_count,\n\tcoalesce(health_infra_count.mch_count,0) as mch_count,\n\tcoalesce(phc_count+chc_count+sdh_count+dh_count+mch_count,0) as total_hi_count,\n\tcoalesce(health_infra_entry_count.phc_entry_count,0) as phc_entry_count,\n\tcoalesce(health_infra_entry_count.chc_entry_count,0) as chc_entry_count,\n\tcoalesce(health_infra_entry_count.sdh_entry_count,0) as sdh_entry_count,\n\tcoalesce(health_infra_entry_count.dh_entry_count,0) as dh_entry_count,\n\tcoalesce(health_infra_entry_count.mch_entry_count,0) as mch_entry_count,\n\tcoalesce(phc_entry_count+chc_entry_count+sdh_entry_count+dh_entry_count+mch_entry_count,0) as total_hi_entry_count,\n\tcoalesce(phc_count,0)-coalesce(phc_entry_count,0) as phc_not_entry_count,\n\tcoalesce(chc_count,0)-coalesce(chc_entry_count,0) as chc_not_entry_count,\n\tcoalesce(sdh_count,0)-coalesce(sdh_entry_count,0) as sdh_not_entry_count,\n\tcoalesce(dh_count,0)-coalesce(dh_entry_count,0) as dh_not_entry_count,\n\tcoalesce(mch_count,0)-coalesce(mch_entry_count,0) as mch_not_entry_count,\n\tcoalesce(phc_count+chc_count+sdh_count+dh_count+mch_count,0)-coalesce(phc_entry_count+chc_entry_count+sdh_entry_count+dh_entry_count+mch_entry_count,0) as total_hi_not_entry_count\n\tfrom location_ids\n\tinner join location_master on location_master.id = location_ids.child_id\n\tleft join health_infra_count on location_ids.child_id = health_infra_count.child_id\n\tleft join health_infra_entry_count on location_ids.child_id = health_infra_entry_count.child_id\n)\nselect row_number() over() as \"Sr. no\", \n\tdet.loc as \"Location\",\n\tdet.hidden_location_id,\n\tdet.phc_count as \"Total PHC\",\n\tdet.chc_count as \"Total CHC\",\n\tdet.sdh_count as \"Total SDH\",\n\tdet.dh_count as \"Total DH\",\n\tdet.mch_count as \"Total MCH\",\n\tdet.total_hi_count as \"Total Institutions\",\n\tdet.phc_entry_count as \"PHC Entries\",\n\tdet.chc_entry_count as \"CHC Entries\",\n\tdet.sdh_entry_count as \"SDH Entries\",\n\tdet.dh_entry_count as \"DH Entries\",\n\tdet.mch_entry_count as \"MCH Entries\",\n\tdet.total_hi_entry_count as \"Total Entries\",\n\tdet.phc_not_entry_count as \"PHC Not Entered\",\n\tdet.chc_not_entry_count as \"CHC Not Entered\",\n\tdet.sdh_not_entry_count as \"SDH Not Entered\",\n\tdet.dh_not_entry_count as \"DH Not Entered\",\n\tdet.mch_not_entry_count as \"MCH Not Entered\",\n\tdet.total_hi_not_entry_count as \"Total Not Entered\"\n\tfrom det\nunion all\nselect null,\n''<b>Total<b>'',\n#location_id#,\nsum(det.phc_count),\nsum(det.chc_count),\nsum(det.sdh_count),\nsum(det.dh_count),\nsum(det.mch_count),\nsum(det.total_hi_count),\nsum(det.phc_entry_count),\nsum(det.chc_entry_count),\nsum(det.sdh_entry_count),\nsum(det.dh_entry_count),\nsum(det.mch_entry_count),\nsum(det.total_hi_entry_count),\nsum(det.phc_not_entry_count),\nsum(det.chc_not_entry_count),\nsum(det.sdh_not_entry_count),\nsum(det.dh_not_entry_count),\nsum(det.mch_not_entry_count),\nsum(det.total_hi_not_entry_count)\nfrom det", "queryId": 949, "fieldName": "tableField", "queryUUID": "2384cb8a-7f4e-4a5a-b649-635fb2cec70f", "dataColspan": "<th></th>\n<th></th>\n<th colspan=\"6\" style=\"text-align:center\"></th>\n<th colspan=\"6\" style=\"text-align:center\"></th>\n<th colspan=\"6\" style=\"text-align:center\"></th>", "queryParams": "from_date,to_date,location_id"}], "fieldsContainer": [{"fieldName": "location_id", "fieldType": "location", "queryUUID": null, "displayName": "Location", "isMandatory": true, "queryUUIDForParam": null, "requiredUptoLevel": 1}, {"fieldName": "date", "fieldType": "dateFromTo", "queryUUID": null, "displayName": "Date", "isMandatory": true, "queryUUIDForParam": null, "requiredUptoLevel": 1}], "tableFieldContainer": [{"isLink": true, "fieldName": "Total PHC", "customParam": "", "customState": "techo.report.view({\"id\":345,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_date\":\"$from_date$\", \"to_date\":\"$to_date$\"}})", "navigationState": null, "locationLevelForLink": "1"}, {"isLink": true, "fieldName": "Total CHC", "customParam": "", "customState": "techo.report.view({\"id\":346,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_date\":\"$from_date$\", \"to_date\":\"$to_date$\"}})", "navigationState": null, "locationLevelForLink": "1"}, {"isLink": true, "fieldName": "Total SDH", "customParam": "", "customState": "techo.report.view({\"id\":347,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_date\":\"$from_date$\", \"to_date\":\"$to_date$\"}})", "navigationState": null, "locationLevelForLink": "1"}, {"isLink": true, "fieldName": "Total DH", "customParam": "", "customState": "techo.report.view({\"id\":348,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_date\":\"$from_date$\", \"to_date\":\"$to_date$\"}})", "navigationState": null, "locationLevelForLink": "1"}, {"isLink": true, "fieldName": "Total MCH", "customParam": "", "customState": "techo.report.view({\"id\":349,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_date\":\"$from_date$\", \"to_date\":\"$to_date$\"}})", "navigationState": null, "locationLevelForLink": "1"}, {"isLink": true, "fieldName": "Total Institutions", "customParam": "", "customState": "techo.report.view({\"id\":350,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_date\":\"$from_date$\", \"to_date\":\"$to_date$\"}})", "navigationState": null, "locationLevelForLink": "1"}, {"isLink": true, "fieldName": "PHC Entries", "customParam": "", "customState": "techo.report.view({\"id\":358,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_date\":\"$from_date$\", \"to_date\":\"$to_date$\"}})", "navigationState": null, "locationLevelForLink": "1"}, {"isLink": true, "fieldName": "CHC Entries", "customParam": "", "customState": "techo.report.view({\"id\":359,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_date\":\"$from_date$\", \"to_date\":\"$to_date$\"}})", "navigationState": null, "locationLevelForLink": "1"}, {"isLink": true, "fieldName": "SDH Entries", "customParam": "", "customState": "techo.report.view({\"id\":360,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_date\":\"$from_date$\", \"to_date\":\"$to_date$\"}})", "navigationState": null, "locationLevelForLink": "1"}, {"isLink": true, "fieldName": "DH Entries", "customParam": "", "customState": "techo.report.view({\"id\":361,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_date\":\"$from_date$\", \"to_date\":\"$to_date$\"}})", "navigationState": null, "locationLevelForLink": "1"}, {"isLink": true, "fieldName": "MCH Entries", "customParam": "", "customState": "techo.report.view({\"id\":362,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_date\":\"$from_date$\", \"to_date\":\"$to_date$\"}})", "navigationState": null, "locationLevelForLink": "1"}, {"isLink": true, "fieldName": "Total Entries", "customParam": "", "customState": "techo.report.view({\"id\":370,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_date\":\"$from_date$\", \"to_date\":\"$to_date$\"}})", "navigationState": null, "locationLevelForLink": "1"}, {"index": 12, "isLink": true, "fieldName": "PHC Not Entered", "customParam": "", "customState": "techo.report.view({\"id\":371,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_date\":\"$from_date$\", \"to_date\":\"$to_date$\"}})", "navigationState": null, "locationLevelForLink": "1"}, {"index": 13, "isLink": true, "fieldName": "CHC Not Entered", "customParam": "", "customState": "techo.report.view({\"id\":372,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_date\":\"$from_date$\", \"to_date\":\"$to_date$\"}})", "navigationState": null, "locationLevelForLink": "1"}, {"index": 14, "isLink": true, "fieldName": "SDH Not Entered", "customParam": "", "customState": "techo.report.view({\"id\":373,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_date\":\"$from_date$\", \"to_date\":\"$to_date$\"}})", "navigationState": null, "locationLevelForLink": "1"}, {"index": 15, "isLink": true, "fieldName": "DH Not Entered", "customParam": "", "customState": "techo.report.view({\"id\":374,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_date\":\"$from_date$\", \"to_date\":\"$to_date$\"}})", "navigationState": null, "locationLevelForLink": "1"}, {"isLink": true, "fieldName": "MCH Not Entered", "customParam": "", "customState": "techo.report.view({\"id\":375,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_date\":\"$from_date$\", \"to_date\":\"$to_date$\"}})", "navigationState": null, "locationLevelForLink": "1"}, {"isLink": true, "fieldName": "Total Not Entered", "customParam": "", "customState": "techo.report.view({\"id\":376,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_date\":\"$from_date$\", \"to_date\":\"$to_date$\"}})", "navigationState": null, "locationLevelForLink": "1"}]}, "colspanData": true, "isFilterOpen": true, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'facility_monitoring', '3248ecda-7e87-4016-aabf-56c8adc2aaf0'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(130, 'Weight less than 45kg( High Risk Mother-Present Pregnancy Complication)', NULL, true, 'DYNAMIC', NULL, '2019-10-03 16:12:21.650', 58981, '2019-01-22 19:32:40.878', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 180, "fieldName": "tableField", "queryUUID": "794582cc-0a4b-4659-9e33-de394f72c43e", "queryParams": "to_month,limit_offset,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 179, "queryUUIDForParam": "7abbb45c-09ff-4fcb-9e87-92277d48d287"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'hrm_weight_less_45', 'ca97e445-6373-4a4a-9ce7-69b4115892eb'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(132, 'Fully Immunised Children in TeCHO+', NULL, true, 'DYNAMIC', NULL, '2019-06-05 16:50:24.648', 58981, '2019-01-23 13:08:44.596', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 184, "fieldName": "tableField", "queryUUID": "ba1997f4-5646-42bd-b37e-c3d67eeafae4", "queryParams": "limit_offset,from_date,to_date,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 201, "queryUUIDForParam": "56bcf696-f04f-4882-b01b-dfb4a7d93c06"}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date", "queryIdForParam": 203, "queryUUIDForParam": "2bfff2c0-e3b5-4f90-9a12-cc5d491c55cb"}, {"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date", "queryIdForParam": 202, "queryUUIDForParam": "26f9c8f5-8a52-4078-9153-d3d4f63ffa66"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'full_immunised_child', '1bb2dd62-598b-4c50-a436-ab50cbe3a703'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(143, 'OPV 1 given  (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-20 18:37:40.881', 1, '2019-02-05 11:45:14.141', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 240, "fieldName": "tableField", "queryUUID": "56b3f490-21ba-4d8b-8dd2-b0d09b10c739", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 239, "queryUUIDForParam": "837623d0-a10f-4ec5-ab9d-de643b5d9bd4"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_opv1_given', 'f9b0561d-57ce-4573-b32d-95e73b035a29'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(147, 'OPV 2 given (1 to 6 Years)', NULL, true, 'DYNAMIC', NULL, '2020-05-21 13:50:45.462', 1, '2019-02-05 11:59:16.197', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 248, "fieldName": "tableField", "queryUUID": "14c69e82-37f5-424a-a2a5-273d0c0e8664", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 247, "queryUUIDForParam": "1ccee015-d32d-40de-9422-52a6d98df12f"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_opv2_given', '8fba639d-979c-459b-b531-2dbc200f9207'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(230, 'OPV0 (Yearly)', NULL, true, 'DYNAMIC', NULL, '2019-09-05 16:38:08.341', 57698, '2019-02-18 12:23:44.230', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, f.location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f\n\twhere l.child_id = c.opv0_loc and m.id = c.member_id and f.family_id = m.family_id\n\tand l.parent_id = #location_id#\n\tand c.opv0 is not null\n        group by m.id,f.location_id,c.dob,opv0\n\thaving case when extract(month from opv0) > 3 \n\tthen concat(extract(year from opv0), ''-'', extract(year from opv0) + 1)\n\telse concat(extract(year from opv0) - 1, ''-'', extract(year from opv0)) end = \n\t\tcase when #financial_year# is null then \n\t\t\tcase when extract(month from current_date) > 3 \n\t\t\tthen concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)\n\t\t\telse concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end\n\t\telse ''#financial_year#'' end\n\t\t\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language\n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 559, "fieldName": "tableField", "queryUUID": "a9a7d47d-cb7f-4384-afd6-74093a13b7af", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryForParam": "", "queryIdForParam": "", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 558, "queryUUIDForParam": "e33495aa-215f-402e-85f0-2e6d2a4a4e33"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_opv0_yeardate_wis', '01c40a79-3fa3-49d8-950d-ce3549744c53'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(232, 'Penta 1 Given(Yearly)', NULL, true, 'DYNAMIC', NULL, '2019-04-09 13:56:25.960', 57698, '2019-02-18 12:29:51.875', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, f.location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f\n\twhere l.child_id = c.penta1_loc and m.id = c.member_id and f.family_id = m.family_id\n\tand l.parent_id = #location_id#\n\tand c.penta1 is not null\n\tgroup by m.id, f.location_id, c.dob, penta1\n\thaving case when extract(month from penta1) > 3 \n\tthen concat(extract(year from penta1), ''-'', extract(year from penta1) + 1)\n\telse concat(extract(year from penta1) - 1, ''-'', extract(year from penta1)) end = \n\t\tcase when #financial_year# is null then \n\t\t\tcase when extract(month from current_date) > 3 \n\t\t\tthen concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)\n\t\t\telse concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end\n\t\telse ''#financial_year#'' end\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 564, "fieldName": "tableField", "queryUUID": "f9059e6c-6bc5-4400-9f1d-067b55bdd042", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": false, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 563, "queryUUIDForParam": "099694d2-8b03-4d9a-8d42-787975735394"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_penta1_yeardate', '339b46e4-107b-4409-9b95-5f843812e82c'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(150, 'OPV 3 given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 11:52:38.626', 1, '2019-02-05 12:09:46.724', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 256, "fieldName": "tableField", "queryUUID": "e38551bf-f8fc-487d-acf4-bee182bfe19a", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 255, "queryUUIDForParam": "a4a8720c-7144-468f-b7cc-f87c3684c258"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_opv3_given', 'f4097a9c-068a-4c20-af9a-7bb38dd760e4'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(155, 'Infant Death (Infant And Neonatal Deaths Report)', NULL, true, 'DYNAMIC', NULL, '2020-06-10 17:05:50.669', 1, '2019-02-05 12:33:25.273', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 266, "fieldName": "tableField", "queryUUID": "8c546418-026d-42b6-a4bb-b2bef221b95d", "queryParams": ""}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 265, "queryUUIDForParam": "e5a3a96a-4f5e-40a7-a260-109ef70de986"}, {"index": 2, "isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month#'' as date),''MM/YYYY'') as to_month", "queryIdForParam": 1416, "queryUUIDForParam": "7cc27592-5bda-44ed-a914-57e23a57291d"}, {"index": 1, "isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "isUrlParam": false, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month#'' as date),''MM/YYYY'') as from_month", "queryIdForParam": 1415, "queryUUIDForParam": "08e93fc7-0503-49af-af9c-e9275fac1dd8"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'ch_infant_death_year', '7422c34c-3b53-4ea2-8bb1-c56f314c400a'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(203, 'Children with Talipes (club foot) Birth defects(State Level Monthly Compilation Sheet for Screening of Birth Defects)', NULL, true, 'DYNAMIC', NULL, '2019-07-02 22:47:30.630', 1, '2019-02-14 00:36:36.557', 409, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "", "queryId": 439, "fieldName": "tableField", "queryUUID": "293bf81a-081c-4f4f-adbd-f289b54b16f3", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 438, "queryUUIDForParam": "c2760128-c538-4029-bd0d-63d3d2c61d55"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 436, "queryUUIDForParam": "37d62d3d-02fc-4db3-b596-88b7915ca9f8"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 437, "queryUUIDForParam": "26fd73f5-a2d6-4cca-9a8f-5560f90580c2"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_club_foots', 'e312c44e-a61b-4585-aab1-92389dee6b60'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(157, 'Out of weighed, less than 2.5 kg(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-06-02 17:26:23.680', 1, '2019-02-05 12:37:04.948', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 269, "fieldName": "tableField", "queryUUID": "157159ac-4422-4b60-a9c7-bb7c0fbdff59", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 1, "isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 272, "queryUUIDForParam": "55279104-e0a4-4ce1-9422-56e8499affa0"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'ch_outof_weight_year', 'aa64f68d-1436-4dd9-a3ce-835234a3c999'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(158, 'Hep B given (Yearly)', NULL, true, 'DYNAMIC', NULL, '2019-04-09 13:59:33.421', 1, '2019-02-05 12:38:34.934', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, f.location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f\n\twhere l.child_id = c.loc_id and m.id = c.member_id and f.family_id = m.family_id\n\tand l.parent_id = #location_id#\n\tand c.hep_b is not null\n\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 271, "fieldName": "tableField", "queryUUID": "fcce168e-3f95-408c-8e83-bbc6e92559d6", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 270, "queryUUIDForParam": "7654e976-635e-4c03-bb56-d270760f54e3"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_hep_b_given_year', '01aa5dd5-eb3e-4764-8d21-59264c435f61'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(159, 'OPV 0 given (Yearly)', NULL, true, 'DYNAMIC', NULL, '2019-04-09 13:59:31.330', 1, '2019-02-05 12:40:37.079', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, f.location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f\n\twhere l.child_id = c.loc_id and m.id = c.member_id and f.family_id = m.family_id\n\tand l.parent_id = #location_id#\n\tand c.opv0 is not null\n\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 274, "fieldName": "tableField", "queryUUID": "3cef71de-ec5c-4c8f-a4e1-7693fcf7d9a5", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 273, "queryUUIDForParam": "ba1528c0-0296-4bcb-a674-02e15fe6d715"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_opv0_yearly', '955cb3dd-7f4b-4b4e-abe5-6879ecd4c3a7'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(177, 'Early Neonatal deaths (0 - 7 days)(Infant And Neonatal Deaths Report)', NULL, true, 'DYNAMIC', NULL, '2019-09-23 01:42:46.748', 57698, '2019-02-12 15:51:11.280', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 313, "fieldName": "tableField", "queryUUID": "48c1b4c4-92f3-4de4-8b10-713827bd27b4", "queryParams": "to_month,limit_offset,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"index": 2, "isHidden": false, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month#'' as date),''MM/YYYY'') as to_month", "queryIdForParam": 1426, "queryUUIDForParam": "02fafca7-61ef-47a9-8b36-6e98cb1eb1b8"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 312, "queryUUIDForParam": "58d81584-62c5-47e3-a644-b0c8bcf41c4b"}, {"index": 1, "isHidden": false, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month#'' as date),''MM/YYYY'') as from_month", "queryIdForParam": 1425, "queryUUIDForParam": "a08a8555-554c-4d96-b1bf-3066712f88a1"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'ch_early_neonatal', '5efc63be-70e7-4ec2-a97c-e1332dcc1e6b'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(180, 'LBW Child Registered (1.6 - 2 kg)', NULL, true, 'DYNAMIC', NULL, '2019-10-10 12:37:30.848', 1, '2019-02-12 16:19:46.984', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 324, "fieldName": "tableField", "queryUUID": "be01e418-6c84-42d9-9c66-2bd75cb268ce", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 323, "queryUUIDForParam": "ea973466-99e4-48dc-8f92-d600278933b3"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_lbw_ch_1.6-2', '7a1d415b-0ef3-4752-9125-893874826118'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(181, 'Infants given Penta 3 After 12 months of DOB(Child for monitoring of Pentavalent 3 Vaccine as per Date of Birth)', NULL, true, 'DYNAMIC', NULL, '2020-05-25 17:49:54.602', 1, '2019-02-12 17:38:22.170', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 333, "fieldName": "tableField", "queryUUID": "29ee182a-163f-4b60-9c70-b3d47f553889", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "undefined": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 332, "queryUUIDForParam": "d5347419-68b0-4db1-b544-8b50a314cdba"}, {"index": 0, "isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "undefined": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 331, "queryUUIDForParam": "0475dc1b-40f3-431c-bada-b248b904a396"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "undefined": 0, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 330, "queryUUIDForParam": "f7988370-fbab-4d8f-9736-804725b00a8f"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_infants_penta3', 'bf7dfd6e-4ad2-4fbe-8a2e-e0289a9cdbc9'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(182, 'Infants not given Penta 3(Child for monitoring of Pentavalent 3 Vaccine as per Date of Birth)', NULL, true, 'DYNAMIC', NULL, '2020-05-25 17:50:38.194', 1, '2019-02-12 17:40:38.314', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 337, "fieldName": "tableField", "queryUUID": "2a494a8d-8604-4deb-a161-aa211475622c", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 334, "queryUUIDForParam": "f0f8d02e-fdbd-4cb8-ae62-57b0db39b797"}, {"index": 1, "isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 335, "queryUUIDForParam": "b4eca80f-c088-4340-8493-f67f75eaa5c8"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 336, "queryUUIDForParam": "cc5523a2-ebfe-4bb7-a129-ebafe32026bd"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_infants_not_pent3', 'f7e6c3e4-2580-4771-9d82-09178b2918b3'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(184, 'Infant Death (Monthly)', NULL, true, 'DYNAMIC', NULL, '2019-07-04 22:36:40.390', 1, '2019-02-13 11:26:15.216', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, f.location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob,to_char(c.death_date, ''DD/MM/YYYY'') as dod\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f\n\twhere l.child_id = c.loc_id and m.id = c.member_id and f.family_id = m.family_id\n\tand l.parent_id = #location_id#\n\tand c.is_infant_death = true\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\nchild_det.dod as \"Date of Death\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 345, "fieldName": "tableField", "queryUUID": "6d8d43dd-ce5b-4a49-8ab3-275171cb0e14", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 342, "queryUUIDForParam": "a3f798db-a832-44b7-abdf-c4a506d6ec44"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 344, "queryUUIDForParam": "7143e27a-5b5b-4956-9e57-9941b9e04057"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 343, "queryUUIDForParam": "20af7b44-1f33-4868-833e-1dc92b3e3e10"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_infant_death_mont', '7fa5b962-c4e5-4a2b-860c-442ff0432a72'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(197, 'Measles given(Immunization Services Provided to Children with Date of Birth)', NULL, true, 'DYNAMIC', NULL, '2020-05-25 12:04:13.883', 1, '2019-02-13 12:51:25.291', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 415, "fieldName": "tableField", "queryUUID": "adfd7671-a0f8-4a08-9b3d-e2eb1385d22f", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 412, "queryUUIDForParam": "6c9785d5-6d18-4286-bd62-2c0bef0c8dbc"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 414, "queryUUIDForParam": "82be39af-ccd1-4bfa-9d60-7e8f575103fc"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 413, "queryUUIDForParam": "13aa4772-019a-444e-892a-c7571977dfd0"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_measles_monthly', '8addddd8-676d-4d51-9556-9864b695d74c'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(201, 'Children with Neural Tube Birth defects(State Level Monthly Compilation Sheet for Screening of Birth Defects)', NULL, true, 'DYNAMIC', NULL, '2020-12-14 17:53:38.174', 1, '2019-02-14 00:30:26.059', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"--Children with Neural Tube Birth defects(State Level Monthly Compilation Sheet for Screening of Birth Defects)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.delivery_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.delivery_location_id and m.id = c.member_id \n\tand l.parent_id = #location_id#\n\tand c.has_neural_tube_def = true\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end), ''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) ,family_head as (\n\tselect a.id as member_id,\n\tconcat(im2.first_name,'' '',im2.middle_name,'' '',im2.last_name) as FamilyHead,\n\tim2.mobile_number as FamilyHeadMobileNo\n\tfrom imt_member im inner join child_det a on a.id = im.id\n\tinner join imt_family imf on imf.family_id = im.family_id\n\tinner join imt_member im2 on imf.hof_id = im2.id\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nget_location_hierarchy(child_det.loc_id) as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when family_head.FamilyHeadMobileNo is not null then FamilyHeadMobileNo else ''-'' end as \"Contact Number\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id\nleft join family_head on family_head.member_id = child_det.id;","queryId":431,"fieldName":"tableField","queryUUID":"61382382-69a6-4a56-9918-011d2ad50104","queryParams":"limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"from_month_year","fieldType":"text","queryUUID":null,"displayName":"From Date","queryForParam":"select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year","queryIdForParam":429,"queryUUIDForParam":"e0f58ad1-085e-4475-b61f-6215f01e7d2c"},{"isHidden":true,"fieldName":"to_month_year","fieldType":"text","queryUUID":null,"displayName":"To Date","queryForParam":"select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year","queryIdForParam":430,"queryUUIDForParam":"be6ca2c5-0cc1-42a7-9561-35d6931b0a37"},{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":428,"queryUUIDForParam":"d9aeb493-e74c-4b39-b31a-c10894fd00ec"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'chmnth_neutral_tube', 'badac382-ac60-4ab2-adbd-a78025f9694b'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(135, 'JSY Beneficiaries With No Aadhar Number and Bank Details', NULL, false, 'DYNAMIC', NULL, '2019-04-25 20:44:19.707', 57698, '2019-01-28 18:23:13.284', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with member_details as (select member_id,member_current_location_id, lmp_date, m.first_name|| '' '' || m.last_name as name,m.unique_health_id,m.edd,m.mobile_number\nfrom rch_pregnancy_analytics_details r,imt_member m\n where m.id=r.member_id and\n no_aadhar_and_bank=true and lmp_month_year between (case when #from_month# is null then ''01/01/1970'' else to_date(''#from_month#'',''MM/DD/YYYY'') end) \n\tand (case when #to_month# is null then current_date else to_date(''#to_month#'',''MM/DD/YYYY'') end)\n\tand member_current_location_id in (\n\t\tselect child_id from location_hierchy_closer_det  where parent_id=#hidden_location_id#\n\t)\n#limit_offset#)\n\nselect member_details.member_id as hidden_id ,member_current_location_id as hidden_location_id,member_details.name as \"Name\", string_agg(location_master.name,'' > '' order by depth desc) as \"Location\",to_date(to_char(member_details.edd, ''YYYY/MM/DD''), ''YYYY/MM/DD'')   as \"Expected Delivery Date\", member_details.unique_health_id as \"Unique Health Id\",member_details.mobile_number as \"Contact Number\"\n\nfrom member_details,location_hierchy_closer_det ,location_master\nwhere\n location_hierchy_closer_det.child_id = member_details.member_current_location_id\nand location_master.id = location_hierchy_closer_det.parent_id\ngroup by member_details.member_id,member_current_location_id,\"Name\",\"Unique Health Id\",\"Expected Delivery Date\",\"Contact Number\"", "queryId": 209, "fieldName": "tableField", "queryUUID": "62761a2d-478d-4056-ae60-1d73d837c630", "queryParams": "to_month,limit_offset,hidden_location_id,from_month"}], "fieldsContainer": [{"index": 2, "isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month#'' as date),''DD/MM/YYYY'') as to_month", "queryIdForParam": 214, "queryUUIDForParam": "ba1306ec-3fae-46ba-8421-3ee591bd6492"}, {"index": 1, "isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month#'' as date),''DD/MM/YYYY'') as from_month", "queryIdForParam": 213, "queryUUIDForParam": "80bdb6b5-d675-4e16-98ab-f56b9260c9f6"}, {"index": 0, "isHidden": true, "fieldName": "hidden_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "select string_agg(l2.name,''>'' order by lhcd.depth desc) as hidden_location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\nwhere l1.id = #hidden_location_id#", "queryIdForParam": 210, "queryUUIDForParam": "b1961f9a-0984-461e-b398-45d8e6670459"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'jsy_ben_no_adharbank', 'c740156e-34f2-417b-b43b-47c539b76b2f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(210, 'Children with Any other Birth defects(State Level Monthly Compilation Sheet for Screening of Birth Defects)', NULL, true, 'DYNAMIC', NULL, '2020-12-14 17:48:41.279', 1, '2019-02-14 13:20:48.897', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"--Children with Any other Birth defects(State Level Monthly Compilation Sheet for Screening of Birth Defects)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.delivery_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.delivery_location_id and m.id = c.member_id \n\tand l.parent_id = #location_id#\n\tand c.has_any_other_birth_defect = true\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end), ''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) ,\nfamily_head as (\n\tselect a.id as member_id,\n\tconcat(im2.first_name,'' '',im2.middle_name,'' '',im2.last_name) as FamilyHead,\n\tim2.mobile_number as FamilyHeadMobileNo\n\tfrom imt_member im inner join child_det a on a.id = im.id\n\tinner join imt_family imf on imf.family_id = im.family_id\n\tinner join imt_member im2 on imf.hof_id = im2.id\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when family_head.FamilyHeadMobileNo is not null then FamilyHeadMobileNo else ''-'' end as \"Contact Number\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id\nleft join family_head on family_head.member_id = child_det.id;","queryId":467,"fieldName":"tableField","queryUUID":"06e44420-1efc-4da4-96b2-eeb3ac8407ad","queryParams":"limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}],"fieldsContainer":[{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":464,"queryUUIDForParam":"508115b5-1236-46d7-8ca5-5671315bf8ac"},{"isHidden":true,"fieldName":"from_month_year","fieldType":"text","queryUUID":null,"displayName":"From Date","queryForParam":"select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year","queryIdForParam":465,"queryUUIDForParam":"3d99024e-f86a-4234-9135-88cb1f2d9c13"},{"isHidden":true,"fieldName":"to_month_year","fieldType":"text","queryUUID":null,"displayName":"To Date","queryForParam":"select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year","queryIdForParam":466,"queryUUIDForParam":"eaf89410-c02a-43fc-a39a-9afbb141c1f6"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'ch_any_other_defects', 'cf647655-c97c-40d2-aae1-e6a0f8854ba4'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(209, 'Children with Retinopathy of prematurity Birth defects(State Level Monthly Compilation Sheet for Screening of Birth Defects)', NULL, true, 'DYNAMIC', NULL, '2020-12-14 17:48:59.007', 1, '2019-02-14 13:19:30.768', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"--Children with Retinopathy of prematurity Birth defects(State Level Monthly Compilation Sheet for Screening of Birth Defects)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.delivery_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.delivery_location_id and m.id = c.member_id \n\tand l.parent_id = #location_id#\n\tand c.has_retinopathy_of_prematurity = true\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end), '' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) ,\nfamily_head as (\n\tselect a.id as member_id,\n\tconcat(im2.first_name,'' '',im2.middle_name,'' '',im2.last_name) as FamilyHead,\n\tim2.mobile_number as FamilyHeadMobileNo\n\tfrom imt_member im inner join child_det a on a.id = im.id\n\tinner join imt_family imf on imf.family_id = im.family_id\n\tinner join imt_member im2 on imf.hof_id = im2.id\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when family_head.FamilyHeadMobileNo is not null then FamilyHeadMobileNo else ''-'' end as \"Contact Number\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id\nleft join family_head on family_head.member_id = child_det.id;","queryId":463,"fieldName":"tableField","queryUUID":"6dbeaf9b-4f05-4716-85c7-043264b16ca2","queryParams":"limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"from_month_year","fieldType":"text","queryUUID":null,"displayName":"From Date","queryForParam":"select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year","queryIdForParam":461,"queryUUIDForParam":"75cfd094-9396-46bd-ab6d-5686865f3e4f"},{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":460,"queryUUIDForParam":"c889a269-55dc-4daf-9f27-c5b6d960d175"},{"isHidden":true,"fieldName":"to_month_year","fieldType":"text","queryUUID":null,"displayName":"To Date","queryForParam":"select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year","queryIdForParam":462,"queryUUIDForParam":"51506811-5d3b-4507-990f-504683d0a7b2"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'ch_retinopathy_defct', '668d1cbe-c565-44c8-a910-b649c6991743'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(207, 'Children with Congenital Heart disease Birth defects(State Level Monthly Compilation Sheet for Screening of Birth Defects)', NULL, true, 'DYNAMIC', NULL, '2020-12-14 17:50:00.927', 1, '2019-02-14 00:46:06.566', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"/* Children with Congenital Heart disease Birth defects(State Level Monthly Compilation Sheet for Screening of Birth Defects) */\n\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.delivery_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.delivery_location_id and m.id = c.member_id \n\tand l.parent_id = #location_id#\n\tand c.has_congenital_heart_disease = true\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end), '' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) ,\nfamily_head as (\n\tselect a.id as member_id,\n\tconcat(im2.first_name,'' '',im2.middle_name,'' '',im2.last_name) as FamilyHead,\n\tim2.mobile_number as FamilyHeadMobileNo\n\tfrom imt_member im inner join child_det a on a.id = im.id\n\tinner join imt_family imf on imf.family_id = im.family_id\n\tinner join imt_member im2 on imf.hof_id = im2.id\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when family_head.FamilyHeadMobileNo is not null then FamilyHeadMobileNo else ''-'' end as \"Contact Number\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id\nleft join family_head on family_head.member_id = child_det.id;","queryId":455,"fieldName":"tableField","queryUUID":"4f3aa075-1c2d-491a-ae93-0ca78e55f81a","queryParams":"limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}],"fieldsContainer":[{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":452,"queryUUIDForParam":"40b67baa-1105-41e2-a180-f0b829e69a38"},{"isHidden":true,"fieldName":"to_month_year","fieldType":"text","queryUUID":null,"displayName":"To Date","queryForParam":"select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year","queryIdForParam":454,"queryUUIDForParam":"e77dd701-4ee5-4fb4-8e06-630b3b38fe62"},{"isHidden":true,"fieldName":"from_month_year","fieldType":"text","queryUUID":null,"displayName":"From Date","queryForParam":"select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year","queryIdForParam":453,"queryUUIDForParam":"b1acaade-2427-4c3c-825e-6d220876a66f"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","selectedContainer":"tableContainer"}', 'ch_heart_diseases', '8ffd94fe-d0e5-4f8d-ae15-c6637ef91244'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(183, 'Live Birth From 1st April(Child Health Services Provided during the year(Monthly))', NULL, true, 'DYNAMIC', NULL, '2019-11-04 13:01:15.148', 1, '2019-02-13 11:23:47.625', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 341, "fieldName": "tableField", "queryUUID": "77c29a9b-b6ac-4964-8831-8ccd13f941d8", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "undefined": 0, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 338, "queryUUIDForParam": "0a24c220-7039-48c7-a945-c5916724116d"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "undefined": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 340, "queryUUIDForParam": "3b2b3c92-90bf-445b-a9e2-38dbbb09650b"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "undefined": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 339, "queryUUIDForParam": "7ab1f2cc-8326-4760-8e51-d61cd3a4a525"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_libe_birth_month', '321228a5-de64-4c44-859c-a8f4449967b4'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(213, 'Infants not given BCG', NULL, false, 'DYNAMIC', NULL, '2019-02-14 15:23:50.169', 1, '2019-02-14 15:22:28.236', 1, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 494, "fieldName": "tableField", "queryUUID": "d3130d96-b292-4c7d-a489-1ca777639bce", "queryParams": "limit_offset,from_month_year,to_month_year,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 492, "queryUUIDForParam": "7ea127e9-b6fb-405d-af7c-7e14dcb2165e"}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\nwhere l1.id = #location_id#", "queryIdForParam": 491, "queryUUIDForParam": "b842ae60-a88f-491c-b04a-7db9b02d289c"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 493, "queryUUIDForParam": "ad53f9e9-f24d-4c8e-8cd4-0f571b50ca53"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_infants_not_bcg', 'e90151de-dd24-4d5d-a576-01948783476a'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(212, 'Children with Cleft lip and palate Birth defects(State Level Monthly Compilation Sheet for Screening of Birth Defects)', NULL, true, 'DYNAMIC', NULL, '2020-12-14 17:47:50.938', 1, '2019-02-14 14:04:37.303', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"--Children with Cleft lip and palate Birth defects(State Level Monthly Compilation Sheet for Screening of Birth Defects)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.delivery_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.delivery_location_id and m.id = c.member_id \n\tand l.parent_id = #location_id#\n\tand c.has_cleft_lip = true\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end), ''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) ,\nfamily_head as (\n\tselect a.id as member_id,\n\tconcat(im2.first_name,'' '',im2.middle_name,'' '',im2.last_name) as FamilyHead,\n\tim2.mobile_number as FamilyHeadMobileNo\n\tfrom imt_member im inner join child_det a on a.id = im.id\n\tinner join imt_family imf on imf.family_id = im.family_id\n\tinner join imt_member im2 on imf.hof_id = im2.id\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when family_head.FamilyHeadMobileNo is not null then FamilyHeadMobileNo else ''-'' end as \"Contact Number\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id\nleft join family_head on family_head.member_id = child_det.id;","queryId":475,"fieldName":"tableField","queryUUID":"4e98000e-072b-41a3-ba32-08671fef0f24","queryParams":"limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"to_month_year","fieldType":"text","queryUUID":null,"displayName":"To Date","queryForParam":"select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year","queryIdForParam":474,"queryUUIDForParam":"3ade350b-d2ee-405c-a6e1-36ea9e0a6c0f"},{"isHidden":true,"fieldName":"from_month_year","fieldType":"text","queryUUID":null,"displayName":"From Date","queryForParam":"select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year","queryIdForParam":473,"queryUUIDForParam":"1332744b-1dff-4ef2-8283-ef146aa0d103"},{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":472,"queryUUIDForParam":"4a623faa-d039-4d1e-87d8-0040af75791c"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'ch_cleft_lip_defects', '0031dedc-2d10-44b9-84f6-b0cfb546ce91'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(211, 'Children with No Birth defects observed(State Level Monthly Compilation Sheet for Screening of Birth Defects)', NULL, true, 'DYNAMIC', NULL, '2020-12-14 17:48:03.648', 1, '2019-02-14 13:21:57.628', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"--Children with No Birth defects observed(State Level Monthly Compilation Sheet for Screening of Birth Defects)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.delivery_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.delivery_location_id and m.id = c.member_id \n\tand l.parent_id = #location_id#\n\tand c.has_neural_tube_def = false \n\tand c.has_downs_syndrome = false \n\tand c.has_cleft_lip = false\n\tand c.has_talipes = false \n\tand c.has_develop_mental_dysplasia_of_hip = false \n\tand c.has_congenital_cataract = false \n\tand c.has_congenital_deafness = false \n\tand c.has_congenital_heart_disease = false \n\tand c.has_retinopathy_of_prematurity = false\n\tand c.has_any_other_birth_defect = false\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end), '' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;","queryId":471,"fieldName":"tableField","queryUUID":"0436288e-33e5-46dd-8533-cfebc7cac5b2","queryParams":"limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"to_month_year","fieldType":"text","queryUUID":null,"displayName":"To Date","queryForParam":"select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year","queryIdForParam":470,"queryUUIDForParam":"8c4a6bb9-6127-4d81-bffe-aad5198db21d"},{"isHidden":true,"fieldName":"from_month_year","fieldType":"text","queryUUID":null,"displayName":"From Date","queryForParam":"select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year","queryIdForParam":469,"queryUUIDForParam":"6b3ec104-3225-4b35-8d57-8ae380f60670"},{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":468,"queryUUIDForParam":"752d54d0-143b-4312-968f-a5b618b38ec3"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'ch_no_birth_defects', '69a94b41-2d23-4e7a-96ba-07fe4fbfdf04'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(214, 'BCG Given (Child Health Services Provided During The Year (Monthly))', NULL, true, 'DYNAMIC', NULL, '2020-06-25 13:25:31.058', 1, '2019-02-14 15:32:39.869', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 498, "fieldName": "tableField", "queryUUID": "f7134dc3-f58b-49e4-a3c6-7db2865b7a42", "queryParams": ""}], "fieldsContainer": [{"fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "demographic_location_id", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 496, "queryUUIDForParam": "08e374a0-7ee4-4f1a-956d-47b5f1041088"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 495, "queryUUIDForParam": "3f4acc2d-89ae-4257-b9b6-1f3e41c54503"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 497, "queryUUIDForParam": "c02cc956-bfd5-4463-a1a7-c869a18fe867"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_bcg_given_year', '99995beb-36f4-4e69-b731-ea8fc60c0478'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(220, 'OPV 1 given (Child Health Services Provided During The Year (Monthly) )', NULL, true, 'DYNAMIC', NULL, '2020-06-25 14:03:52.909', 1, '2019-02-14 15:59:24.165', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 519, "fieldName": "tableField", "queryUUID": "ce7fb6e4-9107-4856-8b57-4e268f6ad548", "queryParams": ""}], "fieldsContainer": [{"fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "demographic_location_id", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 518, "queryUUIDForParam": "22c22b1a-f432-4750-9c74-e7febd18c57a"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 517, "queryUUIDForParam": "0f93feae-4c49-4da2-a736-9636bbcb0ea0"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 516, "queryUUIDForParam": "0a01a56c-c451-46cd-a5c9-0a3dd6ef2f04"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_opv1_year_wise', '86c8609a-0f4b-43f5-9461-ffa33bdb34f2'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(223, 'OPV 2 given (Child Health Services Provided During The Year (Monthly))', NULL, true, 'DYNAMIC', NULL, '2020-06-25 14:28:39.362', 1, '2019-02-14 16:06:00.361', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 531, "fieldName": "tableField", "queryUUID": "f64123df-98ff-4c6d-8cf7-92903ec0b0e1", "queryParams": ""}], "fieldsContainer": [{"fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "demographic_location_id", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "isUrlParam": false, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 530, "queryUUIDForParam": "ca70ab7b-4d07-4e39-9d37-296a4ee170e0"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 529, "queryUUIDForParam": "0d55eefe-09a7-4006-8759-deb0aaadeda7"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 528, "queryUUIDForParam": "273615ab-5525-4881-9665-02523d3cfa4c"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_opv2_year', '2cfea7df-b90f-43e5-8c94-f995ce3da4a1'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(226, 'Measles given (Child Health Services Provided During The Year (Monthly))', NULL, true, 'DYNAMIC', NULL, '2020-06-25 15:06:51.085', 1, '2019-02-14 16:20:37.906', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 543, "fieldName": "tableField", "queryUUID": "9592f5d2-ed05-47ac-a50a-7adb1165f5c9", "queryParams": ""}], "fieldsContainer": [{"fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "demographic_location_id", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 542, "queryUUIDForParam": "92c7d481-d3bd-4cf6-9360-22f15f4273f7"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 540, "queryUUIDForParam": "39d21c8f-64b9-4b83-a765-5b2cacacada4"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 541, "queryUUIDForParam": "21b0040a-14f6-4c71-bf98-c9a5deae6a3f"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_measles_year_wise', '9aead0ad-30c4-404b-b30b-7e6ea44e183e'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(243, 'Number of PW registered with LMP(Delivery monitoring of Registered LMP)', NULL, true, 'DYNAMIC', NULL, '2020-05-11 14:11:44.906', 409, '2019-02-19 12:09:23.108', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 604, "fieldName": "tableField", "queryUUID": "9a980cb4-5c46-4809-9e46-d6b60c32a270", "queryParams": "limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "demographic_location", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 2, "isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year", "queryIdForParam": 603, "queryUUIDForParam": "66070f8e-45ff-4882-8219-4ee7f743bb57"}, {"index": 1, "isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year", "queryIdForParam": 602, "queryUUIDForParam": "cab1e837-e460-45b1-a698-b5ae91c600de"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 601, "queryUUIDForParam": "e2ff080d-d278-4a11-aa78-8448fcb2c954", "fetchAccordingToUserAoi": true}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'num_pw_reg_lmp', '81f7084f-fa9f-41b3-9fce-47eb0eb1215d'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(244, 'Number of abortion registered with LMP(Delivery monitoring of Registered LMP)', NULL, true, 'DYNAMIC', NULL, '2020-05-11 14:43:16.746', 409, '2019-02-19 12:22:31.111', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 608, "fieldName": "tableField", "queryUUID": "2e45fb29-f9b0-42cd-b9ad-c564483e3c4f", "queryParams": "limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 605, "queryUUIDForParam": "6a68d6d3-4a67-4259-8d3e-92f16689aea3"}, {"index": 2, "isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year", "queryIdForParam": 607, "queryUUIDForParam": "a627377c-1ac6-4d49-8663-c30b5bcffede"}, {"index": 1, "isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year", "queryIdForParam": 606, "queryUUIDForParam": "466e31a4-8b2a-424e-8a08-993a5f034175"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'abortion_lmp', '3a5a921c-3ec1-40a3-bc53-4736663dc3f1'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(481, 'Wrong number (CCC : Call effectiveness reports)', NULL, true, 'DYNAMIC', NULL, '2019-08-07 14:15:39.248', 63746, '2019-08-07 14:13:59.618', 63746, '{"layout": "dynamicReportWithPagination", "htmlData": false, "containers": {"tableContainer": [{"query": "with unsuccess_calls as(\n\tselect \n\t*\n\tfrom ccc_manage_call_master  master\n\twhere call_response in (''com.argusoft.imtecho.ccc.call.wrong-mobile-number'')\n\tand location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n       and case when ''all'' = ''#call_type#'' then true else call_type = ''#call_type#'' end\n       and created_on between case when ''#from_date#'' = ''null'' then now() else to_date(''#from_date#'',''MM-DD-YYYY'') end and to_date(case when ''#to_date#'' = ''null'' then null \n       else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds''\n       order by id #limit_offset#\n),\nunsuccess_calls_details as (\n\tselect \n\tconcat(im.first_name,'' '',im.last_name, ''('',im.unique_health_id ,'')'') as name,\n\tmaster.mobile_number,\n\tmaster.created_on,\n\tmaster.call_type,\n\tmaster.location_id,\n\tmaster.id,\n\tmaster.created_by,\n\tmaster.call_response\n\tfrom unsuccess_calls master\n\tinner join imt_member im on im.id = master.member_id\n\twhere call_response != ''com.argusoft.imtecho.ccc.call.success''\n\t\n\tunion all \n\tselect \n\tconcat(uu.first_name,'' '',uu.last_name, ''('',role.name ,'')'') as name,\n\tmaster.mobile_number,\n\tmaster.created_on,\n\tmaster.call_type,\n\tmaster.location_id,\n\tmaster.id,\n\tmaster.created_by,\n\tmaster.call_response\n\tfrom unsuccess_calls master\n\tinner join um_user uu on uu.id = master.user_id\n\tinner join um_role_master role on uu.role_id = role.id \n\twhere call_response != ''com.argusoft.imtecho.ccc.call.success''\n\n),\nresponse as (\nselect \nmaster.name,\ncase when call_response = ''com.argusoft.imtecho.ccc.call.no-number-available'' then ''No number available''\nwhen call_response = ''com.argusoft.imtecho.ccc.call.cant-talk'' then ''Can''''t talk''\nwhen call_response = ''com.argusoft.imtecho.ccc.call.wrong-mobile-number'' then ''Wrong mobile number''\nwhen call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-asha-husband'' then ''Number belongs to asha''\t-- todo\n--when call_response = ''com.argusoft.imtecho.ccc.call.not-interested-in-treatment'' then ''Not intersted in treatment''\nwhen call_response = ''com.argusoft.imtecho.ccc.call.unresponsive'' then ''Unreponsive''\nwhen call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-anm-husband'' then ''Number belongs to anm'' \nwhen call_response = ''com.argusoft.imtecho.ccc.call.not-reachable'' then ''Not reachable''\nwhen call_response = ''com.argusoft.imtecho.ccc.call.phone-switched-off'' then ''Phone switched off''\nwhen call_response = ''com.argusoft.imtecho.ccc.call.number-collection-pending'' then ''Number collection pending''\t\t\t-- todo\n--when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-beneficiary-husband'' then ''number of beneficiary''\n--when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-beneficiary''\n--when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-beneficiarys-family-member''\n--when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-beneficiarys-neighbour''\nwhen call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-anm-or-anm-husband'' then ''ANM or husband''\t\t\t-- todo\nwhen call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-ashah-or-asha-husband'' then ''Asha or husband''\t\t\t-- todo\nelse ''Other'' end reason,\nmaster.mobile_number\\:\\:json,\nmaster.location_id,\nmaster.created_on,\nmaster.call_type,\nmaster.created_by,\nmaster.id\nfrom unsuccess_calls_details master\n ),\nmo as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code in (''mo_phc'',''mo_uphc''))\n),\nmo_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tmo group by location_id\n),\nmo_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from mo_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\nasha as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code = ''ASHA'')\n),\nasha_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tasha group by location_id\n),\nasha_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from asha_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\nanm as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code = ''FHW'')\n),\nanm_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tanm group by location_id\n),\nanm_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from anm_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\n\ncontacts as (\n\tselect json_array_elements(mobile_number)->>''mobileNumber'' as contact ,json_array_elements(mobile_number)->>''isCalled'' as isCalled ,id\n\tfrom response where mobile_number is not null ),\ncontacts_display_date as (\t\n\tselect string_agg(\n\tcase when isCalled=''true'' then concat(''<b>'',contact,''</b>'') else contact end\n\t,'','') as contact,id from contacts\n\tgroup by id)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nresp.name as \"Called Person\",\ncontacts.contact as \"Dialed Number\",\nto_char(resp.created_on,''DD-MM-YYYY HH:MI PM'') as  \"Call Date\",\n\ncase when resp.call_type = ''FOLL_OVE_SERV'' then ''Overdue services follow'' end as \"Call Type\",\n--resp.reason as \"Reason for Unsuccessful Calling\",\nmo.name as \"MO Details\",\nanm.name as \"ANM Details\",\nasha.name as \"ASHA Details\"\n,concat(um.first_name, '' '', um.last_name) as \"RO Details\" \n--fhw.name\nfrom response resp\nleft join contacts_display_date contacts on resp.id = contacts.id\nleft join mo_details mo on mo.location_id = resp.location_id\nleft join anm_details anm on anm.location_id = resp.location_id\nleft join asha_details asha on asha.location_id = resp.location_id\nleft join um_user um on resp.created_by = um.id", "queryId": 1289, "fieldName": "tableField", "queryUUID": "9d0d0b6f-4c33-4cd4-b399-7e406b515cfc", "queryParams": "limit_offset,from_date,to_date,call_type,location_id"}], "fieldsContainer": [{"index": 3, "isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date", "queryIdForParam": 1288, "queryUUIDForParam": "cd2d32f2-3daa-4886-81d1-73ae9e2f8b05"}, {"fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date", "queryIdForParam": 1287, "queryUUIDForParam": "608c4aff-ef87-425d-96a4-fe440a61d859"}, {"index": 1, "isHidden": true, "fieldName": "call_type", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Call effectiveness", "queryForParam": "with  types as (\nselect ''all'' as key, ''All'' as value, 1 as ord\nunion\nselect ''FOLL_OVE_SERV'' as key,''Overdue services follow'' as value, 2 as ord)\nselect * from types order by ord", "queryIdForParam": 1286, "queryUUIDForParam": "b8061e44-f3bc-47a3-92c3-7c97bb516612"}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1285, "queryUUIDForParam": "b51c6d39-a353-42ef-9be6-5c589250787e"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'wrong_num_talk_ccc', '935839bd-1856-4395-8088-4024d2a454ac'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(245, 'Number of MTP registered with LMP(Delivery monitoring of Registered LMP)', NULL, true, 'DYNAMIC', NULL, '2020-05-11 14:55:58.140', 409, '2019-02-19 12:25:55.934', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 616, "fieldName": "tableField", "queryUUID": "8f2f9ce5-267b-429e-8f11-aafb7a67e2f4", "queryParams": "limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 2, "isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year", "queryIdForParam": 615, "queryUUIDForParam": "d3208ddb-9837-41ea-91c6-c89d631af439"}, {"index": 1, "isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year", "queryIdForParam": 614, "queryUUIDForParam": "81e81bcc-7a31-416f-b8b0-8716faa25753"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 613, "queryUUIDForParam": "aa2a97b5-127c-4056-9341-7452728836e6"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'mtp_lmp_mon', '0d26cb6a-956b-4a66-9e90-b4b6d60bdf1b'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(246, 'Number of institutional delivery registered with LMP(Delivery monitoring of Registered LMP)', NULL, true, 'DYNAMIC', NULL, '2020-05-11 15:01:01.521', 409, '2019-02-19 12:29:19.479', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 620, "fieldName": "tableField", "queryUUID": "309c93ee-f713-4fb0-8e71-d20584556cfe", "queryParams": "limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 617, "queryUUIDForParam": "ab569d43-1536-4470-a59c-3e67030ddcc2"}, {"index": 1, "isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year", "queryIdForParam": 618, "queryUUIDForParam": "802cf124-9e29-47a1-bef5-299099989118"}, {"index": 2, "isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year", "queryIdForParam": 619, "queryUUIDForParam": "ecda7627-4523-4e4c-8a98-bd57dc03e4c2"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'insti_del_reg', '9203a994-f8a0-4790-9fe4-152b1dcf6a34'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(247, 'Number of Home delivery and who registered with LMP(Delivery monitoring of Registered LMP)', NULL, true, 'DYNAMIC', NULL, '2020-05-11 15:04:45.890', 409, '2019-02-19 12:32:44.707', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 624, "fieldName": "tableField", "queryUUID": "e45aff3f-9b87-4126-9f1d-cd22f1837f10", "queryParams": "limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 621, "queryUUIDForParam": "76a94d98-4e9b-47a0-b112-f8384192a02f"}, {"index": 2, "isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year", "queryIdForParam": 623, "queryUUIDForParam": "9f41b4a0-7890-4536-be2f-0da76ee74367"}, {"index": 1, "isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year", "queryIdForParam": 622, "queryUUIDForParam": "400dc7a5-9bbf-4f69-96d4-847443f53491"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'home_del', '01740744-37d4-42ee-ae9d-f2c26edeb8bb'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(240, 'Measles given (Child Health Services Provided during the year (Yearly))', NULL, true, 'DYNAMIC', NULL, '2019-04-29 14:57:21.940', 1, '2019-02-18 13:34:29.805', 64189, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "-------Measles-------\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \nchild_det as (\n\tselect m.id, f.location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f\n\twhere l.child_id = c.measles_loc and m.id = c.member_id and f.family_id = m.family_id\n\tand l.parent_id = #location_id#\n\tand c.measles is not null\n\tgroup by m.id, f.location_id, c.dob, c.measles\n\thaving  (case when extract(month from measles) > 3 \n\tthen concat(extract(year from measles), ''-'', extract(year from measles) + 1)\n\telse concat(extract(year from measles) - 1, ''-'', extract(year from measles)) end = \n\t\tcase when #financial_year# is null then \n\t\t\tcase when extract(month from current_date) > 3 \n\t\t\tthen concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)\n\t\t\telse concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end\n\t\telse ''#financial_year#'' end) \n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 585, "fieldName": "tableField", "queryUUID": "02522085-0e2f-4bcf-adb9-2e7c4534e18d", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 584, "queryUUIDForParam": "f38b3cbb-2d25-42de-b706-a521889714dd"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_measles_yeardate', '342a2645-6f05-4c8c-906b-475bfbc947b5'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(252, 'Number Of Cases Who Agreed To Enroll In Tracking Program C (GVK EMRI - Non Emergency High Risk)', NULL, true, 'DYNAMIC', NULL, '2019-06-27 14:58:22.608', 63746, '2019-02-19 15:05:10.297', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 635, "fieldName": "tableField", "queryUUID": "1b3e98f4-100e-4221-ab00-93d642c740d5", "queryParams": "limit_offset,from_date,to_date,high_risk_condition,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "high_risk_condition", "fieldType": "text", "queryUUID": null, "displayName": "High Risk Condition", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 3, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "select string_agg(lm.name,''> '' order by lhcd.depth desc) as location_id \nfrom location_hierchy_closer_det lhcd \ninner join location_master lm on lm.id = lhcd.parent_id \nwhere lhcd.child_id = #location_id#", "queryIdForParam": 728, "queryUUIDForParam": "a79ccd26-7411-4ca9-a0ca-a2c5fe8dbc63", "requiredUptoLevel": "1"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'gvk_willing_to_help', '7b5f99c5-c1ab-4d24-82f4-dc7a8dd1e085'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(254, 'Reg. After 1st April(ANC Services Provided During The Year)', NULL, true, 'DYNAMIC', NULL, '2020-01-23 19:03:10.423', 409, '2019-02-19 19:17:12.731', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 640, "fieldName": "tableField", "queryUUID": "7744503b-23de-4043-bd9d-622ba4281dfc", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "isMandatory": false, "queryForParam": "with prefered_language as(\nselect (case \nwhen prefered_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 639, "queryUUIDForParam": "f8469a45-576a-4bf5-8f2a-ad0126ce3517", "requiredUptoLevel": ""}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": false}', 'mat_ser_year_reg', 'a1535a7f-7a60-4171-a1d9-fca022bb2193'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(256, 'TT2+TT Booster(ANC Services Provided During The Year)', NULL, true, 'DYNAMIC', NULL, '2020-01-23 19:06:39.538', 409, '2019-02-19 19:35:49.744', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 644, "fieldName": "tableField", "queryUUID": "d1b5350d-25a6-42a2-b9eb-e6c0be7849c2", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen prefered_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 643, "queryUUIDForParam": "97f10ab5-0713-4484-80a1-3731b4550ac7"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mat_ser_year_tt2', '5f59c977-a8d2-4eb9-9b15-aad6275375c8'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(257, 'Early ANC(ANC Services Provided During The Year)', NULL, true, 'DYNAMIC', NULL, '2020-01-23 19:09:53.814', 409, '2019-02-19 19:56:34.081', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 646, "fieldName": "tableField", "queryUUID": "0bbdb5ed-1fb7-4a2e-80e1-f46898868c70", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen prefered_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 645, "queryUUIDForParam": "42eaf368-9c6b-4a32-956a-e08f0e3fa7f8"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mat_ser_year_anc', 'd2c314ee-d1f5-4b45-973f-43191f822dd2'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(395, 'Measles Rubella given (Child Health Services Provided during the year (Yearly))', NULL, true, 'DYNAMIC', NULL, '2019-04-29 14:05:53.547', 409, '2019-04-28 18:07:01.387', 64189, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "-------Measles rubella-------\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \nchild_det as (\n\tselect m.id, f.location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f\n\twhere l.child_id = c.measles_rubella_loc and m.id = c.member_id and f.family_id = m.family_id\n\tand l.parent_id = #location_id#\n\tand c.measles_rubella is not null\n\tgroup by m.id, f.location_id, c.dob, c.measles_rubella\n\thaving  (case when extract(month from measles_rubella) > 3 \n\tthen concat(extract(year from measles_rubella), ''-'', extract(year from measles_rubella) + 1)\n\telse concat(extract(year from measles_rubella) - 1, ''-'', extract(year from measles_rubella)) end = \n\t\tcase when #financial_year# is null then \n\t\t\tcase when extract(month from current_date) > 3 \n\t\t\tthen concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)\n\t\t\telse concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end\n\t\telse ''#financial_year#'' end) \n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 1056, "fieldName": "tableField", "queryUUID": "939d773b-3993-4094-82d2-545cd8f4b539", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1055, "queryUUIDForParam": "83c165b6-ec93-4a6e-9995-9dcb1c959d8f"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mr_giv_ser_dur_year', '0bd79303-1ee5-4edf-9bb4-f29257f285a3'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(259, '2 ANC(ANC Services Provided During The Year)', NULL, true, 'DYNAMIC', NULL, '2020-01-23 19:12:59.854', 409, '2019-02-19 20:08:12.681', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 650, "fieldName": "tableField", "queryUUID": "a7efc8c5-5caa-4431-8ae1-4cc34e5df433", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen prefered_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 649, "queryUUIDForParam": "89b775f3-3d5e-4788-906f-1e4b7e4c1d13"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mat_ser_year_anc2', '1ee1b460-3e67-4444-b3df-029925d60399'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(260, '3 ANC(ANC Services Provided During The Year)', NULL, true, 'DYNAMIC', NULL, '2020-01-23 19:14:45.129', 409, '2019-02-19 20:10:54.314', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 652, "fieldName": "tableField", "queryUUID": "3d2e248e-102f-44c4-a2b4-42a0562f4f52", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen prefered_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 651, "queryUUIDForParam": "9b47efd6-2b76-4c1c-aeb2-fe77732756ee"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mat_ser_year_anc3', 'befa2bc3-1742-422d-b2e3-8f5825d84486'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(261, '4 ANC(ANC Services Provided During The Year)', NULL, true, 'DYNAMIC', NULL, '2020-01-23 19:15:25.386', 409, '2019-02-19 20:12:35.440', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 654, "fieldName": "tableField", "queryUUID": "7b8a4712-1e51-4908-aba2-c672bc327051", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen prefered_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 653, "queryUUIDForParam": "70a766fe-5623-40da-b14b-f1ed0192decc"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mat_ser_year_ancc4', 'c6f73e8a-bbe1-4d08-a115-d5ee3c405f13'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(263, 'MTP(ANC Services Provided During The Year)', NULL, true, 'DYNAMIC', NULL, '2020-01-23 19:16:18.875', 409, '2019-02-19 20:51:30.433', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 658, "fieldName": "tableField", "queryUUID": "b242b7d8-f213-4b60-82b4-7da4d9a04a01", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen prefered_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 657, "queryUUIDForParam": "0056bb57-00ab-4d80-b2ee-bad1c7f31b06"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mat_ser_year_mtp', 'db16b496-b094-47c3-98db-84e4b98a61bd'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(264, 'Abortion(ANC Services Provided During The Year)', NULL, true, 'DYNAMIC', NULL, '2020-01-23 19:16:57.485', 409, '2019-02-19 20:51:39.134', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 660, "fieldName": "tableField", "queryUUID": "b29730de-28b3-40eb-90ef-dcbcd0dd4956", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen prefered_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 659, "queryUUIDForParam": "02f65bbd-25a8-4b19-a4a6-dff7038e75f0"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mat_ser_year_abortio', '456ec3ca-8213-4caa-a493-d76a506d976e'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(267, '3 PNC(Delivery Services Provided During The Year)', NULL, true, 'DYNAMIC', NULL, '2020-06-01 13:19:38.842', 409, '2019-02-19 20:58:20.286', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 667, "fieldName": "tableField", "queryUUID": "a446a790-e0d3-42d3-8567-583b67e88709", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen prefered_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 666, "queryUUIDForParam": "410360a1-9a3a-4133-8b31-28057876339e"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mat_ser_year_pnc3', '583b964b-2d60-4b64-a26f-5151df52ee56'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(271, 'Number of High Risk Mothers Identified(Concurrent High Risk Mother Report)', NULL, true, 'DYNAMIC', NULL, '2020-01-30 12:34:54.641', 409, '2019-02-20 11:55:45.876', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 676, "fieldName": "tableField", "queryUUID": "f535550d-b05d-49f8-9a36-b57e66959eaa", "queryParams": "limit_offset,demographic_location_id,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 675, "queryUUIDForParam": "cf4d1705-db7a-49b2-8efd-d280e365ed87"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'con_preg_high_risk', 'ad8ff315-c7a4-46e3-a67b-d3367be84aeb'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(273, 'Denominator(GVK EMRI - Non Emergency High Risk - Report 1)', NULL, true, 'DYNAMIC', NULL, '2019-07-05 15:31:49.725', 63746, '2019-02-27 10:47:57.665', 57698, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with location_det as(\n\tselect child_id as loc_id from location_hierchy_closer_det where parent_id = #location_id#\n),\ndates as(\n\tselect to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,\n\tto_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'')+interval ''1 day'' - interval ''1 millisecond'' as to_date\n), \nmember_id as (\n\t(select member_id,reg_service_date as filter_date \n\tfrom rch_pregnancy_analytics_details,dates,location_det\n\twhere reg_service_date between dates.from_date and dates.to_date\n\tand member_current_location_id = location_det.loc_id\n\tand ''#high_risk_condition#'' in (''Severe Maternal Anemia'',''High BP'')\n        #limit_offset#)\n\n\tunion\n\n\t(select member_id, dob as filter_date \n\tfrom rch_child_analytics_details,dates,location_det\n\twhere dob between dates.from_date and dates.to_date\n\tand rch_child_analytics_details.member_id is not null\n\tand rch_child_analytics_details.loc_id = location_det.loc_id\n\tand ''#high_risk_condition#'' in (''Very Low Birth Weight'')\n        #limit_offset#)\n\n\tunion\n\n\t(select member_id, dob as filter_date \n\tfrom rch_child_analytics_details,dates,location_det\n\twhere dob between dates.from_date - interval ''6 year'' and dates.to_date - interval ''6 month''\n\tand member_id is not null and rch_child_analytics_details.loc_id = location_det.loc_id\n\tand ''#high_risk_condition#'' in (''SAM'')\n        #limit_offset#)\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nmem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')'' as \"Member Name\",\nfilter_date as \"RegServiceDate(Mother)/BirthDate(Child)\",\ncase when mem.mobile_number is null then ''N/A'' else\n\tmem.mobile_number end as \"Mobile Number\"\n,case \n\twhen hod.mobile_number is not null then \n\t\thod.first_name || '' '' || hod.middle_name || '' '' || hod.last_name || '' ('' || hod.mobile_number  || '')''\n\telse hod.first_name || '' '' || hod.middle_name || '' '' || hod.last_name\nend as \"Head Of Family\"\n,string_agg(lm.name,''> '' order by lhcd.depth desc) as \"Location Hierarchy\"\nfrom member_id  \ninner join imt_member mem on member_id.member_id = mem.id\ninner join imt_family fam on mem.family_id = fam.family_id\nleft join imt_member hod on fam.family_id = hod.family_id and hod.family_head = true\ninner join location_hierchy_closer_det lhcd on (case when fam.area_id is null then fam.location_id else cast(fam.area_id as bigint) end) = lhcd.child_id\ninner join location_master lm on lm.id = lhcd.parent_id \ngroup by mem.first_name, mem.middle_name, mem.last_name, mem.mobile_number,hod.mobile_number,\nhod.first_name,hod.middle_name,hod.last_name,mem.unique_health_id,filter_date", "queryId": 679, "fieldName": "tableField", "queryUUID": "161827ba-2aed-4084-9df9-194149a1a180", "queryParams": "limit_offset,from_date,to_date,high_risk_condition,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "high_risk_condition", "fieldType": "text", "queryUUID": null, "undefined": 0, "displayName": "High Risk Condition", "queryUUIDForParam": null}, {"index": 1, "isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "undefined": 1, "displayName": "From Date", "queryUUIDForParam": null}, {"index": 2, "isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "undefined": 2, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 3, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "undefined": 3, "displayName": "Location", "isMandatory": false, "queryForParam": "select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\nwhere l1.id = #location_id#", "queryIdForParam": 727, "queryUUIDForParam": "449f10ca-d36b-4240-b6cc-97f2ac248743", "requiredUptoLevel": ""}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'denominator_gvk_high', '09dde40e-6d24-4c1d-aa63-22ef36d166f3'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(293, 'Reg. After 1st April (Maternal Health Services provided to the mother registered during the year)', NULL, true, 'DYNAMIC', NULL, '2019-12-17 13:53:06.021', 58981, '2019-03-06 14:27:48.882', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Reg. After 1st April (Maternal Health Services provided to the mother registered during the year)\nwith parameters as(\nselect CAST(#location_id# AS INTEGER) as location_id,\nCAST(''#financial_year#'' AS TEXT) as financial_year,\nCAST(''#demographic_location_id#'' AS TEXT) as demographic_group,\n(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language\n),\n member_det as (\n\tselect r.member_id, r.native_location_id as loc_id,\n\tr.unique_health_id, r.family_id, r.member_name as name,\n\tto_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd\n\tfrom rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p\n\twhere r.native_location_id  = l.child_id \n\tand l.parent_id = p.location_id\n\tand r.reg_service_financial_year = p.financial_year\n        and (p.demographic_group=''null'' or l.child_loc_demographic_type in \n\t\t( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)\n\t)\n\torder by r.lmp_date\n\t#limit_offset#\n),  loc_det as (\n\tselect loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p \n\twhere lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',\n\tcase when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 771, "fieldName": "tableField", "queryUUID": "eb697255-2ae7-4fa0-8c37-c03f04744fe2", "queryParams": "limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 1, "isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 770, "queryUUIDForParam": "3089d889-721e-4100-bd40-725add85795c"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'mtr_hlth_srv_reg', '0c7e787e-2dce-4f16-a4d6-4ffe85bdbd59'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(592, 'Refer to MO (IDSP2 Cluster Survey Detail)', NULL, true, 'DYNAMIC', NULL, '2020-05-22 15:21:22.742', 74840, '2020-04-20 18:43:29.556', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \nparameters as (\n\tselect distinct (case when #location_id# is null then 2\n\t\telse CAST(#location_id# AS INTEGER) end) as location_id,\n\t(case when #location_id# is null then ''null'' else CAST(''#demographic_location_id#'' AS TEXT) end) as demographic_group\n\t,(case when ''#from_date#'' = ''null'' then current_date else  to_date(''#from_date#'',''MM-DD-YYYY'') end) as from_date\n\t,(case when ''#to_date#'' = ''null'' then current_date  else to_date(''#to_date#'',''MM-DD-YYYY'') end) as to_date\n), loc_det as (\n    select vlc.child_id \n    from parameters p \n    cross join vw_location_closure_det_by_parent_location_depth vlc\n    where vlc.location_id=p.location_id and vlc.depth=1 \n    and (p.demographic_group=''null'' or vlc.child_demographic_type in \n    (select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)\n    )\n), opd_detail as (\nselect \n\tidsp2.*\n\tfrom parameters p\n\tcross join idsp_2_member_screening_details idsp2\n\twhere\n\tidsp2.location_id in (select distinct child_id from loc_det) \n\n    and cast(idsp2.service_date as date) between p.from_date and p.to_date\n     \n    and (idsp2.treatment_started != 1 )  \n    \n    and (idsp2.symptoms ilike ''%FEVER%'' OR idsp2.symptoms ilike ''%COUGH%'' or idsp2.symptoms ilike ''%BREATHING_DIFFICULTY%'')\n    \n    order by idsp2.member_id \n    #limit_offset#\n)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nconcat( im.first_name, '' '', im.middle_name, '' '', im.last_name, ''('' , im.unique_health_id , '')'', ''('' , im.family_id , '')'') as \"Member Details\", \nget_location_hierarchy(idsp2.location_id) as \"Location\",\ncase when idsp2.any_illness_or_discomfort = 1 then true else false end as \"Any illness or discomfort\",\ncase when idsp2.symptoms ilike ''%FEVER%'' then true else false end as \"fever\",\ncase when idsp2.symptoms ilike ''%COUGH%'' then true else false end as \"Cough\",\ncase when idsp2.symptoms ilike ''%BREATHING_DIFFICULTY%'' then true else false end as \"Breathing difficulty\",\ncase when (idsp2.symptoms ilike ''%FEVER%'' and (idsp2.symptoms ilike ''%COUGH%'' or idsp2.symptoms ilike ''%BREATHING_DIFFICULTY%'')) then true else false end as \"Fever with cough or breathing difficulty\",\ncase when (idsp2.symptoms ilike ''%FEVER%'' OR idsp2.symptoms ilike ''%COUGH%'' or idsp2.symptoms ilike ''%BREATHING_DIFFICULTY%'') then true else false end as \"Symptomic\",\n--case when (idsp2.treatment_started = 1) then true else false end as \"Treatment started\",\ncase when idsp2.member_id is not null then true else false end as \"Examined by mo\"\nfrom opd_detail idsp2\nleft join imt_member im on im.id = idsp2.member_id", "queryId": 1601, "fieldName": "tableField", "queryUUID": "4f1c7620-2ed3-4fa8-81d5-303ba6679539", "queryParams": "limit_offset,demographic_location_id,from_date,to_date,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 1, "isHidden": true, "fieldName": "filter_type", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Filter Type", "isMandatory": true, "queryUUIDForParam": null, "requiredUptoLevel": 1}, {"index": 2, "isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Demographic Location", "isMandatory": true, "queryUUIDForParam": null, "requiredUptoLevel": 1}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Location Id", "isMandatory": true, "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1598, "queryUUIDForParam": "47e48d86-5950-4a73-a083-f0b31de7b617", "requiredUptoLevel": 1}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "To Date", "isMandatory": true, "queryForParam": "select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date", "queryIdForParam": 1600, "queryUUIDForParam": "181e6d0a-d694-4ce0-9a4e-a25b36e89e36", "requiredUptoLevel": 1}, {"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "From Date", "isMandatory": true, "queryForParam": "select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date", "queryIdForParam": 1599, "queryUUIDForParam": "dbcfb226-8b2b-4c87-95ae-748e0015f5ba", "requiredUptoLevel": 1}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'refer_to_mo_cluster', '2bdfc2c4-28fa-46a3-ac67-d5478d480333'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(275, 'Early ANC(LMP Based Pregnant Women Reg. for ANC Services)', NULL, true, 'DYNAMIC', NULL, '2019-06-28 18:28:30.525', 409, '2019-02-27 13:24:09.201', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 693, "fieldName": "tableField", "queryUUID": "ded90a24-4bf6-4c81-b876-299a78403919", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year", "queryIdForParam": 692, "queryUUIDForParam": "5000c040-99d9-4762-8332-5cfb371f83ca"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 690, "queryUUIDForParam": "d4c77088-def6-492a-8e3d-14e5d2719220"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year", "queryIdForParam": 691, "queryUUIDForParam": "d49d9325-e2f6-4881-a141-d3da3ef5d15f"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'lmp_early_anc', 'a8af0675-8341-48f8-a913-e4626e9eadf9'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(276, 'TT2+TT Booster(LMP Based Pregnant Women Reg. for ANC Services)', NULL, true, 'DYNAMIC', NULL, '2019-06-28 18:20:22.538', 409, '2019-02-27 13:24:32.318', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 697, "fieldName": "tableField", "queryUUID": "f2819d6f-c1e8-4909-a06b-7bd5baf25b23", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 694, "queryUUIDForParam": "c0e74321-c128-4267-9dde-22b922f193b5"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year", "queryIdForParam": 695, "queryUUIDForParam": "020d8dbb-63f8-432f-87a3-eaf8d6b621b8"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year", "queryIdForParam": 696, "queryUUIDForParam": "791dad69-82ae-4e1c-bc4c-7dd9665a1897"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'lmp_tt2_tt_booster', '09f2f79d-f3c6-43cd-abfa-4c3aab9f8554'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(280, 'ANC 4(LMP Based Pregnant Women Reg. for ANC Services)', NULL, true, 'DYNAMIC', NULL, '2019-06-28 18:19:08.730', 409, '2019-02-27 13:25:28.200', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 713, "fieldName": "tableField", "queryUUID": "e874a412-1190-4324-9b42-0a8fd500089e", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 710, "queryUUIDForParam": "710bbc96-7477-4221-b29b-b898b6424a81"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year", "queryIdForParam": 712, "queryUUIDForParam": "629efb4a-4807-4fb0-8e28-d752a11b0ad6"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year", "queryIdForParam": 711, "queryUUIDForParam": "71de1397-9a92-42bb-9bf2-a8a0bd350704"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'lmp_anc4', 'e26179f8-a358-4a67-90e9-96273e2c00c8'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(281, '180 IFA(LMP Based Pregnant Women Reg. for ANC Services)', NULL, true, 'DYNAMIC', NULL, '2019-06-28 18:39:50.940', 409, '2019-02-27 13:25:43.242', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 717, "fieldName": "tableField", "queryUUID": "420fb4e5-1a10-4747-a05f-e5f107f1f3b2", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 714, "queryUUIDForParam": "2902014b-8a53-4c84-9060-c0a06db76a0e"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year", "queryIdForParam": 716, "queryUUIDForParam": "0f0ba74b-7f78-487f-8650-edc7f8012579"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year", "queryIdForParam": 715, "queryUUIDForParam": "9558ded8-15d7-4000-bc64-6f64689d3861"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'lmp_180_ifa', '05b65e55-895a-4d4e-b3c5-57d37f25cd8c'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(251, 'Number Of Confirmed Cases B(GVK EMRI - Non Emergency High Risk - Report 1)', NULL, true, 'DYNAMIC', NULL, '2019-06-27 14:57:14.720', 63746, '2019-02-19 15:02:02.842', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 634, "fieldName": "tableField", "queryUUID": "bd7f43ff-938d-4cbe-a8ea-36d623d8a0f3", "queryParams": "limit_offset,from_date,to_date,high_risk_condition,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "high_risk_condition", "fieldType": "text", "queryUUID": null, "undefined": null, "displayName": "High Risk Condition", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "undefined": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "undefined": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "undefined": 0, "displayName": "Location", "queryForParam": "select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\nwhere l1.id = #location_id#", "queryIdForParam": 726, "queryUUIDForParam": "7e5ce32a-786d-4dcc-9d61-460b684e8159", "requiredUptoLevel": "1"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'gvk_confimed_case', '7fce990c-c216-44e9-b279-d9fd9c82f7c7'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(282, 'Full ANC(LMP Based Pregnant Women Reg. for ANC Services)', NULL, true, 'DYNAMIC', NULL, '2019-06-29 08:19:52.783', 409, '2019-02-27 13:25:51.230', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 721, "fieldName": "tableField", "queryUUID": "dc9de81a-1b75-46ef-90aa-2047563b5eec", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen prefered_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 718, "queryUUIDForParam": "d1e5d31f-5d1c-4a9e-8e26-f411a47ff641"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year", "queryIdForParam": 720, "queryUUIDForParam": "76f72d88-3a00-4de6-a82d-60e317fe6811"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year", "queryIdForParam": 719, "queryUUIDForParam": "9af86547-41c1-4989-a1d6-29673763e81b"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'lmp_full_anc', '5acf7166-4fdf-4306-8946-6a0d8cde9843'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(286, 'ANC-2 (Service provide to pregnant women with lmp)', NULL, true, 'DYNAMIC', NULL, '2019-09-23 16:44:52.453', 58981, '2019-03-01 19:30:54.281', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 744, "fieldName": "tableField", "queryUUID": "60956eae-bf4f-4b38-8690-f322a0d7e162", "queryParams": "limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 741, "queryUUIDForParam": "50e4bb2d-e915-4943-b329-f4fc11b3ef16"}, {"index": 1, "isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 742, "queryUUIDForParam": "9f095d0e-3f48-484b-adc3-6c81002016c1"}, {"index": 2, "isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 743, "queryUUIDForParam": "a551e9e5-b685-452a-8496-d02e5ed1c08e"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mtr_anc2_with_lmp', '78c9c118-f608-441f-b492-36d17363771e'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(287, 'ANC-3 (Service provide to pregnant women with lmp)', NULL, true, 'DYNAMIC', NULL, '2019-09-23 16:44:41.944', 58981, '2019-03-01 19:33:33.764', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 748, "fieldName": "tableField", "queryUUID": "31d3fe85-22b8-4705-b8a1-7e87ed1b91d1", "queryParams": "limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 2, "isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 747, "queryUUIDForParam": "2e27c18f-8c75-4679-95f6-bc964f931aa0"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 745, "queryUUIDForParam": "b967aed5-1cee-4d61-8c1b-14789d17fe66"}, {"index": 1, "isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 746, "queryUUIDForParam": "fac1b078-c317-4dd0-b84c-7657ca17738d"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mtr_anc3_with_lmp', '3617827e-f143-4585-a108-279d3b20620c'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(288, 'ANC-4 (Service provide to pregnant women with lmp)', NULL, true, 'DYNAMIC', NULL, '2019-09-23 16:44:32.424', 58981, '2019-03-01 19:41:41.430', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 752, "fieldName": "tableField", "queryUUID": "7255181e-61c8-4a81-8609-0f066c250592", "queryParams": "limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "location_id", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 749, "queryUUIDForParam": "bac008f4-5848-4249-be28-a6ea0b0b032c"}, {"index": 2, "isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 751, "queryUUIDForParam": "263dcd12-d4b1-485a-92e7-69d8520055fd"}, {"index": 1, "isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 750, "queryUUIDForParam": "eb5f746d-0527-475b-8549-15b32d57844c"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mtr_anc4_with_lmp', '49663a79-c6a8-4256-a866-c91600846627'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(289, 'TT - 1 (Service provide to pregnant women with lmp)', NULL, true, 'DYNAMIC', NULL, '2019-09-23 17:54:06.336', 58981, '2019-03-01 19:43:55.740', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 756, "fieldName": "tableField", "queryUUID": "e4e09971-4d67-4536-98a8-1b74c8f251e8", "queryParams": "limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 2, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 755, "queryUUIDForParam": "ddd92b66-35bf-4865-b657-2a9dde1057d2"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 754, "queryUUIDForParam": "54b0d11d-79d8-4ac7-a9e5-0eca2a0ef98e"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 753, "queryUUIDForParam": "68e36534-c8e9-46ed-8f46-99e6f15a7687"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mtr_tt1_with_lmp', '137b2e35-ed2c-462a-84e2-e1b2f95372ad'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(291, 'PNC(Work Progress - Institutions)', NULL, true, 'DYNAMIC', NULL, '2019-11-20 16:17:40.452', 64189, '2019-03-04 12:15:22.359', 75398, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 766, "fieldName": "tableField", "queryUUID": "4fdff693-7368-4fff-a660-a54a596e7ea8", "queryParams": "limit_offset,from_date,to_date,loggedInUserId,location_id,health_infra_id"}], "fieldsContainer": [{"index": 1, "isHidden": true, "fieldName": "health_infra_id", "fieldType": "text", "queryUUID": null, "displayName": "Health Infrastructure Name", "queryForParam": "select name as health_infra_id from health_infrastructure_details where id = #health_infra_id#", "queryIdForParam": 765, "queryUUIDForParam": "022a0c47-aaa7-4e6f-ab2d-ffbe9ad91939"}, {"index": 3, "isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(to_date(''#to_date#'',''MM/DD/YYYY''),''DD/MM/YYYY'') as to_date;", "queryIdForParam": 897, "queryUUIDForParam": "b5f57230-1747-46f8-8cee-67ca735b571f"}, {"index": 2, "isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(to_date(''#from_date#'',''MM/DD/YYYY''),''DD/MM/YYYY'') as from_date;", "queryIdForParam": 896, "queryUUIDForParam": "d82a7d2c-626d-47da-8743-9bb905cb4e3c"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId# )\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 764, "queryUUIDForParam": "f1c78da3-b5fb-4a5d-b475-c811052d02d7"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'pnc_ins_progress', '7b10f5fc-fbce-4e77-bf82-05f467052f8f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(294, 'TT1 Given (Maternal Health Services provided to the mother registered during the year)', NULL, true, 'DYNAMIC', NULL, '2020-05-11 10:50:10.175', 58981, '2019-03-06 14:29:58.740', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 773, "fieldName": "tableField", "queryUUID": "8b370eff-48ec-4146-a7a6-9b3160be1b09", "queryParams": "limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 1, "isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 772, "queryUUIDForParam": "af45d070-2bbf-4320-8fe2-1eb2a3d0b67a"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mtr_hlth_srv_tt1', '4c833a05-ed3c-4b7d-9a73-8ff81d782e6a'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(295, 'TT2+TT Booster (Maternal Health Services provided to the mother registered during the year)', NULL, true, 'DYNAMIC', NULL, '2020-05-11 10:52:27.328', 58981, '2019-03-06 15:04:37.684', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 775, "fieldName": "tableField", "queryUUID": "cd35ea4c-8b96-4493-8673-c580debe9914", "queryParams": "limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 774, "queryUUIDForParam": "becc9445-0fe6-4186-b623-30e381a745c1"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mtr_hlth_srv_tt2', 'f2927e16-d2f4-471d-962d-f6ef7590f644'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(198, 'Fully Immunized Children (Monthly)', NULL, true, 'DYNAMIC', NULL, '2019-07-04 22:38:21.916', 1, '2019-02-13 12:53:35.580', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, f.location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f\n\twhere l.child_id = c.loc_id and m.id = c.member_id and f.family_id = m.family_id\n\tand l.parent_id = #location_id#\n\tand c.fully_immunization_in_number_of_month <= 12\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 419, "fieldName": "tableField", "queryUUID": "51a3ad08-ea6c-408d-843a-50977808a012", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 416, "queryUUIDForParam": "c3c1f3eb-cb71-4841-a580-d2e5a9ba7b1a"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 418, "queryUUIDForParam": "7fdb9fcb-a375-4868-a06c-368a2c927bdb"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 417, "queryUUIDForParam": "4715e2d1-4320-489c-afcc-d29e54b88685"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_fullyimmuniz_mnth', '1f33781e-15a9-40ab-850f-04f20f1c504f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(123, 'Gestational Diabetes Mellitus(High Risk Mother-Present Pregnancy Complication)', NULL, true, 'DYNAMIC', NULL, '2019-10-03 16:08:38.943', 58981, '2019-01-22 19:17:08.519', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 162, "fieldName": "tableField", "queryUUID": "72f34950-4995-4dd0-9b09-94604929970e", "queryParams": "to_month,limit_offset,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 161, "queryUUIDForParam": "01dffc88-e1dc-4b41-b836-9faeeb61501a"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'hrm_gestational_diab', 'bcf78c7f-617d-40c8-98cb-18a67e81281f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(296, 'Early ANC (Maternal Health Services provided to the mother registered during the year)', NULL, true, 'DYNAMIC', NULL, '2020-05-11 10:56:41.749', 58981, '2019-03-06 15:07:40.453', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 777, "fieldName": "tableField", "queryUUID": "1f644d08-efc2-45ae-929c-e864aead6cfb", "queryParams": "limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 776, "queryUUIDForParam": "96796547-fc8d-4bb8-a30e-750ac3169736"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'mtr_hlth_srv_er_anc', 'c139d343-c2a1-41ca-b5ec-2a0701ebfbac'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(298, '2 ANC (Maternal Health Services provided to the mother registered during the year)', NULL, true, 'DYNAMIC', NULL, '2020-05-11 11:06:18.789', 58981, '2019-03-06 15:25:38.360', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 781, "fieldName": "tableField", "queryUUID": "18ac39e9-e853-4776-8974-f343ce362373", "queryParams": "limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 780, "queryUUIDForParam": "8bc2e9b3-8293-4cc0-8f0a-fbd908d1f516"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mtr_hlth_srv_anc2', '18b0e01b-9431-47a1-b6a5-dd9b2ff44aed'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(484, 'Unsuccessful (CCC : Call effectiveness reports)', NULL, true, 'DYNAMIC', NULL, '2019-08-08 13:27:39.635', 63746, '2019-08-07 14:25:14.680', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with unsuccess_calls as(\n\tselect \n\t*\n\tfrom ccc_manage_call_master master\n\twhere call_response in (''com.argusoft.imtecho.ccc.call.cant-talk'',\n\t''com.argusoft.imtecho.ccc.call.no-number-available'',\n\t''com.argusoft.imtecho.ccc.call.wrong-mobile-number'',\n        ''com.argusoft.imtecho.ccc.call.phone-switched-off'')\n\tand location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\tand case when ''all'' = ''#call_type#'' then true else call_type = ''#call_type#'' end\nand created_on between case when ''#from_date#'' = ''null'' then now() else to_date(''#from_date#'',''MM-DD-YYYY'') end and to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds''\norder by id #limit_offset#\n\n),\nunsuccess_calls_details as (\n\tselect \n\tconcat(im.first_name,'' '',im.last_name, ''('',im.unique_health_id ,'')'') as name,\n\tmaster.mobile_number,\n\tmaster.created_on,\n\tmaster.call_type,\n\tmaster.location_id,\n\tmaster.id,\n    master.created_by,\n\tmaster.call_response\n\tfrom unsuccess_calls master\n\tinner join imt_member im on im.id = master.member_id\n\twhere call_response != ''com.argusoft.imtecho.ccc.call.success''\n\t\n\tunion all \n\tselect \n\tconcat(uu.first_name,'' '',uu.last_name, ''('',role.name ,'')'') as name,\n\tmaster.mobile_number,\n\tmaster.created_on,\n\tmaster.call_type,\n\tmaster.location_id,\n\tmaster.id,\n    master.created_by,\n\tmaster.call_response\n\tfrom unsuccess_calls master\n\tinner join um_user uu on uu.id = master.user_id\n\tinner join um_role_master role on uu.role_id = role.id \n\twhere call_response != ''com.argusoft.imtecho.ccc.call.success''\n\n\t\n),\nresponse as (\nselect \nmaster.name,\ncase when call_response = ''com.argusoft.imtecho.ccc.call.no-number-available'' then ''No number available''\nwhen call_response = ''com.argusoft.imtecho.ccc.call.cant-talk'' then ''Can''''t talk''\nwhen call_response = ''com.argusoft.imtecho.ccc.call.wrong-mobile-number'' then ''Wrong mobile number''\nwhen call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-asha-husband'' then ''Number belongs to asha''\t-- todo\n--when call_response = ''com.argusoft.imtecho.ccc.call.not-interested-in-treatment'' then ''Not intersted in treatment''\nwhen call_response = ''com.argusoft.imtecho.ccc.call.unresponsive'' then ''Unreponsive''\nwhen call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-anm-husband'' then ''Number belongs to anm'' \nwhen call_response = ''com.argusoft.imtecho.ccc.call.not-reachable'' then ''Not reachable''\nwhen call_response = ''com.argusoft.imtecho.ccc.call.phone-switched-off'' then ''Phone switched off''\nwhen call_response = ''com.argusoft.imtecho.ccc.call.number-collection-pending'' then ''Number collection pending''\t\t\t-- todo\n--when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-beneficiary-husband'' then ''number of beneficiary''\n--when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-beneficiary''\n--when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-beneficiarys-family-member''\n--when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-beneficiarys-neighbour''\nwhen call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-anm-or-anm-husband'' then ''ANM or husband''\t\t\t-- todo\nwhen call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-ashah-or-asha-husband'' then ''Asha or husband''\t\t\t-- todo\nelse ''Other'' end reason,\nmaster.mobile_number\\:\\:json,\nmaster.location_id,\nmaster.created_on,\nmaster.created_by,\nmaster.call_type,\nmaster.id\nfrom unsuccess_calls_details master\n ),\nmo as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code in (''mo_phc'',''mo_uphc''))\n),\nmo_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tmo group by location_id\n),\nmo_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from mo_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\nasha as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code = ''ASHA'')\n),\nasha_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tasha group by location_id\n),\nasha_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from asha_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\nanm as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code = ''FHW'')\n),\nanm_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tanm group by location_id\n),\nanm_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from anm_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\n\n\ncontacts as (\n\tselect json_array_elements(mobile_number)->>''mobileNumber'' as contact ,json_array_elements(mobile_number)->>''isCalled'' as isCalled ,id\n\tfrom response where mobile_number is not null ),\ncontacts_display_date as (\t\n\tselect string_agg(\n\tcase when isCalled=''true'' then concat(''<b>'',contact,''</b>'') else contact end\n\t,'','') as contact,id from contacts\n\tgroup by id)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nresp.name as \"Called Person\",\ncontacts.contact as \"Dialed Number\",\nto_char(resp.created_on,''DD-MM-YYYY HH:MI PM'') as  \"Call Date\",\n\ncase when resp.call_type = ''FOLL_OVE_SERV'' then ''Overdue services follow'' end as \"Call Type\",\nresp.reason as \"Reason for Unsuccessful Calling\",\nmo.name as \"MO Details\",\nanm.name as \"ANM Details\",\nasha.name as \"ASHA Details\"\n,concat(um.first_name, '' '', um.last_name) as \"RO Details\"\n--fhw.name\nfrom response resp\nleft join contacts_display_date contacts on resp.id = contacts.id\nleft join mo_details mo on mo.location_id = resp.location_id\nleft join anm_details anm on anm.location_id = resp.location_id\nleft join asha_details asha on asha.location_id = resp.location_id\nleft join um_user um on resp.created_by = um.id", "queryId": 1308, "fieldName": "tableField", "queryUUID": "e3df0493-9f50-4f73-b368-6182ca611655", "queryParams": "limit_offset,from_date,to_date,call_type,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date", "queryIdForParam": 1307, "queryUUIDForParam": "c500c28a-1ba8-43db-8dcf-80ac3ec6b467"}, {"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date", "queryIdForParam": 1306, "queryUUIDForParam": "28b1191d-2c45-4e70-90f3-b99689c565c4"}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1304, "queryUUIDForParam": "ad8c8ff6-bbd3-4808-8588-8d7e183fc76c"}, {"isHidden": true, "fieldName": "call_type", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Call effectiveness", "queryForParam": "with  types as (\nselect ''all'' as key, ''All'' as value, 1 as ord\nunion\nselect ''FOLL_OVE_SERV'' as key,''Overdue services follow'' as value, 2 as ord)\nselect * from types order by ord", "queryIdForParam": 1305, "queryUUIDForParam": "0cf150d7-c449-4f59-9112-5845a5508cba"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'unsuccessful_ccc', '459c33ba-7009-4b72-ae6e-d4fd258f9f20'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(297, '1 ANC (Maternal Health Services provided to the mother registered during the year)', NULL, true, 'DYNAMIC', NULL, '2020-12-15 11:35:17.041', 58981, '2019-03-06 15:09:20.373', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"--1 ANC (Maternal Health Services provided to the mother registered during the year)\nwith parameters as(\nselect CAST(#location_id# AS INTEGER) as location_id,\nCAST(''#financial_year#'' AS TEXT) as financial_year,\nCAST(''#demographic_location_id#'' AS TEXT) as demographic_group,\n(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language\n),\n member_det as (\n\tselect r.member_id, r.tracking_location_id as loc_id,\n\tr.unique_health_id, r.family_id, r.member_name as name,\n\tto_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd\n\t,to_char(r.anc1, ''DD/MM/YYYY'') as anc1\n\tfrom rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p\n\twhere r.tracking_location_id  = l.child_id \n\tand anc1 is not null\n\tand l.parent_id = p.location_id\n\tand r.reg_service_financial_year = p.financial_year\n        and (p.demographic_group=''null'' or l.child_loc_demographic_type in \n\t\t( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)\n\t)\n\tand r.is_valid_for_tracking_report\n\torder by r.lmp_date\n\t#limit_offset#\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p\n\twhere lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, concat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',\n\tcase when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\nmember_det.anc1 as \"ANC1 Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;","queryId":779,"fieldName":"tableField","queryUUID":"583c2cfd-bfc2-436c-9b78-9d3ed19b80f0","queryParams":"limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"financial_year","fieldType":"text","queryUUID":null,"displayName":"Year","queryUUIDForParam":null},{"isHidden":true,"fieldName":"demographic_location_id","fieldType":"text","queryUUID":null,"displayName":"Demographic Location","queryUUIDForParam":null},{"index":1,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":778,"queryUUIDForParam":"70685489-b3a7-4a91-82d3-a68f038c8182"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","selectedContainer":"tableContainer"}', 'mtr_hlth_srv_anc1', 'd9092a2b-15f2-43b1-8c3e-4f466993ce5e'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(299, '3 ANC (Maternal Health Services provided to the mother registered during the year)', NULL, true, 'DYNAMIC', NULL, '2020-05-11 11:59:43.583', 58981, '2019-03-06 15:29:47.930', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 783, "fieldName": "tableField", "queryUUID": "ee8e7735-6909-4575-800a-cec0a8835e76", "queryParams": "limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 1, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 782, "queryUUIDForParam": "e28c0cc3-a8a3-45a2-b5f6-df6019c9fa43"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'mtr_hlth_srv_anc3', '830bb3ce-9da4-45c9-a339-103ffbce1252'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(302, 'MTP (Maternal Health Services provided to the mother registered during the year)', NULL, true, 'DYNAMIC', NULL, '2020-10-12 21:26:47.621', 58981, '2019-03-06 15:37:15.108', 78434, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"--MTP (Maternal Health Services provided to the mother registered during the year)\nwith parameters as(\nselect CAST(#location_id# AS INTEGER) as location_id,\nCAST(''#financial_year#'' AS TEXT) as financial_year,\nCAST(''#demographic_location_id#'' AS TEXT) as demographic_group,\n(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language\n),\n member_det as (\n\tselect r.member_id, r.tracking_location_id as loc_id,\n\tr.unique_health_id, r.family_id, \n\tr.member_name as name,\n\tto_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd\n\tfrom rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p\n\twhere  r.tracking_location_id  = l.child_id \n\tand delivery_outcome = ''MTP'' and (delivery_out_of_state_govt is false and delivery_out_of_state_pvt is false)\n\tand l.parent_id = p.location_id\n\tand r.reg_service_financial_year = p.financial_year\n\tand (p.demographic_group=''null'' or l.child_loc_demographic_type in \n\t\t( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)\n\t)\n\tand r.is_valid_for_tracking_report\n\torder by r.lmp_date\n\t#limit_offset#\n),loc_det as (\n\tselect loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p \n\twhere lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',\n\tcase when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;","queryId":789,"fieldName":"tableField","queryUUID":"661211c4-efeb-4c0c-a31c-b605e6c6bb2b","queryParams":"limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"financial_year","fieldType":"text","queryUUID":null,"displayName":"Year","queryUUIDForParam":null},{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":788,"queryUUIDForParam":"414e5048-798b-4ab4-a277-05ce3a30088d"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'mtr_hlth_srv_mtp', '9008e8e0-92cd-49c0-8560-0529e83a955d'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(301, 'No of Del. (Maternal Health Services provided to the mother registered during the year)', NULL, true, 'DYNAMIC', NULL, '2020-10-12 21:27:52.026', 58981, '2019-03-06 15:33:41.036', 78434, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"--No of Del. (Maternal Health Services provided to the mother registered during the year)\nwith parameters as(\nselect CAST(#location_id# AS INTEGER) as location_id,\nCAST(''#financial_year#'' AS TEXT) as financial_year,\nCAST(''#demographic_location_id#'' AS TEXT) as demographic_group,\n(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language\n),\n member_det as (\n\tselect r.member_id, r.tracking_location_id as loc_id,\n\tr.unique_health_id, r.family_id, r.member_name as name,\n\tto_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd\n\tfrom rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p\n\twhere r.tracking_location_id  = l.child_id \n\tand delivery_outcome in (''LBIRTH'',''SBIRTH'') and (delivery_out_of_state_govt is false and delivery_out_of_state_pvt is false)\n\tand l.parent_id = p.location_id\n\tand r.reg_service_financial_year = p.financial_year\n        and (p.demographic_group=''null'' or l.child_loc_demographic_type in \n\t\t( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)\n\t)\n    and r.is_valid_for_tracking_report\n\torder by r.lmp_date\n\t#limit_offset#\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p \n\twhere lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, concat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',\n\tcase when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;","queryId":787,"fieldName":"tableField","queryUUID":"7c9b11e2-ddf8-41c7-8c54-d1352f2a981f","queryParams":"limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id"}],"fieldsContainer":[{"index":0,"isHidden":true,"fieldName":"financial_year","fieldType":"text","queryUUID":null,"undefined":0,"displayName":"Year","queryUUIDForParam":null},{"isHidden":true,"fieldName":"demographic_location_id","fieldType":"text","queryUUID":null,"displayName":"Demographic Location","queryUUIDForParam":null},{"index":1,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"undefined":1,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":786,"queryUUIDForParam":"c6ef7da6-03ce-4529-ab20-e7b2b6208f28"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'mtr_hlth_srv_del_no', '9a60faf6-7bb9-430a-93e5-6d55fee9bf07'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(665, '2nd and 3rd trimester high risk mother given services under PMS(PMSMA Services Statistics Report)', NULL, true, 'DYNAMIC', NULL, '2020-10-19 17:39:56.007', 78434, '2020-10-16 11:17:57.730', 78434, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"from_month","displayName":"From Month","fieldType":"text","isHidden":true,"index":0},{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1785,"queryUUIDForParam":"da1f8201-52af-4a8b-a465-482e4ed2cfc4"},{"fieldName":"to_month","displayName":"To Month","fieldType":"text","isUrlParam":false,"isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"-- 2nd and 3rd trimester high risk mother given services under PMS(PMSMA Services Statistics Report)\nwith dates as (\n    select to_date(\n            case\n                when ''#from_month#'' = ''null'' then null\n                else ''#from_month#''\n            end,\n            ''MM/DD/YYYY''\n        ) as from_date,\n        to_date(\n            case\n                when ''#to_month#'' = ''null'' then null\n                else ''#to_month#''\n            end,\n            ''MM/DD/YYYY''\n        ) + interval ''1 month'' - interval ''1 milliseconds'' as to_date\n),\nlocation_det as (\n    select lm.id,\n        lm.english_name as name,\n        lm.location_code\n    from location_hierchy_closer_det lh1,\n        location_master lm\n    where lh1.parent_id = #location_id#\n        and lm.id = lh1.child_id\n),\nhigh_risk_member as (\n    select rpa.pregnancy_reg_id,\n        to_char(rpa.lmp_date, ''DD-MM-YYYY'') as lmp_date,\n        to_char(preg.edd, ''DD-MM-YYYY'') as edd_date,\n        get_location_hierarchy(rpa.member_current_location_id) as location_name,\n        concat(\n            im.first_name,\n            '' '',\n            im.middle_name,\n            '' '',\n            im.last_name,\n            ''('',\n            im.unique_health_id,\n            '')''\n        ) as person_name\n    from rch_pregnancy_analytics_details rpa,\n        rch_anc_master anc,\n        dates,\n        rch_pregnancy_registration_det preg,\n        imt_member im\n    where rpa.high_risk_mother = true\n        and (\n            rpa.death_date is null\n            or rpa.death_date >= dates.from_date\n        )\n        and (\n            date_of_delivery is null\n            or date_of_delivery >= dates.from_date\n        )\n        and (\n            (\n                cast(rpa.lmp_date + interval ''90 days'' as date),\n                cast(rpa.lmp_date + interval ''270 days'' as date)\n            ) overlaps (\n                cast(dates.from_date as date),\n                cast(dates.to_date as date)\n            )\n        )\n        and rpa.member_current_location_id in (\n            select id\n            from location_det\n        )\n        and rpa.pregnancy_reg_id = anc.pregnancy_reg_det_id\n        and anc.is_from_web = true\n        and anc.service_date between dates.from_date and dates.to_date\n        and anc.examined_by_gynecologist = true\n        and preg.id = rpa.pregnancy_reg_id\n        and rpa.member_id = im.id\n    order by rpa.pregnancy_reg_id #limit_offset#\n)\nselect ROW_NUMBER() over () + cast(\n        SUBSTRING(\n            ''#limit_offset#'',\n            POSITION(''offset'' in ''#limit_offset#'') + 7\n        ) as int\n    ) as \"Sr No\",\n    location_name as \"Location Name\",\n    person_name as \"Name of Person\",\n    lmp_date as \"LMP Date\",\n    edd_date as \"EDD Date\"\nfrom high_risk_member","queryId":1786,"queryUUID":"2052e55e-ab11-4ae5-b4e6-6bea244054c0","queryParams":"to_month,limit_offset,from_month,location_id"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":""}', 'trimester_pmsma', 'cb494e56-c53a-4c87-a119-7843ce42fc93'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(283, 'WPD(Work Progress - Institutions)', NULL, true, 'DYNAMIC', NULL, '2019-11-22 18:33:38.247', 64189, '2019-03-01 14:02:56.398', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\ndates as(\nselect\n\tto_date\n\t(\n\t\tcase\n\t\twhen ''#from_date#'' = ''null'' then null\n\t\telse ''#from_date#''\n\tend,\n\t''MM/DD/YYYY'') as from_date ,\n\tto_date\n\t(\n\t\tcase\n\t\twhen ''#to_date#'' = ''null'' then null\n\t\telse ''#to_date#''\n\tend,\n\t''MM/DD/YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as too_date )\n, \nmember_det as(\nselect\nimt_member.id,\nimt_member.unique_health_id,\nconcat(imt_member.first_name,''  '',imt_member.middle_name,''  '',imt_member.last_name) as \"Member name\",\nimt_member.mobile_number,\nimt_family.location_id as loc_id,\nimt_family.area_id as area_id,\nwpd.pregnancy_outcome\nfrom\n\thealth_infrastructure_details infra\ninner join rch_wpd_mother_master wpd on\n\tinfra.id = wpd.health_infrastructure_id\ninner join imt_member on imt_member.id=wpd.member_id  \ninner join imt_family on imt_member.family_id=imt_family.family_id\ninner join dates on wpd.created_on between dates.from_date and dates.too_date\nwhere\n\tinfra.location_id = #location_id#\n\tand wpd.is_from_web = true\nand infra.id = #health_infra_id#\n)\n,\nloc as (\nselect\n\tdistinct loc_id\nfrom\n\tmember_det ),\n\t\nloc_det as (\nselect\n\tloc.loc_id,\n\tstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \nfrom\n\tloc,\n\tlocation_master l1,\n\tlocation_hierchy_closer_det lhcd,\n\tlocation_master l2,\n        prefered_language\nwhere\n\tl1.id = loc.loc_id\n\tand lhcd.child_id = l1.id\n\tand l2.id = lhcd.parent_id\ngroup by\n\tloc.loc_id ),\nfhw_det as (\nselect\n\tloc.loc_id,\n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' || ''Contact : '' ||\n\tcase\n\t\twhen u.contact_number is not null then u.contact_number\n\t\telse ''N/A''\n\tend as fhw\nfrom\n\tum_user_location ul,\n\tum_user u,\n\tloc\nwhere\n\tloc.loc_id = ul.loc_id\n\tand u.id = ul.user_id\n\tand u.state = ''ACTIVE''\n\tand ul.state = ''ACTIVE''\n\tand u.role_id = (\n\t\tselect id\n\tfrom\n\t\tum_role_master\n\twhere\n\t\tname = ''FHW'')\ngroup by\n\tloc.loc_id,\n\tul.state,\n\tu.state,\n\tu.first_name,\n\tu.last_name,\n\tu.user_name,\n\tu.contact_number),\nasha_areas as (\n select distinct area_id from member_det\n),\nasha_det as (\nselect\n\tasha_areas.area_id,\n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' || ''Contact : '' ||\n\tcase\n\t\twhen u.contact_number is not null then u.contact_number\n\t\telse ''N/A''\n\tend as asha\nfrom\n\tum_user_location ul,\n\tum_user u,\n\tasha_areas\nwhere\n\tasha_areas.area_id = ul.loc_id\n\tand u.id = ul.user_id\n\tand u.state = ''ACTIVE''\n\tand ul.state = ''ACTIVE''\n\tand u.role_id = (\n\t\tselect id\n\tfrom\n\t\tum_role_master\n\twhere\n\t\tname = ''Asha'')\ngroup by\n\tasha_areas.area_id,\n\tul.state,\n\tu.state,\n\tu.first_name,\n\tu.last_name,\n\tu.user_name,\n\tu.contact_number)\n\t\nselect \nROW_NUMBER() over () as \"Sr No\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.\"Member name\",\nmember_det.mobile_number as \"Phone number\",\ncase\n\t\twhen member_det.pregnancy_outcome is null then ''N/A''\n\t\telse member_det.pregnancy_outcome\n\tend as \"Delivery outcome\",\nloc_det.aoi as \"Location\",\ncase\n\t\twhen fhw_det.fhw is null then ''No FHW Assigned''\n\t\telse fhw_det.fhw\n\tend as \"FHW Details\",\ncase\n\t\twhen asha_det.asha is null then ''No Asha Assigned''\n\t\telse asha_det.asha\n\tend as \"Asha Details\"\t\nfrom member_det \ninner join loc_det on member_det.loc_id = loc_det.loc_id\nleft join fhw_det on member_det.loc_id = fhw_det.loc_id\nleft join asha_det on member_det.area_id =asha_det.area_id #limit_offset#;", "queryId": 730, "fieldName": "tableField", "queryUUID": "2317de6e-1b74-46a2-ba11-e90e383e1a3b", "queryParams": "limit_offset,from_date,to_date,loggedInUserId,location_id,health_infra_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId# )\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 731, "queryUUIDForParam": "1f3e4ba4-009c-44b5-8178-21f0c93eb075"}, {"index": 1, "isHidden": true, "fieldName": "health_infra_id", "fieldType": "text", "queryUUID": null, "displayName": "Health Infrastructure Name", "queryForParam": "select name as health_infra_id from health_infrastructure_details where id = #health_infra_id#", "queryIdForParam": 732, "queryUUIDForParam": "3a8ed233-e942-4b43-b820-f83b6ccca016"}, {"index": 2, "isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(to_date(''#from_date#'',''MM/DD/YYYY''),''DD/MM/YYYY'') as from_date;", "queryIdForParam": 892, "queryUUIDForParam": "8a83e096-b569-4335-8a19-1e6376368d77"}, {"index": 3, "isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(to_date(''#to_date#'',''MM/DD/YYYY''),''DD/MM/YYYY'') as to_date;", "queryIdForParam": 893, "queryUUIDForParam": "32c1ed39-d6af-4989-97d6-9a02b99004f1"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'wpd_ins_progress', '9a8be0eb-256d-417d-a7c7-6009fede3d09'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(305, '2 PNC (Maternal Health Services provided to the mother registered during the year)', NULL, true, 'DYNAMIC', NULL, '2020-05-11 13:08:08.755', 58981, '2019-03-06 15:46:45.239', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 795, "fieldName": "tableField", "queryUUID": "dd631ad6-44fd-44eb-a67b-20cdbe4bfc88", "queryParams": "limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 794, "queryUUIDForParam": "d1bcbfd0-a44d-4b8b-b167-399cbceda3eb"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mtr_hlth_srv_pnc2', '4b0c2afe-435d-443c-b2f7-d55d4cbd6899'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(306, '3 PNC (Maternal Health Services provided to the mother registered during the year)', NULL, true, 'DYNAMIC', NULL, '2020-05-11 13:18:15.039', 58981, '2019-03-06 15:48:07.520', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 797, "fieldName": "tableField", "queryUUID": "9514b25f-c77f-45f6-96f2-e839fb833227", "queryParams": "limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 796, "queryUUIDForParam": "bc00c786-184a-436c-b1f5-f677eb75eab0"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'mtr_hlth_srv_pnc3', '01ebfa12-f5f3-46d0-b747-aa567eb329fc'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(346, 'CHC Infrastructures (Facility Performance)', NULL, true, 'DYNAMIC', NULL, '2020-11-20 13:58:57.286', 60512, '2019-04-10 17:47:25.164', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with prefered_language as (\nselect \tcase \n\t\twhen report_preferred_language = ''EN'' then true  \n\t\telse false \n\tend as is_enlish\nfrom um_user where id = #loggedInUserId# \n), health_infra_ids as(\n\tselect id,name,location_id,address from health_infrastructure_details where location_id in\n\t(select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth <= (case when #depth_flag# = -1 then 0 else 8 end))\n\tand type in (1009,1084)\n\t#limit_offset#\n)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nhealth_infra_ids.name as \"Name\",\ncase when prefered_language.is_enlish then get_location_hierarchy_language_wise(health_infra_ids.location_id, ''EN'')\n\t\t\t\telse get_location_hierarchy(health_infra_ids.location_id) end as \"Location\",\ncase when health_infra_ids.address is not null and health_infra_ids.address !='''' and health_infra_ids.address !=''null'' then health_infra_ids.address else ''N.A'' end as \"Address\"\nfrom health_infra_ids\ninner join prefered_language on true","queryId":954,"fieldName":"tableField","queryUUID":"123dc5f2-63d3-4f2d-bbbe-b265c7c76a0d","queryParams":"depth_flag,limit_offset,loggedInUserId,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"from_date","fieldType":"text","queryUUID":null,"displayName":"From Date","queryUUIDForParam":null},{"isHidden":true,"fieldName":"to_date","fieldType":"text","queryUUID":null,"displayName":"To Date","queryUUIDForParam":null},{"isHidden":true,"fieldName":"depth_flag","fieldType":"text","queryUUID":null,"displayName":"Depth Flag","queryUUIDForParam":"cee7dc0b-310c-47a0-9427-a701022410fd","index":2,"isUrlParam":true,"queryForParam":"","queryIdForParam":""},{"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":953,"queryUUIDForParam":"07b0c91f-5c71-45ba-a7a1-c9ceeddbce3c"}]},"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","isBackButtonRequired":true}', 'chc_infra_fac_perf', '002679d3-b5ec-4612-a566-c587067d053c'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(303, 'Abortion (Maternal Health Services provided to the mother registered during the year)', NULL, true, 'DYNAMIC', NULL, '2020-10-12 21:25:27.095', 58981, '2019-03-06 15:39:45.737', 78434, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"--Abortion (Maternal Health Services provided to the mother registered during the year)\nwith parameters as(\nselect CAST(#location_id# AS INTEGER) as location_id,\nCAST(''#financial_year#'' AS TEXT) as financial_year,\nCAST(''#demographic_location_id#'' AS TEXT) as demographic_group,\n(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language\n),\n member_det as (\n\tselect r.member_id, r.tracking_location_id as loc_id,\n\tr.unique_health_id, r.family_id, r.member_name as name,\n\tto_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd\n\tfrom rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p\n\twhere r.tracking_location_id  = l.child_id \n\tand delivery_outcome in (''ABORTION'', ''SPONT_ABORTION'') and (delivery_out_of_state_govt is false and delivery_out_of_state_pvt is false)\n\tand l.parent_id = p.location_id\n\tand r.reg_service_financial_year = p.financial_year\n\tand (p.demographic_group=''null'' or l.child_loc_demographic_type in \n\t\t( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)\n\t)\n    and r.is_valid_for_tracking_report\n\torder by r.lmp_date\n\t#limit_offset#\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p\n\twhere lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',\n\tcase when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;","queryId":791,"fieldName":"tableField","queryUUID":"d8eb997d-a408-410a-8739-bf299fb76e70","queryParams":"limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id"}],"fieldsContainer":[{"index":0,"isHidden":true,"fieldName":"financial_year","fieldType":"text","queryUUID":null,"displayName":"Year","queryUUIDForParam":null},{"isHidden":true,"fieldName":"demographic_location_id","fieldType":"text","queryUUID":null,"displayName":"Demographic Location","queryUUIDForParam":null},{"index":1,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":790,"queryUUIDForParam":"0066e76d-11b9-4136-bce9-facee1faed12"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'mtr_hlth_srv_abrtion', '6cf37d78-d0fa-4350-a9fd-9f49fb3d0d81'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(308, 'Maternal Deaths (Maternal Health Services provided to the mother registered during the year)', NULL, true, 'DYNAMIC', NULL, '2020-10-24 13:18:37.423', 58981, '2019-03-06 15:50:42.602', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"--Maternal Deaths (Maternal Health Services provided to the mother registered during the year)\nwith parameters as(\nselect CAST(#location_id# AS INTEGER) as location_id,\nCAST(''#financial_year#'' AS TEXT) as financial_year,\nCAST(''#demographic_location_id#'' AS TEXT) as demographic_group,\n(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language\n),\nmember_det as (\n\tselect r.member_id, r.tracking_location_id as loc_id,\n\tr.unique_health_id, r.family_id, \n\tr.member_name as name,\n\tto_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd\n        ,to_char(r.death_date,''DD/MM/YYYY'') as death_date\n\t,to_char(pr.delivery_date,''DD/MM/YYYY'') as delivery_date\n\t,r.maternal_death_type as death_type\n\t from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, rch_pregnancy_registration_det pr,\n\tparameters p\n\twhere r.tracking_location_id  = l.child_id and r.pregnancy_reg_id = pr.id \n\tand maternal_detah\n\tand l.parent_id = p.location_id\n\tand r.reg_service_financial_year = p.financial_year\n\tand (p.demographic_group=''null'' or l.child_loc_demographic_type in \n\t\t( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)\n\t)\n    and r.is_valid_for_tracking_report\n\torder by r.lmp_date\n\t#limit_offset#\n) ,loc_det as (\n\tselect loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p\n\twhere lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id \n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',\n\tcase when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.death_date as \"Death Date\",\nmember_det.death_type as \"Death Type\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\ncase when member_det.delivery_date is null then ''N/A'' else member_det.delivery_date end as \"Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;","queryId":801,"fieldName":"tableField","queryUUID":"03a0ed8e-d739-4f7c-bbb8-ae0e83ebe9ab","queryParams":"limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"financial_year","fieldType":"text","queryUUID":null,"displayName":"Year","queryUUIDForParam":null},{"isHidden":true,"fieldName":"demographic_location_id","fieldType":"text","queryUUID":null,"displayName":"Demographic Location","queryUUIDForParam":null},{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":800,"queryUUIDForParam":"06f03d99-7892-457d-9a44-6d336e1a8626"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","selectedContainer":"tableContainer"}', 'mtr_hlth_srv_mtr_dth', 'c2e157b8-9eb4-40ed-9c99-c48c15e0aa6f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(141, 'DPT 1 given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 11:32:31.693', 57698, '2019-02-04 17:49:39.889', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--DPT 1 given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n years as ( \n\tselect concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, \n\tcast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date\n\tfrom generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc\n), child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.is_valid_for_tracking_report = true\n\tand y.financial_year = ''#financial_year#''\n\tand c.dpt1 is not null\n\tand c.dob between y.from_date and y.too_date\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 236, "fieldName": "tableField", "queryUUID": "1a76b66d-835b-466f-881f-8a91a3eb97b9", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 235, "queryUUIDForParam": "ae55d163-f2be-4a43-a02e-4d591d5c60a0"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "4"}', 'c_dpt_givenh', '47d7f76c-c21b-42a7-b7a7-c2cd4a5fe23c'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(249, 'Missing Delivery - EDD Lapsed (Delivery monitoring of Registered LMP)', NULL, true, 'DYNAMIC', NULL, '2020-07-28 16:28:58.895', 409, '2019-02-19 12:55:50.653', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Missing Delivery - EDD Lapsed (Delivery monitoring of Registered LMP)\nwith parameters as(\nselect CAST(#location_id# AS INTEGER) as location_id,\nto_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_date,\nto_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') + interval ''1 day'' as to_date,\nCAST(''#demographic_location_id#'' AS TEXT) as demographic_group,\n(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language\n), \n member_det as (\n\tselect r.member_id, r.tracking_location_id as loc_id,\n\tr.unique_health_id, r.family_id, \n\tr.member_name as name,\n\tto_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd\n\t--,to_char(r.death_date,''DD/MM/YYYY'') as dod\n\t\n\tfrom rch_pregnancy_analytics_details r\n\t, location_hierchy_closer_det l\n\t, parameters p\t\n\twhere r.tracking_location_id  = l.child_id \n\tand l.parent_id = #location_id#\n\tand r.preg_reg_state in (''PENDING'',''PREGNANT'') \n\tand maternal_detah is false\n\t--and r.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')\n        and r.edd <= current_date \n\tand r.lmp_month_year between p.from_date and p.to_date\n\tand (p.demographic_group=''null'' or l.child_loc_demographic_type in \n\t\t( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)\n\t)\n    and r.is_valid_for_tracking_report = true\n\torder by r.lmp_date\n\t#limit_offset#\n), loc_det as (\n\tselect loc.loc_id, \n        string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi\n\tfrom (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p\n\twhere lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\n--member_det.dod as \"Date of Death\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 632, "fieldName": "tableField", "queryUUID": "631ad36e-fe62-453f-8954-19671210961d", "queryParams": "limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 631, "queryUUIDForParam": "8f2e9174-f20a-4508-a0be-0aaba28eb8c2"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 630, "queryUUIDForParam": "c1f94e49-5e6a-4fdf-b245-94753e483386"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 629, "queryUUIDForParam": "d6dab69f-95f0-40d2-ba5c-15abb4b0fb02"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'missing_del_lmp', '4558a33a-7a82-44a5-a145-564ceeb615eb'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(307, '4 PNC (Maternal Health Services provided to the mother registered during the year)', NULL, true, 'DYNAMIC', NULL, '2020-05-11 13:09:54.725', 58981, '2019-03-06 15:49:15.547', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 799, "fieldName": "tableField", "queryUUID": "823e9e41-ec59-49d9-833a-77baa759ba38", "queryParams": "limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 798, "queryUUIDForParam": "6d7072fa-44d8-4df8-b8f9-0ad9fc473caf"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'mtr_hlth_srv_pnc4', '781235b2-06e6-4121-989d-d7f8b51fd970'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(239, 'FIPV 2 given (Yearly)', NULL, true, 'DYNAMIC', NULL, '2019-04-05 19:16:30.742', 1, '2019-02-18 13:18:08.536', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \nchild_det as (\n\tselect m.id, f.location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f\n\twhere l.child_id = c.f_ipv2_loc and m.id = c.member_id and f.family_id = m.family_id\n\tand l.parent_id = #location_id#\n\tand c.f_ipv2 is not null\n\tgroup by m.id, f.location_id, c.dob, f_ipv2\n\thaving case when extract(month from f_ipv2) > 3 \n\tthen concat(extract(year from f_ipv2), ''-'', extract(year from f_ipv2) + 1)\n\telse concat(extract(year from f_ipv2) - 1, ''-'', extract(year from f_ipv2)) end = \n\t\tcase when #financial_year# is null then \n\t\t\tcase when extract(month from current_date) > 3 \n\t\t\tthen concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)\n\t\t\telse concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end\n\t\telse ''#financial_year#'' end\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 581, "fieldName": "tableField", "queryUUID": "580f0185-22d6-4a3d-ae42-51d0aa4775d3", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": false, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 580, "queryUUIDForParam": "54153e3f-3009-4d9e-ae18-d5412153eab7"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_fipv2_yeardate', '781a2b04-b4d5-4ccf-ad9e-3bdf143656b6'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(309, 'Total Reactive (Report For HbsAg Test In Antenatal Mother During Year)', NULL, true, 'DYNAMIC', NULL, '2019-06-29 05:43:08.826', 58981, '2019-03-06 17:02:40.318', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 803, "fieldName": "tableField", "queryUUID": "a8d90237-30b5-41c3-9880-d9165a0aa591", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 802, "queryUUIDForParam": "9f2b0ccd-da61-42d1-b967-ab9c2720c79b"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mtr_hbsag_reactive', 'f91c9b15-b9ca-4122-9a63-bb7e36d5cd39'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(313, 'Total Pregnant Women Regd. With 0 Child (Mothers Registered With Child Birth Order)', NULL, true, 'DYNAMIC', NULL, '2019-10-05 19:10:43.131', 58981, '2019-03-06 17:58:39.450', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 819, "fieldName": "tableField", "queryUUID": "c2688772-bb61-448c-bacd-b24b83aa710b", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 816, "queryUUIDForParam": "0ae1928c-d5ef-40c8-85ea-8e282c59d585"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year", "queryIdForParam": 818, "queryUUIDForParam": "9b9dd072-9a5c-4773-9c3a-3a5fd458dcc0"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year", "queryIdForParam": 817, "queryUUIDForParam": "86d6c83c-4a47-4334-b5a5-ecdc77f9bc18"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mtr_ordr_reg_0_child', '7e3e2847-162e-48f2-a7f5-2491d6d9b93b'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(316, 'JSY Beneficiaries out of ANC registered(LMP Based JSY Report Of Registered ANCs)', NULL, true, 'DYNAMIC', NULL, '2019-06-29 01:21:08.597', 58981, '2019-03-06 18:54:32.392', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 834, "fieldName": "tableField", "queryUUID": "28aac8e4-3930-4aab-b8cc-0ad2002c7be1", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year", "queryIdForParam": 833, "queryUUIDForParam": "f361a518-57d7-4507-b14d-cffa992f8910"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year", "queryIdForParam": 832, "queryUUIDForParam": "5cb8a420-f4dc-4d40-9475-c2340fff3b4f"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 831, "queryUUIDForParam": "4a8ecc7f-55a1-41d7-ba6b-eeb1e149ee15"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mtr_jsy_rprt_jsy_no', '64aa623a-46d3-4a68-a40c-ef61721d8176'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(317, 'NO Aadhar Id/Reg.no. AND Bank details(LMP Based JSY Report Of Registered ANCs)', NULL, true, 'DYNAMIC', NULL, '2019-06-29 01:17:20.617', 58981, '2019-03-06 19:07:32.334', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 890, "fieldName": "tableField", "queryUUID": "dd81b045-a738-4b4e-a078-92ff07c6f869", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year", "queryIdForParam": 889, "queryUUIDForParam": "492ddd68-6d70-4ea0-a6f8-84f8d2b2143c"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year", "queryIdForParam": 888, "queryUUIDForParam": "6ab3b9e4-df96-4444-b91b-73e73beaae15"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 887, "queryUUIDForParam": "b6d546ef-d860-4f11-a4f9-309b9e010ac8"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mtr_jsy_no_adhr_bnk', '824c388f-2bba-4d3c-8668-01c2e8c7bc1f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(315, 'Delivery before 34 weeks (Report of Antenatal Corticosteroid (ANC))', NULL, true, 'DYNAMIC', NULL, '2021-01-11 14:36:58.896', 58981, '2019-03-06 18:25:55.226', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\nmember_det as (\n\tselect r.member_id, f.location_id as loc_id,\n\tm.unique_health_id, m.family_id, \n\tm.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,\n\tto_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd\n\tfrom rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, imt_family f, rch_pregnancy_registration_det p\n\twhere r.member_id = m.id and r.delivery_location_id  = l.child_id and r.pregnancy_reg_id = p.id and m.family_id = f.family_id\n\tand del_week <= 34\nand delivery_outcome in(''LBIRTH'',''SBIRTH'')\n\tand l.parent_id = #location_id#\n\tand r.date_of_delivery_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date)\n\torder by p.lmp_date\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from member_det\n), loc_det as (\n\tselect loc.loc_id, \n        string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi\n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2,prefered_language\n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;","queryId":827,"fieldName":"tableField","queryUUID":"c56d8cec-da5c-424b-9944-aed1da063faa","queryParams":"limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}],"fieldsContainer":[{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":824,"queryUUIDForParam":"2b93c0a8-d18d-4f1b-b784-f0ab72a34186"},{"isHidden":true,"fieldName":"from_month_year","fieldType":"text","queryUUID":null,"displayName":"From Month","queryForParam":"select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year","queryIdForParam":825,"queryUUIDForParam":"187fbcf5-4b93-45b1-966e-9e0fb9154126"},{"isHidden":true,"fieldName":"to_month_year","fieldType":"text","queryUUID":null,"displayName":"To Month","queryForParam":"select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year","queryIdForParam":826,"queryUUIDForParam":"74380b1f-94c8-4220-a1bb-b2cfc6d237a8"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'mtr_anc_del_b4_34_wk', '029d3780-df1f-4157-9145-0e30c1a79ced'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(318, 'Total Deliveries at Subcentre & Home (Report For Misoprostol Home Delivery and SubCenter Delivery)', NULL, true, 'DYNAMIC', NULL, '2019-04-05 11:15:05.407', 58981, '2019-03-07 11:25:30.741', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 901, "fieldName": "tableField", "queryUUID": "ca3e62ab-9d56-47eb-b2cf-390505381761", "queryParams": "limit_offset,from_date,too_date,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 1, "isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "too_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "isMandatory": false, "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 900, "queryUUIDForParam": "a775d6d5-d8a8-4a80-b4ce-85e105f75e01", "requiredUptoLevel": ""}]}, "isFilterOpen": false, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mtr_miso_sc_home_del', '76f98090-35bf-42c0-b1b9-9b2507cef0c9'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(237, 'Penta 3 given (Yearly)', NULL, true, 'DYNAMIC', NULL, '2019-04-09 13:56:18.925', 1, '2019-02-18 13:14:51.789', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, f.location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f\n\twhere l.child_id = c.penta3_loc and m.id = c.member_id and f.family_id = m.family_id\n\tand l.parent_id = #location_id#\n\tand c.penta3 is not null\n\tgroup by m.id, f.location_id, c.dob, penta3\n\thaving case when extract(month from penta3) > 3 \n\tthen concat(extract(year from penta3), ''-'', extract(year from penta3) + 1)\n\telse concat(extract(year from penta3) - 1, ''-'', extract(year from penta3)) end = \n\t\tcase when #financial_year# is null then \n\t\t\tcase when extract(month from current_date) > 3 \n\t\t\tthen concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)\n\t\t\telse concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end\n\t\telse ''#financial_year#'' end\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 577, "fieldName": "tableField", "queryUUID": "9b6acb68-61fa-49e7-82f9-d8e0f6228bfb", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 576, "queryUUIDForParam": "09165bf6-f24f-4759-9947-a453d005d504"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_penta3_yeardate', '5b6daaad-dd54-4b40-9c40-7d0b87ded515'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(238, 'OPV 3 given (Yearly)', NULL, true, 'DYNAMIC', NULL, '2019-04-09 13:56:19.551', 1, '2019-02-18 13:16:42.117', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, f.location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f\n\twhere l.child_id = c.opv3_loc and m.id = c.member_id and f.family_id = m.family_id\n\tand l.parent_id = #location_id#\n\tand c.opv3 is not null\n\tgroup by m.id, f.location_id, c.dob, opv3\n\thaving case when extract(month from opv3) > 3 \n\tthen concat(extract(year from opv3), ''-'', extract(year from opv3) + 1)\n\telse concat(extract(year from opv3) - 1, ''-'', extract(year from opv3)) end = \n\t\tcase when #financial_year# is null then \n\t\t\tcase when extract(month from current_date) > 3 \n\t\t\tthen concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)\n\t\t\telse concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end\n\t\telse ''#financial_year#'' end\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 579, "fieldName": "tableField", "queryUUID": "6a0e6951-71ac-46dc-9f72-78c1347cd0af", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 578, "queryUUIDForParam": "90896479-5a2e-4637-a87f-3cb19df291fd"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_opv3_yeardate', '1dbdb840-b6ea-4431-a9ce-9bb3834eadd6'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(319, 'Total Deliveries at Subcentre (Report For Misoprostol Home Delivery and SubCenter Delivery)', NULL, true, 'DYNAMIC', NULL, '2019-04-05 11:15:02.037', 58981, '2019-03-07 11:27:45.874', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 903, "fieldName": "tableField", "queryUUID": "3fa7a99d-6615-40ab-9bc0-7e2a4d60e006", "queryParams": "limit_offset,from_date,too_date,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "too_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 902, "queryUUIDForParam": "23684ee4-9010-460d-9974-16c880a354cc"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mtr_miso_sc_del', '05d930dd-451b-4bef-9c6c-4b8804aace5f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(320, 'Total Deliveries at Home (Report For Misoprostol Home Delivery and SubCenter Delivery)', NULL, true, 'DYNAMIC', NULL, '2019-04-05 11:14:58.975', 58981, '2019-03-07 11:29:23.576', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 905, "fieldName": "tableField", "queryUUID": "c7c3b603-1c6a-4bc4-886d-b99d121084ae", "queryParams": "limit_offset,from_date,too_date,loggedInUserId,location_id"}], "fieldsContainer": [{"fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "too_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 904, "queryUUIDForParam": "b4ef0a93-1b5c-4e1e-9d1d-1b859f20161a"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mtr_miso_home_del', '190d143c-4aa4-4def-a05d-a6ede8599f5f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(321, 'ANC-1 (Service provide to pregnant women with lmp)', NULL, true, 'DYNAMIC', NULL, '2019-09-23 16:43:47.496', 409, '2019-03-07 16:01:46.051', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 913, "fieldName": "tableField", "queryUUID": "94df235d-57c2-4db5-b6e7-9ffbbc9a12b6", "queryParams": "limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 911, "queryUUIDForParam": "5f114a41-6e50-4156-83ae-6c382072f087"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 910, "queryUUIDForParam": "1a1626c8-b8ee-42bd-a909-f63a70acd639"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "isMandatory": false, "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 912, "queryUUIDForParam": "4920e113-df34-4604-b0a4-943a264a2c0c", "requiredUptoLevel": ""}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mtr_anc1_with_lmp', '3087f7d7-2ab0-49b9-8f2f-560ff6c532e3'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(325, 'Children Admitted(CMTC/NRC)', NULL, true, 'DYNAMIC', NULL, '2019-08-29 12:29:30.741', 60512, '2019-03-13 15:27:08.111', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 919, "fieldName": "tableField", "queryUUID": "382a6d15-cb79-4fad-aded-7e2915bd1a4f", "queryParams": "limit_offset,from_date,to_date,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 918, "queryUUIDForParam": "07fae664-0bde-4cca-8a7c-c7dc4c3f0a88"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'child_admit_cmtc', 'e0a3c8bd-cde6-48bb-b78d-6bff6f94b634'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(444, 'Maternal and infant death report - cause wise', NULL, true, 'DYNAMIC', NULL, '2020-12-14 19:21:06.967', 66522, '2019-06-26 09:29:35.534', 74841, '{"layout":"dynamicReport1","containers":{"tableContainer":[{"query":"with  counts as (\nselect \nget_location_hierarchy(lh.parent_id) as \"Location\",\nsum(case when death_reason = ''782'' then 1 else 0 end) as \"હેમરેજ (એ.પી.એચ.)\",\nsum(case when death_reason = ''783'' then 1 else 0 end) as \"હેમરેજ (પી.પી.એચ.)\",\nsum(case when death_reason = ''784'' or death_reason = ''871'' then 1 else 0 end) as \"એનેમીયા\",\nsum(case when death_reason = ''785'' then 1 else 0 end) as \"સેપ્સીસ\",\nsum(case when death_reason = ''786'' then 1 else 0 end) as \"ઓબ્સ્ટ્રક્ટેડ લેબર\",\nsum(case when death_reason = ''787'' then 1 else 0 end) as \"માલ પ્રેઝન્ટેશન\",\nsum(case when death_reason = ''788'' then 1 else 0 end) as \"Eclampsia\",\nsum(case when death_reason = ''789'' then 1 else 0 end) as \"Abortion\",\nsum(case when death_reason = ''790'' then 1 else 0 end) as \"સર્જીકલ કોમ્પ્લિકેશન\",\nsum(case when death_reason = ''791'' then 1 else 0 end) as \"બ્લડ ટ્રાન્સફ્યુઝન રિએઅક્શન\",\nsum(case when death_reason = ''792'' then 1 else 0 end) as \"માતા મરણનાં કારણો સિવાયનુ  અન્ય કારણ\",\nsum(case when death_reason = ''793'' then 1 else 0 end) as \"અન્ય\",\n\nsum(case when death_reason = ''853'' then 1 else 0 end) as \"Congenital Heart Disease\",\nsum(case when death_reason = ''849'' or death_reason = ''876'' then 1 else 0 end) as \"Fever\",\nsum(case when death_reason = ''847'' or death_reason =''872'' then 1 else 0 end) as \"asphyxia\",\nsum(case when death_reason = ''848'' then 1 else 0 end) as \"low birth weight/preterm\",\nsum(case when death_reason = ''850'' or death_reason = ''875'' then 1 else 0 end) as \"Diarrhea\",\nsum(case when death_reason = ''851'' or death_reason =''874'' then 1 else 0 end) as \"Pneumonia\",\nsum(case when death_reason = ''852'' then 1 else 0 end) as \"Sepsis\",\nsum(case when death_reason = ''855'' then 1 else 0 end) as \"Hypothermia\",\nsum(case when death_reason = ''856'' then 1 else 0 end) as \"Milk Aspiration\",\nsum(case when death_reason = ''857'' then 1 else 0 end) as \"SIDS\",\nsum(case when death_reason = ''858'' then 1 else 0 end) as \"Social Neglect\",\n\nsum(case when death_reason = ''1155'' then 1 else 0 end) as \"Hypertensive disorders in pregnancy, birth and Puperium\",\nsum(case when death_reason = ''1156'' then 1 else 0 end) as \"Hypertensive Disorder in pregnancy - Pre-eclampsia\",\nsum(case when death_reason = ''1157'' then 1 else 0 end) as \"Complication of Anasthesia\",\nsum(case when death_reason = ''1158'' then 1 else 0 end) as \"Other Obstetric Complications\",\nsum(case when death_reason = ''1159'' then 1 else 0 end) as \"Sickle Cell Anaemia\",\nsum(case when death_reason = ''1160'' then 1 else 0 end) as \"Indirect Causes - Non Obstetric Complication- Cardiac Disorders\",\nsum(case when death_reason = ''1161'' then 1 else 0 end) as \"Liver Disorders\",\nsum(case when death_reason = ''1162'' then 1 else 0 end) as \"Respiratory Disorders\",\nsum(case when death_reason = ''1163'' then 1 else 0 end) as \"Renal Disorders\",\nsum(case when death_reason = ''1164'' then 1 else 0 end) as \"Endocrinal Disorders\",\nsum(case when death_reason = ''1165'' then 1 else 0 end) as \"Neurolgical Disorders\",\nsum(case when death_reason = ''1166'' then 1 else 0 end) as \"Indirect Cause - Non Obstetric Causes- Infections / infestations\",\nsum(case when death_reason = ''1167'' then 1 else 0 end) as \"Unspecified Maternal Death\",\nsum(case when death_reason = ''1168'' then 1 else 0 end) as \"Coincidental / incidental causes (due to external causes) (Accidental injuries, Burns, Suicide)\",\n\nsum(case when death_reason = ''873'' then 1 else 0 end) as \"Low Birth Weight (LBW)\",\nsum(case when death_reason = ''877'' then 1 else 0 end) as \"Measels\",\n\nsum(case when death_reason = ''-1'' or death_reason= ''878'' then 1 else 0 end ) as \"Other\",\nsum(case when death_reason = ''NONE'' or death_reason is null then 1 else 0 end) as \"None\"\nfrom rch_member_death_deatil mdd ,location_hierchy_closer_det lh \nwhere lh.child_id = mdd.location_id and death_reason != ''1021''  -- for rejected\nand lh.parent_id in (select child_id from location_hierchy_closer_det lhcd where lhcd.parent_id=#location_id# and depth = 1)\ngroup by lh.parent_id)\nselect * from counts\nunion all \nselect \n''Total'' as \"Location\",\nsum(\"હેમરેજ (એ.પી.એચ.)\"),\nsum(\"હેમરેજ (પી.પી.એચ.)\"),\nsum(\"એનેમીયા\"),\nsum(\"સેપ્સીસ\"),\nsum(\"ઓબ્સ્ટ્રક્ટેડ લેબર\"),\nsum(\"માલ પ્રેઝન્ટેશન\"),\nsum(\"Eclampsia\"),\nsum(\"Abortion\"),\nsum(\"સર્જીકલ કોમ્પ્લિકેશન\"),\nsum(\"બ્લડ ટ્રાન્સફ્યુઝન રિએઅક્શન\"),\nsum(\"માતા મરણનાં કારણો સિવાયનુ  અન્ય કારણ\"),\nsum(\"અન્ય\"),\nsum(\"Congenital Heart Disease\"),\nsum(\"Fever\"),\nsum(\"asphyxia\"),\nsum(\"low birth weight/preterm\"),\nsum(\"Diarrhea\"),\nsum(\"Pneumonia\"),\nsum(\"Sepsis\"),\nsum(\"Hypothermia\"),\nsum(\"Milk Aspiration\"),\nsum(\"SIDS\"),\nsum(\"Social Neglect\"),\nsum(\"Hypertensive disorders in pregnancy, birth and Puperium\"),\nsum(\"Hypertensive Disorder in pregnancy - Pre-eclampsia\"),\nsum(\"Complication of Anasthesia\"),\nsum(\"Other Obstetric Complications\"),\nsum(\"Sickle Cell Anaemia\"),\nsum(\"Indirect Causes - Non Obstetric Complication- Cardiac Disorders\"),\nsum(\"Liver Disorders\"),\nsum(\"Respiratory Disorders\"),\nsum(\"Renal Disorders\"),\nsum(\"Endocrinal Disorders\"),\nsum(\"Neurolgical Disorders\"),\nsum(\"Indirect Cause - Non Obstetric Causes- Infections / infestations\"),\nsum(\"Unspecified Maternal Death\"),\nsum(\"Coincidental / incidental causes (due to external causes) (Accidental injuries, Burns, Suicide)\"),\nsum(\"Low Birth Weight (LBW)\"),\nsum(\"Measels\"),\nsum(\"Other\"),\nsum(\"None\")\nfrom counts;","queryId":1178,"fieldName":"tableField","queryUUID":"546fb4da-25c5-466f-a2bf-e71747b4353d","queryParams":"location_id"}],"fieldsContainer":[{"fieldName":"location_id","fieldType":"location","queryUUID":null,"displayName":"Location","fetchUptoLevel":"6","queryUUIDForParam":null,"requiredUptoLevel":"1","fetchAccordingToUserAoi":true}]},"showDateAsOn":false,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","selectedContainer":"tableContainer"}', 'cause_wise_death', 'fa3ff446-91ef-494e-97ae-5ccdda9a9d69'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(326, 'Pediatrician Visited (CMTC/NRC Facility Monitoring)', NULL, true, 'DYNAMIC', NULL, '2019-08-29 12:32:07.755', 60512, '2019-03-13 15:29:59.516', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 921, "fieldName": "tableField", "queryUUID": "150dd8c9-63c6-4e83-8554-18aacfbee7b4", "queryParams": "limit_offset,from_date,to_date,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 920, "queryUUIDForParam": "f24df239-2e46-4b68-a829-7aca7b190f0a"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ped_visit_cmtc', '15e45926-2185-4057-93a9-0087a36b57e2'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(328, 'Death List (CMTC/NRC)', NULL, true, 'DYNAMIC', NULL, '2020-09-04 18:03:19.138', 60512, '2019-03-13 16:08:04.958', 60512, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with prefered_language as(\nselect (case \nwhen prefered_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_ids as(\n\tselect distinct child_cmtc_nrc_admission_detail.child_id,child_cmtc_nrc_admission_detail.screening_center \n\tfrom health_infrastructure_details\n\tinner join child_cmtc_nrc_admission_detail on health_infrastructure_details.id = child_cmtc_nrc_admission_detail.screening_center\n\tinner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id\n\twhere health_infrastructure_details.location_id in (\n\t\tselect child_id from location_hierchy_closer_det where parent_id = #location_id#\n\t) and child_cmtc_nrc_admission_detail.admission_date between \n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) \n\tand \n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''\n\tand child_cmtc_nrc_screening_detail.state=''DEATH''\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\", \nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nimt_member.dob as \"Child DOB\",\nhealth_infrastructure_details.name as \"Health Infrastructure\"\nfrom child_ids\ninner join imt_member on imt_member.id = child_ids.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on child_ids.screening_center = health_infrastructure_details.id","queryId":925,"fieldName":"tableField","queryUUID":"5be8b47f-0621-4642-84cd-90767c6ad258","queryParams":"limit_offset,from_date,to_date,loggedInUserId,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"from_date","fieldType":"text","queryUUID":null,"displayName":"From Date","queryUUIDForParam":null},{"isHidden":true,"fieldName":"to_date","fieldType":"text","queryUUID":null,"displayName":"To Date","queryUUIDForParam":null},{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":924,"queryUUIDForParam":"537f3e8d-8213-4a66-a454-c76547aaf927"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'death_list_cmtc', '0f7cc672-7e9d-4966-84f8-43e5acdbb4f2'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(142, 'Penta 1 given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-20 18:34:50.667', 57698, '2019-02-04 17:59:45.692', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Penta 1 given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n years as ( \n\tselect concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, \n\tcast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date\n\tfrom generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc\n), child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.is_valid_for_tracking_report = true\n\tand y.financial_year = ''#financial_year#''\n\tand c.penta1 is not null\n\tand c.dob between y.from_date and y.too_date\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 237, "fieldName": "tableField", "queryUUID": "4320db7b-4345-4f9e-ac98-2595c4ffcbf2", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 238, "queryUUIDForParam": "e4c7838b-080f-43e6-8e69-85d7b94f560b"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_penta1_given', '51065e18-a009-4a44-b056-82db66ba9cdc'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(174, 'Fully Immunized Children(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 16:47:34.732', 1, '2019-02-11 18:01:05.744', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Fully Immunized Children(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.is_valid_for_tracking_report = true\n\tand c.fully_immunization_in_number_of_month <= 12\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 305, "fieldName": "tableField", "queryUUID": "edce8d70-0518-4d13-8014-f43a2c8253be", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "isUrlParam": false, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 304, "queryUUIDForParam": "49219aa8-0722-4005-aa1b-dd9ccd015eac"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_fully_immunized', 'd11afe88-cbe5-4096-a4eb-2001237792d5'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(493, 'Mild Anemia (Anemia Status of Registered ANC)', NULL, true, 'DYNAMIC', NULL, '2019-10-06 18:33:07.649', 60512, '2019-08-19 17:08:40.398', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1336, "fieldName": "tableField", "queryUUID": "39326e91-e187-41f2-8d03-9b1d157a5f41", "queryParams": "to_month,limit_offset,demographic_location_id,from_month,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month#'' as date),''MM/YYYY'') as from_month", "queryIdForParam": 1334, "queryUUIDForParam": "e342d88b-0a16-45b3-b048-c8d3e40f975c"}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month#'' as date),''MM/YYYY'') as to_month", "queryIdForParam": 1335, "queryUUIDForParam": "e5c4d6f0-36c2-42b9-b7fe-2f0d43450c95"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1333, "queryUUIDForParam": "77f1dd8c-dc64-4901-aca4-289331aee33d"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mild_anemia_anc_reg', '3c4d571f-a936-408e-ac9e-25ad631d5950'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(329, 'Discharge LIst(CMTC/NRC)', NULL, true, 'DYNAMIC', NULL, '2019-08-29 12:34:18.971', 60512, '2019-03-13 16:40:24.847', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen prefered_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_ids as(\n\tselect distinct child_cmtc_nrc_discharge_detail.child_id,child_cmtc_nrc_admission_detail.screening_center \n\tfrom health_infrastructure_details\n\tinner join child_cmtc_nrc_admission_detail on health_infrastructure_details.id = child_cmtc_nrc_admission_detail.screening_center\n\tinner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id\n\tinner join child_cmtc_nrc_discharge_detail on child_cmtc_nrc_discharge_detail.id = child_cmtc_nrc_screening_detail.discharge_id\n\twhere health_infrastructure_details.location_id in (\n\t\tselect child_id from location_hierchy_closer_det where parent_id = #location_id#\n\t) and child_cmtc_nrc_admission_detail.admission_date between \n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) \n\tand \n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\", \nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nimt_member.dob as \"Child DOB\",\nhealth_infrastructure_details.name as \"Health Infrastructure\"\nfrom child_ids\ninner join imt_member on imt_member.id = child_ids.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on child_ids.screening_center = health_infrastructure_details.id", "queryId": 927, "fieldName": "tableField", "queryUUID": "dbde8b17-ad5d-4e75-b696-1be5efeaf6bd", "queryParams": "limit_offset,from_date,to_date,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 926, "queryUUIDForParam": "4db38ee5-dd25-4928-910b-96d7628e8cb9"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'discharge_cmtc', '5d83a0f4-6e69-47e6-b4bb-a50f3ddbe0fd'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(330, 'Medical Transfer (CMTC/NRC Facility Monitoring)', NULL, true, 'DYNAMIC', NULL, '2019-08-29 12:34:45.648', 60512, '2019-03-13 16:47:15.488', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen prefered_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_ids as(\n\tselect distinct child_cmtc_nrc_discharge_detail.child_id,child_cmtc_nrc_admission_detail.screening_center \n\tfrom health_infrastructure_details\n\tinner join child_cmtc_nrc_admission_detail on health_infrastructure_details.id = child_cmtc_nrc_admission_detail.screening_center\n\tinner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id\n\tinner join child_cmtc_nrc_discharge_detail on child_cmtc_nrc_discharge_detail.id = child_cmtc_nrc_screening_detail.discharge_id\n\twhere health_infrastructure_details.location_id in (\n\t\tselect child_id from location_hierchy_closer_det where parent_id = #location_id#\n\t) and child_cmtc_nrc_admission_detail.admission_date between \n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) \n\tand \n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''\n\tand child_cmtc_nrc_discharge_detail.higher_facility_referral_place is not null\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\", \nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nimt_member.dob as \"Child DOB\",\nhealth_infrastructure_details.name as \"Health Infrastructure\"\nfrom child_ids\ninner join imt_member on imt_member.id = child_ids.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on child_ids.screening_center = health_infrastructure_details.id", "queryId": 929, "fieldName": "tableField", "queryUUID": "1b9181a8-2d38-437f-adaf-8b1657f24a0c", "queryParams": "limit_offset,from_date,to_date,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 928, "queryUUIDForParam": "897f5c8a-e2a2-4174-b3cf-66a82e490c8c"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'medical_t_cmtc', 'de58967e-26bc-4da3-9e38-af6cff328e36'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(331, 'Follow Up 1 List (CMTC/NRC Follow Up Visit Report)', NULL, true, 'DYNAMIC', NULL, '2019-09-04 18:52:11.032', 60512, '2019-03-14 12:12:51.755', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 931, "fieldName": "tableField", "queryUUID": "f4f99ad5-2db3-466f-9919-e013086908ac", "queryParams": "limit_offset,from_date,to_date,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 930, "queryUUIDForParam": "4e42e664-c99a-4209-8cd4-96e4caa0fd42"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'followup_1_cmtc', '942f99a4-a5c2-403c-8245-1c4d587bb2c5'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(332, 'Follow Up 2 List(CMTC/NRC Follow Up Visit Report)', NULL, true, 'DYNAMIC', NULL, '2019-09-04 18:52:35.850', 60512, '2019-03-14 12:14:29.423', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 933, "fieldName": "tableField", "queryUUID": "e18ba2b0-4aae-45c3-b7c8-0071d3b209a9", "queryParams": "limit_offset,from_date,to_date,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 932, "queryUUIDForParam": "2b7cd3b5-bba8-40d4-bd93-66b587154d5c"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'followup_2_cmtc', '5929aefb-b41d-40be-a10c-4fba7385d249'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(225, 'Penta 3 given (Child Health Services Provided During The Year (Monthly))', NULL, true, 'DYNAMIC', NULL, '2020-06-25 14:43:10.539', 1, '2019-02-14 16:12:09.120', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 539, "fieldName": "tableField", "queryUUID": "1c69d752-ebe4-4cce-9a8f-b20edd69a5e3", "queryParams": ""}], "fieldsContainer": [{"fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "demographic_location_id", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 538, "queryUUIDForParam": "b6346a0f-16af-43a6-965e-06bf30840b47"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 537, "queryUUIDForParam": "6758e082-13cb-4163-a216-e3ff0f377bc5"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 536, "queryUUIDForParam": "e05a738e-3b31-4039-9ce7-3bb4c0cebcc8"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_penta3_year_wise', 'de9ba3e4-a8bc-49bc-b45b-116100fe11d9'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(333, 'Follow Up 3 List (CMTC/NRC Follow Up Visit Report)', NULL, true, 'DYNAMIC', NULL, '2019-09-04 18:53:04.946', 60512, '2019-03-14 12:15:47.211', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 935, "fieldName": "tableField", "queryUUID": "1699a24c-7de7-481d-89a9-96bb6f8a0c3e", "queryParams": "limit_offset,from_date,to_date,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "isMandatory": false, "queryUUIDForParam": null, "requiredUptoLevel": ""}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 934, "queryUUIDForParam": "605782de-8b61-4aa7-b9e2-ddad31fd6662"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'followup_3_cmtc', '9d61b739-d781-4952-a036-dea7ea4405db'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(334, 'Weight gain more than 8gm/kg/day (CMTC/NRC Follow Up Visit Report)', NULL, true, 'DYNAMIC', NULL, '2019-09-04 18:54:47.145', 60512, '2019-03-14 19:30:37.343', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 937, "fieldName": "tableField", "queryUUID": "04571e52-2a31-4846-a32c-98eaa7cf26c7", "queryParams": "limit_offset,from_date,to_date,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 936, "queryUUIDForParam": "5049c514-1f20-4210-b176-dcfbdf81c557"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'weight_8_cmtc', '9720aa11-c355-4510-aa27-c9995e66431e'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(335, 'Weight Gain More than 5gm/kg/day (CMTC/NRC Facility Monitoring)', NULL, true, 'DYNAMIC', NULL, '2019-09-04 18:54:07.216', 60512, '2019-03-14 19:43:53.405', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen prefered_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n admitted_child_ids as(\n\tselect distinct\n\tchild_cmtc_nrc_admission_detail.id\n\tfrom health_infrastructure_details\n\tinner join child_cmtc_nrc_admission_detail on health_infrastructure_details.id = child_cmtc_nrc_admission_detail.screening_center\n\tinner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id\n\twhere health_infrastructure_details.location_id in (\n\t\tselect child_id from location_hierchy_closer_det where parent_id = #location_id#\n\t) and child_cmtc_nrc_admission_detail.admission_date between \n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) \n\tand \n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''\n\t#limit_offset#\n),det as (\n\tselect child_cmtc_nrc_admission_detail.child_id,\n\tavg(child_cmtc_nrc_weight_detail.weight) as avg_wt,\n\tchild_cmtc_nrc_admission_detail.screening_center\n\tfrom admitted_child_ids\n\tinner join child_cmtc_nrc_admission_detail on admitted_child_ids.id = child_cmtc_nrc_admission_detail.id\n\tinner join child_cmtc_nrc_weight_detail on child_cmtc_nrc_weight_detail.admission_id = child_cmtc_nrc_admission_detail.id\n\tgroup by child_cmtc_nrc_admission_detail.child_id,child_cmtc_nrc_admission_detail.screening_center\n\thaving avg(child_cmtc_nrc_weight_detail.weight)>5\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\", \nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nimt_member.dob as \"Child DOB\",\nhealth_infrastructure_details.name as \"Health Infrastructure\"\nfrom det\ninner join imt_member on imt_member.id = det.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on det.screening_center = health_infrastructure_details.id", "queryId": 939, "fieldName": "tableField", "queryUUID": "ae2fc247-285f-4674-bce2-acc54586e300", "queryParams": "limit_offset,from_date,to_date,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 938, "queryUUIDForParam": "2766a380-821d-4c9d-b285-f72e84b94586"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'weight_5_cmtc', 'ba33a138-97f7-4277-90c0-37716f329fa5'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(495, 'Severe Anemia (Anemia Status of Registered ANC)', NULL, true, 'DYNAMIC', NULL, '2019-10-06 18:32:04.015', 60512, '2019-08-19 17:12:51.782', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1344, "fieldName": "tableField", "queryUUID": "a9ed28d5-5543-4088-a52a-f85ab18b86c8", "queryParams": "to_month,limit_offset,demographic_location_id,from_month,location_id"}], "fieldsContainer": [{"index": 3, "isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Type", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month#'' as date),''MM/YYYY'') as to_month", "queryIdForParam": 1343, "queryUUIDForParam": "d81ff282-997e-445e-a81d-3a9bd9e6ec6c"}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": false, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1341, "queryUUIDForParam": "fda2ee4b-dd6d-4cad-b440-30151ee3d5bf"}, {"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month#'' as date),''MM/YYYY'') as from_month", "queryIdForParam": 1342, "queryUUIDForParam": "c18bd0d2-2f24-45ce-bc5f-d9bd7d4a37d0"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'severe_anemia_anc', '64290885-4aa3-4728-a696-d646691c99fd'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(579, 'IDSP2 Cluster Survey Member Test Detail', NULL, true, 'DYNAMIC', NULL, '2020-09-24 14:29:11.625', 74841, '2020-04-09 20:55:05.984', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \nparameters as (\n\tselect distinct (case when #location_id# is null then 2\n\t\telse CAST(#location_id# AS INTEGER) end) as location_id,\n\t(case when #location_id# is null then ''null'' else CAST(''#demographic_location_id#'' AS TEXT) end) as demographic_group\n\t,(case when ''#from_date#'' = ''null'' then current_date else  to_date(''#from_date#'',''MM-DD-YYYY'') end) as from_date\n\t,(case when ''#to_date#'' = ''null'' then current_date  else to_date(''#to_date#'',''MM-DD-YYYY'') end) as to_date\n), loc_det as (\n    select vlc.child_id \n    from parameters p \n    cross join vw_location_closure_det_by_parent_location_depth vlc\n    where vlc.location_id=p.location_id and vlc.depth=1 \n    and (p.demographic_group=''null'' or vlc.child_demographic_type in \n    (select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)\n    )\n), opd_detail as (\nselect idsp2.*,\ncase when roltd.id is not null then true else false end as sent_for_test\nfrom parameters p\ncross join idsp_2_member_screening_details idsp2\ninner join rch_opd_member_registration rom on rom.reference_id = idsp2.id\ninner join rch_opd_member_master opd_master on opd_master.opd_member_registration_id = rom.id\nleft join rch_opd_lab_test_details roltd\non roltd.lab_test_id = (select id from rch_opd_lab_test_master where name = ''COVID-19'') \nand roltd.opd_member_master_id = opd_master.id\nleft join covid19_lab_test_recommendation cltr on cltr.opd_lab_test_id = roltd.id\nleft join covid19_admission_detail cad on cad.covid19_lab_test_recommendation_id = cltr.id\nleft join covid19_lab_test_detail cltd on cltd.id = cad.last_lab_test_id\nwhere\n\tidsp2.location_id in (select distinct child_id from loc_det) \n\n    and cast(rom.registration_date as date) between p.from_date and p.to_date\n     \n    and reference_type = ''IDSP_REF_2'' \n    \n    and \n\tcase \n\t\twhen #filter_type# = ''sent for test'' then  roltd.id is not null \n\t\twhen #filter_type# = ''mo'' then true\t\t\n\t\twhen #filter_type# = ''Decision by district'' then cltr.lab_test_status is not null and cltr.lab_test_status != ''PENDING'' \n\t\twhen #filter_type# = ''Sent for admission'' then cltr.refer_health_infra_id is not null \n\t\twhen #filter_type# = ''Samples Collected for testing'' \n\t\t\tthen cad.status is not null and (cad.status != ''SUSPECT'' or cltd.lab_collection_on is not null) \n\t\twhen #filter_type# = ''Samples tested'' \n\t\t\tthen cad.status is not null and (cad.status != ''SUSPECT'' or cltd.lab_result_entry_on is not null)\t\n\t\t\n\t\telse false end \norder by idsp2.member_id \n    #limit_offset#\n)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nconcat( im.first_name, '' '', im.middle_name, '' '', im.last_name, ''('' , im.unique_health_id , '')'', ''('' , im.family_id , '')'') as \"Member Details\", \nget_location_hierarchy(idsp2.location_id) as \"Location\",\ncase when idsp2.any_illness_or_discomfort = 1 then true else false end as \"Any illness or discomfort\",\ncase when idsp2.symptoms ilike ''%FEVER%'' then true else false end as \"fever\",\ncase when idsp2.symptoms ilike ''%COUGH%'' then true else false end as \"Cough\",\ncase when idsp2.symptoms ilike ''%BREATHING_DIFFICULTY%'' then true else false end as \"Breathing difficulty\",\ncase when (idsp2.symptoms ilike ''%FEVER%'' and (idsp2.symptoms ilike ''%COUGH%'' or idsp2.symptoms ilike ''%BREATHING_DIFFICULTY%'')) then true else false end as \"Fever with cough or breathing difficulty\",\ncase when (idsp2.symptoms ilike ''%FEVER%'' OR idsp2.symptoms ilike ''%COUGH%'' or idsp2.symptoms ilike ''%BREATHING_DIFFICULTY%'') then true else false end as \"Symptomic\",\ncase when (idsp2.treatment_started = 1) then true else false end as \"Treatment started\",\ncase when idsp2.member_id is not null then true else false end as \"Examined by mo\",\ncase when sent_for_test then sent_for_test else false end as \"Sent for test\"\nfrom opd_detail idsp2\nleft join imt_member im on im.id = idsp2.member_id","queryId":1585,"fieldName":"tableField","queryUUID":"1f011db8-a52f-454e-822f-e4178a3c612b","queryParams":"limit_offset,demographic_location_id,from_date,to_date,filter_type,loggedInUserId,location_id"}],"fieldsContainer":[{"index":1,"isHidden":true,"fieldName":"filter_type","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"Filter","isMandatory":true,"queryUUIDForParam":null,"requiredUptoLevel":1},{"index":2,"isHidden":true,"fieldName":"demographic_location_id","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"Demographic Location","isMandatory":true,"queryUUIDForParam":null,"requiredUptoLevel":1},{"index":4,"isHidden":true,"fieldName":"to_date","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"To Date","isMandatory":true,"queryForParam":"select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date","queryIdForParam":1584,"queryUUIDForParam":"b67ea350-5e9d-4a60-b609-1a3ec771d7ec","requiredUptoLevel":1},{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"Location","isMandatory":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1582,"queryUUIDForParam":"103022f9-50af-45d2-8468-28ca737cb5d8","requiredUptoLevel":1},{"index":3,"isHidden":true,"fieldName":"from_date","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"From Date","isMandatory":true,"queryForParam":"select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date","queryIdForParam":1583,"queryUUIDForParam":"4704a19d-8deb-4845-9485-e456639f5f78","requiredUptoLevel":1}]},"isFilterOpen":false,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'idsp2_survay_test', '847166f1-014b-4a89-b368-b539d8200124'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(137, 'Children Registered from 1st April(Services Provided to the Children Registered during the Year ( 1 to 6 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 11:55:34.410', 57698, '2019-02-04 13:11:42.682', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Children Registered from 1st April(Services Provided to the Children Registered during the Year ( 1 to 6 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n years as ( \n\tselect concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, \n\tcast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date\n\tfrom generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc\n), child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand c.is_valid_for_tracking_report = true\n\tand l.parent_id = #location_id#\n\tand y.financial_year = ''#financial_year#''\n\tand c.member_id is not null\n\tand c.dob between y.from_date and y.too_date\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 228, "fieldName": "tableField", "queryUUID": "66a1c2fd-34a7-4383-9476-42d538abfcce", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Financial Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 227, "queryUUIDForParam": "2228c4ca-6ae0-4492-8583-732b05ed983b"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_reg_from_april1', '52c1fe7f-fa53-4749-82b7-0e0a07993e28'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(145, 'DPT 2 given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 11:58:26.988', 1, '2019-02-05 11:50:49.660', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--DPT 2 given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n years as ( \n\tselect concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, \n\tcast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date\n\tfrom generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc\n), child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand y.financial_year = ''#financial_year#''\n\tand c.dpt2 is not null\n    and c.is_valid_for_tracking_report = true\n\tand c.dob between y.from_date and y.too_date\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 244, "fieldName": "tableField", "queryUUID": "b2106c2f-34cc-4152-b0cc-dfd1888baf7e", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": false, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 243, "queryUUIDForParam": "54d057b9-129e-4cab-8a89-47a2ffe0ccaf"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_dpt2_given', 'd984f04a-c2dd-4522-b94b-88521570bc7d'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(236, 'OPV 2 given (Yearly)', NULL, true, 'DYNAMIC', NULL, '2019-04-09 13:56:20.336', 1, '2019-02-18 13:13:17.582', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, f.location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f\n\twhere l.child_id = c.opv2_loc and m.id = c.member_id and f.family_id = m.family_id\n\tand l.parent_id = #location_id#\n\tand c.opv2 is not null\n\tgroup by m.id, f.location_id, c.dob, opv2\n\thaving case when extract(month from opv2) > 3 \n\tthen concat(extract(year from opv2), ''-'', extract(year from opv2) + 1)\n\telse concat(extract(year from opv2) - 1, ''-'', extract(year from opv2)) end = \n\t\tcase when #financial_year# is null then \n\t\t\tcase when extract(month from current_date) > 3 \n\t\t\tthen concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)\n\t\t\telse concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end\n\t\telse ''#financial_year#'' end\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 575, "fieldName": "tableField", "queryUUID": "3616187f-1ee2-4de0-bafc-a3f2994a6a25", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 574, "queryUUIDForParam": "e01c36e0-49dd-46db-8f68-9fead02e0b9b"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_opv2_yeardate', '343983d9-0f12-4c9c-bb50-109bc93182f5'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(21, 'Training Pending Users', NULL, true, 'DYNAMIC', NULL, '2020-10-26 10:39:37.985', 1027, '2018-04-26 17:47:54.786', 74841, '{"layout":"dynamicReport1","containers":{"tableContainer":[{"query":"with location_det as(\nselect child_id as loc_id from location_hierchy_closer_det  \nwhere parent_id in (select distinct case when #location_id# is not null then #location_id# else  loc_id end from um_user_location where user_id = #loggedInUserId# and state = ''ACTIVE'')\n),users AS (\nSELECT tcrr.role_id, tcrr.course_id, uu.id,tr_course_master.module_id,\n\tconcat(uu.first_name,'' '',uu.last_name) as FullName, tr_course_master.course_name as courseName, urm.name as roleName\n\tFROM \n\ttr_course_master\n\tinner join tr_course_role_rel tcrr on tcrr.course_id = tr_course_master.course_id and tr_course_master.course_state = ''ACTIVE''\n\tINNER JOIN um_user uu ON uu.role_id = tcrr.role_id and uu.state = ''ACTIVE''\n\tinner join um_user_location ul on ul.state = ''ACTIVE'' and ul.user_id = uu.id\n       \tinner join location_det ld on ld.loc_id = ul.loc_id\n     \tinner join um_role_master urm on urm.id = uu.role_id\n\n\twhere \tuu.role_id=#role_id# and tr_course_master.course_id =#course_id#\n\n),totalUser as \n(select distinct on (u.id) id, FullName, courseName, roleName from users u)\n,scheduled as (\n\t\tselect us.id ,us.course_id,us.role_id from tr_training_master tr\n\t\tinner join tr_training_course_rel tcr on tr.training_id = tcr.training_id\n                 inner join (select * from tr_training_attendee_rel union select * from tr_training_additional_attendee_rel) r \n                 on tr.training_id = r.training_id \n\t         right join users us on us.id = r.attendee_id and us.course_id = tcr.course_id\n                 where (tr.expiration_date >= current_date) and tr.training_state = ''DRAFT''\n),practiced as (\n\tSELECT us.id, us.role_id, us.course_id from tr_certificate_master tcm \n\tINNER JOIN users us on us.id = tcm.user_id and tcm.course_id = us.course_id\n\tinner join field_value_master fvm on fvm.id = us.module_id\n\tleft join user_form_access ufa on ufa.form_code = fvm.field_value and ufa.user_id = us.id\n\twhere tcm.certificate_type = ''COURSECOMPLETION'' and us.course_id in (1,7,10,11)\n\tand ufa.form_code is null\n),production as (\n\tSELECT us.id id, us.role_id, us.course_id from tr_certificate_master tcm \n\tINNER JOIN users us on us.id = tcm.user_id and tcm.course_id = us.course_id\n\twhere tcm.certificate_type = ''COURSECOMPLETION'' and us.course_id not in (1,7,10,11)\n\tunion all\n\tSELECT us.id id, us.role_id, us.course_id from tr_certificate_master tcm \n\tINNER JOIN users us on us.id = tcm.user_id and tcm.course_id = us.course_id\n\tinner join field_value_master fvm on fvm.id = us.module_id\n\tinner join user_form_access ufa on ufa.form_code = fvm.field_value and ufa.user_id = us.id\n\twhere tcm.certificate_type = ''COURSECOMPLETION'' and us.course_id in (1,7,10,11) and ufa.state=''MOVE_TO_PRODUCTION''\n), pending as (\n\tselect * from scheduled \n\tunion all \n\tselect * from practiced \n\tunion all\n\tselect * from production\n)\nselect ROW_NUMBER() over() as \"Sr. No.\", fullName as \"Full Name\", courseName as \"Course Name\", roleName as \"Role\" from totalUser tu where tu.id not in (select id from pending )","queryId":30,"fieldName":"tableField","queryUUID":"75282a2a-df03-47a3-b610-d59189836bea","queryParams":"course_id,role_id,loggedInUserId,location_id"}],"fieldsContainer":[{"index":0,"isHidden":true,"fieldName":"role_id","fieldType":"text","queryUUID":null,"displayName":"Role","queryForParam":"select name as \"role_id\" from um_role_master where id=#role_id#","queryIdForParam":485,"queryUUIDForParam":"d4fe83c7-5add-419d-b71e-eb88fc9d99d7"},{"index":1,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"select name as location_id from location_master  where id = #location_id#","queryIdForParam":487,"queryUUIDForParam":"7271576a-4815-4889-b713-a603ea06cb1b"},{"index":2,"isHidden":true,"fieldName":"course_id","fieldType":"text","queryUUID":null,"displayName":"Course","queryForParam":"select course_name as course_id from tr_course_master  where course_id=#course_id#","queryIdForParam":486,"queryUUIDForParam":"d23e6a5e-cf2f-4fbc-999c-08e5e138b5cc"}]},"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","selectedContainer":"tableContainer","isBackButtonRequired":true}', 'tr_pending', '4f8a5cbf-7038-43d4-b80f-cda994fe0b3c'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(205, 'Children with Congenital cataract Birth defects(State Level Monthly Compilation Sheet for Screening of Birth Defects)', NULL, true, 'DYNAMIC', NULL, '2020-12-14 17:52:15.091', 1, '2019-02-14 00:41:48.275', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"--Children with Congenital cataract Birth defects(State Level Monthly Compilation Sheet for Screening of Birth Defects)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.delivery_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.delivery_location_id and m.id = c.member_id \n\tand l.parent_id = #location_id#\n\tand c.has_congenital_cataract = true\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end), '' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) ,\nfamily_head as (\n\tselect a.id as member_id,\n\tconcat(im2.first_name,'' '',im2.middle_name,'' '',im2.last_name) as FamilyHead,\n\tim2.mobile_number as FamilyHeadMobileNo\n\tfrom imt_member im inner join child_det a on a.id = im.id\n\tinner join imt_family imf on imf.family_id = im.family_id\n\tinner join imt_member im2 on imf.hof_id = im2.id\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when family_head.FamilyHeadMobileNo is not null then FamilyHeadMobileNo else ''-'' end as \"Contact Number\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id\nleft join family_head on family_head.member_id = child_det.id;","queryId":447,"fieldName":"tableField","queryUUID":"d82f671b-362a-4872-9791-2436848c9d5e","queryParams":"limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}],"fieldsContainer":[{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":444,"queryUUIDForParam":"ef1af98b-3b18-4f38-9998-5eb8ecf006cf"},{"isHidden":true,"fieldName":"to_month_year","fieldType":"text","queryUUID":null,"displayName":"To Date","queryForParam":"select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year","queryIdForParam":446,"queryUUIDForParam":"4716d116-95cd-4c4e-abfa-f1832757c5bd"},{"isHidden":true,"fieldName":"from_month_year","fieldType":"text","queryUUID":null,"displayName":"From Date","queryForParam":"select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year","queryIdForParam":445,"queryUUIDForParam":"b808bbe2-152e-45e8-b99f-53cc85ccac4a"}]},"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'ch_catarct_birth_def', 'fc0a0c9b-4c77-4963-999f-27b4fa7984e1'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(336, '15% Weight Gain (CMTC/NRC Follow Up Visit Report)', NULL, true, 'DYNAMIC', NULL, '2019-09-04 18:55:10.294', 60512, '2019-03-14 19:51:04.005', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 941, "fieldName": "tableField", "queryUUID": "2105cfc8-3f04-433f-bdf9-aa5179f80266", "queryParams": "limit_offset,from_date,to_date,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 940, "queryUUIDForParam": "2d560e6a-020b-4138-af9d-31faca3fd1f8"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'weight_15_p_cmtc', '1adb7054-d638-4ff3-a372-fe7c857cdac2'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(345, 'PHC Infrastructures (Facility Performance)', NULL, true, 'DYNAMIC', NULL, '2020-11-20 13:25:53.839', 60512, '2019-04-10 14:56:33.378', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with prefered_language as (\nselect \tcase \n\t\twhen report_preferred_language = ''EN'' then true  \n\t\telse false \n\tend as is_enlish\nfrom um_user where id = #loggedInUserId# \n), health_infra_ids as(\n\tselect id,name,location_id,address from health_infrastructure_details where location_id in\n\t(select child_id from location_hierchy_closer_det where parent_id = #location_id#\n        and depth <= (case when #depth_flag# = -1 then 0 else 8 end)\n    )\n\tand type = 1061 and is_no_reporting_unit is not true\n\t#limit_offset#\n)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nhealth_infra_ids.name as \"Name\",\ncase when prefered_language.is_enlish then get_location_hierarchy_language_wise(health_infra_ids.location_id, ''EN'')\n\t\t\t\telse get_location_hierarchy(health_infra_ids.location_id) end as \"Location\",\ncase when health_infra_ids.address is not null and health_infra_ids.address !='''' and health_infra_ids.address !=''null'' then health_infra_ids.address else ''N.A'' end as \"Address\"\nfrom health_infra_ids\ninner join prefered_language on true","queryId":952,"fieldName":"tableField","queryUUID":"45c8e691-9eca-417d-9e92-f6adf3e17eab","queryParams":"depth_flag,limit_offset,loggedInUserId,location_id"}],"fieldsContainer":[{"index":1,"isHidden":true,"fieldName":"depth_flag","fieldType":"text","queryUUID":null,"undefined":1,"isUrlParam":false,"displayName":"Depth Flag","queryUUIDForParam":null},{"index":2,"isHidden":true,"fieldName":"from_date","fieldType":"text","queryUUID":null,"undefined":null,"displayName":"From Date","queryUUIDForParam":null},{"index":2,"isHidden":true,"fieldName":"to_date","fieldType":"text","queryUUID":null,"undefined":null,"displayName":"To Date","queryUUIDForParam":null},{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1502,"queryUUIDForParam":"dd5bfb8c-7689-4554-a9fc-4717f3d9c929"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","isBackButtonRequired":true}', 'phc_infra_fac_per', '1e2c472f-9fef-4c76-852d-55148d020e72'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(187, 'OPV 0 given(Immunization Services Provided to Children with Date of Birth)', NULL, true, 'DYNAMIC', NULL, '2020-05-25 16:43:57.768', 1, '2019-02-13 11:48:57.228', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--OPV 0 given(Immunization Services Provided to Children with Date of Birth)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.opv0 is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 375, "fieldName": "tableField", "queryUUID": "2ba44699-455f-45d6-9d43-7e3df453362b", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 372, "queryUUIDForParam": "5bb4f2c8-9622-41aa-be13-b8e1e498f35e"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 374, "queryUUIDForParam": "06f14771-5393-4922-83e1-ea258701cc1f"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 373, "queryUUIDForParam": "c46a57af-1e53-4f1f-8e2d-64f7ee57870a"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_opv0_monthly', '0af1d57f-234f-4781-aa4b-0a2126d5e24f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(356, 'No. of Deliveries (OPD/IPD Daily Performance Report)', NULL, true, 'DYNAMIC', NULL, '2020-11-24 15:04:30.981', 60512, '2019-04-11 11:56:37.341', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with prefered_language as (\nselect \tcase \n\t\twhen report_preferred_language = ''EN'' then true  \n\t\telse false \n\tend as is_enlish\nfrom um_user where id = #loggedInUserId#\n),health_infra_ids as(\n\tselect health_infrastructure_details.id as health_infrastructure_id,count(*) filter(where rch_wpd_mother_master.id is not null) as no_of_deliveres_conducted\n\tfrom health_infrastructure_details\n\tleft join rch_wpd_mother_master on health_infrastructure_details.id = rch_wpd_mother_master.health_infrastructure_id\n\tand rch_wpd_mother_master.is_from_web\n\tand rch_wpd_mother_master.date_of_delivery between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) \n\tand \n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''\n\twhere health_infrastructure_details.location_id in (\n\t\tselect child_id from location_hierchy_closer_det where parent_id = #location_id# and depth <= (case when #depth_flag# = -1 then 0 else 8 end)\n\t)\n\tand health_infrastructure_details.type in (1061,1063,1009,1008,1007,1012,1084)\n\tgroup by health_infrastructure_details.id\n\t#limit_offset#\n)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nhealth_infrastructure_details.name as \"Name\",\nlistvalue_field_value_detail.value as \"Type\",\ncase when prefered_language.is_enlish then get_location_hierarchy_language_wise(health_infrastructure_details.location_id, ''EN'')\n\t\t\t\telse get_location_hierarchy(health_infrastructure_details.location_id) end as \"Location\",\ncoalesce(health_infra_ids.no_of_deliveres_conducted, 0) as \"No. of Deliveries Conducted\"\nfrom health_infra_ids\ninner join health_infrastructure_details on health_infra_ids.health_infrastructure_id = health_infrastructure_details.id\ninner join listvalue_field_value_detail on health_infrastructure_details.type = listvalue_field_value_detail.id\ninner join prefered_language on true","queryId":974,"fieldName":"tableField","queryUUID":"ed110e9f-4097-4ff1-9dd2-2f1eaa6da536","queryParams":"depth_flag,limit_offset,from_date,to_date,loggedInUserId,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"from_date","fieldType":"text","queryUUID":null,"displayName":"From Date","queryUUIDForParam":null},{"isHidden":true,"fieldName":"to_date","fieldType":"text","queryUUID":null,"displayName":"To Date","queryUUIDForParam":null,"index":1},{"isHidden":true,"fieldName":"depth_flag","fieldType":"text","queryUUID":null,"displayName":"Depth Flag","queryUUIDForParam":"baa38e43-f150-4a42-a43e-09846ca33f35","index":2,"queryForParam":"","queryIdForParam":""},{"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":973,"queryUUIDForParam":"ee8e8e03-2e2a-4037-8f7b-a299b64a6992"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","isBackButtonRequired":true}', 'del_count_fac_perf', '9bc3d8bb-08b9-4088-99fa-7c8bfbb602a2'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(152, 'Measles given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 11:52:47.041', 1, '2019-02-05 12:17:58.869', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Measles given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n years as ( \n\tselect concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, \n\tcast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date\n\tfrom generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc\n), child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand y.financial_year = ''#financial_year#''\n    and c.is_valid_for_tracking_report = true\n\tand measles is not null\n\tand c.dob between y.from_date and y.too_date\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 260, "fieldName": "tableField", "queryUUID": "278bd931-5eaf-48a2-ac65-d25f4152d518", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 259, "queryUUIDForParam": "87ccc84a-f4ab-4d45-8849-ccaf5990f2ea"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_measles_given', '3d57553b-d415-4038-b6fb-f3cd510ab93f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(398, 'Measles Rubella given(Services Provided to the Children Registered during the Year ( 1 to 6 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-21 14:15:24.450', 64189, '2019-04-29 16:10:33.923', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Measles Rubella given(Services Provided to the Children Registered during the Year ( 1 to 6 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n years as ( \n\tselect concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, \n\tcast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date\n\tfrom generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc\n), child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand y.financial_year = ''#financial_year#''\n    and c.is_valid_for_tracking_report = true\n\tand measles_rubella is not null\n\tand c.dob between y.from_date and y.too_date\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 1066, "fieldName": "tableField", "queryUUID": "b433a430-1a4e-425e-80ac-a8b0c90b0a9a", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1065, "queryUUIDForParam": "b3877858-316f-4a25-b322-c8fa7fc71990"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_mea_rubella_given', '83bbdfa2-9e0a-40c3-85df-e1c937f219f9'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(310, 'Home Delivery By SBA (Maternal Service Delivery)', NULL, true, 'DYNAMIC', NULL, '2020-10-22 15:40:49.941', 58981, '2019-03-06 17:27:29.275', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n member_det as (\n\tselect \n    m.id,\n    r.member_id, f.location_id as loc_id,\n\tm.unique_health_id, m.family_id, \n\tm.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,\n\tto_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd,\n    EXTRACT(YEAR from age(m.dob)) as age,\n    r.haemoglobin_tested_count,\n    r.last_systolic_bp as last_systolic_bp,\n    to_char(p.delivery_date,''DD/MM/YYYY'') as delivery_date,\n    r.delivery_outcome,\n    r.live_birth,\n    r.maternal_detah\n\tfrom rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, imt_family f, rch_pregnancy_registration_det p\n\twhere r.member_id = m.id and r.delivery_location_id = l.child_id and r.pregnancy_reg_id = p.id and m.family_id = f.family_id\n\tand home_del \n\tand delivery_outcome in (''LBIRTH'',''SBIRTH'') and (delivery_out_of_state_govt is false and delivery_out_of_state_pvt is false)\n    and (delivery_done_by is null  or delivery_done_by != ''NON-TBA'')\n\tand l.parent_id = #location_id#\n\tand r.date_of_delivery_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by p.lmp_date\n\t#limit_offset#\n), member_det_extra as(\n\tselect \n\tmd.id,\n\tconcat(f.address1,'','',f.address2) as address,\n\tf.area_id,\n    f.caste\n\tfrom member_det md \n\tinner join imt_family f on f.family_id = md.family_id \n)\n,caste_filter as (\n\tselect md.id,list.value as caste from member_det_extra md inner join listvalue_field_value_detail list on md.caste = cast(list.id as text)\n),gravida_count as (\n\tselect rch_pregnancy_registration_det.member_id,count(*) as gravida\n\tfrom rch_pregnancy_registration_det\n\twhere rch_pregnancy_registration_det.member_id in (select id from member_det)\n\tgroup by rch_pregnancy_registration_det.member_id\n),parity_count as (\n\tselect imt_member.id,count(distinct m2.dob) as parity\n\tfrom imt_member\n\tinner join imt_member m2 on imt_member.id = m2.mother_id\n\twhere imt_member.id in (select id from member_det)\n\tgroup by imt_member.id\n), loc as (\n\tselect distinct loc_id from member_det\n), loc_det as (\nselect distinct\n\tloc.loc_id,\n    (case when ( prefered_language.is_enlish and (s.english_name is not null)) then s.english_name else s.name end) as stateName,\n    (case when ( prefered_language.is_enlish and (d.english_name is not null)) then d.english_name else d.name end) as districtName,\n    (case when ( prefered_language.is_enlish and (b.english_name is not null)) then b.english_name else b.name end) as talukaName,\n    (case when ( prefered_language.is_enlish and (p.english_name is not null)) then p.english_name else p.name end)  as facilityName,\n    (case when ( prefered_language.is_enlish and (sc.english_name is not null)) then sc.english_name else sc.name end) as subCenterName,\n    (case when ( prefered_language.is_enlish and (v.english_name is not null)) then v.english_name else v.name end) as villageName,\n    (case when ( prefered_language.is_enlish and (a.english_name is not null)) then a.english_name else a.name end) as areaName\n\tfrom loc\n    inner join prefered_language on true\n    inner join location_master lm\n    on lm.id = loc.loc_id\n    left join location_level_hierarchy_master lh\n    on lh.id = lm.location_hierarchy_id\n    left join location_master s\n    on lh.level1 = s.id and s.state = ''ACTIVE'' and s.name not ilike ''%delete%''\n    left join location_master d\n    on lh.level3 = d.id and d.state = ''ACTIVE'' and d.name not ilike ''%delete%''\n    left join location_master b\n    on lh.level4 = b.id and b.state = ''ACTIVE'' and b.name not ilike ''%delete%''\n    left join location_master p\n    on lh.level5 = p.id and p.state = ''ACTIVE'' and p.name not ilike ''%delete%''\n    left join location_master sc\n    on lh.level6 = sc.id and sc.state = ''ACTIVE'' and sc.name not ilike ''%delete%''\n    left join location_master v\n    on lh.level7 = v.id and v.state = ''ACTIVE'' and v.name not ilike ''%delete%''\n    left join location_master a\n    on lh.level8 = a.id and a.state = ''ACTIVE'' and a.name not ilike ''%delete%''\n    where lm.state = ''ACTIVE'' and lm.name not ilike ''%delete%''\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n),\nasha_areas as (\nselect\n\tdistinct area_id\nfrom\n\tmember_det_extra ),\nasha_det_temp as(\nselect\n\tasha_areas.area_id,\n\tmax(u.id) as user_id\nfrom\n\tum_user_location ul,\n\tum_user u,\n\tasha_areas\nwhere\n\tasha_areas.area_id = ul.loc_id\n\tand u.id = ul.user_id\n\tand u.state = ''ACTIVE''\n\tand ul.state = ''ACTIVE''\n\tand u.role_id = (\n\tselect\n\t\tid\n\tfrom\n\t\tum_role_master\n\twhere\n\t\tname = ''ASHA'') group by asha_areas.area_id\n),\t\nasha_det as (\nselect\n\tu.id,\n\tasha_det_temp.area_id,\n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''(''||\n\tcase\n\t\twhen u.contact_number is not null then u.contact_number || '')''\n\t\telse ''N/A'' || '')''\n\tend as asha \nfrom\n\tum_user u,\n\tasha_det_temp\nwhere\n\tu.id = asha_det_temp.user_id\n),last_service_details as (\n\tselect to_char(max(service_date),''dd-MM-yyyy'') as last_service_date ,services.member_id from rch_member_services services\n\tinner join member_det mem on mem.member_id = services.member_id\n\tgroup by services.member_id\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.districtName as \"District / Corp\",\nloc_det.talukaName as \"Taluka / zone\",\nloc_det.facilityName as \"PHC / UHC\",\nloc_det.subCenterName as \"Sub Centre\",\nm_extra.address as \"Address\",\nmember_det.name as \"Name\",\ncaste_filter.caste as \"Caste\",\nmember_det.unique_health_id as \"TeCHO+ ID\",\nmember_det.age as \"Age in Years\",\ncoalesce(gravida_count.gravida,0) as \"Gravida\",\ncoalesce(parity_count.parity,0) as \"Parity\",\nmember_det.live_birth as \"No of Live Children\",\nmember_det.lmp as \"LMP\",\nmember_det.edd as \"EDD\",\nmember_det.delivery_date as \"Date of Home Delivery\",\ncase when member_det.maternal_detah then ''Death'' else ''Live'' end as \"Maternal outcome\",\ncase when member_det.delivery_outcome = ''LBIRTH'' then ''Live'' when member_det.delivery_outcome = ''SBIRTH'' then ''Still'' else ''Death'' end  as \"Newborn outcome (live/ still/ death)\",\nservices.last_service_date as \"Last check up ANC date\",\ncoalesce(haemoglobin_tested_count,0) as \"lastHb\",\ncoalesce(last_systolic_bp,0) as \"lastBP\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Name\",\ncase when asha_det.asha is null then ''No Asha Assigned'' else asha_det.asha end as \"Asha Name\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id\nleft join gravida_count on member_det.id = gravida_count.member_id\nleft join parity_count on member_det.id = parity_count.id\nleft join member_det_extra m_extra on m_extra.id = member_det.id\nleft join caste_filter on member_det.id = caste_filter.id\nleft join fhw_det on member_det.loc_id = fhw_det.loc_id\nleft join asha_det on asha_det.area_id = m_extra.area_id\nleft join last_service_details services on services.member_id = member_det.id;","queryId":807,"fieldName":"tableField","queryUUID":"5f4dd666-f905-4cf9-bb54-78d87cee72db","queryParams":"limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"to_month_year","fieldType":"text","queryUUID":null,"displayName":"To Month","queryForParam":"select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year","queryIdForParam":806,"queryUUIDForParam":"aaf66aa1-2257-4341-9457-a01bc894a355"},{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":804,"queryUUIDForParam":"48a903a8-ad21-423b-91f8-965d84814c12"},{"index":1,"isHidden":true,"fieldName":"from_month_year","fieldType":"text","queryUUID":null,"displayName":"From Month","queryForParam":"select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year","queryIdForParam":805,"queryUUIDForParam":"e20b34da-c1fe-4f85-8a74-99881fdbf2b0"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'mtr_serv_del_sba', '515700e1-3534-4966-9d62-ba2ad4e03860'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(179, 'LBW Child Registered (1 - 1.5 kg)', NULL, true, 'DYNAMIC', NULL, '2019-10-10 12:18:38.788', 1, '2019-02-12 16:17:59.977', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 322, "fieldName": "tableField", "queryUUID": "bfde3ed7-7ee4-48dd-ae0e-76e2b7db5084", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 321, "queryUUIDForParam": "5862b3cb-d363-4ddd-a2c6-a74c7cd07adf"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_lbw_ch_reg_1to1.5', '0eadde73-d021-44e8-8856-fd6601cab9c8'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(347, 'SDH Infrastructures (Facility Performance)', NULL, true, 'DYNAMIC', NULL, '2020-02-26 18:03:40.659', 60512, '2019-04-10 17:49:48.677', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 956, "fieldName": "tableField", "queryUUID": "95f7c2e1-7e4c-4ee9-84f7-057d5edbfa37", "queryParams": "depth_flag,limit_offset,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 1, "isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"index": 2, "isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "depth_flag", "fieldType": "text", "queryUUID": null, "isUrlParam": false, "displayName": "Depth Flag", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 955, "queryUUIDForParam": "378539ae-c44a-4e25-802e-9bb38662aaf6"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'sdh_infra_fac_perf', '059db972-aeac-4e42-857b-b6d199f2e6e0'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(357, 'No. of C-Section (OPD/IPD Daily Performance Report)', NULL, true, 'DYNAMIC', NULL, '2020-11-24 15:05:07.916', 60512, '2019-04-11 11:58:21.278', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with prefered_language as (\nselect \tcase \n\t\twhen report_preferred_language = ''EN'' then true  \n\t\telse false \n\tend as is_enlish\nfrom um_user where id = #loggedInUserId#\n),\nhealth_infra_ids as(\n\tselect health_infrastructure_details.id as health_infrastructure_id,count(*) filter(where rch_wpd_mother_master.id is not null) as no_of_csection_conducted\n\tfrom health_infrastructure_details\n\tleft join rch_wpd_mother_master on health_infrastructure_details.id = rch_wpd_mother_master.health_infrastructure_id\n\tand rch_wpd_mother_master.is_from_web\n\tand rch_wpd_mother_master.type_of_delivery = ''CAESAREAN''\n\tand rch_wpd_mother_master.date_of_delivery between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) \n\tand \n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''\n\twhere health_infrastructure_details.location_id in (\n\t\tselect child_id from location_hierchy_closer_det where parent_id = #location_id# and depth <= (case when #depth_flag# = -1 then 0 else 8 end)\n\t)\n\tand health_infrastructure_details.type in (1061,1063,1009,1008,1007,1012,1084)\n\tgroup by health_infrastructure_details.id\n\t#limit_offset#\n)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nhealth_infrastructure_details.name as \"Name\",\nlistvalue_field_value_detail.value as \"Type\",\ncase when prefered_language.is_enlish then get_location_hierarchy_language_wise(health_infrastructure_details.location_id, ''EN'')\n\t\t\t\telse get_location_hierarchy(health_infrastructure_details.location_id) end as \"Location\",\ncoalesce(health_infra_ids.no_of_csection_conducted, 0) as \"No. of C-Section Conducted\"\nfrom health_infra_ids\ninner join health_infrastructure_details on health_infra_ids.health_infrastructure_id = health_infrastructure_details.id\ninner join listvalue_field_value_detail on health_infrastructure_details.type = listvalue_field_value_detail.id\ninner join prefered_language on true","queryId":976,"fieldName":"tableField","queryUUID":"b56b33b3-1081-47e7-905a-6c40cb367c35","queryParams":"depth_flag,limit_offset,from_date,to_date,loggedInUserId,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"from_date","fieldType":"text","queryUUID":null,"displayName":"From Date","queryUUIDForParam":null},{"isHidden":true,"fieldName":"to_date","fieldType":"text","queryUUID":null,"displayName":"To Date","queryUUIDForParam":null},{"isHidden":true,"fieldName":"depth_flag","fieldType":"text","queryUUID":null,"displayName":"Depth Flag","queryUUIDForParam":null,"index":2},{"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":975,"queryUUIDForParam":"1cee8cb7-1141-47fc-b232-3f45c0d94bfe"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","isBackButtonRequired":true}', 'c_sec_count_fac_perf', '7e0637e2-36b5-4b60-9ec3-6b40fb6207b5'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(355, 'No. of Minor Operations (OPD/IPD Daily Performance Report)', NULL, true, 'DYNAMIC', NULL, '2020-11-24 15:06:01.587', 60512, '2019-04-11 11:54:38.881', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with prefered_language as (\nselect \tcase \n\t\twhen report_preferred_language = ''EN'' then true  \n\t\telse false \n\tend as is_enlish\nfrom um_user where id = #loggedInUserId#\n),health_infra_ids as(\n\tselect health_infrastructure_details.id as health_infrastrucutre_id,sum(facility_performance_master.no_of_minor_operation_conducted) as no_of_minor_operation_conducted\n\tfrom health_infrastructure_details\n\tleft join facility_performance_master on health_infrastructure_details.id = facility_performance_master.health_infrastrucutre_id\n\tand facility_performance_master.performance_date between \n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) \n\tand \n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''\n\twhere health_infrastructure_details.location_id in\n\t(select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth <= (case when #depth_flag# = -1 then 0 else 8 end))\n\tand health_infrastructure_details.type in (1061,1063,1009,1008,1007,1012,1084)\n\tgroup by health_infrastructure_details.id\n\t#limit_offset#\n)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nhealth_infrastructure_details.name as \"Name\",\nlistvalue_field_value_detail.value as \"Type\",\ncase when prefered_language.is_enlish then get_location_hierarchy_language_wise(health_infrastructure_details.location_id, ''EN'')\n\t\t\t\telse get_location_hierarchy(health_infrastructure_details.location_id) end as \"Location\",\ncoalesce(health_infra_ids.no_of_minor_operation_conducted, 0) as \"No. of Minor Operations\"\nfrom health_infra_ids\ninner join health_infrastructure_details on health_infra_ids.health_infrastrucutre_id = health_infrastructure_details.id\ninner join listvalue_field_value_detail on health_infrastructure_details.type = listvalue_field_value_detail.id\ninner join prefered_language on true","queryId":972,"fieldName":"tableField","queryUUID":"01a18d76-49f1-462c-bdc0-f3db0a690c5c","queryParams":"depth_flag,limit_offset,from_date,to_date,loggedInUserId,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"from_date","fieldType":"text","queryUUID":null,"displayName":"From Date","queryUUIDForParam":null},{"isHidden":true,"fieldName":"to_date","fieldType":"text","queryUUID":null,"displayName":"To Date","queryUUIDForParam":null},{"isHidden":true,"fieldName":"depth_flag","fieldType":"text","queryUUID":null,"displayName":"Depth Flag","queryUUIDForParam":null,"index":2},{"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":971,"queryUUIDForParam":"a1775803-ea18-4d75-8cf7-9c8f67437f74"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","isBackButtonRequired":true}', 'minor_op_count_fac', 'd371f829-987d-4e87-8bf7-e5701f98eaf0'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(348, 'DH Infrastructures (Facility Performance)', NULL, true, 'DYNAMIC', NULL, '2020-02-26 17:59:23.658', 60512, '2019-04-10 17:51:42.022', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 958, "fieldName": "tableField", "queryUUID": "262b9e9e-1ae8-4eb8-87a6-62d2b4e48627", "queryParams": "depth_flag,limit_offset,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "depth_flag", "fieldType": "text", "queryUUID": null, "displayName": "Depth Flag", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 957, "queryUUIDForParam": "a25fb2fe-b6ee-4247-9330-fd016907835d"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'dh_infra_fac_perf', '5c034622-73bd-4938-9b27-ff544f5cec28'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(349, 'MCH Infrastructures (Facility Performance)', NULL, true, 'DYNAMIC', NULL, '2020-02-26 17:57:45.505', 60512, '2019-04-10 17:53:27.903', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 960, "fieldName": "tableField", "queryUUID": "918ecb6c-a5eb-4913-bb08-3a67cb257069", "queryParams": "depth_flag,limit_offset,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "depth_flag", "fieldType": "text", "queryUUID": null, "displayName": "depth_flag", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 959, "queryUUIDForParam": "80a7ec97-6ef6-4bdc-bb1e-a2d92e94756e"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'mch_infra_fac_perf', '54336315-1f31-41ac-8e3e-e4350f3f1ba9'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(350, 'Total Infrastructures (Facility Performance)', NULL, true, 'DYNAMIC', NULL, '2020-02-26 17:52:22.927', 60512, '2019-04-10 18:00:22.833', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 962, "fieldName": "tableField", "queryUUID": "d0fa860f-d283-4f00-8536-49b34c246b5e", "queryParams": "depth_flag,limit_offset,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "depth_flag", "fieldType": "text", "queryUUID": null, "displayName": "depth_flag", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 961, "queryUUIDForParam": "a163704f-1ecf-4342-91ad-698b7aa90e6f"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'total_infra_fac_perf', 'd13a8025-64b5-47fc-b9d9-3662b508be8a'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(176, 'Neonatal Deaths (0 - 28 days)(Infant And Neonatal Deaths Report)', NULL, true, 'DYNAMIC', NULL, '2019-11-14 12:26:24.757', 57698, '2019-02-12 15:46:31.992', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#\n),dates as (\nselect to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM-DD-YYYY'') from_date\n,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM-DD-YYYY'')  + interval ''1 month'' - interval ''1 milliseconds'' to_date\n),child_det as (\n\tselect m.id,c.death_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob,to_char(c.death_date, ''DD/MM/YYYY'') as dod\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m,dates\n\twhere l.child_id = c.death_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.no_of_days_in_death is not null and c.no_of_days_in_death between 0 and 28\n\tand c.death_date between dates.from_date and dates.to_date\n\torder by c.death_date\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\nchild_det.dod as \"Date of Death\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 309, "fieldName": "tableField", "queryUUID": "38bf9b50-41cf-4234-9d62-6aaceea76b45", "queryParams": "to_month,limit_offset,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "undefined": 0, "isUrlParam": false, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 308, "queryUUIDForParam": "b51707c5-112e-41a8-85d4-ff0b42ccd1ec"}, {"index": 2, "isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month#'' as date),''MM/YYYY'') as to_month", "queryIdForParam": 1424, "queryUUIDForParam": "d0869118-592a-4e58-a370-ab03f988b917"}, {"index": 1, "isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month#'' as date),''MM/YYYY'') as from_month", "queryIdForParam": 1423, "queryUUIDForParam": "e387b99f-45ea-45f8-9c4a-c3a24b904ac8"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_neonatal_deaths', 'b3314d14-5094-4d14-9f72-4031611662d0'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(200, 'Not fully Immunised Children with DOB', NULL, true, 'DYNAMIC', NULL, '2019-04-09 15:19:02.648', 1, '2019-02-14 00:28:03.912', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, m.unique_health_id, m.family_id, m.dob, f.location_id as loc_id,\n\tm.first_name || '' '' || m.middle_name || '' '' || m.last_name as name\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f\n\twhere l.child_id = c.loc_id and m.id = c.member_id and f.family_id = m.family_id\n\tand l.parent_id = #location_id#\n\tand c.member_id is not null\n\tand c.death_date is null\n\tand c.fully_immunization_in_number_of_month is null\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.unique_health_id as \"Child ID\",\nchild_det.family_id as \"Family ID\",\nchild_det.name as \"Name\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 427, "fieldName": "tableField", "queryUUID": "2cdbf9fc-d7e7-41ca-b725-ca4628143bc6", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": false, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 424, "queryUUIDForParam": "cf3ad2c1-de01-4bb9-97d1-6b651f8f1425"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 426, "queryUUIDForParam": "1f1d182d-d4c9-4314-a54b-cda99afeff73"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 425, "queryUUIDForParam": "182a803d-d591-4865-ab39-3002b770179f"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'chmnth_not_immunized', 'b048630a-a570-4b12-88c0-34e384800958'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(189, 'Penta 1 given(Immunization Services Provided to Children with Date of Birth)', NULL, true, 'DYNAMIC', NULL, '2020-05-25 12:06:21.202', 1, '2019-02-13 12:17:26.890', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Penta 1 given(Immunization Services Provided to Children with Date of Birth)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.penta1 is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 383, "fieldName": "tableField", "queryUUID": "23acd3a7-7a45-4645-95de-c6990d517212", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 380, "queryUUIDForParam": "58e7beba-8d5a-4b95-a298-cff2727e3341"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 382, "queryUUIDForParam": "aae3fcd6-7a92-4a6f-9807-6a9bf3ca7c1a"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 381, "queryUUIDForParam": "9738b816-31ee-44e3-9a07-e5831ed4f616"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_penta1_monthly', 'a009d7e6-c85d-4e45-8f2b-a5998f83cf52'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(279, 'ANC 3(LMP Based Pregnant Women Reg. for ANC Services)', NULL, true, 'DYNAMIC', NULL, '2019-06-28 18:29:42.548', 409, '2019-02-27 13:25:17.495', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 709, "fieldName": "tableField", "queryUUID": "831b7ebb-852d-48ad-9d54-ca5151287ec7", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 706, "queryUUIDForParam": "4a1a49ea-5792-46f6-839c-73776d8f3657"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year", "queryIdForParam": 708, "queryUUIDForParam": "62a319ed-cd71-4d15-bb8f-02723b577cb4"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year", "queryIdForParam": 707, "queryUUIDForParam": "fb0ae999-2196-4704-9432-f7c8b6fb096c"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'lmp_anc3', '14f81fe7-73cd-4577-ac34-ecbe5200fe09'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(353, 'No. of Lab Test (OPD/IPD Daily Performance Report)', NULL, true, 'DYNAMIC', NULL, '2020-11-24 15:06:35.035', 60512, '2019-04-11 11:49:14.745', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with health_infra_ids as(\nselect\n\thealth_infrastructure_details.id as health_infrastrucutre_id,\n\tsum(facility_performance_master.no_of_laboratory_test_conducted) as no_of_laboratory_test_conducted\nfrom\n\thealth_infrastructure_details\nleft join facility_performance_master on\n\thealth_infrastructure_details.id = facility_performance_master.health_infrastrucutre_id\n\tand facility_performance_master.performance_date between\n\t(case\n\t\twhen #from_date# is null then ''01/01/1970''\n\t\telse to_date(''#from_date#'', ''MM/DD/YYYY'')\n\tend) and\n\t(case\n\t\twhen #to_date# is null then ''01/01/1970''\n\t\telse to_date(''#to_date#'', ''MM/DD/YYYY'')\n\tend)+ interval ''1 day'' - interval ''00:00:01''\nwhere\n\thealth_infrastructure_details.location_id in (\n\tselect\n\t\tchild_id\n\tfrom\n\t\tlocation_hierchy_closer_det\n\twhere\n\t\tparent_id = #location_id#\n\t\tand depth <=\n\t\t(case\n\t\t\twhen #depth_flag# = -1 then 0\n\t\t\telse 8\n\t\tend))\n\tand health_infrastructure_details.type in (1061, 1063, 1009, 1008, 1007, 1012, 1084)\ngroup by\n\thealth_infrastructure_details.id #limit_offset# )\nselect\n\trow_number() over () + cast(SUBSTRING(''#limit_offset#'', position(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\n\thealth_infrastructure_details.name as \"Name\",\n\tlistvalue_field_value_detail.value as \"Type\",\n\tget_location_hierarchy(health_infrastructure_details.location_id) as \"Location\",\n\tcoalesce(health_infra_ids.no_of_laboratory_test_conducted, 0) as \"No. of Lab Test\"\nfrom\n\thealth_infra_ids\ninner join health_infrastructure_details on\n\thealth_infra_ids.health_infrastrucutre_id = health_infrastructure_details.id\ninner join listvalue_field_value_detail on\n\thealth_infrastructure_details.type = listvalue_field_value_detail.id","queryId":968,"fieldName":"tableField","queryUUID":"298b0872-7723-46c0-b1ce-a35e985c83d9","queryParams":"depth_flag,limit_offset,from_date,to_date,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"from_date","fieldType":"text","queryUUID":null,"displayName":"From Date","queryUUIDForParam":null},{"isHidden":true,"fieldName":"to_date","fieldType":"text","queryUUID":null,"displayName":"To Date","queryUUIDForParam":null},{"isHidden":true,"fieldName":"depth_flag","fieldType":"text","queryUUID":null,"displayName":"Depth Flag","queryUUIDForParam":null,"index":2},{"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":967,"queryUUIDForParam":"f918b45e-7011-4265-b7aa-3aba0fd10604"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","isBackButtonRequired":true}', 'lab_count_fac_perf', '27158f98-663d-4435-bc0a-6bb3e582b8c4'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(311, 'Home Delivery By Non-SBA (Maternal Service Delivery)', NULL, true, 'DYNAMIC', NULL, '2020-10-22 15:39:52.477', 58981, '2019-03-06 17:33:22.800', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n member_det as (\n\tselect \n    m.id,\n    r.member_id, f.location_id as loc_id,\n\tm.unique_health_id, m.family_id, \n\tm.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,\n\tto_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd,\n    EXTRACT(YEAR from age(m.dob)) as age,\n    r.haemoglobin_tested_count,\n    r.last_systolic_bp as last_systolic_bp,\n    to_char(p.delivery_date,''DD/MM/YYYY'') as delivery_date,\n    r.delivery_outcome,\n    r.live_birth,\n    r.maternal_detah\n\tfrom rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, imt_family f, rch_pregnancy_registration_det p\n\twhere r.member_id = m.id and r.member_current_location_id = l.child_id and r.pregnancy_reg_id = p.id and m.family_id = f.family_id\n\tand home_del \n\tand delivery_outcome in (''LBIRTH'',''SBIRTH'') and (delivery_out_of_state_govt is false and delivery_out_of_state_pvt is false)\n    and delivery_done_by = ''NON-TBA''\n\tand l.parent_id = #location_id#\n\tand r.date_of_delivery_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by p.lmp_date\n\t#limit_offset#\n), member_det_extra as(\n\tselect \n\tmd.id,\n\tconcat(f.address1,'','',f.address2) as address,\n\tf.area_id,\n    f.caste\n\tfrom member_det md \n\tinner join imt_family f on f.family_id = md.family_id \n)\n,caste_filter as (\n\tselect md.id,list.value as caste from member_det_extra md inner join listvalue_field_value_detail list on md.caste = cast(list.id as text)\n),gravida_count as (\n\tselect rch_pregnancy_registration_det.member_id,count(*) as gravida\n\tfrom rch_pregnancy_registration_det\n\twhere rch_pregnancy_registration_det.member_id in (select id from member_det)\n\tgroup by rch_pregnancy_registration_det.member_id\n),parity_count as (\n\tselect imt_member.id,count(distinct m2.dob) as parity\n\tfrom imt_member\n\tinner join imt_member m2 on imt_member.id = m2.mother_id\n\twhere imt_member.id in (select id from member_det)\n\tgroup by imt_member.id\n), loc as (\n\tselect distinct loc_id from member_det\n), loc_det as (\nselect distinct\n\tloc.loc_id,\n    (case when ( prefered_language.is_enlish and (s.english_name is not null)) then s.english_name else s.name end) as stateName,\n    (case when ( prefered_language.is_enlish and (d.english_name is not null)) then d.english_name else d.name end) as districtName,\n    (case when ( prefered_language.is_enlish and (b.english_name is not null)) then b.english_name else b.name end) as talukaName,\n    (case when ( prefered_language.is_enlish and (p.english_name is not null)) then p.english_name else p.name end)  as facilityName,\n    (case when ( prefered_language.is_enlish and (sc.english_name is not null)) then sc.english_name else sc.name end) as subCenterName,\n    (case when ( prefered_language.is_enlish and (v.english_name is not null)) then v.english_name else v.name end) as villageName,\n    (case when ( prefered_language.is_enlish and (a.english_name is not null)) then a.english_name else a.name end) as areaName\n\tfrom loc\n    inner join prefered_language on true\n    inner join location_master lm\n    on lm.id = loc.loc_id\n    left join location_level_hierarchy_master lh\n    on lh.id = lm.location_hierarchy_id\n    left join location_master s\n    on lh.level1 = s.id and s.state = ''ACTIVE'' and s.name not ilike ''%delete%''\n    left join location_master d\n    on lh.level3 = d.id and d.state = ''ACTIVE'' and d.name not ilike ''%delete%''\n    left join location_master b\n    on lh.level4 = b.id and b.state = ''ACTIVE'' and b.name not ilike ''%delete%''\n    left join location_master p\n    on lh.level5 = p.id and p.state = ''ACTIVE'' and p.name not ilike ''%delete%''\n    left join location_master sc\n    on lh.level6 = sc.id and sc.state = ''ACTIVE'' and sc.name not ilike ''%delete%''\n    left join location_master v\n    on lh.level7 = v.id and v.state = ''ACTIVE'' and v.name not ilike ''%delete%''\n    left join location_master a\n    on lh.level8 = a.id and a.state = ''ACTIVE'' and a.name not ilike ''%delete%''\n    where lm.state = ''ACTIVE'' and lm.name not ilike ''%delete%''\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n),\nasha_areas as (\nselect\n\tdistinct area_id\nfrom\n\tmember_det_extra ),\nasha_det_temp as(\nselect\n\tasha_areas.area_id,\n\tmax(u.id) as user_id\nfrom\n\tum_user_location ul,\n\tum_user u,\n\tasha_areas\nwhere\n\tasha_areas.area_id = ul.loc_id\n\tand u.id = ul.user_id\n\tand u.state = ''ACTIVE''\n\tand ul.state = ''ACTIVE''\n\tand u.role_id = (\n\tselect\n\t\tid\n\tfrom\n\t\tum_role_master\n\twhere\n\t\tname = ''ASHA'') group by asha_areas.area_id\n),\t\nasha_det as (\nselect\n\tu.id,\n\tasha_det_temp.area_id,\n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''(''||\n\tcase\n\t\twhen u.contact_number is not null then u.contact_number || '')''\n\t\telse ''N/A'' || '')''\n\tend as asha \nfrom\n\tum_user u,\n\tasha_det_temp\nwhere\n\tu.id = asha_det_temp.user_id\n),last_service_details as (\n\tselect to_char(max(service_date),''dd-MM-yyyy'') as last_service_date ,services.member_id from rch_member_services services\n\tinner join member_det mem on mem.member_id = services.member_id\n\tgroup by services.member_id\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.districtName as \"District / Corp\",\nloc_det.talukaName as \"Taluka / zone\",\nloc_det.facilityName as \"PHC / UHC\",\nloc_det.subCenterName as \"Sub Centre\",\nm_extra.address as \"Address\",\nmember_det.name as \"Name\",\ncaste_filter.caste as \"Caste\",\nmember_det.unique_health_id as \"TeCHO+ ID\",\nmember_det.age as \"Age in Years\",\ncoalesce(gravida_count.gravida,0) as \"Gravida\",\ncoalesce(parity_count.parity,0) as \"Parity\",\nmember_det.live_birth as \"No of Live Children\",\nmember_det.lmp as \"LMP\",\nmember_det.edd as \"EDD\",\nmember_det.delivery_date as \"Date of Home Delivery\",\ncase when member_det.maternal_detah then ''Death'' else ''Live'' end as \"Maternal outcome\",\ncase when member_det.delivery_outcome = ''LBIRTH'' then ''Live'' when member_det.delivery_outcome = ''SBIRTH'' then ''Still'' else ''Death'' end  as \"Newborn outcome (live/ still/ death)\",\nservices.last_service_date as \"Last check up ANC date\",\ncoalesce(haemoglobin_tested_count,0) as \"lastHb\",\ncoalesce(last_systolic_bp,0) as \"lastBP\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Name\",\ncase when asha_det.asha is null then ''No Asha Assigned'' else asha_det.asha end as \"Asha Name\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id\nleft join gravida_count on member_det.id = gravida_count.member_id\nleft join parity_count on member_det.id = parity_count.id\nleft join member_det_extra m_extra on m_extra.id = member_det.id\nleft join caste_filter on member_det.id = caste_filter.id\nleft join fhw_det on member_det.loc_id = fhw_det.loc_id\nleft join asha_det on asha_det.area_id = m_extra.area_id\nleft join last_service_details services on services.member_id = member_det.id;","queryId":811,"fieldName":"tableField","queryUUID":"57022ab2-a6e5-4aec-8077-697a631e888f","queryParams":"limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"to_month_year","fieldType":"text","queryUUID":null,"displayName":"To Month","queryForParam":"select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year","queryIdForParam":810,"queryUUIDForParam":"28f9dd35-63c6-4b25-8a2c-0881f855d1e9"},{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":808,"queryUUIDForParam":"27b1516b-3028-42f8-a277-93ca1fb50f0e"},{"isHidden":true,"fieldName":"from_month_year","fieldType":"text","queryUUID":null,"displayName":"From Month","queryForParam":"select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year","queryIdForParam":809,"queryUUIDForParam":"1fbc160b-2f32-4334-89c8-7415a639cfe6"}]},"isFilterOpen":false,"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'mtr_serv_del_non_sba', 'a4f318fd-54f6-4dd5-a8e6-ec36345f74fe'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(494, 'Moderate Anemia (Anemia Status of Registered ANC)', NULL, true, 'DYNAMIC', NULL, '2019-10-06 18:32:26.939', 60512, '2019-08-19 17:10:49.191', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1340, "fieldName": "tableField", "queryUUID": "f184324d-1d37-484d-ae09-338c962ac8e0", "queryParams": "to_month,limit_offset,demographic_location_id,from_month,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1337, "queryUUIDForParam": "76e257a5-a2de-45d1-92f9-8525db2565d8"}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month#'' as date),''MM/YYYY'') as to_month", "queryIdForParam": 1339, "queryUUIDForParam": "39f39b11-f584-48b0-8eec-d069e1f8bc08"}, {"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month#'' as date),''MM/YYYY'') as from_month", "queryIdForParam": 1338, "queryUUIDForParam": "185e6948-b569-4e27-a2b8-4d9f97fc8f9d"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'moderate_anemia_anc', 'ba45bec0-0147-43cd-9e92-00ef4050bc72'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(615, 'Medical Transfer - CMTC/NRC', NULL, true, 'DYNAMIC', NULL, '2020-07-14 16:49:58.217', 60512, '2020-06-29 11:33:20.106', 60512, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "with dates as (\n    select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date,\n\tto_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date\n),health_infra_details as (\n\tselect id,name from health_infrastructure_details\n\twhere location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\tand (is_cmtc or is_nrc or is_sncu)\n),details as (\n\tselect health_infra_details.id,\n\tcount(*) filter (where health_infrastructure_details.is_cmtc) as to_cmtc_count,\n\tcount(*) filter (where health_infrastructure_details.is_nrc) as to_nrc_count\n\tfrom health_infra_details\n\tinner join child_cmtc_nrc_referral_detail on health_infra_details.id = child_cmtc_nrc_referral_detail.referred_from\n\tinner join health_infrastructure_details on child_cmtc_nrc_referral_detail.referred_to = health_infrastructure_details.id\n\tinner join dates on child_cmtc_nrc_referral_detail.referred_date between dates.from_date and dates.to_date\n\tgroup by health_infra_details.id\n)select health_infra_details.name as \"Facility\",\ncoalesce(details.to_cmtc_count,0) as \"CMTC To CMTC\",\ncoalesce(details.to_nrc_count,0) as \"CMTC To NRC\"\nfrom health_infra_details\nleft join details on health_infra_details.id = details.id\nunion all\nselect ''<b>Total</b>'',\ncoalesce(sum(details.to_cmtc_count),0),\ncoalesce(sum(details.to_nrc_count),0)\nfrom details;", "queryId": 1654, "fieldName": "tableField", "queryUUID": "c3ad2923-757f-46c1-bb6d-7540641dd23d", "queryParams": "from_date,to_date,location_id"}], "fieldsContainer": [{"fieldName": "date", "fieldType": "onlyMonthFromTo", "queryUUID": null, "displayName": "Month", "isMandatory": true, "queryUUIDForParam": null, "requiredUptoLevel": 1}, {"fieldName": "location_id", "fieldType": "location", "queryUUID": null, "displayName": "Location", "isMandatory": true, "fetchUptoLevel": "6", "queryUUIDForParam": null, "requiredUptoLevel": 1, "fetchAccordingToUserAoi": true}]}, "isFilterOpen": true, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'medical_transfer', 'cd89ba9d-63b6-4c81-a181-d657ca7baf3e'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(352, 'No. of IPDs (OPD/IPD Daily Performance Report)', NULL, true, 'DYNAMIC', NULL, '2020-11-24 15:06:51.379', 60512, '2019-04-11 11:40:29.834', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with prefered_language as (\nselect \tcase \n\t\twhen report_preferred_language = ''EN'' then true  \n\t\telse false \n\tend as is_enlish\nfrom um_user where id = #loggedInUserId# \n), health_infra_ids as(\n\tselect health_infrastructure_details.id as health_infrastrucutre_id,sum(facility_performance_master.no_of_ipd_attended) as no_of_ipd_attended\n\tfrom health_infrastructure_details\n\tleft join facility_performance_master on health_infrastructure_details.id = facility_performance_master.health_infrastrucutre_id\n\tand facility_performance_master.performance_date between \n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) \n\tand \n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''\n\twhere health_infrastructure_details.location_id in\n\t(select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth <= (case when #depth_flag# = -1 then 0 else 8 end))\n\tand health_infrastructure_details.type in (1061,1063,1009,1008,1007,1012,1084)\n\tgroup by health_infrastructure_details.id\n\t#limit_offset#\n)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nhealth_infrastructure_details.name as \"Name\",\nlistvalue_field_value_detail.value as \"Type\",\ncase when prefered_language.is_enlish then get_location_hierarchy_language_wise(health_infrastructure_details.location_id, ''EN'')\n\t\t\t\telse get_location_hierarchy(health_infrastructure_details.location_id) end as \"Location\",\ncoalesce(health_infra_ids.no_of_ipd_attended, 0) as \"No. of IPDs\"\nfrom health_infra_ids\ninner join health_infrastructure_details on health_infra_ids.health_infrastrucutre_id = health_infrastructure_details.id\ninner join listvalue_field_value_detail on health_infrastructure_details.type = listvalue_field_value_detail.id\ninner join prefered_language on true","queryId":966,"fieldName":"tableField","queryUUID":"6a5cfa1b-5ab3-456b-b9eb-21328390af4e","queryParams":"depth_flag,limit_offset,from_date,to_date,loggedInUserId,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"from_date","fieldType":"text","queryUUID":null,"displayName":"From Date","queryUUIDForParam":null},{"isHidden":true,"fieldName":"to_date","fieldType":"text","queryUUID":null,"displayName":"To Date","queryUUIDForParam":null},{"isHidden":true,"fieldName":"depth_flag","fieldType":"text","queryUUID":null,"displayName":"Depth Flag","queryUUIDForParam":null,"index":2},{"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":965,"queryUUIDForParam":"16547b43-9540-44a2-9630-d8fc9b12ebba"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","isBackButtonRequired":true}', 'ipd_count_fac_perf', '38b24552-c065-4c0f-9900-09b582d722e4'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(278, 'ANC 2(LMP Based Pregnant Women Reg. for ANC Services)', NULL, true, 'DYNAMIC', NULL, '2019-06-28 18:35:55.044', 409, '2019-02-27 13:25:06.159', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--ANC 2(LMP Based Pregnant Women Reg. for ANC Services)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\nmember_det as (\n\tselect r.member_id, r.native_location_id as loc_id,\n\tm.unique_health_id, m.family_id, \n\tm.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,\n\tto_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd\n\t,to_char(r.date_of_delivery,''DD/MM/YYYY'') as dod\n\t,to_char(r.anc2,''DD/MM/YYYY'') as anc2\n\tfrom rch_pregnancy_analytics_details r\n\t, location_hierchy_closer_det l\n\t, imt_member m\n\twhere r.member_id = m.id\n\tand r.anc2 is not null\n\tand r.native_location_id  = l.child_id\n\tand l.parent_id = #location_id#\n\tand r.lmp_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date)\n\torder by r.lmp_date\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from member_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language\n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\nmember_det.anc2 as \"ANC2 Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 705, "fieldName": "tableField", "queryUUID": "469d511c-bf1f-4ed8-b640-628c069987fc", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year", "queryIdForParam": 704, "queryUUIDForParam": "167beefd-57d4-4cac-9898-08eb8e96a961"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year", "queryIdForParam": 703, "queryUUIDForParam": "fc2aeb06-4f3b-4bb0-873a-cb884db0dce9"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 702, "queryUUIDForParam": "51a55829-dcb0-41fa-b303-dd3b0d310106"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'lmp_anc2', 'ab6d2d73-1c98-47c3-b7a3-706c424f7892'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(619, 'CMTC/NRC Follow Up Visit Report-2', NULL, true, 'DYNAMIC', NULL, '2020-09-09 18:09:30.714', 60512, '2020-06-29 11:51:40.219', 60512, '{"layout":"dynamicReport1","containers":{"tableContainer":[{"query":"with prefered_language as(\n\tselect case when prefered_language = ''EN'' then true else false end as is_english \n\tfrom um_user\n\twhere id = #loggedInUserId#\n),dates as (\n    select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date,\n\tto_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date\n),health_infra_details as (\n\tselect id,name from health_infrastructure_details\n\twhere location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\tand (is_cmtc or is_nrc or is_sncu)\n),health_infra_wise_analytics as (\n\tselect health_infra_details.id as child_id,\n\tsum(details.less_than_6_months_admitted + details.above_6_months_admitted) as total_admitted,\n\tsum(details.discharge_from_facility) as discharge_from_facility,\n\tsum(details.death) as death,\n\tsum(details.fsam_follow_up_visit_1) as follow_up_visit_1,\n\tsum(details.fsam_follow_up_visit_2) as follow_up_visit_2,\n\tsum(details.fsam_follow_up_visit_3) as follow_up_visit_3,\n\tsum(details.cured) as cured,\n\tsum(details.sam_to_mam) as sam_to_mam,\n\tsum(details.sam_to_sam) as sam_to_sam,\n\tsum(details.defaulters) as defaulters,\n\tsum(details.weight_gain_8gm_kg_day) as weight_gain_8gm_kg_day,\n\tsum(details.weight_gain_15) as weight_gain_15\n\tfrom health_infra_details\n\tinner join child_cmtc_nrc_health_facility_wise_analytics_wise_details details on health_infra_details.id = details.health_infra_id\n\tinner join dates on details.month_year between dates.from_date and dates.to_date\n\tgroup by health_infra_details.id\n), det as (\n\tselect row_number() over() as sr_no, \n\thealth_infra_details.name,\n\thealth_infra_details.id as hidden_health_id,\n\tcoalesce(health_infra_wise_analytics.total_admitted) as total_admitted,\n\tcoalesce(health_infra_wise_analytics.discharge_from_facility) as discharge_from_facility,\n\tcoalesce(health_infra_wise_analytics.death) as death,\n\tcoalesce(health_infra_wise_analytics.follow_up_visit_1) as follow_up_visit_1,\n\tcoalesce(health_infra_wise_analytics.follow_up_visit_2) as follow_up_visit_2,\n\tcoalesce(health_infra_wise_analytics.follow_up_visit_3) as follow_up_visit_3,\n\tcoalesce(health_infra_wise_analytics.cured) as cured,\n\tcoalesce(health_infra_wise_analytics.sam_to_mam) as sam_to_mam,\n\tcoalesce(health_infra_wise_analytics.sam_to_sam) as sam_to_sam,\n\tcoalesce(health_infra_wise_analytics.defaulters) as defaulters,\n\tcoalesce(health_infra_wise_analytics.weight_gain_8gm_kg_day) as weight_gain_8gm_kg_day,\n\tcoalesce(health_infra_wise_analytics.weight_gain_15) as weight_gain_15\n\tfrom health_infra_details\n\tleft join health_infra_wise_analytics on health_infra_details.id = health_infra_wise_analytics.child_id\n)\nselect det.name as \"Facility Name\",\ndet.hidden_health_id,\ndet.total_admitted as \"No. of children admitted at CMTC/NRC\",\ndet.discharge_from_facility as \"Discharge From Facility\",\n\tcase when det.discharge_from_facility = 0 or det.discharge_from_facility is null or det.total_admitted = 0 or det.total_admitted is null then 0 else\n\tround(det.discharge_from_facility * 100.0/det.total_admitted) end as \"percent_col_Discharge From Facility\",\ndet.death as \"Child Death\",\ndet.follow_up_visit_1 as \"Follow Up visit 1\",\ndet.follow_up_visit_2 as \"Follow Up visit 2\",\ndet.follow_up_visit_3 as \"Follow Up visit 3\",\ndet.cured as \"Children Achieved Cured Criteria\",\ndet.sam_to_mam as \"SAM To MAM\",\ndet.sam_to_sam as \"SAM To SAM\",\ndet.defaulters as \"Defaulters\",\n\tcase when det.defaulters = 0 or det.defaulters is null or det.total_admitted = 0 or det.total_admitted is null then 0 else\n\tround(det.defaulters * 100.0/det.total_admitted) end as \"percent_col_Defaulters\",\ndet.weight_gain_8gm_kg_day as \"Weight gain more than 8gm/kg/day\",\n\tcase when det.weight_gain_8gm_kg_day = 0 or det.weight_gain_8gm_kg_day is null or det.discharge_from_facility = 0 or det.discharge_from_facility is null then 0 else\n\tround(det.weight_gain_8gm_kg_day * 100.0/det.discharge_from_facility) end as \"percent_col_Weight gain more than 8gm/kg/day\",\ndet.weight_gain_15 as \"15% weight gain at the end of program\",\n\tcase when det.weight_gain_15 = 0 or det.weight_gain_15 is null or det.discharge_from_facility = 0 or det.discharge_from_facility is null then 0 else\n\tround(det.weight_gain_15 * 100.0/det.discharge_from_facility) end as \"percent_col_15% weight gain at the end of program\"\nfrom det\nunion all\nselect ''<b>Total<b>'',\n#location_id#,\nsum(det.total_admitted),\nsum(det.discharge_from_facility),\n\tcase when (sum(det.discharge_from_facility) = 0 or sum(det.discharge_from_facility) is null or sum(det.total_admitted) = 0 or sum(det.total_admitted) is null) then 0 else \n\tround(sum(det.discharge_from_facility)*100.0/sum(det.total_admitted),2) end,\nsum(det.death),\nsum(det.follow_up_visit_1),\nsum(det.follow_up_visit_2),\nsum(det.follow_up_visit_3),\nsum(det.cured),\nsum(det.sam_to_mam),\nsum(det.sam_to_sam),\nsum(det.defaulters),\n\tcase when (sum(det.defaulters) = 0 or sum(det.defaulters) is null or sum(det.total_admitted) = 0 or sum(det.total_admitted) is null) then 0 else \n\tround(sum(det.defaulters)*100.0/sum(det.total_admitted),2) end,\nsum(det.weight_gain_8gm_kg_day),\n\tcase when (sum(det.weight_gain_8gm_kg_day) = 0 or sum(det.weight_gain_8gm_kg_day) is null or sum(det.discharge_from_facility) = 0 or sum(det.discharge_from_facility) is null) then 0 else \n\tround(sum(det.weight_gain_8gm_kg_day)*100.0/sum(det.discharge_from_facility),2) end,\nsum(det.weight_gain_15),\n\tcase when (sum(det.weight_gain_15) = 0 or sum(det.weight_gain_15) is null or sum(det.discharge_from_facility) = 0 or sum(det.discharge_from_facility) is null) then 0 else \n\tround(sum(det.weight_gain_15)*100.0/sum(det.discharge_from_facility),2) end\t\nfrom det","queryId":1658,"fieldName":"tableField","queryUUID":"ae45b62b-0852-4724-969a-d1870b341093","dataColspan":"<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th colspan=\"2\" style=\"text-align:center\">Children not achieved cured criteria</th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>","queryParams":"from_date,to_date,loggedInUserId,location_id"}],"fieldsContainer":[{"fieldName":"date","fieldType":"onlyMonthFromTo","queryUUID":null,"displayName":"Month","isMandatory":true,"queryUUIDForParam":null,"requiredUptoLevel":1},{"fieldName":"location_id","fieldType":"location","queryUUID":null,"displayName":"Location","isMandatory":true,"fetchUptoLevel":"6","queryUUIDForParam":null,"requiredUptoLevel":1,"fetchAccordingToUserAoi":true}]},"colspanData":true,"isFilterOpen":true,"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'cmtc_follow_visit-2', '30ed9d36-44be-4344-b618-96ab6327ca03'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(607, 'Total ANC Reg.(Anemia Status Of Registered ANC Report)', NULL, true, 'DYNAMIC', NULL, '2020-08-04 14:22:29.702', 78434, '2020-06-24 11:53:23.882', 78434, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Total ANC Reg.(Anemia Status Of Registered ANC Report)\nwith parameters as (\n    select CAST(#location_id# AS INTEGER) as location_id,\n    cast(''#demographic_location_id#'' as TEXT) as demographic_group,\n    to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end, ''MM-DD-YYYY'') as from_date ,\n\tto_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end, ''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date,\n    (select report_preferred_language from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language\n),\nmember_det as (\n    select\n    r.member_id\n    ,r.native_location_id as loc_id\n    ,r.unique_health_id\n    ,r.family_id\n    ,r.member_name as name\n    ,p.preferred_language\n\tfrom\n        rch_pregnancy_analytics_details r\n        ,location_hierchy_closer_det l\n        ,parameters p\n\twhere\n        r.native_location_id  = l.child_id\n        and l.parent_id = p.location_id\n        and r.reg_service_date between p.from_date and p.to_date\n        and (p.demographic_group=''null'' or l.child_loc_demographic_type in (select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))\n    #limit_offset#\n),\nfhw_det as (\n    select\n        loc.loc_id,\n        concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',\n        case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n    from\n        um_user_location ul\n        ,um_user u\n        ,(select distinct loc_id from member_det) loc\n        ,location_hierchy_closer_det\n    where\n        loc.loc_id = location_hierchy_closer_det.child_id\n        and location_hierchy_closer_det.parent_id = ul.loc_id\n        and u.id = ul.user_id\n        and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n        and u.role_id = (select id from um_role_master where name = ''FHW'')\n)\nselect\n    ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\n    get_location_hierarchy_language_wise(member_det.loc_id, member_det.preferred_language) as \"Location\",\n    member_det.unique_health_id as \"Member ID\",\n    member_det.family_id as \"Family ID\",\n    member_det.name as \"Name\",\n    case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom\n    member_det\nleft join\n    fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 1643, "fieldName": "tableField", "queryUUID": "5b1d6438-277c-4219-8efa-7e2355f45b84", "queryParams": "to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"index": 1, "isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "From Month", "queryUUIDForParam": null}, {"index": 2, "isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 3, "isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' > '' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1642, "queryUUIDForParam": "62f4070d-bbc2-4a75-bb93-6cfc52e3ad67"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'total_anc_reg_anemia', '3b106f9b-7d1b-435b-b1a9-3e3288ef3266'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(358, 'PHC Entries (Facility Monitoring Report)', NULL, true, 'DYNAMIC', NULL, '2019-04-18 15:16:58.093', 60512, '2019-04-11 14:48:23.981', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 978, "fieldName": "tableField", "queryUUID": "b685aab2-afdf-4661-8d85-3ed627ede19b", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 977, "queryUUIDForParam": "84843c69-3346-471c-9172-42f7f7d397df"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'phc_entry_fac_perf', '34f8c7be-b576-4d18-b85a-e46438da90f7'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(359, 'CHC Entries (Facility Monitoring Report)', NULL, true, 'DYNAMIC', NULL, '2019-04-18 15:17:20.510', 60512, '2019-04-11 14:51:29.167', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 980, "fieldName": "tableField", "queryUUID": "ab27ffca-3c8c-46e5-ad53-9ba3004ad042", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 979, "queryUUIDForParam": "00110006-46c4-4e34-b4a4-a228e701340b"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'chc_entries_fac_perf', 'b1ec44f7-31d8-411c-836c-c1c39111f2fc'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(360, 'SDH Entries (Facility Monitoring Report)', NULL, true, 'DYNAMIC', NULL, '2019-04-18 15:17:36.471', 60512, '2019-04-11 14:55:34.851', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 982, "fieldName": "tableField", "queryUUID": "b4e9dd85-2aea-4d5f-8625-b2e4e70641c2", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 981, "queryUUIDForParam": "ee985b80-7425-4f29-a18c-cb7c4f0a6947"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'sdh_entries_fac_perf', '8b2db041-2834-4b81-a7f6-88218173798b'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(366, 'LBW Child Registered (3.6-4 kg)', NULL, true, 'DYNAMIC', NULL, '2019-10-10 12:38:27.335', 409, '2019-04-12 16:53:08.445', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--LBW Child Registered (3.6-4 kg)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.delivery_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.delivery_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.birth_weight is not null and c.birth_weight >= 3.5 and c.birth_weight < 4\n\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 994, "fieldName": "tableField", "queryUUID": "63312961-7650-4b49-9baf-3a8b1c9d4799", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 993, "queryUUIDForParam": "307ad64f-d6f0-40aa-b18b-66b77374d390"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'ch_lbw_ch_3.6_4', '195e75b6-b60b-4aff-bbf2-d02509bfa70c'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(435, 'Home Delivey by SBA (Service provide to pregnant women with lmp)', NULL, true, 'DYNAMIC', NULL, '2020-08-03 17:04:36.371', 63746, '2019-05-28 18:33:14.084', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Home Delivey by SBA (Service provide to pregnant women with lmp)\nwith parameters as (\nselect CAST(#location_id# AS INTEGER) as location_id,\nto_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_month_year,\nto_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') as to_month_year,\nCAST(''#demographic_location_id#'' AS TEXT) as demographic_group,\n(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language\n),\nmember_det as (\n\tselect r.member_id, r.native_location_id as loc_id,\n\tr.unique_health_id, r.family_id, r.member_name as name,\n\tto_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd\n\tfrom rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p\n\twhere r.native_location_id  = l.child_id\n\tand l.parent_id = p.location_id\n\tand (home_del and delivery_outcome in (''LBIRTH'',''SBIRTH'') \n\t\tand (delivery_done_by is null  or delivery_done_by != ''NON-TBA''))\n\tand r.lmp_month_year between p.from_month_year and p.to_month_year\n\tand (p.demographic_group=''null'' or l.child_loc_demographic_type in ( select distinct demographic_type from location_demographic_type_master \n\twhere demographic_group = p.demographic_group)) \n\torder by r.lmp_date\n\t#limit_offset#\n), loc_det as (\n\tselect loc.loc_id, \n        string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p\n\twhere lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',\n\tcase when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 1153, "fieldName": "tableField", "queryUUID": "04ee3c00-6a03-4052-98b5-2f3713f68ea6", "queryParams": "limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1152, "queryUUIDForParam": "76c200a1-f61c-42b1-8d7e-ade4ceea3226"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 1151, "queryUUIDForParam": "d903c868-427b-4e6e-afc9-6480d78c74f8"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 1150, "queryUUIDForParam": "4663aa51-c875-47c8-828a-e7321cc07555"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mtr_del_sba_with_lmp', '84e5444f-5d86-4e69-8f6f-d56e3aa29e05'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(436, 'Home Del by Non SBA (Service provide to pregnant women with lmp)', NULL, true, 'DYNAMIC', NULL, '2019-09-23 16:42:52.375', 63746, '2019-05-28 18:33:17.299', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1157, "fieldName": "tableField", "queryUUID": "a301afd4-60b1-4ad4-be10-c4e9fecb171d", "queryParams": "limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 1155, "queryUUIDForParam": "b4729d63-5c38-4728-bf2b-ef66715321e7"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 1154, "queryUUIDForParam": "5305db70-46ce-4cb9-938c-20d5e4a55ac7"}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1156, "queryUUIDForParam": "c0431ecb-7024-4ffa-8663-af6c24cae5cc"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mtr_del_nonsba_lmp', '52b29885-471a-4326-8c68-1a7a930563a8'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(235, 'Penta 2 Given (Yearly)', NULL, true, 'DYNAMIC', NULL, '2019-04-09 13:56:21.423', 1, '2019-02-18 13:09:32.269', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, f.location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f\n\twhere l.child_id = c.penta2_loc and m.id = c.member_id and f.family_id = m.family_id\n\tand l.parent_id = #location_id#\n\tand c.penta2 is not null\n\tgroup by m.id, f.location_id, c.dob, penta2\n\thaving case when extract(month from penta2) > 3 \n\tthen concat(extract(year from penta2), ''-'', extract(year from penta2) + 1)\n\telse concat(extract(year from penta2) - 1, ''-'', extract(year from penta2)) end = \n\t\tcase when #financial_year# is null then \n\t\t\tcase when extract(month from current_date) > 3 \n\t\t\tthen concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)\n\t\t\telse concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end\n\t\telse ''#financial_year#'' end\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 571, "fieldName": "tableField", "queryUUID": "a4274782-25e3-44b5-bfb4-02d101f9cd45", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryForParam": "", "queryIdForParam": "", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 570, "queryUUIDForParam": "3cd5a21a-cfbc-4d77-be82-2b0f4b3a1a00"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_penta2_yeardate', '8ec68640-0bcb-474c-82d0-0190a28b6186'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(361, 'DH Entries (Facility Monitoring Report)', NULL, true, 'DYNAMIC', NULL, '2019-04-18 15:17:51.712', 60512, '2019-04-11 14:57:13.212', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 984, "fieldName": "tableField", "queryUUID": "351d6033-9460-45ae-999f-64c2b574f629", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 983, "queryUUIDForParam": "150a60b9-8223-473d-8f5b-8d862968e17f"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'dh_entries_fac_perf', '03f66113-9a43-45c3-9b47-95305b1cd448'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(362, 'MCH Entries (Facility Monitoring Report)', NULL, true, 'DYNAMIC', NULL, '2019-04-18 15:18:08.114', 60512, '2019-04-11 14:59:08.773', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 986, "fieldName": "tableField", "queryUUID": "2d61d587-a2c2-499d-a53a-5506e07802d3", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 985, "queryUUIDForParam": "969f1155-4483-49e9-99bb-5b8dfa49a67a"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'mch_entries_fac_perf', 'ac018458-d21e-4b67-9b5a-498d1ada3cb2'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(363, 'LBW Child Registered (2.1-2.5 kg)', NULL, true, 'DYNAMIC', NULL, '2019-10-09 19:15:21.105', 64189, '2019-04-12 15:52:53.939', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--2.1-2.5 kg(LBW Child Registered)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.delivery_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.delivery_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.birth_weight is not null and c.birth_weight >= 2 and c.birth_weight < 2.5\n\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 988, "fieldName": "tableField", "queryUUID": "dd3bfddd-b05d-4bc2-9623-18eab3b51a1b", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 987, "queryUUIDForParam": "7072f280-6637-41bd-b03e-1a1b7f25ff7f"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_lbw_ch_2.1-2.5', 'c66ec2c8-b169-4380-b2a3-b23ee809ecbc'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(369, 'UPHC Infrastructures (Facility Performance)', NULL, true, 'DYNAMIC', NULL, '2020-02-26 17:54:40.150', 60512, '2019-04-16 11:13:35.749', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1000, "fieldName": "tableField", "queryUUID": "4d593128-4833-4791-8825-7f4ade66320e", "queryParams": "depth_flag,limit_offset,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "depth_flag", "fieldType": "text", "queryUUID": null, "displayName": "depth_flag", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 999, "queryUUIDForParam": "ed43e0ce-4753-43d2-91a0-cda414c68a7e"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'uph_entries_fac_perf', '76d57c62-7851-4fa6-aa60-5fdad17fcee6'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(519, 'Successful - Duplicate member verification (GVK : Call effectiveness reports)', NULL, true, 'DYNAMIC', NULL, '2019-12-27 20:29:21.926', 66522, '2019-08-28 16:17:53.742', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with dates as(\n\tselect\n\tto_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date ,\n\tto_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end, ''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_date \n),call_master_ids as (\nselect id,\ncreated_on,\nget_location_hierarchy(location_id) as Location_hierarchy\nfrom gvk_manage_call_master\ninner join dates on gvk_manage_call_master.created_on between dates.from_date and dates.to_date\nwhere gvk_manage_call_master.location_id in (select child_id from location_hierchy_closer_det where parent_id  = (case when #location_id# = -2 then 2 else #location_id# end) \nand depth <= (case when #location_id# = -2 then 0 else 8 end))\nand gvk_manage_call_master.call_response not in (''com.argusoft.imtecho.gvk.call.cant-talk'',\n\t''com.argusoft.imtecho.gvk.call.no-number-available'',\n\t''com.argusoft.imtecho.gvk.call.wrong-mobile-number'',\n        ''com.argusoft.imtecho.gvk.call.phone-switched-off'',\n        ''com.argusoft.imtecho.gvk.call.unresponsive'',\n        ''com.argusoft.imtecho.gvk.call.not-reachable''\n)\nand gvk_manage_call_master.call_type = ''DUP_MEM_VERI''\n),response_ids as (\nselect \ncall_master_ids.created_on,\nimt_member_duplicate_member_detail.id,\nimt_member_duplicate_member_detail.member1_id,\nimt_member_duplicate_member_detail.member2_id,\nimt_member_duplicate_member_detail.is_member1_valid,\nimt_member_duplicate_member_detail.is_member2_valid,\nLocation_hierarchy\nfrom call_master_ids\ninner join gvk_duplicate_member_verification_response on call_master_ids.id = gvk_duplicate_member_verification_response.manage_call_master_id\ninner join imt_member_duplicate_member_detail on gvk_duplicate_member_verification_response.duplicate_member_verification_id = imt_member_duplicate_member_detail.id\norder by imt_member_duplicate_member_detail.id desc\n#limit_offset#\n),response as (\nselect \nresponse_ids.created_on,\nresponse_ids.id as gvk_duplicate_id,\nLocation_hierarchy,\nconcat(m1.first_name,'' '',m1.middle_name,'' '',m1.last_name,'' ('',m1.unique_health_id,'')'') as member_1_details,\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name,'' ('',m2.unique_health_id,'')'') as member_2_details,\ncase when response_ids.is_member1_valid then ''Yes''\nelse ''No'' end as member_1_valid,\ncase when response_ids.is_member2_valid then ''Yes''\nelse ''No'' end as member_2_valid,\ncase when response_ids.is_member1_valid then response_ids.member1_id\nelse response_ids.member2_id end as member_id\nfrom response_ids\nleft join imt_member m1 on response_ids.member1_id = m1.id\nleft join imt_member m2 on response_ids.member2_id = m2.id\n),member_location_area_ids as (\nselect response.gvk_duplicate_id,response.member_id,imt_family.location_id,imt_family.area_id\nfrom response\ninner join imt_member on imt_member.id = response.member_id\ninner join imt_family on imt_family.family_id = imt_member.family_id\n),asha as (\nselect member_location_area_ids.gvk_duplicate_id,asha.id\nfrom member_location_area_ids\ninner join um_user_location asha_location on member_location_area_ids.area_id = asha_location.loc_id and asha_location.state = ''ACTIVE''\ninner join um_user asha on asha_location.user_id = asha.id and asha.role_id = 24 and asha.state = ''ACTIVE''\n),asha_unique as (\nselect asha.gvk_duplicate_id,max(asha.id)\nfrom asha\ngroup by asha.gvk_duplicate_id\n),fhw as (\nselect member_location_area_ids.gvk_duplicate_id,fhw.id\nfrom member_location_area_ids\ninner join um_user_location fhw_location on member_location_area_ids.location_id = fhw_location.loc_id and fhw_location.state = ''ACTIVE''\ninner join um_user fhw on fhw_location.user_id = fhw.id and fhw.role_id = 30 and fhw.state = ''ACTIVE''\n),fhw_unique as (\nselect fhw.gvk_duplicate_id,max(fhw.id)\nfrom fhw\ngroup by fhw.gvk_duplicate_id\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nresponse.member_1_details as \"Duplicate Member 1 Verification\",\nresponse.member_2_details as \"Duplicate Member 2 Verification\",\nLocation_hierarchy as \"Location\",\nto_char(response.created_on,''DD-MM-YYYY HH:MI PM'') as  \"Call Date\",\nresponse.member_1_valid as \"Is Member 1 Verified\",\nresponse.member_2_valid as \"Is Member 2 Verified\",\nconcat(fhw_user.first_name,'' '',fhw_user.middle_name,'' '',fhw_user.last_name) as \"FHW Name\",\nconcat(asha_user.first_name,'' '',asha_user.middle_name,'' '',asha_user.last_name) as \"ASHA Name\"\nfrom response\ninner join imt_member on response.member_id = imt_member.id\ninner join imt_family on imt_family.family_id = imt_member.family_id\nleft join asha_unique on response.gvk_duplicate_id = asha_unique.gvk_duplicate_id\nleft join fhw_unique on response.gvk_duplicate_id = fhw_unique.gvk_duplicate_id\nleft join um_user asha_user on asha_unique.max = asha_user.id\nleft join um_user fhw_user on fhw_unique.max = fhw_user.id", "queryId": 1405, "fieldName": "tableField", "queryUUID": "78f37dac-17fd-4d8f-b712-3299e8024b48", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"index": 1, "isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date", "queryIdForParam": 1403, "queryUUIDForParam": "d310c88f-24ad-4f10-a279-ef93d546465b"}, {"index": 2, "isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date", "queryIdForParam": 1404, "queryUUIDForParam": "03b026a2-391e-4840-9353-b7f667e4038c"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1406, "queryUUIDForParam": "98a51dcd-b8a1-42b7-9e73-624348ead13d"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'gvk_dup_mem_verifi', '3ec4cf5c-a1cf-48b7-8b5b-43c8f8299842'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(351, 'No. of OPDs (OPD/IPD Daily Performance Report)', NULL, true, 'DYNAMIC', NULL, '2020-11-24 15:07:06.331', 60512, '2019-04-10 18:41:01.305', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with prefered_language as (\nselect \tcase \n\t\twhen report_preferred_language = ''EN'' then true  \n\t\telse false \n\tend as is_enlish\nfrom um_user where id = #loggedInUserId# \n), health_infra_ids as(\n\tselect health_infrastructure_details.id as health_infrastrucutre_id,sum(facility_performance_master.no_of_opd_attended) as no_of_opd_attended\n\tfrom health_infrastructure_details\n\tleft join facility_performance_master on health_infrastructure_details.id = facility_performance_master.health_infrastrucutre_id\n\tand facility_performance_master.performance_date between \n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) \n\tand \n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''\n\twhere health_infrastructure_details.location_id in\n\t(select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth <= (case when #depth_flag# = -1 then 0 else 8 end))\n\tand health_infrastructure_details.type in (1061,1063,1009,1008,1007,1012,1084)\n\tgroup by health_infrastructure_details.id\n\t#limit_offset#\n)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nhealth_infrastructure_details.name as \"Name\",\nlistvalue_field_value_detail.value as \"Type\",\ncase when prefered_language.is_enlish then get_location_hierarchy_language_wise(health_infrastructure_details.location_id, ''EN'')\n\t\t\t\telse get_location_hierarchy(health_infrastructure_details.location_id) end as \"Location\",\ncoalesce(health_infra_ids.no_of_opd_attended, 0) as \"No. of OPDs\"\nfrom health_infra_ids\ninner join health_infrastructure_details on health_infra_ids.health_infrastrucutre_id = health_infrastructure_details.id\ninner join listvalue_field_value_detail on health_infrastructure_details.type = listvalue_field_value_detail.id\ninner join prefered_language on true","queryId":964,"fieldName":"tableField","queryUUID":"b5602d73-a2ba-4490-b668-19804bd2b7d2","queryParams":"depth_flag,limit_offset,from_date,to_date,loggedInUserId,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"from_date","fieldType":"text","queryUUID":null,"displayName":"From Date","queryUUIDForParam":null},{"isHidden":true,"fieldName":"to_date","fieldType":"text","queryUUID":null,"displayName":"To Date","queryUUIDForParam":null},{"isHidden":true,"fieldName":"depth_flag","fieldType":"text","queryUUID":null,"displayName":"Depth Flag","queryUUIDForParam":null,"index":2},{"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":963,"queryUUIDForParam":"e29f6671-ca47-43fb-ad01-4e533c404db8"}]},"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","isBackButtonRequired":true}', 'opd_count_fac_perf', '89d7c9b0-e705-474f-9bce-5e5b48d5458e'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(370, 'Total Entries (Facility Performance Report)', NULL, true, 'DYNAMIC', NULL, '2019-09-09 10:07:01.526', 60512, '2019-04-18 13:01:28.774', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with distinct_health_infra_ids as(\n\tselect distinct health_infrastrucutre_id from facility_performance_master\n\twhere facility_performance_master.performance_date between \n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) \n\tand \n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''\n),health_infra_ids as(\n\tselect health_infrastructure_details.id,health_infrastructure_details.name,\n\thealth_infrastructure_details.address,health_infrastructure_details.location_id\n\tfrom distinct_health_infra_ids\n\tinner join health_infrastructure_details on health_infrastructure_details.id = distinct_health_infra_ids.health_infrastrucutre_id\n\twhere health_infrastructure_details.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\tand health_infrastructure_details.type in (1061,1009,1008,1007,1012)\n),location_hierarchys as (\n\tselect health_infra_ids.id,string_agg(l2.name,''>'' order by lhcd.depth desc) as location_hierarchy\n\tfrom health_infra_ids \n\tinner join location_hierchy_closer_det lhcd on lhcd.child_id = health_infra_ids.location_id\n\tinner join location_master l2 on l2.id = lhcd.parent_id\n\tgroup by health_infra_ids.id\n)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nhealth_infra_ids.name as \"Name\",\nlocation_hierarchys.location_hierarchy as \"Location\",\nhealth_infra_ids.address as \"Address\"\nfrom health_infra_ids\ninner join location_hierarchys on health_infra_ids.id = location_hierarchys.id", "queryId": 1002, "fieldName": "tableField", "queryUUID": "fa884bf1-84e8-46fb-aef5-eda30a73dd18", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1001, "queryUUIDForParam": "d13ccd12-12dd-4134-a3ab-b5a2db136751"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'total_entrs_fac_perf', '937726da-bcb5-4274-85d7-3212f2247e12'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(371, 'PHC Not Entered (Facility Monitoring Report)', NULL, true, 'DYNAMIC', NULL, '2019-04-18 15:19:31.282', 60512, '2019-04-18 15:19:31.282', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1004, "fieldName": "tableField", "queryUUID": "c11991d9-097a-4228-b36d-9f1f2d15b9fc", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1003, "queryUUIDForParam": "09ff907d-c1c5-4204-b1be-719f5759958d"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'phc_not_ent_fac_perf', '77f7f700-8a96-4b4b-983b-c718a2eeb6b3'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(372, 'CHC Not Entered (Facility Monitoring Report)', NULL, true, 'DYNAMIC', NULL, '2019-04-18 15:32:00.832', 60512, '2019-04-18 15:32:00.832', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1006, "fieldName": "tableField", "queryUUID": "d55800f8-b351-4950-bc6f-18741116d176", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1005, "queryUUIDForParam": "89cccbea-eb53-45c6-baa0-0ed1797c80ee"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'chc_not_ent_fac_perf', 'ef781d34-9952-416d-87ea-80c4228a05e2'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(148, 'DPT 3 given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 12:00:35.736', 1, '2019-02-05 12:00:43.682', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--DPT 3 given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n years as ( \n\tselect concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, \n\tcast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date\n\tfrom generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc\n), child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand y.financial_year = ''#financial_year#''\n    and c.is_valid_for_tracking_report = true\n\tand c.dpt3 is not null\n\tand c.dob between y.from_date and y.too_date\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 250, "fieldName": "tableField", "queryUUID": "1566114f-a313-45b8-a98c-b36e812f9125", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": false, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 249, "queryUUIDForParam": "76c7b9f4-1029-4280-be0c-426ab773bee7"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_dpt3_given', 'ee4c83c0-abe7-4185-ab57-6bf98d94e672'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(151, 'FIPV 2 given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 12:00:16.239', 1, '2019-02-05 12:11:39.265', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--FIPV 2 given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n years as ( \n\tselect concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, \n\tcast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date\n\tfrom generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc\n), child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.is_valid_for_tracking_report = true\n    and y.financial_year = ''#financial_year#''\n\tand c.opv3 is not null\n\tand c.dob between y.from_date and y.too_date\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 258, "fieldName": "tableField", "queryUUID": "48ffacb4-4c3a-4d84-9a8c-4548eed5a85d", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 257, "queryUUIDForParam": "2ae8bc76-9910-4357-9f0a-d315777e3101"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_fipv2_given', '56167da9-2cdd-4cf9-9d75-b50f96c80fe6'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(190, 'OPV 1 given(Immunization Services Provided to Children with Date of Birth)', NULL, true, 'DYNAMIC', NULL, '2020-05-25 16:44:23.305', 1, '2019-02-13 12:19:31.424', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--OPV 1 given(Immunization Services Provided to Children with Date of Birth)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.opv1 is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 387, "fieldName": "tableField", "queryUUID": "465b4f9c-6cd4-44b6-a891-34d7d6b674c0", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 384, "queryUUIDForParam": "2bf58ee5-fecc-4695-8262-f20dec794340"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 385, "queryUUIDForParam": "75ca0fbc-132f-4fc9-8a77-48af3065284d"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 386, "queryUUIDForParam": "59275760-d3fc-42ff-a8f3-3fc15c68c30e"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_opv1_monthly', '66e3ffe6-ce09-4deb-a7fb-2336159676e2'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(373, 'SDH Not Entered (Facility Monitoring Report)', NULL, true, 'DYNAMIC', NULL, '2019-04-18 15:33:39.379', 60512, '2019-04-18 15:33:39.379', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1008, "fieldName": "tableField", "queryUUID": "70d26f5b-f722-424c-b811-6d20afa96753", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1007, "queryUUIDForParam": "56535e84-703b-4d49-a4bf-4b0c01d32c5d"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'sdh_not_ent_fac_perf', '7eb50f87-72ed-48f1-8270-f4734d353e27'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(374, 'DH Not Entered (Facility Monitoring Report)', NULL, true, 'DYNAMIC', NULL, '2019-04-18 15:35:55.236', 60512, '2019-04-18 15:35:55.236', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1010, "fieldName": "tableField", "queryUUID": "f31f913a-32ec-4472-9520-1baac8d5e4fa", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1009, "queryUUIDForParam": "061d11bb-aff3-4626-99bd-fb8e51dff172"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'dh_not_ent_fac_perf', '5153f4b2-59b2-4d2c-b3b5-4b41d7e6634b'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(375, 'MCH Not Entered (Facility Monitoring Report)', NULL, true, 'DYNAMIC', NULL, '2019-04-18 15:39:00.738', 60512, '2019-04-18 15:39:00.738', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1012, "fieldName": "tableField", "queryUUID": "e2f34103-8bd5-4a40-898f-cd9709c1a964", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1011, "queryUUIDForParam": "8174997e-1325-495c-87c2-b1670205680f"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'mch_not_ent_fac_perf', '2b85c19f-fa60-4be9-8895-97e6714be2c9'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(537, 'Location Wise Task Completion(Old)', NULL, true, 'DYNAMIC', NULL, '2020-02-11 16:59:24.542', 74841, '2020-01-08 18:18:55.060', 74841, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "WITH loc_det AS (\n    SELECT\n        child_id as id\n    FROM\n        location_hierchy_closer_det\n    WHERE\n        parent_id = #location_id#\n        AND \"depth\" = 1\n),\ndates AS (\n    SELECT\n        to_date(\n            CASE WHEN ''#from_date#'' = ''null'' THEN\n                NULL\n            ELSE\n                ''#from_date#''\n            END, ''MM-DD-YYYY'') AS from_date,\n        to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date\n)\n,location_wise_task_complition_rate AS (\n    SELECT\n        lh.parent_id,\n        sum(ul.missed_count) as missed_count,\n        sum(ul.pending_count) as pending_count,\n        sum(ul.on_completed_count) as on_completed_count,\n        sum(ul.after_due_completed_count) as after_due_completed_count,\n        sum(ul.due_pending) as due_pending\n    FROM\n        location_wise_task_complition_rate_analysis ul,\n        dates,location_hierchy_closer_det lh\n    WHERE\n        ul.month_year BETWEEN dates.from_date AND dates.to_date\n        AND lh.parent_id IN (select id from loc_det)\n        and lh.child_id = ul.location_id\t\t\n        and (\n\t\t\tcase \n\t\t\twhen #notification_type# = ''-1'' then ul.notification_type_id in (select id from notification_type_master nt where role_id = #role_id#) \n\t\t\telse ul.notification_type_id = #notification_type# end)\n        GROUP BY\n            lh.parent_id\n)\nSELECT\n    lm.id as \"hidden_location_id\",\n    lm.english_name AS \"Location\",\n    COALESCE(round((((uwc.on_completed_count +  uwc.after_due_completed_count) * 100.0) / NULLIF((uwc.on_completed_count +  uwc.after_due_completed_count + uwc.pending_count + \n    uwc.due_pending + uwc.missed_count), 0)), 2), 0) as \"Task Completion Rate\",\n    COALESCE(uwc.on_completed_count, 0) as \"On time Complete\",\n    COALESCE(uwc.after_due_completed_count, 0) as \"After Due Completed Count\",\n    COALESCE(uwc.pending_count, 0) as \"Pending Count\",\n    COALESCE(uwc.due_pending, 0) as \"Due Pending\",\n    COALESCE(uwc.missed_count, 0) as \"Missed\",\n    COALESCE((uwc.on_completed_count + uwc.after_due_completed_count + uwc.pending_count + uwc.due_pending + uwc.missed_count), 0) as \"Total\"\nFROM\n    location_wise_task_complition_rate uwc\n    inner join location_master lm   \n    on lm.id = uwc.parent_id\nunion all\nselect\n\tnull,\n\t\t''<b>Total</b>'',\n        COALESCE(round(((sum(uwc.on_completed_count +  uwc.after_due_completed_count) * 100.0) / NULLIF(sum(uwc.on_completed_count +  uwc.after_due_completed_count + uwc.pending_count + \n    uwc.due_pending + uwc.missed_count), 0)), 2),0),\n\t\tCOALESCE(sum(uwc.on_completed_count), 0) as \"On time Complete\",\n        COALESCE(sum(uwc.after_due_completed_count), 0) as \"After Due Completed Count\",\n        COALESCE(sum(uwc.pending_count), 0) as \"Pending Count\",\n        COALESCE(sum(uwc.due_pending), 0) as \"Due Pending\",\n        COALESCE(sum(uwc.missed_count), 0) as \"Missed\",\n        COALESCE(sum(uwc.on_completed_count) + sum(uwc.after_due_completed_count) + sum(uwc.pending_count) + sum(uwc.due_pending) + sum(uwc.missed_count), 0)\n\tfrom location_wise_task_complition_rate uwc\n        inner join location_master lm\n        on lm.id = uwc.parent_id", "queryId": 1476, "fieldName": "tableField", "queryUUID": "ed582e7e-ff5f-44ed-8f58-a1ef4fca7cff", "queryParams": "notification_type,from_date,to_date,role_id,location_id"}], "fieldsContainer": [{"index": 2, "query": "select -1 as id, ''All'' as \"name\"\nunion\nselect id,name from notification_type_master \nwhere role_id = #role_id# and  id != 1\norder by id", "isQuery": true, "queryId": 1475, "fieldName": "notification_type", "fieldType": "comboForReport", "queryUUID": "371861aa-a08c-4567-96c8-78f37489f921", "undefined": 2, "displayName": "Notification Type", "isMandatory": true, "queryParams": "role_id", "availableOptions": [], "queryUUIDForParam": null, "requiredUptoLevel": 1}, {"index": 1, "query": "select id,name from um_role_master where state = ''ACTIVE'' and id in (24,30)  order by name;", "isQuery": true, "queryId": 1495, "fieldName": "role_id", "fieldType": "comboForReport", "queryUUID": "c59d3ffc-fc81-44a4-8ad5-55215c3a706d", "undefined": 1, "displayName": "Role", "isMandatory": true, "queryParams": null, "availableOptions": [], "queryUUIDForParam": null, "requiredUptoLevel": 1}, {"isHidden": false, "fieldName": "location_id", "fieldType": "location", "queryUUID": null, "undefined": 0, "displayName": "Location", "isMandatory": true, "fetchUptoLevel": "6", "queryUUIDForParam": null, "requiredUptoLevel": 1, "fetchAccordingToUserAoi": true}, {"fieldName": "date", "fieldType": "onlyMonthFromTo", "queryUUID": null, "undefined": 3, "displayName": "Month", "isMandatory": true, "queryUUIDForParam": null, "requiredUptoLevel": 1}], "tableFieldContainer": [{"index": 0, "isLink": true, "fieldName": "Task Completion Rate", "customParam": "", "customState": "techo.report.view({\"id\":538,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_date\":\"$from_date$\", \"to_date\":\"$to_date$\", \"notification_type\":\"$notification_type$\",\"role_id\":\"$role_id$\"}})", "navigationState": null, "locationLevelForLink": "4"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'loc_task_completion', 'f43d9a58-464b-49c3-b2ca-fd9d44f93cf5'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(376, 'Total Not Entered (Facility Monitoring Report)', NULL, true, 'DYNAMIC', NULL, '2019-04-18 15:47:21.116', 60512, '2019-04-18 15:47:21.116', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1014, "fieldName": "tableField", "queryUUID": "76069c23-c6b5-4022-b395-df3b49530c0f", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1013, "queryUUIDForParam": "9d45b884-fa27-45bf-9ee5-9bb879ced069"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'tot_not_ent_fac_perf', '424d36c4-03c9-41d3-9015-1a3e7d19ee1c'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(378, 'TT2+TT Booster(ANC Services Provided During The Year) (Monthly)', NULL, true, 'DYNAMIC', NULL, '2020-02-17 13:43:18.558', 60512, '2019-04-22 16:41:29.201', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1020, "fieldName": "tableField", "queryUUID": "ad94a03b-cdfe-4935-82d8-34d556f94ac0", "queryParams": "to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1019, "queryUUIDForParam": "9f87dca9-779e-4a69-b1ab-09fe83dc3f38"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer", "isBackButtonRequired": false}', 'tt2b_maternal_month', '16a64b85-6ddd-4df7-b980-58e7f7711f2e'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(673, 'No. of Health Infra. with Avg less than 20 OPD(OPD/IPD Daily Performance Report)', NULL, true, 'DYNAMIC', NULL, '2020-11-25 18:16:32.648', 74841, '2020-11-25 17:19:47.093', 74841, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true},{"fieldName":"depth_flag","displayName":"Depth Flag","fieldType":"text","isHidden":true},{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1815,"queryUUIDForParam":"f1e26349-047c-4615-8c3d-de41eb75ef76"}],"tableContainer":[{"fieldName":"tableField","query":"with prefered_language as (\nselect \tcase \n\t\twhen report_preferred_language = ''EN'' then true  \n\t\telse false \n\tend as is_enlish\nfrom um_user where id = #loggedInUserId# \n), health_infra_ids as(\n\tselect health_infrastructure_details.id as health_infrastrucutre_id,\n    sum(facility_performance_master.no_of_opd_attended) as no_of_opd_attended,\n    avg(facility_performance_master.no_of_opd_attended) as avg_opds\n\tfrom health_infrastructure_details\n\tleft join facility_performance_master on health_infrastructure_details.id = facility_performance_master.health_infrastrucutre_id\n\tand facility_performance_master.performance_date between \n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) \n\tand \n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''\n\twhere health_infrastructure_details.location_id in\n\t(select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth <= (case when #depth_flag# = -1 then 0 else 8 end))\n\tand health_infrastructure_details.type in (1061,1063,1009,1008,1007,1012,1084)\n\tgroup by health_infrastructure_details.id\n\t#limit_offset#\n)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nhealth_infrastructure_details.name as \"Name\",\nlistvalue_field_value_detail.value as \"Type\",\ncase when prefered_language.is_enlish then get_location_hierarchy_language_wise(health_infrastructure_details.location_id, ''EN'')\n\t\t\t\telse get_location_hierarchy(health_infrastructure_details.location_id) end as \"Location\",\ncoalesce(round(health_infra_ids.avg_opds), 0) as \"Avg No. of OPDs\"\nfrom health_infra_ids\ninner join health_infrastructure_details on health_infra_ids.health_infrastrucutre_id = health_infrastructure_details.id\ninner join listvalue_field_value_detail on health_infrastructure_details.type = listvalue_field_value_detail.id\ninner join prefered_language on true\nwhere round(avg_opds) < 20","queryId":1816,"queryUUID":"7da096e7-bab3-42de-83c8-768095f0457f","queryParams":"depth_flag,limit_offset,from_date,to_date,loggedInUserId,location_id"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":""}', 'avg_20_opd_ipd', 'ed6842d6-5dac-46ca-99b6-b94453133d93'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(379, 'Early ANC(ANC Services Provided During The Year) (Monthly)', NULL, true, 'DYNAMIC', NULL, '2020-02-17 14:05:52.303', 60512, '2019-04-22 16:44:28.211', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1022, "fieldName": "tableField", "queryUUID": "7504271c-3076-4532-bd2f-97af558011b8", "queryParams": "to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1021, "queryUUIDForParam": "32d918a5-b323-4f35-911d-97db29c6f802"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": false}', 'early_anc_mat_month', 'efc8e3ec-b5f3-481b-9d3f-1ab587ae1eec'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(116, 'Not Fully Immunised Child Report(Immunization Services Provided to Children with Date of Birth)', NULL, true, 'DYNAMIC', NULL, '2020-12-21 17:54:43.868', 58981, '2019-01-21 19:10:27.315', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"--Not Fully Immunised Child Report(Immunization Services Provided to Children with Date of Birth)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \nchild_det as (\n\tselect m.id, m.unique_health_id, m.family_id, m.dob, c.tracking_location_id as loc_id,\n\tm.first_name || '' '' || m.middle_name || '' '' || m.last_name as name\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id and f.family_id = m.family_id\n\tand l.parent_id = #location_id#\n\tand c.member_id is not null\n\tand c.is_valid_for_tracking_report = true\n\tand (c.member_state != ''DEAD'' or c.dob + interval ''1 year''  < c.death_date)\n        --and c.death_date is not null\n\tand c.fully_immunization_in_number_of_month is null\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\nselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.unique_health_id as \"Child ID\",\nchild_det.family_id as \"Family ID\",\nchild_det.name as \"Name\",\nto_char(child_det.dob,''DD/MM/YYYY'') as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;","queryId":147,"fieldName":"tableField","queryUUID":"a881a323-dd7c-4340-900d-91b0006c599b","queryParams":"limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}],"fieldsContainer":[{"index":1,"isHidden":true,"fieldName":"from_month_year","fieldType":"text","queryUUID":null,"displayName":"From Month","queryUUIDForParam":null},{"isHidden":true,"fieldName":"to_month_year","fieldType":"text","queryUUID":null,"displayName":"To Month","queryUUIDForParam":null},{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":146,"queryUUIDForParam":"8c0f33a6-3ee6-47fe-a1ef-12cf97208bc2","fetchAccordingToUserAoi":true}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","selectedContainer":"tableContainer"}', 'not_fully_immunised', '6d1bbdc0-ce18-46f5-8d80-7f3bca75edb0'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(380, '1 ANC(ANC Services Provided During The Year) (Monthly)', NULL, true, 'DYNAMIC', NULL, '2020-02-17 14:07:07.376', 60512, '2019-04-22 16:47:21.080', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1024, "fieldName": "tableField", "queryUUID": "2616128d-5e83-4710-8bab-367d78b603d0", "queryParams": "to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1023, "queryUUIDForParam": "e130d32a-a61b-4d9a-987d-8fe8ec8b8d04"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": false}', '1_anc_mat_month', '1a8d5a06-9a77-4cda-b84c-7d6c4fde19fc'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(450, 'Out of weighed, less than 2.5 kg (Yearly)', NULL, true, 'DYNAMIC', NULL, '2019-12-30 16:02:10.086', 409, '2019-07-05 15:00:30.700', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Out of weighed, less than 2.5 kg (Yearly)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.delivery_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.delivery_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.birth_weight is not null and c.birth_weight < 2.5\n\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 1193, "fieldName": "tableField", "queryUUID": "fb72a9a2-5527-44b2-9bf7-a9c055db8589", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1192, "queryUUIDForParam": "d2ffbb61-7d00-49d0-83c9-a78a24ac44be"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": false}', 'lbw_yearly', '77a161a6-faaa-426b-bfad-c60a05f68585'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(471, 'Rota Virus 1 (Child Health Services Provided during the year (Yearly))', NULL, true, 'DYNAMIC', NULL, '2019-10-16 18:11:55.087', 409, '2019-07-24 11:05:40.540', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "-------Rota Virus 1-------\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \nchild_det as (\n\tselect m.id, f.location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f\n\twhere l.child_id = c.rota_virus_1_loc and m.id = c.member_id and f.family_id = m.family_id\n\tand l.parent_id = #location_id#\n\tand c.rota_virus_1 is not null\n\tand c.rota_virus_1 >= ''07-01-2019''\n\tand (case when extract(month from rota_virus_1) > 3 \n\tthen concat(extract(year from rota_virus_1), ''-'', extract(year from rota_virus_1) + 1)\n\telse concat(extract(year from rota_virus_1) - 1, ''-'', extract(year from rota_virus_1)) end) = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 1259, "fieldName": "tableField", "queryUUID": "f45e93a9-1c4d-4e2d-97a6-b279738ec20b", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1258, "queryUUIDForParam": "5a2539ac-be96-42cb-a5d0-fe0e2828fd39"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'rota1_ser_dur_year', 'dc3a8764-37eb-432d-b54e-911f735d99d6'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(112, 'Delivery Reported in TeCHO+', NULL, true, 'DYNAMIC', NULL, '2019-06-05 16:51:07.939', 58981, '2019-01-21 11:44:59.716', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 135, "fieldName": "tableField", "queryUUID": "5682a138-44b9-40a8-8471-28ab5fe2c7f6", "queryParams": "limit_offset,from_date,to_date,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 143, "queryUUIDForParam": "4f0ac581-8be6-4793-9966-99106faefd68"}, {"index": 2, "isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date", "queryIdForParam": 194, "queryUUIDForParam": "875bc95b-5a2d-4611-9ad9-6ff50633184a"}, {"index": 1, "isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date", "queryIdForParam": 193, "queryUUIDForParam": "f4baaab8-d576-406d-8f98-4a5ab5d0476e"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'delivery_reported', '651b2d4b-e710-4c1a-b14e-15158fb3f5ae'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(166, 'DPT 2 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 16:54:25.698', 1, '2019-02-11 17:21:55.972', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--DPT 2 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.dpt2 is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 289, "fieldName": "tableField", "queryUUID": "eb8f515d-5d47-417c-a005-b456c78a376d", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 288, "queryUUIDForParam": "bfec8939-de1a-4acf-915b-00cf9d72bc51"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_dpt2_given_yearly', 'f3ad924f-b0de-4732-a7d6-968385335fa4'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(383, '4 ANC(ANC Services Provided During The Year) (Monthly)', NULL, true, 'DYNAMIC', NULL, '2020-02-17 14:10:01.127', 60512, '2019-04-22 17:27:24.781', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1030, "fieldName": "tableField", "queryUUID": "dfe265f5-2b7f-406e-8298-e205e332e9e1", "queryParams": "to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1029, "queryUUIDForParam": "a08d69a0-ac52-4048-b52b-e9a8db8d9d1f"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": false}', '4_anc_mat_month', 'b7aeecd4-4f7c-4894-bf6f-950b1afe7e2d'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(170, 'Penta 3 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 16:55:15.500', 1, '2019-02-11 17:56:41.282', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Penta 3 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.penta3 is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 297, "fieldName": "tableField", "queryUUID": "352ee1b6-4529-4df7-a901-37c7d9abecb0", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 296, "queryUUIDForParam": "2ef032f6-ce63-4060-aa91-4bd8301518af"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_penta3_given_year', 'b6aa1b98-3ac5-4d48-a1a2-52483296afd9'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(19, 'Training Practicing Users', NULL, true, 'DYNAMIC', NULL, '2020-12-04 10:41:47.347', 1027, '2018-04-26 17:41:25.281', 74841, '{"layout":"dynamicReport1","containers":{"tableContainer":[{"query":"with location_det as(\nselect child_id as loc_id from location_hierchy_closer_det  \nwhere parent_id in (select distinct case when #location_id# is not null then #location_id# else loc_id end from um_user_location where user_id = #loggedInUserId# and state = ''ACTIVE'')\n),users AS (\nSELECT tcrr.role_id, tcrr.course_id, \n    uu.id,tr_course_master.module_id,urm.name as roleName,\n\tuu.first_name,uu.last_name,course_name\n\tFROM tr_course_master\n\tINNER JOIN tr_course_role_rel tcrr on tcrr.course_id = tr_course_master.course_id \n    and tr_course_master.course_state = ''ACTIVE''\n\tINNER JOIN um_user uu ON uu.role_id = tcrr.role_id and uu.state = ''ACTIVE''\n\tINNER JOIN um_user_location ul on ul.state = ''ACTIVE'' and ul.user_id = uu.id \n\tINNER JOIN location_det ld on ld.loc_id = ul.loc_id\n\tINNER JOIN um_role_master urm on urm.id = uu.role_id\n\tWHERE \n\tuu.role_id=#role_id# and tr_course_master.course_id =#course_id#\n),\npracticed as (\n\tSELECT distinct on(us.id) concat(us.first_name,'' '',us.last_name) as \"Full Name\",\n\tTO_CHAR(cast(ttm.effective_date as date),''ddth Mon yyyy'') as \"Training Date\",\n\tcase when ttm.location_name is null then ''N/A'' else ttm.location_name end as \"Location\",\n\tconcat(trainer.first_name,'' '',trainer.last_name) as \"Trainer\",\n\tcourse_name as \"Course Name\",\n        us.roleName as \"Role Name\"\n\tfrom tr_certificate_master tcm \n\tINNER JOIN users us on us.id = tcm.user_id and tcm.course_id = us.course_id\n\tinner join listvalue_field_value_detail fvm on fvm.id = us.module_id\n\t\n\tleft join user_form_access ufa on ufa.form_code = fvm.value and ufa.user_id = us.id\n\tINNER JOIN tr_training_master ttm ON tcm.training_id = ttm.training_id\n\tinner join tr_training_primary_trainer_rel tpr on ttm.training_id = tpr.training_id\n\tinner join um_user trainer on tpr.primary_trainer_id = trainer.id\n\t--INNER JOIN tr_course_master cm on cm.course_id = tcm.course_id\n\twhere tcm.certificate_type = ''COURSECOMPLETION'' and us.course_id in (1,7,10,11,26)\n\tand ufa.form_code is null\n\t--ttm.training_state = ''SUBMITTED'' and tcm.certificate_type = ''COURSECOMPLETION'' \n\t--and us.state = ''ACTIVE'' and cm.course_state=''ACTIVE''\n)\nselect ROW_NUMBER() over () as \"Sr. No.\",* from practiced","queryId":32,"fieldName":"tableField","queryUUID":"8f4ef49f-3b1f-4fd4-9c42-324c6e0549e7","queryParams":"course_id,role_id,loggedInUserId,location_id"}],"fieldsContainer":[{"index":2,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"select name as location_id from location_master  where id = #location_id#","queryIdForParam":481,"queryUUIDForParam":"c5122a40-ca46-44ba-9ff6-ce080ba9ddaa"},{"index":1,"isHidden":true,"fieldName":"role_id","fieldType":"text","queryUUID":null,"displayName":"Role","queryForParam":"select name as \"role_id\" from um_role_master where id=#role_id#","queryIdForParam":480,"queryUUIDForParam":"69bc1bcf-04ab-4acc-b04e-2c523fb594c2"},{"index":0,"isHidden":true,"fieldName":"course_id","fieldType":"text","queryUUID":null,"displayName":"Course","queryForParam":"select course_name as course_id from tr_course_master  where course_id=#course_id#","queryIdForParam":479,"queryUUIDForParam":"c77fea2b-5668-48d9-ae98-e653d027711e"}]},"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","selectedContainer":"tableContainer","isBackButtonRequired":true}', 'tr_practice', '42ee7b30-5afd-4d75-8840-89be7bf287fa'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(388, '2 PNC(Delivery Services Provided During The Year) (Monthly)', NULL, true, 'DYNAMIC', NULL, '2020-06-01 13:23:01.215', 60512, '2019-04-22 17:33:39.500', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1040, "fieldName": "tableField", "queryUUID": "69503814-bae8-4338-8a4c-0cf3f2cf07c3", "queryParams": "to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1039, "queryUUIDForParam": "8b1ea3da-94dd-4293-9282-4c2cb1ad8472"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": false}', '2_pnc_mat_monthly', 'a2b62194-1ddb-4963-9d6e-0b7b9f94f239'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(384, 'No of del(Maternal Health Services Provided During The Year) (Monthly)', NULL, true, 'DYNAMIC', NULL, '2020-10-12 22:07:40.607', 60512, '2019-04-22 17:28:38.669', 78434, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"--No of del(Maternal Health Services Provided During The Year)\nwith parameters as (\nselect CAST(#location_id# AS INTEGER) as location_id,\nto_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date,\nto_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date,\nCAST(''#demographic_location_id#'' AS TEXT) as demographic_group,\n(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language\n),member_det as (\n\tselect r.member_id, r.delivery_location_id as loc_id,\n\tr.unique_health_id, r.family_id, r.member_name as name,\n\tto_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.date_of_delivery, ''DD/MM/YYYY'') as dod\n\t,to_char(r.delivery_reg_date,''DD/MM/YYYY'') as reg_date\t\n\tfrom rch_pregnancy_analytics_details r\n\t, location_hierchy_closer_det l\n\t, parameters p\n\twhere r.delivery_location_id  = l.child_id \n\tand r.delivery_outcome in (''LBIRTH'',''SBIRTH'') and (delivery_out_of_state_govt is false and delivery_out_of_state_pvt is false)\n\tand l.parent_id = p.location_id\n\tand r.delivery_reg_date between p.from_date and p.to_date\n        and (p.demographic_group=''null'' or l.child_loc_demographic_type in \n\t\t( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)\n\t)\n\torder by r.delivery_reg_date\n\t#limit_offset#\n), loc_det as (\n\tselect loc.loc_id,  \nstring_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p \n\twhere lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',\n\tcase when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.reg_date as \"Registration date\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.dod as \"Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;","queryId":1032,"fieldName":"tableField","queryUUID":"066d588d-7ab7-4723-95ee-2d32d6a7fedc","queryParams":"to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"from_month","fieldType":"text","queryUUID":null,"displayName":"From Month","queryUUIDForParam":null},{"isHidden":true,"fieldName":"to_month","fieldType":"text","queryUUID":null,"displayName":"To Month","queryUUIDForParam":null},{"isHidden":true,"fieldName":"demographic_location_id","fieldType":"text","queryUUID":null,"displayName":"Demographic Location","queryUUIDForParam":null},{"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1031,"queryUUIDForParam":"685691d7-0cd0-4c88-ad1f-37ffbcace188"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","isBackButtonRequired":false}', 'del_mat_month', 'abbf06c4-6eb0-41eb-afcc-7e8139fe62cb'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(386, 'Abortion(ANC Services Provided During The Year) (Monthly)', NULL, true, 'DYNAMIC', NULL, '2020-10-13 11:50:12.935', 60512, '2019-04-22 17:31:02.901', 78434, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"--Abortion(ANC Services Provided During The Year)\nwith parameters as (\nselect CAST(#location_id# AS INTEGER) as location_id,\nto_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date\n,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date,\nCAST(''#demographic_location_id#'' AS TEXT) as demographic_group,\n(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language\n),member_det as (\n\tselect r.member_id, r.delivery_location_id as loc_id,\n\tr.unique_health_id, r.family_id, \n\tr.member_name as name,\n\tto_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.date_of_delivery, ''DD/MM/YYYY'') as dod\n\t,to_char(r.delivery_reg_date,''DD/MM/YYYY'') as reg_date\t\n\tfrom rch_pregnancy_analytics_details r\n\t, location_hierchy_closer_det l\n\t, parameters p\n\twhere r.delivery_location_id  = l.child_id \n\tand r.delivery_outcome in (''ABORTION'', ''SPONT_ABORTION'') and (delivery_out_of_state_govt is false and delivery_out_of_state_pvt is false) \n\tand l.parent_id = p.location_id\n\tand r.delivery_reg_date between p.from_date and p.to_date\n\tand (p.demographic_group=''null'' or l.child_loc_demographic_type in ( select distinct demographic_type from location_demographic_type_master \n\twhere demographic_group = p.demographic_group)) \n\torder by r.delivery_reg_date\n\t#limit_offset#\n),  loc_det as (\n\tselect loc.loc_id, \nstring_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom (select distinct loc_id from member_det)loc, location_hierchy_closer_det lhcd, location_master l2, parameters p \n\twhere lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat(u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',\n\tcase when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, (select distinct loc_id from member_det)loc,location_hierchy_closer_det\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.reg_date as \"Registration date\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.dod as \"Abortion Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;","queryId":1036,"fieldName":"tableField","queryUUID":"7b53ea77-fb2b-4058-bd31-67f41d3b1aa0","queryParams":"to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"from_month","fieldType":"text","queryUUID":null,"displayName":"From Month","queryUUIDForParam":null},{"isHidden":true,"fieldName":"to_month","fieldType":"text","queryUUID":null,"displayName":"To Month","queryUUIDForParam":null},{"isHidden":true,"fieldName":"demographic_location_id","fieldType":"text","queryUUID":null,"displayName":"Demographic Location","queryUUIDForParam":null},{"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1035,"queryUUIDForParam":"ecaa1f71-415d-49ec-8e51-f6de3aa7b742"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","isBackButtonRequired":false}', 'abort_mat_monthly', '80a06ddb-7247-417a-ac1b-f3ad32d69f42'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(674, 'Severe anemic mother given parentral iron (Iron sucrose/FCM)(Anemia Status Of Registered ANC Report)', NULL, true, 'DYNAMIC', NULL, '2020-12-07 15:55:36.983', 74841, '2020-12-07 15:08:31.758', 74841, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"from_month","displayName":"From Month","fieldType":"text","isUrlParam":true,"isHidden":true},{"fieldName":"to_month","displayName":"To Date","fieldType":"text","isUrlParam":true,"isHidden":true},{"fieldName":"demographic_location_id","displayName":"Demographic Location","fieldType":"text","isUrlParam":true,"isHidden":true},{"fieldName":"location_id","displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' > '' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","isMandatory":false,"requiredUptoLevel":"","isUrlParam":true,"isHidden":true,"fieldType":"text","queryIdForParam":1819,"queryUUIDForParam":"f88423b1-e1ec-4390-8af1-c319495780b8"}],"tableContainer":[{"fieldName":"tableField","query":"with parameters as(\nselect\n\tcast(#location_id# as integer) as location_id,\n\tcast(''#demographic_location_id#'' as text) as demographic_group,\n\tto_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end, ''MM-DD-YYYY'') as from_date ,\n\tto_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end, ''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date ),\nlocation_ids as(\nselect\n\tchild_id\nfrom\n\tlocation_hierchy_closer_det,\n\tparameters p\nwhere\n\tparent_id = p.location_id\n\tand (p.demographic_group = ''null''\n\tor location_hierchy_closer_det.child_loc_demographic_type in (\n\tselect\n\t\tdistinct demographic_type\n\tfrom\n\t\tlocation_demographic_type_master\n\twhere\n\t\tdemographic_group = p.demographic_group) )\n\tand depth = 1 ),\npreg_details as (\nselect\n\tlhcd.child_id as location_id,\n\trpad2.*\nfrom\n\trch_pregnancy_analytics_details rpad2\ninner join parameters on\n\ttrue\ninner join location_hierchy_closer_det lhcd on\n\tlhcd.child_id = rpad2.native_location_id\nwhere\n\trpad2.reg_service_date between parameters.from_date and parameters.to_date\n\tand hb between 0.1 and 6.99\n\tand iron_def_anemia_inj is not null\n\tand lhcd.parent_id in (\n\tselect\n\t\tchild_id\n\tfrom\n\t\tlocation_ids)\n\tand lhcd.child_id = rpad2.native_location_id\norder by\n\trpad2.pregnancy_reg_id \n #limit_offset#\n),\nanmeia_detail as (\nselect\n\trpad2.unique_health_id,\n\tmax(case when ram.iron_def_anemia_inj = ''FCM'' then ram.health_infrastructure_id else null end) as fcm_infra,\n\tmax(case when ram.iron_def_anemia_inj = ''IRON_SUCROSE'' then ram.health_infrastructure_id else null end) as is_infra\nfrom\n\tpreg_details rpad2\ninner join rch_anc_master ram on\n\tram.pregnancy_reg_det_id = rpad2.pregnancy_reg_id\ngroup by\n\trpad2.unique_health_id ),\nloc as (\n\tselect distinct location_id as loc_id from preg_details\n)\n, fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n),\nresult as (\nselect\n\tget_location_hierarchy(preg_details.location_id) as \"Location\",\n\tpreg_details.unique_health_id as \"Health id\",\n\tmember_name as \"Mother name\",\n\tfhw_det.fhw as \"FHW details\",\n\tcase\n\t\twhen (anmeia_detail.fcm_infra is not null\n\t\tand anmeia_detail.is_infra is not null) then ''Both''\n\t\twhen anmeia_detail.fcm_infra is not null then ''Fcm''\n\t\twhen anmeia_detail.is_infra is not null then ''Iron Sucrose''\n\tend as \"Iron Scrose or FCM\",\n\tcase\n\t\twhen fcm_hid.id is not null then concat_ws('' '', fcm_lfvd.value, fcm_hid.\"name\")\n\t\telse ''-''\n\tend as \"Place of Fcm given\",\n\tcase\n\t\twhen is_hid.id is not null then concat_ws('' '', is_lfvd.value , is_hid.\"name\")\n\t\telse ''-''\n\tend as \"Place of Iron Sucrose given\"\nfrom\n\tpreg_details\nleft join fhw_det on fhw_det.loc_id = preg_details.location_id\nleft join anmeia_detail on\n\tanmeia_detail.unique_health_id = preg_details.unique_health_id\nleft join health_infrastructure_details fcm_hid on\n\tfcm_hid.id = anmeia_detail.fcm_infra\nleft join listvalue_field_value_detail fcm_lfvd on\n\tfcm_lfvd.id = fcm_hid.\"type\"\nleft join health_infrastructure_details is_hid on\n\tis_hid.id = anmeia_detail.is_infra\nleft join listvalue_field_value_detail is_lfvd on\n\tis_lfvd.id = is_hid.\"type\" )\nselect\n\trow_number() over () + cast(SUBSTRING(''#limit_offset#'', position(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\n\tresult.*\nfrom\n\tresult","queryId":1820,"queryUUID":"fee9a2c4-3e25-414c-a17e-8fbef734a60a","queryParams":"to_month,limit_offset,demographic_location_id,from_month,location_id"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true}', 'iron_anmic_mother', '1166b2e3-3244-4a72-83c9-1756e5ccaa71'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(196, 'FIPV 2 given(Immunization Services Provided to Children with Date of Birth)', NULL, true, 'DYNAMIC', NULL, '2020-05-20 13:51:45.942', 1, '2019-02-13 12:34:49.353', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--FIPV 2 given(Immunization Services Provided to Children with Date of Birth)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.f_ipv2 is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 411, "fieldName": "tableField", "queryUUID": "7e0cedc7-beeb-4a94-9aeb-d56c1d2c2137", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 409, "queryUUIDForParam": "56cff9a4-139c-44ed-91ca-59e7e12a470c"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 408, "queryUUIDForParam": "6ee554c0-b17f-42cf-aca7-08f5d24f794b"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 410, "queryUUIDForParam": "9ecbade6-7d7a-4a71-8979-7124702126a8"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_fipv2_monthly', 'd5e859da-b1d2-4b5d-bfd7-bfb93929f88f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(389, '3 PNC(Delivery Services Provided During The Year) (Monthly)', NULL, true, 'DYNAMIC', NULL, '2020-06-01 13:23:31.489', 60512, '2019-04-22 17:34:46.400', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1042, "fieldName": "tableField", "queryUUID": "7f3be13f-15a0-4aef-9579-61b7cef05bdf", "queryParams": "to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1041, "queryUUIDForParam": "5e088b90-31c2-4759-86a9-d48122163e56"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": false}', '3_pnc_mat_monthly', '410c576e-eeab-4d0f-9ae7-061b95dbf4a2'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(676, 'Member detail(Age-Wise Detail Report - V2)', NULL, true, 'DYNAMIC', NULL, '2020-12-28 14:43:44.680', 74841, '2020-12-07 17:48:41.410', 66522, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"demographic_location_id","displayName":"Demographic Type","fieldType":"text","isUrlParam":true,"isHidden":true},{"queryForParam":"select \ncase when #filter_type# = ''all'' then ''All'' \n when #filter_type# = ''total_0_to_5'' then ''Age 0 to 5'' \n when #filter_type# = ''total_6_to_10'' then ''Age 6 to 10'' \n when #filter_type# = ''total_11_to_20'' then ''Age 11 to 20'' \n when #filter_type# = ''total_21_to_30'' then ''Age 21 to 30'' \n when #filter_type# = ''total_31_to_40'' then ''Age 31 to 40'' \n when #filter_type# = ''total_41_to_50'' then ''Age 41 to 50'' \n when #filter_type# = ''total_51_to_60'' then ''Age 51 to 60'' \n when #filter_type# = ''total_60_plus'' then ''Age 60+'' \nend\nas filter_type","isMandatory":true,"requiredUptoLevel":1,"isHidden":true,"isUrlParam":true,"fieldName":"filter_type","displayName":"Filter","fieldType":"text","index":1,"queryIdForParam":1825,"queryUUIDForParam":"cd255c7f-4370-470d-8a4b-4e3216dbd9f2"},{"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \ncase when  prefered_language.is_enlish then get_location_hierarchy_language_wise(#location_id#, ''EN'') else \nget_location_hierarchy(#location_id#) \nend as location_id\nfrom  prefered_language","isMandatory":true,"requiredUptoLevel":1,"isUrlParam":true,"isHidden":true,"fieldName":"location_id","displayName":"Location","fieldType":"text","queryIdForParam":1826,"queryUUIDForParam":"3dfc3479-f5b9-4418-a5bf-31807ee6a776"},{"fieldName":"gender","displayName":"Gender","fieldType":"text","queryForParam":"select case when #gender# = ''M'' then ''Male'' when #gender# = ''F'' then ''Female'' else ''Other'' end as gender","queryIdForParam":1827,"queryUUIDForParam":"00e74a96-e7e4-4659-82b1-b6d2c698ab7b","index":3,"isHidden":true,"isUrlParam":true},{"fieldName":"comorbidity","displayName":"Comorbidity","fieldType":"text","isMandatory":false,"requiredUptoLevel":"","isUrlParam":true,"isHidden":true,"index":4,"queryForParam":"select case when #comorbidity# = ''true'' then ''True'' \nwhen #comorbidity# = ''false'' then ''False''\nelse ''All'' end as comorbidity","queryIdForParam":1831,"queryUUIDForParam":"445af730-4785-4e2d-bc0b-812af570a924"}],"tableContainer":[{"fieldName":"tableField","query":"with prefered_language as(\nselect (case\nwhen report_preferred_language = ''EN'' then true  \nelse false\nend) as is_enlish\nfrom um_user where id = #loggedInUserId#\n),age_info as (\n    select loc_anlyts.location_id as loc_id,\n\tmember_id,\n    concat(name,''<br>'',''('',unique_health_id,'')'',''<br>'',''('',family_id,'')'')  as name,\n    name as member_name,\n    unique_health_id,\n    case when EXTRACT(YEAR FROM age(cast(dob as date))) = 0  then concat(EXTRACT(month FROM age(cast(dob as date))),'' Months'') else concat(EXTRACT(YEAR FROM age(cast(dob as date))),'' Years'')  end as age,\n    to_char(dob, ''dd/mm/yyyy'') as dateOfBirth,\n    comorbidity,\n    case when gender = ''M'' then ''Male'' when gender = ''F'' then ''Female'' else ''Other'' end as gender\n    from member_basic_detail loc_anlyts,location_hierchy_closer_det vlc\n    where  vlc.child_id = loc_anlyts.location_id \n    and vlc.parent_id = #location_id#\n    and (\n    case when #filter_type# = ''total_0_to_5'' and EXTRACT(YEAR FROM age(cast(dob as date))) between 0 and 4 then true\n    when #filter_type# = ''total_6_to_10'' and EXTRACT(YEAR FROM age(cast(dob as date))) between 5 and 9 then true\n    when #filter_type# = ''total_11_to_20'' and EXTRACT(YEAR FROM age(cast(dob as date))) between 10 and 19 then true\n    when #filter_type# = ''total_21_to_30'' and EXTRACT(YEAR FROM age(cast(dob as date))) between 20 and 29 then true\n    when #filter_type# = ''total_31_to_40'' and EXTRACT(YEAR FROM age(cast(dob as date))) between 30 and 39 then true\n    when #filter_type# = ''total_41_to_50'' and EXTRACT(YEAR FROM age(cast(dob as date))) between 40 and 49 then true\n    when #filter_type# = ''total_51_to_60'' and EXTRACT(YEAR FROM age(cast(dob as date))) between 50 and 59 then true\n    when #filter_type# = ''total_60_plus'' and EXTRACT(YEAR FROM age(cast(dob as date))) >=60  then true\n    when #filter_type# = ''all'' then true\n    else false end )\n    and (\n    #gender# is null or\n    case when #gender# = ''M'' and gender = #gender# then true\n    when #gender# = ''F'' and gender = #gender# then true\n    else false end\n    )\n    and (\n     #comorbidity# is null or \n     case when #comorbidity# = ''false'' and comorbidity is null then true \n     when #comorbidity# = ''true'' and comorbidity is not null then true \n     else false end\n    )\n    order by loc_anlyts.location_id,family_id desc\n\t #limit_offset#\n),\nloc as (\n\tselect distinct loc_id from age_info\n), loc_det as (\n    select\n        case \n            when lm.type in (''D'', ''C'') then ''D''\n            when lm.type in (''T'', ''B'', ''Z'') then ''T''\n            when lm.type in (''P'', ''U'') then ''P''\n            when lm.type in (''V'', ''AA'') then ''V''\n            when lm.type in (''A'') then ''A''\n            else lm.type end,\n        lm.id as loc_id,\n        lh.location_id,\n        s.english_name as stateName,\n        d.english_name as districtName,\n        b.english_name as talukaName,\n        p.english_name as facilityName,\n        sc.english_name as subCenterName,\n        v.english_name as villageName,\n        a.english_name as areaName,\n        case when  lm.demographic_type in (''U'', ''C'') then ''Urban'' \n        when lm.demographic_type in (''R'') then ''Rural'' end as locationType\n    from loc \n    inner join location_master lm\n    on lm.id = loc.loc_id\n    left join location_level_hierarchy_master lh\n    on lh.id = lm.location_hierarchy_id\n    left join location_master s\n    on lh.level1 = s.id and s.state = ''ACTIVE'' and s.name not ilike ''%delete%''\n    left join location_master d\n    on lh.level3 = d.id and d.state = ''ACTIVE'' and d.name not ilike ''%delete%''\n    left join location_master b\n    on lh.level4 = b.id and b.state = ''ACTIVE'' and b.name not ilike ''%delete%''\n    left join location_master p\n    on lh.level5 = p.id and p.state = ''ACTIVE'' and p.name not ilike ''%delete%''\n    left join location_master sc\n    on lh.level6 = sc.id and sc.state = ''ACTIVE'' and sc.name not ilike ''%delete%''\n    left join location_master v\n    on lh.level7 = v.id and v.state = ''ACTIVE'' and v.name not ilike ''%delete%''\n    left join location_master a\n    on lh.level8 = a.id and a.state = ''ACTIVE'' and a.name not ilike ''%delete%''\n    where lm.state = ''ACTIVE'' and lm.name not ilike ''%delete%'' \n),\nfamily_head as (\n\tselect a.member_id as member_id,\n\tconcat(im2.first_name,'' '',im2.middle_name,'' '',im2.last_name) as FamilyHead,\n\tim2.mobile_number as FamilyHeadMobileNo\n\tfrom imt_member im inner join age_info a on a.member_id = im.id\n\tinner join imt_family imf on imf.family_id = im.family_id\n\tinner join imt_member im2 on imf.hof_id = im2.id\n),\nfinal_det as (\nselect age_info.*,\nloc_det.*,\ncase when m.mobile_number is null then family_head.FamilyHeadMobileNo else m.mobile_number end as mobile_number,\ncase when m.mobile_number is null and  family_head.FamilyHeadMobileNo is null then ''-''\nwhen m.mobile_number is null then ''Family'' else ''Self'' end as mobile_number_belong_to,\ncase when address1 is null and address2 is null then ''-'' else concat(address1,'','',address2) end as address\nfrom age_info \nleft join imt_member m on age_info.member_id = m.id\nleft join loc_det on loc_det.loc_id = age_info.loc_id\nleft  join imt_family on imt_family.family_id = m.family_id\nleft join family_head on family_head.member_id = age_info.member_id\n)\nselect  \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No.\",\nstateName as \"State\",\ndistrictName as \"District/Corporation\",\ntalukaName as \"Block/Zone\",\nvillageName as \"Village Name\",\nai.address as \"Address Line\",\nlocationType as \"Location (Rural/ Urban)\",\nai.member_name as \"Member Name EN\",\nai.unique_health_id as \"Member Health Id\",\nai.gender as \"Gender\",\ndateOfBirth as \"Date of Birth\",\nage as \"Age\",\ncase when ai.mobile_number is not null then ai.mobile_number else ''-'' end as \"Mobile No\",\nai.mobile_number_belong_to as \"Mobile number belongs to\",\ncase when comorbidity is null then ''-'' else initcap(replace(comorbidity, ''_'', '' '')) end as \"Comorbidities\"\nfrom final_det ai","queryId":1828,"queryUUID":"b46d6243-4733-4a00-8529-4cc4d799fce9","queryParams":"limit_offset,comorbidity,gender,filter_type,loggedInUserId,location_id"}],"tableFieldContainer":[]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","isBackButtonRequired":false,"showDateAsOn":true,"isLandscape":false,"numberOfRecordsPerPage":20,"numberOfColumnPerPage":10}', 'age_wise_mem_dtl_v2', '5be64c22-69b4-43b4-bfd4-8c2d2e52e240'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(433, 'Del reg (Inst del + home del)(Service provide to pregnant women with lmp)', NULL, true, 'DYNAMIC', NULL, '2019-09-23 16:43:34.590', 63746, '2019-05-28 15:27:24.567', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1145, "fieldName": "tableField", "queryUUID": "7345688c-eafb-4a2b-b009-d9c18b806674", "queryParams": "limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 1143, "queryUUIDForParam": "ad49dd3e-7c47-41e2-b91f-66b61480494e"}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1144, "queryUUIDForParam": "d8a57125-cd41-464f-9ecd-b4ebcdcd1936"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 1142, "queryUUIDForParam": "75a88560-1fd0-43a2-8e1f-2bb84c763083"}]}, "isFilterOpen": false, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mtr_del_reg_with_lmp', '5f129efa-fb9e-4e34-8bf0-c0057fea69a2'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(390, '4 PNC(Delivery Services Provided During The Year) (Monthly)', NULL, true, 'DYNAMIC', NULL, '2020-06-01 13:23:44.844', 60512, '2019-04-22 17:35:52.300', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1044, "fieldName": "tableField", "queryUUID": "691cdd50-6ec2-44ae-84a9-b8475582738a", "queryParams": "to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1043, "queryUUIDForParam": "95c32c21-4e68-42ff-bb84-3ab0607ef492"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": false}', '4_pnc_mat_monthly', 'e956571a-9b6e-4075-b9c1-454578042f6e'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(48, 'FHS VERIFIED FAMILIES', NULL, true, 'DYNAMIC', NULL, '2018-09-07 17:00:06.801', 1027, '2018-07-20 11:47:48.734', 1027, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "select ROW_NUMBER() over() as \"S No.\",fam.family_id as \"Family ID\",\ncase when fam.contact_person_id is not null then mem.first_name || '' '' || mem.last_name else ''NA'' end as \"Contact Person\",\ncase when mem.mobile_number is not null then mem.mobile_number else ''NA'' end as \"Contact No\" \nfrom imt_family fam inner join location_hierchy_closer_det lhcd\non fam.location_id = lhcd.child_id \nleft join imt_member mem on mem.id = fam.contact_person_id\nwhere lhcd.parent_id in  (select child_id from location_hierchy_closer_det where parent_id = #location_id#\nand child_id in (select loc_id from um_user_location where user_id = #user_id# and state = ''ACTIVE'')) and \nfam.state in (''com.argusoft.imtecho.family.state.verified'',''com.argusoft.imtecho.family.state.fhw.reverified'',''com.argusoft.imtecho.family.state.emri.verified.ok'',\n\t\t\t\t''com.argusoft.imtecho.family.state.mo.reverified'',''com.argusoft.imtecho.family.state.mo.fhw.reverified'',''com.argusoft.imtecho.family.state.emri.fhw.reverified'',\n\t\t\t\t''com.argusoft.imtecho.family.state.emri.fhw.reverified.dead'',\n\t\t\t\t''com.argusoft.imtecho.family.state.emri.fhw.reverified.verified'',''com.argusoft.imtecho.family.state.emri.verified.ok.dead'',''com.argusoft.imtecho.family.state.emri.verified.ok.archived''\n\t\t\t\t,''com.argusoft.imtecho.family.state.emri.verification.pool.dead'',''com.argusoft.imtecho.family.state.emri.verification.pool'',\n\t\t\t\t''com.argusoft.imtecho.family.state.emri.verification.pool.verified'',''com.argusoft.imtecho.family.state.emri.verified.ok.verified'')", "queryId": 60, "fieldName": "tableField", "queryUUID": "8d6a5029-0429-43d0-ab39-a0ee8a99e78c", "queryParams": "user_id,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "location id", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "user_id", "fieldType": "text", "queryUUID": null, "displayName": "user id", "queryUUIDForParam": null}]}, "templateType": "DYNAMIC_REPORTS", "isBackButtonRequired": true}', 'fhs_verified', '92dff54e-f43f-4e51-bad3-25f3f6237242'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(171, 'OPV 3 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 16:46:49.023', 1, '2019-02-11 17:57:57.900', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--OPV 3 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.opv3 is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 299, "fieldName": "tableField", "queryUUID": "e9ed0916-1f33-484a-8e4f-25da691ac724", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 298, "queryUUIDForParam": "fc82ab54-0e76-4349-8d66-aeafd28d3f37"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_opv3_given_yearly', '60d8833a-2677-4fac-b023-495c667a2a41'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(173, 'Measles given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 16:46:19.318', 1, '2019-02-11 18:00:01.249', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Measles given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand measles is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 303, "fieldName": "tableField", "queryUUID": "faedd03f-9b81-414d-a2d2-4b479519d97a", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 302, "queryUUIDForParam": "794228b1-59e0-4166-91dc-517eb02c5861"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_measle_given_year', '8f4ebc53-60a7-408e-81b5-2872a54b61d6'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(185, 'Children weighed (Child Health Services Provided During The Year (Monthly))', NULL, true, 'DYNAMIC', NULL, '2020-06-25 12:24:03.305', 1, '2019-02-13 11:28:58.129', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#\n)\n,parameter as (\n\tselect CAST(''#demographic_location_id#'' AS TEXT) as demographic_group\n) \n,child_det as (\n\tselect m.id, c.delivery_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n    inner join parameter p on true = true\n\twhere l.child_id = c.delivery_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.birth_weight is not null\n    and (p.demographic_group=''null'' or l.child_loc_demographic_type in \n\t\t( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 349, "fieldName": "tableField", "queryUUID": "fe82819c-e6b8-4e37-9a9b-989ade07ccea", "queryParams": "limit_offset,from_month_year,demographic_location_id,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "demographic_location_id", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 348, "queryUUIDForParam": "ab315aa8-e2cc-4741-8e86-a7d6ac2e4e49"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 347, "queryUUIDForParam": "506d0453-cc85-446b-af7a-4b1241a491a4"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 346, "queryUUIDForParam": "a4e4f814-0137-4e12-9a07-0252d11e74b6"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_weighed_monthly', '8f9204d1-9b7d-4787-8cf5-253a28f3c35a'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(186, 'Hep B Given(Immunization Services Provided to Children with Date of Birth)', NULL, true, 'DYNAMIC', NULL, '2020-05-25 16:43:44.632', 1, '2019-02-13 11:46:53.006', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Hep B Given(Immunization Services Provided to Children with Date of Birth)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.hep_b is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 371, "fieldName": "tableField", "queryUUID": "f2aceb1c-ca51-4a06-bf04-c5cf1ca5c9df", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 370, "queryUUIDForParam": "8be5c64e-d7a5-43c6-89e2-065e79daa9dc"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 369, "queryUUIDForParam": "882d5b86-f184-4615-a4d0-77c688ab566c"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 368, "queryUUIDForParam": "3b743aae-b4d5-4b2b-9638-1a2e35fec1b0"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_hepb_monthly', 'c068c1d5-44ed-497a-ad9b-54425817daba'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(391, 'Maternal deaths(Delivery Services Provided During The Year) (Monthly)', NULL, true, 'DYNAMIC', NULL, '2020-06-01 13:24:06.421', 60512, '2019-04-22 17:37:11.672', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1046, "fieldName": "tableField", "queryUUID": "39908241-03c3-480a-a8cb-8bf04ae6e36d", "queryParams": "to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"index": 1, "isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1045, "queryUUIDForParam": "239c9769-53dd-433a-a3f1-2ebb358b2b1f"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer", "isBackButtonRequired": false}', 'mat_death_monthly', 'bfeb4647-c63f-4790-9202-4032c4100ca3'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(394, 'Missing Delivery - EDD Not Lapsed (Delivery monitoring of Registered LMP)', NULL, true, 'DYNAMIC', NULL, '2020-06-22 01:24:42.535', 409, '2019-04-25 20:20:24.562', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1054, "fieldName": "tableField", "queryUUID": "aff217b5-3f21-4a9a-a050-0118453559d1", "queryParams": ""}], "fieldsContainer": [{"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "isMandatory": false, "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1051, "queryUUIDForParam": "66026dc5-5ac2-466f-b53c-e8ce79a61b85", "requiredUptoLevel": ""}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 1053, "queryUUIDForParam": "eca4d208-b4ed-4636-b8b0-0012e22c58f2"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 1052, "queryUUIDForParam": "82ffe64c-a69e-4738-8113-3c596767ea50"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'mising_del_lmp_nt_la', '9e69c0bc-7f1a-49fb-a094-c9b77e8b81f9'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(445, 'Child Registered with DOB(Immunization Services Provided to Children with Date of Birth)', NULL, true, 'DYNAMIC', NULL, '2020-05-25 16:38:53.413', 409, '2019-07-02 20:39:51.944', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Child Register(Immunization Services Provided to Children with Date of Birth)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.member_id is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 1182, "fieldName": "tableField", "queryUUID": "ea4b2e5c-a1db-41f9-8cb2-2aa49549906e", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 1181, "queryUUIDForParam": "c471f93e-0cdb-44cd-b5e9-06b47cebc65f"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1179, "queryUUIDForParam": "98f7b140-e0f2-43bd-8f10-fd7a8d2df317"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 1180, "queryUUIDForParam": "4d10267a-63fc-4444-bbe4-777a904ee4b5"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'child_reg', 'ad494954-490e-4051-96fa-9e1defa2069f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(677, 'No. of H.R. PW given PMSMA services once in each trimester (C)(Concurrent PMSMA Report (Monthly))', NULL, true, 'DYNAMIC', NULL, '2020-12-08 11:47:57.569', 78434, '2020-12-08 11:21:40.306', 78434, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"from_month","displayName":"From Month","fieldType":"text","isHidden":true},{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1829,"queryUUIDForParam":"fbf54280-e0e5-4a6b-8a81-50d192b82ebe"},{"fieldName":"to_month","displayName":"To Month","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"-- No. of H.R. PW given PMSMA services once in each trimester (C)(Concurrent PMSMA Report (Monthly))\n\nwith dates as (\n    select to_date(\n            case\n                when ''#from_month#'' = ''null'' then null\n                else ''#from_month#''\n            end,\n            ''MM/DD/YYYY''\n        ) as from_date,\n        to_date(\n            case\n                when ''#to_month#'' = ''null'' then null\n                else ''#to_month#''\n            end,\n            ''MM/DD/YYYY''\n        ) + interval ''1 month'' - interval ''1 milliseconds'' as to_date\n),\nlocation_det as (\n    select lm.id,\n        lm.english_name as name,\n        lm.location_code\n    from location_hierchy_closer_det lh1,\n        location_master lm\n    where lh1.parent_id = #location_id#\n        and lm.id = lh1.child_id\n),\nhigh_risk_member as (\n    select distinct(rpa.pregnancy_reg_id),\n        to_char(rpa.lmp_date, ''DD-MM-YYYY'') as lmp_date,\n        to_char(preg.edd, ''DD-MM-YYYY'') as edd_date,\n        get_location_hierarchy(rpa.member_current_location_id) as location_name,\n        concat(\n            im.first_name,\n            '' '',\n            im.middle_name,\n            '' '',\n            im.last_name,\n            ''('',\n            im.unique_health_id,\n            '')''\n        ) as person_name\n    from rch_pregnancy_analytics_details rpa,\n        rch_anc_master anc,\n        dates,\n        rch_pregnancy_registration_det preg,\n        imt_member im\n    where rpa.high_risk_mother = true\n        and (\n            rpa.death_date is null\n            or rpa.death_date >= dates.from_date\n        )\n        and (\n            date_of_delivery is null\n            or date_of_delivery >= dates.from_date\n        )\n        and (\n            (\n                cast(rpa.lmp_date + interval ''90 days'' as date),\n                cast(rpa.lmp_date + interval ''270 days'' as date)\n            ) overlaps (\n                cast(dates.from_date as date),\n                cast(dates.to_date as date)\n            )\n        )\n        and rpa.member_current_location_id in (\n            select id\n            from location_det\n        )\n        and rpa.pregnancy_reg_id = anc.pregnancy_reg_det_id\n        and anc.is_from_web = true\n        and anc.service_date between \n        (\n            case when ((cast(rpa.lmp_date + interval ''90 days'' as date),cast(rpa.lmp_date + interval ''180 days'' as date)) \n\t\t    overlaps (cast(dates.from_date as date), cast(dates.to_date as date))) then  rpa.lmp_date + interval ''90 days''\n            when ((cast(rpa.lmp_date + interval ''180 days'' as date),cast(rpa.lmp_date + interval ''270 days'' as date)) \n                    overlaps (cast(dates.from_date as date), cast(dates.to_date as date))) then  rpa.lmp_date + interval ''181 days''\n            else null end) \n        and \n        (\n            case when ((cast(rpa.lmp_date + interval ''90 days'' as date),cast(rpa.lmp_date + interval ''180 days'' as date)) \n            overlaps (cast(dates.from_date as date), cast(dates.to_date as date))) then  rpa.lmp_date + interval ''180 days''\n            when ((cast(rpa.lmp_date + interval ''180 days'' as date),cast(rpa.lmp_date + interval ''270 days'' as date)) \n                    overlaps (cast(dates.from_date as date), cast(dates.to_date as date))) then  rpa.lmp_date + interval ''270 days''\n            else null end\n        )\n        and anc.examined_by_gynecologist = true\n        and preg.id = rpa.pregnancy_reg_id\n        and rpa.member_id = im.id\n    order by rpa.pregnancy_reg_id #limit_offset#\n)\nselect ROW_NUMBER() over () + cast(\n        SUBSTRING(\n            ''#limit_offset#'',\n            POSITION(''offset'' in ''#limit_offset#'') + 7\n        ) as int\n    ) as \"Sr No\",\n    location_name as \"Location Name\",\n    person_name as \"Name of Person\",\n    lmp_date as \"LMP Date\",\n    edd_date as \"EDD Date\"\nfrom high_risk_member","queryId":1830,"queryUUID":"bcb302cd-12a8-4a19-9b6c-7cfd1ea3163e","queryParams":"to_month,limit_offset,from_month,location_id"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":""}', 'concurrentpmsma_c', '8cc523d7-b4dd-4e66-a315-2a6ea9fe7c1b'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(603, 'Member detail(Age wise report)', NULL, true, 'DYNAMIC', NULL, '2020-12-09 10:30:14.802', 409, '2020-05-22 15:34:34.563', 66522, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with prefered_language as(\nselect (case\nwhen report_preferred_language = ''EN'' then true  \nelse false\nend) as is_enlish\nfrom um_user where id = #loggedInUserId#\n),age_info as (\n    select loc_anlyts.location_id as loc_id,\n\tmember_id,\n    concat(name,''<br>'',''('',unique_health_id,'')'',''<br>'',''('',family_id,'')'')  as name,\n   name as member_name,\n    concat(to_char(dob, ''dd/mm/yyyy''),''('', EXTRACT(YEAR FROM age(cast(dob as date))),'' Years)'') as age,\n    comorbidity\n    from member_basic_detail loc_anlyts,location_hierchy_closer_det vlc\n    where  vlc.child_id = cast(loc_anlyts.location_id as integer) \n    and vlc.parent_id = #location_id#\n    and (\n    case when #filter_type# = ''total_0to5_children'' and EXTRACT(YEAR FROM age(cast(dob as date))) between 0 and 5 then true\n    when #filter_type# = ''total_6_to_10'' and EXTRACT(YEAR FROM age(cast(dob as date))) between 6 and 10 then true\n    when #filter_type# = ''total_11_to_49'' and EXTRACT(YEAR FROM age(cast(dob as date))) between 11 and 49 then true\n    when #filter_type# = ''total_50_to_59'' and EXTRACT(YEAR FROM age(cast(dob as date))) between 50 and 59 then true\n    when #filter_type# = ''total_60_plus'' and EXTRACT(YEAR FROM age(cast(dob as date))) >= 60  then true\n    when #filter_type# = ''all'' then true\n    else false end )\n    order by loc_anlyts.location_id,family_id desc\n\t #limit_offset#\n),final_det as (\nselect age_info.*,m.mobile_number \nfrom age_info,imt_member m\nwhere age_info.member_id = m.id\n)\nselect  \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No.\",\nai.name as \"Member Detail\",\nai.member_name as \"Member Name EN\",\nage as \"Age\",\nai.mobile_number as \"Mobile No\",\nget_location_hierarchy_from_district(cast(ai.loc_id as integer)) as \"Location\",\ncomorbidity as \"Comorbidities\"\nfrom final_det ai","queryId":1633,"fieldName":"tableField","queryUUID":"730493f3-8437-49cc-929e-a2620ba628d9","queryParams":"limit_offset,filter_type,loggedInUserId,location_id"}],"fieldsContainer":[{"index":1,"isHidden":true,"fieldName":"demographic_location_id","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"Demographic Type","queryUUIDForParam":null},{"index":2,"isHidden":true,"fieldName":"filter_type","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"Filter","isMandatory":true,"queryForParam":"select \ncase when #filter_type# = ''all'' then ''All'' \n when #filter_type# = ''total_0to5_children'' then ''Age 0 to 5'' \n when #filter_type# = ''total_6_to_10'' then ''Age 6 to 10'' \n when #filter_type# = ''total_11_to_49'' then ''Age 11 to 49'' \n when #filter_type# = ''total_50_to_59'' then ''Age 50 to 59'' \n when #filter_type# = ''total_60_plus'' then ''Age 60+'' \nend\nas filter_type","queryIdForParam":1635,"queryUUIDForParam":"cd52e850-f73e-4cc5-bdcd-08ca19543a2a","requiredUptoLevel":1},{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"Location","isMandatory":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \ncase when  prefered_language.is_enlish then get_location_hierarchy_language_wise(#location_id#, ''EN'') else \nget_location_hierarchy(#location_id#) \nend as location_id\nfrom  prefered_language","queryIdForParam":1634,"queryUUIDForParam":"24a4e80d-e11a-4f3a-9dbb-7bd7487a1f2a","requiredUptoLevel":1}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","isBackButtonRequired":false}', 'age_wise_mem_detail', '28a5805c-5bc2-4e07-99f0-2e60a03054fb'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(188, 'BCG Given(Immunization Services Provided to Children with Date of Birth)', NULL, true, 'DYNAMIC', NULL, '2020-05-20 13:46:30.052', 1, '2019-02-13 11:51:08.895', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--BCG Given(Immunization Services Provided to Children with Date of Birth)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.bcg is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 379, "fieldName": "tableField", "queryUUID": "b45196d9-8603-4010-9a10-41d4c1a97174", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "undefined": 1, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 377, "queryUUIDForParam": "5d1e25d9-2758-4edb-a926-d2e8d065af91"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "undefined": 0, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 376, "queryUUIDForParam": "bcd83b75-b838-4d9d-8569-23c00418eb39"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "undefined": 2, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 378, "queryUUIDForParam": "8a55715b-0965-458e-9301-5876a4719450"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_bcg_monthly', '3d45484f-eb39-4c44-a617-a5667c2116bb'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(191, 'FIPV 1 given(Immunization Services Provided to Children with Date of Birth)', NULL, true, 'DYNAMIC', NULL, '2020-05-25 16:44:38.122', 1, '2019-02-13 12:21:52.091', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--FIPV 1 given(Immunization Services Provided to Children with Date of Birth)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\nchild_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.f_ipv1 is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 391, "fieldName": "tableField", "queryUUID": "d184d3ae-17c6-46a9-86e3-d3b7ab93d0fa", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 390, "queryUUIDForParam": "3100e697-5bb7-461a-9c3a-a1619f601fbd"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 389, "queryUUIDForParam": "9742d769-db6e-4c9a-87f0-3cb2baa72b91"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 388, "queryUUIDForParam": "7381fb64-0acf-47ec-8c15-387d827da908"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_fipv_monthly', '82de0e81-f7f1-4e57-aed9-63467a997e40'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(216, 'Infant Death(Child Health Services Provided During The Year(Monthly))', NULL, true, 'DYNAMIC', NULL, '2020-06-25 12:06:41.886', 1, '2019-02-14 15:42:55.190', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 503, "fieldName": "tableField", "queryUUID": "dc43756b-ed64-4734-ba58-8fabfd8ced76", "queryParams": ""}], "fieldsContainer": [{"fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "demographic_location_id", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 502, "queryUUIDForParam": "245567fc-a355-41b5-9d1c-be909fb79f1b"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 501, "queryUUIDForParam": "b26b4964-8a22-44ab-a46a-5864fec96519"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 500, "queryUUIDForParam": "e4251fff-db5a-4d05-a859-d1191620904f"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_infant_death_yr', '7d62faef-ad14-4c2f-8a6d-b1e4d088008e'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(270, 'No of registered pregnant women(Concurrent High Risk Mother Report)', NULL, true, 'DYNAMIC', NULL, '2019-09-23 16:27:10.814', 409, '2019-02-20 11:55:34.841', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--No of registered pregnant women(Concurrent High Risk Mother Report)\nwith parameters as (\nselect CAST(#location_id# AS INTEGER) as location_id,\nCAST(''#demographic_location_id#'' AS TEXT) as demographic_group,\nCAST(''#loggedInUserId#'' AS INTEGER) as loggedInUserId,\n(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language\n)\n,member_det as (\n\tselect r.member_id, r.member_current_location_id as loc_id,\n\tr.unique_health_id, r.family_id, r.member_name as name,\n\tto_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd\t\n\tfrom rch_pregnancy_analytics_details r\n\t, location_hierchy_closer_det l\n\t, parameters p\n\twhere r.member_current_location_id  = l.child_id \n\tand r.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')\n\tand r.preg_reg_state in (''PENDING'',''PREGNANT'')\n\tand l.parent_id = p.location_id\n                     and (p.demographic_group=''null'' or l.child_loc_demographic_type in \n\t\t( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))\n\torder by r.lmp_date\n\t#limit_offset#\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name\n\t\t\t\t\t\telse l2.name end),''>'' order by lhcd.depth desc) as aoi\n\tfrom (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p\n\twhere lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id, p.preferred_language\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',\n\tcase when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 674, "fieldName": "tableField", "queryUUID": "96eb5143-886a-47de-b0fb-cb9988dbfbe2", "queryParams": "limit_offset,demographic_location_id,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 673, "queryUUIDForParam": "ea51f41f-f480-4180-9a7f-c492be86884c"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'con_preg_reg', 'ac3013e5-8538-4de7-aca9-da45d8430697'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(396, 'Measles Rubella given(Child Health Services Provided During The Year (Monthly))', NULL, true, 'DYNAMIC', NULL, '2020-06-25 15:12:12.329', 64189, '2019-04-29 13:35:48.019', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1060, "fieldName": "tableField", "queryUUID": "2ce212aa-b755-49a9-ac7a-1569aee92736", "queryParams": ""}], "fieldsContainer": [{"fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "demographic_location_id", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 1059, "queryUUIDForParam": "d9696113-eed0-4d8a-a1f8-49f3365214f3"}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1057, "queryUUIDForParam": "e0a464fa-f114-4539-a7b1-6b0d6afc4178"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 1058, "queryUUIDForParam": "393c0b16-b4d6-41c6-91d5-b0796272b7f7"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'ch_mea_rub_year_wise', '4925acd1-3267-4825-8320-5bd0ea80f619'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(397, 'Measles Rubella given(Immunization Services Provided to Children with Date of Birth)', NULL, true, 'DYNAMIC', NULL, '2020-05-25 12:04:31.057', 64189, '2019-04-29 15:46:37.808', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "---Measles Rubella given(Immunization Services Provided to Children with Date of Birth)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.measles_rubella is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 1064, "fieldName": "tableField", "queryUUID": "d59ac980-cc10-47be-a449-5fcb09611827", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 1063, "queryUUIDForParam": "0ce564e9-7e99-403a-b8e5-b1ed1f96bf20"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 1062, "queryUUIDForParam": "74fe7baa-a3bd-416b-9f56-71ff9420561e"}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1061, "queryUUIDForParam": "fa7c31c6-d7bf-46b8-9279-8e96ba4357f1"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_mea_rubel_monthly', '4e8a9779-6829-48ce-a531-a0a799466727'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(400, 'Eligible Couple(FP Target couple Reports - Age wise)', NULL, true, 'DYNAMIC', NULL, '2019-05-01 18:56:11.526', 63746, '2019-05-01 14:22:13.437', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n,age_group as (\n    select ''15-19'' as age_group, current_date - interval ''19 years'' as from_date, current_date - interval ''15 years''  as to_date\n    union\n    select ''20-24'' as age_group,  current_date - interval ''24 years'' as from_date, current_date - interval ''19 years'' - interval ''1 day''  as to_date\n    union\n    select ''25-29'' as age_group, current_date - interval ''29 years'' as from_date, current_date - interval ''24 years'' - interval ''1 day''  as to_date\n    union\n    select ''30-34'' as age_group,  current_date - interval ''34 years'' as from_date, current_date - interval ''29 years'' - interval ''1 day''  as to_date\n    union\n    select ''35-39'' as age_group, current_date - interval ''39 years'' as from_date, current_date - interval ''34 years'' - interval ''1 day''  as to_date\n    union\n    select ''40-44'' as age_group,  current_date - interval ''44 years'' as from_date, current_date - interval ''39 years'' - interval ''1 day''  as to_date\n    union\n    select ''45-49'' as age_group, current_date - interval ''49 years'' as from_date, current_date - interval ''44 years'' - interval ''1 day''  as to_date\n)\n,member_location as (\n\tselect m.member_id, m.loc_id  from rch_eligible_couple_analytics m\n\tinner join age_group on m.dob between age_group.from_date and age_group.to_date\n\tinner join locations on locations.child_id = m.loc_id\n       where ( case when #age_group_or_child_count# is null then age_group in (''15-19'',''20-24'',''25-29'',''30-34'',''35-39'',''40-44'',''45-49'') else age_group = (''#age_group_or_child_count#'') end)\n        #limit_offset#\n)\n,loc_det as(\n\tselect member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id\n\t,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id\n\tfrom location_master,location_type_master,member_location \n\twhere \n\tlocation_master.id = member_location.loc_id and location_type_master.type = location_master.type\n)\nselect \n\t ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\n\tmem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as \"Member Name\",\n\tfam.family_id as \"Family Id\",to_char(r.dob, ''DD/MM/YYYY'') as \"Birth Date\",\n\tstring_agg(lm.name,''> '' order by lhcd.depth desc) as \"Location Hierarchy\"  \nfrom rch_eligible_couple_analytics r\ninner join loc_det on loc_det.member_id = r.member_id\ninner join imt_member mem on mem.id = r.member_id\ninner join imt_family fam on mem.family_id = fam.family_id\ninner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id\ninner join location_master lm on lm.id = lhcd.parent_id\ngroup by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;", "queryId": 1076, "fieldName": "tableField", "queryUUID": "db954db4-ea66-4bdb-bf2f-add24f94f2ee", "queryParams": "limit_offset,age_group_or_child_count,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "age_group_or_child_count", "fieldType": "text", "queryUUID": null, "displayName": "Age Group", "queryUUIDForParam": null}, {"index": 2, "isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "undefined": 1, "displayName": "Year", "queryUUIDForParam": null}, {"index": 1, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "undefined": 2, "displayName": "Location", "queryForParam": "select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\nwhere l1.id = #location_id#", "queryIdForParam": 1075, "queryUUIDForParam": "6610870b-e18f-48cc-be89-67dc6c98f09e"}]}, "isFilterOpen": false, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'elig_couple_age_wise', '2ddebdba-554e-456f-a658-86d8467b7e0f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(679, 'No. of clubfoot observerd(State Level Monthly Compilation Sheet For Screening Of Birth Defects)', NULL, true, 'DYNAMIC', NULL, '2020-12-14 17:46:54.390', 74841, '2020-12-14 15:16:41.466', 74841, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","isHidden":true,"fieldName":"location_id","displayName":"Location","fieldType":"text","queryIdForParam":1848,"queryUUIDForParam":"151449fc-8f4f-421a-9053-67124cee6586"},{"queryForParam":"select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year","isHidden":true,"displayName":"To Date","fieldName":"to_month_year","fieldType":"text","queryIdForParam":1849,"queryUUIDForParam":"4b16f1b8-0caa-481f-8d58-a82afd5a4783"},{"queryForParam":"select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year","isHidden":true,"displayName":"From Date","fieldName":"from_month_year","fieldType":"text","queryIdForParam":1850,"queryUUIDForParam":"794702ca-eb87-4679-af53-e9b10e507c00"}],"tableContainer":[{"fieldName":"tableField","query":"/*No. of clubfoot observerd(State Level Monthly Compilation Sheet For Screening Of Birth Defects) */\n\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.delivery_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.delivery_location_id and m.id = c.member_id \n\tand l.parent_id = #location_id#\n\tand c.has_club_foot = true\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end), '' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) ,\nfamily_head as (\n\tselect a.id as member_id,\n\tconcat(im2.first_name,'' '',im2.middle_name,'' '',im2.last_name) as FamilyHead,\n\tim2.mobile_number as FamilyHeadMobileNo\n\tfrom imt_member im inner join child_det a on a.id = im.id\n\tinner join imt_family imf on imf.family_id = im.family_id\n\tinner join imt_member im2 on imf.hof_id = im2.id\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when family_head.FamilyHeadMobileNo is not null then FamilyHeadMobileNo else ''-'' end as \"Contact Number\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id\nleft join family_head on family_head.member_id = child_det.id;","queryId":1851,"queryUUID":"137ba93c-d473-4139-a45e-8f3b22f94380","queryParams":"limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","isFilterOpen":false,"showDateAsOn":true}', 'clubfoot_observerd_l', 'a52f95d2-3b2f-4834-a698-810ed318be4a'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(678, 'Neural tube defects(State Level Monthly Compilation Sheet for Screening of Birth Defects)', NULL, true, 'DYNAMIC', NULL, '2020-12-11 17:49:16.643', 74841, '2020-12-11 17:30:15.665', 74841, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"to_month_year","displayName":"To Date","fieldType":"text","isHidden":true,"queryForParam":"select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year","queryIdForParam":1844,"queryUUIDForParam":"8064b5c7-26be-46f3-a67c-29007439bf70"},{"queryForParam":"select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year","isHidden":true,"displayName":"From Date","fieldName":"from_month_year","fieldType":"text","queryIdForParam":1845,"queryUUIDForParam":"6ece71df-cf0e-4543-82c2-665af9d3d89d"},{"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","isHidden":true,"fieldType":"text","displayName":"Location","fieldName":"location_id","queryIdForParam":1846,"queryUUIDForParam":"7c9922eb-4ec5-4891-8ff2-67267185fc10"}],"tableContainer":[{"fieldName":"tableField","query":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\nchild_det  as (\n\tselect m.id, c.delivery_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob,\n    cast(''Neural tube defects'' as text) as nameOfDefect\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.delivery_location_id and m.id = c.member_id \n\tand l.parent_id = #location_id#\n\tand c.has_neural_tube_def\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tu.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'') and lh.parent_id in (select loc_id from loc)\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), family_head as (\n\tselect a.id as member_id,\n\tconcat(im2.first_name,'' '',im2.middle_name,'' '',im2.last_name) as FamilyHead,\n\tim2.mobile_number as FamilyHeadMobileNo\n\tfrom imt_member im inner join child_det a on a.id = im.id\n\tinner join imt_family imf on imf.family_id = im.family_id \n\tinner join imt_member im2 on imf.hof_id = im2.id\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nget_location_hierarchy(child_det.loc_id) as \"Location\",\nchild_det.member_det as \"Child Details\",\nfamily_head.FamilyHeadMobileNo as \"Contact number\",\nchild_det.dob as \"Date of Birth\",\nnameOfDefect as \"Name of defect\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join family_head on family_head.member_id = child_det.id;","queryId":1847,"queryUUID":"3044526c-442d-499d-a158-a6cd142c301d","queryParams":"limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true}', 'neural_tube_defect_l', '34549df8-3b86-4daa-805d-b09c1082f362'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(206, 'Children with Congenital deafness Birth defects(State Level Monthly Compilation Sheet for Screening of Birth Defects)', NULL, true, 'DYNAMIC', NULL, '2020-12-14 17:51:58.234', 1, '2019-02-14 00:43:54.696', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"--Children with Congenital deafness Birth defects(State Level Monthly Compilation Sheet for Screening of Birth Defects)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.delivery_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.delivery_location_id and m.id = c.member_id \n\tand l.parent_id = #location_id#\n\tand c.has_congenital_deafness = true\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end), '' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) ,\nfamily_head as (\n\tselect a.id as member_id,\n\tconcat(im2.first_name,'' '',im2.middle_name,'' '',im2.last_name) as FamilyHead,\n\tim2.mobile_number as FamilyHeadMobileNo\n\tfrom imt_member im inner join child_det a on a.id = im.id\n\tinner join imt_family imf on imf.family_id = im.family_id\n\tinner join imt_member im2 on imf.hof_id = im2.id\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when family_head.FamilyHeadMobileNo is not null then FamilyHeadMobileNo else ''-'' end as \"Contact Number\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id\nleft join family_head on family_head.member_id = child_det.id;","queryId":451,"fieldName":"tableField","queryUUID":"2a892371-c6ff-43d5-9241-c7b67f5b8c77","queryParams":"limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"to_month_year","fieldType":"text","queryUUID":null,"displayName":"To Date","queryForParam":"select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year","queryIdForParam":450,"queryUUIDForParam":"311ddbf9-9b38-4aa6-a361-ca07f2fb6779"},{"isHidden":true,"fieldName":"from_month_year","fieldType":"text","queryUUID":null,"displayName":"From Date","queryForParam":"select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year","queryIdForParam":449,"queryUUIDForParam":"99760a09-6c1d-4325-8010-e599b0141855"},{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":448,"queryUUIDForParam":"f5c69b7e-8aea-463b-8216-2aa7cb6ea67a"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'ch_deafness_defect', 'e7c70c97-dc02-4e77-8fa7-9bc83c465b08'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(401, 'Male (FP Target couple Reports - Age wise)', NULL, true, 'DYNAMIC', NULL, '2019-05-01 18:59:11.143', 63746, '2019-05-01 14:47:26.993', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1078, "fieldName": "tableField", "queryUUID": "f69d6a72-a560-4ff6-b10c-e6fef6c1b102", "queryParams": "limit_offset,age_group_or_child_count,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "age_group_or_child_count", "fieldType": "text", "queryUUID": null, "displayName": "Age Group", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\nwhere l1.id = #location_id#", "queryIdForParam": 1077, "queryUUIDForParam": "f866a979-ed6a-47b2-9e0d-f51ce0393a2e"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'male_age_wise', 'f3048d6e-1911-402f-8294-46afa0282921'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(402, 'Female (FP Target couple Reports - Age wise)', NULL, true, 'DYNAMIC', NULL, '2019-05-01 18:59:04.455', 63746, '2019-05-01 14:47:54.428', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1080, "fieldName": "tableField", "queryUUID": "78f62f85-4641-47c2-9c80-555988dba610", "queryParams": "limit_offset,age_group_or_child_count,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "age_group_or_child_count", "fieldType": "text", "queryUUID": null, "displayName": "Age Group", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\nwhere l1.id = #location_id#", "queryIdForParam": 1079, "queryUUIDForParam": "3464a55b-8824-4f8b-9562-15820e15cb37"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'female_age_wise', 'f3dc3728-df68-417e-a9fc-79b9d4502d31'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(403, 'Copper -T (FP Target couple Reports - Age wise)', NULL, true, 'DYNAMIC', NULL, '2019-05-01 18:58:57.132', 63746, '2019-05-01 15:07:07.429', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1083, "fieldName": "tableField", "queryUUID": "bd648895-4ebd-46b7-bf83-cd80746ea835", "queryParams": "limit_offset,age_group_or_child_count,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "age_group_or_child_count", "fieldType": "text", "queryUUID": null, "displayName": "Age Group", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\nwhere l1.id = #location_id#", "queryIdForParam": 1082, "queryUUIDForParam": "bf1c8e67-3cf8-44ff-b838-7b1e63e031e6"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'copper_t_age_wise', 'd3c35f3e-888e-4da3-bdaa-3cf0303a39e3'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(204, 'Children with Develop mental dysplasia of Hip Birth defects(State Level Monthly Compilation Sheet for Screening of Birth Defects)', NULL, true, 'DYNAMIC', NULL, '2020-12-14 17:52:36.695', 1, '2019-02-14 00:39:34.967', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"--Children with Develop mental dysplasia of Hip Birth defects(State Level Monthly Compilation Sheet for Screening of Birth Defects)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.delivery_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.delivery_location_id and m.id = c.member_id \n\tand l.parent_id = #location_id#\n\tand c.has_develop_mental_dysplasia_of_hip = true\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end), ''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) ,\nfamily_head as (\n\tselect a.id as member_id,\n\tconcat(im2.first_name,'' '',im2.middle_name,'' '',im2.last_name) as FamilyHead,\n\tim2.mobile_number as FamilyHeadMobileNo\n\tfrom imt_member im inner join child_det a on a.id = im.id\n\tinner join imt_family imf on imf.family_id = im.family_id\n\tinner join imt_member im2 on imf.hof_id = im2.id\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when family_head.FamilyHeadMobileNo is not null then FamilyHeadMobileNo else ''-'' end as \"Contact Number\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id\nleft join family_head on family_head.member_id = child_det.id;","queryId":443,"fieldName":"tableField","queryUUID":"e412d22e-5312-40d5-9016-89f1d278a700","queryParams":"limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}],"fieldsContainer":[{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":440,"queryUUIDForParam":"932eecf0-6594-4e68-88e1-b8153e9f7886"},{"isHidden":true,"fieldName":"to_month_year","fieldType":"text","queryUUID":null,"displayName":"To Date","queryForParam":"select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year","queryIdForParam":442,"queryUUIDForParam":"bc9c705b-0f17-4c54-b853-425cd5df3278"},{"isHidden":true,"fieldName":"from_month_year","fieldType":"text","queryUUID":null,"displayName":"From Date","queryForParam":"select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year","queryIdForParam":441,"queryUUIDForParam":"6c67c73d-e492-4414-a25a-c39c58038d05"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'ch_develp_dysplasia', '4dc43af3-b1c5-4d1d-860d-f779e77135c8'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(175, 'Still Birth (Infant And Neonatal Deaths Report)', NULL, true, 'DYNAMIC', NULL, '2019-09-23 01:40:43.545', 1, '2019-02-12 15:36:08.380', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#\n),dates as (\nselect to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM-DD-YYYY'') from_date\n,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM-DD-YYYY'') to_date\n),child_det as (\n\tselect m.id, c.delivery_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(c.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m,dates\n\twhere l.child_id = c.delivery_location_id and m.id = c.mother_id\n\tand l.parent_id = #location_id#\n\tand c.day_of_delivery is not null and c.member_id is null\n\tand c.dob_month_year between dates.from_date and dates.to_date\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language\n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Mother Details\",\nchild_det.dob as \"Date of Delivery\",\n--case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 307, "fieldName": "tableField", "queryUUID": "3a326be7-1623-4e31-abb2-7d513eebed17", "queryParams": "to_month,limit_offset,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 306, "queryUUIDForParam": "026178a0-eb08-4f87-af43-28c5861e788d"}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month#'' as date),''MM/YYYY'') as to_month", "queryIdForParam": 1422, "queryUUIDForParam": "c7959674-c1a1-4172-9531-c0f43e7afb78"}, {"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month#'' as date),''MM/YYYY'') as from_month", "queryIdForParam": 1421, "queryUUIDForParam": "bade6ed9-3d25-4382-bcc4-1ada7c8c02a4"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_still_birth_year', 'a45d245e-5801-4a55-8424-45c8c0bf52f1'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(404, 'Condom (FP Target couple Reports - Age wise)', NULL, true, 'DYNAMIC', NULL, '2019-05-01 18:58:48.370', 63746, '2019-05-01 15:08:34.112', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1085, "fieldName": "tableField", "queryUUID": "eb85a31b-d983-4434-96e7-01cad6cc8da8", "queryParams": "limit_offset,age_group_or_child_count,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "age_group_or_child_count", "fieldType": "text", "queryUUID": null, "displayName": "Age Group", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\nwhere l1.id = #location_id#", "queryIdForParam": 1084, "queryUUIDForParam": "45bcefa2-ea06-425f-9e78-310d52879979"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'condom_age_wise', '3f087fce-5222-4987-b1d7-b7d8fb1f8ccb'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(405, 'Oralpills (FP Target couple Reports - Age wise)', NULL, true, 'DYNAMIC', NULL, '2019-09-27 15:23:18.905', 63746, '2019-05-01 15:09:11.327', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1087, "fieldName": "tableField", "queryUUID": "40d79aab-aec4-4eba-94f8-3c4201b4ed06", "queryParams": "limit_offset,age_group_or_child_count,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "age_group_or_child_count", "fieldType": "text", "queryUUID": null, "displayName": "Age Group", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\nwhere l1.id = #location_id#", "queryIdForParam": 1086, "queryUUIDForParam": "34156af0-e1c4-4730-bb25-cb1438d2565d"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'orelpills_age_wise', 'c7dcf35e-26cb-41aa-9bb6-85a05e51a12b'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(406, 'Injectable (FP Target couple Reports - Age wise)', NULL, true, 'DYNAMIC', NULL, '2019-09-27 15:22:00.036', 63746, '2019-05-01 15:09:46.176', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1089, "fieldName": "tableField", "queryUUID": "6f01e254-a53e-494b-98b7-9be10633bdae", "queryParams": "limit_offset,age_group_or_child_count,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "age_group_or_child_count", "fieldType": "text", "queryUUID": null, "displayName": "Age Group", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\nwhere l1.id = #location_id#", "queryIdForParam": 1088, "queryUUIDForParam": "096e9b30-f600-47b0-afaf-2238f6b91a49"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'injectable_age_wise', '4cfb6d56-285a-409b-b78b-384e5735e8c1'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(407, 'None (FP Target couple Reports - Age wise)', NULL, true, 'DYNAMIC', NULL, '2019-05-29 14:59:34.154', 63746, '2019-05-01 15:15:28.087', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1091, "fieldName": "tableField", "queryUUID": "b3d3af70-9638-46eb-b310-a5552169aa5d", "queryParams": "limit_offset,age_group_or_child_count,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "age_group_or_child_count", "fieldType": "text", "queryUUID": null, "displayName": "Age Group", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\nwhere l1.id = #location_id#", "queryIdForParam": 1090, "queryUUIDForParam": "250d22e7-8372-43e4-9d5e-5f2b2486f814"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'none_age_wise', '70d43008-7580-478e-ae4e-905d57337911'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(408, 'Total (FP Target couple Reports - Age wise)', NULL, true, 'DYNAMIC', NULL, '2019-05-02 14:24:20.478', 63746, '2019-05-01 15:19:51.513', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n,age_group as (\n    select ''15-19'' as age_group, current_date - interval ''19 years'' as from_date, current_date - interval ''15 years''  as to_date\n    union\n    select ''20-24'' as age_group,  current_date - interval ''24 years'' as from_date, current_date - interval ''19 years'' - interval ''1 day''  as to_date\n    union\n    select ''25-29'' as age_group, current_date - interval ''29 years'' as from_date, current_date - interval ''24 years'' - interval ''1 day''  as to_date\n    union\n    select ''30-34'' as age_group,  current_date - interval ''34 years'' as from_date, current_date - interval ''29 years'' - interval ''1 day''  as to_date\n    union\n    select ''35-39'' as age_group, current_date - interval ''39 years'' as from_date, current_date - interval ''34 years'' - interval ''1 day''  as to_date\n    union\n    select ''40-44'' as age_group,  current_date - interval ''44 years'' as from_date, current_date - interval ''39 years'' - interval ''1 day''  as to_date\n    union\n    select ''45-49'' as age_group, current_date - interval ''49 years'' as from_date, current_date - interval ''44 years'' - interval ''1 day''  as to_date\n)\n,member_location as (\n\tselect m.member_id, m.loc_id  from rch_eligible_couple_analytics m\n\tinner join age_group on m.dob between age_group.from_date and age_group.to_date\n\tinner join locations on locations.child_id = m.loc_id\n\twhere ( case when #age_group_or_child_count# is null then age_group in (''15-19'',''20-24'',''25-29'',''30-34'',''35-39'',''40-44'',''45-49'') else age_group = (''#age_group_or_child_count#'') end) \n\tand  m.last_method_of_contraception in (''MLSTR'',''FMLSTR'',''IUCD5'',''IUCD10'',''CONDOM'',''ORALPILLS'',''CHHAYA'',''ANTARA'') \n        #limit_offset#\n)\n,loc_det as(\n\tselect member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id\n\t,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id\n\tfrom location_master,location_type_master,member_location \n\twhere \n\tlocation_master.id = member_location.loc_id and location_type_master.type = location_master.type\n)\nselect \n\t ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\n\tmem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as \"Member Name\",\n\tfam.family_id as \"Family Id\",to_char(r.dob, ''DD/MM/YYYY'') as \"Birth Date\",\n\tstring_agg(lm.name,''> '' order by lhcd.depth desc) as \"Location Hierarchy\"  \nfrom rch_eligible_couple_analytics r\ninner join loc_det on loc_det.member_id = r.member_id\ninner join imt_member mem on mem.id = r.member_id\ninner join imt_family fam on mem.family_id = fam.family_id\ninner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id\ninner join location_master lm on lm.id = lhcd.parent_id\ngroup by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;", "queryId": 1093, "fieldName": "tableField", "queryUUID": "8e8c981d-d288-42bb-ba4d-67ef0efc8a94", "queryParams": "limit_offset,age_group_or_child_count,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "age_group_or_child_count", "fieldType": "text", "queryUUID": null, "displayName": "Age Group", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\nwhere l1.id = #location_id#", "queryIdForParam": 1092, "queryUUIDForParam": "9bd7b7bc-bed8-4889-80c9-70a047bf1c4c"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'total_age_wise', '3f5f0412-2ec6-4523-859a-15b597e51be8'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(490, 'Successful - Pregnancy Verification (GVK : Call effectiveness reports)', NULL, true, 'DYNAMIC', NULL, '2020-01-09 16:21:41.546', 66522, '2019-08-19 13:46:02.826', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with response as (\nselect case when is_pregnant is true then ''Yes''\n       when is_pregnant is false then ''No''\n       else ''N/A'' end as Pregnant,\n       case when gvk_call_response_status = ''com.argusoft.imtecho.gvk.call.success'' then ''SUCCESS''\n\t    when gvk_call_response_status = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-or-anm-husband'' then ''Number of ANM or husband''\n       end as call_Status,\n       resp.member_id,\n       resp.created_by,\n       resp.created_on,\n       master.location_id,\n       get_location_hierarchy(location_id) as Location_hierarchy,\n       lvalue.value\nfrom gvk_emri_pregnant_member_responce resp\ninner join gvk_manage_call_master master on resp.manage_call_master_id = master.id\nleft join listvalue_field_value_detail lvalue on resp.verification_reason = lvalue.id\n\nwhere resp.gvk_call_response_status not in (''com.argusoft.imtecho.gvk.call.cant-talk'',\n\t''com.argusoft.imtecho.gvk.call.no-number-available'',\n\t''com.argusoft.imtecho.gvk.call.wrong-mobile-number'',\n        ''com.argusoft.imtecho.gvk.call.phone-switched-off'',\n        ''com.argusoft.imtecho.gvk.call.unresponsive'',\n        ''com.argusoft.imtecho.gvk.call.not-reachable'',\n''com.argusoft.imtecho.gvk.call.processed'',\n''com.argusoft.imtecho.gvk.call.processing''\n)\nand resp.created_on between case when ''#from_date#'' = ''null'' then now() else to_date(''#from_date#'',''MM-DD-YYYY'') end and to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds''\nand master.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\norder by resp.id #limit_offset#\n), \n--and resp.created_on between ''2019-08-19'' and ''2019-08-20'')\n\n\nmo as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code in (''mo_phc'',''mo_uphc''))\n),\nmo_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tmo group by location_id\n),\nmo_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from mo_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\nasha as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id\n    and uml.state = ''ACTIVE''\n\tinner join um_user uu on uu.id = uml.user_id  \n    and uu.role_id in (select id from um_role_master where code = ''ASHA'') \n    where uu.state = ''ACTIVE''\n),\nasha_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tasha group by location_id\n),\nasha_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from asha_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\nanm as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id\n    and uml.state = ''ACTIVE''\n\tinner join um_user uu on uu.id = uml.user_id\n    and uu.role_id in (select id from um_role_master where code = ''FHW'')\n    where uu.state = ''ACTIVE''\n),\nanm_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tanm group by location_id\n),\nanm_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from anm_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nconcat(im.first_name,'' '',im.last_name, ''('',im.unique_health_id ,'')'') as \"Member Name\",\nLocation_hierarchy as \"Location\",\nto_char(resp.created_on,''DD-MM-YYYY HH:MI PM'') as  \"Call Date\",\nresp.Pregnant as \"Is Pregnant\",\ncase when resp.value is null then ''     -     '' else resp.value end as \"False Verification Reason\",\nresp.call_Status as \"Call Status\",\nmo.name as \"MO Details\",\nanm.name as \"ANM Details\",\nasha.name as \"ASHA Details\"\n,concat(um.first_name, '' '', um.last_name) as \"RO Details\"\nfrom response resp\n--left join contacts_display_date contacts on resp.id = contacts.id\nleft join mo_details mo on mo.location_id = resp.location_id\nleft join anm_details anm on anm.location_id = resp.location_id\nleft join asha_details asha on asha.location_id = resp.location_id\nleft join um_user um on resp.created_by = um.id\ninner join imt_member im on im.id = resp.member_id", "queryId": 1323, "fieldName": "tableField", "queryUUID": "00e04d0c-e48f-4924-83b0-90a0b3638980", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"index": 2, "isHidden": true, "fieldName": "to_date", "fieldType": "date", "queryUUID": null, "isUrlParam": true, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date", "queryIdForParam": 1322, "queryUUIDForParam": "e228ed1b-4741-4483-ad51-3b773d5e521b"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1320, "queryUUIDForParam": "8351dff8-7256-41ec-be0c-f473a1abb7ab", "fetchAccordingToUserAoi": true}, {"index": 1, "isHidden": true, "fieldName": "from_date", "fieldType": "date", "queryUUID": null, "isUrlParam": true, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date", "queryIdForParam": 1321, "queryUUIDForParam": "a3775cdc-8ef2-4b5e-bc55-360f68cd3dd4"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'gvk_success_pv', '385ed1d6-7d53-4cb2-904a-c9ba962c5a6b'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(217, 'Hep B given (Child Health Services Provided During The Year (Monthly))', NULL, true, 'DYNAMIC', NULL, '2020-06-25 13:05:17.470', 1, '2019-02-14 15:50:30.464', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 507, "fieldName": "tableField", "queryUUID": "8e142b6c-adda-4c16-a519-635fb3dd6bc1", "queryParams": ""}], "fieldsContainer": [{"fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "demographic_location_id", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 506, "queryUUIDForParam": "918b4c60-c516-4364-ad1e-3f033e7fc654"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 505, "queryUUIDForParam": "586b8d26-6185-4b5c-a266-510d0544f968"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 504, "queryUUIDForParam": "da3d7fd5-f92a-458d-a9a7-3f80005855bb"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_hepb_year', 'e197c116-eff8-4290-93fe-b291a7c44d12'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(409, 'Eligible Couple(FP Target couple Reports - Child count wise)', NULL, true, 'DYNAMIC', NULL, '2019-05-02 14:08:43.383', 63746, '2019-05-01 17:07:44.709', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n,member_location as (\n\tselect m.member_id, m.loc_id  from rch_eligible_couple_analytics m\n\tinner join locations on locations.child_id = m.loc_id\n        where  ( case \n\t\twhen ''#age_group_or_child_count#'' = ''5+'' then children_count >= 5\n\t\twhen ''#age_group_or_child_count#'' = ''0'' then children_count is null \n\t\twhen ''#age_group_or_child_count#'' = ''1'' then children_count = 1 \n\t\twhen ''#age_group_or_child_count#'' = ''2'' then children_count = 2 \n\t\twhen ''#age_group_or_child_count#'' = ''3'' then children_count = 3 \n\t\twhen ''#age_group_or_child_count#'' = ''4'' then children_count = 4\n\t\twhen ''#age_group_or_child_count#'' = ''null'' then true\n\tend) \n        #limit_offset#\n)\n,loc_det as(\n\tselect member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id\n\t,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id\n\tfrom location_master,location_type_master,member_location \n\twhere \n\tlocation_master.id = member_location.loc_id and location_type_master.type = location_master.type\n)\nselect \n\t ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\n\tmem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as \"Member Name\",\n\tfam.family_id as \"Family Id\",to_char(r.dob, ''DD/MM/YYYY'') as \"Birth Date\",\n\tstring_agg(lm.name,''> '' order by lhcd.depth desc) as \"Location Hierarchy\"  \nfrom rch_eligible_couple_analytics r\ninner join loc_det on loc_det.member_id = r.member_id\ninner join imt_member mem on mem.id = r.member_id\ninner join imt_family fam on mem.family_id = fam.family_id\ninner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id\ninner join location_master lm on lm.id = lhcd.parent_id\ngroup by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;", "queryId": 1097, "fieldName": "tableField", "queryUUID": "d7e84ccc-c0ad-419c-8c2e-898908e5554a", "queryParams": "limit_offset,age_group_or_child_count,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "age_group_or_child_count", "fieldType": "text", "queryUUID": null, "displayName": "Child Count", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\nwhere l1.id = #location_id#", "queryIdForParam": 1096, "queryUUIDForParam": "5f4127e0-cedd-43bc-921f-4aaa70c97ebc"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'elig_coup_child_wise', 'ab822f08-5fc1-4dac-80de-267b0a3cb765'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(410, 'Male (FP Target couple Reports - Child count wise)', NULL, true, 'DYNAMIC', NULL, '2019-05-02 14:47:24.060', 63746, '2019-05-01 17:10:23.500', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n,member_location as (\n\tselect m.member_id, m.loc_id  from rch_eligible_couple_analytics m\n\tinner join locations on locations.child_id = m.loc_id\n        where  ( case \n\t\twhen ''#age_group_or_child_count#'' = ''5+'' then children_count >= 5\n\t\twhen ''#age_group_or_child_count#'' = ''0'' then children_count is null \n\t\twhen ''#age_group_or_child_count#'' = ''1'' then children_count = 1 \n\t\twhen ''#age_group_or_child_count#'' = ''2'' then children_count = 2 \n\t\twhen ''#age_group_or_child_count#'' = ''3'' then children_count = 3 \n\t\twhen ''#age_group_or_child_count#'' = ''4'' then children_count = 4\n\t\twhen ''#age_group_or_child_count#'' = ''null'' then true\n\tend) and m.last_method_of_contraception in (''MLSTR'') \n        #limit_offset#\n)\n,loc_det as(\n\tselect member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id\n\t,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id\n\tfrom location_master,location_type_master,member_location \n\twhere \n\tlocation_master.id = member_location.loc_id and location_type_master.type = location_master.type\n)\nselect \n\t ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\n\tmem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as \"Member Name\",\n\tfam.family_id as \"Family Id\",to_char(r.dob, ''DD/MM/YYYY'') as \"Birth Date\",\n\tstring_agg(lm.name,''> '' order by lhcd.depth desc) as \"Location Hierarchy\"  \nfrom rch_eligible_couple_analytics r\ninner join loc_det on loc_det.member_id = r.member_id\ninner join imt_member mem on mem.id = r.member_id\ninner join imt_family fam on mem.family_id = fam.family_id\ninner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id\ninner join location_master lm on lm.id = lhcd.parent_id\ngroup by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;", "queryId": 1099, "fieldName": "tableField", "queryUUID": "3400621c-e87e-4cd5-9e0c-3b3cef30c4c6", "queryParams": "limit_offset,age_group_or_child_count,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "age_group_or_child_count", "fieldType": "text", "queryUUID": null, "displayName": "Child Count", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\nwhere l1.id = #location_id#", "queryIdForParam": 1098, "queryUUIDForParam": "90da919d-d1d9-45f2-a514-92d05ea3fc76"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'male_child_wise', 'e2762f16-f1da-47b3-bdfc-64fa24ed341e'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(202, 'Children with Down''s syndrome Birth defects(State Level Monthly Compilation Sheet for Screening of Birth Defects)', NULL, true, 'DYNAMIC', NULL, '2020-12-14 17:53:18.522', 1, '2019-02-14 00:34:34.283', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.delivery_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.delivery_location_id and m.id = c.member_id \n\tand l.parent_id = #location_id#\n\tand c.has_downs_syndrome = true\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day'' - interval ''1 milliseconds''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end), ''> '' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n),\nfamily_head as (\n\tselect a.id as member_id,\n\tconcat(im2.first_name,'' '',im2.middle_name,'' '',im2.last_name) as FamilyHead,\n\tim2.mobile_number as FamilyHeadMobileNo\n\tfrom imt_member im inner join child_det a on a.id = im.id\n\tinner join imt_family imf on imf.family_id = im.family_id\n\tinner join imt_member im2 on imf.hof_id = im2.id\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nget_location_hierarchy(child_det.loc_id) as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when family_head.FamilyHeadMobileNo is not null then FamilyHeadMobileNo else ''-'' end as \"Contact Number\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id\nleft join family_head on family_head.member_id = child_det.id;","queryId":435,"fieldName":"tableField","queryUUID":"e3513eb0-ccd2-48af-8578-593a10634d7b","queryParams":"limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"to_month_year","fieldType":"text","queryUUID":null,"displayName":"To Date","queryForParam":"select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year","queryIdForParam":434,"queryUUIDForParam":"8988c269-41c5-4586-8a47-00091d51ac65"},{"isHidden":true,"fieldName":"from_month_year","fieldType":"text","queryUUID":null,"displayName":"From Date","queryForParam":"select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year","queryIdForParam":433,"queryUUIDForParam":"3cce521b-b67d-4038-93e0-a81060f15857"},{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":432,"queryUUIDForParam":"86bf6f16-78c5-4e15-ba44-ff4071f5ac91"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","selectedContainer":"tableContainer"}', 'chmnth_down_syndrome', '70c1573c-cecb-48a3-8650-e45e8ac2f909'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(89, 'Urban rch location wise count', NULL, true, 'DYNAMIC', NULL, '2019-04-09 16:53:00.215', 409, '2018-12-12 12:09:40.176', 63746, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "", "queryId": 104, "fieldName": "tableField", "queryUUID": "c7798057-537e-4bde-840a-9af7b5f1b21d", "queryParams": "from_date,to_date,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 0, "fieldName": "location_id", "fieldType": "location", "queryUUID": null, "displayName": "Location", "isMandatory": true, "fetchUptoLevel": "", "queryUUIDForParam": null, "requiredUptoLevel": "1", "fetchAccordingToUserAoi": true}, {"fieldName": "date", "fieldType": "dateFromTo", "queryUUID": null, "displayName": "Date", "isMandatory": true, "queryUUIDForParam": null}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'urban_rch_loc_wise', 'f0007507-6047-497c-b274-886038cb335d'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(411, 'Female (FP Target couple Reports - Child count wise)', NULL, true, 'DYNAMIC', NULL, '2019-05-02 14:47:24.549', 63746, '2019-05-01 17:10:36.182', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n,member_location as (\n\tselect m.member_id, m.loc_id  from rch_eligible_couple_analytics m\n\tinner join locations on locations.child_id = m.loc_id\n        where  ( case \n\t\twhen ''#age_group_or_child_count#'' = ''5+'' then children_count >= 5\n\t\twhen ''#age_group_or_child_count#'' = ''0'' then children_count is null \n\t\twhen ''#age_group_or_child_count#'' = ''1'' then children_count = 1 \n\t\twhen ''#age_group_or_child_count#'' = ''2'' then children_count = 2 \n\t\twhen ''#age_group_or_child_count#'' = ''3'' then children_count = 3 \n\t\twhen ''#age_group_or_child_count#'' = ''4'' then children_count = 4\n\t\twhen ''#age_group_or_child_count#'' = ''null'' then true\n\tend) \tand m.last_method_of_contraception in (''FMLSTR'') \n        #limit_offset#\n)\n,loc_det as(\n\tselect member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id\n\t,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id\n\tfrom location_master,location_type_master,member_location \n\twhere \n\tlocation_master.id = member_location.loc_id and location_type_master.type = location_master.type\n)\nselect \n\t ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\n\tmem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as \"Member Name\",\n\tfam.family_id as \"Family Id\",to_char(r.dob, ''DD/MM/YYYY'') as \"Birth Date\",\n\tstring_agg(lm.name,''> '' order by lhcd.depth desc) as \"Location Hierarchy\"  \nfrom rch_eligible_couple_analytics r\ninner join loc_det on loc_det.member_id = r.member_id\ninner join imt_member mem on mem.id = r.member_id\ninner join imt_family fam on mem.family_id = fam.family_id\ninner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id\ninner join location_master lm on lm.id = lhcd.parent_id\ngroup by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;", "queryId": 1101, "fieldName": "tableField", "queryUUID": "61752846-e992-4f05-a479-bd916fee1fd1", "queryParams": "limit_offset,age_group_or_child_count,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "age_group_or_child_count", "fieldType": "text", "queryUUID": null, "displayName": "Child Count", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\nwhere l1.id = #location_id#", "queryIdForParam": 1100, "queryUUIDForParam": "a3e15ca7-2dcf-4df7-ba93-75c7111518ad"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'female_child_wise', '50c047c6-b20d-416c-b8f2-68f92cd0b757'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(412, 'Copper -T (FP Target couple Reports - Child count wise)', NULL, true, 'DYNAMIC', NULL, '2019-05-02 14:47:20.956', 63746, '2019-05-01 17:11:10.509', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n,member_location as (\n\tselect m.member_id, m.loc_id  from rch_eligible_couple_analytics m\n\tinner join locations on locations.child_id = m.loc_id\n        where  ( case \n\t\twhen ''#age_group_or_child_count#'' = ''5+'' then children_count >= 5\n\t\twhen ''#age_group_or_child_count#'' = ''0'' then children_count is null \n\t\twhen ''#age_group_or_child_count#'' = ''1'' then children_count = 1 \n\t\twhen ''#age_group_or_child_count#'' = ''2'' then children_count = 2 \n\t\twhen ''#age_group_or_child_count#'' = ''3'' then children_count = 3 \n\t\twhen ''#age_group_or_child_count#'' = ''4'' then children_count = 4\n\t\twhen ''#age_group_or_child_count#'' = ''null'' then true\n\tend) \tand m.last_method_of_contraception in (''IUCD5'',''IUCD10'') \n        #limit_offset#\n)\n,loc_det as(\n\tselect member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id\n\t,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id\n\tfrom location_master,location_type_master,member_location \n\twhere \n\tlocation_master.id = member_location.loc_id and location_type_master.type = location_master.type\n)\nselect \n\t ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\n\tmem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as \"Member Name\",\n\tfam.family_id as \"Family Id\",to_char(r.dob, ''DD/MM/YYYY'') as \"Birth Date\",\n\tstring_agg(lm.name,''> '' order by lhcd.depth desc) as \"Location Hierarchy\"  \nfrom rch_eligible_couple_analytics r\ninner join loc_det on loc_det.member_id = r.member_id\ninner join imt_member mem on mem.id = r.member_id\ninner join imt_family fam on mem.family_id = fam.family_id\ninner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id\ninner join location_master lm on lm.id = lhcd.parent_id\ngroup by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;", "queryId": 1103, "fieldName": "tableField", "queryUUID": "3f7953da-21a8-4ee1-a009-7522c3a8115f", "queryParams": "limit_offset,age_group_or_child_count,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "age_group_or_child_count", "fieldType": "text", "queryUUID": null, "displayName": "Child Count", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\nwhere l1.id = #location_id#", "queryIdForParam": 1102, "queryUUIDForParam": "a921ed5c-faae-4068-8fcc-a28b2ca730f8"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'coppert_child_wise', 'c3dea4fa-3d99-4e8a-834e-ee5ad83c0f48'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(47, 'FHS TO BE PROCESSED FAMILIES', NULL, true, 'DYNAMIC', NULL, '2018-07-27 14:58:37.656', 1027, '2018-07-20 11:46:48.641', 1027, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "select ROW_NUMBER() over() as \"S No.\",fam.family_id as \"Family ID\",\ncase when fam.contact_person_id is not null then mem.first_name || '' '' || mem.last_name else ''NA'' end as \"Contact Person\",\ncase when mem.mobile_number is not null then mem.mobile_number else ''NA'' end as \"Contact No\" \nfrom imt_family fam inner join location_hierchy_closer_det lhcd\non fam.location_id = lhcd.child_id \nleft join imt_member mem on mem.id = fam.contact_person_id\nwhere lhcd.parent_id in  (select child_id from location_hierchy_closer_det where parent_id = #location_id#\nand child_id in (select loc_id from um_user_location where user_id = #user_id# and state = ''ACTIVE'')) and \nfam.state in (''com.argusoft.imtecho.family.state.unverified'',''com.argusoft.imtecho.family.state.orphan'')", "queryId": 59, "fieldName": "tableField", "queryUUID": "e9604082-4edf-422a-a7df-4417796b3663", "queryParams": "user_id,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "location id", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "user_id", "fieldType": "text", "queryUUID": null, "displayName": "user id", "queryUUIDForParam": null}]}, "templateType": "DYNAMIC_REPORTS", "isBackButtonRequired": true}', 'fhs_to_be_processed', '1bac108e-2add-4c0b-b715-74614a816a26'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(414, 'Condom (FP Target couple Reports - Child count wise)', NULL, true, 'DYNAMIC', NULL, '2019-05-02 14:48:47.638', 63746, '2019-05-02 14:22:57.419', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n,member_location as (\n\tselect m.member_id, m.loc_id  from rch_eligible_couple_analytics m\n\tinner join locations on locations.child_id = m.loc_id\n        where  ( case \n\t\twhen ''#age_group_or_child_count#'' = ''5+'' then children_count >= 5\n\t\twhen ''#age_group_or_child_count#'' = ''0'' then children_count is null \n\t\twhen ''#age_group_or_child_count#'' = ''1'' then children_count = 1 \n\t\twhen ''#age_group_or_child_count#'' = ''2'' then children_count = 2 \n\t\twhen ''#age_group_or_child_count#'' = ''3'' then children_count = 3 \n\t\twhen ''#age_group_or_child_count#'' = ''4'' then children_count = 4\n\t\twhen ''#age_group_or_child_count#'' = ''null'' then true\n\tend) \tand m.last_method_of_contraception = (''CONDOM'') \n        #limit_offset#\n)\n,loc_det as(\n\tselect member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id\n\t,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id\n\tfrom location_master,location_type_master,member_location \n\twhere \n\tlocation_master.id = member_location.loc_id and location_type_master.type = location_master.type\n)\nselect \n\t ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\n\tmem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as \"Member Name\",\n\tfam.family_id as \"Family Id\",to_char(r.dob, ''DD/MM/YYYY'') as \"Birth Date\",\n\tstring_agg(lm.name,''> '' order by lhcd.depth desc) as \"Location Hierarchy\"  \nfrom rch_eligible_couple_analytics r\ninner join loc_det on loc_det.member_id = r.member_id\ninner join imt_member mem on mem.id = r.member_id\ninner join imt_family fam on mem.family_id = fam.family_id\ninner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id\ninner join location_master lm on lm.id = lhcd.parent_id\ngroup by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;", "queryId": 1106, "fieldName": "tableField", "queryUUID": "08574a20-8d24-46ea-b9ff-6b0b0d747b33", "queryParams": "limit_offset,age_group_or_child_count,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "age_group_or_child_count", "fieldType": "text", "queryUUID": null, "displayName": "Child Count", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\nwhere l1.id = #location_id#", "queryIdForParam": 1105, "queryUUIDForParam": "e914cb98-3d06-4227-a407-a4c484a837eb"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'condom_child_wise', '2beaccbf-4375-4952-accd-c5527a1cf5ec'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(415, 'Orelpills (FP Target couple Reports - Child count wise)', NULL, true, 'DYNAMIC', NULL, '2019-05-02 14:48:46.789', 63746, '2019-05-02 14:23:22.878', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n,member_location as (\n\tselect m.member_id, m.loc_id  from rch_eligible_couple_analytics m\n\tinner join locations on locations.child_id = m.loc_id\n        where  ( case \n\t\twhen ''#age_group_or_child_count#'' = ''5+'' then children_count >= 5\n\t\twhen ''#age_group_or_child_count#'' = ''0'' then children_count is null \n\t\twhen ''#age_group_or_child_count#'' = ''1'' then children_count = 1 \n\t\twhen ''#age_group_or_child_count#'' = ''2'' then children_count = 2 \n\t\twhen ''#age_group_or_child_count#'' = ''3'' then children_count = 3 \n\t\twhen ''#age_group_or_child_count#'' = ''4'' then children_count = 4\n\t\twhen ''#age_group_or_child_count#'' = ''null'' then true\n\tend) \tand m.last_method_of_contraception = (''ORALPILLS'') \n        #limit_offset#\n)\n,loc_det as(\n\tselect member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id\n\t,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id\n\tfrom location_master,location_type_master,member_location \n\twhere \n\tlocation_master.id = member_location.loc_id and location_type_master.type = location_master.type\n)\nselect \n\t ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\n\tmem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as \"Member Name\",\n\tfam.family_id as \"Family Id\",to_char(r.dob, ''DD/MM/YYYY'') as \"Birth Date\",\n\tstring_agg(lm.name,''> '' order by lhcd.depth desc) as \"Location Hierarchy\"  \nfrom rch_eligible_couple_analytics r\ninner join loc_det on loc_det.member_id = r.member_id\ninner join imt_member mem on mem.id = r.member_id\ninner join imt_family fam on mem.family_id = fam.family_id\ninner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id\ninner join location_master lm on lm.id = lhcd.parent_id\ngroup by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;", "queryId": 1108, "fieldName": "tableField", "queryUUID": "276bdff5-e41a-42e9-8bbd-2c29ad6f1d4e", "queryParams": "limit_offset,age_group_or_child_count,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "age_group_or_child_count", "fieldType": "text", "queryUUID": null, "displayName": "Child Count", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\nwhere l1.id = #location_id#", "queryIdForParam": 1107, "queryUUIDForParam": "797942de-b9a1-4274-aac9-0720cf773c74"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'orelpills_child_wise', '9e332252-458f-4c0a-b925-0095899cecca'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(192, 'Penta 2 given(Immunization Services Provided to Children with Date of Birth)', NULL, true, 'DYNAMIC', NULL, '2020-05-20 12:29:05.114', 1, '2019-02-13 12:24:06.808', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Penta 2 given(Immunization Services Provided to Children with Date of Birth)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.is_valid_for_tracking_report = true\n\tand c.penta2 is not null\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 395, "fieldName": "tableField", "queryUUID": "296a90c4-8d0e-421d-97ca-0f3e6affc9d6", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 394, "queryUUIDForParam": "3952f887-61be-4a3b-847a-faec059908e9"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 393, "queryUUIDForParam": "bfbfcfbd-6150-4a19-88e1-31964db27a89"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 392, "queryUUIDForParam": "e95541a9-9be1-444d-b470-9385e5ead1ec"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_penta2_monthly', '1c7680fa-8852-4168-86c0-fc1dbe7773fc'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(242, 'Out of weighed, less than 2.5 kg(Child Health Services Provided During The Year (Monthly))', NULL, true, 'DYNAMIC', NULL, '2020-06-25 17:04:32.951', 1, '2019-02-18 17:50:19.489', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#\n)\n,parameter as (\n\tselect CAST(''#demographic_location_id#'' AS TEXT) as demographic_group\n) \n,child_det as (\n\tselect m.id, f.location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f\n    inner join parameter p on true = true\n\twhere l.child_id = c.loc_id and m.id = c.member_id and f.family_id = m.family_id\n\tand l.parent_id = #location_id#\n\tand c.birth_weight is not null and c.birth_weight < 2.5\n    and (p.demographic_group=''null'' or l.child_loc_demographic_type in \n\t\t( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 594, "fieldName": "tableField", "queryUUID": "69695e9c-38fc-4433-8054-3c217cdbc6c0", "queryParams": "limit_offset,from_month_year,demographic_location_id,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "demographic_location_id", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 593, "queryUUIDForParam": "08131e2e-9d44-4b36-a630-b46c7a12ee3e"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 591, "queryUUIDForParam": "b6920220-719e-46e4-97f0-d6b168cc8166"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 592, "queryUUIDForParam": "4c00571c-c5b1-478d-9250-c99a8344c627"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_outofweighed_mnth', 'ec961761-c602-47dd-95d0-4fb0f1cd05d4'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(439, 'Total (FP Target couple Reports - Child count wise)', NULL, true, 'DYNAMIC', NULL, '2019-05-29 15:10:45.210', 63746, '2019-05-29 15:10:27.577', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1167, "fieldName": "tableField", "queryUUID": "b0b926b0-380b-4f34-bea8-9d91864c121f", "queryParams": "limit_offset,age_group_or_child_count,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "age_group_or_child_count", "fieldType": "text", "queryUUID": null, "displayName": "Child Count", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\nwhere l1.id = #location_id#", "queryIdForParam": 1166, "queryUUIDForParam": "79cd37fb-6dd0-44fd-b7e3-f9fa459dc2cf"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'total_child_wise', '1f2df069-93e3-4924-b8f3-4ac80bb91724'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(416, 'Injectable (FP Target couple Reports - Child count wise)', NULL, true, 'DYNAMIC', NULL, '2019-05-02 14:48:46.075', 63746, '2019-05-02 14:24:48.039', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n,member_location as (\n\tselect m.member_id, m.loc_id  from rch_eligible_couple_analytics m\n\tinner join locations on locations.child_id = m.loc_id\n        where  ( case \n\t\twhen ''#age_group_or_child_count#'' = ''5+'' then children_count >= 5\n\t\twhen ''#age_group_or_child_count#'' = ''0'' then children_count is null \n\t\twhen ''#age_group_or_child_count#'' = ''1'' then children_count = 1 \n\t\twhen ''#age_group_or_child_count#'' = ''2'' then children_count = 2 \n\t\twhen ''#age_group_or_child_count#'' = ''3'' then children_count = 3 \n\t\twhen ''#age_group_or_child_count#'' = ''4'' then children_count = 4\n\t\twhen ''#age_group_or_child_count#'' = ''null'' then true\n\tend) \tand  m.last_method_of_contraception in (''CHHAYA'',''ANTARA'')   \n        #limit_offset#\n)\n,loc_det as(\n\tselect member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id\n\t,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id\n\tfrom location_master,location_type_master,member_location \n\twhere \n\tlocation_master.id = member_location.loc_id and location_type_master.type = location_master.type\n)\nselect \n\t ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\n\tmem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as \"Member Name\",\n\tfam.family_id as \"Family Id\",to_char(r.dob, ''DD/MM/YYYY'') as \"Birth Date\",\n\tstring_agg(lm.name,''> '' order by lhcd.depth desc) as \"Location Hierarchy\"  \nfrom rch_eligible_couple_analytics r\ninner join loc_det on loc_det.member_id = r.member_id\ninner join imt_member mem on mem.id = r.member_id\ninner join imt_family fam on mem.family_id = fam.family_id\ninner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id\ninner join location_master lm on lm.id = lhcd.parent_id\ngroup by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;", "queryId": 1110, "fieldName": "tableField", "queryUUID": "fc9bbc51-7bce-480e-bf88-f771bf97a8b0", "queryParams": "limit_offset,age_group_or_child_count,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "age_group_or_child_count", "fieldType": "text", "queryUUID": null, "displayName": "Child Count", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\nwhere l1.id = #location_id#", "queryIdForParam": 1109, "queryUUIDForParam": "a10b5593-4521-4364-ac98-d1d92fdd1636"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'injectab_child_wise', '362c4b91-e60b-4ac8-b0ce-c9f9b1420adf'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(417, 'None (FP Target couple Reports - Child count wise)', NULL, true, 'DYNAMIC', NULL, '2019-05-02 14:48:45.218', 63746, '2019-05-02 14:25:28.785', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n,member_location as (\n\tselect m.member_id, m.loc_id  from rch_eligible_couple_analytics m\n\tinner join locations on locations.child_id = m.loc_id\n        where  ( case \n\t\twhen ''#age_group_or_child_count#'' = ''5+'' then children_count >= 5\n\t\twhen ''#age_group_or_child_count#'' = ''0'' then children_count is null \n\t\twhen ''#age_group_or_child_count#'' = ''1'' then children_count = 1 \n\t\twhen ''#age_group_or_child_count#'' = ''2'' then children_count = 2 \n\t\twhen ''#age_group_or_child_count#'' = ''3'' then children_count = 3 \n\t\twhen ''#age_group_or_child_count#'' = ''4'' then children_count = 4\n\t\twhen ''#age_group_or_child_count#'' = ''null'' then true\n\tend)\tand (m.last_method_of_contraception is null or m.last_method_of_contraception in (''CONTRA'',''NONE'',''null'',''none''))  \n        #limit_offset#\n)\n,loc_det as(\n\tselect member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id\n\t,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id\n\tfrom location_master,location_type_master,member_location \n\twhere \n\tlocation_master.id = member_location.loc_id and location_type_master.type = location_master.type\n)\nselect \n\t ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\n\tmem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as \"Member Name\",\n\tfam.family_id as \"Family Id\",to_char(r.dob, ''DD/MM/YYYY'') as \"Birth Date\",\n\tstring_agg(lm.name,''> '' order by lhcd.depth desc) as \"Location Hierarchy\"  \nfrom rch_eligible_couple_analytics r\ninner join loc_det on loc_det.member_id = r.member_id\ninner join imt_member mem on mem.id = r.member_id\ninner join imt_family fam on mem.family_id = fam.family_id\ninner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id\ninner join location_master lm on lm.id = lhcd.parent_id\ngroup by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;", "queryId": 1112, "fieldName": "tableField", "queryUUID": "babdb1b8-020f-4c5d-aef6-c341a78e2e37", "queryParams": "limit_offset,age_group_or_child_count,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "age_group_or_child_count", "fieldType": "text", "queryUUID": null, "displayName": "Child Count", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\nwhere l1.id = #location_id#", "queryIdForParam": 1111, "queryUUIDForParam": "dc630948-4b99-49d5-98b4-7169cb5affc9"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'none_child_wise', '1dc60742-3d2b-42bd-8292-dc1837ccbe0c'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(437, 'Del in Gvt Hospital (Service provide to pregnant women with lmp)', NULL, true, 'DYNAMIC', NULL, '2019-09-23 16:45:15.120', 63746, '2019-05-28 18:41:49.642', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Del in Gvt Hospital (Service provide to pregnant women with lmp)\nwith parameters as (\nselect CAST(#location_id# AS INTEGER) as location_id,\nto_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_month_year,\nto_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') as to_month_year,\nCAST(''#demographic_location_id#'' AS TEXT) as demographic_group,\n(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language\n),\nmember_det as (\n\tselect r.member_id, r.native_location_id as loc_id,\n\tr.unique_health_id, r.family_id, r.member_name as name,\n\tto_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd\n\tfrom rch_pregnancy_analytics_details r, location_hierchy_closer_det l , parameters p\n\twhere r.native_location_id  = l.child_id \n\tand l.parent_id = p.location_id\n\tand ( delivery_hospital in (''897'',''1062'',''899'',''1061'',''895'',''1009'',''890'',''1008'',''894'',''1063'',''892''))\n\tand r.lmp_month_year between p.from_month_year and p.to_month_year\n\tand (p.demographic_group=''null'' or l.child_loc_demographic_type in ( select distinct demographic_type from location_demographic_type_master \n\twhere demographic_group = p.demographic_group))     \n\torder by r.lmp_date\n\t#limit_offset#\n), loc_det as (\n\tselect loc.loc_id, \n        string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p\n\twhere  lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',\n\tcase when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 1161, "fieldName": "tableField", "queryUUID": "16fbe7bd-f5f0-4c99-8983-ede2ec02f5f5", "queryParams": "limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1160, "queryUUIDForParam": "c52c1e07-ec41-4984-9094-a1cdfa3d6b89"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 1159, "queryUUIDForParam": "2bd4c5a6-39f0-4f67-a1de-7b4af29401b9"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 1158, "queryUUIDForParam": "9bb41782-7b94-40be-9a39-d6d4f5203eee"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mtr_del_gov_with_lmp', '485465d5-3178-42e9-8fd6-7f6201398ad1'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(438, 'Del in pvt. hospital(Service provide to pregnant women with lmp)', NULL, true, 'DYNAMIC', NULL, '2019-09-23 16:43:58.512', 63746, '2019-05-28 18:54:10.377', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Del in pvt. hospital(Service provide to pregnant women with lmp)\nwith parameters as (\nselect CAST(#location_id# AS INTEGER) as location_id,\nto_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_month_year,\nto_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') as to_month_year,\nCAST(''#demographic_location_id#'' AS TEXT) as demographic_group,\n(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language\n),\nmember_det as (\n\tselect r.member_id, r.native_location_id as loc_id,\n\tr.unique_health_id, r.family_id, r.member_name as name,\n\tto_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd\n\tfrom rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p\n\twhere r.native_location_id  = l.child_id \n\tand l.parent_id = p.location_id\n        and (delivery_hospital in (''893'',''898'',''1013'',''1010'')) \n\tand r.lmp_month_year between p.from_month_year and p.to_month_year\n\tand (p.demographic_group=''null'' or l.child_loc_demographic_type in ( select distinct demographic_type from location_demographic_type_master \n\twhere demographic_group = p.demographic_group))        \n\torder by r.lmp_date\n\t#limit_offset#\n), loc_det as (\n\tselect loc.loc_id, \n        string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom (select distinct loc_id from member_det) loc,  location_hierchy_closer_det lhcd, location_master l2, parameters p\n\twhere lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',\n\tcase when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 1165, "fieldName": "tableField", "queryUUID": "433707da-2787-47d9-bf7c-142f5dcd153d", "queryParams": "limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 2, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1164, "queryUUIDForParam": "cf261710-12b5-472b-be29-67bf960a94d7"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 1163, "queryUUIDForParam": "e6d4b162-a3d3-418d-921a-d57cc3a3b5db"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 1162, "queryUUIDForParam": "b7140c8f-be6b-456d-963c-7c4fe79e814f"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'mtr_del_in_pvt_lmp', '0fef800d-500d-4a3a-a7ca-8f15750492d6'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(418, 'Screened Boys (CP Web Report)', NULL, true, 'DYNAMIC', NULL, '2019-05-02 15:37:01.428', 60512, '2019-05-02 15:11:21.887', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with dates as(\n\tselect \n\tcase when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end as from_date,\n\tcase when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end + interval ''1 day'' - interval ''00:00:00.001'' as to_date\n),child_service_ids as (\n\tselect child_service_id from rch_child_cp_suspects\n\tinner join dates on created_on between from_date and to_date\n\tinner join imt_member on rch_child_cp_suspects.member_id = imt_member.id\n\twhere location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\tand status is null\n\tand imt_member.gender=''M''\n\t#limit_offset#\n)\nselect\nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nconcat(imt_member.unique_health_id,'' ('',imt_member.family_id,'')'') as \"Unique Health ID (Family ID)\",\nconcat(imt_member.first_name,'' '',imt_member.last_name) as \"Child Name\",\nimt_member.dob as \"Date of Birth\",\nm2.mobile_number as \"Mother Contact No.\",\nto_char(rch_child_service_master.service_date,''DD-MM-YYYY'') as \"Child Service Date\"\nfrom rch_child_service_master\ninner join imt_member on rch_child_service_master.member_id = imt_member.id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join child_service_ids on rch_child_service_master.id = child_service_ids.child_service_id", "queryId": 1114, "fieldName": "tableField", "queryUUID": "b48813a0-28ad-4303-97be-6de71cef719e", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"index": 2, "isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1113, "queryUUIDForParam": "b635aea6-f94e-4940-b608-18ed4496b1c3"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'scr_boys_cp_web', '43c93c0d-481d-4b84-9c99-783c4875bdf0'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(419, 'Screened Girls (CP Web Report)', NULL, true, 'DYNAMIC', NULL, '2019-05-02 15:38:26.212', 60512, '2019-05-02 15:12:57.434', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with dates as(\n\tselect \n\tcase when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end as from_date,\n\tcase when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end + interval ''1 day'' - interval ''00:00:00.001'' as to_date\n),child_service_ids as (\n\tselect child_service_id from rch_child_cp_suspects\n\tinner join dates on created_on between from_date and to_date\n\tinner join imt_member on rch_child_cp_suspects.member_id = imt_member.id\n\twhere location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\tand status is null\n\tand imt_member.gender=''F''\n\t#limit_offset#\n)\nselect\nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nrow_number() over() as \"Sr.No\",\nconcat(imt_member.unique_health_id,'' ('',imt_member.family_id,'')'') as \"Unique Health ID (Family ID)\",\nconcat(imt_member.first_name,'' '',imt_member.last_name) as \"Child Name\",\nimt_member.dob as \"Date of Birth\",\nm2.mobile_number as \"Mother Contact No.\",\nto_char(rch_child_service_master.service_date,''DD-MM-YYYY'') as \"Child Service Date\"\nfrom rch_child_service_master\ninner join imt_member on rch_child_service_master.member_id = imt_member.id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join child_service_ids on rch_child_service_master.id = child_service_ids.child_service_id", "queryId": 1116, "fieldName": "tableField", "queryUUID": "4d70391e-cd10-4310-bc37-26a09916c0dc", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1115, "queryUUIDForParam": "38a9f3bf-5945-4063-b7a1-be0339b12bae"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'scr_girls_cp_web', '8a3fd909-1b7f-4603-b745-9b855a1e5583'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(420, 'Total Screened (CP Web Report)', NULL, true, 'DYNAMIC', NULL, '2019-05-02 15:38:30.623', 60512, '2019-05-02 15:14:45.571', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with dates as(\n\tselect \n\tcase when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end as from_date,\n\tcase when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end + interval ''1 day'' - interval ''00:00:00.001'' as to_date\n),child_service_ids as (\n\tselect child_service_id from rch_child_cp_suspects\n\tinner join dates on created_on between from_date and to_date\n\twhere location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\tand status is null\n\t#limit_offset#\n)\nselect\nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nconcat(imt_member.unique_health_id,'' ('',imt_member.family_id,'')'') as \"Unique Health ID (Family ID)\",\nconcat(imt_member.first_name,'' '',imt_member.last_name) as \"Child Name\",\nimt_member.dob as \"Date of Birth\",\nm2.mobile_number as \"Mother Contact No.\",\nto_char(rch_child_service_master.service_date,''DD-MM-YYYY'') as \"Child Service Date\"\nfrom rch_child_service_master\ninner join imt_member on rch_child_service_master.member_id = imt_member.id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join child_service_ids on rch_child_service_master.id = child_service_ids.child_service_id", "queryId": 1118, "fieldName": "tableField", "queryUUID": "a7855d40-1add-4815-8aa3-734c66ff571e", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1117, "queryUUIDForParam": "cc8be5bc-80e8-4e5e-bd65-5807a5d291c6"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer", "isBackButtonRequired": true}', 'tot_scr_cp_web', '9312575c-a3bd-4f5b-9328-07c6dd1df8dc'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(421, 'Delayed Development Boys (CP Web Report)', NULL, true, 'DYNAMIC', NULL, '2019-05-27 15:53:58.861', 60512, '2019-05-02 15:40:07.945', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1120, "fieldName": "tableField", "queryUUID": "7661471c-0aec-4835-b385-5411a286ba63", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1119, "queryUUIDForParam": "d902e9b0-37f1-4c3b-8fe0-3b639e07e22c"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'dd_boys_cp_web', '4f5411de-9d74-45e5-883a-59f9f0bb723b'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(422, 'Delayed Development Girls (CP Web Report)', NULL, true, 'DYNAMIC', NULL, '2019-05-27 15:52:57.963', 60512, '2019-05-02 15:42:55.501', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1122, "fieldName": "tableField", "queryUUID": "ca4f7452-2c4e-4982-b619-3f4c0d0bc25c", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1121, "queryUUIDForParam": "4c928e2e-2ae4-4e87-97c0-727a49df4340"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'dd_girls_cp_web', '42739616-f1ce-4f8e-ab64-df552bfda07f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(470, 'Rota Virus 3 (Child Health Services Provided during the year (Monthly))', NULL, true, 'DYNAMIC', NULL, '2020-06-25 15:43:19.543', 409, '2019-07-24 10:54:58.932', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1257, "fieldName": "tableField", "queryUUID": "a0e5be45-46e8-4640-852e-a7382e5bd675", "queryParams": ""}], "fieldsContainer": [{"fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "demographic_location_id", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year", "queryIdForParam": 1256, "queryUUIDForParam": "8a1e2242-89e0-4733-8cb1-e3eed037613c"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year", "queryIdForParam": 1255, "queryUUIDForParam": "d0ac6e84-6cc5-4933-87c4-9d72d6d816dd"}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1254, "queryUUIDForParam": "494a64c4-af92-4177-aa33-4f259e8acd1e"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'rota3_ser_month', 'f9399349-2d1d-40ad-93a4-3676b3956da4'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(423, 'Delayed Development Total (CP Web Report)', NULL, true, 'DYNAMIC', NULL, '2019-05-27 15:51:59.341', 60512, '2019-05-02 15:45:55.058', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1124, "fieldName": "tableField", "queryUUID": "d7fca364-45d1-4767-933c-15cb2a864dfc", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1123, "queryUUIDForParam": "cb828cc6-d762-4b03-8523-2ded6cb54648"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'dd_total_cp_web', '1dd313a6-d5f2-4014-91f6-2b102cf33b14'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(424, 'Reviewed Boys (CP Web Report)', NULL, true, 'DYNAMIC', NULL, '2019-05-27 15:50:40.632', 60512, '2019-05-02 15:50:39.162', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1126, "fieldName": "tableField", "queryUUID": "af0eb207-bf39-4a70-909d-ba5abe7917f1", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1125, "queryUUIDForParam": "29890e9e-27f5-409e-b583-d66e761403ab"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'rev_boys_cp_web', '23ef5a96-d231-42e5-8289-62ae180b9c26'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(518, 'Successful - Migration OUT (GVK : Call effectiveness reports)', NULL, true, 'DYNAMIC', NULL, '2020-01-06 14:47:36.584', 66522, '2019-08-28 15:27:23.322', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with dates as(\n\tselect\n\tto_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date ,\n\tto_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end, ''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_date \n),call_master_ids as (\n\tselect id,\n        created_on,\n        created_by,\n        get_location_hierarchy(location_id) as Location_hierarchy\n        from gvk_manage_call_master\n\tinner join dates on gvk_manage_call_master.created_on between dates.from_date and dates.to_date\n\twhere gvk_manage_call_master.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\tand gvk_manage_call_master.call_response not in (''com.argusoft.imtecho.gvk.call.cant-talk'',\n\t''com.argusoft.imtecho.gvk.call.no-number-available'',\n\t''com.argusoft.imtecho.gvk.call.wrong-mobile-number'',\n        ''com.argusoft.imtecho.gvk.call.phone-switched-off'',\n        ''com.argusoft.imtecho.gvk.call.unresponsive'',\n        ''com.argusoft.imtecho.gvk.call.not-reachable'',\n''com.argusoft.imtecho.gvk.call.processed'',\n''com.argusoft.imtecho.gvk.call.processing''\n\t)\n\tand gvk_manage_call_master.call_type = ''MIG_OUT_VERI''\n),\nresponse_ids as (\n\tselect gvk_member_migration_call_response.id, call_master_ids.created_on,call_master_ids.created_by,Location_hierarchy\n\tfrom call_master_ids\n\tinner join gvk_member_migration_call_response on call_master_ids.id = gvk_member_migration_call_response.manage_call_master_id\n\torder by gvk_member_migration_call_response.id desc\n\t#limit_offset#\n),\nresponse as (\n\tselect\nLocation_hierarchy, \nresponse_ids.created_on,response_ids.created_by,\n\tcase when response.is_member_called is true then ''Yes''\n\t     when response.is_member_called is false then ''No''\n\t     when response.is_member_called is null then ''-'' end is_member_called,\n\tcase when response.is_fhw_called is true then ''Yes''\n\t     when response.is_fhw_called is false then ''No''\n\t     when response.is_fhw_called is null then ''-'' end is_fhw_called,\n\tcase when response.is_asha_called is true then ''Yes''\n\t     when response.is_asha_called is false then ''No''\n\t     when response.is_asha_called is null then ''-'' end is_asha_called,\n\tmigration.reported_by,\n\tcase when migration.state=''REPORTED'' then ''Reported'' \n\t     when migration.state=''CONFIRMED'' then ''Confirmed''\n\t     when migration.state=''NO_RESPONSE'' then ''No Response''\n\t     when migration.state=''ROLLBACK'' then ''Rollback''\n\t     when migration.state=''NOT_RESOLVED'' then ''Not resolved''\n\t     when migration.state=''NOT_HAPPEN'' then ''Not happen''\n\t     when migration.state=''LFU'' then ''Loss to folloup''\n\t     when migration.state=''REVERTED'' then ''Reverted''\n\t     when migration.state=''DUPLICATE'' then ''Duplicate''\n\t     else ''other'' end as migation_state,\ncase when response.performed_action =''create_temp_member'' then ''Created temporory member''\n\twhen response.performed_action =''UPDATE_LOCATION'' then ''Update Location''\n\twhen response.performed_action =''search_for_member'' then ''Search for member''\n\twhen response.performed_action =''ROLLBACK'' then ''Rollback''\n\twhen response.performed_action = ''NOT_RESOLVED'' then ''Not resolved''\n\twhen response.performed_action = ''LFU'' then ''Loss to folloup'' end as performed_action,\n\t     concat(migration.mobile_data\\:\\:json->>''firstname'', '' '', migration.mobile_data\\:\\:json->>''middleName'', '' '', migration.mobile_data\\:\\:json->>''lastName'') as member_details_f,\n\t     migration.mobile_data\\:\\:json->>''fhwOrAshaName'' as fhwOrAshaName_f,\n\t--gvk_immunisation_verification_response.id as gvk_immunisation_id,\n\t--gvk_immunisation_verification_response.member_id,\n\tresponse_ids.id as gvk_member_migration_id,migration.member_id\n\tfrom response_ids\n\tinner join gvk_member_migration_call_response response on response_ids.id = response.id\n\tinner join migration_master migration on migration.id = response.migration_id\n\n),\nmember_location_area_ids as (\n\tselect response.gvk_member_migration_id,response.member_id,imt_family.location_id,imt_family.area_id\n\tfrom response\n\tinner join imt_member on imt_member.id = response.member_id\n\tinner join imt_family on imt_family.family_id = imt_member.family_id\n),asha as (\n\tselect member_location_area_ids.gvk_member_migration_id,asha.id\n\tfrom member_location_area_ids\n\tinner join um_user_location asha_location on member_location_area_ids.area_id = asha_location.loc_id and asha_location.state = ''ACTIVE''\n\tinner join um_user asha on asha_location.user_id = asha.id and asha.role_id = 24 and asha.state = ''ACTIVE''\n),asha_unique as (\n\tselect asha.gvk_member_migration_id,max(asha.id)\n\tfrom asha\n\tgroup by asha.gvk_member_migration_id\n),fhw as (\n\tselect member_location_area_ids.gvk_member_migration_id,fhw.id\n\tfrom member_location_area_ids\n\tinner join um_user_location fhw_location on member_location_area_ids.location_id = fhw_location.loc_id and fhw_location.state = ''ACTIVE''\n\tinner join um_user fhw on fhw_location.user_id = fhw.id and fhw.role_id = 30 and fhw.state = ''ACTIVE''\n),fhw_unique as (\n\tselect fhw.gvk_member_migration_id,max(fhw.id)\n\tfrom fhw\n\tgroup by fhw.gvk_member_migration_id\n)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nim.unique_health_id as \"Unique Health ID\",\ncase when im.id is null then ''NA'' else concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) end as \"Member Name\" ,\nLocation_hierarchy as \"Location\",\nto_char(response.created_on,''DD-MM-YYYY HH:MI PM'') as  \"Call Date\",\n\n-- response.member_details_f as \"Member Name *\",\n-- response.fhwOrAshaName_f as \"Asha/FHW Name*\",\nperformed_action as \"Performed Action\",\nmigation_state as \"Migaration state\",\nconcat(fhw_user.first_name,'' '',fhw_user.middle_name,'' '',fhw_user.last_name) as \"FHW Name\",\nconcat(asha_user.first_name,'' '',asha_user.middle_name,'' '',asha_user.last_name) as \"ASHA Name\",\nconcat(um.first_name, '' '', um.last_name) as \"RO Details\",\nconcat(reported_by.first_name,'' '',reported_by.middle_name,'' '',reported_by.last_name) as \"Reported By\"\n--,response.is_member_called as \"Called to Member\",\n--response.is_fhw_called as \"Called to FHW\",\n--response.is_asha_called as \"Called to Asha\"\n\nfrom response\nleft join imt_member im on response.member_id = im.id\nleft join asha_unique on response.gvk_member_migration_id = asha_unique.gvk_member_migration_id\nleft join fhw_unique on response.gvk_member_migration_id = fhw_unique.gvk_member_migration_id\nleft join um_user asha_user on asha_unique.max = asha_user.id\nleft join um_user fhw_user on fhw_unique.max = fhw_user.id\nleft join um_user um on response.created_by = um.id\ninner join um_user reported_by on reported_by.id = response.reported_by", "queryId": 1400, "fieldName": "tableField", "queryUUID": "f452dc2a-d2f4-4e88-83cf-e9bfe57251b9", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"index": 2, "isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "To Date", "isMandatory": false, "queryForParam": "select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date", "queryIdForParam": 1410, "queryUUIDForParam": "732f3299-c98e-47c9-9296-eb1a0ed27a3d", "requiredUptoLevel": ""}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1407, "queryUUIDForParam": "d71727c7-76e5-4f72-9e3e-ec099fa592c5"}, {"index": 1, "isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date", "queryIdForParam": 1399, "queryUUIDForParam": "9d89da4a-3ece-4823-a43d-e3529519810e"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'gvk_mig_out_success', 'c4bead3f-56c1-4049-b6ea-d46c10d32c65'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(194, 'Penta 3 given(Immunization Services Provided to Children with Date of Birth)', NULL, true, 'DYNAMIC', NULL, '2020-05-20 12:55:01.340', 1, '2019-02-13 12:28:25.144', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Infants given Penta 3(Child for monitoring of Pentavalent 3 Vaccine as per Date of Birth)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\nchild_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.member_id is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.penta3 is not null\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 403, "fieldName": "tableField", "queryUUID": "8496d524-82c9-4fc8-9033-0f883b936740", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 402, "queryUUIDForParam": "07d984df-07bf-41cf-a458-94137ba44f4e"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 401, "queryUUIDForParam": "f46e53a4-d018-4063-8b07-35f2f3dbd09d"}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\nwhere l1.id = #location_id#", "queryIdForParam": 400, "queryUUIDForParam": "831069fc-ba24-4782-874c-d6f0af1bd2fe"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_penta3_monthly', '66ffd994-982f-4d8f-9f25-c3e45b30b8a7'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(218, 'OPV 0 given (Child Health Services Provided During The Year (Monthly))', NULL, true, 'DYNAMIC', NULL, '2020-06-25 13:16:02.974', 1, '2019-02-14 15:55:44.926', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 511, "fieldName": "tableField", "queryUUID": "2443dec3-a7fb-4f81-b1c0-e099013ad0cc", "queryParams": ""}], "fieldsContainer": [{"fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "demographic_location_id", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 509, "queryUUIDForParam": "a914d765-585a-4acb-a790-7969b969ec02"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 510, "queryUUIDForParam": "dfb62190-46f3-45af-94a3-06441cae27d5"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 508, "queryUUIDForParam": "49ecdfda-780a-45d9-a55a-a2e87c0152cc"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_opv0_year', '8346d9a3-c40b-466a-9ffc-35b947b46985'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(425, 'Reviewed Girls (CP Web Report)', NULL, true, 'DYNAMIC', NULL, '2019-05-27 15:49:55.230', 60512, '2019-05-02 15:53:55.209', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1130, "fieldName": "tableField", "queryUUID": "6888a711-ad6e-4db3-910d-940bc3509c81", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1129, "queryUUIDForParam": "04e5bcbd-34f3-4b6e-950e-2d68573a14a6"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'rev_girls_cp_web', 'd43daebb-f1e2-499e-b1bc-e9a13809b4c3'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(426, 'Reviewed Total (CP Web Report)', NULL, true, 'DYNAMIC', NULL, '2019-05-27 15:49:07.219', 60512, '2019-05-02 15:55:17.878', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1132, "fieldName": "tableField", "queryUUID": "ddaaeb05-4a70-4c69-a984-5d971d91ade8", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1131, "queryUUIDForParam": "a6b00526-c7cf-45d6-9ced-8f066702022d"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'rev_tot_cp_web', 'eb5bc8af-c1c7-4752-88b8-a181d8995811'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(517, 'Successful - Migration IN (GVK : Call effectiveness reports)', NULL, true, 'DYNAMIC', NULL, '2020-03-04 18:28:53.888', 66522, '2019-08-28 15:05:51.395', 74840, '{"layout": "dynamicReportWithPagination", "htmlData": true, "containers": {"tableContainer": [{"query": "with dates as(\n\tselect\n\tto_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date ,\n\tto_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end, ''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_date \n),call_master_ids as (\n\tselect id,\n        created_on,\n        created_by,\n        get_location_hierarchy(gvk_manage_call_master.location_id) as Location_hierarchy\nfrom gvk_manage_call_master\n\tinner join dates on gvk_manage_call_master.created_on between dates.from_date and dates.to_date\n\twhere gvk_manage_call_master.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\tand gvk_manage_call_master.call_response not in (''com.argusoft.imtecho.gvk.call.cant-talk'',\n\t''com.argusoft.imtecho.gvk.call.no-number-available'',\n\t''com.argusoft.imtecho.gvk.call.wrong-mobile-number'',\n        ''com.argusoft.imtecho.gvk.call.phone-switched-off'',\n        ''com.argusoft.imtecho.gvk.call.unresponsive'',\n        ''com.argusoft.imtecho.gvk.call.not-reachable'',\n''com.argusoft.imtecho.gvk.call.processed'',\n''com.argusoft.imtecho.gvk.call.processing''\n\t)\n\tand gvk_manage_call_master.call_type = ''MIG_IN_VERI''\n),\nresponse_ids as (\n\tselect gvk_member_migration_call_response.id, call_master_ids.created_on,call_master_ids.created_by,Location_hierarchy\n\tfrom call_master_ids\n\tinner join gvk_member_migration_call_response on call_master_ids.id = gvk_member_migration_call_response.manage_call_master_id\n\torder by gvk_member_migration_call_response.id desc\n\t#limit_offset#\n),\nresponse as (\n\tselect \n    Location_hierarchy,\nresponse_ids.created_on,response_ids.created_by,\n\tcase when response.is_member_called is true then ''Yes''\n\t     when response.is_member_called is false then ''No''\n\t     when response.is_member_called is null then ''-'' end is_member_called,\n\tcase when response.is_fhw_called is true then ''Yes''\n\t     when response.is_fhw_called is false then ''No''\n\t     when response.is_fhw_called is null then ''-'' end is_fhw_called,\n\tcase when response.is_asha_called is true then ''Yes''\n\t     when response.is_asha_called is false then ''No''\n\t     when response.is_asha_called is null then ''-'' end is_asha_called,\n\tmigration.reported_by,\n\tcase when migration.state=''REPORTED'' then ''Reported'' \n\t     when migration.state=''CONFIRMED'' then ''Confirmed''\n\t     when migration.state=''NO_RESPONSE'' then ''No Response''\n\t     when migration.state=''ROLLBACK'' then ''Rollback''\n\t     when migration.state=''NOT_RESOLVED'' then ''Not resolved''\n\t     when migration.state=''NOT_HAPPEN'' then ''Not happen''\n\t     when migration.state=''LFU'' then ''Loss to folloup''\n\t     when migration.state=''REVERTED'' then ''Reverted''\n\t     when migration.state=''DUPLICATE'' then ''Duplicate''\n\t     else ''other'' end as migation_state,\n\t     concat(migration.mobile_data\\:\\:json->>''firstname'', '' '', migration.mobile_data\\:\\:json->>''middleName'', '' '', migration.mobile_data\\:\\:json->>''lastName'') as member_details_f,\n\t     migration.mobile_data\\:\\:json->>''fhwOrAshaName'' as fhwOrAshaName_f,\ncase when response.performed_action =''create_temp_member'' then ''Created temporory member''\n\twhen response.performed_action =''UPDATE_LOCATION'' then ''Update Location''\n\twhen response.performed_action =''search_for_member'' then ''Search for member''\n\twhen response.performed_action =''ROLLBACK'' then ''Rollback''\n\twhen response.performed_action = ''NOT_RESOLVED'' then ''Not resolved''\n\twhen response.performed_action = ''LFU'' then ''Loss to folloup'' end as performed_action,\n\t--gvk_immunisation_verification_response.id as gvk_immunisation_id,\n\t--gvk_immunisation_verification_response.member_id,\n\tresponse_ids.id as gvk_member_migration_id,migration.member_id\n\tfrom response_ids\n\tinner join gvk_member_migration_call_response response on response_ids.id = response.id\n\tinner join migration_master migration on migration.id = response.migration_id\n\n),\nmember_location_area_ids as (\n\tselect response.gvk_member_migration_id,response.member_id,imt_family.location_id,imt_family.area_id\n\tfrom response\n\tinner join imt_member on imt_member.id = response.member_id\n\tinner join imt_family on imt_family.family_id = imt_member.family_id\n),asha as (\n\tselect member_location_area_ids.gvk_member_migration_id,asha.id\n\tfrom member_location_area_ids\n\tinner join um_user_location asha_location on member_location_area_ids.area_id = asha_location.loc_id and asha_location.state = ''ACTIVE''\n\tinner join um_user asha on asha_location.user_id = asha.id and asha.role_id = 24 and asha.state = ''ACTIVE''\n),asha_unique as (\n\tselect asha.gvk_member_migration_id,max(asha.id)\n\tfrom asha\n\tgroup by asha.gvk_member_migration_id\n),fhw as (\n\tselect member_location_area_ids.gvk_member_migration_id,fhw.id\n\tfrom member_location_area_ids\n\tinner join um_user_location fhw_location on member_location_area_ids.location_id = fhw_location.loc_id and fhw_location.state = ''ACTIVE''\n\tinner join um_user fhw on fhw_location.user_id = fhw.id and fhw.role_id = 30 and fhw.state = ''ACTIVE''\n),fhw_unique as (\n\tselect fhw.gvk_member_migration_id,max(fhw.id)\n\tfrom fhw\n\tgroup by fhw.gvk_member_migration_id\n)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nim.unique_health_id as \"Unique Health ID\",\ncase when im.id is null then ''NA'' else concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) end as \"Member Name\" ,\nLocation_hierarchy as \"Location\",\nto_char(response.created_on,''DD-MM-YYYY HH:MI PM'') as  \"Call Date\",\nresponse.member_details_f as \"Member Name *\",\nresponse.fhwOrAshaName_f as \"Asha/FHW Name*\",\nperformed_action as \"Performed Action\",\nmigation_state as \"Migaration state\",\nconcat(fhw_user.first_name,'' '',fhw_user.middle_name,'' '',fhw_user.last_name) as \"FHW Name\",\nconcat(asha_user.first_name,'' '',asha_user.middle_name,'' '',asha_user.last_name) as \"ASHA Name\",\nconcat(um.first_name, '' '', um.last_name) as \"RO Details\",\nconcat(reported_by.first_name,'' '',reported_by.middle_name,'' '',reported_by.last_name) as \"Reported By\"\n--,response.is_member_called as \"Called to Member\",\n--response.is_fhw_called as \"Called to FHW\",\n--response.is_asha_called as \"Called to Asha\"\n\nfrom response\nleft join imt_member im on response.member_id = im.id\nleft join asha_unique on response.gvk_member_migration_id = asha_unique.gvk_member_migration_id\nleft join fhw_unique on response.gvk_member_migration_id = fhw_unique.gvk_member_migration_id\nleft join um_user asha_user on asha_unique.max = asha_user.id\nleft join um_user fhw_user on fhw_unique.max = fhw_user.id\nleft join um_user um on response.created_by = um.id\ninner join um_user reported_by on reported_by.id = response.reported_by", "queryId": 1398, "htmlData": "Member Name * : Indicates that member name provided at that time of fill-up the migration form\nMember Name: Indicates member name which is register with application", "fieldName": "tableField", "queryUUID": "27aa401d-ef03-4f7b-a9d0-dc36311b3a3c", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"index": 2, "isHidden": true, "fieldName": "to_date", "fieldType": "date", "queryUUID": null, "isUrlParam": true, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date", "queryIdForParam": 1397, "queryUUIDForParam": "414e70b1-ec55-4c01-9271-df869c0facb5"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Location", "isMandatory": false, "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1395, "queryUUIDForParam": "ff4886fb-1032-4aff-b6cb-9c1700e9b278", "requiredUptoLevel": ""}, {"index": 1, "isHidden": true, "fieldName": "from_date", "fieldType": "date", "queryUUID": null, "isUrlParam": true, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date", "queryIdForParam": 1396, "queryUUIDForParam": "f7fb09f9-316c-4643-a18b-5c97f3cc4c01"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'gvk_mig_in_success', '48768054-e824-451c-8c04-c1950a9b7c61'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(427, 'Confirmed CP Boys (CP Web Report)', NULL, true, 'DYNAMIC', NULL, '2019-05-27 15:48:30.435', 60512, '2019-05-02 15:57:35.906', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1134, "fieldName": "tableField", "queryUUID": "e2ca5611-ac2f-49eb-ad3c-c2aae7211238", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1133, "queryUUIDForParam": "a17a496d-c7d8-47cb-853a-a67a0c48f0d6"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'conf_boys_cp_web', 'e33861ce-6991-458d-a558-99905f79abc0'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(428, 'Confirmed CP Girls (CP Web Report)', NULL, true, 'DYNAMIC', NULL, '2019-05-27 15:47:55.677', 60512, '2019-05-02 15:58:56.111', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1136, "fieldName": "tableField", "queryUUID": "d6cccbe7-bc4e-4dd2-b747-9d2d79fcd52d", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1135, "queryUUIDForParam": "2a438913-211f-4497-a9c1-03451690271a"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'conf_girls_cp_web', 'a92f838d-76c5-4a27-b604-7cc6aa10a482'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(429, 'Total Confirmed CP (CP Web Report)', NULL, true, 'DYNAMIC', NULL, '2019-07-16 19:58:54.472', 60512, '2019-05-02 16:51:12.460', 66522, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with dates as(\n\tselect \n\tcase when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end as from_date,\n\tcase when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end + interval ''1 day'' - interval ''00:00:00.001'' as to_date\n),child_service_ids as (\n\tselect child_service_id from rch_child_cp_suspects\n\tinner join dates on remarks_date between from_date and to_date\n\twhere location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\tand status =''TREATMENT_COMMENCED''\n\t#limit_offset#\n)\nselect\nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nconcat(imt_member.unique_health_id,'' ('',imt_member.family_id,'')'') as \"Unique Health ID (Family ID)\",\nconcat(imt_member.first_name,'' '',imt_member.last_name) as \"Child Name\",\nimt_member.dob as \"Date of Birth\",\nm2.mobile_number as \"Mother Contact No.\",\nto_char(rch_child_service_master.service_date,''DD-MM-YYYY'') as \"Child Service Date\"\nfrom rch_child_service_master\ninner join imt_member on rch_child_service_master.member_id = imt_member.id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join child_service_ids on rch_child_service_master.id = child_service_ids.child_service_id", "queryId": 1138, "fieldName": "tableField", "queryUUID": "c68a9c65-7fcf-440d-ab3a-c04f0b11cbc6", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1137, "queryUUIDForParam": "b58ccc8a-d94d-4965-bc25-7f5fe9a50c26"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'total_conf_cp_web', '24f619ef-52f5-4cbe-bd37-a962047805d1'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(441, 'Not Entered Health Infrastructures(Facility Not Entering RCH Data)', NULL, true, 'DYNAMIC', NULL, '2019-12-30 11:55:50.728', 60512, '2019-05-31 14:36:24.904', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1172, "fieldName": "tableField", "queryUUID": "6f3bcce3-89fa-4fa7-8e09-c2a9aa3ba716", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1171, "queryUUIDForParam": "e22ea540-dc6d-4de4-a28f-353cd5465d77"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer", "isBackButtonRequired": true}', 'not_ent_fac_rch', 'f1945b49-17e9-4946-ab9b-4e954144c95f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(447, 'Infant Death (Child Health Services Provided during the year (Yearly))', NULL, true, 'DYNAMIC', NULL, '2020-06-24 16:17:57.902', 409, '2019-07-05 11:25:34.247', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1188, "fieldName": "tableField", "queryUUID": "c790d484-aaa4-4f7a-be45-1eabdd8acee4", "queryParams": ""}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1187, "queryUUIDForParam": "b4b14eb0-4827-47a7-84b9-7a532cd06e03"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'inf_death_year', '608c55ac-07bd-47ab-a116-e6dac2f12d29'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(464, 'Rota Virus 3(Immunization Services Provided to Children with Date of Birth)', NULL, true, 'DYNAMIC', NULL, '2020-05-25 12:50:20.132', 409, '2019-07-24 10:22:56.664', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Rota virus 3 (Immunization Services Provided to Children with Date of Birth)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.rota_virus_3 is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.rota_virus_3 >= ''07-01-2019''\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 1239, "fieldName": "tableField", "queryUUID": "f87a3609-1f02-417e-a064-8a25ab3bb087", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 1238, "queryUUIDForParam": "db293023-a2d7-4aa4-8d79-521a2703408a"}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1236, "queryUUIDForParam": "440e776c-05bf-4147-833f-9ba358897c76"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 1237, "queryUUIDForParam": "1aa95f02-b5ea-4a52-b4b5-9fa7d4f585e3"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'rota_virus_3_mob', '6af423f3-4cee-411f-b0b5-31ddb4e6d838'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(456, 'Unsuccessful (GVK : Call effectiveness reports)', NULL, true, 'DYNAMIC', NULL, '2020-09-23 10:53:23.460', 66522, '2019-07-16 19:17:16.866', 74841, '{"layout":"dynamicReportWithPagination","htmlData":false,"containers":{"tableContainer":[{"query":"with unsuccess_calls as(\n\tselect \n\t*\n\tfrom gvk_manage_call_master master\n\twhere call_response in (''com.argusoft.imtecho.gvk.call.cant-talk'',\n\t''com.argusoft.imtecho.gvk.call.no-number-available'',\n\t''com.argusoft.imtecho.gvk.call.wrong-mobile-number'',\n        ''com.argusoft.imtecho.gvk.call.phone-switched-off'',\n        ''com.argusoft.imtecho.gvk.call.unresponsive'',\n        ''com.argusoft.imtecho.gvk.call.not-reachable'')\n\tand location_id in (select child_id from location_hierchy_closer_det where parent_id = (case when #location_id# = -2 then 2 else #location_id# end) \nand depth <= (case when #location_id# = -2 then 0 else 8 end))\n\tand case when ''all'' = ''#call_type#'' then true \n\twhen ''#call_type#'' = ''FHW_CH_SER_VERI'' then call_type in (''FHW_CH_SER_VERI'',''FHW_DEL_VERI'',''FHW_TT_VERI'',''FHW_CH_SER_PREG_VERI'')\n\telse call_type = ''#call_type#'' end\nand created_on between case when ''#from_date#'' = ''null'' then now() else to_date(''#from_date#'',''MM-DD-YYYY'') end and to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds''\norder by id #limit_offset#\n\n),\nunsuccess_calls_details as (\n\tselect \n\tconcat(im.first_name,'' '',im.last_name, ''('',im.unique_health_id ,'')'') as name,\n\tmaster.mobile_number,\n\tmaster.created_on,\n\tmaster.call_type,\n\tmaster.location_id,\n\tmaster.id,\n    master.created_by,\n\tmaster.call_response\n\tfrom unsuccess_calls master\n\tinner join imt_member im on im.id = master.member_id\n\twhere call_response != ''com.argusoft.imtecho.gvk.call.success''\n\t\n\tunion all \n\tselect \n\tconcat(uu.first_name,'' '',uu.last_name, ''('',role.name ,'')'') as name,\n\tmaster.mobile_number,\n\tmaster.created_on,\n\tmaster.call_type,\n\tmaster.location_id,\n\tmaster.id,\n    master.created_by,\n\tmaster.call_response\n\tfrom unsuccess_calls master\n\tinner join um_user uu on uu.id = master.user_id\n\tinner join um_role_master role on uu.role_id = role.id \n\twhere call_response != ''com.argusoft.imtecho.gvk.call.success''\n\t\nunion  all\n\tselect \n\tcase when im.id is null then imf.family_id else concat(im.first_name,'' '',im.last_name, '' ('',imf.family_id ,'')'') end as name,\n\tmaster.mobile_number,\n\tmaster.created_on,\n\tmaster.call_type,\n\tmaster.location_id,\n\tmaster.id,\n    master.created_by,\n\tmaster.call_response\n\tfrom unsuccess_calls master\n\tinner join imt_family imf on imf.family_id = master.family_id\n\tleft join imt_member im on im.family_id = imf.family_id and im.family_head = true\n\twhere call_response != ''com.argusoft.imtecho.gvk.call.success''\n\nunion all\n    select\n    (master.mobile_number\\:\\:json->0)#>>''{name}'' as name,\n\tmaster.mobile_number,\t\n    master.created_on,\n    master.call_type,\n\tmaster.location_id,\n\tmaster.id,\n\tmaster.created_by,\n\tmaster.call_response\n\tfrom unsuccess_calls master\n\twhere master.member_id is null and master.user_id is null \n    and call_response != ''com.argusoft.imtecho.gvk.call.success''\t\n),\nresponse as (\nselect\nget_location_hierarchy(master.location_id) as Location_hierarchy, \nmaster.name,\ncase when call_response = ''com.argusoft.imtecho.gvk.call.no-number-available'' then ''No number available''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.cant-talk'' then ''Can''''t talk''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.wrong-mobile-number'' then ''Wrong mobile number''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-asha-husband'' then ''Number belongs to asha''\t-- todo\n--when call_response = ''com.argusoft.imtecho.gvk.call.not-interested-in-treatment'' then ''Not intersted in treatment''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.unresponsive'' then ''Unreponsive''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-husband'' then ''Number belongs to anm'' \nwhen call_response = ''com.argusoft.imtecho.gvk.call.not-reachable'' then ''Not reachable''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.phone-switched-off'' then ''Phone switched off''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-collection-pending'' then ''Number collection pending''\t\t\t-- todo\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary-husband'' then ''number of beneficiary''\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary''\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-family-member''\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-neighbour''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-or-anm-husband'' then ''ANM or husband''\t\t\t-- todo\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-ashah-or-asha-husband'' then ''Asha or husband''\t\t\t-- todo\nelse ''Other'' end reason,\nmaster.mobile_number\\:\\:json,\nmaster.location_id,\nmaster.created_on,\nmaster.created_by,\nmaster.call_type,\nmaster.id\nfrom unsuccess_calls_details master\n ),\nmo as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code in (''mo_phc'',''mo_uphc''))\n),\nmo_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tmo group by location_id\n),\nmo_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from mo_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\nasha as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code = ''ASHA'')\n\twhere  uu.state = ''ACTIVE''\n),\nasha_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tasha group by location_id\n),\nasha_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from asha_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\nanm as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code = ''FHW'')\n\twhere uu.state = ''ACTIVE''\n),\nanm_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tanm group by location_id\n),\nanm_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from anm_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\n\n\ncontacts as (\n\tselect json_array_elements(mobile_number)->>''mobileNumber'' as contact ,json_array_elements(mobile_number)->>''isCalled'' as isCalled ,id\n\tfrom response where mobile_number is not null ),\ncontacts_display_date as (\t\n\tselect string_agg(\n\tcase when isCalled=''true'' then concat(''<b>'',contact,''</b>'') else contact end\n\t,'','') as contact,id from contacts\n\tgroup by id)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nresp.name as \"Called Person\",\nLocation_hierarchy as \"Location\",\ncontacts.contact as \"Dialed Number\",\nto_char(resp.created_on,''DD-MM-YYYY HH:MI PM'') as  \"Call Date\",\n\ncase when resp.call_type = ''FHW_HIGH_RISK_CONF'' then ''FHW highrisk conformation''\nwhen resp.call_type = ''IMMUN_VERI'' then ''Immunization verification''\nwhen resp.call_type = ''FAM_VERI'' then ''Family verification''\nwhen resp.call_type = ''PREG_REGI_VERI'' then ''Pregnancy registration verification''\nwhen resp.call_type = ''HIGH_RISK_VERI'' then ''Highrisk followup verification''\nwhen resp.call_type = ''MIG_IN_VERI'' then ''Member IN migration verification''\nwhen resp.call_type = ''MIG_OUT_VERI'' then ''Member OUT migration verification''\nwhen resp.call_type = ''DUP_MEM_VERI'' then ''Duplicate member verification'' end as \"Call Type\",\nresp.reason as \"Reason for Unsuccessful Calling\",\nmo.name as \"MO Details\",\nanm.name as \"ANM Details\",\nasha.name as \"ASHA Details\"\n,concat(um.first_name, '' '', um.last_name) as \"RO Details\"\n--fhw.name\nfrom response resp\nleft join contacts_display_date contacts on resp.id = contacts.id\nleft join mo_details mo on mo.location_id = resp.location_id\nleft join anm_details anm on anm.location_id = resp.location_id\nleft join asha_details asha on asha.location_id = resp.location_id\nleft join um_user um on resp.created_by = um.id","queryId":1205,"fieldName":"tableField","queryUUID":"cd1eb838-1497-4f01-8689-1e4f2e9856a6","queryParams":"limit_offset,from_date,to_date,call_type,location_id"}],"fieldsContainer":[{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1219,"queryUUIDForParam":"afcf7578-714c-4997-ab5a-d43cdca88093"},{"index":1,"isHidden":true,"fieldName":"call_type","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"Call effectiveness","queryForParam":"with  types as (\nselect ''all'' as key, ''All'' as value, 1 as ord\nunion\nselect ''FHW_HIGH_RISK_CONF'' as key,''Fhw highrisk conformation'' as value, 2 as ord\nunion\nselect ''IMMUN_VERI'' as key, ''Immunization verification'' as value, 3 as ord\nunion\nselect ''FAM_VERI'' as key, ''Family verification'' as value, 4 as ord\nunion\nselect ''PREG_REGI_VERI'' as key,''Pregnancy registration verification'' as value, 5 as ord\nunion\nselect ''MIG_IN_VERI'' as key, ''Member IN migration verification'' as value, 6 as ord\nunion\nselect ''HIGH_RISK_VERI'' as key, ''Highrisk followup verification'' as value, 7 as ord\nunion\nselect ''MIG_OUT_VERI'' as key,''Member OUT migration verification'' as value, 8 as ord\nunion\nselect ''DUP_MEM_VERI'' as key, ''Duplicate member verification'' as value, 9 as ord)\nselect value as call_type from types where key = ''#call_type#''","queryIdForParam":1220,"queryUUIDForParam":"e9570bb4-7bf2-4554-b0e9-d22d36590de9"},{"index":3,"isHidden":true,"fieldName":"to_date","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"To Date","queryForParam":"select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date","queryIdForParam":1222,"queryUUIDForParam":"7fd77eab-bd1a-4444-b540-00e79b3c5b24"},{"index":2,"isHidden":true,"fieldName":"from_date","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"From Date","queryForParam":"select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date","queryIdForParam":1221,"queryUUIDForParam":"2755cb7d-a253-4aca-a27a-01e7e84d7f0e"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","selectedContainer":"tableContainer"}', 'unsuccessful_gvk', '07c436dd-db06-4532-9892-db2c8f4bafe1'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(465, 'Rota Virus 1(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 16:52:50.748', 409, '2019-07-24 10:34:07.968', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1241, "fieldName": "tableField", "queryUUID": "2edda414-a3e7-4ffc-9a1b-0a1add054a1f", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1240, "queryUUIDForParam": "a7228e4f-8e66-4c5e-aea2-b1d1424598cd"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'rota1_given_year', 'ece75c41-9074-4053-9dce-b94833016bea'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(466, 'Rota Virus 2(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 16:48:55.471', 409, '2019-07-24 10:35:23.481', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1243, "fieldName": "tableField", "queryUUID": "5cc7bbef-25f0-47cc-9e5a-ac356bff5532", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1242, "queryUUIDForParam": "538ef871-a672-43b8-98f5-ceae07985651"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'rota2_given_year', '57f009f4-352d-4451-b804-542cc49ba74b'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(467, 'Rota Virus 3(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 16:46:04.404', 409, '2019-07-24 10:37:22.265', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1245, "fieldName": "tableField", "queryUUID": "9e16fc0c-0d99-48ae-878e-f932e98df556", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1244, "queryUUIDForParam": "fa628395-9c3d-4e7a-b3fa-71abd6be10fc"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'rota3_given_year', '27c9d849-6c31-4e9a-8978-d14d05fc04f3'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(468, 'Rota Virus 1 (Child Health Services Provided during the year (Monthly))', NULL, true, 'DYNAMIC', NULL, '2020-06-25 15:23:42.084', 409, '2019-07-24 10:50:44.105', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1249, "fieldName": "tableField", "queryUUID": "b3109858-e80a-4aa9-a76c-4e3b282dcc65", "queryParams": ""}], "fieldsContainer": [{"fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "demographic_location_id", "isMandatory": false, "queryUUIDForParam": null, "requiredUptoLevel": ""}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1246, "queryUUIDForParam": "f0478a37-9bd4-4fa9-8033-500bdd9a26cc"}, {"index": 2, "isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year", "queryIdForParam": 1248, "queryUUIDForParam": "b9b704e1-2a8c-4194-892b-4318cb06ce9c"}, {"index": 1, "isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year", "queryIdForParam": 1247, "queryUUIDForParam": "cb00544c-ff84-4448-b24e-e265872b7f9b"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'rota1_ser_month', '20440a02-5109-4dbc-a316-911ce81f2597'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(472, 'Rota Virus 2 (Child Health Services Provided during the year (Yearly))', NULL, true, 'DYNAMIC', NULL, '2019-10-17 10:32:09.113', 409, '2019-07-24 11:06:50.064', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1261, "fieldName": "tableField", "queryUUID": "937f359b-8061-45b0-bdd5-bb843997210c", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1260, "queryUUIDForParam": "423e1a12-494e-4c06-a6a2-56e8349f145c"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'rota2_ser_dur_year', '9cbed013-1497-41fb-859b-3c0055791f05'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(476, 'Total SAM Children identified (Child Screening Report)', NULL, true, 'DYNAMIC', NULL, '2020-05-25 17:19:30.753', 60512, '2019-08-01 16:00:21.867', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as (\nselect \tcase \n\t\twhen report_preferred_language = ''EN'' then true  \n\t\telse false \n\tend as is_enlish\nfrom um_user where id = #loggedInUserId# \n), child_service_ids as (\n\tselect distinct on (cmtc_child_screening_analytics_details.member_id)\n\tcmtc_child_screening_analytics_details.member_id\n\tfrom cmtc_child_screening_analytics_details\n\twhere cmtc_child_screening_analytics_details.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\tand cmtc_child_screening_analytics_details.rch_child_service_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) \n\tand \n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''\n\tand (cmtc_child_screening_analytics_details.muac < 11.5 \n\t\t\tor cmtc_child_screening_analytics_details.have_pedal_edema \n\t\t\tor (cmtc_child_screening_analytics_details.sd_score = ''SD3'' or cmtc_child_screening_analytics_details.sd_score = ''SD4''))\n\torder by cmtc_child_screening_analytics_details.member_id,cmtc_child_screening_analytics_details.id desc\n    #limit_offset#\n)\nselect\nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Name\",\ncase when prefered_language.is_enlish then get_location_hierarchy_language_wise(imt_family.location_id, ''EN'')\n\t\t\t\telse get_location_hierarchy(imt_family.location_id) end as \"Location\"\nfrom child_service_ids\ninner join imt_member on child_service_ids.member_id = imt_member.id\ninner join imt_family on imt_member.family_id = imt_family.family_id\ninner join prefered_language on true", "queryId": 1268, "fieldName": "tableField", "queryUUID": "2e604b1d-b650-4045-aebb-fbedbadcd8ea", "queryParams": "limit_offset,from_date,to_date,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1267, "queryUUIDForParam": "6bb1b534-2163-4107-9eff-6f623774a347"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'sam_child_ident', '7247635b-57d2-4f9d-aac7-f729d71a7074'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(477, 'SAM with no medical complication and apetite test pass (Child Screening Report)', NULL, true, 'DYNAMIC', NULL, '2020-04-29 15:51:45.978', 60512, '2019-08-01 16:52:06.146', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as (\nselect \tcase \n\t\twhen report_preferred_language = ''EN'' then true  \n\t\telse false \n\tend as is_enlish\nfrom um_user where id = #loggedInUserId# \n), child_service_ids as (\n\tselect distinct on (cmtc_child_screening_analytics_details.member_id)\n\tcmtc_child_screening_analytics_details.member_id\n\tfrom cmtc_child_screening_analytics_details\n\twhere cmtc_child_screening_analytics_details.screening_id is not null\n\tand cmtc_child_screening_analytics_details.admission_id is not null\n\tand cmtc_child_screening_analytics_details.disease_id is null\n\tand cmtc_child_screening_analytics_details.apetite_test = ''PASS''\n\tand cmtc_child_screening_analytics_details.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\tand cmtc_child_screening_analytics_details.rch_child_service_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) \n\tand \n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''\n\tand (cmtc_child_screening_analytics_details.muac < 11.5 \n\t\t\tor cmtc_child_screening_analytics_details.have_pedal_edema \n\t\t\tor (cmtc_child_screening_analytics_details.sd_score = ''SD3'' or cmtc_child_screening_analytics_details.sd_score = ''SD4''))\n\torder by cmtc_child_screening_analytics_details.member_id,cmtc_child_screening_analytics_details.id desc\n    #limit_offset#\n)\nselect\nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Name\",\ncase when prefered_language.is_enlish then get_location_hierarchy_language_wise(imt_family.location_id, ''EN'')\n\t\t\t\telse get_location_hierarchy(imt_family.location_id) end as \"Location\"\nfrom child_service_ids\ninner join imt_member on child_service_ids.member_id = imt_member.id\ninner join imt_family on imt_member.family_id = imt_family.family_id\ninner join prefered_language on true", "queryId": 1271, "fieldName": "tableField", "queryUUID": "a22f0f1c-c5a3-44a3-87a8-36130f9c3118", "queryParams": "limit_offset,from_date,to_date,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1270, "queryUUIDForParam": "b06ee950-9052-4395-a9c8-f48827b05b94"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'no_med_apt_pass', '9f618a12-8601-423e-96ca-1f7b21249f58'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(219, 'Penta 1 given (Child Health Services Provided During The Year (Monthly))', NULL, true, 'DYNAMIC', NULL, '2020-06-25 13:33:34.417', 1, '2019-02-14 15:57:42.508', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 515, "fieldName": "tableField", "queryUUID": "894ab7d3-b844-49ea-ab15-ada49b2f8e49", "queryParams": ""}], "fieldsContainer": [{"fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "demographic_location_id", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 513, "queryUUIDForParam": "7483de52-6232-4b0b-b74b-25d6f05bb626"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 512, "queryUUIDForParam": "1b3dec65-f108-4a67-8a7f-bcf5af32bf69"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 514, "queryUUIDForParam": "e9c1a804-904e-44af-b18f-cfcf31bba1f0"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_penta1_year', '13d2bcfb-6d10-4c06-8e8f-2ef345d13b90'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(478, 'SAM identified child to be referred at CMTC/NRC (Child Screening Report)', NULL, true, 'DYNAMIC', NULL, '2020-04-29 16:07:18.694', 60512, '2019-08-02 18:54:58.111', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as (\nselect \tcase \n\t\twhen report_preferred_language = ''EN'' then true  \n\t\telse false \n\tend as is_enlish\nfrom um_user where id = #loggedInUserId# \n), child_service_ids as (\n\tselect distinct on (cmtc_child_screening_analytics_details.member_id)\n\tcmtc_child_screening_analytics_details.member_id\n\tfrom cmtc_child_screening_analytics_details\n\twhere cmtc_child_screening_analytics_details.screening_id is not null\n\tand cmtc_child_screening_analytics_details.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\tand cmtc_child_screening_analytics_details.rch_child_service_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) \n\tand \n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''\n\tand (cmtc_child_screening_analytics_details.muac < 11.5 \n\t\t\tor cmtc_child_screening_analytics_details.have_pedal_edema \n\t\t\tor (cmtc_child_screening_analytics_details.sd_score = ''SD3'' or cmtc_child_screening_analytics_details.sd_score = ''SD4''))\n\torder by cmtc_child_screening_analytics_details.member_id,cmtc_child_screening_analytics_details.id desc\n    #limit_offset#\n)\nselect\nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Name\",\ncase when prefered_language.is_enlish then get_location_hierarchy_language_wise(imt_family.location_id, ''EN'')\n\t\t\t\telse get_location_hierarchy(imt_family.location_id) end as \"Location\"\nfrom child_service_ids\ninner join imt_member on child_service_ids.member_id = imt_member.id\ninner join imt_family on imt_member.family_id = imt_family.family_id\ninner join prefered_language on true", "queryId": 1273, "fieldName": "tableField", "queryUUID": "afa67e21-8654-4225-be71-29376a015596", "queryParams": "limit_offset,from_date,to_date,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1272, "queryUUIDForParam": "ea866af1-7145-4a0a-ab18-b8cd9b5bd45e"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'sam_ref_ch_scr', '5593bb89-2e1a-449b-91a2-ae677ec4be8c'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(482, 'No number to disp (CCC : Call effectiveness reports)', NULL, true, 'DYNAMIC', NULL, '2019-08-07 14:18:34.698', 63746, '2019-08-07 14:18:34.698', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1294, "fieldName": "tableField", "queryUUID": "e8a29463-97ad-4d71-aba7-616e9bd1afe3", "queryParams": "limit_offset,from_date,to_date,call_type,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date", "queryIdForParam": 1293, "queryUUIDForParam": "c1d4e86c-9308-4756-950e-1f314e8d7fc4"}, {"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date", "queryIdForParam": 1292, "queryUUIDForParam": "720b7620-51e8-4021-bf81-2f6147668206"}, {"isHidden": true, "fieldName": "call_type", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Call effectiveness", "queryForParam": "with  types as (\nselect ''all'' as key, ''All'' as value, 1 as ord\nunion\nselect ''FOLL_OVE_SERV'' as key,''Overdue services follow'' as value, 2 as ord)\nselect * from types order by ord", "queryIdForParam": 1291, "queryUUIDForParam": "b2c6c54d-8582-4b3d-80ca-bad13cc8c778"}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1290, "queryUUIDForParam": "8fc566c2-5234-48d5-bbc4-1626f49031a8"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'no_number_to_dis_ccc', '322682f8-e81c-4b6e-95a6-515894c87a9a'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(52, 'FHS TOTAL MEMBERS', NULL, true, 'DYNAMIC', NULL, '2018-08-08 09:58:28.864', 1027, '2018-07-20 11:55:29.329', 1027, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "select ROW_NUMBER() over() as \"S No.\",fam.family_id as \"Family ID\",\nmem.first_name || '' '' || mem.last_name as \"Member Name\",\ncase when fam.contact_person_id is not null then contact.first_name || '' '' || contact.last_name else ''NA'' end as \"Contact Person\",\ncase when mem.mobile_number is not null then contact.mobile_number else ''NA'' end as \"Contact No\" \nfrom imt_family fam inner join location_hierchy_closer_det lhcd\non fam.location_id = lhcd.child_id \ninner join imt_member mem on fam.family_id = mem.family_id\nleft join imt_member contact on contact.id = fam.contact_person_id\nwhere lhcd.parent_id in  (select child_id from location_hierchy_closer_det where parent_id = #location_id#\nand child_id in (select loc_id from um_user_location where user_id = #user_id# and state = ''ACTIVE'')) and \nmem.state in (''com.argusoft.imtecho.member.state.fhw.reverified'',''com.argusoft.imtecho.member.state.verified'',\n''com.argusoft.imtecho.member.state.new'') and fam.state in (''com.argusoft.imtecho.family.state.new'',''com.argusoft.imtecho.family.state.new.fhsr.verified'',\n\t\t\t\t''com.argusoft.imtecho.family.state.new.fhw.reverified'',''com.argusoft.imtecho.family.state.new.mo.verified'',\n\t\t\t    ''com.argusoft.imtecho.family.state.new.mo.fhw.reverified'',''com.argusoft.imtecho.family.state.verified'',\n\t\t\t\t''com.argusoft.imtecho.family.state.fhw.reverified'',''com.argusoft.imtecho.family.state.emri.verified.ok'',\n\t\t\t\t''com.argusoft.imtecho.family.state.mo.reverified'',''com.argusoft.imtecho.family.state.mo.fhw.reverified'',\n\t\t\t\t''com.argusoft.imtecho.family.state.emri.fhw.reverified'',''com.argusoft.imtecho.family.state.emri.fhw.reverified.dead'',\n\t\t\t\t''com.argusoft.imtecho.family.state.emri.fhw.reverified.verified'',''com.argusoft.imtecho.family.state.emri.verified.ok.dead'',\n\t\t\t\t''com.argusoft.imtecho.family.state.emri.verified.ok.archived'',''com.argusoft.imtecho.family.state.emri.verification.pool.dead'',\n\t\t\t\t''com.argusoft.imtecho.family.state.emri.verification.pool'',''com.argusoft.imtecho.family.state.emri.verification.pool.verified'',\n\t\t\t\t''com.argusoft.imtecho.family.state.emri.verified.ok.verified'')", "queryId": 64, "fieldName": "tableField", "queryUUID": "9856840e-da24-4d65-b0b0-55a3aeccab8e", "queryParams": "user_id,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "location id", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "user_id", "fieldType": "text", "queryUUID": null, "displayName": "user id", "queryUUIDForParam": null}]}, "templateType": "DYNAMIC_REPORTS", "isBackButtonRequired": true}', 'fhs_members', '756dc744-2fa4-4dcd-b750-ade8b633295d'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(483, 'Can’t talk (CCC : Call effectiveness reports)', NULL, true, 'DYNAMIC', NULL, '2019-08-07 14:22:06.826', 63746, '2019-08-07 14:22:06.826', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1303, "fieldName": "tableField", "queryUUID": "dfe2b1b9-e87a-4ff8-9207-ee68b5956255", "queryParams": "limit_offset,from_date,to_date,call_type,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date", "queryIdForParam": 1302, "queryUUIDForParam": "f69f031f-889f-45bb-abac-cf0c66f86868"}, {"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date", "queryIdForParam": 1301, "queryUUIDForParam": "b64ea26a-bb00-4909-a40a-bf27666ca969"}, {"isHidden": true, "fieldName": "call_type", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Call effectiveness", "queryForParam": "with  types as (\nselect ''all'' as key, ''All'' as value, 1 as ord\nunion\nselect ''FOLL_OVE_SERV'' as key,''Overdue services follow'' as value, 2 as ord)\nselect * from types order by ord", "queryIdForParam": 1300, "queryUUIDForParam": "8b4ad031-e2f2-4c64-b615-606294e465d7"}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1299, "queryUUIDForParam": "2a91c424-e5a9-4420-9298-4f11e1fc7477"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'cant_talk_ccc', 'db457b23-9ef5-490b-83d7-5620b7ddfc09'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(485, 'Not Reachable (GVK : Call effectiveness reports)', NULL, true, 'DYNAMIC', NULL, '2020-09-23 11:14:33.343', 66522, '2019-08-14 15:20:59.517', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with unsuccess_calls as(\n\tselect \n\t*\n\tfrom gvk_manage_call_master master\n\twhere call_response in (''com.argusoft.imtecho.gvk.call.not-reachable'')\n\tand location_id in (select child_id from location_hierchy_closer_det where parent_id = (case when #location_id# = -2 then 2 else #location_id# end) \nand depth <= (case when #location_id# = -2 then 0 else 8 end))\n       and case when ''all'' = ''#call_type#'' then true \n       when ''#call_type#'' = ''FHW_CH_SER_VERI'' then call_type in (''FHW_CH_SER_VERI'',''FHW_DEL_VERI'',''FHW_TT_VERI'',''FHW_CH_SER_PREG_VERI'')\n       else call_type = ''#call_type#'' end\n       and created_on between case when ''#from_date#'' = ''null'' then now() else to_date(''#from_date#'',''MM-DD-YYYY'') end and to_date(case when ''#to_date#'' = ''null'' then null \n       else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds''\n       order by id #limit_offset#\n),\nunsuccess_calls_details as (\n\tselect \n\tconcat(im.first_name,'' '',im.last_name, ''('',im.unique_health_id ,'')'') as name,\n\tmaster.mobile_number,\n\tmaster.created_on,\n\tmaster.call_type,\n\tmaster.location_id,\n\tmaster.id,\n\tmaster.created_by,\n\tmaster.call_response\n\tfrom unsuccess_calls master\n\tinner join imt_member im on im.id = master.member_id\n\twhere call_response != ''com.argusoft.imtecho.gvk.call.success''\n\t\n\tunion all \n\tselect \n\tconcat(uu.first_name,'' '',uu.last_name, ''('',role.name ,'')'') as name,\n\tmaster.mobile_number,\n\tmaster.created_on,\n\tmaster.call_type,\n\tmaster.location_id,\n\tmaster.id,\n\tmaster.created_by,\n\tmaster.call_response\n\tfrom unsuccess_calls master\n\tinner join um_user uu on uu.id = master.user_id\n\tinner join um_role_master role on uu.role_id = role.id \n\twhere call_response != ''com.argusoft.imtecho.gvk.call.success''\n\t\n\tunion  all\n\tselect \n\tcase when im.id is null then imf.family_id else concat(im.first_name,'' '',im.last_name, '' ('',imf.family_id ,'')'') end as name,\n\tmaster.mobile_number,\nmaster.created_on,\nmaster.call_type,\n\tmaster.location_id,\n\tmaster.id,\n\tmaster.created_by,\n\tmaster.call_response\n\tfrom unsuccess_calls master\n\tinner join imt_family imf on imf.family_id = master.family_id\n\tleft join imt_member im on im.family_id = imf.family_id and im.family_head = true\n\twhere call_response != ''com.argusoft.imtecho.gvk.call.success''\n),\nresponse as (\nselect \nmaster.name,\nget_location_hierarchy(master.location_id) as Location_hierarchy,\ncase when call_response = ''com.argusoft.imtecho.gvk.call.no-number-available'' then ''No number available''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.cant-talk'' then ''Can''''t talk''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.wrong-mobile-number'' then ''Wrong mobile number''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-asha-husband'' then ''Number belongs to asha''\t-- todo\n--when call_response = ''com.argusoft.imtecho.gvk.call.not-interested-in-treatment'' then ''Not intersted in treatment''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.unresponsive'' then ''Unreponsive''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-husband'' then ''Number belongs to anm'' \nwhen call_response = ''com.argusoft.imtecho.gvk.call.not-reachable'' then ''Not reachable''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.phone-switched-off'' then ''Phone switched off''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-collection-pending'' then ''Number collection pending''\t\t\t-- todo\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary-husband'' then ''number of beneficiary''\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary''\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-family-member''\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-neighbour''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-or-anm-husband'' then ''ANM or husband''\t\t\t-- todo\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-ashah-or-asha-husband'' then ''Asha or husband''\t\t\t-- todo\nelse ''Other'' end reason,\nmaster.mobile_number\\:\\:json,\nmaster.location_id,\nmaster.created_on,\nmaster.call_type,\nmaster.created_by,\nmaster.id\nfrom unsuccess_calls_details master\n ),\nmo as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code in (''mo_phc'',''mo_uphc''))\n),\nmo_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tmo group by location_id\n),\nmo_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from mo_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\nasha as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code = ''ASHA'')\n    where uu.state = ''ACTIVE''\n),\nasha_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tasha group by location_id\n),\nasha_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from asha_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\nanm as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code = ''FHW'')\n    where uu.state = ''ACTIVE''\n),\nanm_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tanm group by location_id\n),\nanm_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from anm_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\n\ncontacts as (\n\tselect json_array_elements(mobile_number)->>''mobileNumber'' as contact ,json_array_elements(mobile_number)->>''isCalled'' as isCalled ,id\n\tfrom response where mobile_number is not null ),\ncontacts_display_date as (\t\n\tselect string_agg(\n\tcase when isCalled=''true'' then concat(''<b>'',contact,''</b>'') else contact end\n\t,'','') as contact,id from contacts\n\tgroup by id)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nresp.name as \"Called Person\",\nLocation_hierarchy as \"Location\",\ncontacts.contact as \"Dialed Number\",\nto_char(resp.created_on,''DD-MM-YYYY HH:MI PM'') as  \"Call Date\",\n\ncase when resp.call_type = ''FHW_HIGH_RISK_CONF'' then ''FHW highrisk conformation''\nwhen resp.call_type = ''IMMUN_VERI'' then ''Immunization verification''\nwhen resp.call_type = ''FAM_VERI'' then ''Family verification''\nwhen resp.call_type = ''PREG_REGI_VERI'' then ''Pregnancy registration verification''\nwhen resp.call_type = ''HIGH_RISK_VERI'' then ''Highrisk followup verification''\nwhen resp.call_type = ''MIG_IN_VERI'' then ''Member IN migration verification''\nwhen resp.call_type = ''MIG_OUT_VERI'' then ''Member OUT migration verification''\nwhen resp.call_type = ''DUP_MEM_VERI'' then ''Duplicate member verification'' end as \"Call Type\",\n--resp.reason as \"Reason for Unsuccessful Calling\",\nmo.name as \"MO Details\",\nanm.name as \"ANM Details\",\nasha.name as \"ASHA Details\"\n,concat(um.first_name, '' '', um.last_name) as \"RO Details\" \n--fhw.name\nfrom response resp\nleft join contacts_display_date contacts on resp.id = contacts.id\nleft join mo_details mo on mo.location_id = resp.location_id\nleft join anm_details anm on anm.location_id = resp.location_id\nleft join asha_details asha on asha.location_id = resp.location_id\nleft join um_user um on resp.created_by = um.id","queryId":1310,"fieldName":"tableField","queryUUID":"f2077f47-f3a7-44c7-b611-24e0e288b769","queryParams":"limit_offset,from_date,to_date,call_type,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"call_type","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"Call effectiveness","queryUUIDForParam":"721ae0d7-ed0d-4cbe-80d0-5f599fa6da03","index":0,"queryForParam":"with  types as (\nselect ''all'' as key, ''All'' as value, 1 as ord\nunion\nselect ''FHW_HIGH_RISK_CONF'' as key,''Fhw highrisk conformation'' as value, 2 as ord\nunion\nselect ''IMMUN_VERI'' as key, ''Immunization verification'' as value, 3 as ord\nunion\nselect ''FAM_VERI'' as key, ''Family verification'' as value, 4 as ord\nunion\nselect ''PREG_REGI_VERI'' as key,''Pregnancy registration verification'' as value, 5 as ord\nunion\nselect ''MIG_IN_VERI'' as key, ''Member IN migration verification'' as value, 6 as ord\nunion\nselect ''HIGH_RISK_VERI'' as key, ''Highrisk followup verification'' as value, 7 as ord\nunion\nselect ''MIG_OUT_VERI'' as key,''Member OUT migration verification'' as value, 8 as ord\nunion\nselect ''DUP_MEM_VERI'' as key, ''Duplicate member verification'' as value, 9 as ord)\nselect value as call_type from types where key = ''#call_type#''","queryIdForParam":1775},{"index":1,"isHidden":true,"fieldName":"from_date","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"From Date","queryUUIDForParam":"8413ba91-5487-4f3e-b3a9-be4bd8912565","queryForParam":"select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date","queryIdForParam":1776},{"isHidden":true,"fieldName":"to_date","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"To Date","queryUUIDForParam":"0a581013-361e-4ce9-856a-d585d94b2b2f","index":2,"queryForParam":"select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date","queryIdForParam":1777},{"index":3,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1309,"queryUUIDForParam":"d7cf1b92-3538-4e7d-b66a-a0b0ce269f33"}]},"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'gvk_not-reachable', '9ee2eb6d-dc08-4dae-b949-4e31bc3d3573'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(487, 'Phone switchoff(GVK : Call effectiveness reports)', NULL, true, 'DYNAMIC', NULL, '2020-09-23 11:29:41.132', 66522, '2019-08-14 15:25:07.016', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with unsuccess_calls as(\n\tselect \n\t*\n\tfrom gvk_manage_call_master master\n\twhere call_response in (''com.argusoft.imtecho.gvk.call.phone-switched-off'')\n\tand location_id in (select child_id from location_hierchy_closer_det where parent_id = (case when #location_id# = -2 then 2 else #location_id# end) \nand depth <= (case when #location_id# = -2 then 0 else 8 end))\n       and case when ''all'' = ''#call_type#'' then true \n       when ''#call_type#'' = ''FHW_CH_SER_VERI'' then call_type in (''FHW_CH_SER_VERI'',''FHW_DEL_VERI'',''FHW_TT_VERI'',''FHW_CH_SER_PREG_VERI'')\n       else call_type = ''#call_type#'' end\n       and created_on between case when ''#from_date#'' = ''null'' then now() else to_date(''#from_date#'',''MM-DD-YYYY'') end and to_date(case when ''#to_date#'' = ''null'' then null \n       else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds''\n       order by id #limit_offset#\n),\nunsuccess_calls_details as (\n\tselect \n\tconcat(im.first_name,'' '',im.last_name, ''('',im.unique_health_id ,'')'') as name,\n\tmaster.mobile_number,\n\tmaster.created_on,\n\tmaster.call_type,\n\tmaster.location_id,\n\tmaster.id,\n\tmaster.created_by,\n\tmaster.call_response\n\tfrom unsuccess_calls master\n\tinner join imt_member im on im.id = master.member_id\n\twhere call_response != ''com.argusoft.imtecho.gvk.call.success''\n\t\n\tunion all \n\tselect \n\tconcat(uu.first_name,'' '',uu.last_name, ''('',role.name ,'')'') as name,\n\tmaster.mobile_number,\n\tmaster.created_on,\n\tmaster.call_type,\n\tmaster.location_id,\n\tmaster.id,\n\tmaster.created_by,\n\tmaster.call_response\n\tfrom unsuccess_calls master\n\tinner join um_user uu on uu.id = master.user_id\n\tinner join um_role_master role on uu.role_id = role.id \n\twhere call_response != ''com.argusoft.imtecho.gvk.call.success''\n\t\n\tunion  all\n\tselect \n\tcase when im.id is null then imf.family_id else concat(im.first_name,'' '',im.last_name, '' ('',imf.family_id ,'')'') end as name,\n\tmaster.mobile_number,\nmaster.created_on,\nmaster.call_type,\n\tmaster.location_id,\n\tmaster.id,\n\tmaster.created_by,\n\tmaster.call_response\n\tfrom unsuccess_calls master\n\tinner join imt_family imf on imf.family_id = master.family_id\n\tleft join imt_member im on im.family_id = imf.family_id and im.family_head = true\n\twhere call_response != ''com.argusoft.imtecho.gvk.call.success''\n),\nresponse as (\nselect \nmaster.name,\nget_location_hierarchy(master.location_id) as Location_hierarchy,\ncase when call_response = ''com.argusoft.imtecho.gvk.call.no-number-available'' then ''No number available''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.cant-talk'' then ''Can''''t talk''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.wrong-mobile-number'' then ''Wrong mobile number''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-asha-husband'' then ''Number belongs to asha''\t-- todo\n--when call_response = ''com.argusoft.imtecho.gvk.call.not-interested-in-treatment'' then ''Not intersted in treatment''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.unresponsive'' then ''Unreponsive''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-husband'' then ''Number belongs to anm'' \nwhen call_response = ''com.argusoft.imtecho.gvk.call.not-reachable'' then ''Not reachable''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.phone-switched-off'' then ''Phone switched off''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-collection-pending'' then ''Number collection pending''\t\t\t-- todo\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary-husband'' then ''number of beneficiary''\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary''\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-family-member''\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-neighbour''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-or-anm-husband'' then ''ANM or husband''\t\t\t-- todo\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-ashah-or-asha-husband'' then ''Asha or husband''\t\t\t-- todo\nelse ''Other'' end reason,\nmaster.mobile_number\\:\\:json,\nmaster.location_id,\nmaster.created_on,\nmaster.call_type,\nmaster.created_by,\nmaster.id\nfrom unsuccess_calls_details master\n ),\nmo as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code in (''mo_phc'',''mo_uphc''))\n),\nmo_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tmo group by location_id\n),\nmo_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from mo_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\nasha as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code = ''ASHA'')\n    where uu.state = ''ACTIVE''\n),\nasha_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tasha group by location_id\n),\nasha_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from asha_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\nanm as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code = ''FHW'')\n    where uu.state = ''ACTIVE''\n),\nanm_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tanm group by location_id\n),\nanm_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from anm_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\n\ncontacts as (\n\tselect json_array_elements(mobile_number)->>''mobileNumber'' as contact ,json_array_elements(mobile_number)->>''isCalled'' as isCalled ,id\n\tfrom response where mobile_number is not null ),\ncontacts_display_date as (\t\n\tselect string_agg(\n\tcase when isCalled=''true'' then concat(''<b>'',contact,''</b>'') else contact end\n\t,'','') as contact,id from contacts\n\tgroup by id)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nresp.name as \"Called Person\",\nLocation_hierarchy as \"Location\",\ncontacts.contact as \"Dialed Number\",\nto_char(resp.created_on,''DD-MM-YYYY HH:MI PM'') as  \"Call Date\",\n\ncase when resp.call_type = ''FHW_HIGH_RISK_CONF'' then ''FHW highrisk conformation''\nwhen resp.call_type = ''IMMUN_VERI'' then ''Immunization verification''\nwhen resp.call_type = ''FAM_VERI'' then ''Family verification''\nwhen resp.call_type = ''PREG_REGI_VERI'' then ''Pregnancy registration verification''\nwhen resp.call_type = ''HIGH_RISK_VERI'' then ''Highrisk followup verification''\nwhen resp.call_type = ''MIG_IN_VERI'' then ''Member IN migration verification''\nwhen resp.call_type = ''MIG_OUT_VERI'' then ''Member OUT migration verification''\nwhen resp.call_type = ''DUP_MEM_VERI'' then ''Duplicate member verification'' end as \"Call Type\",\n--resp.reason as \"Reason for Unsuccessful Calling\",\nmo.name as \"MO Details\",\nanm.name as \"ANM Details\",\nasha.name as \"ASHA Details\"\n,concat(um.first_name, '' '', um.last_name) as \"RO Details\" \n--fhw.name\nfrom response resp\nleft join contacts_display_date contacts on resp.id = contacts.id\nleft join mo_details mo on mo.location_id = resp.location_id\nleft join anm_details anm on anm.location_id = resp.location_id\nleft join asha_details asha on asha.location_id = resp.location_id\nleft join um_user um on resp.created_by = um.id","queryId":1313,"fieldName":"tableField","queryUUID":"941750d3-0591-43d9-b501-cefe068d1d9d","queryParams":"limit_offset,from_date,to_date,call_type,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"call_type","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"Call effectiveness","queryUUIDForParam":"de8a0d26-0c61-4d4c-bcf8-a1aa3e10adba","index":0,"queryForParam":"with  types as (\nselect ''all'' as key, ''All'' as value, 1 as ord\nunion\nselect ''FHW_HIGH_RISK_CONF'' as key,''Fhw highrisk conformation'' as value, 2 as ord\nunion\nselect ''IMMUN_VERI'' as key, ''Immunization verification'' as value, 3 as ord\nunion\nselect ''FAM_VERI'' as key, ''Family verification'' as value, 4 as ord\nunion\nselect ''PREG_REGI_VERI'' as key,''Pregnancy registration verification'' as value, 5 as ord\nunion\nselect ''MIG_IN_VERI'' as key, ''Member IN migration verification'' as value, 6 as ord\nunion\nselect ''HIGH_RISK_VERI'' as key, ''Highrisk followup verification'' as value, 7 as ord\nunion\nselect ''MIG_OUT_VERI'' as key,''Member OUT migration verification'' as value, 8 as ord\nunion\nselect ''DUP_MEM_VERI'' as key, ''Duplicate member verification'' as value, 9 as ord)\nselect value as call_type from types where key = ''#call_type#''","queryIdForParam":1768},{"isHidden":true,"fieldName":"from_date","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"From Date","queryUUIDForParam":"0294f38e-83b2-45b0-983e-36c0a50426f3","index":1,"queryForParam":"select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date","queryIdForParam":1769},{"fieldName":"to_date","fieldType":"text","queryUUID":null,"displayName":"To Date","queryUUIDForParam":"56c2cbd9-0035-4c54-bcdb-d0c0787172a4","index":2,"queryForParam":"select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date","isUrlParam":true,"isHidden":true,"queryIdForParam":1770},{"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1312,"queryUUIDForParam":"8d755dfa-6ddc-4e1d-aaf2-50aa25c2a408","index":3}]},"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'gvk_phone_switchoff', '951fdcee-dc5c-42b0-ad86-1ab9d0c87e8a'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(576, 'Test result entry pending (Covid2019 Hospitalwise Detail )', NULL, true, 'DYNAMIC', NULL, '2020-07-24 16:10:52.439', 74840, '2020-04-09 13:41:00.257', 74841, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "with location_det as (\n\tselect child_id as loc_id\n\tfrom location_hierchy_closer_det lhc\n\twhere \n\tparent_id = #location_id# \n), lab_test_det as (\n\tselect\n\tdistinct on\n\t(covid_admission_detail_id) *\n\tfrom covid19_lab_test_detail ctd   \n    order by covid_admission_detail_id,id\n), infra_info as (\n\tselect\n\thid.id as infra_id,\n\thid.location_id,\n\thid.name infra_name\n\tfrom health_infrastructure_details  hid\n\tinner join location_hierchy_closer_det loch on loch.child_id = hid.location_id\n\tleft join health_infrastructure_ward_details hiwd on hiwd.health_infra_id = hid.id\n\twhere (is_covid_hospital or is_covid_lab)\n    and (case when #infra_id# is null then (loch.parent_id in (select distinct loc_id from location_det)) else hid.id = cast(#infra_id# as integer) end)\n\tgroup by hid.id,hid.location_id,hid.name\n)\n,member_det as (\n\tselect\n    cad.id,\n\tconcat_ws('' '', cad.first_name, cad.last_name, cad.middle_name) as member_name,\n\tcad.age as age,\n\tcad.gender as gender,\n\tcad.address as address,\n\tcad.occupation as occupation,\n\tcad.contact_number as contact_number,\n\td.english_name as district,\n\ts.english_name as state,\n\tcast(''N/A'' as text) as date_of_arrival_in_india,\n\tcad.travelled_place as travelled_to_covid_affected_country,\n\tcad.flight_no as flight_no,\n\tcast(''N/A'' as text) as seat_no,\n\tcase\n\t\twhen cad.in_contact_with_covid19_paitent is not null then cad.in_contact_with_covid19_paitent\n\t\telse ''No''\n\tend as had_contact_with_covid19_case,\n\tto_char(cad.date_of_onset_symptom,''DD/MM/YYYY'') as date_of_onset_of_symptoms,\n\t\n\tconcat_ws('', '' ,(case when cad.is_fever then ''Fever'' else null end) \n\t,(case when cad.is_cough then ''Cough'' else null end)\n\t,(case when cad.is_breathlessness then ''Breathlessness'' else null end)\n\t,(case when cad.is_sari then ''SARI'' else null end)\n\t) as symptoms_at_admission,\n\t\n\tto_char(cad.admission_date,''DD/MM/YYYY'') as date_of_isolation,\n\t\n\tcase\n\t\twhen ltd.id is not null then ''Yes''\n\t\telse ''No''\n\tend sample_collected,\n\tltd.lab_test_number as sample_id,\n\tto_char(ltd.lab_collection_on,''DD/MM/YYYY'') as date_of_sample_collected,\n\t\n\thid_sample.name_in_english as sample_collection_center,\n\thid_tested.name_in_english as sample_tested_at,\n\thid_tested.name_in_english as lab_that_have_confirmed_the_result,\n\t\n\tconcat_ws('', '' ,(case when cad.is_hiv then ''HIV'' else null end) \n\t,(case when cad.is_heart_patient then ''Heart Patient'' else null end)\n\t,(case when cad.is_diabetes then ''Diabetes'' else null end)\n\t,(case when cad.is_copd then ''COPD'' else null end)\n\t,(case when cad.is_hypertension then ''Hypertension'' else null end)\n\t,(case when cad.is_renal_condition then ''Renal Condition'' else null end)\n\t,(case when cad.is_immunocompromized then ''Immunocompromized'' else null end)\n\t,(case when cad.is_malignancy then ''Malignancy'' else null end)\n\t,(case when cad.is_other_co_mobidity then cad.other_co_mobidity else null end)\n\t) as underlying_medical_condition,\n\t\n\tcacds.health_status as health_status,\n\tcase when cad.discharge_status is null then ''Admitted'' else cad.discharge_status end as outcome,\n\tto_char(cad.discharge_date,''DD/MM/YYYY'') as date_of_outcome,\n\tcast(''N/A'' as text) as is_patitnet_member_of_covid_19,\n\tcast(''N/A'' as text) as household_contact,\n\tcast(''N/A'' as text) as workplace_contact,\n\tcast(''N/A'' as text) as community_contact,\n\tcast(''N/A'' as text) as health_care_contact,\n\tcast(''N/A'' as text) as co_traveller\n\t\n\tfrom infra_info info\n     inner join health_infrastructure_ward_details hiwd on hiwd.health_infra_id = info.infra_id \n\tleft join covid19_admission_detail cad on cad.current_ward_id = hiwd.id\n\tleft join lab_test_det ltd on cad.id = ltd.covid_admission_detail_id    \n\tleft join covid19_admitted_case_daily_status cacds on cad.last_check_up_detail_id = cacds.id\n\tleft join location_master lm on lm.id = cad.location_id\n\tleft join location_level_hierarchy_master lh on\tlh.id = lm.location_hierarchy_id\n\tleft join health_infrastructure_details hid_sample on hid_sample.id = ltd.sample_health_infra\n\tleft join health_infrastructure_details hid_tested on hid_tested.id = ltd.sample_health_infra_send_to\n\tleft join location_master s on lh.level1 = s.id and s.state = ''ACTIVE''\n\tand s.name not ilike ''%delete%''\tleft join location_master d on\n\tlh.level3 = d.id and d.state = ''ACTIVE''\n\tand d.name not ilike ''%delete%''\t\n\twhere case when #infra_id# is null then true else ltd.sample_health_infra_send_to = cast(#infra_id# as integer) end\n\tand case when ''#status#'' is not null then lab_collection_status = ''#status#'' else true end\n\n)\nselect\nrow_number() over (ORDER BY id),\nmember_name as \"Name\",\nage as \"Age\",\ngender as \"Gender\",\naddress as \"Address\",\noccupation as \"Occupation\",\ncontact_number as \"Contact Number\",\ndistrict as \"District\",\nstate as \"State\",\ndate_of_arrival_in_india as \"Date of arrival in India\",\ntravelled_to_covid_affected_country as \"Travel to COVID affected country (Name of country)\",\nflight_no as \"Flight No\",\nseat_no as \"Seat No\",\nhad_contact_with_covid19_case as \"H/O contact with COVID-19 case\",\ndate_of_onset_of_symptoms as \"Date of onset of symptoms\",\nsymptoms_at_admission as \"Symptoms at admission\",\ndate_of_isolation as \"Date of isolation\",\nsample_collected as \"Sample collected (yes/No)\",\nsample_id as \"Sample ID\",\ndate_of_sample_collected as \"Date of sample collection\",\nsample_collection_center \"Sample collection centre\",\nsample_tested_at as \"Sample tested at\",\nlab_that_have_confirmed_the_result as \"Lab that confirmed the result\",\nunderlying_medical_condition as \"Underlying medical condition\",\nhealth_status as \"Health Status\",\noutcome as \"Outcome (Discharged/ Death/ Admitted)\",\ndate_of_outcome as \"Date of outcome\",\nis_patitnet_member_of_covid_19 as \"is patient member of covid 19\",\nhousehold_contact as \"house hold contact\",\nworkplace_contact as \"workplace contact\",\ncommunity_contact as \"community contact\",\nhealth_care_contact as \"health care contact\",\nco_traveller as \"co traveller\"\nfrom member_det", "queryId": 1561, "fieldName": "tableField", "queryUUID": "69d41f43-f042-4532-af5a-f20ca48f20d3", "queryParams": "infra_id,location_id,status"}], "fieldsContainer": [{"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Location"}, {"fieldName": "status", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Status", "queryUUIDForParam": null}, {"fieldName": "infra_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Infra Id", "queryUUIDForParam": null}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'test_entry_pen_det', '8bf7e01f-7c88-4ceb-b1fd-789390d15af2'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(160, 'BCG given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-20 17:37:05.129', 1, '2019-02-05 12:41:51.433', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--BCG given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.bcg is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 276, "fieldName": "tableField", "queryUUID": "b23f1efd-74ec-4587-8310-134dc5cef9e2", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 275, "queryUUIDForParam": "af9bd6b2-fb19-4b78-ae36-c8c297b1fd2f"}]}, "isFilterOpen": false, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_bcg_given_yearly', 'a6fba4e2-2d53-445b-8396-20d14eb6dcce'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(221, 'FIPV 1 given (Child Health Services Provided During The Year (Monthly))', NULL, true, 'DYNAMIC', NULL, '2020-06-25 14:12:13.618', 1, '2019-02-14 16:01:24.644', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 523, "fieldName": "tableField", "queryUUID": "a020a5fc-1cd7-4582-b870-0e2b6899f2c6", "queryParams": ""}], "fieldsContainer": [{"fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "demographic_location_id", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 520, "queryUUIDForParam": "2f8d8da2-880c-46a2-8103-eac616e88276"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 522, "queryUUIDForParam": "3e91e446-247d-49fc-959d-0c1e3272f430"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 521, "queryUUIDForParam": "23e023d5-aff9-4124-bb28-a2b016e86359"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_fipv1_year_wise', '69f1e270-dcc5-4ab6-adee-e429a50820e3'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(382, '3 ANC(ANC Services Provided During The Year) (Monthly)', NULL, true, 'DYNAMIC', NULL, '2020-02-17 14:09:43.919', 60512, '2019-04-22 16:51:50.255', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--3 ANC(ANC Services Provided During The Year)\nwith parameters as (\nselect CAST(#location_id# AS INTEGER) as location_id,\nto_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date,\nto_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date,\nCAST(''#demographic_location_id#'' AS TEXT) as demographic_group,\n(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language\n),member_det as (\n\tselect r.member_id, r.anc3_location_id as loc_id,\n\tr.unique_health_id, r.family_id, r.member_name as name,\n\tto_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd\n\t,to_char(r.anc3,''DD/MM/YYYY'') as anc_date\t\n\tfrom rch_pregnancy_analytics_details r\n\t, location_hierchy_closer_det l\n\t, parameters p\n\twhere r.anc3_location_id  = l.child_id\n\tand l.parent_id = p.location_id\n\tand r.anc3 between p.from_date and p.to_date\n        and (p.demographic_group=''null'' or l.child_loc_demographic_type in \n\t( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))\n\torder by r.anc3\n\t#limit_offset#\n), loc_det as (\n\tselect loc.loc_id,  \nstring_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p \n\twhere lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',\n\tcase when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.anc_date as \"Anc date\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 1028, "fieldName": "tableField", "queryUUID": "57429de9-bf15-486e-96b3-1fd5377bc832", "queryParams": "to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1027, "queryUUIDForParam": "599d3ea3-8907-4ab8-ab02-95c8f8f49267"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": false}', '3_anc_mat_month', '45c1f1f6-0844-4ba2-bb1c-ed817ce884d7'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(161, 'DPT 1 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 16:51:33.961', 1, '2019-02-05 12:43:24.449', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--DPT 1 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.dpt1 is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 278, "fieldName": "tableField", "queryUUID": "6b49a89e-c52e-4755-a8fc-604278f98c8d", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 277, "queryUUIDForParam": "fa6509e2-8a02-4ba2-afd5-26a39609c447"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_dpt1_given_yearly', '9d0f4006-83e0-4e89-ae8c-ec5297ee53ec'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(222, 'Penta 2 given (Child Health Services Provided During The Year (Monthly))', NULL, true, 'DYNAMIC', NULL, '2020-06-25 14:22:42.616', 1, '2019-02-14 16:05:58.124', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 527, "fieldName": "tableField", "queryUUID": "2800abc5-ec93-4e50-b4ed-6df7962ebf0d", "queryParams": ""}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 524, "queryUUIDForParam": "56a12f27-9027-4b71-a6ca-c0e02dca8530"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 526, "queryUUIDForParam": "50bc3c93-4685-412e-8eb4-c0c7eec954f1"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 525, "queryUUIDForParam": "086e22f4-ed9c-4fbd-bd65-8dcefe3d516d"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_penta2_year', '943fdbc2-501a-485e-896c-1c7840185b67'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(498, 'In Migration Request(Migration Effectiveness Report)', NULL, true, 'DYNAMIC', NULL, '2019-08-20 21:12:05.230', 69973, '2019-08-20 16:03:59.284', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1347, "fieldName": "tableField", "queryUUID": "d16a95f8-3f87-435a-a3a2-71a3f7954ea6", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "date", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "date", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "location", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1371, "queryUUIDForParam": "67fe860b-52e6-49ad-8604-d5fa4f661698"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer", "isBackButtonRequired": true}', 'mig_in_req', '43324250-1fc2-4e71-b55e-4cec3f35bbc2'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(144, 'FIPV 1 given  (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 11:49:06.585', 1, '2019-02-05 11:49:31.988', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--FIPV 1 given  (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n years as ( \n\tselect concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, \n\tcast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date\n\tfrom generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc\n), child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand y.financial_year = ''#financial_year#''\n    and c.is_valid_for_tracking_report = true\n\tand c.f_ipv1 is not null\n\tand c.dob between y.from_date and y.too_date\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 242, "fieldName": "tableField", "queryUUID": "eef1ac76-a111-417d-9240-c5706841cded", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 241, "queryUUIDForParam": "926f530b-3cde-4c1e-a6a3-abafa2c34a8b"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_fipv1_given', '23ccc12c-7037-4653-8944-b22a398cf8eb'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(164, 'OPV 1 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-20 17:40:59.141', 1, '2019-02-11 17:08:38.256', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--OPV 1 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.opv1 is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 285, "fieldName": "tableField", "queryUUID": "78eacb80-4875-4125-937b-845265ec517d", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 284, "queryUUIDForParam": "4884378e-bd19-453b-9a38-e1750a95dbd3"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_opv_1_given_year', '79b15205-6e0a-4344-a429-1014c2de0c63'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(500, 'In Migration Completed (Migration Effectiveness Report)', NULL, true, 'DYNAMIC', NULL, '2019-08-20 21:01:46.360', 69973, '2019-08-20 17:28:12.640', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1349, "fieldName": "tableField", "queryUUID": "6c3ffa97-275d-4fe6-bf7b-cdb7c0f34186", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"index": 1, "isHidden": true, "fieldName": "from_date", "fieldType": "date", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"index": 2, "isHidden": true, "fieldName": "to_date", "fieldType": "date", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "location", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1369, "queryUUIDForParam": "c79ebf1c-acc4-452e-9ffd-23aa6356341d"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'in_mig_comp', '30431db1-ab30-4077-a7b3-b7a453b40dd9'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(387, '1 PNC(Delivery Services Provided During The Year) (Monthly)', NULL, true, 'DYNAMIC', NULL, '2020-06-01 13:22:46.821', 60512, '2019-04-22 17:32:09.672', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1038, "fieldName": "tableField", "queryUUID": "8619c744-72c2-4b26-8411-64bebc1399c3", "queryParams": "to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1037, "queryUUIDForParam": "7a6ea5d3-3940-4d3a-a28d-a0268a0c9218"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": false}', '1_pnc_mat_monthly', '462a0f66-62ff-4001-9d1c-95e285804fda'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(499, 'Out Migration Request (Migration Effectiveness Report)', NULL, true, 'DYNAMIC', NULL, '2019-08-20 21:12:41.293', 69973, '2019-08-20 17:23:24.335', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1348, "fieldName": "tableField", "queryUUID": "c695c636-0f1f-4550-98d1-87b755bbc8df", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "date", "queryUUID": null, "displayName": "From date", "queryUUIDForParam": null}, {"index": 1, "isHidden": true, "fieldName": "to_date", "fieldType": "date", "queryUUID": null, "displayName": "to date", "queryUUIDForParam": null}, {"index": 2, "isHidden": true, "fieldName": "location_id", "fieldType": "location", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1370, "queryUUIDForParam": "a40768e9-efec-44ff-ae60-85501c552ab8"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mig_eff_req', '951af388-2664-4490-bc32-b9cac30cfe52'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(647, '15% weight gain (CMTC/NRC Facility Monitoring - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-06 15:53:43.852', 60512, '2020-09-07 17:11:24.231', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1736,"queryUUIDForParam":"71a949f7-bb2f-4860-afb3-bacbd410ccf9"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_discharge_15_weight_gain\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1737,"queryUUID":"fa9667f3-62b6-4924-9bc4-5a615b639e05","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', 'gain_15_cmtc_fac', 'e4780dc3-096f-4b6e-89d2-07bc164ebf92'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(51, 'FHS TOTAL FAMILIES', NULL, true, 'DYNAMIC', NULL, '2018-08-24 14:56:20.052', 1027, '2018-07-20 11:52:21.313', 1027, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "select ROW_NUMBER() over() as \"S No.\",fam.family_id as \"Family ID\",\ncase when fam.contact_person_id is not null then mem.first_name || '' '' || mem.last_name else ''NA'' end as \"Contact Person\",\ncase when mem.mobile_number is not null then mem.mobile_number else ''NA'' end as \"Contact No\" \nfrom imt_family fam inner join location_hierchy_closer_det lhcd\non fam.location_id = lhcd.child_id \nleft join imt_member mem on mem.id = fam.contact_person_id\nwhere lhcd.parent_id in  (select child_id from location_hierchy_closer_det where parent_id = #location_id#\nand child_id in (select loc_id from um_user_location where user_id = #user_id# and state = ''ACTIVE'')) and \nfam.state in (''com.argusoft.imtecho.family.state.verified'',''com.argusoft.imtecho.family.state.fhw.reverified'',''com.argusoft.imtecho.family.state.emri.verified.ok'',\n\t\t\t\t''com.argusoft.imtecho.family.state.mo.reverified'',''com.argusoft.imtecho.family.state.mo.fhw.reverified'',''com.argusoft.imtecho.family.state.emri.fhw.reverified'',\n\t\t\t\t''com.argusoft.imtecho.family.state.emri.fhw.reverified.dead'',\n\t\t\t\t''com.argusoft.imtecho.family.state.emri.fhw.reverified.verified'',''com.argusoft.imtecho.family.state.emri.verified.ok.dead'',''com.argusoft.imtecho.family.state.emri.verified.ok.archived''\n\t\t\t\t,''com.argusoft.imtecho.family.state.emri.verification.pool.dead'',''com.argusoft.imtecho.family.state.emri.verification.pool'',\n\t\t\t\t''com.argusoft.imtecho.family.state.emri.verification.pool.verified'',''com.argusoft.imtecho.family.state.emri.verified.ok.verified'',\n\t\t\t\t''com.argusoft.imtecho.family.state.new'',''com.argusoft.imtecho.family.state.new.fhsr.verified'',''com.argusoft.imtecho.family.state.new.fhw.reverified'',''com.argusoft.imtecho.family.state.new.mo.verified'',''com.argusoft.imtecho.family.state.new.mo.fhw.reverified'')", "queryId": 63, "fieldName": "tableField", "queryUUID": "bb8586f6-a888-4918-b720-be635bb7e871", "queryParams": "user_id,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "location id", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "user_id", "fieldType": "text", "queryUUID": null, "displayName": "user id", "queryUUIDForParam": null}]}, "templateType": "DYNAMIC_REPORTS", "isBackButtonRequired": true}', 'fhs_total', 'f2e15eb4-e206-4830-9618-69efe54139c0'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(224, 'OPV 3 given (Child Health Services Provided During The Year (Monthly))', NULL, true, 'DYNAMIC', NULL, '2020-06-25 14:51:07.331', 1, '2019-02-14 16:11:35.479', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 535, "fieldName": "tableField", "queryUUID": "c693f99c-6b7a-438e-b782-561dc18e2a8b", "queryParams": ""}], "fieldsContainer": [{"fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "demographic_location_id", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 534, "queryUUIDForParam": "46f74967-a68e-4a76-833d-d2411d7235bf"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 533, "queryUUIDForParam": "e52b8faf-2b86-481c-8166-91702437488f"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 532, "queryUUIDForParam": "78791292-c782-417a-ba90-5f576693fad5"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_opv3_year_wise', '7ca77bcb-13fd-49a7-bf84-49bb56bdd429'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(501, 'In Reverted Migration (Migration Effectiveness Report)', NULL, true, 'DYNAMIC', NULL, '2019-08-20 21:01:16.441', 69973, '2019-08-20 17:33:42.926', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1350, "fieldName": "tableField", "queryUUID": "63af34c4-f348-453d-acbd-bf25eccc883f", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"index": 1, "isHidden": true, "fieldName": "from_date", "fieldType": "date", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"index": 2, "isHidden": true, "fieldName": "to_date", "fieldType": "date", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "location", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1368, "queryUUIDForParam": "eb4238d5-bfbc-4635-94da-0ff60bfd341a"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'in_mig_revert', '089cc6b1-3c7f-430b-bb2f-9d8bf9b2c0d6'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(502, 'In Migration Rejected (Migration Effectiveness Report)', NULL, true, 'DYNAMIC', NULL, '2019-08-20 21:00:52.107', 69973, '2019-08-20 17:36:28.695', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1351, "fieldName": "tableField", "queryUUID": "dfcdc82f-085a-4449-91cd-130fdf59bd0e", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"index": 1, "isHidden": true, "fieldName": "from_date", "fieldType": "date", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"index": 2, "isHidden": true, "fieldName": "to_date", "fieldType": "date", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "location", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1367, "queryUUIDForParam": "c175576c-3ed7-43ae-b4aa-2146c32a5b65"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'in_mig_rej', '9f389bbd-e1d7-477d-9d03-0730b16dae2a'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(50, 'FHS NEW FAMILIES', NULL, true, 'DYNAMIC', NULL, '2019-01-11 16:01:53.791', 1027, '2018-07-20 11:51:18.600', 58981, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "select ROW_NUMBER() over() as \"S No.\",fam.family_id as \"Family ID\",\ncase when fam.contact_person_id is not null then mem.first_name || '' '' || mem.last_name else ''NA'' end as \"Contact Person\",\ncase when mem.mobile_number is not null then mem.mobile_number else ''NA'' end as \"Contact No\" \nfrom imt_family fam inner join location_hierchy_closer_det lhcd\non fam.location_id = lhcd.child_id \nleft join imt_member mem on mem.id = fam.contact_person_id\nwhere lhcd.parent_id in  (select child_id from location_hierchy_closer_det where parent_id = #location_id#\nand child_id in (select loc_id from um_user_location where user_id = #user_id# and state = ''ACTIVE'')) and \nfam.state in (''com.argusoft.imtecho.family.state.new'',''com.argusoft.imtecho.family.state.new.fhsr.verified'',\n''com.argusoft.imtecho.family.state.new.fhw.reverified'',''com.argusoft.imtecho.family.state.new.mo.verified'',''com.argusoft.imtecho.family.state.new.mo.fhw.reverified'')", "queryId": 62, "fieldName": "tableField", "queryUUID": "d19cf0ed-e542-48c4-b144-fd63ddc6e75b", "queryParams": "user_id,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "location id", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "user_id", "fieldType": "text", "queryUUID": null, "displayName": "user id", "queryUUIDForParam": null}]}, "templateType": "DYNAMIC_REPORTS", "isBackButtonRequired": true}', 'fhs_new', '10f24f43-b875-4a8a-a8b4-202ac4b2ca7f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(149, 'Penta 3 given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 11:49:31.882', 1, '2019-02-05 12:02:08.507', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Penta 3 given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n years as ( \n\tselect concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, \n\tcast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date\n\tfrom generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc\n), child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand y.financial_year = ''#financial_year#''\n    and c.is_valid_for_tracking_report = true\n\tand c.penta3 is not null\n\tand c.dob between y.from_date and y.too_date\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 252, "fieldName": "tableField", "queryUUID": "6bca48f5-fec0-4358-8565-7a11f8d52621", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 251, "queryUUIDForParam": "4e4e3efc-347b-4513-9c13-af902da27675"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_penta3_given', '7685c7d7-80f6-4fd5-8e95-d03ded91876d'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(167, 'Penta 2 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 16:54:37.416', 1, '2019-02-11 17:23:41.169', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Penta 2 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.is_valid_for_tracking_report = true\n\tand c.penta2 is not null\n\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 291, "fieldName": "tableField", "queryUUID": "23664475-f8d1-4b9d-95d4-48c7a43aab12", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 290, "queryUUIDForParam": "94fec538-c7d2-4039-9d46-673aa499c200"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_penta2_given_year', '67d064ef-e978-4a4d-a2ba-c77b48b1d0d7'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(504, 'ANM In Migration Pending (Migration Effectiveness Report)', NULL, true, 'DYNAMIC', NULL, '2019-08-20 20:59:35.761', 69973, '2019-08-20 17:39:40.593', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1353, "fieldName": "tableField", "queryUUID": "52b77cc4-075d-4e1b-b847-c1be5346a2e0", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"index": 1, "isHidden": true, "fieldName": "from_date", "fieldType": "date", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"index": 2, "isHidden": true, "fieldName": "to_date", "fieldType": "date", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "location", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1366, "queryUUIDForParam": "8190329c-1b95-46d7-ab97-02426784a4e3"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'in_anm_pending_cnt', '40a5c5ce-b3e6-4751-82bd-11db3f3eeea2'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(269, 'Maternal deaths(Delivery Services Provided During The Year)', NULL, true, 'DYNAMIC', NULL, '2020-10-24 13:51:41.183', 409, '2019-02-19 20:58:37.807', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"--Maternal deaths(Delivery Services Provided During The Year)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \ndates as (\nSELECT to_date(concat(''04-01-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 1)),''MM-DD-YYYY'') as from_date\n,to_date(concat(''03-31-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 2)),''MM-DD-YYYY'') as to_date\n),member_det as (\n\tselect \n        m.id,\n        r.member_id, r.death_location_id as loc_id,\nm.weight,\n\tm.unique_health_id, m.family_id, \n\tm.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,\n\tto_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd\n\t,to_char(r.death_date,''DD/MM/YYYY'') as death_date\n,to_char(death_detail.created_on,''DD/MM/YYYY'') as date_of_entry\n        ,to_char(death_detail.modified_on,''DD/MM/YYYY'') as date_of_verification\n    ,to_char(p.delivery_date,''DD/MM/YYYY'') as delivery_date\n,EXTRACT(YEAR from age(r.death_date, m.dob)) as age\n,r.last_systolic_bp as last_systolic_bp\n        ,r.haemoglobin_tested_count\n\t,death_detail.place_of_death\n\t,r.maternal_death_type as death_type\n        ,r.pregnancy_reg_id\n\t\t,(case when r.registered_with_no_of_child is not null then r.registered_with_no_of_child else 0 end +\ncase when r.total_out_come is not null then r.total_out_come else 0 end) as total_child\n\tfrom rch_pregnancy_analytics_details r\n\t, location_hierchy_closer_det l\n\t, imt_member m\n\t, rch_pregnancy_registration_det p\n\t,dates\n\t,rch_member_death_deatil death_detail\n\twhere r.member_id = m.id and r.death_location_id  = l.child_id and r.pregnancy_reg_id = p.id\n\tand r.maternal_detah = true\n\tand l.parent_id = #location_id#\n\tand r.death_date between dates.from_date and dates.to_date\n        and death_detail.member_id = m.id\n\torder by r.death_date\n\t#limit_offset#\n),gravida_count as (\n\tselect rch_pregnancy_registration_det.member_id,count(*) as gravida\n\tfrom rch_pregnancy_registration_det\n\twhere rch_pregnancy_registration_det.member_id in (select id from member_det)\n\tgroup by rch_pregnancy_registration_det.member_id\n),parity_count as (\n\tselect imt_member.id,count(distinct m2.dob) as parity\n\tfrom imt_member\n\tinner join imt_member m2 on imt_member.id = m2.mother_id\n\twhere imt_member.id in (select id from member_det)\n\tgroup by imt_member.id\n),\nmember_det_extra as(\n\tselect distinct\n\tmd.id,\n\tconcat(f.address1,'','',f.address2) as address,\n\tf.area_id,\n    f.caste,    \ncase when list_value.value is null then dd.other_death_reason else list_value.value  end as death_deason,\nwpd.delivery_place,\ndelivery.value  as delivery_health_infra_type,\n\tdd.verbal_autopsy,\n\twpd.fbmdsr,\n\tdd.place_of_death,\n\tdeath_infra.value as death_health_infra_type\n\tfrom member_det md \n\tinner join imt_family f on f.family_id = md.family_id    \n\tinner join rch_member_death_deatil dd on dd.member_id = md.id \n\tleft join rch_wpd_mother_master wpd on wpd.member_id = md.id and has_delivery_happened is true and md.pregnancy_reg_id = wpd.pregnancy_reg_det_id\n        and (wpd.state is null or wpd.state != ''MARK_AS_FALSE_DELIVERY'')\n    left join health_infrastructure_details hid on hid.id = wpd.health_infrastructure_id \n    left join listvalue_field_value_detail delivery on delivery.id = hid.\"type\" \n    left join health_infrastructure_details death on death.id = dd.health_infrastructure_id \n    left join listvalue_field_value_detail death_infra on death_infra.id = death.\"type\" \n    left join listvalue_field_value_detail list_value on list_value.id\\:\\:text = dd.death_reason\n)\n,caste_filter as (\n\tselect distinct md.id,list.value as caste from member_det_extra md inner join listvalue_field_value_detail list on md.caste = cast(list.id as text)\n),\nloc as (\n\tselect distinct loc_id from member_det\n), loc_det as (\n\tselect loc.loc_id,  \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n),\nasha_areas as (\nselect\n\tdistinct area_id\nfrom\n\tmember_det_extra ),\nasha_det_temp as(\nselect\n\tasha_areas.area_id,\n\tmax(u.id) as user_id\nfrom\n\tum_user_location ul,\n\tum_user u,\n\tasha_areas\nwhere\n\tasha_areas.area_id = ul.loc_id\n\tand u.id = ul.user_id\n\tand u.state = ''ACTIVE''\n\tand ul.state = ''ACTIVE''\n\tand u.role_id = (\n\tselect\n\t\tid\n\tfrom\n\t\tum_role_master\n\twhere\n\t\tname = ''Asha'') group by asha_areas.area_id\n),\t\nasha_det as (\nselect\n\tu.id,\n\tasha_det_temp.area_id,\n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''(''||\n\tcase\n\t\twhen u.contact_number is not null then u.contact_number || '')''\n\t\telse ''N/A'' || '')''\n\tend as asha \nfrom\n\tum_user u,\n\tasha_det_temp\nwhere\n\tu.id = asha_det_temp.user_id\n),\nlast_service_details as (\n\tselect to_char(max(service_date),''dd-MM-yyyy'') as last_service_date ,services.member_id from rch_member_services services\n\tinner join member_det mem on mem.member_id = services.member_id\n\tgroup by services.member_id\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\n-- loc_det.aoi as \"Location\",\nget_location_hierarchy_by_type(loc_det.loc_id,''D'') as \"District / Corp\",\nget_location_hierarchy_by_type(loc_det.loc_id,''B'') as \"Taluka / zone\",\nget_location_hierarchy_by_type(loc_det.loc_id,''P'') as \"PHC / UHC\",\nget_location_hierarchy_by_type(loc_det.loc_id,''SC'') as \"Sub Centre\",\nm_extra.address as \"Address\",\nmember_det.name as \"Name\",\ncaste_filter.caste as \"Caste\",\nmember_det.unique_health_id as \"TeCHO+ ID\",\n-- member_det.family_id as \"Family ID\",\nmember_det.age as \"Age in Years\",\ngravida_count.gravida as \"Gravida\",\nparity_count.parity as \"Parity\",\nmember_det.total_child as \"No of Live Children\",\nmember_det.death_type as \"Period of death\",\nmember_det.death_date as \"Date of Death\",\nmember_det.date_of_entry as \"Date of Entry\",\nmember_det.date_of_verification as \"Date of Verification\",\nservices.last_service_date as \"Last check up date\",\nhaemoglobin_tested_count as \"Last Hb\",\nlast_systolic_bp as \"Last BP\",\ncase when delivery_place = ''HOME'' then ''Home''\nwhen  delivery_place = ''HOSP'' then ''Hospital''\nwhen delivery_place = ''ON_THE_WAY'' then ''On the way''\nelse ''Other'' end  as \"Place of delivery\",\ncase when delivery_health_infra_type is not null then delivery_health_infra_type else ''-'' end as \"Delivery place type\",\ncase when member_det.place_of_death =''HOME'' then ''Home'' \nwhen member_det.place_of_death  =''ON_THE_WAY'' then ''On the way''\nwhen member_det.place_of_death = ''HOSP'' then ''Hospital''\nelse ''Other'' end as \"Place of death\",\ncase when death_health_infra_type is not null then death_health_infra_type else ''-'' end as \"Death place type\",\nm_extra.death_deason as \"Provisional diagnosis\",\n\n\n--member_det.weight as \"Weight\",\n--member_det.lmp as \"LMP Date\",\n--member_det.edd as \"Estimated Delivery Date\",\n\n\n-- case when member_det.delivery_date is null then ''N/A'' else member_det.delivery_date end as \"Delivery Date\",\ncase when m_extra.verbal_autopsy then ''Yes'' else ''-'' end as \"Verbal Autopsy\",\nm_extra.fbmdsr as \"FBMDSR\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\",\ncase when asha_det.asha is null then ''No Asha Assigned'' else asha_det.asha end as \"Asha Details\"\n\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join gravida_count on member_det.id = gravida_count.member_id\nleft join parity_count on member_det.id = parity_count.id\nleft join fhw_det on member_det.loc_id = fhw_det.loc_id\nleft join caste_filter on member_det.id = caste_filter.id\nleft join member_det_extra m_extra on m_extra.id = member_det.id\nleft join asha_det on asha_det.area_id = m_extra.area_id\n\nleft join last_service_details services on services.member_id = member_det.id","queryId":671,"fieldName":"tableField","queryUUID":"7a0896d5-5a88-416a-b303-becb2478f20f","queryParams":"limit_offset,financial_year,loggedInUserId,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"financial_year","fieldType":"text","queryUUID":null,"displayName":"Year","queryUUIDForParam":null},{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen prefered_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":670,"queryUUIDForParam":"73878fee-8f0f-41ce-ac42-42a5e9d0bc85"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","selectedContainer":"tableContainer"}', 'mat_ser_year_death', '569419e7-4468-4a3d-bcab-56faaeb795b0'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(645, 'Child referred for enrolling in CMAM program (CMTC/NRC Facility Monitoring - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 17:04:54.813', 60512, '2020-09-07 17:08:17.174', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1732,"queryUUIDForParam":"d15bc224-3e67-4a2b-85d6-da992cbbde4d"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere cmam_master_id is not null and cmam_identified_from = ''FSAM''\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1733,"queryUUID":"ad9bb3db-0d48-4db1-877f-fc65ba2bc8e3","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', 'cmam_ref_cmtc_fac', '693cd1e8-d892-4c1c-8dd4-154e1f880dbf'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(153, 'Fully immunized (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-21 16:13:33.237', 1, '2019-02-05 12:19:21.119', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Fully immunized (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n years as ( \n\tselect concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, \n\tcast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date\n\tfrom generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc\n), child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand y.financial_year = ''#financial_year#''\n    and c.is_valid_for_tracking_report = true\n\tand c.fully_immunization_in_number_of_month is not null\n\tand c.dob between y.from_date and y.too_date\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 262, "fieldName": "tableField", "queryUUID": "d40c76c8-e87f-477c-9ab0-aac7791db87a", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 261, "queryUUIDForParam": "738ca7c8-08ea-4282-823c-121244d90279"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_fully_immuised', '8023b46c-7cc1-422c-8a29-ebd08464e770'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(169, 'DPT 3 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 16:55:01.715', 1, '2019-02-11 17:40:59.410', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--DPT 3 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.dpt3 is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 295, "fieldName": "tableField", "queryUUID": "72f698e6-dc8f-4dd7-8d84-7571cb1c1094", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 294, "queryUUIDForParam": "0ad1a0a7-81f1-46a7-9a68-e5ca6662f120"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_dpt3_given_year', '557a88e2-2626-4e12-9534-e404267357f2'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(505, 'Out Migration Completed (Migration Effectiveness Report)', NULL, true, 'DYNAMIC', NULL, '2019-08-20 20:58:55.729', 69973, '2019-08-20 17:42:30.818', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1354, "fieldName": "tableField", "queryUUID": "b381eba0-2d66-4a0e-8fe8-e52de8624e5a", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"index": 1, "isHidden": true, "fieldName": "from_date", "fieldType": "date", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"index": 2, "isHidden": true, "fieldName": "to_date", "fieldType": "date", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "location", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1365, "queryUUIDForParam": "0eeb8e03-8344-452c-8c05-302beee6ed03"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'out_mig_cmplt', '81ac2f76-5e85-4746-b82c-ffba409dcb45'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(506, 'Out Migration Reverted (Migration Effectiveness Report)', NULL, true, 'DYNAMIC', NULL, '2019-08-20 20:58:27.219', 69973, '2019-08-20 17:45:15.611', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1355, "fieldName": "tableField", "queryUUID": "da914754-fc0c-46c0-ae14-6dd008a76ebe", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"index": 1, "isHidden": true, "fieldName": "from_date", "fieldType": "date", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"index": 2, "isHidden": true, "fieldName": "to_date", "fieldType": "date", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "location", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1364, "queryUUIDForParam": "26228b3d-bbc4-4e8d-ac7b-da9c08a6a7b9"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer", "isBackButtonRequired": true}', 'out_mig_revert', '7771175c-be3c-46cb-bf79-455f2d6d87ab'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(611, 'Location Wise Child age details analytics ( 5 to 7.5)', NULL, true, 'DYNAMIC', NULL, '2020-09-24 14:27:50.623', 74840, '2020-06-29 11:18:33.365', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with user_lang as (    \n\tselect prefered_language from um_user uu where id =  CAST(#loggedInUserId# AS INTEGER) \n),\nparameters as (\n    select child_id as loc_id,\n    case when user_lang.prefered_language = ''EN'' then master.english_name\n\telse master.name\n\tend as location_name    \n\tfrom location_hierchy_closer_det lhc\n\tinner join location_master master on lhc.child_id = master.id\n\tinner join user_lang on true = true\n\twhere \n\tparent_id = CAST(#location_id# AS INTEGER) and depth = 1\n    \n)\n,child_details as (\n\t\n\tselect\n\tloc.parent_id as loc_id,\n\tcount(1) filter (where child.age = 5) as five,\n\tcount(1) filter (where child.age = 6) as six,\n\tcount(1) filter (where child.age = 7) as seven,\n\tcount(1) filter (where child.age = 7.5) as seven_and_half\n\t\n\t\n\tfrom zzz_child_weight_wise_analytics_5_to_7_5_year child inner join location_hierchy_closer_det loc\n\t\ton child.location_id = loc.child_id  \n\twhere loc.parent_id in (select loc_id from parameters p)\n\tgroup by loc.parent_id\n\torder by loc.parent_id\n\t#limit_offset#\n)\n,final_det as (\n\tselect\n\tp.loc_id as loc_id,\n\tlocation_name,\n\tc.five,\n\tc.six,\n\tc.seven,\n\tc.seven_and_half\n\tfrom parameters p left join child_details c on p.loc_id = c.loc_id\n\n)\nselect\n\tROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\n\tloc_id as hidden_location_id,\n\tlocation_name as \"Location\",\n\tcoalesce(five,0) as \"5 KG\",\n\tcoalesce(six,0) as \"6 KG\",\n\tcoalesce(seven,0) as \"7 KG\",\n\tcoalesce(seven_and_half,0) as \"7.5 KG\"\t\n\tfrom \n\tfinal_det\n       \n        union all\n\t\n\tselect\n\tnull,\n\t#location_id# as hidden_location_id,\n\t''<b>Total</b>'',\n\tcoalesce(sum(five),0),\n\tcoalesce(sum(six),0),\n\tcoalesce(sum(seven),0),\n\tcoalesce(sum(seven_and_half),0)\n\tfrom \n\tfinal_det","queryId":1650,"fieldName":"tableField","queryUUID":"f8f8f1c0-33ae-4635-b2be-23693471a3bc","queryParams":"limit_offset,loggedInUserId,location_id"}],"fieldsContainer":[{"index":0,"fieldName":"location_id","fieldType":"location","queryUUID":null,"displayName":"Location Id","isMandatory":true,"queryUUIDForParam":null,"requiredUptoLevel":1,"fetchAccordingToUserAoi":true}],"tableFieldContainer":[{"index":0,"isLink":true,"fieldName":"5 KG","customParam":"","customState":"techo.report.view({\"id\":623,\"queryParams\":{\"location_id\":@hidden_location_id@,\"age\":\"5\"}})","navigationState":null,"locationLevelForLink":"4"},{"index":1,"isLink":true,"fieldName":"6 KG","customParam":"","customState":"techo.report.view({\"id\":623,\"queryParams\":{\"location_id\":@hidden_location_id@,\"age\":\"6\"}})","navigationState":null,"locationLevelForLink":"4"},{"index":2,"isLink":true,"fieldName":"7 KG","customParam":"","customState":"techo.report.view({\"id\":623,\"queryParams\":{\"location_id\":@hidden_location_id@,\"age\":\"7\"}})","navigationState":null,"locationLevelForLink":"4"},{"index":3,"isLink":true,"fieldName":"7.5 KG","customParam":"","customState":"techo.report.view({\"id\":623,\"queryParams\":{\"location_id\":@hidden_location_id@,\"age\":\"7.5\"}})","navigationState":null,"locationLevelForLink":"4"}]},"isFilterOpen":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'child_weight_ana_loc', '303079ce-2f99-46db-9968-4d1c584a986f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(507, 'Out Migration Rejected (Migration Effectiveness Report)', NULL, true, 'DYNAMIC', NULL, '2019-08-20 20:59:41.600', 69973, '2019-08-20 17:47:54.240', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with dates as(\nselect\nto_date(case when ''#from_date#'' =''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,\nto_date(case when ''#to_date#'' =''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') as to_date\n),\nmigration_master_det as (\nselect mm.* from (select * from migration_master, dates) mm \ninner join location_hierchy_closer_det depth_child on depth_child.child_id=mm.reported_location_id \ninner join location_hierchy_closer_det lhcd on (lhcd.child_id=depth_child.parent_id)\n where (case when (mm.from_date is not null and mm.to_date is not null) then\nreported_on between mm.from_date and mm.to_date else 1=1 end) and mm.state not in (''DUPLICATE'',''REVERTED'')\nand mm.type=''OUT'' and mm.state=''NOT_HAPPEN'' and lhcd.parent_id=#location_id# and lhcd.depth=1  #limit_offset#\n),\nfinal_Query as (\nselect concat(im.first_name,'' '', im.middle_name,'' '', im.last_name)|| case when im.unique_health_id is not null then '' (''|| im.unique_health_id||'')'' end\nas member_name, concat(uu.first_name,'' '', uu.middle_name,'' '', uu.last_name)|| case when uu.contact_number is not null then '' (''|| uu.contact_number||'')'' end as reported_by,\nto_char(mm.reported_on,''DD/MM/YYYY'') as reported_on, get_location_hierarchy(mm.location_migrated_from) as from_name, get_location_hierarchy(mm.location_migrated_to) as to_name\nfrom migration_master_det mm\ninner join um_user uu on uu.id=mm.reported_by\nleft join imt_member im on im.id=mm.member_id\n)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nfq.member_name as \"Member Name\",\nfq.reported_by as \"Reported By\",\nfq.reported_on as \"Reported On\",\nfq.from_name as \"Migrated From\",\nfq.to_name as \"Migrated To\"\nfrom final_Query fq", "queryId": 1356, "fieldName": "tableField", "queryUUID": "a6a5b585-a36d-4058-ba85-ce77b9d473ec", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"index": 1, "isHidden": true, "fieldName": "from_date", "fieldType": "date", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"index": 2, "isHidden": true, "fieldName": "to_date", "fieldType": "date", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "location", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1363, "queryUUIDForParam": "62557404-125e-4579-b279-0bfa6a6af8a2"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'out_mig_rej', 'd852c11c-2a67-43c6-953e-19183a71e896'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(508, 'ANM OUT Migration Pending (Migration Effectiveness Report)', NULL, true, 'DYNAMIC', NULL, '2019-08-20 20:57:26.425', 69973, '2019-08-20 17:50:12.519', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with dates as(\nselect\nto_date(case when ''#from_date#'' =''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,\nto_date(case when ''#to_date#'' =''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') as to_date\n),\nmigration_master_det as (\nselect mm.* from (select * from migration_master, dates) mm \ninner join location_hierchy_closer_det depth_child on depth_child.child_id=mm.reported_location_id \ninner join location_hierchy_closer_det lhcd on (lhcd.child_id=depth_child.parent_id)\n where (case when (mm.from_date is not null and mm.to_date is not null) then\nreported_on between mm.from_date and mm.to_date else 1=1 end) and mm.state not in (''DUPLICATE'',''REVERTED'')\nand mm.type=''OUT'' and mm.state=''REPORTED'' and migrated_location_not_known = false and lhcd.parent_id=#location_id# and lhcd.depth=1  #limit_offset#\n),\nfinal_Query as (\nselect concat(im.first_name,'' '', im.middle_name,'' '', im.last_name) || case when im.unique_health_id is not null then '' (''|| im.unique_health_id||'')'' end\nas member_name, concat(uu.first_name,'' '', uu.middle_name,'' '', uu.last_name,'' ('',uu.contact_number,'')'') as reported_by,\nto_char(mm.reported_on,''DD/MM/YYYY'') as reported_on, get_location_hierarchy(mm.location_migrated_from) as from_name, get_location_hierarchy(mm.location_migrated_to) as to_name\n /*, mm.family_migrated_from, mm.family_migrated_to, mm.state*/\nfrom migration_master_det mm\ninner join um_user uu on uu.id=mm.reported_by\nleft join imt_member im on im.id=mm.member_id\n)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nfq.member_name as \"Member Name\",\nfq.reported_by as \"Reported By\",\nfq.reported_on as \"Reported On\",\nfq.from_name as \"Migrated From\",\nfq.to_name as \"Migrated To\"\n/*\n, fq.state as \"Migration Status\",\nfq.family_migrated_from as \"Family Migrated From\",\nfq.family_migrated_to as \"Family Migrated To\"\n*/\nfrom final_Query fq", "queryId": 1357, "fieldName": "tableField", "queryUUID": "ef7be1ef-bc23-4f37-96b9-5f1ba02ae959", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"index": 1, "isHidden": true, "fieldName": "from_date", "fieldType": "date", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"index": 2, "isHidden": true, "fieldName": "to_date", "fieldType": "date", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "location", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1362, "queryUUIDForParam": "32d3ff35-a928-4df6-ab3e-575694d5157f"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer", "isBackButtonRequired": true}', 'anm_out_mig_pnd', '99d72bdb-ede9-4814-96b8-9cb62d78ec8c'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(535, 'User Wise Login Rate', NULL, true, 'DYNAMIC', NULL, '2020-02-24 20:27:51.269', 74841, '2020-01-03 12:12:47.321', 409, '{"layout": "dynamicReportWithPagination", "htmlData": true, "containers": {"tableContainer": [{"query": "WITH\ndates AS (\n    SELECT\n        to_date(\n            CASE WHEN ''#from_date#'' = ''null'' THEN\n                NULL\n            ELSE\n                ''#from_date#''\n            END, ''MM-DD-YYYY'') AS from_date,\n        to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date\n)\n,user_wise_count AS (\n    SELECT\n \t\tul.user_id,\n \t\tstring_agg(distinct get_location_hierarchy(ul.location_id),''<br>'') as location_name,\n \t\t1 as number_of_days,\n \t\tmax(case when is_logged_in = true then 1 else 0 end) as number_of_logged_in_days\n    FROM\n        um_user_day_wise_login_detail ul,\n        dates,location_hierchy_closer_det lh\t\n    WHERE\n        ul.month_year BETWEEN dates.from_date AND dates.to_date\nand extract(''ISODOW'' FROM ul.login_date) <= 6\n        AND lh.parent_id = #location_id#\n        and lh.child_id = ul.location_id\n        AND role_id = #role_id#\n        GROUP BY\n          ul.login_date, ul.user_id\norder by ul.login_date, ul.user_id\n        \n)\n\nselect distinct\nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\n\tconcat_ws('' '', u.first_name, u.last_name, ''('', u.user_name, '')'') \"User Detail\",\n\tstring_agg(distinct uw.location_name, ''<br>'') as \"Location\",\n    case when sum(uw.number_of_days) =  #total_working_days# then CONCAT(sum(uw.number_of_days),'''') else CONCAT(sum(uw.number_of_days),''**'') end as \"Working Days\",\n    sum(uw.number_of_logged_in_days) as \"Login Days\",    \n\tround(((sum(uw.number_of_logged_in_days) * 100.0) / NULLIF(sum(uw.number_of_days), 0)), 2) as \"Login Rate\"\n\tfrom user_wise_count uw\ninner join um_user u\non u.id  = uw.user_id\ngroup by u.first_name, u.last_name, u.user_name\n#limit_offset#", "queryId": 1461, "htmlData": "#table#\n<br/>\n<b>Note :</b><br/>\n<b>Working Days :</b>Total working days<br/>\n<b>Login Days :</b>Total no of days user logged in out of working days<br/>\n<b>Login Rate :</b>Login days / Working Days <br/>", "fieldName": "tableField", "queryUUID": "e2e2607c-77b1-44e9-a421-02e9d3d125fd", "queryParams": "limit_offset,from_date,to_date,role_id,location_id,total_working_days"}], "fieldsContainer": [{"index": 0, "query": "select id,name from um_role_master where state = ''ACTIVE'' and name in (''FHW'',''Asha'',''CHO-HWC'',''Taluka Health Officer'') order by name", "isQuery": true, "queryId": 1460, "isHidden": true, "fieldName": "role_id", "fieldType": "text", "queryUUID": "080e6070-c2fe-4acc-a9f5-68740b65feb0", "displayName": "Role", "isMandatory": true, "queryParams": null, "queryForParam": "select name as role_id from um_role_master where state = ''ACTIVE'' and id = #role_id#", "queryIdForParam": 1462, "availableOptions": [], "queryUUIDForParam": "b0eef71a-f5e8-482c-a6c0-a5eddf0f5a32", "requiredUptoLevel": 1}, {"index": 4, "isHidden": true, "fieldName": "total_working_days", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "total_working_days", "queryUUIDForParam": null}, {"index": 1, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "isMandatory": true, "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "fetchUptoLevel": "4", "queryIdForParam": 1463, "queryUUIDForParam": "0014b247-df0f-49a8-bd9e-a3c6b31c3476", "requiredUptoLevel": 1, "fetchAccordingToUserAoi": true}, {"index": 3, "isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "isMandatory": true, "queryForParam": "select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date", "queryIdForParam": 1465, "queryUUIDForParam": "0ef911ee-cbe9-435e-ab5f-b3059f714188", "requiredUptoLevel": 1}, {"index": 2, "isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "isMandatory": true, "queryForParam": "select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date", "queryIdForParam": 1464, "queryUUIDForParam": "bb49a155-b737-4b7d-a542-490908c0bdbf", "requiredUptoLevel": 1}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'user_wise_login_rate', 'b8321fbf-ed80-4dec-836d-7d77bf03b2bf'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(643, 'Defaulters (CMTC/NRC Facility Monitoring - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 17:05:32.962', 60512, '2020-09-07 17:04:54.371', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"index":0,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1728,"queryUUIDForParam":"de73e2e1-80dc-49fd-941b-258242148e58"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_admission_defaulter_date is not null\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1729,"queryUUID":"268c7044-2853-46fc-9484-ed47d577480e","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', 'defaulter_cmtc_fac', '3b7c2243-bbb5-4056-a8e7-e8eca3892d64'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(509, 'GVK Out Migration Pending (Migration Effectiveness Report)', NULL, true, 'DYNAMIC', NULL, '2020-03-04 19:11:42.749', 69973, '2019-08-20 17:52:14.274', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with dates as(\nselect\nto_date(case when ''#from_date#'' =''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,\nto_date(case when ''#to_date#'' =''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') as to_date\n),\nmigration_master_det as (\nselect mm.* from (select * from migration_master, dates) mm \ninner join location_hierchy_closer_det depth_child on depth_child.child_id=mm.reported_location_id \ninner join location_hierchy_closer_det lhcd on (lhcd.child_id=depth_child.parent_id)\n where (case when (mm.from_date is not null and mm.to_date is not null) then\nreported_on between mm.from_date and mm.to_date else 1=1 end) and mm.state not in (''DUPLICATE'',''REVERTED'')\nand mm.type=''OUT'' and mm.state in (''REPORTED'',''NOT_RESOLVED'') and migrated_location_not_known = true and lhcd.parent_id=#location_id# and lhcd.depth=1  #limit_offset#\n),\nfinal_Query as (\nselect concat(im.first_name,'' '', im.middle_name,'' '', im.last_name)|| case when im.unique_health_id is not null then '' (''|| im.unique_health_id||'')'' end\nas member_name, concat(uu.first_name,'' '', uu.middle_name,'' '', uu.last_name)|| case when uu.contact_number is not null then '' (''|| uu.contact_number||'')'' end as reported_by, get_location_hierarchy(mm.location_migrated_from) as from_name, get_location_hierarchy(mm.location_migrated_to) as to_name,\nto_char(mm.reported_on,''DD/MM/YYYY'') as reported_on,\n/* mm.state,*/\n mm.gvk_call_status, to_char(mm.schedule_date,''DD/MM/YYYY'') as schedule_date , mm.call_attempt\nfrom migration_master_det mm\ninner join um_user uu on uu.id=mm.reported_by\nleft join imt_member im on im.id=mm.member_id\n)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nfq.member_name as \"Member Name\",\nfq.reported_by as \"Reported By\",\nfq.reported_on as \"Reported On\",\nfq.from_name as \"Migrated From\",\nfq.to_name as \"Migrated To\",\n/*\nfq.state as \"Migration Status\",\n*/\nfq.gvk_call_status as \"Call Status\",\nfq.schedule_date as \"Schedule Date\",\nfq.call_attempt as \"Call Attempt\"\nfrom final_Query fq", "queryId": 1358, "fieldName": "tableField", "queryUUID": "4c0b73a7-293b-422f-901e-b8df544539ca", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"index": 1, "isHidden": true, "fieldName": "from_date", "fieldType": "date", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"index": 2, "isHidden": true, "fieldName": "to_date", "fieldType": "date", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "location", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1361, "queryUUIDForParam": "aba76597-71cb-422f-a7b9-095cd80777e7"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'gvk_out_mig_pnd', 'e449d061-4e75-469d-b6fc-4ecf8a2af16a'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(578, 'IDSP2 Cluster Survey Member Wise Detail', NULL, true, 'DYNAMIC', NULL, '2020-04-09 20:50:51.312', 74841, '2020-04-09 18:05:44.504', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \nparameters as (\n\tselect distinct (case when #location_id# is null then 2\n\t\telse CAST(#location_id# AS INTEGER) end) as location_id,\n\t(case when #location_id# is null then ''null'' else CAST(''#demographic_location_id#'' AS TEXT) end) as demographic_group\n\t,(case when ''#from_date#'' = ''null'' then current_date else  to_date(''#from_date#'',''MM-DD-YYYY'') end) as from_date\n\t,(case when ''#to_date#'' = ''null'' then current_date  else to_date(''#to_date#'',''MM-DD-YYYY'') end) as to_date\n), loc_det as (\n    select vlc.child_id \n    from parameters p \n    cross join vw_location_closure_det_by_parent_location_depth vlc\n    where vlc.location_id=p.location_id and vlc.depth=1 \n    and (p.demographic_group=''null'' or vlc.child_demographic_type in \n    (select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)\n    )\n), idsp2_survey_det as (\n    select idsp2.* from idsp_2_member_screening_details idsp2\n    cross join parameters p\n    where idsp2.location_id in (select distinct child_id from loc_det) \n    and cast(idsp2.service_date as date) between p.from_date and p.to_date\n    and\n    case when #filter_type# = ''feaver'' then idsp2.symptoms ilike ''%FEVER%'' \n\twhen #filter_type# = ''cough'' then  idsp2.symptoms ilike ''%COUGH%''\n\twhen #filter_type# = ''breathlessness'' then idsp2.symptoms ilike ''%BREATHING_DIFFICULTY%''\n\tend \n    order by member_id \n    #limit_offset#\n), opd_detail as (\nselect idsp2.member_id,\ncase when roltd.id is not null then true else false end as sent_for_test\nfrom idsp2_survey_det idsp2\ninner join rch_opd_member_registration rom on rom.reference_id = idsp2.id\ninner join rch_opd_member_master opd_master on opd_master.opd_member_registration_id = rom.id\nleft join rch_opd_lab_test_details roltd\non roltd.lab_test_id = (select id from rch_opd_lab_test_master where name = ''COVID-19'') \nand roltd.opd_member_master_id = opd_master.id\nwhere reference_type = ''IDSP_REF_2''\n)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nconcat( im.first_name, '' '', im.middle_name, '' '', im.last_name, ''('' , im.unique_health_id , '')'', ''('' , im.family_id , '')'') as \"Member Details\", \nget_location_hierarchy(idsp2.location_id) as \"Location\",\ncase when idsp2.any_illness_or_discomfort = 1 then true else false end as \"Any illness or discomfort\",\ncase when idsp2.symptoms ilike ''%FEVER%'' then true else false end as \"fever\",\ncase when idsp2.symptoms ilike ''%COUGH%'' then true else false end as \"Cough\",\ncase when idsp2.symptoms ilike ''%BREATHING_DIFFICULTY%'' then true else false end as \"Breathing difficulty\",\ncase when (idsp2.symptoms ilike ''%FEVER%'' and (idsp2.symptoms ilike ''%COUGH%'' or idsp2.symptoms ilike ''%BREATHING_DIFFICULTY%'')) then true else false end as \"Fever with cough or breathing difficulty\",\ncase when (idsp2.symptoms ilike ''%FEVER%'' OR idsp2.symptoms ilike ''%COUGH%'' or idsp2.symptoms ilike ''%BREATHING_DIFFICULTY%'') then true else false end as \"Symptomic\",\ncase when (idsp2.treatment_started = 1) then true else false end as \"Treatment started\",\ncase when opd_detail.member_id is not null then true else false end as \"Examined by mo\",\ncase when sent_for_test then sent_for_test else false end as \"Sent for test\"\nfrom idsp2_survey_det idsp2\nleft join opd_detail on opd_detail.member_id = idsp2.member_id\nleft join imt_member im on im.id = idsp2.member_id", "queryId": 1575, "fieldName": "tableField", "queryUUID": "a11452d8-5311-412e-9b0e-5efc2687eb5a", "queryParams": "limit_offset,demographic_location_id,from_date,to_date,filter_type,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 1, "isHidden": true, "fieldName": "filter_type", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Filter", "isMandatory": true, "queryUUIDForParam": null, "requiredUptoLevel": 1}, {"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": false, "displayName": "Demographic Location", "isMandatory": true, "queryUUIDForParam": null, "requiredUptoLevel": 1}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Location", "isMandatory": true, "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1572, "queryUUIDForParam": "65ef2e45-ad72-4d3f-95da-ebea9c316996", "requiredUptoLevel": 1}, {"index": 3, "isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "From Date", "isMandatory": true, "queryForParam": "select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date", "queryIdForParam": 1573, "queryUUIDForParam": "934359ce-d929-47af-9b87-e3f2a2ffdad9", "requiredUptoLevel": 1}, {"index": 4, "isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "To Date", "isMandatory": true, "queryForParam": "select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date", "queryIdForParam": 1574, "queryUUIDForParam": "866ce901-a427-449f-88df-782ee456ff96", "requiredUptoLevel": 1}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'idsp2_memebr_wise', '1e64229b-fde4-4e4c-a550-5af40643ad09'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(642, 'Improved nutritional status on discharge from facility (CMTC/NRC Facility Monitoring - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 17:06:28.574', 60512, '2020-09-07 17:03:26.966', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","index":0,"queryIdForParam":1726,"queryUUIDForParam":"346837d5-674d-465b-af5d-56dc923006cb"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_discharge_status = ''SAM_TO_NORMAL''\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1727,"queryUUID":"7788aa18-4357-4e3f-9297-77c9191d90d7","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', 'cured_cmtc_fac', 'f47bbb98-8643-47bc-8f7f-43cfcafbd11e'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(324, 'Health Infrastructure (CMTC/NRC Facility Monitoring)', NULL, true, 'DYNAMIC', NULL, '2019-04-10 12:59:02.527', 60512, '2019-03-13 11:56:42.458', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen prefered_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n health_infra_ids as (\n\tselect id,name,location_id,address from health_infrastructure_details where location_id in (\n\t\tselect child_id from location_hierchy_closer_det where parent_id = #location_id#\n\t)\n\tand (health_infrastructure_details.is_cmtc = true or health_infrastructure_details.is_nrc=true)\n#limit_offset#\n),location_hierarchys as (\n\tselect health_infra_ids.id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_hierarchy\n\tfrom health_infra_ids\n\tinner join location_hierchy_closer_det lhcd on lhcd.child_id = health_infra_ids.location_id\n\tinner join location_master l2 on l2.id = lhcd.parent_id\n        cross join prefered_language\n\tgroup by health_infra_ids.id\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nhealth_infra_ids.name as \"Name\",\nlocation_hierarchys.location_hierarchy as \"Location\",\nhealth_infra_ids.address as \"Address\"\nfrom health_infra_ids\ninner join location_hierarchys on health_infra_ids.id = location_hierarchys.id", "queryId": 917, "fieldName": "tableField", "queryUUID": "f356e8f8-4168-4ad5-8c17-499ececa1504", "queryParams": "limit_offset,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 916, "queryUUIDForParam": "3cfc57f8-5be1-4f45-b2aa-f5415191b98b"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'hi_cmtc_facility', 'ae38626e-5167-4a85-a918-9d0b1780db7f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(641, 'Discharge from facility (CMTC/NRC Facility Monitoring - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 17:06:46.426', 60512, '2020-09-07 17:00:29.899', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1724,"queryUUIDForParam":"d9c906f1-9cea-4daa-b2b7-8c160a06dbe2"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_discharge_id is not null\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1725,"queryUUID":"05c2d888-7ab5-4cce-8a67-574b3825a8c3","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', 'discharge_cmtc_fac', 'fa72243d-4844-4fdb-bf8c-d19940365b97'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(595, 'RCH - ESTIMATION - Village Wise', NULL, true, 'DYNAMIC', NULL, '2020-05-08 15:56:57.050', 92665, '2020-05-06 10:58:09.771', 92665, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1605, "fieldName": "tableField", "queryUUID": "aafe7e12-5d5a-400b-b05b-f87addf91aec", "queryParams": "limit_offset"}], "fieldsContainer": []}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'rch_est_village_wise', '8b71cd12-4716-48ba-98e2-ca8bbdd8cee0'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(596, 'RCH - ESTIMATION - District Wise', NULL, true, 'DYNAMIC', NULL, '2020-05-08 15:59:55.970', 92665, '2020-05-06 11:33:30.152', 92665, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "", "queryId": 1606, "fieldName": "tableField", "queryUUID": "c2095ad2-c45b-4415-b40a-0abc4029bc5a", "queryParams": null}], "fieldsContainer": []}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'rch_est_district_wis', '70354bbe-a5d8-413f-ae50-2d22867e8317'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(133, 'Maternal Deaths in TeCHO+', NULL, true, 'DYNAMIC', NULL, '2020-03-25 11:01:39.648', 58981, '2019-01-23 14:46:06.820', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\n\nselect (case \n\nwhen report_preferred_language = ''EN'' then true  \n\nelse false \n\nend) as is_enlish \n\nfrom um_user where id = #loggedInUserId#),\n\n death as (\n\n\tselect rch_pregnancy_analytics_details.death_location_id as loc_id,\n\n\timt_member.family_id,\n\timt_member.id,\n\trch_pregnancy_analytics_details.pregnancy_reg_id,\n\n\timt_member.first_name || '' '' || imt_member.middle_name || '' '' || imt_member.last_name || '' ('' || imt_member.unique_health_id || '')'' || ''<br>'' || imt_member.family_id as member_det,\n\n\tto_char(imt_member.dob, ''DD/MM/YYYY'') as dob,\n\n\trch_pregnancy_analytics_details.maternal_death_type as death_type,\n\n\tto_char(rch_pregnancy_analytics_details.death_date, ''DD/MM/YYYY'') as death_date,\n\t(case when rch_pregnancy_analytics_details.registered_with_no_of_child is not null then rch_pregnancy_analytics_details.registered_with_no_of_child else 0 end +\ncase when rch_pregnancy_analytics_details.total_out_come is not null then rch_pregnancy_analytics_details.total_out_come else 0 end) as total_child\n\n\t\n\n\tfrom rch_pregnancy_analytics_details, location_hierchy_closer_det, imt_member\n\n\twhere location_hierchy_closer_det.parent_id = #location_id#\n\n\tand rch_pregnancy_analytics_details.death_location_id = location_hierchy_closer_det.child_id\n\n\tand imt_member.id = rch_pregnancy_analytics_details.member_id\n\n\tand rch_pregnancy_analytics_details.maternal_detah = true\n\n\tand rch_pregnancy_analytics_details.death_date between cast (\n\n\t\tcase\n\n\t\t\twhen ''#from_date#'' = ''null'' then ''01-01-1970''\n\n\t\t\telse ''#from_date#''\n\n\t\tend as date) and cast (\n\n\t\tcase\n\n\t\t\twhen ''#to_date#'' = ''null'' then ''01-01-1970''\n\n\t\t\telse ''#to_date#''\n\n\t\tend as date) + interval ''1 day''\n\n\torder by rch_pregnancy_analytics_details.death_date\n\n\t#limit_offset#\n\n),member_det_extra as(\nselect\n\tmd.id,\n\tconcat(f.address1, '','', f.address2) as address,\n\tf.area_id,\n\tf.caste,\n\twpd.delivery_place,\n\tdd.verbal_autopsy,\n\twpd.fbmdsr,\n\tto_char(dd.created_on, ''dd-MM-yyyy'') as data_entry_date,\n\tcase\n\t\twhen list_value.value is null then dd.other_death_reason\n\t\telse list_value.value end as death_deason,\n\t\tdd.place_of_death\n\tfrom\n\tdeath md \n\tinner join imt_family f on f.family_id = md.family_id\n\tinner join rch_member_death_deatil dd on dd.member_id = md.id\n\tleft join rch_wpd_mother_master wpd on\n\t\twpd.member_id = md.id and has_delivery_happened is true\n\t\tand wpd.pregnancy_reg_det_id = md.pregnancy_reg_id\n\tleft join listvalue_field_value_detail list_value on list_value.id\\:\\:text = dd.death_reason \n)\n,\ncaste_filter as (\n\tselect md.id,list.value as caste from member_det_extra md inner join listvalue_field_value_detail list on md.caste = cast(list.id as text)\n)\n, loc as (\n\n\tselect distinct loc_id from death\n\n), loc_det as (\n\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\n\tgroup by loc.loc_id\n\n), fhw_det as (\n\n\tselect loc.loc_id, \n\n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det\n\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n\n)\n\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\n\ndeath.member_det as \"Member Details\", \n\nloc_det.aoi as \"Location\",\n\ncaste_filter.caste as \"Caste\",\n\ndeath.dob as \"Date of Birth\",\n\ndeath.total_child as \"No of Live Children\",\n\ndeath.death_date as \"Death Date\", \n\ndeath.death_type as \"Death Type\", \n\nfhw_det.fhw as \"FHW Details\"\n\nfrom death \n\ninner join loc_det on death.loc_id = loc_det.loc_id \n\nleft join fhw_det on death.loc_id = fhw_det.loc_id\nleft join caste_filter on death.id = caste_filter.id\n;", "queryId": 188, "fieldName": "tableField", "queryUUID": "5ea70d5f-a052-4c08-861a-188894db21e2", "queryParams": "limit_offset,from_date,to_date,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 187, "queryUUIDForParam": "273d47cb-8329-4609-825c-b231b68ed4fc"}, {"index": 2, "isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date", "queryIdForParam": 190, "queryUUIDForParam": "204593bf-bf11-44b3-bbb4-9c172adf020d"}, {"index": 1, "isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date", "queryIdForParam": 189, "queryUUIDForParam": "9482d530-6b55-4262-ae03-9a9e26e1aa7f"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'maternal_death_techo', 'c56327f9-7495-42a6-89ee-e6867df0c1ca'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(227, 'FIPV 2 given (Child Health Services Provided During The Year (Monthly))', NULL, true, 'DYNAMIC', NULL, '2020-06-25 14:59:50.605', 1, '2019-02-14 16:21:01.356', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#\n)\n,parameter as (\n\tselect CAST(''#demographic_location_id#'' AS TEXT) as demographic_group\n)\n,child_det as (\n\tselect m.id, f.location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f\n    inner join parameter p on true = true\n\twhere l.child_id = c.f_ipv2_loc and m.id = c.member_id and f.family_id = m.family_id\n\tand l.parent_id = #location_id#\n\tand c.f_ipv2 is not null\n    and (p.demographic_group=''null'' or l.child_loc_demographic_type in \n\t\t( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))\n\tgroup by m.id, f.location_id, c.dob, f_ipv2\n\thaving cast(date_trunc(''month'', f_ipv2) as date)  between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 547, "fieldName": "tableField", "queryUUID": "c3efbbdd-ded8-4c85-b852-15e95e22ca37", "queryParams": "limit_offset,from_month_year,demographic_location_id,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "demographic_location_id", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 546, "queryUUIDForParam": "97c5521f-28bc-4183-b8f8-f979975eb19a"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 545, "queryUUIDForParam": "c4eb1256-fd53-4ed2-a99c-cd8d0d5215e0"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 544, "queryUUIDForParam": "19223b09-c5c1-4f93-b218-50a87915d4a4"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_fipv2_year_wise', '47957efa-2e0f-4b59-a322-c612fb77bbbc'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(510, 'OUT Migration LFU (Migration Effectiveness Report)', NULL, true, 'DYNAMIC', NULL, '2019-12-26 17:55:37.219', 69973, '2019-08-20 17:53:58.128', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with dates as(\nselect\nto_date(case when ''#from_date#'' =''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,\nto_date(case when ''#to_date#'' =''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') as to_date\n),\nmigration_master_det as (\nselect mm.* from (select * from migration_master, dates) mm \ninner join location_hierchy_closer_det depth_child on depth_child.child_id=mm.reported_location_id \ninner join location_hierchy_closer_det lhcd on (lhcd.child_id=depth_child.parent_id)\n where (case when (mm.from_date is not null and mm.to_date is not null) then\nreported_on between mm.from_date and mm.to_date else 1=1 end) and mm.state not in (''DUPLICATE'',''REVERTED'')\nand mm.type=''OUT'' and mm.state = ''LFU'' and lhcd.parent_id=#location_id# and lhcd.depth=1  #limit_offset#\n),\nfinal_Query as (\nselect concat(im.first_name,'' '', im.middle_name,'' '', im.last_name)|| case when im.unique_health_id is not null then '' (''|| im.unique_health_id||'')'' end\nas member_name, concat(uu.first_name,'' '', uu.middle_name,'' '', uu.last_name)|| case when uu.contact_number is not null then '' (''|| uu.contact_number||'')'' end as reported_by, to_char(mm.reported_on,''DD/MM/YYYY'') as reported_on, get_location_hierarchy(mm.location_migrated_from) as from_name, get_location_hierarchy(mm.location_migrated_to) as to_name\n/*, mm.family_migrated_from, mm.family_migrated_to*/\nfrom migration_master_det mm\ninner join um_user uu on uu.id=mm.reported_by\nleft join imt_member im on im.id=mm.member_id\n)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nfq.member_name as \"Member Name\",\nfq.reported_by as \"Reported By\",\nfq.reported_on as \"Reported On\",\nfq.from_name as \"Migrated From\",\nfq.to_name as \"Migrated To\"\n/*\n, fq.family_migrated_from as \"Family Migrated From\",\nfq.family_migrated_to as \"Family Migrated To\"\n*/\nfrom final_Query fq", "queryId": 1359, "fieldName": "tableField", "queryUUID": "0acbb067-d9f1-4b91-ac4f-5d401367abd4", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"index": 1, "isHidden": true, "fieldName": "from_date", "fieldType": "date", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"index": 2, "isHidden": true, "fieldName": "to_date", "fieldType": "date", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "location", "queryUUID": null, "displayName": "location_id", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1360, "queryUUIDForParam": "3edfca96-6e15-4b57-b9eb-382511c2d5ae"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'out_mig_lfu', 'd1b67d18-8030-46bd-b2a4-09e5fd10fd4b'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(266, '2 PNC(Delivery Services Provided During The Year)', NULL, true, 'DYNAMIC', NULL, '2020-06-01 13:19:22.313', 409, '2019-02-19 20:58:11.674', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 665, "fieldName": "tableField", "queryUUID": "f1680c71-0a98-4715-be81-40b6c6449d3b", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 1, "isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen prefered_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 664, "queryUUIDForParam": "a0ded52d-3db3-49c9-b5ee-ce5254d7fbd7"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mat_ser_year_pnc2', '275f3126-fc35-4017-b54d-a6c1ce1bebf3'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(511, 'GVK IN Migration Pending (Migration Effectiveness Report)', NULL, true, 'DYNAMIC', NULL, '2019-09-05 11:37:39.519', 69973, '2019-08-20 20:42:14.085', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with dates as(\nselect\nto_date(case when ''#from_date#'' =''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,\nto_date(case when ''#to_date#'' =''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') as to_date\n),\nmigration_master_det as (\nselect mm.* from (select * from migration_master, dates) mm \ninner join location_hierchy_closer_det depth_child on depth_child.child_id=mm.reported_location_id \ninner join location_hierchy_closer_det lhcd on (lhcd.child_id=depth_child.parent_id)\n where (case when (mm.from_date is not null and mm.to_date is not null) then\nreported_on between mm.from_date and mm.to_date else 1=1 end) and mm.state not in (''DUPLICATE'',''REVERTED'')\nand mm.type=''IN'' and mm.state in (''REPORTED'',''NOT_RESOLVED'') and migrated_location_not_known = true and lhcd.parent_id=#location_id# and lhcd.depth=1  #limit_offset#\n),\nfinal_Query as (\nselect concat(im.first_name,'' '', im.middle_name,'' '', im.last_name)|| case when im.unique_health_id is not null then '' (''|| im.unique_health_id||'')'' end\nas member_name, concat(uu.first_name,'' '', uu.middle_name,'' '', uu.last_name)|| case when uu.contact_number is not null then '' (''|| uu.contact_number||'')'' end as reported_by, get_location_hierarchy(mm.location_migrated_from) as from_name, get_location_hierarchy(mm.location_migrated_to) as to_name,\nto_char(mm.reported_on,''DD/MM/YYYY'') as reported_on,\n/* mm.state,*/\n mm.gvk_call_status, to_char(mm.schedule_date,''DD/MM/YYYY'') as schedule_date , mm.call_attempt\nfrom migration_master_det mm\ninner join um_user uu on uu.id=mm.reported_by\nleft join imt_member im on im.id=mm.member_id\n)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nfq.member_name as \"Member Name\",\nfq.reported_by as \"Reported By\",\nfq.reported_on as \"Reported On\",\nfq.from_name as \"Migrated From\",\nfq.to_name as \"Migrated To\",\n/*\nfq.state as \"Migration Status\",\n*/\nfq.gvk_call_status as \"Call Status\",\nfq.schedule_date as \"Schedule Date\",\nfq.call_attempt as \"Call Attempt\"\nfrom final_Query fq", "queryId": 1373, "fieldName": "tableField", "queryUUID": "85dd9244-3682-4d6e-b36f-4b83b0bf159e", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "date", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "date", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "location", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1372, "queryUUIDForParam": "29df166c-d1e1-48d9-b26b-97af225ede4d"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'gvk_out_pnd', '82a7d238-7b26-4bd1-bdd2-fc7575d05c64'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(513, 'Successful - Highrisk Followup Verification (GVK : Call effectiveness reports)', NULL, true, 'DYNAMIC', NULL, '2019-12-23 12:27:24.897', 60512, '2019-08-22 13:56:48.187', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1376, "fieldName": "tableField", "queryUUID": "73b89341-5f2a-4242-ba55-f4fedf9d9b65", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"index": 2, "isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date", "queryIdForParam": 1389, "queryUUIDForParam": "d19a1ad4-6677-4702-bdf4-302682f64e66"}, {"index": 1, "isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date", "queryIdForParam": 1388, "queryUUIDForParam": "57b2b0f3-351d-4bf8-8abc-b30c38bc778e"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Location", "isMandatory": false, "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1375, "queryUUIDForParam": "a7816706-550d-44bd-8fe3-b10ddc66dcbc", "requiredUptoLevel": "", "fetchAccordingToUserAoi": true}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'succ_hi_risk_fol_gvk', '68b90fda-32a4-4f0f-aa10-5a825137bc33'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(515, 'Successful - Beneficiary Service Verification (GVK : Call effectiveness reports)', NULL, true, 'DYNAMIC', NULL, '2020-02-24 15:44:50.204', 60512, '2019-08-22 17:20:56.760', 60512, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1383, "fieldName": "tableField", "queryUUID": "d14a1bec-13b6-40e2-854a-9ef661221f13", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"index": 2, "isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date", "queryIdForParam": 1409, "queryUUIDForParam": "1c11aaf9-2b0c-41c0-a9be-73f225f44b20"}, {"index": 1, "isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "From Date", "isMandatory": false, "queryForParam": "select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date", "queryIdForParam": 1408, "queryUUIDForParam": "02c50784-6cd3-4a08-9973-2c7bf814778c", "requiredUptoLevel": ""}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Location", "isMandatory": false, "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1382, "queryUUIDForParam": "304b6c67-b8cc-4ad9-b15b-f356d1748747", "requiredUptoLevel": "", "fetchAccordingToUserAoi": true}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'suc_ben_ser_verf', '7ae8f0c7-3f75-44af-be01-bda2a129c24f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(469, 'Rota Virus 2 (Child Health Services Provided during the year (Monthly))', NULL, true, 'DYNAMIC', NULL, '2020-06-25 15:32:11.931', 409, '2019-07-24 10:53:11.123', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1253, "fieldName": "tableField", "queryUUID": "46302327-c220-4b4c-bb6e-829cdfe1bcf5", "queryParams": ""}], "fieldsContainer": [{"fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "demographic_location_id", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year", "queryIdForParam": 1252, "queryUUIDForParam": "076f8d69-bf8f-4688-82a9-d193f8282a41"}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1250, "queryUUIDForParam": "8523a3a6-7d7a-48e0-8941-eb040a0efd3d"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year", "queryIdForParam": 1251, "queryUUIDForParam": "98ccbfbb-d201-43c9-9551-ab63adecfc59"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'rota2_ser_month', '1fef0e27-7a39-4448-b03e-247a6b76caed'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(516, 'Successful - Immunisation Verification (GVK : Call effectiveness reports)', NULL, true, 'DYNAMIC', NULL, '2019-12-23 12:22:57.469', 60512, '2019-08-26 11:40:01.902', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1387, "fieldName": "tableField", "queryUUID": "456f1d52-9987-4b37-bec8-af2bb43e3b88", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"index": 2, "isHidden": true, "fieldName": "to_date", "fieldType": "date", "queryUUID": null, "isUrlParam": true, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date", "queryIdForParam": 1386, "queryUUIDForParam": "6cdd5128-cff5-4038-9429-5d1aa39009b4"}, {"index": 1, "isHidden": true, "fieldName": "from_date", "fieldType": "date", "queryUUID": null, "isUrlParam": true, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date", "queryIdForParam": 1385, "queryUUIDForParam": "05b4d24b-781b-4273-90d2-fcf7f1ddd77b"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Location", "isMandatory": false, "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1384, "queryUUIDForParam": "af7b407d-80d6-4f73-8610-b95d9d056997", "requiredUptoLevel": "", "fetchAccordingToUserAoi": true}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'suc_imu_veri_gvk', '1bd77046-ec43-4a77-a22a-6dba97356ab4'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(120, 'High Risk Mothers(High Risk Mother-Present Pregnancy Complication)', NULL, true, 'DYNAMIC', NULL, '2020-03-04 18:16:54.649', 58981, '2019-01-22 18:19:19.614', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \n\t\twhen report_preferred_language = ''EN'' then true  \n\t\telse false \n\tend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\n,dates as (\n\tselect to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date\n\t,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date\n)\n, member_det as (\n\tselect r.member_id, r.native_location_id as loc_id,\n\tm.unique_health_id, m.family_id, \n\tm.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,\n\tto_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd,\n\tr.high_risk_reasons\n\tfrom rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, rch_pregnancy_registration_det p, dates\n\twhere r.member_id = m.id and r.native_location_id  = l.child_id and m.cur_preg_reg_det_id = p.id\n\tand r.reg_service_date between from_date and to_date\n\tand l.parent_id = #location_id#\n\tand r.high_risk_mother = true\n\t--and r.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')\n\t--and r.preg_reg_state in (''PENDING'',''PREGNANT'')\n\torder by p.lmp_date\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from member_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\",\nmember_det.high_risk_reasons as \"Highrisk Reasons\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 156, "fieldName": "tableField", "queryUUID": "6e4c748f-69aa-4e44-a1cd-97c6bd41ded1", "queryParams": "to_month,limit_offset,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 155, "queryUUIDForParam": "40b4df39-316c-436b-9e76-7776219b94bc"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'high_risk_mothers', 'd88bf8eb-6feb-4eb5-80da-2661ec8c6cbc'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(479, 'Techo & RCH Binding Report', NULL, true, 'DYNAMIC', NULL, '2019-09-05 14:53:51.466', 66522, '2019-08-05 11:03:30.668', 69973, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "/* select location.*,anmol.eligible_registration_id, im.unique_health_id  \t\tfrom anmol_master anmol \t\tinner join anmol_location_master location on anmol.location_id = location.location_id \t\tinner join imt_member im on anmol.member_id = im.id \t\twhere anmol.location_id is not null limit 100  */\n\nselect \nchild.child_registration_id,\nmaster.eligible_registration_id,\nmother.unique_health_id as MotherId,\nchild1.unique_health_id as ChildId\nfrom anmol_child_master child\ninner join anmol_master master on child.anmol_master_id = master.id\ninner join imt_member mother on mother.id = master.member_id\ninner join imt_member child1 on child1.id = child.child_id\nlimit 100", "queryId": 1274, "fieldName": "tableField", "queryUUID": "8dd83e64-99be-4478-b4f0-ba14f865618a", "queryParams": null}], "fieldsContainer": []}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'techo_rch_report', 'd5cce2ce-5753-4049-9ed3-85b9d4efb53f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(530, 'RCH Push report status', NULL, true, 'DYNAMIC', NULL, '2019-12-26 17:55:08.019', 74841, '2019-12-11 15:26:02.064', 74841, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "with data as (\n\t\tselect\n\t\t\tsource_type,\n\t\t\twsdl_code,\n\t\t\twsdl_code_count\n\t\tfrom\n\t\t\tanmol_api_status\n\t\twhere\ncreated_on = (select max(created_on) from anmol_api_status where cast(created_on as date) = to_date(''#filter_date#'', ''MM/DD/YYYY'')) \t\t\tand source_type = #source_type#\n\t)\n\t\t\n\tselect source_type as \"Source Type\", wsdl_code as \"Wsdl Code\", wsdl_code_count as \"Wsdl Code Count\" from data\n\tunion all\n\tselect ''<b>Total</b>'', null, sum(wsdl_code_count) from data", "queryId": 1452, "fieldName": "tableField", "queryUUID": "988a34ff-f997-4f40-9846-c6d83d4c4e1a", "queryParams": "filter_date,source_type"}], "fieldsContainer": [{"index": 0, "query": "with types as (\nselect ''''''MOTHER_ANC'''''' as key,''Mother Anc'' as value, 1 as ord\nunion\nselect ''''''MOTHER_PNC'''''' as key, ''Mother Pnc'' as value, 2 as ord\nunion\nselect ''''''CHILD_PNC'''''' as key, ''Child Pnc'' as value, 3 as ord\nunion\nselect ''''''CHILD_TRACKING'''''' as key,''Child Tracking'' as value, 4 as ord\nunion\nselect ''''''MOTHER_INFRANT'''''' as key, ''Mother Infrant'' as value, 5 as ord\nunion\nselect ''''''MOTHER_REGISTRATION'''''' as key, ''Mother Registration'' as value, 6 as ord\nunion\nselect ''''''CHILD_REGISTRATION'''''' as key,''Child Registration'' as value, 7 as ord\nunion\nselect ''''''MOTHER_DELIVERY'''''' as key, ''Mother Delivery'' as value, 8 as ord\nunion\nselect ''''''ELIGIBLE_COUPLE'''''' as key,''Eligible Couple'' as value, 9 as ord\nunion\nselect ''''''MOTHER_MEDICAL'''''' as key,''Mother Medical'' as value, 10 as ord\nunion\nselect ''''''CHILD_MEDICAL'''''' as key,''Child Medical'' as value, 11 as ord\nunion\nselect ''''''ELIGIBLE_COUPLE_TRACKING'''''' as key,''Eligible Couple Tracking'' as value, 12 as ord\n)select * from types order by ord", "isQuery": true, "queryId": 1451, "fieldName": "source_type", "fieldType": "comboForReport", "queryUUID": "4ec04ddc-33d0-4cf9-a1f5-a76eba2f8d98", "displayName": "Source Type", "isMandatory": true, "queryParams": null, "queryForParam": "", "queryIdForParam": "", "availableOptions": [], "queryUUIDForParam": null, "requiredUptoLevel": 1}, {"fieldName": "filter_date", "fieldType": "date", "queryUUID": null, "displayName": "Date", "isMandatory": true, "queryUUIDForParam": null, "requiredUptoLevel": 1}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'rch_push_report_stus', '2883d1cb-feba-4cbe-a1d5-e95a0e1856f4'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(134, 'Report for selection', NULL, true, 'DYNAMIC', NULL, '2019-03-11 12:55:33.030', 57698, '2019-01-25 18:32:21.994', 1, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "#query#", "queryId": 208, "fieldName": "tableField", "queryUUID": "d91d249f-c8e1-4397-a84d-6ce6eb33eb48", "queryParams": "query"}], "fieldsContainer": [{"index": 0, "fieldName": "query", "fieldType": "text", "queryUUID": null, "displayName": "Query", "queryUUIDForParam": null}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'dummy_report', 'fef625c9-60f2-46a9-863c-50f83f87ffab'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(253, 'Status of treatment (as recorded by call center) D (GVK EMRI - Non Emergency High Risk - Report 1)', NULL, true, 'DYNAMIC', NULL, '2019-06-26 16:52:54.164', 63746, '2019-02-19 15:08:14.249', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 637, "fieldName": "tableField", "queryUUID": "e7f44126-dd37-4ef8-a580-0113e862e211", "queryParams": "limit_offset,from_date,to_date,high_risk_condition,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "high_risk_condition", "fieldType": "text", "queryUUID": null, "displayName": "High Risk Condition", "queryUUIDForParam": null}, {"index": 1, "isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"index": 2, "isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 3, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "isMandatory": false, "queryForParam": "select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\nwhere l1.id = #location_id#", "queryIdForParam": 729, "queryUUIDForParam": "7c1f4303-cecd-47ff-b14e-86998540f467", "requiredUptoLevel": ""}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'gvk_treatment_status', '816a7f9b-dc6f-4c2c-82d0-ec25791f4b95'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(255, 'TT1 given(ANC Services Provided During The Year)', NULL, true, 'DYNAMIC', NULL, '2020-02-28 15:39:19.086', 409, '2019-02-19 19:22:01.871', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--TT1 given(ANC Services Provided During The Year)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \ndates as (\nSELECT to_date(concat(''04-01-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 1)),''MM-DD-YYYY'') as from_date\n,to_date(concat(''03-31-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 2)),''MM-DD-YYYY'') as to_date\n),member_det as (\n\tselect r.member_id, r.tt1_location_id as loc_id,\n\tm.unique_health_id, m.family_id, \n\tm.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,\n\tto_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd\n\t,to_char(r.tt1_given,''DD/MM/YYYY'') as tt1_given\n\t\n\tfrom rch_pregnancy_analytics_details r\n\t, location_hierchy_closer_det l\n\t, imt_member m\n\t, rch_pregnancy_registration_det p\n\t,dates\n\t\n\twhere r.member_id = m.id and r.tt1_location_id  = l.child_id and r.pregnancy_reg_id = p.id\n\tand l.parent_id = #location_id#\n\tand r.tt1_given between dates.from_date and dates.to_date\n\torder by r.tt1_given\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from member_det\n), loc_det as (\n\tselect loc.loc_id, \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2,prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.tt1_given as \"TT1 given\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 642, "fieldName": "tableField", "queryUUID": "63878ab7-e075-4836-87d6-86c1af882290", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "isMandatory": false, "queryUUIDForParam": null, "requiredUptoLevel": ""}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen prefered_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 641, "queryUUIDForParam": "2a4797bd-57a6-4f14-928b-c93d7977624c"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mat_ser_year_tt1', '12c192f8-7dc8-409b-baf2-5c2aee7d37b2'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(258, '1 ANC(ANC Services Provided During The Year)', NULL, true, 'DYNAMIC', NULL, '2020-01-23 19:12:18.701', 409, '2019-02-19 20:04:03.412', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 648, "fieldName": "tableField", "queryUUID": "b108fe5f-eb8e-4d31-99bb-5b243b2846d6", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen prefered_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 647, "queryUUIDForParam": "40f7b479-43ff-42f1-b8fd-f067ea5b7ebc"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mat_ser_year_anc1', '585e3e8c-3da7-4e0f-abeb-d8a52aad4c75'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(265, '1 PNC(Delivery Services Provided During The Year)', NULL, true, 'DYNAMIC', NULL, '2020-06-01 13:19:00.540', 409, '2019-02-19 20:57:38.099', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--1 PNC(Delivery Services Provided During The Year)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \ndates as (\nSELECT to_date(concat(''04-01-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 1)),''MM-DD-YYYY'') as from_date\n,to_date(concat(''03-31-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 2)),''MM-DD-YYYY'') as to_date\n),member_det as (\n\tselect r.member_id, r.pnc1_location_id as loc_id,\n\tm.unique_health_id, m.family_id, \n\tm.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,\n\tto_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd\n\t,to_char(r.pnc1,''DD/MM/YYYY'') as pnc_date\n\t\n\tfrom rch_pregnancy_analytics_details r\n\t, location_hierchy_closer_det l\n\t, imt_member m\n\t, rch_pregnancy_registration_det p\n\t,dates\n\t\n\twhere r.member_id = m.id and r.pnc1_location_id  = l.child_id and r.pregnancy_reg_id = p.id\n\tand l.parent_id = #location_id#\n\tand r.pnc1 between dates.from_date and dates.to_date\n\torder by r.pnc1\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from member_det\n), loc_det as (\n\tselect loc.loc_id,  \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.pnc_date as \"Pnc date\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 663, "fieldName": "tableField", "queryUUID": "c665bb5e-74d1-48d2-84cd-b4aed8be8434", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen prefered_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 662, "queryUUIDForParam": "42bdc7cd-f64b-4ed9-94af-193fbfd122a7"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mat_ser_year_pnc1', 'a6807bd2-49af-4325-8121-9e896ad1c564'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(546, 'Remove last method of contraception', NULL, true, 'DYNAMIC', NULL, '2020-02-03 14:59:25.457', 409, '2020-01-30 19:22:04.994', 409, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "with insert_change_log_detail as (\ninsert into support_change_request_log(member_id,change_type,other_detail,reason_for_change,created_on)\nselect id as member_id,''REMOVE_LAST_METHOD_OF_CONTRACEPTION'',null,(case when ''null'' = ''#reason_for_change#'' then null else  ''#reason_for_change#'' end ),created_on from imt_member \nwhere unique_health_id = ''#unique_health_id#'' and last_method_of_contraception is not null\nreturning id\n),update_imt_member as (\nupdate imt_member set last_method_of_contraception = null,modified_on = now() where  unique_health_id = ''#unique_health_id#'' and last_method_of_contraception is not null\nreturning id)\nselect cast(''Changes done'' as text) result from update_imt_member;", "queryId": 1508, "fieldName": "tableField", "queryUUID": "1843afde-abdf-40e9-80bf-467edb0fbc8b", "queryParams": "reason_for_change,unique_health_id"}], "fieldsContainer": [{"fieldName": "unique_health_id", "fieldType": "text", "queryUUID": null, "displayName": "Unique health id", "isMandatory": true, "queryUUIDForParam": null, "requiredUptoLevel": 1}, {"fieldName": "reason_for_change", "fieldType": "text", "queryUUID": null, "displayName": "Reson", "isMandatory": true, "queryUUIDForParam": null, "requiredUptoLevel": 1}]}, "isFilterOpen": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": false}', 'remove_fm_sterilizat', 'efe508bd-01bc-4468-acb6-4f9a5816d475'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(548, 'User Wise Task Complete Rate', NULL, true, 'DYNAMIC', NULL, '2020-02-19 16:01:44.818', 74841, '2020-02-10 17:40:05.041', 74840, '{"layout": "dynamicReportWithPagination", "htmlData": true, "containers": {"tableContainer": [{"query": "WITH dates AS ( SELECT to_date( CASE WHEN ''#from_date#'' = ''null'' THEN NULL ELSE ''#from_date#'' END, ''MM-DD-YYYY'') AS from_date, to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date ) ,user_wise_count AS ( SELECT ul.user_id, string_agg(distinct get_location_hierarchy(ul.location_id),''\n'') as location_name, sum(ul.missed_count) as missed_count, sum(ul.pending_count) as pending_count, sum(ul.on_completed_count) as on_completed_count, sum(ul.after_due_completed_count) as after_due_completed_count, sum(ul.due_pending) as due_pending FROM location_wise_task_complition_rate_analysis ul, dates,location_hierchy_closer_det lh WHERE ul.month_year BETWEEN dates.from_date AND dates.to_date AND lh.parent_id = #location_id# and lh.child_id = ul.location_id AND ( case when #notification_type# = ''-1'' then ul.notification_type_id in (select id from notification_type_master nt where role_id = #role_id#) else ul.notification_type_id = #notification_type# end) GROUP BY lh.parent_id, ul.user_id order by lh.parent_id, ul.user_id #limit_offset# ), result_set as (select distinct concat_ws('' '', u.first_name, u.last_name, ''('', u.user_name, '')'') \"User Detail\", string_agg(distinct uwc.location_name, ''\n'') as \"hidden_Location\", coalesce(SUM(coalesce(uwc.on_completed_count, 0) + coalesce(uwc.after_due_completed_count, 0) + coalesce(uwc.pending_count, 0) + coalesce(uwc.due_pending, 0) + coalesce(uwc.missed_count, 0)), 0) as \"Total task\", coalesce(SUM(uwc.missed_count), 0) as \"Missed\", COALESCE(round(((SUM(coalesce(uwc.missed_count, 0)) * 100.0)/nullif((coalesce(SUM(uwc.missed_count), 0) + coalesce(SUM(uwc.on_completed_count), 0) + coalesce(SUM(uwc.after_due_completed_count), 0)), 0)), 2), 0) as \"percent_col_1\", coalesce(SUM(uwc.on_completed_count), 0) as \"On time\", COALESCE(round(((SUM(uwc.on_completed_count) * 100.0)/nullif(((coalesce(SUM(uwc.missed_count), 0) + coalesce(SUM(uwc.on_completed_count), 0) + coalesce(SUM(uwc.after_due_completed_count), 0))), 0)), 2), 0) as \"percent_col_2\", coalesce(SUM(uwc.after_due_completed_count), 0) as \"After Due\", COALESCE(round(((sum(uwc.after_due_completed_count) * 100.0) /nullif(((coalesce(SUM(uwc.missed_count), 0) + coalesce(SUM(uwc.on_completed_count), 0) + coalesce(SUM(uwc.after_due_completed_count), 0))), 0)), 2), 0) as \"percent_col_3\", coalesce((coalesce(sum(uwc.on_completed_count), 0) + coalesce(sum(uwc.after_due_completed_count), 0)), 0) as \"Total\", COALESCE(round((((coalesce(sum(uwc.on_completed_count), 0) + coalesce(sum(uwc.after_due_completed_count), 0)) * 100.0) /nullif((coalesce(sum(uwc.on_completed_count), 0) + coalesce(sum(uwc.after_due_completed_count), 0) + coalesce(sum(uwc.missed_count), 0)), 0)), 2), 0) as \"percent_col_4\", coalesce(SUM(uwc.pending_count), 0) as \"On time pending\", coalesce(SUM(uwc.due_pending), 0) as \"Due pending\", coalesce(coalesce(SUM(uwc.due_pending), 0) + coalesce(SUM(uwc.pending_count), 0), 0) as \"Tota pending\", COALESCE(round((((coalesce(sum(uwc.pending_count), 0) + coalesce(sum(uwc.due_pending), 0)) * 100.0) / NULLIF((coalesce(sum(uwc.on_completed_count), 0) + coalesce(sum(uwc.after_due_completed_count), 0) + coalesce(sum(uwc.pending_count), 0) + coalesce(sum(uwc.due_pending), 0) + coalesce(sum(uwc.missed_count), 0)), 0)), 2), 0) as \"percent_col_5\" from user_wise_count uwc inner join um_user u on u.id = uwc.user_id group by u.first_name, u.last_name, u.user_name) select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\", rs.* from result_set rs", "queryId": 1518, "htmlData": "#table#\n<br/>\n<b>Note :</b><br/>\n<b>User Detail :</b> User Details <br/>\n<b>Total task : </b> Sum of Completed and Pending and Missed Task<br/>\n<b>Missed :</b>Task that has been expierd without complete<br/>\n<b>Missed % :</b>Missed / (Missed + On time completed + After due completed) Task<br/>\n<b>On time :</b> Total task that has  been completed before overdue <br/>\n<b>On time% :</b>On time / (Missed + On Completed + After Due Completed) Task<br/>\n<b>After Due :</b> Total task completed after overdue <br/>\n<b>After Due % :</b>After Due / (Missed + On Completed + After Due Completed) Task<br/>\n<b>Total :</b> Total On time +  After Due Task<br/>\n<b>Completed % :</b>Total On time +  After Due  / (Missed + On Completed + After Due Completed) Task<br/>\n<b>On time pending :</b> Total task that is being pending but not overdue<br/>\n<b>Due pending :</b> Total task that is benig pending and overdue<br/>\n<b>Total pending :</b> Total On Time Pending + Due Pending Task<br/>\n<b>Pending % :</b> Total  pending / Total task<br/>", "fieldName": "tableField", "queryUUID": "b72ec66d-147b-4545-925b-6ab5f382f642", "dataColspan": "<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th colspan=\"6\" style=\"text-align:center\">Task Completed</th>\n<th colspan=\"4\" style=\"text-align:center\">Pending</th>", "queryParams": "notification_type,limit_offset,from_date,to_date,role_id,location_id"}], "fieldsContainer": [{"index": 2, "isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "To Date", "isMandatory": true, "queryForParam": "select to_char(cast(''#to_date#'' as date),''MM/YYYY'') as to_date", "queryIdForParam": 1515, "queryUUIDForParam": "25c599c6-c5ac-43f7-8f15-45c1933d43b6", "requiredUptoLevel": 1}, {"isHidden": true, "fieldName": "role_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Role", "isMandatory": true, "queryForParam": "select name as role_id from um_role_master where state = ''ACTIVE'' and id = #role_id#;", "queryIdForParam": 1517, "queryUUIDForParam": "1ee877ec-31a5-4d93-971e-220c635c2d16", "requiredUptoLevel": 1}, {"isHidden": true, "fieldName": "notification_type", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Notification Type", "isMandatory": true, "queryForParam": "select case when  #notification_type# = -1 then ''All'' end  as notification_type  \nunion \nselect \"name\" as notification_type from notification_type_master where id = #notification_type#", "queryIdForParam": 1516, "queryUUIDForParam": "e61f9b0c-51a1-4f53-aff5-e6d9a8aa1510", "requiredUptoLevel": 1}, {"index": 1, "isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "From Date", "isMandatory": true, "queryForParam": "select to_char(cast(''#from_date#'' as date),''MM/YYYY'') as from_date", "queryIdForParam": 1514, "queryUUIDForParam": "3897f416-538d-4c02-8943-2c6e0874bda7", "requiredUptoLevel": 1}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Location", "isMandatory": true, "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' > '' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1513, "queryUUIDForParam": "0caf0ff6-50ac-4796-b2c1-d1dd282caa11", "requiredUptoLevel": 1}]}, "colspanData": true, "isFilterOpen": false, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ut_complete_rate_new', '67ebff80-9a3e-4a18-bed3-bd30416f1115'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(545, 'Eligible for Services under PMSMA during this month(PMSMA Services Statistics Report)', NULL, true, 'DYNAMIC', NULL, '2020-10-12 18:06:01.842', 74840, '2020-01-28 14:27:13.586', 409, '{"layout":"dynamicReport1","containers":{"tableContainer":[{"query":"-- Eligible For Services Under PMSMA During This Month(PMSMA Services Statistics Report)\n\nwith location_det as (\n    select lm.id,lm.english_name as name,lm.location_code from location_hierchy_closer_det lh1,location_master lm\n    where lh1.parent_id = #location_id# and lm.id = lh1.child_id\n)\n,dates as (\n    select date_trunc(''month'',to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'')) from_date,\n    date_trunc(''month'',to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'')) to_date\n\n)\n,report_det as (\n\tselect    \n    get_location_hierarchy(pmsma.location_id) as location_name        \n    -- ,pmsma.pregnancy_reg_id\n    ,concat(im.first_name,'' '',im.middle_name,'' '',im.last_name, ''('',im.unique_health_id ,'')'') as person_name\n    ,to_char(preg.lmp_date, ''DD-MM-YYYY'') as lmp_date\n    ,to_char(preg.edd, ''DD-MM-YYYY'') as edd_date   \n    from\n\tpmsma_eligilible_pw_for_service pmsma inner join dates on pmsma.month_year between dates.from_date and dates.to_date\n    inner join rch_pregnancy_registration_det preg on preg.id = pmsma.pregnancy_reg_id\n\tinner join imt_member im on pmsma.member_id = im.id\n\tinner join location_det det on pmsma.location_id = det.id\n)\nselect \nrow_number() over() as \"Sr. no\"\n,location_name as \"Location Name\"\n-- ,pregnancy_reg_id as \"Pregnancy Registration Id\"\n,person_name as \"Name of Person\"\n,lmp_date as \"LMP Date\"\n,edd_date as \"EDD Date\"\nfrom \nreport_det","queryId":1505,"fieldName":"tableField","queryUUID":"a6014a8c-6d6b-4d87-a207-983dcdaa0ad5","queryParams":"from_month,location_id"}],"fieldsContainer":[{"index":1,"isHidden":true,"fieldName":"from_month","fieldType":"text","queryUUID":null,"displayName":"From Month","queryForParam":"","queryIdForParam":"","queryUUIDForParam":null},{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","isMandatory":false,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1507,"queryUUIDForParam":"a36f211c-189f-44ed-a069-b1a6f145eeda","requiredUptoLevel":""}]},"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'eligible_couple_pmsm', '1af4ec62-d14a-4e44-b021-1ecc42a5c10b'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(636, 'Both (CMTC/NRC Facility Monitoring - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 17:08:15.000', 60512, '2020-09-07 16:49:30.430', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1714,"queryUUIDForParam":"25df1f53-e9bc-47ee-b652-2b89ce373a90"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_admission_sd_score in (''SD4'',''SD3'')\n    and fsam_admission_muac < 11.5\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1715,"queryUUID":"fd8562ec-b29b-4ff5-be32-a4ae0b5b4f9d","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', 'both_cmtc_fac', '58d9f112-6b59-4491-9bb5-1bebf11100f0'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(268, '4 PNC(Delivery Services Provided During The Year)', NULL, true, 'DYNAMIC', NULL, '2020-06-01 13:21:42.028', 409, '2019-02-19 20:58:29.646', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--4 PNC(Delivery Services Provided During The Year)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \ndates as (\nSELECT to_date(concat(''04-01-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 1)),''MM-DD-YYYY'') as from_date\n,to_date(concat(''03-31-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 2)),''MM-DD-YYYY'') as to_date\n),member_det as (\n\tselect r.member_id, r.pnc4_location_id as loc_id,\n\tm.unique_health_id, m.family_id, \n\tm.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,\n\tto_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd\n\t,to_char(r.pnc4,''DD/MM/YYYY'') as pnc_date\n\t\n\tfrom rch_pregnancy_analytics_details r\n\t, location_hierchy_closer_det l\n\t, imt_member m\n\t, rch_pregnancy_registration_det p\n\t,dates\n\t\n\twhere r.member_id = m.id and r.pnc4_location_id  = l.child_id and r.pregnancy_reg_id = p.id\n\tand l.parent_id = #location_id#\n\tand r.pnc4 between dates.from_date and dates.to_date\n\torder by r.pnc4\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from member_det\n), loc_det as (\n\tselect loc.loc_id,  \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.pnc_date as \"Pnc date\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 669, "fieldName": "tableField", "queryUUID": "ea0386b6-8d61-45e2-be1f-44470be12b21", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen prefered_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 668, "queryUUIDForParam": "b4feab3d-8484-4387-840f-92031a61913d"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mat_ser_year_pnc4', '0953fd53-a623-4dd1-8f73-eaabd43ca7a7'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(377, 'TT1 given(ANC Services Provided During The Year) (Monthly)', NULL, true, 'DYNAMIC', NULL, '2020-02-28 15:44:14.916', 60512, '2019-04-22 15:46:29.520', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--TT1 given(ANC Services Provided During The Year)\nwith parameters as (\nselect CAST(#location_id# AS INTEGER) as location_id,\nto_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date,\nto_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date,\nCAST(''#demographic_location_id#'' AS TEXT) as demographic_group,\n(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language\n),member_det as (\n\tselect r.member_id, r.tt1_location_id as loc_id,\n\tr.unique_health_id, r.family_id, \n\tr.member_name as name,\n\tto_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd\n\t,to_char(r.tt1_given,''DD/MM/YYYY'') as tt1_given\n\t\n\tfrom rch_pregnancy_analytics_details r\n\t, location_hierchy_closer_det l\n\t, parameters p\n\twhere r.tt1_location_id  = l.child_id \n\tand l.parent_id = p.location_id\n\tand r.tt1_given between p.from_date and p.to_date\n\tand (p.demographic_group=''null'' or l.child_loc_demographic_type in \n\t\t( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))\n\torder by r.tt1_given\n\t#limit_offset#\n), loc_det as (\n\tselect loc.loc_id, \nstring_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p \n\twhere lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',\n\tcase when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, (select distinct loc_id from member_det)loc,location_hierchy_closer_det\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.tt1_given as \"TT1 given\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 1017, "fieldName": "tableField", "queryUUID": "3f05fe14-6e46-4815-b139-ed167803efdb", "queryParams": "to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"index": 1, "isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryUUIDForParam": null}, {"index": 2, "isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1016, "queryUUIDForParam": "08691ff4-b6ac-466d-8d95-9fd4867489fa"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer", "isBackButtonRequired": false}', 'tt1_maternal_monthly', '4101dfe7-3f05-436f-877b-921974fba750'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(553, 'school details report Location wise (school details Report)', NULL, true, 'DYNAMIC', NULL, '2020-02-28 19:41:51.560', 74840, '2020-02-28 15:40:13.634', 74840, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "", "queryId": 1525, "fieldName": "tableField", "queryUUID": "f759cc83-5e59-4292-9fd3-7139e822ef6e", "queryParams": "school_type_flag,loggedInUserId,location_id"}], "fieldsContainer": [{"fieldName": "school_type_flag", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "School type Flag", "queryUUIDForParam": null}, {"fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen prefered_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1524, "queryUUIDForParam": "7937eb0c-45b1-4f96-b881-08ea2d2efe81"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'school_det_loc_wise', '1a615e2a-6d31-4eb0-a3c9-3e1355c06f16'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(442, 'Count Member By Date Of Birth (Dist & Copo)', NULL, true, 'DYNAMIC', NULL, '2019-06-19 13:52:14.060', 66522, '2019-06-19 12:00:30.730', 66522, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "with  countByDist as(\nselect count(1) as total ,lh.parent_id as district_id from imt_member im \ninner join imt_family imf on imf.family_id = im.family_id\ninner join location_hierchy_closer_det lh  on imf.location_id = lh.child_id and parent_loc_type in (''D'',''C'')\nwhere im.dob is not null and age(im.dob) >= interval ''1 year'' and age(im.dob) < interval ''19 year''\nand im.basic_state in (''VERIFIED'',''TEMPORARY'',''NEW'')\ngroup by lh.parent_id)\nselect lm.name,cd.total from countByDist cd\ninner join location_master lm on cd.district_id = lm.id", "queryId": 1173, "fieldName": "tableField", "queryUUID": "8db3d8be-b073-48db-9c7c-5a0a1aa25b20", "queryParams": null}], "fieldsContainer": []}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'count_member_by_dob', '4e9370ff-1aa1-4426-be6b-8e4c4eec2c4a'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(554, 'CHO Presence', NULL, true, 'DYNAMIC', NULL, '2020-03-23 12:27:54.644', 74841, '2020-03-04 15:15:28.587', 74841, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "with dates as (\n    select\n        to_date( case when ''#from_date#'' = ''null'' then null else  ''#from_date#'' end, ''MM/DD/YYYY'') as from_date),\nloc_det AS (\n    SELECT\n        lhcd.child_id\n    FROM\n        location_hierchy_closer_det lhcd\n    WHERE\n        lhcd.parent_id = #location_id#\n        AND lhcd.depth = 1\n), hwc_details as (\n\tselect lh.parent_id, count(1) as number_of_hwc from location_hierchy_closer_det lh\n\tleft join health_infrastructure_details hid on lh.child_id = hid.location_id\n\twhere is_hwc is true and lh.parent_id IN (select child_id from loc_det) and hid.location_id is not null\n\tgroup by lh.parent_id\n),\ndaily_login_report as (\nselect\n\tlh.parent_id,\n\tcount(distinct ulc.user_id) as number_of_cho,\n\tcount(distinct ulc.user_id) filter(where uai.attendance_date is not null) as present_user\nfrom\num_user_location_change_detail ulc\ninner join dates on\n\ttrue\nleft join um_user_attendance_info uai on\n\tulc.user_id = uai.user_id\n\tand uai.attendance_date = dates.from_date\ninner join location_hierchy_closer_det lh on lh.child_id = ulc.location_id\nwhere\n\tulc.role_id in (179) and lh.parent_id IN (select child_id from loc_det)\n\tand date(ulc.activation_date) <= dates.from_date\n\tand (ulc.deactivation_date is null\n\tor date(ulc.deactivation_date) > dates.from_date)\ngroup by\n\tlh.parent_id, ulc.role_id \n)\nselect\n\tlm.id as \"hidden_location_id\",\n    lm.english_name AS \"Location\",\n    COALESCE(hd.number_of_hwc, 0) as \"No of HWCs\",\n    COALESCE(dlr.number_of_cho, 0) as \"No of CHOs\",\n    COALESCE(dlr.present_user, 0) as \"No Present\",\n    COALESCE((dlr.number_of_cho - dlr.present_user), 0) as \"No Absent\"\nfrom loc_det ld\nleft join hwc_details hd on hd.parent_id = ld.child_id\nleft join daily_login_report dlr on dlr.parent_id = ld.child_id\nleft join location_master lm   \n    on lm.id = ld.child_id\nunion all\nselect\n\t#location_id#,\n\t''<b>Total</b>'',\n    COALESCE(sum(hd.number_of_hwc), 0),\n    COALESCE(sum(dlr.number_of_cho), 0),\n    COALESCE(sum(dlr.present_user), 0),\n    COALESCE((sum(dlr.number_of_cho) - sum(dlr.present_user)), 0)\nfrom loc_det ld\nleft join hwc_details hd on hd.parent_id = ld.child_id\nleft join daily_login_report dlr on dlr.parent_id = ld.child_id", "queryId": 1526, "fieldName": "tableField", "queryUUID": "7991e16a-6445-4e8c-988c-512fb7163188", "queryParams": "from_date,location_id"}], "fieldsContainer": [{"fieldName": "location_id", "fieldType": "location", "queryUUID": null, "displayName": "Location", "isMandatory": true, "fetchUptoLevel": "6", "queryUUIDForParam": null, "requiredUptoLevel": 1, "fetchAccordingToUserAoi": true}, {"index": 1, "fieldName": "from_date", "fieldType": "date", "queryUUID": null, "displayName": "Date", "isMandatory": true, "queryUUIDForParam": null, "requiredUptoLevel": 1}], "tableFieldContainer": [{"index": 0, "isLink": true, "fieldName": "No Present", "customParam": "", "customState": "techo.report.view({\"id\":555,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_date\":\"$from_date$\"}})", "locationLevelForLink": "2"}, {"index": 1, "isLink": true, "fieldName": "No Absent", "customParam": "", "customState": "techo.report.view({\"id\":556,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_date\":\"$from_date$\"}})", "locationLevelForLink": "2"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'cho_presence', '0aa3340e-e025-440d-a75e-a495c03bf904'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(262, 'No of del(Delivery Services Provided During The Year)', NULL, true, 'DYNAMIC', NULL, '2020-11-20 18:00:49.398', 409, '2019-02-19 20:51:22.187', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"--No of del(Delivery Services Provided During The Year)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \ndates as (\nSELECT to_date(concat(''04-01-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 1)),''MM-DD-YYYY'') as from_date\n,to_date(concat(''03-31-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 2)),''MM-DD-YYYY'') as to_date\n),member_det as (\n\tselect r.member_id, r.delivery_location_id as loc_id,\n\tm.unique_health_id, m.family_id, \n\tm.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,\n\tto_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.date_of_delivery, ''DD/MM/YYYY'') as dod\n\t,to_char(r.delivery_reg_date,''DD/MM/YYYY'') as reg_date\n\t\n\tfrom rch_pregnancy_analytics_details r\n\t, location_hierchy_closer_det l\n\t, imt_member m\n\t, rch_pregnancy_registration_det p\n\t,dates\n\t\n\twhere r.member_id = m.id and r.delivery_location_id  = l.child_id and r.pregnancy_reg_id = p.id\n\tand r.delivery_outcome in (''LBIRTH'',''SBIRTH'')\n\tand l.parent_id = #location_id#\n\tand r.delivery_reg_date between dates.from_date and dates.to_date\n        and delivery_out_of_state_govt is false and delivery_out_of_state_pvt is false\n\torder by r.delivery_reg_date\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from member_det\n), loc_det as (\n\tselect loc.loc_id,  \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.reg_date as \"Registration date\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.dod as \"Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;","queryId":656,"fieldName":"tableField","queryUUID":"9fe35a42-183a-4fbb-9da1-138ede5c457b","queryParams":"limit_offset,financial_year,loggedInUserId,location_id"}],"fieldsContainer":[{"index":1,"isHidden":true,"fieldName":"financial_year","fieldType":"text","queryUUID":null,"displayName":"Year","queryUUIDForParam":null},{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen prefered_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":655,"queryUUIDForParam":"7aa81b59-6bca-4d50-a38c-c21c734b5cba"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'mat_ser_year_no_del', 'a84e06ac-4702-415c-9c86-d62e0edf1ab2'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(555, 'Present CHO', NULL, true, 'DYNAMIC', NULL, '2020-04-09 17:43:57.931', 74841, '2020-03-04 15:19:35.806', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with dates as (\nselect\n\tto_date( case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM/DD/YYYY'') as from_date),\ndaily_login_report as (\nselect\n\tlh.parent_id,\n\tuai.user_id,\n\tmin(uai.start_time) as start_time,\n\tmax(uai.end_time) as end_time\nfrom\n\tum_user_attendance_info uai\ninner join dates on\n\ttrue\ninner join um_user_location_change_detail ulc on\n\tulc.user_id = uai.user_id\n\tand date(ulc.activation_date) <= dates.from_date\n\tand (ulc.deactivation_date is null\n\tor date(ulc.deactivation_date) > dates.from_date)\ninner join location_hierchy_closer_det lh on lh.child_id = ulc.location_id\nwhere\n\tulc.role_id in (179) and lh.parent_id = #location_id# and uai.attendance_date = dates.from_date\ngroup by lh.parent_id, uai.user_id\norder by uai.user_id\n#limit_offset#\n)\nselect\nrow_number() over () + cast(substring(''#limit_offset#'', position(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\n   get_location_hierarchy(lm.id) AS \"Location\",\nconcat_ws('' '', uu.first_name, uu.last_name, ''('', uu.user_name, '')'') \"User Detail\",\nTO_CHAR(dlr.start_time, ''DD-MM-YYYY HH24:MI:SS'') as \"In\",\n  TO_CHAR(dlr.end_time, ''DD-MM-YYYY HH24:MI:SS'') as \"Out\"\nfrom daily_login_report dlr\ninner join um_user uu on uu.id = dlr.user_id\ninner join location_master lm   \n    on lm.id = dlr.parent_id", "queryId": 1529, "fieldName": "tableField", "queryUUID": "23544ccb-abd1-4688-976d-eae36f7706bb", "queryParams": "limit_offset,from_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "From Date", "isMandatory": true, "queryForParam": "select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date", "queryIdForParam": 1528, "queryUUIDForParam": "c7a28f66-a5c2-4275-925f-6b3881bc7e2d", "requiredUptoLevel": 1}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Location", "isMandatory": true, "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1527, "queryUUIDForParam": "faa9fa3a-ded2-4fe6-b23d-d53f11a0a680", "requiredUptoLevel": 1}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'present_cho', 'e420132e-b8a3-4723-8169-38f46c81da0e'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(556, 'Absent CHO', NULL, true, 'DYNAMIC', NULL, '2020-03-04 17:45:23.563', 74841, '2020-03-04 15:21:56.292', 79677, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with dates as (\nselect\n\tto_date( case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM/DD/YYYY'') as from_date),\ndaily_login_report as (\nselect\n\tdistinct ulc.user_id,\nlh.parent_id\nfrom\n\tum_user_location_change_detail ulc\ninner join dates on\n\ttrue\nleft join um_user_attendance_info uai on\n\tulc.user_id = uai.user_id\n\tand uai.attendance_date = dates.from_date\ninner join location_hierchy_closer_det lh on\n\tlh.child_id = ulc.location_id\nwhere\n\tuai.user_id is null and uai.attendance_date is null\n\tand ulc.role_id in (179)\n\tand lh.parent_id = #location_id#\n\tand date(ulc.activation_date) <= dates.from_date\n\tand (ulc.deactivation_date is null\n\tor date(ulc.deactivation_date) > dates.from_date)\ngroup by\n\tlh.parent_id, ulc.user_id \norder by ulc.user_id\n#limit_offset#)\nselect\n\trow_number() over () + cast(substring(''#limit_offset#'', position(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nget_location_hierarchy(lm.id) AS \"Location\",\nconcat_ws('' '', uu.first_name, uu.last_name, ''('', uu.user_name, '')'') \"User Detail\"\nfrom\n\tdaily_login_report dlr\ninner join um_user uu on\n\tuu.id = dlr.user_id\ninner join location_master lm   \n    on lm.id = dlr.parent_id", "queryId": 1532, "fieldName": "tableField", "queryUUID": "efd035d2-9fbe-47f7-9c7d-b70a369e8eec", "queryParams": "limit_offset,from_date,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Location", "isMandatory": true, "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1530, "queryUUIDForParam": "c80b9eb6-83d7-4b57-ab0a-88fe91c93da4", "requiredUptoLevel": 1}, {"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Date", "isMandatory": true, "queryForParam": "select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date", "queryIdForParam": 1531, "queryUUIDForParam": "fefba2b0-73d1-48f8-889d-a46dd1e0a734", "requiredUptoLevel": 1}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'absent_cho', '6dad320c-0a2d-4d7c-963c-a35c0bc721f5'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(118, 'Infant Deaths Report(Immunization Services Provided to Children with Date of Birth)', NULL, true, 'DYNAMIC', NULL, '2020-05-25 16:29:38.528', 58981, '2019-01-22 14:36:37.643', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Infant Deaths Report(Immunization Services Provided to Children with Date of Birth)\nwith prefered_language as(\nselect (case \nwhen prefered_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\nchild_det as (\n\tselect m.unique_health_id, m.family_id, m.dob, c.tracking_location_id as loc_id,\n\tm.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,\n\tc.death_date\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.member_id is not null\n\tand c.death_date is not null\n    and c.is_valid_for_tracking_report = true\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language\n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nchild_det.unique_health_id as \"Child ID\",\nchild_det.family_id as \"Family ID\",\nchild_det.name as \"Name\",\nchild_det.dob as \"Date of Birth\",\nchild_det.death_date as \"Death Date\",\nloc_det.aoi as \"Location\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id;", "queryId": 152, "fieldName": "tableField", "queryUUID": "45f6b84c-7380-4460-8c14-98ad980d99c4", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 2, "isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year", "queryIdForParam": 198, "queryUUIDForParam": "579c7d27-f742-4d6f-9a90-e8aac5e5dc95"}, {"index": 1, "isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year", "queryIdForParam": 197, "queryUUIDForParam": "7059db52-9ba7-4b13-9cae-02ed0a9c05f9"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 151, "queryUUIDForParam": "767542fb-20b3-4d68-8b1f-a16bcfe7f12b"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'infant_deaths', 'ed787aa6-28cb-41b6-baa0-62792788f03c'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(154, 'Live Birth from 1st April(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 16:49:09.312', 1, '2019-02-05 12:31:40.386', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Live Birth from 1st April(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.member_id is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 264, "fieldName": "tableField", "queryUUID": "19204b85-e0d0-45ff-ab48-38dad38e2595", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 263, "queryUUIDForParam": "164de883-483f-4633-8ef5-13b937a90ee9"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_live_birth_yearly', '3c6289d5-c5e6-4967-a5d4-559e7d54630b'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(156, 'Children weighed(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 16:47:49.308', 1, '2019-02-05 12:34:50.524', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Children weighed(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.birth_weight is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\nselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 268, "fieldName": "tableField", "queryUUID": "3c919f64-2642-4fba-8eb4-369dc8b247da", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 267, "queryUUIDForParam": "d612e9fc-e287-4a54-83a7-88f6b3afb6e2"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_childweighed_year', '5d22c47b-0d6a-4135-87f7-67cc8127a150'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(538, 'User Wise Task Complete Rate(Old)', NULL, true, 'DYNAMIC', NULL, '2020-02-11 16:59:35.417', 74841, '2020-01-08 18:25:14.681', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "WITH\ndates AS (\n    SELECT\n        to_date(\n            CASE WHEN ''#from_date#'' = ''null'' THEN\n                NULL\n            ELSE\n                ''#from_date#''\n            END, ''MM-DD-YYYY'') AS from_date,\n        to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date\n)\n,user_wise_count AS (\n    SELECT\n \t\tul.user_id,\n \t\tstring_agg(distinct get_location_hierarchy(ul.location_id),''<br>'') as location_name,\n \t\tsum(ul.missed_count) as missed_count,\n        sum(ul.pending_count) as pending_count,\n        sum(ul.on_completed_count) as on_completed_count,\n        sum(ul.after_due_completed_count) as after_due_completed_count,\n        sum(ul.due_pending) as due_pending\n    FROM\n        location_wise_task_complition_rate_analysis ul,\n        dates,location_hierchy_closer_det lh\t\n    WHERE\n        ul.month_year BETWEEN dates.from_date AND dates.to_date\n        AND lh.parent_id = #location_id#\n        and lh.child_id = ul.location_id        \n        AND (\n            case \n            when #notification_type# = ''-1'' then ul.notification_type_id in (select id from notification_type_master nt where role_id = #role_id#) \n            else ul.notification_type_id = #notification_type# \n            end)\n        GROUP BY\n          lh.parent_id, ul.user_id\norder by lh.parent_id, ul.user_id\n        #limit_offset#\n), result_set as (select distinct\n\tconcat_ws('' '', u.first_name, u.last_name, ''('', u.user_name, '')'') \"User Detail\",\n\tstring_agg(distinct uwc.location_name, ''<br>'') as \"Location\",\n\tCOALESCE(sum(uwc.on_completed_count), 0) as \"On time Complete\",\n    COALESCE(sum(uwc.after_due_completed_count), 0) as \"After Due Completed Count\",\n    COALESCE(sum(uwc.pending_count), 0) as \"Pending Count\",\n    COALESCE(sum(uwc.due_pending), 0) as \"Due Pending\",\n    COALESCE(sum(uwc.missed_count), 0) as \"Missed\",\n(COALESCE(sum(uwc.on_completed_count), 0) + COALESCE(sum(uwc.after_due_completed_count), 0) + COALESCE(sum(uwc.pending_count), 0) +\n     COALESCE(sum(uwc.due_pending), 0) + COALESCE(sum(uwc.missed_count), 0)) as \"Total\"\n\tfrom user_wise_count uwc\ninner join um_user u\non u.id  = uwc.user_id\ngroup by u.first_name, u.last_name, u.user_name)\n\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nrs.*  \nfrom result_set rs", "queryId": 1489, "fieldName": "tableField", "queryUUID": "96e77dc1-3c46-4b56-a08d-5dc3fe697e35", "queryParams": "notification_type,limit_offset,from_date,to_date,role_id,location_id"}], "fieldsContainer": [{"index": 4, "query": "", "isQuery": false, "queryId": 1494, "isHidden": true, "fieldName": "role_id", "fieldType": "text", "queryUUID": "2637fc8c-f614-4ac2-8950-11329d595f01", "isUrlParam": true, "displayName": "Role", "isMandatory": false, "queryParams": null, "queryForParam": "select name as role_id from um_role_master where state = ''ACTIVE'' and id = #role_id#;", "queryIdForParam": 1509, "availableOptions": [], "queryUUIDForParam": "b0e90684-e0d2-44ee-92c8-2cfa62f38e6f", "requiredUptoLevel": ""}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Location", "isMandatory": true, "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1485, "queryUUIDForParam": "61835dc2-8499-40ac-8c9a-afef271e3bde", "requiredUptoLevel": 1}, {"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "From Date", "isMandatory": true, "queryForParam": "select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date", "queryIdForParam": 1486, "queryUUIDForParam": "7f892d2b-add5-4268-bb79-a0a657bdba8b", "requiredUptoLevel": 1}, {"index": 3, "isHidden": true, "fieldName": "notification_type", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Notification Type", "isMandatory": true, "queryForParam": "select case when  #notification_type# = -1 then ''All'' end  as notification_type  \nunion \nselect \"name\" as notification_type from notification_type_master where id = #notification_type#", "queryIdForParam": 1488, "queryUUIDForParam": "3d48b2cf-ea07-4487-9092-7bc1fdd83d4d", "requiredUptoLevel": 1}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "To Date", "isMandatory": true, "queryForParam": "select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date", "queryIdForParam": 1487, "queryUUIDForParam": "1454c50f-477a-4b47-942c-f90fe318e66a", "requiredUptoLevel": 1}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'u_task_complete_rate', '605cf297-dfa5-4941-b733-81f51fa9340d'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(446, 'Live Birth from 1st April(Yearly)', NULL, true, 'DYNAMIC', NULL, '2020-04-24 14:02:02.039', 409, '2019-07-05 10:57:19.807', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Live Birth from 1st April(Yearly)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.native_loc_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tcase when m.gender = ''M'' then ''Male'' else ''Female'' end as gender,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.native_loc_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.member_id is not null\n\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.gender as \"Gender\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 1184, "fieldName": "tableField", "queryUUID": "90980f8f-5d36-4c73-83ce-172149c36ade", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1183, "queryUUIDForParam": "d4cd682e-1a1b-4af1-af28-f73efbc4b250"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'live_birth_yealy', '0af96fc0-129b-4d75-9f44-d97829c7656b'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(560, 'CFHC - Suspected Cases Report', NULL, true, 'DYNAMIC', NULL, '2020-03-23 12:03:33.790', 74841, '2020-03-12 14:10:29.676', 74841, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "with location_ids as(\n\tselect child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1\n),\nresult_set as (\nselect\n\tlch.parent_id as loc_id,\n\tsum(case when status = ''Suspected'' and modified_by = 204 then 1 else 0 end) as suspected_by_mphw,\n\tsum(case when status = ''Suspected'' and modified_by = 30 then 1 else 0 end) as suspected_by_fhw,\n\n\tsum(case when type_of_disease = ''Malaria'' and status = ''Suspected'' then 1 else 0 end) as suspected_malaria,\n\tsum(case when type_of_disease = ''Chikungunya'' and status = ''Suspected'' then 1 else 0 end) as suspected_chikungunya,\n\tsum(case when type_of_disease = ''Dengue'' and status = ''Suspected'' then 1 else 0 end) as suspected_dengue,\n\tsum(case when type_of_disease = ''TB'' and status = ''Suspected'' then 1 else 0 end) as suspected_tb,\n\tsum(case when type_of_disease = ''Leprosy'' and status = ''Suspected'' then 1 else 0 end) as suspected_leprosy,\n\t\n\tsum(case when type_of_disease = ''Malaria'' and status in (''Confirmed'', ''Treatment Started'') then 1 else 0 end) as examined_mo_malaria,\n\tsum(case when type_of_disease = ''Chikungunya'' and status in (''Confirmed'', ''Treatment Started'') then 1 else 0 end) as examined_mo_chikungunya,\n\tsum(case when type_of_disease = ''Dengue'' and status in (''Confirmed'', ''Treatment Started'') then 1 else 0 end) as examined_mo_dengue,\n\tsum(case when type_of_disease = ''TB'' and status in (''Confirmed'', ''Treatment Started'') then 1 else 0 end) as examined_mo_tb,\n\tsum(case when type_of_disease = ''Leprosy'' and status in (''Confirmed'', ''Treatment Started'') then 1 else 0 end) as examined_mo_leprosy,\n\n\tsum(case when type_of_disease = ''Malaria'' and status = ''Confirmed'' then 1 else 0 end) as positive_malaria,\n\tsum(case when type_of_disease = ''Chikungunya'' and status = ''Confirmed'' then 1 else 0 end) as positive_chikungunya,\n\tsum(case when type_of_disease = ''Dengue'' and status = ''Confirmed'' then 1 else 0 end) as positive_dengue,\n\tsum(case when type_of_disease = ''TB'' and status = ''Confirmed'' then 1 else 0 end) as positive_tb,\n\tsum(case when type_of_disease = ''Leprosy'' and status = ''Confirmed'' then 1 else 0 end) as positive_leprosy,\n\t\n\tsum(case when type_of_disease = ''Malaria'' and status = ''Treatment Started'' then 1 else 0 end) as treatment_malaria,\n\tsum(case when type_of_disease = ''Chikungunya'' and status = ''Treatment Started'' then 1 else 0 end) as treatment_chikungunya,\n\tsum(case when type_of_disease = ''Dengue'' and status = ''Treatment Started'' then 1 else 0 end) as treatment_dengue,\n\tsum(case when type_of_disease = ''TB'' and status = ''Treatment Started'' then 1 else 0 end) as treatment_tb,\n\tsum(case when type_of_disease = ''Leprosy'' and status = ''Treatment Started'' then 1 else 0 end) as treatment_leprosy\n\t\n\tfrom wt_cfhc_suspected_disease wcsd\n\tinner join location_hierchy_closer_det lch\n\ton lch.child_id = wcsd.location_id\n\tand lch.parent_id in (select child_id from location_hierchy_closer_det where parent_id in (select distinct child_id from location_ids))\n\tgroup by lch.parent_id\n)\nselect \n\trow_number() over() as \"Sr No.\",\n\tlocation_master.name as \"Location\",\n\tcoalesce(suspected_malaria, 0) as \"Suspected for Malaria\",\n\tcoalesce(suspected_chikungunya, 0) as \"Suspected for Chickengunya\",\n\tcoalesce(suspected_dengue, 0) as \"Suspected for Dengue\",\n\tcoalesce(suspected_tb, 0) as \"Suspected for TB\",\n\tcoalesce(suspected_leprosy, 0) as \"Suspected for Leprosy\",\n\tcoalesce(suspected_by_fhw, 0) as \"Total Suspeceted identified by fhw\",\n\tcoalesce(suspected_by_mphw, 0) as \"Total Suspeceted identified by mphw\",\n\tcoalesce(examined_mo_malaria, 0) as \"Examined by MO for Malaria\",\n\tcoalesce(examined_mo_chikungunya, 0) as \"Examined by MO for Chickengunya\",\n\tcoalesce(examined_mo_dengue, 0) as \"Examined by MO for Dengue\",\n\tcoalesce(examined_mo_tb, 0) as \"Examined by MO for TB\",\n\tcoalesce(examined_mo_leprosy, 0) as \"Examined by MO for Leprosy\",\n\tcoalesce(positive_malaria, 0) as \"Found positive for Malaria\",\n\tcoalesce(positive_chikungunya, 0) as \"Found positive for Chickengunya\",\n\tcoalesce(positive_dengue, 0) as \"Found positive for Dengue\",\n\tcoalesce(positive_tb, 0) as \"Found positive for TB\",\n\tcoalesce(positive_leprosy, 0) as \"Found positive for Leprosy\",\n\tcoalesce(treatment_malaria, 0) as \"Treatment started for Malaria\",\n\tcoalesce(treatment_chikungunya, 0) as \"Treatment started for Chickengunya\",\n\tcoalesce(treatment_dengue, 0) as \"Treatment started for Dengue\",\n\tcoalesce(treatment_tb, 0) as \"Treatment started for TB\",\n\tcoalesce(treatment_leprosy, 0) as \"Treatment started for Leprosy\"\nfrom location_ids \ninner join location_master on location_master.id = location_ids.child_id\nleft join result_set rs on rs.loc_id = location_ids.child_id\nunion all\nselect \nnull,\n''<b>Total<b>'',\ncoalesce(sum(suspected_malaria), 0),\ncoalesce(sum(suspected_chikungunya), 0),\ncoalesce(sum(suspected_dengue), 0),\ncoalesce(sum(suspected_tb), 0),\ncoalesce(sum(suspected_leprosy), 0),\ncoalesce(sum(suspected_by_fhw), 0),\ncoalesce(sum(suspected_by_mphw), 0),\ncoalesce(sum(examined_mo_malaria), 0),\ncoalesce(sum(examined_mo_chikungunya), 0),\ncoalesce(sum(examined_mo_dengue), 0),\ncoalesce(sum(examined_mo_tb), 0),\ncoalesce(sum(examined_mo_leprosy), 0),\ncoalesce(sum(positive_malaria), 0),\ncoalesce(sum(positive_chikungunya), 0),\ncoalesce(sum(positive_dengue), 0),\ncoalesce(sum(positive_tb), 0),\ncoalesce(sum(positive_leprosy), 0),\ncoalesce(sum(treatment_malaria), 0),\ncoalesce(sum(treatment_chikungunya), 0),\ncoalesce(sum(treatment_dengue), 0),\ncoalesce(sum(treatment_tb), 0),\ncoalesce(sum(treatment_leprosy), 0)\nfrom location_ids \ninner join location_master on location_master.id = location_ids.child_id\nleft join result_set rs on rs.loc_id = location_ids.child_id", "queryId": 1541, "fieldName": "tableField", "queryUUID": "30d58f10-2e8e-43ea-b480-a0d2b0161c60", "queryParams": "location_id"}], "fieldsContainer": [{"fieldName": "location_id", "fieldType": "location", "queryUUID": null, "displayName": "Location", "isMandatory": true, "fetchUptoLevel": "6", "queryUUIDForParam": null, "requiredUptoLevel": 1, "fetchAccordingToUserAoi": true}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": true}', 'cfhc_susp_case', 'e66463b7-69b5-43ec-bdd9-2eb0b448a3af'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(633, 'Total Admission (CMTC/NRC Facility Monitoring - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 17:09:06.765', 60512, '2020-09-07 16:44:48.751', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1708,"queryUUIDForParam":"e9a0596c-9b1b-40e7-9e8b-837b8d07d8bc"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1709,"queryUUID":"cc894fb3-7096-4710-98dd-e78685388d0b","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', 'tot_adm_cmtc_fac', '3cf8a85e-3148-4336-b4a5-d179027836eb'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(300, '4 ANC (Maternal Health Services provided to the mother registered during the year)', NULL, true, 'DYNAMIC', NULL, '2020-05-11 11:54:28.542', 58981, '2019-03-06 15:31:20.300', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--4 ANC (Maternal Health Services provided to the mother registered during the year)\nwith parameters as(\nselect CAST(#location_id# AS INTEGER) as location_id,\nCAST(''#financial_year#'' AS TEXT) as financial_year,\nCAST(''#demographic_location_id#'' AS TEXT) as demographic_group,\n(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language\n),\n member_det as (\n\tselect r.member_id, r.tracking_location_id as loc_id,\n\tr.unique_health_id, r.family_id, r.member_name as name,\n\tto_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd\n\t,to_char(r.anc4, ''DD/MM/YYYY'') as anc4\n\tfrom rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p\n\twhere r.tracking_location_id  = l.child_id \n\tand anc4 is not null\n\tand l.parent_id = p.location_id\n\tand r.reg_service_financial_year = p.financial_year\n        and (p.demographic_group=''null'' or l.child_loc_demographic_type in \n\t\t( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)\n\t)\n\tand r.is_valid_for_tracking_report\n\torder by r.lmp_date\n\t#limit_offset#\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom (select distinct loc_id from member_det)  loc, location_hierchy_closer_det lhcd, location_master l2, parameters p\n\twhere lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, concat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',\n\tcase when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\nmember_det.anc4 as \"ANC4 Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 785, "fieldName": "tableField", "queryUUID": "678a67ef-6988-49f6-af39-6cff7379d98e", "queryParams": "limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 784, "queryUUIDForParam": "e4896b16-3951-428b-9eab-26a6fa35fb37"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mtr_hlth_srv_anc4', 'c2646e77-13ac-43ce-8457-34cb2d81a25f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(562, 'IDSP Location wise screening analytics', NULL, true, 'DYNAMIC', NULL, '2020-03-24 00:07:55.826', 74841, '2020-03-23 12:32:44.813', 74841, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "with dates as (\n\tSELECT\n        to_date(\n            CASE WHEN ''#from_date#'' = ''null'' THEN\n                NULL\n            ELSE\n                ''#from_date#''\n            END, ''MM/DD/YYYY'') AS from_date,\n        to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') as to_date\n),\nlocation_ids as(\n\tselect child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1\n),\nresult_set as (\n    select \n\tlch.parent_id as loc_id,\n\tcount(distinct idsp.member_id) as member_done,\n\tcount(distinct idsp.family_id) as family_done,\n\tsum(case when idsp.is_any_illness_or_discomfort then 1 else 0 end) as illness,\n\tsum(case when idsp.is_cough then 1 else 0 end) as cough,\n\tsum(case when idsp.is_fever then 1 else 0 end) as fever,\n\tsum(case when idsp.is_fever and idsp.is_cough and idsp.is_any_illness_or_discomfort then 1 else 0 end) as all_three\n    from idsp_member_screening_details idsp\n\tinner join location_hierchy_closer_det lch\n\ton lch.child_id = idsp.location_id\n\tand lch.parent_id in (select distinct child_id from location_ids)\n\tinner join dates on idsp.service_date between dates.from_date and dates.to_date\n\tgroup by lch.parent_id\n)\nselect \n\trow_number() over() as \"Sr No.\",\n\tlocation_master.name as \"Location\",\n\tcoalesce(member_done, 0) as \"Total Unique Member Screening\",\n\tcoalesce(family_done, 0) as \"Total Unique Family Screening\",\n\tcoalesce(illness, 0) as \"Member Having Any Illness Or Discomfort\",\n\tcoalesce(cough, 0) as \"Member Having Cough\",\n\tcoalesce(fever, 0) as \"Member Having Fever\",\n\tcoalesce(all_three, 0) as \"Member With Cough, Fever And Illness Or Discomfort\"\nfrom location_ids \ninner join location_master on location_master.id = location_ids.child_id\nleft join result_set rs on rs.loc_id = location_ids.child_id\nunion all\nselect \nnull,\n''<b>Total<b>'',\ncoalesce(sum(member_done), 0),\ncoalesce(sum(family_done), 0),\ncoalesce(sum(illness), 0),\ncoalesce(sum(cough), 0),\ncoalesce(sum(fever), 0),\ncoalesce(sum(all_three), 0)\nfrom location_ids \ninner join location_master on location_master.id = location_ids.child_id\nleft join result_set rs on rs.loc_id = location_ids.child_id", "queryId": 1543, "fieldName": "tableField", "queryUUID": "5d136446-b711-412f-a76b-a3e43024c952", "queryParams": "from_date,to_date,location_id"}], "fieldsContainer": [{"index": 0, "fieldName": "location_id", "fieldType": "location", "queryUUID": null, "displayName": "Location", "isMandatory": true, "fetchUptoLevel": "6", "queryUUIDForParam": null, "requiredUptoLevel": 1, "fetchAccordingToUserAoi": true}, {"fieldName": "date", "fieldType": "dateFromTo", "queryUUID": null, "displayName": "Date", "isMandatory": true, "queryUUIDForParam": null, "requiredUptoLevel": 1}]}, "isFilterOpen": false, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": false}', 'idsp_locatiion_wise', '26f34aeb-52ca-4748-8955-e0a8001f383c'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(565, 'Last OTP based On Mobile No', NULL, true, 'DYNAMIC', NULL, '2020-03-28 17:35:59.289', 74840, '2020-03-28 16:53:39.243', 74840, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "with param_input as (\n\tselect \n\tcase when ''#mobileno#'' is not null then ''#mobileno#'' else null end as mobile_no\n\t--case when ''#mobileno#'' is not null then length(''#mobileno#'') else 0 end as mobile_length\n)\n,\nfinal_det as (\n\tselect\n\tmobile_number,\n\totp\t\n\tfrom otp_master,param_input where mobile_number = param_input.mobile_no \n    and state = ''ACTIVE''\n\tgroup by mobile_number,otp,expiry \norder by expiry desc limit 1\n)\nselect\nmobile_number as \"Mobile No\",\notp as \"OTP\"\n--length(''#mobileno#'') as \"Given Input Mobile Length\"\n\nfrom final_det", "queryId": 1548, "fieldName": "tableField", "queryUUID": "e03876a1-5d7b-4cd1-b9b2-0d12f508c3e7", "queryParams": "mobileno"}], "fieldsContainer": [{"fieldName": "mobileno", "fieldType": "number", "queryUUID": null, "displayName": "Mobile No", "isMandatory": true, "queryUUIDForParam": null, "requiredUptoLevel": 1}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'lasr_otp_finder', '1d519bf5-1434-45ff-8f1c-deacbe00f0c2'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(567, 'Dr techo Member Wise Report', NULL, true, 'DYNAMIC', NULL, '2020-04-09 17:43:30.741', 74841, '2020-03-29 13:22:33.206', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with idsp_screening as (\n\tselect\n\t\tcti.district_id as loc_id,\n\t\tname as member_det,\n\t\tis_cough,\n\t\tis_fever,\n\t\tis_respiratory_issue as breathlessness,\n\t\tcase when is_travel and is_travel_from_other_country != true then true else false end as domestic_travel_history,\n\t\tcase when is_travel_from_other_country = true then true else false end as international_travel_history,\n        age,\n        mobile_number as contactPersonMobileNo,\n\t\tis_sari as sari,\n\t\ttravel_from,\n\t\ttravel_to,\n        u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>''\n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as created,\n\t\tcti.address\n\t\tfrom covid_travellers_info cti\n\t\tinner join location_hierchy_closer_det lh on lh.child_id = cti.district_id\n        left join  um_user u on u.id = cti.created_by\n\t\twhere lh.parent_id = #location_id# and input_type = ''DR_TECHO'' \n\t\tand (case when ''#filter_by#'' = ''Suggested Covid Test'' then cti.suggest_covid_test \n\t\twhen ''#filter_by#'' = ''SARI'' then cti.is_sari else false end)\n\t\torder by cti.member_id\n\t#limit_offset#\n),\nloc as (\n\tselect distinct loc_id from idsp_screening\n),\nloc_det as (\n\tselect loc.loc_id,  string_agg((case when ((l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi\n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2\n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No.\",\nidsp_screening.member_det as \"Member Details\",\nloc_det.aoi as \"Location\",\nidsp_screening.contactPersonMobileNo as \"Contact Person MobileNo\",\nidsp_screening.age as \"Age\",\nidsp_screening.address as \"Address\",\nidsp_screening.is_cough as \"Has Cough\",\nidsp_screening.is_fever as \"Has Fever\",\nidsp_screening.breathlessness as \"Has Breathlessness\",\nidsp_screening.domestic_travel_history as \"Domestic TravelHistory\",\nidsp_screening.international_travel_history as \"International TravelHistory\",\nidsp_screening.sari as \"SARI\",\nidsp_screening.travel_from as \"Travel Origin\",\nidsp_screening.travel_to as \"Travel Destination\",\nidsp_screening.created as \"Created BY\"\nfrom idsp_screening\ninner join loc_det on idsp_screening.loc_id = loc_det.loc_id;", "queryId": 1550, "fieldName": "tableField", "queryUUID": "4ee65cda-8c43-4671-afea-87828e73bf5a", "queryParams": "limit_offset,filter_by,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "filter_by", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Filter By", "queryForParam": "", "queryIdForParam": "", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "isMandatory": true, "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1551, "queryUUIDForParam": "a1b1537c-1025-4c10-ae5a-2ed54f7210fd", "requiredUptoLevel": 1}]}, "isFilterOpen": false, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'dr_member_wise', 'b96f8aec-3aa8-4a0c-b296-522fa71ac2da'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(115, 'Infant Deaths Registered in TeCHO+', NULL, true, 'DYNAMIC', NULL, '2020-02-10 19:01:05.667', 58981, '2019-01-21 12:32:51.508', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \ndeath as (\n\tselect rch_member_death_deatil.location_id as loc_id,\n\timt_member.first_name || '' '' || imt_member.middle_name || '' '' || imt_member.last_name || '' ('' || imt_member.unique_health_id || '')'' || ''<br>'' || imt_member.family_id as member_det,\n\tto_char(imt_member.dob, ''DD/MM/YYYY'') as dob,\n\tto_char(rch_member_death_deatil.dod, ''DD/MM/YYYY'') as dod,\n\trch_member_death_deatil.place_of_death\n\tfrom rch_member_death_deatil, location_hierchy_closer_det, imt_member\n\twhere location_hierchy_closer_det.parent_id = #location_id#\n\tand rch_member_death_deatil.location_id = location_hierchy_closer_det.child_id \n\tand rch_member_death_deatil.member_id = imt_member.id\n\tand imt_member.dob > rch_member_death_deatil.dod - interval ''1 year''\n\tand rch_member_death_deatil.dod between cast (\n\t\tcase\n\t\t\twhen ''#from_date#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_date#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_date#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_date#''\n\t\tend as date) + interval ''1 day''\n\torder by rch_member_death_deatil.dod\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from death\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\ndeath.member_det as \"Member Details\", \nloc_det.aoi as \"Location\",\ndeath.dob as \"Date of Birth\",\ndeath.dod as \"Death Date\", \ndeath.place_of_death as \"Place of Death\",\nfhw_det.fhw as \"FHW Details\"\nfrom death \ninner join loc_det on death.loc_id = loc_det.loc_id \nleft join fhw_det on death.loc_id = fhw_det.loc_id;", "queryId": 138, "fieldName": "tableField", "queryUUID": "cbe9dc2c-ebef-4ba2-b62c-54e61b95bb91", "queryParams": "limit_offset,from_date,to_date,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 2, "isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date", "queryIdForParam": 200, "queryUUIDForParam": "69e65274-06a9-440a-8fa2-6d18b13f45a5"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 141, "queryUUIDForParam": "9e76b0b4-dc06-4856-b9fd-0cf97913165b"}, {"index": 1, "isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date", "queryIdForParam": 199, "queryUUIDForParam": "1b931455-314d-4535-a985-5f49054786bb"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'infant_deaths_techo', 'ca62eee3-65ea-44e7-b2a9-c5726eb8a80c'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(121, 'Severe anemia (Hb less than 7gm%)(High Risk Mother-Present Pregnancy Complication)', NULL, true, 'DYNAMIC', NULL, '2019-10-06 17:00:08.716', 58981, '2019-01-22 19:03:38.075', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \n\t\twhen report_preferred_language = ''EN'' then true  \n\t\telse false \n\tend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\n,dates as (\n\tselect to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date\n\t,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date\n)\n, member_det as (\n\tselect r.member_id, r.native_location_id as loc_id,\n\tm.unique_health_id, m.family_id, \n\tm.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,\n\tto_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd\n\tfrom rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, dates d\n\twhere r.member_id = m.id and r.native_location_id  = l.child_id \n\tand l.parent_id = #location_id#\n\tand r.reg_service_date between d.from_date and d.to_date\n\tand r.cur_severe_anemia = true\n\t--and r.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')\n\t--and r.preg_reg_state in (''PENDING'',''PREGNANT'')\n\torder by r.lmp_date\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from member_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 158, "fieldName": "tableField", "queryUUID": "77878b31-02ed-4ff5-be55-2d4f8a58d7a7", "queryParams": "to_month,limit_offset,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 157, "queryUUIDForParam": "b158ec26-508f-4772-bba5-f9c7dbd56e7f"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'hrm_severe_anemia', '25512da2-f762-437c-952d-7703e236a4a7'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(138, 'Children weighed(Services Provided to the Children Registered during the Year ( 1 to 6 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-20 18:16:36.359', 57698, '2019-02-04 17:24:27.007', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Children weighed(Services Provided to the Children Registered during the Year ( 1 to 6 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n years as ( \n\tselect concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, \n\tcast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date\n\tfrom generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc\n), child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.is_valid_for_tracking_report = true\n\tand y.financial_year = ''#financial_year#''\n\tand c.birth_weight is not null\n\tand c.dob between y.from_date and y.too_date\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 230, "fieldName": "tableField", "queryUUID": "d9a0916b-cb82-4a36-aacd-8ce9feb269b3", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 1, "isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "undefined": 1, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "undefined": 0, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 229, "queryUUIDForParam": "7f74f528-897f-4a5a-aaad-b6adca40edcc"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_child_weighed', '36a568d2-d8ed-4b05-aa76-b653b46ad8bb'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(139, 'Out of weighed, less than 2.5 kg (1 to 6 Years)(Services Provided to the Children Registered during the Year ( 1 to 6 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 11:54:53.774', 57698, '2019-02-04 17:33:03.358', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Out of weighed, less than 2.5 kg (1 to 6 Years)(Services Provided to the Children Registered during the Year ( 1 to 6 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n years as ( \n\tselect concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, \n\tcast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date\n\tfrom generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc\n), child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.is_valid_for_tracking_report = true\n\tand y.financial_year = ''#financial_year#''\n\tand c.birth_weight is not null and c.birth_weight < 2.5\n\tand c.dob between y.from_date and y.too_date\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 231, "fieldName": "tableField", "queryUUID": "7ef65db5-50a6-45ed-8455-e1743285f1cd", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 232, "queryUUIDForParam": "b8b1846f-a52f-410f-ab65-a58f28426134"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "4"}', 'ch_out_of_weighed', '283a53f0-6fa3-41bf-86ee-8a8ebd4d39ed'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(146, 'Penta 2 given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-21 14:00:54.903', 1, '2019-02-05 11:57:29.837', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Penta 2 given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n years as ( \n\tselect concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, \n\tcast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date\n\tfrom generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc\n), child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand y.financial_year = ''#financial_year#''\n    and c.is_valid_for_tracking_report = true\n\tand c.penta2 is not null\n\tand c.dob between y.from_date and y.too_date\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 246, "fieldName": "tableField", "queryUUID": "4d9b2168-cc9f-415a-b1c4-4b5406483630", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 245, "queryUUIDForParam": "31626838-e8ec-4b59-aff3-bfbcf21ee783"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_penta2_given', '2c3a4d06-4def-4b75-9a6a-4e383c31a24a'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(568, 'Drtecho Doctor Details', NULL, true, 'DYNAMIC', NULL, '2020-04-04 12:47:59.884', 74841, '2020-03-30 11:32:24.743', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with dr_techo_reg_det as(\nselect hid.location_id  as loc_id\n,case when u.state = ''ACTIVE'' then true else false end as approved\n,case when u.state = ''DISAPPROVED'' then true else false end as disapproved\n,case when u.state = ''UNVERIFIED'' then true else false end as pending\n,u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' as member_det,\ncase when u.contact_number is not null then u.contact_number else ''N/A'' end as mobile,\nu.address\nfrom um_user u\nleft join user_health_infrastructure  uhi on u.id = uhi.user_id and uhi.state = ''ACTIVE''\nleft join health_infrastructure_details hid on hid.id = uhi.health_infrastrucutre_id\nleft join location_hierchy_closer_det lhc on lhc.child_id = hid.location_id \nwhere  role_id in (\nselect id from um_role_master where name = ''DrTecho User'')\nand lhc.parent_id = #location_id# and  u.state = ''ACTIVE''\n--#limit_offset#\n),\nloc as (\n\tselect distinct loc_id from dr_techo_reg_det\n),\nloc_det as (\n\tselect loc.loc_id,  string_agg((case when ((l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi\n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2\n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n\t\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No.\",\ndr_techo_reg_det.member_det as \"Member Details\",\ndr_techo_reg_det.mobile as \"Contact NO.\",\nloc_det.aoi as \"Location\",\ndr_techo_reg_det.address as \"Address\"\n--dr_techo_reg_det.approved as \"Approved\"\n--dr_techo_reg_det.disapproved as \"Disapproved\",\n--dr_techo_reg_det.pending as \"Pending\"\nfrom loc_det\nleft join dr_techo_reg_det on dr_techo_reg_det.loc_id = loc_det.loc_id;", "queryId": 1552, "fieldName": "tableField", "queryUUID": "4185d592-4c46-4d5c-85a4-0f03995c6efa", "queryParams": "limit_offset,location_id"}], "fieldsContainer": [{"index": 0, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "isMandatory": true, "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1553, "queryUUIDForParam": "a4438077-d901-46b7-a216-cd3054f92a51", "requiredUptoLevel": 1}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'dr_total_member', '5344ea6a-2846-4aef-8ce2-db346f348bf5'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(572, 'mytecho - member details (Mytecho - Covid symptoms details)', NULL, true, 'DYNAMIC', NULL, '2020-04-09 10:26:43.285', 74840, '2020-04-02 11:59:10.888', 66522, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with member_selection as (\n\tselect * from mytecho_covid_symptom_checker_dump \n\twhere mt_member_id = #mt_member_id#\n\torder by created_on  desc\n),\nfinal_det as (\n select\n mt_member_id,\nname as name,\nmobile_number as mobile_number,\ncreated_on as created_on,\ncast(cast(data as json) -> ''haveAnyTravelHistory'' as text) as had_any_travel_history,\ncast(cast(data as json) -> ''country'' as text) as country,\ncast(cast(data as json) -> ''fever'' as text) as is_fever,\ncast(cast(data as json) -> ''shortOfBreath'' as text) as is_short_of_breath,\ncast(cast(data as json) -> ''cough'' as text) as is_cough,\ncast(cast(data as json) -> ''typeOfTravel'' as text) as type_of_travel,\n--cast(cast(data as json) -> ''id'' as text) as \"Id\",\ncast(cast(data as json) -> ''contactTracing'' as text) as contact_tracing,\ncast(cast(data as json) -> ''otherDiseases'' as text) as other_disease\n--cast(cast(data as json) -> ''isContinue'' as text) as \"Is Continue\"\nfrom \nmember_selection\n#limit_offset#\n)\nselect\nrow_number() over () + cast(substring(''#limit_offset#'', position(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nmt_member_id as hidden_location_id,\n--mt_member_id as \"Member Id\",\nname as \"Member Name\",\ncase when mobile_number is null or mobile_number = ''null'' then ''N/A'' else mobile_number end as \"Mobile No.\",\ncreated_on as \"Tracking Date\",\ncase when had_any_travel_history is null or had_any_travel_history = ''null'' then ''N/A'' else had_any_travel_history end as \"Had any travel History\",\ncase when country is null or country = ''null'' then ''N/A'' else country end as \"Country\",\ncase when is_fever is null or is_fever = ''null'' then ''N/A'' else is_fever  end as \"Is Fever\",\ncase when is_short_of_breath is null or is_short_of_breath = ''null'' then ''N/A'' else is_short_of_breath end as \"Is Short Of Breath\",\ncase when is_cough is null or is_cough  = ''null'' then ''N/A'' else is_cough  end as \"Is Cough\",\ncase when type_of_travel is null or type_of_travel = ''null'' then ''N/A'' else type_of_travel end as \"Type Of Travel\",\ncase when contact_tracing is null or contact_tracing = ''null'' then ''N/A'' else contact_tracing  end as \"Contact Tracing\",\ncase when other_disease  is null or other_disease  = '''' or other_disease = ''null'' then ''N/A'' else other_disease  end as \"Other Disease\"\n--data\nfrom final_det", "queryId": 1557, "fieldName": "tableField", "queryUUID": "f40d786c-567f-4826-8db0-0c60aef6ce9b", "queryParams": "limit_offset,mt_member_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "mt_member_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Member ID", "queryUUIDForParam": null}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mytecho_mem_symp_det', '9d515744-5724-4ed4-84d1-28f997388ca7'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(577, 'Government Facility with null longitude and latitude', NULL, true, 'DYNAMIC', NULL, '2020-04-10 17:49:33.776', 92665, '2020-04-09 14:02:06.339', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with location_filter as (\n\tselect lm.id, lm.\"name\" , lm.english_name ,lm.\"type\" from location_hierchy_closer_det lhcd inner join location_master lm on lm.id = lhcd.child_id where lhcd.parent_id = #location_id#\n)\nselect \nrow_number() over() as \"Sr. no\",\nhid.\"name\" ,\n(select lm.name from location_hierchy_closer_det lhcd  inner join location_master lm on lhcd.parent_id = lm.id and lhcd.parent_loc_type = ''D'' where lhcd.child_id = hid.location_id ) as district,\n(select lm.name from location_hierchy_closer_det lhcd  inner join location_master lm on lhcd.parent_id = lm.id and lhcd.parent_loc_type = ''B'' where lhcd.child_id = hid.location_id ) as block\nfrom location_filter lf inner join health_infrastructure_details hid on lf.id = hid.location_id where ( hid.longitude is null or hid.longitude = ''0'' or hid.longitude = ''''\n\t\t\t\t\t\t\t\t\tor\thid.latitude is null or hid.latitude = ''0'' or hid.latitude = '''' ) and hid.\"type\" in (1061,1062,1063,1007,1008,1009,1012,1084) #limit_offset# ;", "queryId": 1562, "fieldName": "tableField", "queryUUID": "8ff15c6e-2de8-4d99-b1b7-7f504adf007e", "queryParams": "limit_offset,location_id"}], "fieldsContainer": [{"fieldName": "location_id", "fieldType": "location", "queryUUID": null, "displayName": "Location", "isMandatory": true, "fetchUptoLevel": "6", "queryUUIDForParam": null, "requiredUptoLevel": 1}]}, "isFilterOpen": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'infra_null_long_lat', '9470b25a-df50-4252-9a83-fe1cc2e31aec'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(49, 'FHS ARCHIVED FAMILIES', NULL, true, 'DYNAMIC', NULL, '2018-09-07 16:45:44.242', 1027, '2018-07-20 11:49:04.401', 1027, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "select ROW_NUMBER() over() as \"S No.\",fam.family_id as \"Family ID\",\ncase when fam.contact_person_id is not null then mem.first_name || '' '' || mem.last_name else ''NA'' end as \"Contact Person\",\ncase when mem.mobile_number is not null then mem.mobile_number else ''NA'' end as \"Contact No\" \nfrom imt_family fam inner join location_hierchy_closer_det lhcd\non fam.location_id = lhcd.child_id \nleft join imt_member mem on mem.id = fam.contact_person_id\nwhere lhcd.parent_id in  (select child_id from location_hierchy_closer_det where parent_id = #location_id#\nand child_id in (select loc_id from um_user_location where user_id = #user_id# and state = ''ACTIVE'')) and \nfam.state in (''com.argusoft.imtecho.family.state.archived'',\n\t\t\t\t''com.argusoft.imtecho.family.state.archived.fhsr.verified'',\n\t\t\t\t''com.argusoft.imtecho.family.state.new.archived.mo.fhw.reverified'',\n\t\t\t\t''com.argusoft.imtecho.family.state.archived.emri.fhw.reverified'',\n\t\t\t\t''com.argusoft.imtecho.family.state.new.archived.fhw.reverified'',\n\t\t\t\t''com.argusoft.imtecho.family.state.archived.mo.verified'',\n\t\t\t\t''com.argusoft.imtecho.family.state.archived.mo.fhw.reverified''\n\t\t\t\t,''com.argusoft.imtecho.family.state.merged'')", "queryId": 61, "fieldName": "tableField", "queryUUID": "1f8514ae-912a-4221-a93a-76a0d796cc62", "queryParams": "user_id,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "location id", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "user_id", "fieldType": "text", "queryUUID": null, "displayName": "user id", "queryUUIDForParam": null}]}, "templateType": "DYNAMIC_REPORTS", "isBackButtonRequired": true}', 'fhs_archived', '2bab7e7c-33db-4908-85bf-b065f7d1f0a7'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(589, 'Daily Sample Collection Info', NULL, true, 'DYNAMIC', NULL, '2020-04-16 12:14:36.370', 74841, '2020-04-13 23:30:48.554', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with parameters as (\nselect hid.id as health_infra_id,hid.name_in_english as name\n,(case when ''#from_date#'' = ''null'' then current_date else to_date(''#from_date#'',''MM-DD-YYYY'') end) as from_date\n,(case when ''#to_date#'' = ''null'' then current_date else to_date(''#to_date#'',''MM-DD-YYYY'') end) + interval ''1 day'' - interval ''1 milliseconds'' as to_date\nfrom health_infrastructure_details hid\nwhere hid.id in (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = ''#loggedInUserId#'' and uhi.state = ''ACTIVE'')\n)\nselect \nltd.lab_test_id as \"Lab Test Number\",\np.name as \"Health Infra Name\",\ncase when clt.member_id is null \n    then concat_ws('' '',clt.first_name,clt.middle_name,clt.last_name)\n    else concat(concat_ws('' '',imt_member.first_name,imt_member.middle_name,imt_member.last_name)\n        , '' ('' , imt_member.unique_health_id , '')'' , ''<br>'' , imt_member.family_id) end as \"Patients Info\",\nconcat(case when clt.member_id is null \n    then cast(clt.age as text)\n    else cast(EXTRACT(YEAR FROM age(imt_member.dob)) as text) end,'' Year'') as \"Age\",\ncase when clt.gender = ''F'' then ''Female'' else ''Male'' end as \"Gender\",\nsample_to.name_in_english as \"Testing lab name\",\nclt.indications as \"Indications\"\nfrom parameters p \ninner join covid19_lab_test_detail ltd on ltd.sample_health_infra = p.health_infra_id\ninner join covid19_admission_detail clt on ltd.covid_admission_detail_id = clt.id\nleft join health_infrastructure_details sample_to on sample_to.id = ltd.sample_health_infra_send_to\nleft join imt_member on clt.member_id = imt_member.id\nwhere cast(lab_collection_on as date) between p.from_date and p.to_date\norder by ltd.sample_health_infra, ltd.covid_admission_detail_id\n#limit_offset#", "queryId": 1595, "fieldName": "tableField", "queryUUID": "ec3e691b-5600-4b2c-a15a-bfce9a6a27a7", "queryParams": "limit_offset,from_date,to_date,loggedInUserId"}], "fieldsContainer": [{"fieldName": "date", "fieldType": "dateFromTo", "queryUUID": null, "displayName": "Date", "isMandatory": true, "queryUUIDForParam": null, "requiredUptoLevel": 1}]}, "isFilterOpen": false, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'userwise_sample_info', 'a6dde5df-2ec4-41d5-93ed-4e1849c4d25a'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(594, 'User App Access Report', NULL, true, 'DYNAMIC', NULL, '2020-05-12 14:12:31.810', 74841, '2020-04-22 18:35:23.629', 74841, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "with total_user as (\n\tselect \n\tcount(1) filter(where case when #app_name# = ''DRTECHO'' and role_id = 203 then true \n\twhen #app_name# = ''SOH'' then true else false end ) as total_user\n\tfrom um_user\n\twhere state = ''ACTIVE''\n),\num_user_app_access_details_t as (\n\tselect distinct on(user_id)\n\t\t*\n\tfrom um_user_app_access_details\n\twhere app_name = #app_name# and (app_version != ''null'')\n\torder by user_id, id desc\n),\nfinal_det as (\n\tselect \n\t(select total_user from total_user) as total_user,\n\tapp_version as app_version,\ncount(1) as active_user,\ncount(1) filter (where cast(created_on as date) = current_date) as todays_active,\n\tdevice_type as device_type\n\tfrom um_user_app_access_details_t\n    group by app_version, device_type\n)\nselect \ncast(total_user as text) as \"Total Users\",\napp_version as hidden_app_version,\napp_version as \"App Version\",\nactive_user as \"Active Users\",\ntodays_active as \"Today''s Active\",\ndevice_type as hidden_device_type,\ndevice_type as \"Device Type\"\nfrom final_det\nunion all\nselect \n''<b>Total</b>'',\nnull,\nnull,\nsum(active_user),\nsum(todays_active),\nnull,\nnull\nfrom final_det", "queryId": 1604, "fieldName": "tableField", "queryUUID": "7cbf618f-5304-49f3-a128-1da566c78f98", "queryParams": "app_name"}], "fieldsContainer": [{"index": 0, "query": "with types as (\nselect ''''''SOH'''''' as key,''SOH'' as value, 1 as ord\nunion\nselect ''''''DRTECHO'''''' as key, ''DRTECHO'' as value, 2 as ord\n)select * from types order by ord desc", "isQuery": true, "queryId": 1603, "fieldName": "app_name", "fieldType": "comboForReport", "queryUUID": "55a87572-7f8f-4baa-b5f2-87301941d527", "displayName": "App Name", "isMandatory": true, "queryParams": null, "queryForParam": "", "queryIdForParam": "", "availableOptions": [], "queryUUIDForParam": null, "requiredUptoLevel": 1}], "tableFieldContainer": [{"index": 0, "isLink": true, "fieldName": "Active Users", "customParam": "", "customState": "techo.report.view({\"id\":601,\"queryParams\":{\"app_name\":\"$app_name$\",\"app_version\":\"@hidden_app_version@\", \"device_type\": \"@hidden_device_type@\"}})", "locationLevelForLink": ""}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'user_app_access', 'd3e927bb-ea02-482c-b921-6ace93f5cc1f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(608, 'Mild(Anemia Status Of Registered ANC Report)', NULL, true, 'DYNAMIC', NULL, '2020-06-24 21:25:59.126', 78434, '2020-06-24 14:08:50.051', 78434, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1645, "fieldName": "tableField", "queryUUID": "2b42a754-2a35-4280-a975-627e30f7d3ae", "queryParams": ""}], "fieldsContainer": [{"index": 1, "isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "From Month", "queryUUIDForParam": null}, {"index": 2, "isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 3, "isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' > '' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1644, "queryUUIDForParam": "df0b65ef-70b8-4372-8863-a74d8c36db1c"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mild_anemia', 'c858c3e4-1fcc-40cc-8c83-5b49c6b7cb0f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(669, 'CHC with less than 20 OPDs(CMdashboard OPD IPD Report)', NULL, true, 'DYNAMIC', NULL, '2020-10-29 17:23:48.904', 74841, '2020-10-28 13:13:46.325', 74841, '{"layout":"dynamicReport1","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"isMandatory":true,"requiredUptoLevel":1,"isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","fieldType":"text","displayName":"Location","fieldName":"location_id","queryIdForParam":1795,"queryUUIDForParam":"b127be48-36e4-411c-990a-40d113c2e300"}],"tableContainer":[{"fieldName":"tableField","query":"with dates AS (\n     SELECT\n        current_date - 1  AS from_date,\n        current_date - 1  + interval ''1 day'' - interval ''1 millisecond'' as to_date\n), loc_det as (\n    select child_id as loc_id from location_hierchy_closer_det where parent_id = ( case when #location_id# =  ''-1'' then 2 else #location_id# end)\n), health_infra_wise_data as (\n\nselect  hmis.id as hid,\n    hmis.location_id,\n    hmis.name_in_english, \n\tcoalesce(fpm.no_of_opd_attended, 0) as no_of_opd_attended \nfrom \nhealth_infrastructure_details hmis \ninner join dates on true\nleft join facility_performance_analytics  fpm on hmis.id = fpm.health_infrastrucutre_id and \n cast(fpm.performance_date as date) between dates.from_date and dates.to_date\nwhere location_id in (select loc_id from loc_det)\nand type in (''895'',''1009'',''1084'')\norder by hmis.id),\nresult as (\nselect \nd.english_name as \"District\",\nb.english_name as \"Taluka\",\ncase when hid.name_in_english is not null then hid.name_in_english else ''-'' end as \"CHC\",\nhid.no_of_opd_attended as \"No. of OPD Last 1 day\" \n    from location_master lm\n    left join location_level_hierarchy_master lh\n    on lh.id = lm.location_hierarchy_id\n    left join location_master s\n    on lh.level1 = s.id and s.state = ''ACTIVE'' and s.name not ilike ''%delete%''\n    left join location_master d\n    on lh.level3 = d.id and d.state = ''ACTIVE'' and d.name not ilike ''%delete%''\n    left join location_master b\t\n    on lh.level4 = b.id and b.state = ''ACTIVE'' and b.name not ilike ''%delete%''\n    left join location_master p\n    on lh.level5 = p.id and p.state = ''ACTIVE'' and p.name not ilike ''%delete%''\n    inner join health_infra_wise_data hid on hid.location_id = lm.id\n    where hid.no_of_opd_attended < 20\n)\nselect ROW_NUMBER() over ()  as \"Sr No\",\n* from result","queryId":1796,"queryUUID":"152cf492-0a89-4b08-8a71-caa48d641bbc","queryParams":"location_id"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true}', 'opd_line_list_chc', 'eb0aa5b9-6ff0-4529-b605-fab70141867c'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(274, 'Total ANC registered(LMP Based Pregnant Women Reg. for ANC Services)', NULL, true, 'DYNAMIC', NULL, '2020-10-12 18:43:01.217', 409, '2019-02-27 13:23:32.817', 78434, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"--Total ANC registered(LMP Based Pregnant Women Reg. for ANC Services)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n member_det as (\n\tselect r.member_id, r.tracking_location_id as loc_id,\n\tm.unique_health_id, m.family_id, \n\tm.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,\n\tto_char(r.lmp_date, ''DD/MM/YYYY'') as lmp\n\t, to_char(r.edd, ''DD/MM/YYYY'') as edd\n\t,to_char(r.date_of_delivery,''DD/MM/YYYY'') as dod\n\tfrom rch_pregnancy_analytics_details r\n\t, location_hierchy_closer_det l\n\t, imt_member m\n\t\n\twhere r.member_id = m.id and r.tracking_location_id  = l.child_id\n\tand l.parent_id = #location_id#\n\tand r.lmp_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date)\n\torder by r.lmp_date\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from member_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language\n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\nmember_det.dod as \"Date of delivery\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;","queryId":686,"fieldName":"tableField","queryUUID":"573918ed-b091-4895-a6ad-6d27b76a0db0","queryParams":"limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"to_month_year","fieldType":"text","queryUUID":null,"displayName":"To Month","queryForParam":"select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year","queryIdForParam":685,"queryUUIDForParam":"70a17801-3749-441e-9cdf-c96182508b0e"},{"isHidden":true,"fieldName":"from_month_year","fieldType":"text","queryUUID":null,"displayName":"From Month","queryForParam":"select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year","queryIdForParam":684,"queryUUIDForParam":"049e2cd2-6005-4d32-9cc9-871b977c57fa"},{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":683,"queryUUIDForParam":"e1303c1e-e2b3-4ec0-bbc4-bb0c8885f06e"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'lmp_total_anc', 'a767773f-bc30-4f51-ba20-d335882c987f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(609, 'Moderate(Anemia Status Of Registered ANC Report)', NULL, true, 'DYNAMIC', NULL, '2020-06-24 21:25:31.707', 78434, '2020-06-24 14:17:00.575', 78434, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1647, "fieldName": "tableField", "queryUUID": "ad7f686a-31a0-45c3-a14c-022fbd172825", "queryParams": ""}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "From Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "To Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' > '' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1646, "queryUUIDForParam": "c4634f64-4f85-4210-8e0d-93137fa826c3"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'moderate_anemia', 'f9081c58-2df2-42ee-9ff8-eead34e13315'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(172, 'FIPV 2 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 16:47:04.258', 1, '2019-02-11 17:58:55.710', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--FIPV 2 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.f_ipv2 is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 301, "fieldName": "tableField", "queryUUID": "146d3fc6-5f36-4cb8-97be-e47ff03a6063", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "isUrlParam": false, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 300, "queryUUIDForParam": "801dedb9-8c88-4176-9c53-725802c7b708"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_fipv2_given_year', '1d015f4f-67fd-4198-9497-6bd2ddd14269'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(193, 'OPV 2 given(Immunization Services Provided to Children with Date of Birth)', NULL, true, 'DYNAMIC', NULL, '2020-05-25 12:02:16.179', 1, '2019-02-13 12:25:58.567', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--OPV 2 given(Immunization Services Provided to Children with Date of Birth)\nwith child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.opv2 is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg(l2.name,'' >'' order by lhcd.depth desc) as aoi\n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2\n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 399, "fieldName": "tableField", "queryUUID": "5a147941-c76f-41cf-be48-f1635bdecab1", "queryParams": "limit_offset,from_month_year,to_month_year,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 398, "queryUUIDForParam": "cde99d67-88eb-43a3-bd51-3aed84222c09"}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\nwhere l1.id = #location_id#", "queryIdForParam": 396, "queryUUIDForParam": "72378510-b470-4710-ab04-c1a65ec5691d"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 397, "queryUUIDForParam": "615ee44c-d40e-4a84-aa4b-359f0ff451e1"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_opv2_monthly', '674240b3-ad87-47e3-8900-5d3f70e7694f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(612, 'No. of children admitted at CMTC/NRC', NULL, true, 'DYNAMIC', NULL, '2020-09-02 16:05:16.907', 60512, '2020-06-29 11:22:04.307', 60512, '{"layout":"dynamicReport1","containers":{"tableContainer":[{"query":"WITH loc_det AS (\n    SELECT\n        child_id as id\n    FROM\n        location_hierchy_closer_det\n    WHERE\n       parent_id = #location_id#\n        AND \"depth\" = 1\n),\ndates AS (\n    SELECT\n        to_date(\n            CASE WHEN ''#from_date#'' = ''null'' THEN\n                NULL\n            ELSE\n                ''#from_date#''\n            END, ''MM-DD-YYYY'') AS from_date,\n        to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date\n),\nlocation_wise_analytics as (\nselect\n\tlh.parent_id as location_id,\n\tsum(ccna.less_than_6_month_boys) as less_than_6_month_boys,\n\tsum(ccna.less_than_6_month_girls) as less_than_6_month_girls,\n\tsum(ccna.more_than_6_month_boys) as more_than_6_month_boys,\n\tsum(ccna.more_than_6_month_girls) as more_than_6_month_girls\nfrom\n\tchild_cmtc_nrc_admited_analytics_location_wise_details ccna,\n    location_hierchy_closer_det lh,\n\tdates\nwhere\nlh.parent_id in (select id from loc_det) and\n\tccna.location_id = lh.child_id\n\tand ccna.month_year between dates.from_date and dates.to_date\ngroup by\n\tlh.parent_id)\nselect\n\tlm.id as hidden_location_id,\n\tlm.english_name as \"Location\",\n\tCOALESCE(less_than_6_month_boys, 0) as \"Less than 6 months Boys\",\n\tCOALESCE(less_than_6_month_girls, 0) as \"Less than 6 months Girls\",\n\tCOALESCE(more_than_6_month_boys, 0) as \"More than 6 months Boys\",\n\tCOALESCE(more_than_6_month_girls, 0) as \"More than 6 months Girls\",\n\tCOALESCE(less_than_6_month_boys + more_than_6_month_boys, 0) as \"Gender wise Total Boys\",\n\tCOALESCE(less_than_6_month_girls + more_than_6_month_girls, 0) as \"Gender wise Total Girls\"\nfrom\n\tloc_det ld\ninner join location_master lm on\n\tlm.id = ld.id\nleft join location_wise_analytics lwa on\n\tlwa.location_id = ld.id\nunion all\nselect\tnull,\n\t''<b>Total</b>'',\n\tCOALESCE(sum(less_than_6_month_boys), 0),\n\tCOALESCE(sum(less_than_6_month_girls), 0),\n\tCOALESCE(sum(more_than_6_month_boys), 0),\n\tCOALESCE(sum(more_than_6_month_girls), 0),\n\tCOALESCE(sum(less_than_6_month_boys) + sum(more_than_6_month_boys), 0),\n\tCOALESCE(sum(less_than_6_month_girls) + sum(more_than_6_month_girls), 0)\nfrom location_wise_analytics","queryId":1651,"fieldName":"tableField","queryUUID":"92e67719-c763-4627-981d-56fb33df98f6","queryParams":"from_date,to_date,location_id"}],"fieldsContainer":[{"fieldName":"date","fieldType":"onlyMonthFromTo","queryUUID":null,"displayName":"Month","isMandatory":true,"queryUUIDForParam":null,"requiredUptoLevel":1},{"fieldName":"location_id","fieldType":"location","queryUUID":null,"displayName":"Location","isMandatory":true,"fetchUptoLevel":"6","queryUUIDForParam":null,"requiredUptoLevel":1,"fetchAccordingToUserAoi":true}]},"isFilterOpen":true,"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'admmited_child_cmtc', 'e4a41cc6-dd5a-4817-996d-10b740d3c999'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(622, 'SAM Followup Visit Report', NULL, true, 'DYNAMIC', NULL, '2020-09-29 14:26:57.551', 60512, '2020-06-29 12:07:25.193', 74724, '{"layout":"dynamicReport1","containers":{"tableContainer":[{"query":"with prefered_language as(\n\tselect case when prefered_language = ''EN'' then true else false end as is_english \n\tfrom um_user\n\twhere id = #loggedInUserId#\n),location_detail as (\n\tselect child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1\n),dates as (\n\tselect to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date,\n\tto_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date\n),follow_up_analytics as (\n\tselect location_detail.child_id,\n\tsum(sam_follow_up_month_1) as sam_follow_up_month_1,\n\tsum(sam_follow_up_month_2) as sam_follow_up_month_2,\n\tsum(sam_follow_up_month_3) as sam_follow_up_month_3,\n\tsum(sam_follow_up_month_6) as sam_follow_up_month_6,\n\tsum(sam_follow_up_month_12) as sam_follow_up_month_12,\n\tsum(sam_follow_up_month_18) as sam_follow_up_month_18,\n\tsum(sam_follow_up_month_24) as sam_follow_up_month_24\n\tfrom location_detail\n\tinner join location_hierchy_closer_det on location_detail.child_id = location_hierchy_closer_det.parent_id\n\tinner join child_cmam_analytics_cure_location_wise_details on location_hierchy_closer_det.child_id = child_cmam_analytics_cure_location_wise_details.location_id\n\tinner join dates on child_cmam_analytics_cure_location_wise_details.month_year between dates.from_date and dates.to_date\n\tgroup by location_detail.child_id\n),details as (\n\tselect row_number() over() as sr_no,\n\tlocation_master.id as hidden_location_id,\n\tcase when prefered_language.is_english and location_master.english_name is not null then location_master.english_name else location_master.name end as loc,\n\tcoalesce(follow_up_analytics.sam_follow_up_month_1,0) as sam_follow_up_month_1,\n\tcoalesce(follow_up_analytics.sam_follow_up_month_2,0) as sam_follow_up_month_2,\n\tcoalesce(follow_up_analytics.sam_follow_up_month_3,0) as sam_follow_up_month_3,\n\tcoalesce(follow_up_analytics.sam_follow_up_month_6,0) as sam_follow_up_month_6,\n\tcoalesce(follow_up_analytics.sam_follow_up_month_12,0) as sam_follow_up_month_12,\n\tcoalesce(follow_up_analytics.sam_follow_up_month_18,0) as sam_follow_up_month_18,\n\tcoalesce(follow_up_analytics.sam_follow_up_month_24,0) as sam_follow_up_month_24\n\tfrom location_detail\n\tinner join location_master on location_master.id = location_detail.child_id\n\tleft join follow_up_analytics on location_detail.child_id = follow_up_analytics.child_id\n    cross join prefered_language\n)\nselect details.loc as \"Location\",\ndetails.hidden_location_id,\ndetails.sam_follow_up_month_1 as \"Follow Up for 1st Month\",\ndetails.sam_follow_up_month_2 as \"Follow Up for 2nd Month\",\ndetails.sam_follow_up_month_3 as \"Follow Up for 3rd Month\",\ndetails.sam_follow_up_month_6 as \"Follow Up for 6th Month\",\ndetails.sam_follow_up_month_12 as \"Follow Up for 12th Month\",\ndetails.sam_follow_up_month_18 as \"Follow Up for 18th Month\",\ndetails.sam_follow_up_month_24 as \"Follow Up for 24th Month\"\nfrom details\nunion all\nselect ''<b>Total<b>'',\n#location_id#,\nsum(details.sam_follow_up_month_1),\nsum(details.sam_follow_up_month_2),\nsum(details.sam_follow_up_month_3),\nsum(details.sam_follow_up_month_6),\nsum(details.sam_follow_up_month_12),\nsum(details.sam_follow_up_month_18),\nsum(details.sam_follow_up_month_24)\nfrom details;","queryId":1661,"fieldName":"tableField","queryUUID":"628fea82-cf3f-44bf-84d1-d5e13470c908","queryParams":"from_date,to_date,loggedInUserId,location_id"}],"fieldsContainer":[{"fieldName":"date","fieldType":"onlyMonthFromTo","queryUUID":null,"displayName":"Month","isMandatory":true,"queryUUIDForParam":null,"requiredUptoLevel":1},{"fieldName":"location_id","fieldType":"location","queryUUID":null,"displayName":"Location","isMandatory":true,"fetchUptoLevel":"6","queryUUIDForParam":null,"requiredUptoLevel":1,"fetchAccordingToUserAoi":true}]},"isFilterOpen":true,"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'sam_follow_up_visit', '1cc871f8-77b4-48ee-90a7-0d80e2f1d559'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(620, 'CMAM Session Monitoring Report', NULL, true, 'DYNAMIC', NULL, '2020-10-01 10:20:49.309', 60512, '2020-06-29 12:00:40.643', 74841, '{"layout":"dynamicReport1","containers":{"tableContainer":[{"query":"with prefered_language as(\n\tselect case when prefered_language = ''EN'' then true else false end as is_english \n\tfrom um_user\n\twhere id = #loggedInUserId#\n),location_detail as (\n\tselect child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1\n),dates as (\n\tselect to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date,\n\tto_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date\n),analytics as (\n\tselect location_detail.child_id,\n\tsum(cmam_directly_enrolled_boys) as cmam_directly_enrolled_boys,\n\tsum(cmam_directly_enrolled_girls) as cmam_directly_enrolled_girls,\n\tsum(fsam_enrolled_boys) as fsam_enrolled_boys,\n\tsum(fsam_enrolled_girls) as fsam_enrolled_girls,\n\tsum(less_than_3_sd_score_boys) as less_than_3_sd_score_boys,\n\tsum(less_than_3_sd_score_girls) as less_than_3_sd_score_girls,\n\tsum(less_than_11_5_muac_boys) as less_than_11_5_muac_boys,\n\tsum(less_than_11_5_muac_girls) as less_than_11_5_muac_girls,\n\tsum(both_boys) as both_boys,\n\tsum(both_girls) as both_girls,\n\tsum(mam_discharged_from_cmtc_boys) as mam_discharged_from_cmtc_boys,\n\tsum(mam_discharged_from_cmtc_girls) as mam_discharged_from_cmtc_girls,\n\tsum(discharged_boys) as discharged_boys,\n\tsum(discharged_girls) as discharged_girls,\n\tsum(cured_sd_score_boys) as cured_sd_score_boys,\n\tsum(cured_sd_score_girls) as cured_sd_score_girls,\n\tsum(cured_muac_boys) as cured_muac_boys,\n\tsum(cured_muac_girls) as cured_muac_girls,\n\tsum(cured_from_cmam_boys) as cured_from_cmam_boys,\n\tsum(cured_from_cmam_girls) as cured_from_cmam_girls,\n\tsum(cured_from_fsam_boys) as cured_from_fsam_boys,\n\tsum(cured_from_fsam_girls) as cured_from_fsam_girls\n\tfrom location_detail\n\tinner join location_hierchy_closer_det on location_detail.child_id = location_hierchy_closer_det.parent_id\n\tinner join child_cmam_analytics_location_wise_details on location_hierchy_closer_det.child_id = child_cmam_analytics_location_wise_details.location_id\n\tinner join dates on child_cmam_analytics_location_wise_details.month_year between dates.from_date and dates.to_date\n\tgroup by location_detail.child_id\n),details as (\n\tselect row_number() over() as sr_no,\n\tlocation_master.id as hidden_location_id,\n\tcase when prefered_language.is_english and location_master.english_name is not null then location_master.english_name else location_master.name end as loc,\n\tcoalesce(analytics.cmam_directly_enrolled_boys,0) as cmam_directly_enrolled_boys,\n\tcoalesce(analytics.cmam_directly_enrolled_girls,0) as cmam_directly_enrolled_girls,\n\tcoalesce(analytics.fsam_enrolled_boys,0) as fsam_enrolled_boys,\n\tcoalesce(analytics.fsam_enrolled_girls,0) as fsam_enrolled_girls,\n\tcoalesce(analytics.cmam_directly_enrolled_boys + analytics.fsam_enrolled_boys,0) as enrolled_total_boys,\n\tcoalesce(analytics.cmam_directly_enrolled_girls + analytics.fsam_enrolled_girls,0) as enrolled_total_girls,\n\tcoalesce(analytics.less_than_3_sd_score_boys,0) as less_than_3_sd_score_boys,\n\tcoalesce(analytics.less_than_3_sd_score_girls,0) as less_than_3_sd_score_girls,\n\tcoalesce(analytics.less_than_11_5_muac_boys,0) as less_than_11_5_muac_boys,\n\tcoalesce(analytics.less_than_11_5_muac_girls,0) as less_than_11_5_muac_girls,\n\tcoalesce(analytics.both_boys,0) as both_boys,\n\tcoalesce(analytics.both_girls,0) as both_girls,\n\tcoalesce(analytics.mam_discharged_from_cmtc_boys) as mam_discharged_from_cmtc_boys,\n\tcoalesce(analytics.mam_discharged_from_cmtc_girls) as mam_discharged_from_cmtc_girls,\n\tcoalesce(analytics.less_than_3_sd_score_boys + analytics.less_than_11_5_muac_boys + mam_discharged_from_cmtc_boys,0) as admission_criteria_total_boys,\n\tcoalesce(analytics.less_than_3_sd_score_boys + analytics.less_than_11_5_muac_boys + mam_discharged_from_cmtc_girls,0) as admission_criteria_total_girls,\n\tcoalesce(analytics.discharged_boys,0) as discharged_boys,\n\tcoalesce(analytics.discharged_girls,0) as discharged_girls,\n\tcoalesce(analytics.cured_sd_score_boys) as cured_sd_score_boys,\n\tcoalesce(analytics.cured_sd_score_girls) as cured_sd_score_girls,\n\tcoalesce(analytics.cured_muac_boys,0) as cured_muac_boys,\n\tcoalesce(analytics.cured_muac_girls,0) as cured_muac_girls,\n\tcoalesce(analytics.cured_from_cmam_boys,0) as cured_from_cmam_boys,\n\tcoalesce(analytics.cured_from_cmam_girls,0) as cured_from_cmam_girls,\n\tcoalesce(analytics.cured_from_fsam_boys,0) as cured_from_fsam_boys,\n\tcoalesce(analytics.cured_from_fsam_girls,0) as cured_from_fsam_girls\n\tfrom location_detail\n\tinner join location_master on location_master.id = location_detail.child_id\n\tleft join analytics on location_detail.child_id = analytics.child_id\n    cross join prefered_language\n)\nselect details.loc as \"Location\",\ndetails.hidden_location_id,\ndetails.cmam_directly_enrolled_boys as \"Directly enrolled in CMAM (Boys)\",\ndetails.cmam_directly_enrolled_girls as \"Directly enrolled in CMAM (Girls)\",\ndetails.fsam_enrolled_boys as \"Enrolled after discharge from CMTC (Boys)\",\ndetails.fsam_enrolled_girls as \"Enrolled after discharge from CMTC (Girls)\",\ndetails.enrolled_total_boys as \"Total Enrolled (Boys)\",\ndetails.enrolled_total_girls as \"Total Enrolled (Girls)\",\ndetails.less_than_3_sd_score_boys as \"Less than -3SD (Boys)\",\ndetails.less_than_3_sd_score_girls as \"Less than -3SD (Girls)\",\ndetails.less_than_11_5_muac_boys as \"Less than 11.5 MUAC (Boys)\",\ndetails.less_than_11_5_muac_girls as \"Less than 11.5 MUAC (Girls)\",\ndetails.both_boys as \"Both (Boys)\",\ndetails.both_girls as \"Both (Girls)\",\ndetails.mam_discharged_from_cmtc_boys as \"MAM discharged from CMTC (Boys)\",\ndetails.mam_discharged_from_cmtc_girls as \"MAM discharged from CMTC (Girls)\",\ndetails.admission_criteria_total_boys as \"Admission Criteria Total (Boys)\",\ndetails.admission_criteria_total_girls as \"Admission Criteria Total (Girls)\",\ndetails.discharged_boys as \"Discharged Children (Boys)\",\ndetails.discharged_girls as \"Discharged Children (Girls)\",\n\tcase when (details.discharged_boys + details.discharged_girls) = 0 or (details.discharged_boys + details.discharged_girls) is null or (details.enrolled_total_boys + details.enrolled_total_girls) = 0 or (details.enrolled_total_boys + details.enrolled_total_girls) is null then 0 else\n\tround((details.discharged_boys + details.discharged_girls) * 100.0/(details.enrolled_total_boys + details.enrolled_total_girls)) end as \"percent_col_Discharged\",\ndetails.cured_sd_score_boys as \"SD Score >= SD2 (Boys)\",\ndetails.cured_sd_score_girls as \"SD Score >= SD2 (Girls)\",\ndetails.cured_muac_boys as \"MUAC > 12.5 (Boys)\",\ndetails.cured_muac_girls as \"MUAC > 12.5 (Girls)\",\ndetails.cured_from_cmam_boys as \"CMAM (Boys)\",\ndetails.cured_from_cmam_girls as \"CMAM (Girls)\",\ndetails.cured_from_fsam_boys as \"Referred from CMTC (Boys)\",\ndetails.cured_from_fsam_girls as \"Referred from CMTC (Girls)\"\nfrom details\nunion all\nselect ''<b>Total<b>'',\n#location_id#,\nsum(details.cmam_directly_enrolled_boys),\nsum(details.cmam_directly_enrolled_girls),\nsum(details.fsam_enrolled_boys),\nsum(details.fsam_enrolled_girls),\nsum(details.enrolled_total_boys),\nsum(details.enrolled_total_girls),\nsum(details.less_than_3_sd_score_boys),\nsum(details.less_than_3_sd_score_girls),\nsum(details.less_than_11_5_muac_boys),\nsum(details.less_than_11_5_muac_girls),\nsum(details.both_boys),\nsum(details.both_girls),\nsum(details.mam_discharged_from_cmtc_boys),\nsum(details.mam_discharged_from_cmtc_girls),\nsum(details.admission_criteria_total_boys),\nsum(details.admission_criteria_total_girls),\nsum(details.discharged_boys),\nsum(details.discharged_girls),\n\tcase when sum(details.discharged_boys + details.discharged_girls) = 0 or sum(details.discharged_boys + details.discharged_girls) is null or sum(details.enrolled_total_boys + details.enrolled_total_girls) = 0 or sum(details.enrolled_total_boys + details.enrolled_total_girls) is null then 0 else\n\tround(sum(details.discharged_boys + details.discharged_girls) * 100.0/sum(details.enrolled_total_boys + details.enrolled_total_girls)) end,\nsum(details.cured_sd_score_boys),\nsum(details.cured_sd_score_girls),\nsum(details.cured_muac_boys),\nsum(details.cured_muac_girls),\nsum(details.cured_from_cmam_boys),\nsum(details.cured_from_cmam_girls),\nsum(details.cured_from_fsam_boys),\nsum(details.cured_from_fsam_girls)\nfrom details;","queryId":1659,"fieldName":"tableField","queryUUID":"022858af-16ba-4fa0-9c59-22e94edd30ac","dataColspan":"<th></th>\n<th colspan=\"6\" style=\"text-align:center\">Type of admission</th>\n<th colspan=\"10\" style=\"text-align:center\">Admission Criteria</th>\n<th></th>\n<th></th>\n<th></th>\n<th colspan=\"4\" style=\"text-align:center\">Cured children</th>\n<th colspan=\"4\" style=\"text-align:center\">Cured children by type of admission</th>","queryParams":"from_date,to_date,loggedInUserId,location_id"}],"fieldsContainer":[{"fieldName":"date","fieldType":"onlyMonthFromTo","queryUUID":null,"displayName":"Month","isMandatory":true,"queryUUIDForParam":null,"requiredUptoLevel":1,"index":0,"ckSetCustomMaxMonth":true,"setCustomMaxMonth":0},{"fieldName":"location_id","fieldType":"location","queryUUID":null,"displayName":"Location","isMandatory":true,"fetchUptoLevel":"6","queryUUIDForParam":null,"requiredUptoLevel":1,"fetchAccordingToUserAoi":true}]},"colspanData":true,"isFilterOpen":true,"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'cmam_session', 'c646f319-0567-42c3-ac44-f17fb9546d35'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(668, 'PHC with less than 10 OPDs(CMdashboard OPD IPD Report)', NULL, true, 'DYNAMIC', NULL, '2020-10-29 17:23:26.587', 74841, '2020-10-28 12:39:27.098', 74841, '{"layout":"dynamicReport1","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","fieldType":"text","isHidden":true,"isMandatory":true,"requiredUptoLevel":1,"displayName":"Location","index":0,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1794,"queryUUIDForParam":"a142d013-5393-486a-bcd3-40ec1f832ca2"}],"tableContainer":[{"fieldName":"tableField","query":"with dates AS (\n     SELECT\n        current_date - 1  AS from_date,\n        current_date - 1  + interval ''1 day'' - interval ''1 millisecond'' as to_date\n), loc_det as (\n    select child_id as loc_id from location_hierchy_closer_det where parent_id = ( case when #location_id# =  ''-1'' then 2 else #location_id# end)\n), health_infra_wise_data as (\n\nselect  hmis.id as hid,\n    hmis.location_id,\n\tcoalesce(fpm.no_of_opd_attended, 0) as no_of_opd_attended \nfrom \nhealth_infrastructure_details hmis \ninner join dates on true\nleft join facility_performance_analytics  fpm on hmis.id = fpm.health_infrastrucutre_id and \n cast(fpm.performance_date as date) between dates.from_date and dates.to_date\nwhere location_id in (select loc_id from loc_det)\nand type in (''899'',''1061'')\norder by hmis.id),\nresult as (\nselect \nd.english_name as \"District\",\nb.english_name as \"Taluka\",\ncase when p.english_name is not null then p.english_name else ''-'' end as \"PHC\",\nhid.no_of_opd_attended as \"No. of OPD Last 1 day\"\n    from location_master lm\n    left join location_level_hierarchy_master lh\n    on lh.id = lm.location_hierarchy_id\n    left join location_master s\n    on lh.level1 = s.id and s.state = ''ACTIVE'' and s.name not ilike ''%delete%''\n    left join location_master d\n    on lh.level3 = d.id and d.state = ''ACTIVE'' and d.name not ilike ''%delete%''\n    left join location_master b\t\n    on lh.level4 = b.id and b.state = ''ACTIVE'' and b.name not ilike ''%delete%''\n    left join location_master p\n    on lh.level5 = p.id and p.state = ''ACTIVE'' and p.name not ilike ''%delete%''\n    inner join health_infra_wise_data hid on hid.location_id = lm.id\n    where hid.no_of_opd_attended < 10\n)\nselect ROW_NUMBER() over ()  as \"Sr No\",\n* from result","queryId":1793,"queryUUID":"97869959-0e09-4ec5-9118-af922c115d8a","queryParams":"location_id"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true}', 'opd_line_list_phc', 'f5ff752a-fd07-4e6a-b771-5351e90a772e'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(625, 'Aanmol Pregnancy Analytic Details', NULL, true, 'DYNAMIC', NULL, '2020-08-10 13:49:07.782', 74841, '2020-07-16 15:50:42.199', 74841, '{"layout":"dynamicReport1","containers":{"tableContainer":[{"query":"with loc_det as (\n\tselect child_id from location_hierchy_closer_det\n\twhere parent_id = #location_id# and \"depth\" = 1\n), dates AS (\n    SELECT\n        to_date(\n            CASE WHEN ''#from_month#'' = ''null'' THEN\n                NULL\n            ELSE\n                ''#from_month#''\n            END, ''MM/DD/YYYY'') AS from_date,\n        to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date\n),\nfinal_det as (\n\tselect lhcd.parent_id ,sum(apad.rch_pregnancy_registration) as rch_pregnancy_registration,\n    sum(apad.anmol_pregnancy_registration) as anmol_pregnancy_registration,\n    sum(apad.anmol_ec_not_registered) as anmol_ec_not_registered,\n    sum(apad.anmol_preg_not_registered) as anmol_preg_not_registered,\nsum(apad.delivery_not_registered) as delivery_not_registered\n\tfrom anmol_pregnancy_analytic_details apad \n\tleft join location_hierchy_closer_det lhcd on lhcd.child_id = apad.location_id\n\tleft join dates on true\n\twhere parent_id in (select child_id from loc_det) \n\tand month_year between dates.from_date and dates.to_date\n\tgroup by lhcd.parent_id\n)\n\nselect \nld.child_id as \"hidden_location_id\",\nlm.english_name as \"Location\", coalesce(rch_pregnancy_registration,0) as \"Rch Pregnancy Registration\"\n,coalesce(anmol_pregnancy_registration,0) as \"Anmol Pregnancy Registration\",\ncoalesce(rch_pregnancy_registration - anmol_pregnancy_registration,0) as \"Difference\",\ncoalesce(anmol_ec_not_registered,0) as \"Eligible Couple Not Registered\",\ncoalesce(anmol_preg_not_registered,0) as \"Pregnancy Not Registered\",\ncoalesce(delivery_not_registered,0) as \"Delivery Not Registered\"\nfrom loc_det ld \nleft join final_det fd on fd.parent_id = ld.child_id\nleft join location_master lm on lm.id = ld.child_id\n\nunion all\nselect \nnull,\n''<b>Total</b>'',\ncoalesce(sum(rch_pregnancy_registration),0),\ncoalesce(sum(anmol_pregnancy_registration),0),\ncoalesce(sum(rch_pregnancy_registration - anmol_pregnancy_registration),0),\ncoalesce(sum(anmol_ec_not_registered),0),\ncoalesce(sum(anmol_preg_not_registered),0),\ncoalesce(sum(delivery_not_registered),0)\nfrom final_det","queryId":1668,"fieldName":"tableField","queryUUID":"1d5cb466-3151-458a-beb2-266bc178c1ed","queryParams":"to_month,from_month,location_id"}],"fieldsContainer":[{"fieldName":"location_id","fieldType":"location","queryUUID":null,"displayName":"Location","isMandatory":true,"fetchUptoLevel":"6","queryUUIDForParam":null,"requiredUptoLevel":1,"fetchAccordingToUserAoi":true,"demographicFilterRequired":true},{"fieldName":"month","fieldType":"onlyMonthFromTo","queryUUID":null,"displayName":"Month","isMandatory":true,"queryUUIDForParam":null,"requiredUptoLevel":1}],"tableFieldContainer":[{"index":0,"isLink":true,"fieldName":"Pregnancy Not Registered","customParam":"","customState":"techo.report.view({\"id\":626,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\"}})","navigationState":null,"locationLevelForLink":"1"},{"index":1,"isLink":true,"fieldName":"Eligible Couple Not Registered","customParam":"","customState":"techo.report.view({\"id\":627,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\"}})","navigationState":null,"locationLevelForLink":"1"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","isBackButtonRequired":false}', 'aanmol_preg_analytic', 'd3b89d64-629e-46f6-9a1f-e9d18f1adcae'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(600, 'Head to Toe Screening of New Borns - Performance', NULL, true, 'DYNAMIC', NULL, '2020-05-07 13:01:12.223', 74841, '2020-05-06 19:19:13.354', 74841, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "", "queryId": 1610, "fieldName": "tableField", "queryUUID": "c7fae20c-eea1-4117-8829-076f8e68a474", "queryParams": "from_date,to_date,location_id"}], "fieldsContainer": [{"fieldName": "location_id", "fieldType": "location", "queryUUID": null, "displayName": "Location", "isMandatory": true, "fetchUptoLevel": "3", "queryUUIDForParam": null, "requiredUptoLevel": 1}, {"fieldName": "date", "fieldType": "onlyMonthFromTo", "queryUUID": null, "displayName": "Month", "isMandatory": true, "queryUUIDForParam": null, "requiredUptoLevel": 1}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'h_to_t_screening', '87484778-7994-4ef2-93e6-f9d33fec2331'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(455, 'GVK : Call effectiveness reports', NULL, true, 'DYNAMIC', NULL, '2020-09-21 17:48:01.639', 66522, '2019-07-16 18:51:45.114', 74841, '{"layout":"dynamicReport1","htmlData":true,"containers":{"tableContainer":[{"query":"with loc_det as (\nselect lm.id as loc_id ,lm.english_name as name,lm.location_code,lh.depth \nfrom location_hierchy_closer_det lh,location_master lm\nwhere lm.id = lh.child_id and lh.parent_id = #location# and lh.depth = 1\n\nunion\n\nselect lm.id as loc_id ,lm.english_name as name,lm.location_code ,0 as depth\nfrom location_master lm\nwhere id = #location# and #location# = 2 and (case when ''all'' in (#call_type#) or ''DUP_MEM_VERI'' in (#call_type#) then true else false end)\n),\ndata_for_report as(\nselect * \nfrom gvk_manage_call_master master \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = master.location_id \ninner join loc_det on lhcd.parent_id = loc_det.loc_id and lhcd.depth <= (case when loc_det.depth = 0 then 0 else 8 end)\nwhere \nmaster.location_id = lhcd.child_id\nand case when ''all'' in (#call_type#) then true else call_type in (#call_type#) end\nand created_on between case when ''#from_date#'' = ''null'' then now() else to_date(''#from_date#'',''MM-DD-YYYY'') end and to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds'' \n\n),\nsuccess_unique_call as (\nselect parent_id, count(distinct(member_id))+count(distinct(user_id)) as success_unique_type_user_call from data_for_report where \ncall_response not in (''com.argusoft.imtecho.gvk.call.cant-talk'',\n\t''com.argusoft.imtecho.gvk.call.no-number-available'',\n\t''com.argusoft.imtecho.gvk.call.wrong-mobile-number'',\n        ''com.argusoft.imtecho.gvk.call.phone-switched-off'',\n        ''com.argusoft.imtecho.gvk.call.unresponsive'',\n        ''com.argusoft.imtecho.gvk.call.not-reachable''\n\n\t) group by parent_id \n),\ncall_response as (\nselect count(1) as total,\nparent_id,\nsum(case when call_response not in (''com.argusoft.imtecho.gvk.call.cant-talk'',\n\t''com.argusoft.imtecho.gvk.call.no-number-available'',\n\t''com.argusoft.imtecho.gvk.call.wrong-mobile-number'',\n        ''com.argusoft.imtecho.gvk.call.phone-switched-off'',\n        ''com.argusoft.imtecho.gvk.call.unresponsive'',\n        ''com.argusoft.imtecho.gvk.call.not-reachable''\n\n\t) then 1 else 0 end ) as success_call,\nsum(case when call_response in \n(\n''com.argusoft.imtecho.gvk.call.cant-talk'',\n\t''com.argusoft.imtecho.gvk.call.no-number-available'',\n\t''com.argusoft.imtecho.gvk.call.wrong-mobile-number'',\n        ''com.argusoft.imtecho.gvk.call.phone-switched-off'',\n  ''com.argusoft.imtecho.gvk.call.unresponsive'',\n        ''com.argusoft.imtecho.gvk.call.not-reachable''\n) then 1 else 0 end ) as umsuccess_call,\nsum(case when call_response = ''com.argusoft.imtecho.gvk.call.cant-talk'' then 1 else 0 end ) as cant_talk_now,\nsum(case when call_response = ''com.argusoft.imtecho.gvk.call.no-number-available'' then 1 else 0 end ) as no_mobile_no,\nsum(case when call_response = ''com.argusoft.imtecho.gvk.call.wrong-mobile-number'' then 1 else 0 end ) as wrong_mobile_no,\nsum(case when call_response = ''com.argusoft.imtecho.gvk.call.unresponsive'' then 1 else 0 end ) as call_unresponsive,\nsum(case when call_response = ''com.argusoft.imtecho.gvk.call.not-reachable'' then 1 else 0 end ) as not_reachable,\nsum(case when call_response = ''com.argusoft.imtecho.gvk.call.phone-switched-off'' then 1 else 0 end ) as phone_switch_off,\ncount(distinct(member_id))+count(distinct(user_id)) as total_unique_type_user_call\nfrom data_for_report group by parent_id ),\nreport_final_data as (\nselect cr.*, suc.success_unique_type_user_call from call_response cr\nleft join success_unique_call suc on\ncr.parent_id=suc.parent_id\n)\nselect \ncase when location.id = 2 then  -2 else location.id end as hidden_location_id,\nlocation.name,\ntotal as \"Total Calls\",\ntotal_unique_type_user_call as \"Unique Total Call\",\nsuccess_call as \"Successful Calls\",\nsuccess_unique_type_user_call as \"Unique Success Call\",\nround(((success_call*100.0)/total),2) as \"Successful %\",\numsuccess_call as \"Unsuccessful calls\",\nround(((umsuccess_call*100.0)/total),2) as \"Unsuccessful %\",\ncant_talk_now as \"Can’t talk right now\",\nno_mobile_no as \"No. not displayed\",\nwrong_mobile_no as \"Wrong number\",\nnot_reachable as \"Not reachable\",\ncall_unresponsive as \"Call unresponsive\",\nphone_switch_off as \"Phone Switch Off\"\nfrom report_final_data call , location_master location\nwhere call.parent_id = location.id\nunion all \nselect\n#location# as hidden_location_id,\n''Grand Total'' ,\nsum(total),\nsum(total_unique_type_user_call),\nsum(success_call),\nsum(success_unique_type_user_call),\nround(((sum(success_call)*100.0)/sum(total)),2) ,\nsum(umsuccess_call),\nround(((sum(umsuccess_call))*100.0/sum(total)),2) ,\nsum(cant_talk_now),\nsum(no_mobile_no),\nsum(wrong_mobile_no),\nsum(not_reachable),\nsum(call_unresponsive),\nsum(phone_switch_off)\nfrom report_final_data","queryId":1204,"htmlData":"#table# Unsuccessful calls = Can’t talk right now + No. not displayed + Wrong number + Phone switched off + Call unresponsive + Not reachable #table#","fieldName":"tableField","queryUUID":"2de12967-d058-483f-87cf-8e4ca8ad8008","queryParams":"from_date,to_date,location,call_type"}],"fieldsContainer":[{"index":0,"query":"with  types as (\nselect ''''''all'''''' as key, ''All'' as value, 1 as ord\nunion\nselect ''''''FHW_HIGH_RISK_CONF'''''' as key,''Fhw highrisk conformation'' as value, 2 as ord\nunion\nselect ''''''IMMUN_VERI'''''' as key, ''Immunization verification'' as value, 3 as ord\nunion\nselect ''''''FAM_VERI'''''' as key, ''Family verification'' as value, 4 as ord\nunion\nselect ''''''PREG_REGI_VERI'''''' as key,''Pregnancy registration verification'' as value, 5 as ord\nunion\nselect ''''''MIG_IN_VERI'''''' as key, ''Member IN migration verification'' as value, 6 as ord\nunion\nselect ''''''HIGH_RISK_VERI'''''' as key, ''Highrisk followup verification'' as value, 7 as ord\nunion\nselect ''''''MIG_OUT_VERI'''''' as key,''Member OUT migration verification'' as value, 8 as ord\nunion\nselect ''''''DUP_MEM_VERI'''''' as key, ''Duplicate member verification'' as value, 9 as ord\nunion\nselect ''''''FHW_DEL_VERI'''',''''FHW_TT_VERI'''',''''FHW_CH_SER_VERI'''''' as key,''Beneficiary Service Verification'' as value, 10 as ord)\nselect * from types order by ord","isQuery":true,"queryId":1209,"fieldName":"call_type","fieldType":"comboForReport","queryUUID":"dd9af742-cebe-4de6-8fce-f6d3def0d004","displayName":"Call effectiveness","isMandatory":true,"queryParams":null,"queryForParam":"","queryIdForParam":"","availableOptions":[],"queryUUIDForParam":null,"requiredUptoLevel":1},{"index":0,"fieldName":"location","fieldType":"location","queryUUID":null,"displayName":"Location","isMandatory":true,"fetchUptoLevel":"5","queryUUIDForParam":null,"requiredUptoLevel":1,"fetchAccordingToUserAoi":true},{"index":2,"fieldName":"date","fieldType":"dateFromTo","queryUUID":null,"displayName":"Date","isMandatory":true,"queryUUIDForParam":null,"requiredUptoLevel":1}],"tableFieldContainer":[{"index":0,"isLink":true,"fieldName":"Unsuccessful calls","customParam":"","customState":"techo.report.view({\"id\":456,\"queryParams\":{\"location_id\":@hidden_location_id@, \"call_type\":\"$call_type$\",\"from_date\":\"$from_date$\", \"to_date\":\"$to_date$\"}})","navigationState":null,"locationLevelForLink":""},{"index":1,"isLink":true,"fieldName":"Can’t talk right now","customParam":"","customState":"techo.report.view({\"id\":457,\"queryParams\":{\"location_id\":@hidden_location_id@, \"call_type\":\"$call_type$\",\"from_date\":\"$from_date$\", \"to_date\":\"$to_date$\"}})","navigationState":null,"locationLevelForLink":""},{"index":2,"isLink":true,"fieldName":"No. not displayed","customParam":"","customState":"techo.report.view({\"id\":458,\"queryParams\":{\"location_id\":@hidden_location_id@, \"call_type\":\"$call_type$\",\"from_date\":\"$from_date$\", \"to_date\":\"$to_date$\"}})","navigationState":null,"locationLevelForLink":""},{"index":3,"isLink":true,"fieldName":"Wrong number","customParam":"","customState":"techo.report.view({\"id\":459,\"queryParams\":{\"location_id\":@hidden_location_id@, \"call_type\":\"$call_type$\",\"from_date\":\"$from_date$\", \"to_date\":\"$to_date$\"}})","navigationState":null,"locationLevelForLink":""},{"index":4,"isLink":true,"fieldName":"Not reachable","customParam":"","customState":"techo.report.view({\"id\":485,\"queryParams\":{\"location_id\":@hidden_location_id@, \"call_type\":\"$call_type$\",\"from_date\":\"$from_date$\", \"to_date\":\"$to_date$\"}})","navigationState":null},{"index":5,"isLink":true,"fieldName":"Call unresponsive","customParam":"","customState":"techo.report.view({\"id\":486,\"queryParams\":{\"location_id\":@hidden_location_id@, \"call_type\":\"$call_type$\",\"from_date\":\"$from_date$\", \"to_date\":\"$to_date$\"}})","navigationState":null},{"index":6,"isLink":true,"fieldName":"Phone Switch Off","customParam":"","customState":"techo.report.view({\"id\":487,\"queryParams\":{\"location_id\":@hidden_location_id@, \"call_type\":\"$call_type$\",\"from_date\":\"$from_date$\", \"to_date\":\"$to_date$\"}})","navigationState":null}]},"isFilterOpen":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","selectedContainer":"tableContainer"}', 'gvk_call_eff_report', '25649a7d-b591-403c-8b30-4a0700b48fd2'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(650, 'Non-respondants (CMTC/NRC Facility Monitoring -  V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 17:03:27.817', 60512, '2020-09-17 15:52:21.049', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isMandatory":false,"requiredUptoLevel":"","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1741,"queryUUIDForParam":"dfc22af0-f48e-4983-a05c-2a612dee6bc2"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_discharge_not_15_weight_gain\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1742,"queryUUID":"ca46d92e-8755-4c00-b8d5-c59715c4062c","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', 'non-resp_fac_mon', '9306b492-672f-49ff-8420-25fad0be03d8'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(127, 'Extreme Age(Less than 18 and more than 35 years)(High Risk Mother-Present Pregnancy Complication)', NULL, true, 'DYNAMIC', NULL, '2019-10-03 16:10:55.736', 58981, '2019-01-22 19:21:54.377', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \n\t\twhen report_preferred_language = ''EN'' then true  \n\t\telse false \n\tend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\n,dates as (\n\tselect to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date\n\t,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date\n)\n, member_det as (\n\tselect r.member_id, r.native_location_id as loc_id,\n\tm.unique_health_id, m.family_id, \n\tm.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,\n\tto_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd\n\tfrom rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, rch_pregnancy_registration_det p, dates d\n\twhere r.member_id = m.id and r.native_location_id  = l.child_id and m.cur_preg_reg_det_id = p.id\n\tand l.parent_id = #location_id#\n\tand r.reg_service_date  between d.from_date and d.to_date\n\tand r.cur_extreme_age = true\n\t--and r.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')\n\t--and r.preg_reg_state in (''PENDING'',''PREGNANT'')\n\torder by p.lmp_date\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from member_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 170, "fieldName": "tableField", "queryUUID": "516969f3-81f0-4e2b-b7a7-d1ec8f06f0f0", "queryParams": "to_month,limit_offset,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 169, "queryUUIDForParam": "16476702-6bf3-472c-8049-a6b603eba2ac"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'hrm_extreme_age', 'd2aec1a0-81bd-419a-8ced-e86af125aa11'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(652, 'Discharge from facility (CMTC/NRC Follow-up Visit - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 17:02:52.524', 60512, '2020-09-18 11:22:43.945', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1745,"queryUUIDForParam":"9fd2dff4-f3f6-4118-ab76-35ec2c4ddd25"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_discharge_id is not null\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1746,"queryUUID":"71cc77ef-2e57-4748-aa56-b7ef16c61981","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', 'discharge_fol_mon', 'a005dbf1-f17a-445a-91ab-efb997e2c4b9'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(671, '2 ANC and 3 ANC HR PW registered (PMSMA Services Statistics Report during the year)', NULL, true, 'DYNAMIC', NULL, '2020-11-04 14:17:51.965', 78434, '2020-11-03 19:23:50.237', 78434, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","isHidden":true,"index":0,"queryIdForParam":1804,"queryUUIDForParam":"a589f065-a654-4d39-bd3b-c73a29534878"},{"fieldName":"financial_year","displayName":"Financial Year","fieldType":"text","isHidden":true,"index":1}],"tableContainer":[{"fieldName":"tableField","query":"-- 2 ANC and 3 ANC HR PW registered (PMSMA Services Statistics Report during the year)\nwith dates as (\n    select case\n            when ''#financial_year#'' = ''null'' then null\n            else cast(\n                concat(substr(''#financial_year#'', 1, 4), ''-04-01'') as date\n            )\n        end as from_date,\n        case\n            when ''#financial_year#'' = ''null'' then null\n            when cast(\n                concat(substr(''#financial_year#'', 6, 10), ''-03-31'') as date\n            ) <= current_date then cast(\n                concat(substr(''#financial_year#'', 6, 10), ''-03-31'') as date\n            )\n            else current_date\n        end as to_date\n),\nlocation_det as (\n    select lm.id,\n        lm.english_name as name,\n        lm.location_code\n    from location_hierchy_closer_det lh1,\n        location_master lm\n    where lh1.parent_id = #location_id#\n        and lm.id = lh1.child_id\n),\nhigh_risk_member as (\n    (\n        select rpa.member_id,\n            rpa.pregnancy_reg_id,\n            concat(\n                rpa.member_name,\n                '' ('',\n                rpa.unique_health_id,\n                '')''\n            ) as member_name,\n            get_location_hierarchy(rpa.member_current_location_id) as location_name,\n            to_char(rpa.lmp_date, ''DD-MM-YYYY'') as lmp_date,\n            to_char(preg.edd, ''DD-MM-YYYY'') as edd_date,\n            case\n                when (\n                    (\n                        cast(rpa.lmp_date + interval ''90 days'' as date),\n                        cast(rpa.lmp_date + interval ''180 days'' as date)\n                    ) overlaps (\n                        cast(dates.from_date as date),\n                        cast(dates.to_date as date)\n                    )\n                ) then rpa.lmp_date + interval ''90 days''\n                else null\n            end as trimester_start_date,\n            case\n                when (\n                    (\n                        cast(rpa.lmp_date + interval ''90 days'' as date),\n                        cast(rpa.lmp_date + interval ''180 days'' as date)\n                    ) overlaps (\n                        cast(dates.from_date as date),\n                        cast(dates.to_date as date)\n                    )\n                ) then rpa.lmp_date + interval ''180 days''\n                else null\n            end as trimester_end_date,\n            2 as current_trimester,\n            string_agg(to_char(anc.service_date, ''DD-MM-YYYY''), '','') as service_dates\n        from rch_pregnancy_analytics_details rpa\n            inner join dates on (\n                rpa.death_date is null\n                or rpa.death_date >= dates.from_date\n            )\n            and (\n                date_of_delivery is null\n                or date_of_delivery >= dates.from_date\n            )\n            and (\n                (\n                    cast(rpa.lmp_date + interval ''90 days'' as date),\n                    cast(rpa.lmp_date + interval ''180 days'' as date)\n                ) overlaps (\n                    cast(dates.from_date as date),\n                    cast(dates.to_date as date)\n                )\n            )\n            inner join rch_pregnancy_registration_det preg on preg.id = rpa.pregnancy_reg_id\n            left join rch_anc_master anc on anc.pregnancy_reg_det_id = rpa.pregnancy_reg_id\n            and anc.examined_by_gynecologist = true\n            and anc.is_from_web = true\n            and anc.service_date between (\n                case\n                    when (\n                        (\n                            cast(rpa.lmp_date + interval ''90 days'' as date),\n                            cast(rpa.lmp_date + interval ''180 days'' as date)\n                        ) overlaps (\n                            cast(dates.from_date as date),\n                            cast(dates.to_date as date)\n                        )\n                    ) then rpa.lmp_date + interval ''90 days''\n                    else null\n                end\n            )\n            and (\n                case\n                    when (\n                        (\n                            cast(rpa.lmp_date + interval ''90 days'' as date),\n                            cast(rpa.lmp_date + interval ''180 days'' as date)\n                        ) overlaps (\n                            cast(dates.from_date as date),\n                            cast(dates.to_date as date)\n                        )\n                    ) then rpa.lmp_date + interval ''180 days''\n                    else null\n                end\n            )\n        where rpa.high_risk_mother = true\n            and rpa.member_current_location_id in (\n                select id\n                from location_det\n            )\n        group by rpa.pregnancy_reg_id,\n            preg.edd,\n            dates.from_date,\n            dates.to_date\n    )\n    union all\n    (\n        select rpa.member_id,\n            rpa.pregnancy_reg_id,\n            concat(\n                rpa.member_name,\n                '' ('',\n                rpa.unique_health_id,\n                '')''\n            ) as member_name,\n            get_location_hierarchy(rpa.member_current_location_id) as location_name,\n            to_char(rpa.lmp_date, ''DD-MM-YYYY'') as lmp_date,\n            to_char(preg.edd, ''DD-MM-YYYY'') as edd_date,\n            case\n                when (\n                    (\n                        cast(rpa.lmp_date + interval ''180 days'' as date),\n                        cast(rpa.lmp_date + interval ''270 days'' as date)\n                    ) overlaps (\n                        cast(dates.from_date as date),\n                        cast(dates.to_date as date)\n                    )\n                ) then rpa.lmp_date + interval ''181 days''\n                else null\n            end as trimester_start_date,\n            case\n                when (\n                    (\n                        cast(rpa.lmp_date + interval ''180 days'' as date),\n                        cast(rpa.lmp_date + interval ''270 days'' as date)\n                    ) overlaps (\n                        cast(dates.from_date as date),\n                        cast(dates.to_date as date)\n                    )\n                ) then rpa.lmp_date + interval ''270 days''\n                else null\n            end as trimester_end_date,\n            3 as current_trimester,\n            string_agg(to_char(anc.service_date, ''DD-MM-YYYY''), '','') as service_dates\n        from rch_pregnancy_analytics_details rpa\n            inner join dates on (\n                rpa.death_date is null\n                or rpa.death_date >= dates.from_date\n            )\n            and (\n                date_of_delivery is null\n                or date_of_delivery >= dates.from_date\n            )\n            and (\n                (\n                    cast(rpa.lmp_date + interval ''180 days'' as date),\n                    cast(rpa.lmp_date + interval ''270 days'' as date)\n                ) overlaps (\n                    cast(dates.from_date as date),\n                    cast(dates.to_date as date)\n                )\n            )\n            inner join rch_pregnancy_registration_det preg on preg.id = rpa.pregnancy_reg_id\n            left join rch_anc_master anc on anc.pregnancy_reg_det_id = rpa.pregnancy_reg_id\n            and anc.examined_by_gynecologist = true\n            and anc.is_from_web = true\n            and anc.service_date between (\n                case\n                    when (\n                        (\n                            cast(rpa.lmp_date + interval ''180 days'' as date),\n                            cast(rpa.lmp_date + interval ''270 days'' as date)\n                        ) overlaps (\n                            cast(dates.from_date as date),\n                            cast(dates.to_date as date)\n                        )\n                    ) then rpa.lmp_date + interval ''181 days''\n                    else null\n                end\n            )\n            and (\n                case\n                    when (\n                        (\n                            cast(rpa.lmp_date + interval ''180 days'' as date),\n                            cast(rpa.lmp_date + interval ''270 days'' as date)\n                        ) overlaps (\n                            cast(dates.from_date as date),\n                            cast(dates.to_date as date)\n                        )\n                    ) then rpa.lmp_date + interval ''270 days''\n                    else null\n                end\n            )\n        where rpa.high_risk_mother = true\n            and rpa.member_current_location_id in (\n                select id\n                from location_det\n            )\n        group by rpa.pregnancy_reg_id,\n            preg.edd,\n            dates.from_date,\n            dates.to_date\n    )\n    order by pregnancy_reg_id #limit_offset#\n)\nselect ROW_NUMBER() over () + cast(\n        SUBSTRING(\n            ''#limit_offset#'',\n            POSITION(''offset'' in ''#limit_offset#'') + 7\n        ) as int\n    ) as \"Sr No\",\n    location_name as \"Location Name\",\n    member_name as \"Member Name\",\n    lmp_date as \"LMP Date\",\n    edd_date as \"EDD Date\",\n    case\n        when current_trimester = 2 then ''2nd''\n        when current_trimester = 3 then ''3rd''\n        else ''-''\n    end as \"ANC Trimester\",\n    to_char(trimester_start_date, ''DD-MM-YYYY'') as \"Trimester Start Date\",\n    to_char(trimester_end_date, ''DD-MM-YYYY'') as \"Trimester End Date\",\n    case\n        when service_dates is null then ''-''\n        else service_dates\n    end as \"Trimester PMSMA Services Given\"\nfrom high_risk_member;","queryId":1805,"queryUUID":"b147f4e3-1bee-4c74-b75f-edbe45d9c799","queryParams":"limit_offset,financial_year,location_id"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":""}', 'total_pmsma_yearly', '498a69f7-0a57-4a6f-81fd-3813101dd539'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(672, 'No. of PMSMA service given to 2 ANC and 3 ANC HR PW reg. (PMSMA Services Statistics Report during the year)', NULL, true, 'DYNAMIC', NULL, '2020-11-04 14:18:29.040', 78434, '2020-11-03 19:57:23.860', 78434, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1806,"queryUUIDForParam":"c4424055-fde5-48b1-b4eb-46f344d10e65"},{"fieldName":"financial_year","displayName":"Financial Year","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"-- No. of PMSMA service given to 2 ANC and 3 ANC HR PW reg. (PMSMA Services Statistics Report during the year)\nwith dates as (\n    select case\n            when ''#financial_year#'' = ''null'' then null\n            else cast(\n                concat(substr(''#financial_year#'', 1, 4), ''-04-01'') as date\n            )\n        end as from_date,\n        case\n            when ''#financial_year#'' = ''null'' then null\n            when cast(\n                concat(substr(''#financial_year#'', 6, 10), ''-03-31'') as date\n            ) <= current_date then cast(\n                concat(substr(''#financial_year#'', 6, 10), ''-03-31'') as date\n            )\n            else current_date\n        end as to_date\n),\nlocation_det as (\n    select lm.id,\n        lm.english_name as name,\n        lm.location_code\n    from location_hierchy_closer_det lh1,\n        location_master lm\n    where lh1.parent_id = #location_id#\n        and lm.id = lh1.child_id\n),\nhigh_risk_member as (\n    (\n        select rpa.member_id,\n            rpa.pregnancy_reg_id,\n            concat(\n                rpa.member_name,\n                '' ('',\n                rpa.unique_health_id,\n                '')''\n            ) as member_name,\n            get_location_hierarchy(rpa.member_current_location_id) as location_name,\n            to_char(rpa.lmp_date, ''DD-MM-YYYY'') as lmp_date,\n            to_char(preg.edd, ''DD-MM-YYYY'') as edd_date,\n            case\n                when (\n                    (\n                        cast(rpa.lmp_date + interval ''90 days'' as date),\n                        cast(rpa.lmp_date + interval ''180 days'' as date)\n                    ) overlaps (\n                        cast(dates.from_date as date),\n                        cast(dates.to_date as date)\n                    )\n                ) then rpa.lmp_date + interval ''90 days''\n                else null\n            end as trimester_start_date,\n            case\n                when (\n                    (\n                        cast(rpa.lmp_date + interval ''90 days'' as date),\n                        cast(rpa.lmp_date + interval ''180 days'' as date)\n                    ) overlaps (\n                        cast(dates.from_date as date),\n                        cast(dates.to_date as date)\n                    )\n                ) then rpa.lmp_date + interval ''180 days''\n                else null\n            end as trimester_end_date,\n            2 as current_trimester,\n            string_agg(to_char(anc.service_date, ''DD-MM-YYYY''), '','') as service_dates\n        from rch_pregnancy_analytics_details rpa,\n            dates,\n            rch_anc_master anc,\n            rch_pregnancy_registration_det preg\n        where rpa.high_risk_mother = true\n            and rpa.pregnancy_reg_id = anc.pregnancy_reg_det_id\n            and preg.id = rpa.pregnancy_reg_id\n            and (\n                rpa.death_date is null\n                or rpa.death_date >= dates.from_date\n            )\n            and (\n                date_of_delivery is null\n                or date_of_delivery >= dates.from_date\n            )\n            and (\n                (\n                    cast(rpa.lmp_date + interval ''90 days'' as date),\n                    cast(rpa.lmp_date + interval ''180 days'' as date)\n                ) overlaps (\n                    cast(dates.from_date as date),\n                    cast(dates.to_date as date)\n                )\n            )\n            and rpa.member_current_location_id in (\n                select id\n                from location_det\n            )\n            and anc.is_from_web = true\n            and anc.examined_by_gynecologist = true\n            and anc.service_date between case\n                when (\n                    (\n                        cast(rpa.lmp_date + interval ''90 days'' as date),\n                        cast(rpa.lmp_date + interval ''180 days'' as date)\n                    ) overlaps (\n                        cast(dates.from_date as date),\n                        cast(dates.to_date as date)\n                    )\n                ) then rpa.lmp_date + interval ''90 days''\n                else null\n            end\n            and case\n                when (\n                    (\n                        cast(rpa.lmp_date + interval ''90 days'' as date),\n                        cast(rpa.lmp_date + interval ''180 days'' as date)\n                    ) overlaps (\n                        cast(dates.from_date as date),\n                        cast(dates.to_date as date)\n                    )\n                ) then rpa.lmp_date + interval ''180 days''\n                else null\n            end\n        group by rpa.pregnancy_reg_id,\n            preg.edd,\n            dates.from_date,\n            dates.to_date\n    )\n    union all\n    (\n        select rpa.member_id,\n            rpa.pregnancy_reg_id,\n            concat(\n                rpa.member_name,\n                '' ('',\n                rpa.unique_health_id,\n                '')''\n            ) as member_name,\n            get_location_hierarchy(rpa.member_current_location_id) as location_name,\n            to_char(rpa.lmp_date, ''DD-MM-YYYY'') as lmp_date,\n            to_char(preg.edd, ''DD-MM-YYYY'') as edd_date,\n            case\n                when (\n                    (\n                        cast(rpa.lmp_date + interval ''180 days'' as date),\n                        cast(rpa.lmp_date + interval ''270 days'' as date)\n                    ) overlaps (\n                        cast(dates.from_date as date),\n                        cast(dates.to_date as date)\n                    )\n                ) then rpa.lmp_date + interval ''181 days''\n                else null\n            end as trimester_start_date,\n            case\n                when (\n                    (\n                        cast(rpa.lmp_date + interval ''180 days'' as date),\n                        cast(rpa.lmp_date + interval ''270 days'' as date)\n                    ) overlaps (\n                        cast(dates.from_date as date),\n                        cast(dates.to_date as date)\n                    )\n                ) then rpa.lmp_date + interval ''270 days''\n                else null\n            end as trimester_end_date,\n            3 as current_trimester,\n            string_agg(to_char(anc.service_date, ''DD-MM-YYYY''), '','') as service_dates\n        from rch_pregnancy_analytics_details rpa,\n            dates,\n            rch_anc_master anc,\n            rch_pregnancy_registration_det preg\n        where rpa.high_risk_mother = true\n            and rpa.pregnancy_reg_id = anc.pregnancy_reg_det_id\n            and preg.id = rpa.pregnancy_reg_id\n            and (\n                rpa.death_date is null\n                or rpa.death_date >= dates.from_date\n            )\n            and (\n                date_of_delivery is null\n                or date_of_delivery >= dates.from_date\n            )\n            and (\n                (\n                    cast(rpa.lmp_date + interval ''180 days'' as date),\n                    cast(rpa.lmp_date + interval ''270 days'' as date)\n                ) overlaps (\n                    cast(dates.from_date as date),\n                    cast(dates.to_date as date)\n                )\n            )\n            and rpa.member_current_location_id in (\n                select id\n                from location_det\n            )\n            and anc.is_from_web = true\n            and anc.examined_by_gynecologist = true\n            and anc.service_date between case\n                when (\n                    (\n                        cast(rpa.lmp_date + interval ''180 days'' as date),\n                        cast(rpa.lmp_date + interval ''270 days'' as date)\n                    ) overlaps (\n                        cast(dates.from_date as date),\n                        cast(dates.to_date as date)\n                    )\n                ) then rpa.lmp_date + interval ''181 days''\n                else null\n            end\n            and case\n                when (\n                    (\n                        cast(rpa.lmp_date + interval ''180 days'' as date),\n                        cast(rpa.lmp_date + interval ''270 days'' as date)\n                    ) overlaps (\n                        cast(dates.from_date as date),\n                        cast(dates.to_date as date)\n                    )\n                ) then rpa.lmp_date + interval ''270 days''\n                else null\n            end\n        group by rpa.pregnancy_reg_id,\n            preg.edd,\n            dates.from_date,\n            dates.to_date\n    )\n    order by pregnancy_reg_id #limit_offset#\n)\nselect ROW_NUMBER() over () + cast(\n        SUBSTRING(\n            ''#limit_offset#'',\n            POSITION(''offset'' in ''#limit_offset#'') + 7\n        ) as int\n    ) as \"Sr No\",\n    location_name as \"Location Name\",\n    member_name as \"Member Name\",\n    lmp_date as \"LMP Date\",\n    edd_date as \"EDD Date\",\n    case\n        when current_trimester = 2 then ''2nd''\n        when current_trimester = 3 then ''3rd''\n        else ''-''\n    end as \"ANC Trimester\",\n    to_char(trimester_start_date, ''DD-MM-YYYY'') as \"Trimester Start Date\",\n    to_char(trimester_end_date, ''DD-MM-YYYY'') as \"Trimester End Date\",\n    case\n        when service_dates is null then ''-''\n        else service_dates\n    end as \"Trimester PMSMA Services Given\"\nfrom high_risk_member;","queryId":1807,"queryUUID":"61f5ca0a-a11e-4772-9efe-3e7fbd63ad80","queryParams":"limit_offset,financial_year,location_id"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":""}', 'each_pmsma_yearly', '9bb0a799-3e2f-47e7-958c-cd964f1ffbac'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(657, 'Follow up visit 1 (CMTC/NRC Follow-up Visit - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 17:01:24.554', 60512, '2020-09-18 12:04:43.507', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1755,"queryUUIDForParam":"100b52a8-9af1-49ad-a30f-32eafe87732a"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_follow_up_visit_1 is not null\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1756,"queryUUID":"e6211ede-5d18-4d50-9d50-7eeab4987d2a","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', 'fol_1_fol_mon', '5a76ac6c-e40f-46b6-8ca3-24900f4cb2f2'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(457, 'Can''t talk (GVK : Call effectiveness reports)', NULL, true, 'DYNAMIC', NULL, '2020-11-03 16:49:50.855', 66522, '2019-07-16 20:25:53.290', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with unsuccess_calls as(\n\tselect \n\t*\n\tfrom gvk_manage_call_master master\n\twhere call_response in (''com.argusoft.imtecho.gvk.call.cant-talk'')\n\tand location_id in (select child_id from location_hierchy_closer_det where parent_id = (case when #location_id# = -2 then 2 else #location_id# end) \nand depth <= (case when #location_id# = -2 then 0 else 8 end))\nand \ncase \nwhen ''all'' = ''#call_type#'' then true \nwhen ''#call_type#'' = ''FHW_CH_SER_VERI'' then call_type in (''FHW_CH_SER_VERI'',''FHW_DEL_VERI'',''FHW_TT_VERI'',''FHW_CH_SER_PREG_VERI'')\nelse call_type = ''#call_type#'' end\nand created_on between case when ''#from_date#'' = ''null'' then now() else to_date(''#from_date#'',''MM-DD-YYYY'') end and to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds'' \norder by id #limit_offset#\n\n),\nunsuccess_calls_details as (\n\tselect \n\tconcat(im.first_name,'' '',im.last_name, ''('',im.unique_health_id ,'')'') as name,\n\tmaster.mobile_number,\nmaster.created_on,\nmaster.call_type,\n\tmaster.location_id,\n\tmaster.id,\n\tmaster.created_by,\n\tmaster.call_response\n\tfrom unsuccess_calls master\n\tinner join imt_member im on im.id = master.member_id\n\twhere call_response != ''com.argusoft.imtecho.gvk.call.success''\n\t\n\tunion  all\n\tselect \n\tconcat(uu.first_name,'' '',uu.last_name, ''('',role.name ,'')'') as name,\n\tmaster.mobile_number,\n\tmaster.created_on,\n\tmaster.call_type,\n\tmaster.location_id,\n\tmaster.id,\n\tmaster.created_by,\n\tmaster.call_response\n\tfrom unsuccess_calls master\n\tinner join um_user uu on uu.id = master.user_id\n\tinner join um_role_master role on uu.role_id = role.id \n\twhere call_response != ''com.argusoft.imtecho.gvk.call.success''\n\t\n        union  all\n\n\tselect \n\tcase when im.id is null then imf.family_id else concat(im.first_name,'' '',im.last_name, '' ('',imf.family_id ,'')'') end as name,\n\tmaster.mobile_number,\nmaster.created_on,\nmaster.call_type,\n\tmaster.location_id,\n\tmaster.id,\n\tmaster.created_by,\n\tmaster.call_response\n\tfrom unsuccess_calls master\n\tinner join imt_family imf on imf.family_id = master.family_id\n\tleft join imt_member im on im.family_id = imf.family_id and im.family_head = true\n\twhere call_response != ''com.argusoft.imtecho.gvk.call.success''\n\t\n),\nresponse as (\nselect \nmaster.name,\nget_location_hierarchy(master.location_id) as Location_hierarchy,\ncase when call_response = ''com.argusoft.imtecho.gvk.call.no-number-available'' then ''No number available''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.cant-talk'' then ''Can''''t talk''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.wrong-mobile-number'' then ''Wrong mobile number''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-asha-husband'' then ''Number belongs to asha''\t-- todo\n--when call_response = ''com.argusoft.imtecho.gvk.call.not-interested-in-treatment'' then ''Not intersted in treatment''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.unresponsive'' then ''Unreponsive''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-husband'' then ''Number belongs to anm'' \nwhen call_response = ''com.argusoft.imtecho.gvk.call.not-reachable'' then ''Not reachable''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.phone-switched-off'' then ''Phone switched off''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-collection-pending'' then ''Number collection pending''\t\t\t-- todo\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary-husband'' then ''number of beneficiary''\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary''\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-family-member''\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-neighbour''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-or-anm-husband'' then ''ANM or husband''\t\t\t-- todo\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-ashah-or-asha-husband'' then ''Asha or husband''\t\t\t-- todo\nelse ''Other'' end reason,\nmaster.mobile_number\\:\\:json,\nmaster.location_id,\nmaster.created_on,\nmaster.call_type,\nmaster.created_by,\nmaster.id\nfrom unsuccess_calls_details master\n ),\nmo as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code in (''mo_phc'',''mo_uphc''))\n),\nmo_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tmo group by location_id\n),\nmo_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from mo_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\nasha as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code = ''ASHA'')\n    where uu.state = ''ACTIVE''\n),\nasha_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tasha group by location_id\n),\nasha_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from asha_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\nanm as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code = ''FHW'')\n    where uu.state = ''ACTIVE''\n),\nanm_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tanm group by location_id\n),\nanm_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from anm_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\n\ncontacts as (\n\tselect json_array_elements(mobile_number)->>''mobileNumber'' as contact ,json_array_elements(mobile_number)->>''isCalled'' as isCalled ,id\n\tfrom response where mobile_number is not null ),\ncontacts_display_date as (\t\n\tselect string_agg(\n\tcase when isCalled=''true'' then concat(''<b>'',contact,''</b>'') else contact end\n\t,'','') as contact,id from contacts\n\tgroup by id)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nresp.name as \"Beneficiary Name (ID)\",\nLocation_hierarchy as \"Location\",\ncontacts.contact as \"Dialed Number\",\nto_char(resp.created_on,''DD-MM-YYYY HH:MI PM'') as  \"Call Date\",\n\ncase when resp.call_type = ''FHW_HIGH_RISK_CONF'' then ''FHW highrisk conformation''\nwhen resp.call_type = ''IMMUN_VERI'' then ''Immunization verification''\nwhen resp.call_type = ''FAM_VERI'' then ''Family verification''\nwhen resp.call_type = ''PREG_REGI_VERI'' then ''Pregnancy registration verification''\nwhen resp.call_type = ''HIGH_RISK_VERI'' then ''Highrisk followup verification''\nwhen resp.call_type = ''MIG_IN_VERI'' then ''Member IN migration verification''\nwhen resp.call_type = ''MIG_OUT_VERI'' then ''Member OUT migration verification''\nwhen resp.call_type = ''DUP_MEM_VERI'' then ''Duplicate member verification'' end as \"Call Type\",\nresp.reason as \"Reason for Unsuccessful Calling\",\nmo.name as \"MO Details\",\nanm.name as \"ANM Details\",\nasha.name as \"ASHA Details\"\n,concat(um.first_name, '' '', um.last_name) as \"RO Details\"\n--fhw.name\nfrom response resp\nleft join contacts_display_date contacts on resp.id = contacts.id\nleft join mo_details mo on mo.location_id = resp.location_id\nleft join anm_details anm on anm.location_id = resp.location_id\nleft join asha_details asha on asha.location_id = resp.location_id\nleft join um_user um on resp.created_by = um.id","queryId":1206,"fieldName":"tableField","queryUUID":"914bac20-7291-4fc2-a28f-26e5ab55e5f2","queryParams":"limit_offset,from_date,to_date,call_type,location_id"}],"fieldsContainer":[{"index":0,"isHidden":true,"fieldName":"call_type","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"Call effectiveness","queryForParam":"with  types as (\nselect ''all'' as key, ''All'' as value, 1 as ord\nunion\nselect ''FHW_HIGH_RISK_CONF'' as key,''Fhw highrisk conformation'' as value, 2 as ord\nunion\nselect ''IMMUN_VERI'' as key, ''Immunization verification'' as value, 3 as ord\nunion\nselect ''FAM_VERI'' as key, ''Family verification'' as value, 4 as ord\nunion\nselect ''PREG_REGI_VERI'' as key,''Pregnancy registration verification'' as value, 5 as ord\nunion\nselect ''MIG_IN_VERI'' as key, ''Member IN migration verification'' as value, 6 as ord\nunion\nselect ''HIGH_RISK_VERI'' as key, ''Highrisk followup verification'' as value, 7 as ord\nunion\nselect ''MIG_OUT_VERI'' as key,''Member OUT migration verification'' as value, 8 as ord\nunion\nselect ''DUP_MEM_VERI'' as key, ''Duplicate member verification'' as value, 9 as ord)\nselect value as call_type from types where key = ''#call_type#''","queryIdForParam":1214,"queryUUIDForParam":"b73868c6-98be-42ac-ad38-d20e95927853"},{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1211,"queryUUIDForParam":"0b0663e5-7c1a-46d6-9348-be426b17a714"},{"index":2,"isHidden":true,"fieldName":"from_date","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"From Date","queryForParam":"select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date","queryIdForParam":1212,"queryUUIDForParam":"a22b6ad5-f8ae-4d51-8763-bbb5cf9a96dc"},{"index":3,"isHidden":true,"fieldName":"to_date","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"To Date","isMandatory":false,"queryForParam":"select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date","queryIdForParam":1213,"queryUUIDForParam":"89d23be1-d8b2-49dd-8390-78e6e24afbfc","requiredUptoLevel":""}]},"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","selectedContainer":"tableContainer","showDateAsOn":false}', 'cant_talk_gvk', '59549223-f237-4b7e-85e0-66cb948dae73'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(462, 'Rota Virus 1(Immunization Services Provided to Children with Date of Birth)', NULL, true, 'DYNAMIC', NULL, '2020-05-20 13:28:55.479', 409, '2019-07-24 10:16:53.414', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Rota virus 1 (Immunization Services Provided to Children with Date of Birth)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.is_valid_for_tracking_report = true\n\tand c.rota_virus_1 is not null\n\tand c.rota_virus_1 >= ''07-01-2019''\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 1231, "fieldName": "tableField", "queryUUID": "16436d12-318e-4d54-adff-41121c78c914", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 1230, "queryUUIDForParam": "716f6692-f130-4044-a224-9dce225fb1e7"}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "isMandatory": false, "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1228, "queryUUIDForParam": "903c8ed4-4edb-4c32-a33d-a56ab283cfa7", "requiredUptoLevel": ""}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 1229, "queryUUIDForParam": "763b4252-7dcd-4ff4-944c-f9862f3d3dda"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'rota_virus_1_imm_ser', '2f8dd1bf-31f3-482f-b194-5a7bb4e475f8'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(658, 'Follow up visit 2 (CMTC/NRC Follow-up Visit - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 17:01:08.397', 60512, '2020-09-18 12:09:14.925', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1757,"queryUUIDForParam":"92a7bab4-017e-4bed-a43b-8d4502b70c2d","index":0},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_follow_up_visit_2 is not null\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1758,"queryUUID":"6d221a86-da99-48ea-90ea-0f27a6457c05","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', 'fol_2_fol_mon', '91126397-1290-455d-9d13-69db5363e9b7'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(660, 'SAM To MAM (CMTC/NRC Follow-up Visit - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 17:00:33.211', 60512, '2020-09-18 12:12:36.145', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1761,"queryUUIDForParam":"11283e2d-8ebf-4ef8-99ba-bc129d85f6ab"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_discharge_status = ''SAM_TO_MAM''\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1762,"queryUUID":"04080eb3-9e43-43e9-b60f-89580335941b","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', 'sam_mam_fol_mon', '9796ace3-3811-4ded-bdd0-55d8bb7c565f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(661, 'SAM To SAM (CMTC/NRC Follow-up Visit - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 17:00:18.517', 60512, '2020-09-18 12:13:46.722', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1763,"queryUUIDForParam":"d6eed27b-870c-42e6-bbfe-0017482ee46b"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_discharge_status = ''SAM_TO_SAM''\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1764,"queryUUID":"7c7cd464-f2f3-4f0b-8c6b-3b4a3475eda3","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","htmlData":true}', 'sam_sam_fol_mon', 'b03cd49d-5046-415d-aae4-f4f947ec80e8'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(459, 'Wrong number (GVK : Call effectiveness reports)', NULL, true, 'DYNAMIC', NULL, '2020-09-23 11:10:01.284', 66522, '2019-07-16 20:34:18.705', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with unsuccess_calls as(\n\tselect \n\t*\n\tfrom gvk_manage_call_master master\n\twhere call_response in (''com.argusoft.imtecho.gvk.call.wrong-mobile-number'')\n\tand location_id in (select child_id from location_hierchy_closer_det where parent_id = (case when #location_id# = -2 then 2 else #location_id# end) \nand depth <= (case when #location_id# = -2 then 0 else 8 end))\n       and case when ''all'' = ''#call_type#'' then true \n       when ''#call_type#'' = ''FHW_CH_SER_VERI'' then call_type in (''FHW_CH_SER_VERI'',''FHW_DEL_VERI'',''FHW_TT_VERI'',''FHW_CH_SER_PREG_VERI'')\n       else call_type = ''#call_type#'' end\n       and created_on between case when ''#from_date#'' = ''null'' then now() else to_date(''#from_date#'',''MM-DD-YYYY'') end and to_date(case when ''#to_date#'' = ''null'' then null \n       else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds''\n       order by id #limit_offset#\n),\nunsuccess_calls_details as (\n\tselect \n\tconcat(im.first_name,'' '',im.last_name, ''('',im.unique_health_id ,'')'') as name,\n\tmaster.mobile_number,\n\tmaster.created_on,\n\tmaster.call_type,\n\tmaster.location_id,\n\tmaster.id,\n\tmaster.created_by,\n\tmaster.call_response\n\tfrom unsuccess_calls master\n\tinner join imt_member im on im.id = master.member_id\n\twhere call_response != ''com.argusoft.imtecho.gvk.call.success''\n\t\n\tunion all \n\tselect \n\tconcat(uu.first_name,'' '',uu.last_name, ''('',role.name ,'')'') as name,\n\tmaster.mobile_number,\n\tmaster.created_on,\n\tmaster.call_type,\n\tmaster.location_id,\n\tmaster.id,\n\tmaster.created_by,\n\tmaster.call_response\n\tfrom unsuccess_calls master\n\tinner join um_user uu on uu.id = master.user_id\n\tinner join um_role_master role on uu.role_id = role.id \n\twhere call_response != ''com.argusoft.imtecho.gvk.call.success''\n\t\n\tunion  all\n\tselect \n\tcase when im.id is null then imf.family_id else concat(im.first_name,'' '',im.last_name, '' ('',imf.family_id ,'')'') end as name,\n\tmaster.mobile_number,\nmaster.created_on,\nmaster.call_type,\n\tmaster.location_id,\n\tmaster.id,\n\tmaster.created_by,\n\tmaster.call_response\n\tfrom unsuccess_calls master\n\tinner join imt_family imf on imf.family_id = master.family_id\n\tleft join imt_member im on im.family_id = imf.family_id and im.family_head = true\n\twhere call_response != ''com.argusoft.imtecho.gvk.call.success''\n),\nresponse as (\nselect \nmaster.name,\nget_location_hierarchy(master.location_id) as Location_hierarchy,\ncase when call_response = ''com.argusoft.imtecho.gvk.call.no-number-available'' then ''No number available''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.cant-talk'' then ''Can''''t talk''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.wrong-mobile-number'' then ''Wrong mobile number''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-asha-husband'' then ''Number belongs to asha''\t-- todo\n--when call_response = ''com.argusoft.imtecho.gvk.call.not-interested-in-treatment'' then ''Not intersted in treatment''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.unresponsive'' then ''Unreponsive''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-husband'' then ''Number belongs to anm'' \nwhen call_response = ''com.argusoft.imtecho.gvk.call.not-reachable'' then ''Not reachable''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.phone-switched-off'' then ''Phone switched off''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-collection-pending'' then ''Number collection pending''\t\t\t-- todo\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary-husband'' then ''number of beneficiary''\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary''\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-family-member''\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-neighbour''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-or-anm-husband'' then ''ANM or husband''\t\t\t-- todo\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-ashah-or-asha-husband'' then ''Asha or husband''\t\t\t-- todo\nelse ''Other'' end reason,\nmaster.mobile_number\\:\\:json,\nmaster.location_id,\nmaster.created_on,\nmaster.call_type,\nmaster.created_by,\nmaster.id\nfrom unsuccess_calls_details master\n ),\nmo as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code in (''mo_phc'',''mo_uphc''))\n),\nmo_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tmo group by location_id\n),\nmo_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from mo_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\nasha as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code = ''ASHA'')\n    where uu.state = ''ACTIVE''\n),\nasha_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tasha group by location_id\n),\nasha_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from asha_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\nanm as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code = ''FHW'')\n    where uu.state = ''ACTIVE''\n),\nanm_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tanm group by location_id\n),\nanm_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from anm_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\n\ncontacts as (\n\tselect json_array_elements(mobile_number)->>''mobileNumber'' as contact ,json_array_elements(mobile_number)->>''isCalled'' as isCalled ,id\n\tfrom response where mobile_number is not null ),\ncontacts_display_date as (\t\n\tselect string_agg(\n\tcase when isCalled=''true'' then concat(''<b>'',contact,''</b>'') else contact end\n\t,'','') as contact,id from contacts\n\tgroup by id)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nresp.name as \"Called Person\",\nLocation_hierarchy as \"Location\",\ncontacts.contact as \"Dialed Number\",\nto_char(resp.created_on,''DD-MM-YYYY HH:MI PM'') as  \"Call Date\",\n\ncase when resp.call_type = ''FHW_HIGH_RISK_CONF'' then ''FHW highrisk conformation''\nwhen resp.call_type = ''IMMUN_VERI'' then ''Immunization verification''\nwhen resp.call_type = ''FAM_VERI'' then ''Family verification''\nwhen resp.call_type = ''PREG_REGI_VERI'' then ''Pregnancy registration verification''\nwhen resp.call_type = ''HIGH_RISK_VERI'' then ''Highrisk followup verification''\nwhen resp.call_type = ''MIG_IN_VERI'' then ''Member IN migration verification''\nwhen resp.call_type = ''MIG_OUT_VERI'' then ''Member OUT migration verification''\nwhen resp.call_type = ''DUP_MEM_VERI'' then ''Duplicate member verification'' end as \"Call Type\",\n--resp.reason as \"Reason for Unsuccessful Calling\",\nmo.name as \"MO Details\",\nanm.name as \"ANM Details\",\nasha.name as \"ASHA Details\"\n,concat(um.first_name, '' '', um.last_name) as \"RO Details\" \n--fhw.name\nfrom response resp\nleft join contacts_display_date contacts on resp.id = contacts.id\nleft join mo_details mo on mo.location_id = resp.location_id\nleft join anm_details anm on anm.location_id = resp.location_id\nleft join asha_details asha on asha.location_id = resp.location_id\nleft join um_user um on resp.created_by = um.id","queryId":1208,"fieldName":"tableField","queryUUID":"c32657dd-e77f-442f-85bd-81881dd32cbe","queryParams":"limit_offset,from_date,to_date,call_type,location_id"}],"fieldsContainer":[{"index":3,"isHidden":true,"fieldName":"to_date","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"To Date","queryForParam":"select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date","queryIdForParam":1226,"queryUUIDForParam":"05c6df06-4e69-4e6f-b51d-a4bbe69bc1e1"},{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1223,"queryUUIDForParam":"a271d571-19ed-42f1-b5d4-99051ca57f1b"},{"index":2,"isHidden":true,"fieldName":"call_type","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"Call effectiveness","queryForParam":"with  types as (\nselect ''all'' as key, ''All'' as value, 1 as ord\nunion\nselect ''FHW_HIGH_RISK_CONF'' as key,''Fhw highrisk conformation'' as value, 2 as ord\nunion\nselect ''IMMUN_VERI'' as key, ''Immunization verification'' as value, 3 as ord\nunion\nselect ''FAM_VERI'' as key, ''Family verification'' as value, 4 as ord\nunion\nselect ''PREG_REGI_VERI'' as key,''Pregnancy registration verification'' as value, 5 as ord\nunion\nselect ''MIG_IN_VERI'' as key, ''Member IN migration verification'' as value, 6 as ord\nunion\nselect ''HIGH_RISK_VERI'' as key, ''Highrisk followup verification'' as value, 7 as ord\nunion\nselect ''MIG_OUT_VERI'' as key,''Member OUT migration verification'' as value, 8 as ord\nunion\nselect ''DUP_MEM_VERI'' as key, ''Duplicate member verification'' as value, 9 as ord)\nselect value as call_type from types where key = ''#call_type#''","queryIdForParam":1224,"queryUUIDForParam":"bd2201d0-45a2-4afa-ab30-03fdf899264f"},{"index":2,"isHidden":true,"fieldName":"from_date","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"From Date","queryForParam":"select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date","queryIdForParam":1225,"queryUUIDForParam":"b9fc1b8d-db4e-4a28-9ada-fc9884a82c67"}]},"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","selectedContainer":"tableContainer"}', 'wrong_num_talk_gvk', 'd5ed306c-6f62-4a7d-95e9-6e3579e00a37'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(662, 'Weight gain more than 8gm/kg/day (CMTC/NRC Follow-up Visit - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 16:58:11.673', 60512, '2020-09-18 12:16:03.862', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1765,"queryUUIDForParam":"736c2131-3ef1-4e82-8404-407720a7e461"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_discharge_8gm_kg_day_gain\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1766,"queryUUID":"c3334c88-130f-4e47-bb89-9f43a7497021","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', '8_gm_fol_mon', 'fdeec916-c3e8-41a6-842a-40f4ef24c15a'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(458, 'No number to disp (GVK : Call effectiveness reports)', NULL, true, 'DYNAMIC', NULL, '2020-09-23 11:03:33.330', 66522, '2019-07-16 20:27:44.061', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with unsuccess_calls as(\n\tselect \n\t*\n\tfrom gvk_manage_call_master master\n\twhere call_response in (''com.argusoft.imtecho.gvk.call.no-number-available'')\n\tand location_id in (select child_id from location_hierchy_closer_det where parent_id = (case when #location_id# = -2 then 2 else #location_id# end) \nand depth <= (case when #location_id# = -2 then 0 else 8 end))\n        and case \n        when ''all'' = ''#call_type#'' then true \n        when ''#call_type#'' = ''FHW_CH_SER_VERI'' then call_type in (''FHW_CH_SER_VERI'',''FHW_DEL_VERI'',''FHW_TT_VERI'',''FHW_CH_SER_PREG_VERI'')\n        else call_type = ''#call_type#'' end\n       and created_on between case when ''#from_date#'' = ''null'' then now() else to_date(''#from_date#'',''MM-DD-YYYY'') end and to_date(case when ''#to_date#'' = ''null'' then null \n       else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds''\n      order by id #limit_offset#\n),\nunsuccess_calls_details as (\n\tselect \n\tconcat(im.first_name,'' '',im.last_name, ''('',im.unique_health_id ,'')'') as name,\n\tmaster.mobile_number,\n\tmaster.created_on,\n\tmaster.call_type,\n\tmaster.location_id,\n\tmaster.id,\n\tmaster.created_by,\n\tmaster.call_response\n\tfrom unsuccess_calls master\n\tinner join imt_member im on im.id = master.member_id\n\twhere call_response != ''com.argusoft.imtecho.gvk.call.success''\n\t\n\tunion all \n\tselect \n\tconcat(uu.first_name,'' '',uu.last_name, ''('',role.name ,'')'') as name,\n\tmaster.mobile_number,\n\tmaster.created_on,\n\tmaster.call_type,\n\tmaster.location_id,\n\tmaster.id,\n\tmaster.created_by,\n\tmaster.call_response\n\tfrom unsuccess_calls master\n\tinner join um_user uu on uu.id = master.user_id\n\tinner join um_role_master role on uu.role_id = role.id \n\twhere call_response != ''com.argusoft.imtecho.gvk.call.success''\n\t\nunion  all\n\tselect \n\tcase when im.id is null then imf.family_id else concat(im.first_name,'' '',im.last_name, '' ('',imf.family_id ,'')'') end as name,\n\tmaster.mobile_number,\n\tmaster.created_on,\n\tmaster.call_type,\n\tmaster.location_id,\n\tmaster.id,\n\tmaster.created_by,\n\tmaster.call_response\n\tfrom unsuccess_calls master\n\tinner join imt_family imf on imf.family_id = master.family_id\n\tleft join imt_member im on im.family_id = imf.family_id and im.family_head = true\n\twhere call_response != ''com.argusoft.imtecho.gvk.call.success''\n\t\n),\nresponse as (\nselect \nmaster.name,\nget_location_hierarchy(master.location_id) as Location_hierarchy,\ncase when call_response = ''com.argusoft.imtecho.gvk.call.no-number-available'' then ''No number available''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.cant-talk'' then ''Can''''t talk''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.wrong-mobile-number'' then ''Wrong mobile number''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-asha-husband'' then ''Number belongs to asha''\t-- todo\n--when call_response = ''com.argusoft.imtecho.gvk.call.not-interested-in-treatment'' then ''Not intersted in treatment''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.unresponsive'' then ''Unreponsive''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-husband'' then ''Number belongs to anm'' \nwhen call_response = ''com.argusoft.imtecho.gvk.call.not-reachable'' then ''Not reachable''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.phone-switched-off'' then ''Phone switched off''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-collection-pending'' then ''Number collection pending''\t\t\t-- todo\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary-husband'' then ''number of beneficiary''\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary''\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-family-member''\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-neighbour''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-or-anm-husband'' then ''ANM or husband''\t\t\t-- todo\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-ashah-or-asha-husband'' then ''Asha or husband''\t\t\t-- todo\nelse ''Other'' end reason,\nmaster.mobile_number\\:\\:json,\nmaster.location_id,\nmaster.created_on,\nmaster.call_type,\nmaster.created_by,\nmaster.id\nfrom unsuccess_calls_details master\n ),\nmo as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code in (''mo_phc'',''mo_uphc''))\n),\nmo_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tmo group by location_id\n),\nmo_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from mo_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\nasha as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code = ''ASHA'')\n    where uu.state = ''ACTIVE''\n),\nasha_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tasha group by location_id\n),\nasha_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from asha_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\nanm as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code = ''FHW'')\n    where uu.state = ''ACTIVE''\n),\nanm_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tanm group by location_id\n),\nanm_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from anm_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\n\ncontacts as (\n\tselect json_array_elements(mobile_number)->>''mobileNumber'' as contact ,json_array_elements(mobile_number)->>''isCalled'' as isCalled ,id\n\tfrom response where mobile_number is not null ),\ncontacts_display_date as (\t\n\tselect string_agg(\n\tcase when isCalled=''true'' then concat(''<b>'',contact,''</b>'') else contact end\n\t,'','') as contact,id from contacts\n\tgroup by id)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nresp.name as \"Called Person\",\nLocation_hierarchy as \"Location\",\ncontacts.contact as \"Dialed Number\",\nto_char(resp.created_on,''DD-MM-YYYY HH:MI PM'') as  \"Call Date\",\n\n\ncase when resp.call_type = ''FHW_HIGH_RISK_CONF'' then ''FHW highrisk conformation''\nwhen resp.call_type = ''IMMUN_VERI'' then ''Immunization verification''\nwhen resp.call_type = ''FAM_VERI'' then ''Family verification''\nwhen resp.call_type = ''PREG_REGI_VERI'' then ''Pregnancy registration verification''\nwhen resp.call_type = ''HIGH_RISK_VERI'' then ''Highrisk followup verification''\nwhen resp.call_type = ''MIG_IN_VERI'' then ''Member IN migration verification''\nwhen resp.call_type = ''MIG_OUT_VERI'' then ''Member OUT migration verification''\nwhen resp.call_type = ''DUP_MEM_VERI'' then ''Duplicate member verification'' end as \"Call Type\",\n--resp.reason as \"Reason for Unsuccessful Calling\",\nmo.name as \"MO Details\",\nanm.name as \"ANM Details\",\nasha.name as \"ASHA Details\"\n,concat(um.first_name, '' '', um.last_name) as \"RO Details\"\n--fhw.name\nfrom response resp\nleft join contacts_display_date contacts on resp.id = contacts.id\nleft join mo_details mo on mo.location_id = resp.location_id\nleft join anm_details anm on anm.location_id = resp.location_id\nleft join asha_details asha on asha.location_id = resp.location_id\nleft join um_user um on resp.created_by = um.id","queryId":1207,"fieldName":"tableField","queryUUID":"8703a069-f6cf-4968-957e-e33a603d62a1","queryParams":"limit_offset,from_date,to_date,call_type,location_id"}],"fieldsContainer":[{"index":0,"isHidden":true,"fieldName":"call_type","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"Call effectiveness","queryForParam":"with  types as (\nselect ''all'' as key, ''All'' as value, 1 as ord\nunion\nselect ''FHW_HIGH_RISK_CONF'' as key,''Fhw highrisk conformation'' as value, 2 as ord\nunion\nselect ''IMMUN_VERI'' as key, ''Immunization verification'' as value, 3 as ord\nunion\nselect ''FAM_VERI'' as key, ''Family verification'' as value, 4 as ord\nunion\nselect ''PREG_REGI_VERI'' as key,''Pregnancy registration verification'' as value, 5 as ord\nunion\nselect ''MIG_IN_VERI'' as key, ''Member IN migration verification'' as value, 6 as ord\nunion\nselect ''HIGH_RISK_VERI'' as key, ''Highrisk followup verification'' as value, 7 as ord\nunion\nselect ''MIG_OUT_VERI'' as key,''Member OUT migration verification'' as value, 8 as ord\nunion\nselect ''DUP_MEM_VERI'' as key, ''Duplicate member verification'' as value, 9 as ord)\nselect value as call_type from types where key = ''#call_type#''","queryIdForParam":1216,"queryUUIDForParam":"e378bfd1-caf5-4f1a-a20e-9bde550503a4"},{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1215,"queryUUIDForParam":"e72df58c-d96b-4ebe-87f0-6f315eda12fd"},{"index":3,"isHidden":true,"fieldName":"to_date","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"To Date","queryForParam":"select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date","queryIdForParam":1218,"queryUUIDForParam":"75852252-f19a-46e0-9a70-c641e4806822"},{"index":2,"isHidden":true,"fieldName":"from_date","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"From Date","queryForParam":"select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date","queryIdForParam":1217,"queryUUIDForParam":"41c889cc-694c-4afc-8338-7b1fcbda0ead"}]},"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'no_number_to_dis_gvk', '1f959bf3-bbe0-4b15-b4fc-8438d5704677'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(463, 'Rota Virus 2 (Immunization Services Provided to Children with Date of Birth)', NULL, true, 'DYNAMIC', NULL, '2020-05-20 13:27:31.710', 409, '2019-07-24 10:19:02.011', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Rota virus 2 (Immunization Services Provided to Children with Date of Birth)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.rota_virus_2 is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.rota_virus_2 >= ''07-01-2019''\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 1235, "fieldName": "tableField", "queryUUID": "806fc927-c8f3-4ec7-bd4e-61f676dd1bb3", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 1234, "queryUUIDForParam": "2ee9cdd0-7bfb-4088-bd15-a781c2ca8b35"}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1232, "queryUUIDForParam": "8b04b680-24e3-4625-ba3e-9487231b4f58"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "isMandatory": false, "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 1233, "queryUUIDForParam": "ba8ccd45-9422-485d-8620-91e3eda51d90", "requiredUptoLevel": ""}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'rota_virus_2_don', 'f0c8904e-0115-4f10-bc69-4826be3f1b00'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(473, 'Rota Virus 3 (Child Health Services Provided during the year (Yearly))', NULL, true, 'DYNAMIC', NULL, '2020-06-25 15:43:39.113', 409, '2019-07-24 11:08:06.133', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "-------Rota Virus 3-------\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \nchild_det as (\n\tselect m.id, f.location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f\n\twhere l.child_id = c.rota_virus_3_loc and m.id = c.member_id and f.family_id = m.family_id\n\tand l.parent_id = #location_id#\n\tand c.rota_virus_3 is not null\n\tand c.rota_virus_3 >= ''07-01-2019''\n\tand (case when extract(month from rota_virus_3) > 3 \n\tthen concat(extract(year from rota_virus_3), ''-'', extract(year from rota_virus_3) + 1)\n\telse concat(extract(year from rota_virus_3) - 1, ''-'', extract(year from rota_virus_3)) end) = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 1263, "fieldName": "tableField", "queryUUID": "a66f497f-540e-4e74-9946-23fa1e681fe4", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1262, "queryUUIDForParam": "3ef0b893-806d-460f-a70b-17b7538bfc54"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'rota3_ser_dur_year', '404f6a3f-1d85-47a7-a32d-d37ccbd5921c'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(659, 'Follow up visit 3 (CMTC/NRC Follow-up Visit - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 17:00:49.164', 60512, '2020-09-18 12:10:44.822', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1759,"queryUUIDForParam":"6f11a582-5c30-4917-a04c-b9c66e8b9089"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_follow_up_visit_3 is not null\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1760,"queryUUID":"3d106c0e-5de4-4891-b018-381c58eb586c","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', 'fol_3_fol_mon', '96da0488-aded-4982-b78a-1b62a8c7382d'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(651, 'No. of children admitted at CMTC/NRC (CMTC/NRC Follow-up Visit - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 17:03:11.445', 60512, '2020-09-18 11:20:59.141', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1743,"queryUUIDForParam":"491cdc1f-10f7-4de4-93b3-96a1c32e5d49"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1744,"queryUUID":"59123d30-b638-4609-a51b-8830c28f92be","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', 'admitted_fol_mon', '598a72e5-6e2d-4e88-be80-519f24418d1f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(654, 'Children Achieved Cured Criteria (CMTC/NRC Follow-up Visit - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 17:02:22.139', 60512, '2020-09-18 11:25:42.314', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1749,"queryUUIDForParam":"9bde2314-9e1d-4e02-a266-9972de16a189"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_discharge_status = ''SAM_TO_NORMAL''\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1750,"queryUUID":"8dabaeb9-7375-46cc-ada2-2b4ce7d31133","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","htmlData":true}', 'cured_fol_mon', 'b0f11cc1-f760-403a-9d87-b0962baaa699'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(655, 'Defaulters (CMTC/NRC Follow-up Visit - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 17:02:04.045', 60512, '2020-09-18 11:27:19.959', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1751,"queryUUIDForParam":"885dd5f2-05e1-4c3d-8b75-6b61dac603cb"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_admission_defaulter_date is not null\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1752,"queryUUID":"c6f7a103-42cc-4944-bb88-066455727697","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', 'defaulters_fol_mon', 'bcf4cb7f-5764-46bb-823d-77e2030797e1'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(486, 'Call unresponsive (GVK : Call effectiveness reports)', NULL, true, 'DYNAMIC', NULL, '2020-09-23 11:23:36.771', 66522, '2019-08-14 15:23:03.324', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with unsuccess_calls as(\n\tselect \n\t*\n\tfrom gvk_manage_call_master master\n\twhere call_response in (''com.argusoft.imtecho.gvk.call.unresponsive'')\n\tand location_id in (select child_id from location_hierchy_closer_det where parent_id = (case when #location_id# = -2 then 2 else #location_id# end) \nand depth <= (case when #location_id# = -2 then 0 else 8 end))\n       and case when ''all'' = ''#call_type#'' then true \n       when ''#call_type#'' = ''FHW_CH_SER_VERI'' then call_type in (''FHW_CH_SER_VERI'',''FHW_DEL_VERI'',''FHW_TT_VERI'',''FHW_CH_SER_PREG_VERI'')\n       else call_type = ''#call_type#'' end\n       and created_on between case when ''#from_date#'' = ''null'' then now() else to_date(''#from_date#'',''MM-DD-YYYY'') end and to_date(case when ''#to_date#'' = ''null'' then null \n       else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds''\n       order by id #limit_offset#\n),\nunsuccess_calls_details as (\n\tselect \n\tconcat(im.first_name,'' '',im.last_name, ''('',im.unique_health_id ,'')'') as name,\n\tmaster.mobile_number,\n\tmaster.created_on,\n\tmaster.call_type,\n\tmaster.location_id,\n\tmaster.id,\n\tmaster.created_by,\n\tmaster.call_response\n\tfrom unsuccess_calls master\n\tinner join imt_member im on im.id = master.member_id\n\twhere call_response != ''com.argusoft.imtecho.gvk.call.success''\n\t\n\tunion all \n\tselect \n\tconcat(uu.first_name,'' '',uu.last_name, ''('',role.name ,'')'') as name,\n\tmaster.mobile_number,\n\tmaster.created_on,\n\tmaster.call_type,\n\tmaster.location_id,\n\tmaster.id,\n\tmaster.created_by,\n\tmaster.call_response\n\tfrom unsuccess_calls master\n\tinner join um_user uu on uu.id = master.user_id\n\tinner join um_role_master role on uu.role_id = role.id \n\twhere call_response != ''com.argusoft.imtecho.gvk.call.success''\n\t\n\tunion  all\n\tselect \n\tcase when im.id is null then imf.family_id else concat(im.first_name,'' '',im.last_name, '' ('',imf.family_id ,'')'') end as name,\n\tmaster.mobile_number,\n    master.created_on,\n    master.call_type,\n\tmaster.location_id,\n\tmaster.id,\n\tmaster.created_by,\n\tmaster.call_response\n\tfrom unsuccess_calls master\n\tinner join imt_family imf on imf.family_id = master.family_id\n\tleft join imt_member im on im.family_id = imf.family_id and im.family_head = true\n\twhere call_response != ''com.argusoft.imtecho.gvk.call.success''\n\n    union all\n    select\n    (master.mobile_number\\:\\:json->0)#>>''{name}'' as name,\n\tmaster.mobile_number,\t\n    master.created_on,\n    master.call_type,\n\tmaster.location_id,\n\tmaster.id,\n\tmaster.created_by,\n\tmaster.call_response\n\tfrom unsuccess_calls master\n\twhere master.member_id is null and master.user_id is null \n    and call_response != ''com.argusoft.imtecho.gvk.call.success''\n\n),\nresponse as (\nselect \nmaster.name,\nget_location_hierarchy(master.location_id) as Location_hierarchy,\ncase when call_response = ''com.argusoft.imtecho.gvk.call.no-number-available'' then ''No number available''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.cant-talk'' then ''Can''''t talk''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.wrong-mobile-number'' then ''Wrong mobile number''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-asha-husband'' then ''Number belongs to asha''\t-- todo\n--when call_response = ''com.argusoft.imtecho.gvk.call.not-interested-in-treatment'' then ''Not intersted in treatment''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.unresponsive'' then ''Unreponsive''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-husband'' then ''Number belongs to anm'' \nwhen call_response = ''com.argusoft.imtecho.gvk.call.not-reachable'' then ''Not reachable''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.phone-switched-off'' then ''Phone switched off''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-collection-pending'' then ''Number collection pending''\t\t\t-- todo\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary-husband'' then ''number of beneficiary''\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary''\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-family-member''\n--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-neighbour''\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-or-anm-husband'' then ''ANM or husband''\t\t\t-- todo\nwhen call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-ashah-or-asha-husband'' then ''Asha or husband''\t\t\t-- todo\nelse ''Other'' end reason,\nmaster.mobile_number\\:\\:json,\nmaster.location_id,\nmaster.created_on,\nmaster.call_type,\nmaster.created_by,\nmaster.id\nfrom unsuccess_calls_details master\n ),\nmo as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code in (''mo_phc'',''mo_uphc''))\n),\nmo_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tmo group by location_id\n),\nmo_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from mo_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\nasha as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code = ''ASHA'')\n    where uu.state = ''ACTIVE''\n),\nasha_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tasha group by location_id\n),\nasha_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from asha_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\nanm as (\n\tselect master.location_id, uu.id as mo_id from response master\n\tinner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id\n\tinner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''\n\tinner join um_user uu on uu.id = uml.user_id  and \n\tuu.role_id in (select id from um_role_master where code = ''FHW'')\n    where uu.state = ''ACTIVE''\n),\nanm_unique as (\n\tselect location_id, max(mo_id) as mo_id\n\tfrom \n\tanm group by location_id\n),\nanm_details as (\n\tselect concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from anm_unique mo\n\tinner join um_user um on um.id = mo.mo_id\n),\n\ncontacts as (\n\tselect json_array_elements(mobile_number)->>''mobileNumber'' as contact ,json_array_elements(mobile_number)->>''isCalled'' as isCalled ,id\n\tfrom response where mobile_number is not null ),\ncontacts_display_date as (\t\n\tselect string_agg(\n\tcase when isCalled=''true'' then concat(''<b>'',contact,''</b>'') else contact end\n\t,'','') as contact,id from contacts\n\tgroup by id)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nresp.name as \"Called Person\",\nLocation_hierarchy as \"Location\",\ncontacts.contact as \"Dialed Number\",\nto_char(resp.created_on,''DD-MM-YYYY HH:MI PM'') as  \"Call Date\",\ncase when resp.call_type = ''FHW_HIGH_RISK_CONF'' then ''FHW highrisk conformation''\nwhen resp.call_type = ''IMMUN_VERI'' then ''Immunization verification''\nwhen resp.call_type = ''FAM_VERI'' then ''Family verification''\nwhen resp.call_type = ''PREG_REGI_VERI'' then ''Pregnancy registration verification''\nwhen resp.call_type = ''HIGH_RISK_VERI'' then ''Highrisk followup verification''\nwhen resp.call_type = ''MIG_IN_VERI'' then ''Member IN migration verification''\nwhen resp.call_type = ''MIG_OUT_VERI'' then ''Member OUT migration verification''\nwhen resp.call_type = ''DUP_MEM_VERI'' then ''Duplicate member verification'' end as \"Call Type\",\n--resp.reason as \"Reason for Unsuccessful Calling\",\nmo.name as \"MO Details\",\nanm.name as \"ANM Details\",\nasha.name as \"ASHA Details\"\n,concat(um.first_name, '' '', um.last_name) as \"RO Details\" \n--fhw.name\nfrom response resp\nleft join contacts_display_date contacts on resp.id = contacts.id\nleft join mo_details mo on mo.location_id = resp.location_id\nleft join anm_details anm on anm.location_id = resp.location_id\nleft join asha_details asha on asha.location_id = resp.location_id\nleft join um_user um on resp.created_by = um.id","queryId":1311,"fieldName":"tableField","queryUUID":"678db30e-2d81-43d9-9334-cd25cc6519db","queryParams":"limit_offset,from_date,to_date,call_type,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"Location","queryUUIDForParam":"830d234b-a13e-40c0-89bf-50ac115d9958","index":0,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1771},{"isHidden":true,"fieldName":"call_type","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"Call effectiveness","queryUUIDForParam":"ed9ec8b7-0548-4c63-a654-5203e060aa85","index":1,"queryForParam":"with  types as (\nselect ''all'' as key, ''All'' as value, 1 as ord\nunion\nselect ''FHW_HIGH_RISK_CONF'' as key,''Fhw highrisk conformation'' as value, 2 as ord\nunion\nselect ''IMMUN_VERI'' as key, ''Immunization verification'' as value, 3 as ord\nunion\nselect ''FAM_VERI'' as key, ''Family verification'' as value, 4 as ord\nunion\nselect ''PREG_REGI_VERI'' as key,''Pregnancy registration verification'' as value, 5 as ord\nunion\nselect ''MIG_IN_VERI'' as key, ''Member IN migration verification'' as value, 6 as ord\nunion\nselect ''HIGH_RISK_VERI'' as key, ''Highrisk followup verification'' as value, 7 as ord\nunion\nselect ''MIG_OUT_VERI'' as key,''Member OUT migration verification'' as value, 8 as ord\nunion\nselect ''DUP_MEM_VERI'' as key, ''Duplicate member verification'' as value, 9 as ord)\nselect value as call_type from types where key = ''#call_type#''","queryIdForParam":1772},{"isHidden":true,"fieldName":"from_date","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"From Date","queryUUIDForParam":"b51c28ea-9092-4af8-a7da-b12afbd8c133","index":2,"queryForParam":"select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date","queryIdForParam":1773},{"isHidden":true,"fieldName":"to_date","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"To Date","queryUUIDForParam":"f11f9409-234e-4ac0-9643-2cd38d6b527a","index":3,"queryForParam":"select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date","queryIdForParam":1774}]},"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'gvk_call_unresponsiv', 'e39aff65-2abf-43b5-b00a-00befdbfe82d'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(653, 'Death (CMTC/NRC Follow-up Visit - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 17:02:36.350', 60512, '2020-09-18 11:23:56.703', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1747,"queryUUIDForParam":"1f4289c1-71d3-466c-ba38-a2f3001dba38"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_admission_death_date is not null\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1748,"queryUUID":"09626c26-61c0-4b8d-83d4-6287061cdf85","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', 'death_fol_mon', '52e91843-ec47-4094-8d62-520a6fc53cd6'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(648, 'Medical Transfer (CMTC/NRC Facility Monitoring -  V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 17:03:59.827', 60512, '2020-09-07 20:35:18.139', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1738,"queryUUIDForParam":"f5c25a62-453a-4c72-8ea7-07d9c423ee40"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect child_cmtc_nrc_admission_detail.child_id,\n\tchild_cmtc_nrc_admission_detail.screening_center,\n\tchild_cmtc_nrc_admission_detail.admission_date\n\tfrom child_cmtc_nrc_referral_detail\n\tinner join health_infrastructure_details on child_cmtc_nrc_referral_detail.referred_from = health_infrastructure_details.id\n\tinner join child_cmtc_nrc_admission_detail on child_cmtc_nrc_referral_detail.admission_id = child_cmtc_nrc_admission_detail.id\n\twhere child_cmtc_nrc_referral_detail.referred_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand health_infrastructure_details.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.screening_center = health_infrastructure_details.id","queryId":1739,"queryUUID":"be2f9e51-5405-4194-9dd2-30f193cdc13f","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', 'med_transf_cmtc_fac', '0f196c2c-34b8-45be-a9ab-797da5bccea7'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(646, 'Weight gain more than 5gm/kg/day (CMTC/NRC Facility Monitoring - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 17:04:38.795', 60512, '2020-09-07 17:09:55.780', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1734,"queryUUIDForParam":"e5ef025e-389b-4bcc-86f0-f604a135a3ea"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_discharge_5gm_kg_day_gain\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1735,"queryUUID":"93b8416a-554b-4429-b815-ff1d7865c395","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', 'gain_5gm_cmtc_fac', 'd6ef7c34-829c-4aec-aa6e-d11f82ae098f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(644, 'Death (CMTC/NRC Facility Monitoring - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 17:05:10.858', 60512, '2020-09-07 17:06:33.049', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1730,"queryUUIDForParam":"fdc48b12-ffdf-4151-8bbf-4a4363e4444b"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_admission_death_date is not null\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1731,"queryUUID":"6d235496-9a52-489d-82d8-d1e10888a1d6","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', 'death_cmtc_fac', 'bb51bab5-917c-4685-91d7-8be5d27187d7'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(140, 'BCG given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 11:50:53.473', 57698, '2019-02-04 17:42:56.390', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--BCG given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n years as ( \n\tselect concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, \n\tcast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date\n\tfrom generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc\n), child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.is_valid_for_tracking_report = true\n\tand y.financial_year = ''#financial_year#''\n\tand c.bcg is not null\n\tand c.dob between y.from_date and y.too_date\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 234, "fieldName": "tableField", "queryUUID": "efa0d757-68ee-490a-bcb2-398ba284396c", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 233, "queryUUIDForParam": "452961ec-ab38-42d4-a69e-ecb29fcfe57e"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "4"}', 'ch_bcg_given', '44cb5873-e45a-4b0d-af9e-9606b232e1d0'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(640, 'Visited by pediatrician (CMTC/NRC Facility Monitoring - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 17:07:03.366', 60512, '2020-09-07 16:58:53.677', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","index":0,"queryIdForParam":1722,"queryUUIDForParam":"886edc45-eff9-4b1b-b44b-302f9c62899f"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_pediatrician_visit\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1723,"queryUUID":"d813887b-393d-466e-9c6b-c02ef021c9ba","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', 'vis_ped_cmtc_fac', '6eae78ad-3872-4618-86e2-06428c375757'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(639, 'Total (CMTC/NRC Facility Monitoring - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 17:07:23.346', 60512, '2020-09-07 16:56:33.991', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1720,"queryUUIDForParam":"05abcd81-1178-46f3-9dfa-4a1265876f64"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_admission_sd_score in (''SD4'',''SD3'')\n\tand fsam_admission_muac < 11.5\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\tunion all\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_admission_sd_score in (''SD4'',''SD3'')\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\tunion all\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_admission_muac < 11.5\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\tunion all\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_admission_bilateral_pitting_oedema in (''+'',''++'',''+++'')\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\tunion all\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_admission_height < 45\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\torder by child_id\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1721,"queryUUID":"faf11b44-e4d0-4e8d-a097-bb8036200c7d","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', 'tot_crit_cmtc_fac', 'e1c85eaa-29bb-45dc-b619-669ca588c114'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(638, 'Less than 45cm length (CMTC/NRC Facility Monitoring - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 17:07:39.944', 60512, '2020-09-07 16:54:37.801', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1718,"queryUUIDForParam":"ac1ca6d0-5672-4e4b-adcb-b8eadea1003d"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true,"index":2}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_admission_height < 45\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1719,"queryUUID":"69cdc26a-418a-4f7c-a75d-7b5ed77c4012","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', 'less_45_cmtc_fac', '8c0be24c-916d-416f-abba-50fb9fd02d4d'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(564, 'IDSP  Screening Member Wise Details', NULL, true, 'DYNAMIC', NULL, '2020-09-24 13:52:59.174', 74841, '2020-03-23 18:26:44.935', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \nidsp_screening as (\n\tselect \n\tidsp.location_id as loc_id,\n\timt_member.family_id,\n\timt_member.id,\n\timt_member.first_name || '' '' || imt_member.middle_name || '' '' || imt_member.last_name || '' ('' || imt_member.unique_health_id || '')'' || ''<br>'' || imt_member.family_id as member_det,\n\tto_char(imt_member.dob, ''DD/MM/YYYY'') as dob,\n  case when  (idsp.is_cough  = 1 ) then true else false end as is_cough,\ncase when  (idsp.is_any_illness_or_discomfort  = 1 ) then true else false end as is_any_illness_or_discomfort,\ncase when  (idsp.is_fever  = 1 ) then true else false end as is_fever,\n\tconcat_ws('','', address1, address2) as address,\n\t(idsp.is_fever + idsp.is_cough + idsp.is_breathlessness) = 2 as multiple_symt,\n\tcase when(idsp.has_travel >= 1)  then true else false end as travel,\n\tcase when (idsp.has_travel = 1 and (idsp.is_fever + idsp.is_cough + idsp.is_breathlessness ) = 3) then true else false end as travel_all_symptoms_local,\n\tcase when (idsp.has_travel = 1) then true else false end as local_travel,\n    case when (idsp.has_travel = 2) then true else false end as out_of_country_travel,    \n\tcase when (idsp.has_travel = 0 and (idsp.is_fever + idsp.is_cough + idsp.is_breathlessness ) >= 1) then true else false end as member_with_no_traveled_and_any_symptoms,    \n\tcase when idsp.country is not null then idsp.country else  ''-'' end as country,\n    case when (idsp.is_breathlessness = 1)then true else false end as breathlessness,\n    case when (idsp.has_travel = 1 and (idsp.is_fever + idsp.is_cough + idsp.is_breathlessness  >= 1)) then true else false end as local_travel_and_symptoms,\n    case when (idsp.has_travel = 2 and (idsp.is_fever + idsp.is_cough + idsp.is_breathlessness ) >= 1) then true else false end as international_travel_and_symptoms,\n    case when (idsp.has_travel = 2 and (idsp.is_fever + idsp.is_cough + idsp.is_breathlessness ) = 3) then true else false end as international_travel_and_all_symptoms,\n\tcase when ((idsp.is_fever + idsp.is_cough + idsp.is_breathlessness ) =3) then true else false end as all_three,\n\tcase when (idsp.has_travel = 1 and idsp.mo_symt_verfied > 0) then true else false end examin_mo_with_symt_and_local_travel,\n    case when (idsp.has_travel = 2 and idsp.mo_symt_verfied > 0) then true else false end examin_mo_with_symt_and_int_travel,\n    case when (idsp.has_travel = 1 and idsp.sent_for_covid_test > 0) then true else false end as covid_test_with_local_travel,\n    case when (idsp.has_travel = 2 and idsp.sent_for_covid_test > 0) then true else false end as covid_test_with_int_travel,\n    case when romm.id is not null then  (u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>''\n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end) else null end as created\n    from  idsp_screening_analytics idsp\n\tleft join imt_member on imt_member.id = idsp.member_id\n\tleft join location_hierchy_closer_det ldp on ldp.child_id = idsp.location_id\n\tleft join imt_family on imt_family.family_id = imt_member.family_id\n    left join rch_opd_member_master romm on romm.id = idsp.mo_symt_verfied\n    left join um_user u on u.id = romm.created_by\n\twhere ldp.parent_id = #location_id#\n\tand (case when #filter_type# = ''feaver'' and idsp.is_fever = 1 then true \n\twhen #filter_type# = ''cough'' and idsp.is_cough = 1 then true\n\twhen #filter_type# = ''illness'' and idsp.is_any_illness_or_discomfort = 1 then true\n\twhen #filter_type# = ''breathlessness'' and idsp.is_breathlessness = 1 then true\n\twhen #filter_type# = ''all_three'' and idsp.is_fever =1 and idsp.is_cough =1 and idsp.is_breathlessness = 1 then true\n\twhen #filter_type# = ''local_travel_sympt'' and idsp.has_travel = 1 and (idsp.is_fever + idsp.is_cough + idsp.is_breathlessness ) >= 1 then true\n\twhen #filter_type# = ''international_travel_symt'' and idsp.has_travel = 2 and (idsp.is_fever + idsp.is_cough + idsp.is_breathlessness ) >= 1 then true\n\twhen #filter_type# = ''travel'' and idsp.has_travel > 0 then true\n    when #filter_type#  = ''multiple_symt'' and (idsp.is_fever + idsp.is_cough + idsp.is_breathlessness ) = 2 then true\n    when #filter_type#  = ''mo_domestic'' and idsp.mo_symt_verfied > 0 and idsp.has_travel = 1 then true\n     when #filter_type#  = ''mo_int'' and idsp.mo_symt_verfied > 0 and idsp.has_travel = 2 then true\n\tend )\n\torder by idsp.member_id\n\t#limit_offset#\n),contact_person as (\n\tselect distinct a.id, \n\t concat( contact_person.first_name, '' '', contact_person.middle_name, '' '', contact_person.last_name,\n\t\t'' ('', case when contact_person.mobile_number is null then ''N/A'' else contact_person.mobile_number end, '')'' ) as contactPersonMobileNo\n\tfrom imt_member contact_person\n\tinner join idsp_screening a on a.family_id = contact_person.family_id \n\tinner join imt_family ifm on ifm.family_id = contact_person.family_id and ifm.contact_person_id = contact_person.id\n\t\n), \nloc as (\n\tselect distinct loc_id from idsp_screening\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi  \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nidsp_screening.member_det as \"Member Details\", \nloc_det.aoi as \"Location\",\ncontact_person.contactPersonMobileNo as \"Contact Person MobileNo\",\nidsp_screening.address as \"Address\",\nfhw_det.fhw as \"FHW Details\",\nidsp_screening.is_cough as \"Cough\",\nidsp_screening.is_fever as \"Fever\",\nidsp_screening.breathlessness as \"Breathlessness\",\nidsp_screening.multiple_symt as \"Multiple Symptoms\",\nidsp_screening.all_three as \"All Three Symptoms\",\nidsp_screening.member_with_no_traveled_and_any_symptoms as \"No Travel but F, C or B\t\",\nidsp_screening.travel as \"Person with travel history\",\nidsp_screening.local_travel as \"Domestic travel history\",\nidsp_screening.local_travel_and_symptoms as \"Domestic Travel with F,C or B\",\nidsp_screening.travel_all_symptoms_local as \"Domestic Travel with all symptoms\",\nidsp_screening.out_of_country_travel as \"International travel history\",\nidsp_screening.country as \"Country\",\nidsp_screening.international_travel_and_symptoms as \"Intl. Travel with F,C or B\",\nidsp_screening.international_travel_and_all_symptoms as \"Intl. Travel with all symptoms\",\nidsp_screening.examin_mo_with_symt_and_int_travel as \"Intl. Travel examined by mo\",\nidsp_screening.examin_mo_with_symt_and_local_travel as \"Domestic Travel. examined by mo\",\nidsp_screening.covid_test_with_local_travel as \"Domestic Travel Send for test\",\nidsp_screening.covid_test_with_int_travel as \"Intl. Travel Send for test\",\nidsp_screening.created as \"MO Details\"\nfrom idsp_screening \nleft join contact_person on contact_person.id = idsp_screening.id\ninner join loc_det on idsp_screening.loc_id = loc_det.loc_id \nleft join fhw_det on idsp_screening.loc_id = fhw_det.loc_id;","queryId":1546,"fieldName":"tableField","queryUUID":"a8f92755-60be-43d4-b19a-9e4f125c219c","queryParams":"limit_offset,filter_type,loggedInUserId,location_id"}],"fieldsContainer":[{"index":1,"isHidden":true,"fieldName":"filter_type","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"Filter Type","isMandatory":true,"queryForParam":"","queryIdForParam":"","queryUUIDForParam":null,"requiredUptoLevel":1},{"isHidden":true,"fieldName":"demographic_location_id","fieldType":"text","queryUUID":null,"displayName":"Demographic Location","queryUUIDForParam":null},{"index":0,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","isMandatory":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1545,"queryUUIDForParam":"18c7d42e-ff86-4375-b480-1e81198ddc9b","requiredUptoLevel":1}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'idsp_member_wise', 'c8276714-650e-4610-b7b4-d7e565d01191'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(637, 'Oedema (CMTC/NRC Facility Monitoring - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 17:08:00.290', 60512, '2020-09-07 16:51:52.810', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1716,"queryUUIDForParam":"d83ba755-c9ff-41b7-9f39-b80c1611953e"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_admission_bilateral_pitting_oedema in (''+'',''++'',''+++'')\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1717,"queryUUID":"8a3b7958-4a76-439e-a6e8-b813ea658e64","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', 'oedema_cmtc_fac', 'd640b38c-b7ca-45d4-9043-40756726f28e'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(635, 'Less than 11.5 MUAC (CMTC/NRC Facility Monitoring - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 17:08:30.900', 60512, '2020-09-07 16:47:43.229', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1712,"queryUUIDForParam":"e7622086-a601-48fb-a9d9-21d5fe1c2ed8"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_admission_muac < 11.5\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1713,"queryUUID":"f7d5b49a-061e-49bd-b501-61cd9600f45f","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', 'less_muac_cmtc_fac', '4f01c554-0fb3-4e54-8efb-3566baaffebc'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(119, 'Missing Delivery Report', NULL, true, 'DYNAMIC', NULL, '2019-04-09 17:15:06.875', 58981, '2019-01-22 16:45:43.733', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\nmember_det as (\n\tselect r.member_id, r.member_current_location_id as loc_id,\n\tm.unique_health_id, m.family_id, \n\tm.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,\n\tto_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd\n\tfrom rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, rch_pregnancy_registration_det p\n\twhere r.member_id = m.id and r.member_current_location_id  = l.child_id and r.pregnancy_reg_id = p.id\n\tand l.parent_id = #location_id#\n\tand r.preg_reg_state in (''PENDING'',''PREGNANT'') \n\tand r.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')\n\tand r.edd <= current_date\n\tand r.lmp_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by p.lmp_date\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from member_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc\n\twhere loc.loc_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 154, "fieldName": "tableField", "queryUUID": "cf6d0806-80a3-4f0a-971e-a7bae1041357", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 153, "queryUUIDForParam": "37d0d664-15bc-449b-8c7c-2444917f65bb"}, {"index": 2, "isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year", "queryIdForParam": 205, "queryUUIDForParam": "c045fb02-c499-4309-9abf-4e46cac5f308"}, {"index": 1, "isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year", "queryIdForParam": 204, "queryUUIDForParam": "c4bea8a8-ec21-4836-af19-e0b4f72ec910"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'missing_delivery', '5da28570-b41e-4558-a109-d31bac2660ff'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(292, 'Child Service(Work Progress - Institutions)', NULL, true, 'DYNAMIC', NULL, '2019-11-20 15:43:50.953', 64189, '2019-03-04 12:20:34.764', 75398, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\n, dates as(\nselect\n\tto_date (\n\tcase\n\t\twhen ''#from_date#'' = ''null'' then null\n\t\telse ''#from_date#''\n\tend,\n\t''MM/DD/YYYY'') as from_date ,\n\tto_date (\n\tcase\n\t\twhen ''#to_date#'' = ''null'' then null\n\t\telse ''#to_date#''\n\tend,\n\t''MM/DD/YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as too_date ),\nmember_det as(\nselect\n\timt_member.id,\n\timt_member.mother_id,\n\timt_member.unique_health_id,\n\tconcat(imt_member.first_name, ''  '', imt_member.middle_name, ''  '', imt_member.last_name) as \"Child name\",\n\timt_family.location_id as loc_id,\n\timt_family.area_id as area_id,\n\tto_char(rcsm.service_date,\n\t''DD/MM/YYYY'') as \"Service Date\"\nfrom\n\thealth_infrastructure_details infra\ninner join rch_child_service_master rcsm on\n\tinfra.id = rcsm.health_infrastructure_id\ninner join imt_member on\n\timt_member.id = rcsm.member_id\ninner join imt_family on\n\timt_member.family_id = imt_family.family_id\ninner join dates on\n\trcsm.created_on between dates.from_date and dates.too_date\nwhere\n\tinfra.location_id = #location_id#\n\tand rcsm.is_from_web=true\n\tand infra.id = #health_infra_id# ),\nimt_mother as(\nselect\n\timt_member.id,\n\timt_member.unique_health_id,\n\timt_member.mother_id,\n\tconcat(imt_member.first_name, ''  '', imt_member.middle_name, ''  '', imt_member.last_name) as \"Mother name\",\n\timt_member.mobile_number\nfrom\n\timt_member\nwhere\n\timt_member.id in(\n\tselect\n\t\tmother_id\n\tfrom\n\t\tmember_det )),\nloc as (\nselect\n\tdistinct loc_id\nfrom\n\tmember_det ),\nloc_det as (\nselect\n\tloc.loc_id,\n\tstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \nfrom\n\tloc,\n\tlocation_master l1,\n\tlocation_hierchy_closer_det lhcd,\n\tlocation_master l2,\n        prefered_language\nwhere\n\tl1.id = loc.loc_id\n\tand lhcd.child_id = l1.id\n\tand l2.id = lhcd.parent_id\ngroup by\n\tloc.loc_id ),\nfhw_det as (\nselect\n\tloc.loc_id,\n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' || ''Contact : '' ||\n\tcase\n\t\twhen u.contact_number is not null then u.contact_number\n\t\telse ''N/A''\n\tend as fhw\nfrom\n\tum_user_location ul,\n\tum_user u,\n\tloc\nwhere\n\tloc.loc_id = ul.loc_id\n\tand u.id = ul.user_id\n\tand u.state = ''ACTIVE''\n\tand ul.state = ''ACTIVE''\n\tand u.role_id = (\n\tselect\n\t\tid\n\tfrom\n\t\tum_role_master\n\twhere\n\t\tname = ''FHW'')\ngroup by\n\tloc.loc_id,\n\tul.state,\n\tu.state,\n\tu.first_name,\n\tu.last_name,\n\tu.user_name,\n\tu.contact_number),\nasha_areas as (\nselect\n\tdistinct area_id\nfrom\n\tmember_det ),\nasha_det as (\nselect\n\tasha_areas.area_id,\n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' || ''Contact : '' ||\n\tcase\n\t\twhen u.contact_number is not null then u.contact_number\n\t\telse ''N/A''\n\tend as asha\nfrom\n\tum_user_location ul,\n\tum_user u,\n\tasha_areas\nwhere\n\tasha_areas.area_id = ul.loc_id\n\tand u.id = ul.user_id\n\tand u.state = ''ACTIVE''\n\tand ul.state = ''ACTIVE''\n\tand u.role_id = (\n\tselect\n\t\tid\n\tfrom\n\t\tum_role_master\n\twhere\n\t\tname = ''Asha'')\ngroup by\n\tasha_areas.area_id,\n\tul.state,\n\tu.state,\n\tu.first_name,\n\tu.last_name,\n\tu.user_name,\n\tu.contact_number) select\n\tROW_NUMBER() over () as \"Sr No\",\n\tmember_det.unique_health_id as \"Child ID\",\n\tmember_det.\"Child name\",\n\tmember_det.\"Service Date\",\n\tloc_det.aoi as \"Location\",\n\tcase when imt_mother.unique_health_id is null then ''N/A''\n\telse imt_mother.unique_health_id\n\tend as \"Mother ID\",\n\tcase when imt_mother.\"Mother name\" is null then ''N/A''\n\telse imt_mother.\"Mother name\" end,\n\tcase when imt_mother.mobile_number is null then ''N/A''\n\telse imt_mother.mobile_number\n\tend as \"Mobile number\",\n\tcase\n\t\twhen fhw_det.fhw is null then ''No FHW Assigned''\n\t\telse fhw_det.fhw\n\tend as \"FHW Details\",\n\tcase\n\t\twhen asha_det.asha is null then ''No Asha Assigned''\n\t\telse asha_det.asha\n\tend as \"Asha Details\"\nfrom\n\tmember_det\ninner join loc_det on\n\tmember_det.loc_id = loc_det.loc_id\nleft join imt_mother on\n\timt_mother.id = member_det.mother_id\nleft join fhw_det on\n\tmember_det.loc_id = fhw_det.loc_id\nleft join asha_det on\n\tmember_det.area_id = asha_det.area_id #limit_offset#;", "queryId": 769, "fieldName": "tableField", "queryUUID": "4f9361b4-1363-4563-bef9-5378c4dcf37e", "queryParams": "limit_offset,from_date,to_date,loggedInUserId,location_id,health_infra_id"}], "fieldsContainer": [{"index": 3, "isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(to_date(''#to_date#'',''MM/DD/YYYY''),''DD/MM/YYYY'') as to_date;", "queryIdForParam": 899, "queryUUIDForParam": "ce3212b5-1205-4079-9c14-df169607f24a"}, {"index": 2, "isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(to_date(''#from_date#'',''MM/DD/YYYY''),''DD/MM/YYYY'') as from_date;", "queryIdForParam": 898, "queryUUIDForParam": "994b53b1-05c2-4c37-8128-633be6644864"}, {"index": 1, "isHidden": true, "fieldName": "health_infra_id", "fieldType": "text", "queryUUID": null, "displayName": "Health Infrastructure Name", "queryForParam": "select name as health_infra_id from health_infrastructure_details where id = #health_infra_id#", "queryIdForParam": 768, "queryUUIDForParam": "03bf8d4a-4532-4419-9dc9-8b042821abe2"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId# )\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 767, "queryUUIDForParam": "fe4dc99d-34ad-41a5-82fd-4f9a0abe2070"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'child_ins_progress', '890ac8d8-b094-438e-80c8-dec93e4fc021'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(634, 'Less than 3SD (CMTC/NRC Facility Monitoring - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 17:08:51.279', 60512, '2020-09-07 16:46:15.812', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1710,"queryUUIDForParam":"d24f9e12-96dd-41b4-ab0a-e9e5e7ad1678"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere fsam_admission_sd_score in (''SD4'',''SD3'')\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1711,"queryUUID":"758a0fa9-505d-4661-827c-835a265de5df","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', 'less_3sd_cmtc_fac', '9b502893-999b-4b8f-911c-21668eb0c056'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(385, 'MTP(ANC Services Provided During The Year) (Monthly)', NULL, true, 'DYNAMIC', NULL, '2020-10-13 11:49:34.370', 60512, '2019-04-22 17:29:47.538', 78434, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"--MTP(ANC Services Provided During The Year)\nwith parameters as (\nselect CAST(#location_id# AS INTEGER) as location_id,\nto_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date\n,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date,\nCAST(''#demographic_location_id#'' AS TEXT) as demographic_group,\nCAST(''409'' AS INTEGER) as loggedInUserId,\n(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language\n),member_det as (\n\tselect r.member_id, r.delivery_location_id as loc_id,\n\tr.unique_health_id, r.family_id, r.member_name as name,\n\tto_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.date_of_delivery, ''DD/MM/YYYY'') as dod\n\t,to_char(r.delivery_reg_date,''DD/MM/YYYY'') as reg_date\t\n\tfrom rch_pregnancy_analytics_details r\n\t, location_hierchy_closer_det l\n\t, parameters p\n\twhere r.delivery_location_id  = l.child_id\n\tand r.delivery_outcome in (''MTP'') and (delivery_out_of_state_govt is false and delivery_out_of_state_pvt is false)\n\tand l.parent_id =p.location_id\n\tand r.delivery_reg_date between p.from_date and p.to_date\n        and (p.demographic_group=''null'' or l.child_loc_demographic_type in ( select distinct demographic_type from location_demographic_type_master \n\twhere demographic_group = p.demographic_group)) \n\torder by r.delivery_reg_date\n\t#limit_offset#\n),  loc_det as (\n\tselect loc.loc_id,  \nstring_agg((case when (p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p \n\twhere lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat_ws(u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',\n\tcase when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, (select distinct loc_id from member_det) loc, location_hierchy_closer_det\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.reg_date as \"Registration date\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.dod as \"MTP Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;","queryId":1034,"fieldName":"tableField","queryUUID":"f57d0549-bfb6-4ec0-b45c-64be35d94077","queryParams":"to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"from_month","fieldType":"text","queryUUID":null,"displayName":"From Month","queryUUIDForParam":null},{"isHidden":true,"fieldName":"to_month","fieldType":"text","queryUUID":null,"displayName":"To Month","queryUUIDForParam":null},{"isHidden":true,"fieldName":"demographic_location_id","fieldType":"text","queryUUID":null,"displayName":"Demographic Location","queryUUIDForParam":null},{"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1033,"queryUUIDForParam":"8b70dbdc-44ce-48ca-aff1-fdcd217bf3ae"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","isBackButtonRequired":false}', 'mtp_mat_monthly', '3e36f472-f253-4954-a786-99758d45b1f8'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(178, 'LBW Child Registered(Less then 1 kg)', NULL, true, 'DYNAMIC', NULL, '2019-10-10 12:36:45.848', 1, '2019-02-12 16:08:03.523', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Less then 1 kg(LBW Child Registered)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.delivery_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.delivery_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.birth_weight is not null and c.birth_weight < 1.0\n\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 315, "fieldName": "tableField", "queryUUID": "e39e5d8c-409b-42dc-936d-0c5e179b770c", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 314, "queryUUIDForParam": "b733862f-75a2-4b88-81d3-5bc59af6c1c7"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'ch_lbw_child_reg1kg', 'ed00082d-cb61-450d-a51b-e222bff2efd1'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(399, 'Measles Rubella given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 16:50:47.246', 64189, '2019-04-29 16:46:55.624', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Measles Rubella given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand measles_rubella is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 1068, "fieldName": "tableField", "queryUUID": "a126ab5a-3bcb-4e8c-aca8-8d5d610ad0fc", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1067, "queryUUIDForParam": "bb57c1f1-63fa-4638-b60e-3c235883a051"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_me_rub_given_year', '1aa64021-be18-495e-bfb1-c04d4edf7105'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(632, 'More than 6 months (CMTC/NRC Facility Monitoring - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 17:09:25.902', 60512, '2020-09-07 16:40:57.045', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1706,"queryUUIDForParam":"d0a7fe5d-1679-4958-b967-b112414f5a2f"},{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere dob <= fsam_admission_date - interval ''6 month''\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1707,"queryUUID":"b3e2745a-aa8d-4aa4-a8e7-9c7b50b91a0f","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"isFilterOpen":false,"htmlData":true}', 'more_6_mon_cmtc_fac', 'c0c925af-caab-4e74-8608-d599d376780b'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(631, 'Less than 6 months (CMTC/NRC Facility Monitoring - V3)', NULL, true, 'DYNAMIC', NULL, '2020-10-01 16:57:55.387', 60512, '2020-09-07 16:38:29.402', 60512, '{"layout":"dynamicReportWithPagination","templateType":"DYNAMIC_REPORTS","containers":{"fieldsContainer":[{"fieldName":"from_date","displayName":"From Date","fieldType":"text","isHidden":true},{"fieldName":"to_date","displayName":"To Date","fieldType":"text","isHidden":true},{"fieldName":"location_id","displayName":"Location","fieldType":"text","isHidden":true,"queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","index":2,"queryIdForParam":1704,"queryUUIDForParam":"f3d4965c-d58a-4d2c-86cc-ae6fa12a0abb"}],"tableContainer":[{"fieldName":"tableField","query":"with details as (\n\tselect *\n\tfrom child_cmtc_nrc_analytics_details\n\twhere dob > fsam_admission_date - interval ''6 month''\n\tand fsam_admission_date between\n\t(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)\n\tand\n\t(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''\n\tand fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\t#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nimt_member.family_id as \"Family ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Child Name\",\nto_char(imt_member.dob,''DD/MM/YYYY'') as \"Child DOB\",\nconcat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as \"Mother Name\",\nget_location_hierarchy(imt_family.location_id) as \"Location\",\nhealth_infrastructure_details.name as \"Admission Center\",\nto_char(details.fsam_admission_date,''DD/MM/YYYY'') as \"Admission Date\"\nfrom details\ninner join imt_member on imt_member.id = details.child_id\ninner join imt_family on imt_member.family_id = imt_family.family_id\nleft join imt_member m2 on imt_member.mother_id = m2.id\ninner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id","queryId":1705,"queryUUID":"5b61d201-1adb-44e8-8b4a-121475d0f300","queryParams":"limit_offset,from_date,to_date,location_id","htmlData":"#table#\n<b>This line list report contains the data of the selected location as well as its child locations.</b>"}]},"isPrintOption":true,"isExcelOption":true,"locationLevel":"","showDateAsOn":true,"htmlData":true}', 'less_6_mon_cmtc_fac', '0be95bb4-b7b8-47e6-b126-995589bf56cd'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(163, 'Penta 1 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 16:51:49.390', 1, '2019-02-11 17:06:17.093', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Penta 1 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.penta1 is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 283, "fieldName": "tableField", "queryUUID": "fbef98d3-903f-4339-8b99-feadbc5434f9", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 282, "queryUUIDForParam": "c63d667e-0a9c-4719-b629-e45b0ab4938e"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_penta1_given_year', '44ba1ba3-698f-42cb-b7dd-6a32801bec59'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(365, 'LBW Child Registered (3.1-3.5 kg)', NULL, true, 'DYNAMIC', NULL, '2019-10-10 12:38:06.665', 409, '2019-04-12 16:44:14.674', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--LBW Child Registered (3.1-3.5 kg)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.delivery_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.delivery_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.birth_weight is not null and c.birth_weight >= 3 and c.birth_weight < 3.5\n\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 992, "fieldName": "tableField", "queryUUID": "058d779e-c5f0-4388-8a78-45ff86e609d8", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 991, "queryUUIDForParam": "657cd85c-16be-4ea0-9a20-820fab64689f"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_lbw_ch_3.1_3.5', 'a5f69717-7f26-460d-a553-774fc3607ac0'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(367, 'LBW Child Registered (Above 4 kg)', NULL, true, 'DYNAMIC', NULL, '2019-10-10 12:38:41.214', 64189, '2019-04-12 17:06:52.628', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--LBW Child Registered (Above 4 kg)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.delivery_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.delivery_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.birth_weight is not null and c.birth_weight >= 4\n\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 996, "fieldName": "tableField", "queryUUID": "9b2cf909-3ad9-4a8d-9dc9-ef4156a4b160", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 995, "queryUUIDForParam": "de623ce4-15ab-4f46-9aeb-c987abfabb47"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_lbw_ch_above_4', '32a9558e-7f86-4bbf-a48b-d6908a390687'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(580, 'Infrastructure wise Lab report details', NULL, true, 'DYNAMIC', NULL, '2020-09-24 14:28:49.057', 74840, '2020-04-10 11:13:46.451', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with location_det as (\n\tselect child_id as loc_id\n\tfrom location_hierchy_closer_det lhc\n\twhere \n\tparent_id = #location_id# and depth = 1\n)\n,infra_info as (\n\tselect\n\thid.id as infra_id,\n\thid.location_id,\n\thid.name infra_name\t\t\n\tfrom health_infrastructure_details  hid\n\tinner join location_hierchy_closer_det loch on loch.child_id = hid.location_id\n\twhere loch.parent_id in (select distinct loc_id from location_det) and (is_covid_hospital or is_covid_lab)\n\tgroup by hid.id,hid.location_id,hid.name \t\t\n)\n\n,lab_wise_analytics as (\n\tselect cad.health_infra_id,\n\tcount(1) filter(where cltd.lab_sample_received_on is not null) total_sample_received,\n\tcount(1) filter(where cltd.lab_sample_received_on is null) total_pending_sample,\n\tcount(1) filter(where cltd.lab_sample_received_on is not null and cltd.lab_sample_rejected_on is null) total_accepted_for_testing,\n\tcount(1) filter(where cltd.lab_sample_received_on is not null and cltd.lab_sample_rejected_on is not null) total_Rejected_for_testing,\n\tcount(1) filter(where cltd.lab_result_entry_on is not null and cltd.lab_sample_rejected_on is null) total_case_tested,\n\tcount(1) filter(where cltd.lab_result_entry_on is null) total_case_in_queue_for_testing,\n\tcount(distinct cad.id) filter (where cltd.lab_result = ''POSITIVE'') as positive_cases,\n\tcount(distinct cad.id) filter (where cltd.lab_result = ''NEGATIVE'') as negative_cases,\n\tcount(distinct cad.id) filter (where cltd.lab_result = ''INDETERMINATE'') as inderminate_cases\n\tfrom covid19_lab_test_detail cltd,covid19_admission_detail cad\n\twhere cltd.covid_admission_detail_id = cad.id\n\tgroup by cad.health_infra_id\n)\n,final_det as (\n\tselect\n\tinfra_info.location_id,\n\tinfra_info.infra_name,\n\tinfra_info.infra_id,\n\tanalytics.total_sample_received,\n\ttotal_accepted_for_testing,\n\ttotal_Rejected_for_testing,\n\tanalytics.total_pending_sample,\n\tanalytics.total_case_tested,\n\tanalytics.total_case_in_queue_for_testing,\n\tanalytics.positive_cases,\n\tanalytics.negative_cases,\n\tanalytics.inderminate_cases\n\tfrom infra_info left join lab_wise_analytics analytics on infra_info.infra_id = analytics.health_infra_id\n\t#limit_offset#\n\n)\nselect\nrow_number() over () + cast(substring(''#limit_offset#'', position(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nlocation_id as hidden_location_id,\ninfra_name as \"Lab Name\",\ncoalesce(total_sample_received,0) as \"Total Sample Received\",\ncoalesce(total_pending_sample,0) as \"Total Pending Sample to Receive\",\ncoalesce(total_accepted_for_testing,0) as \"Total Accepted Sample For Testing\",\ncoalesce(total_Rejected_for_testing,0) as \"Total Rejected Sample for Testing\",\ncoalesce(total_case_tested,0) as \"Total Cases Tested\",\ncoalesce(total_case_in_queue_for_testing,0) as \"Total cases In Queue for Testing\",\ncoalesce (positive_cases,0) as \"Positive Case\",\ncoalesce (negative_cases,0) as \"Negative Case\",\ncoalesce (inderminate_cases,0) as \"interminate Case\"\nfrom final_det","queryId":1586,"fieldName":"tableField","queryUUID":"33541cb0-8bae-43b1-aa69-74521918fc39","queryParams":"limit_offset,location_id"}],"fieldsContainer":[{"fieldName":"location_id","fieldType":"location","queryUUID":null,"displayName":"Location ID","isMandatory":true,"queryUUIDForParam":null,"requiredUptoLevel":1,"fetchAccordingToUserAoi":true}]},"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'infra_covid_lab_det', '91e373a2-a090-43fd-bfe0-1c8c5bec13c6'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(284, 'PW Registered with LMP (Service provide to pregnant women with lmp)', NULL, true, 'DYNAMIC', NULL, '2019-09-23 16:45:26.440', 58981, '2019-03-01 19:23:53.336', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--PW Registered with LMP (Service provide to pregnant women with lmp)\nwith parameters as (\nselect CAST(#location_id# AS INTEGER) as location_id,\nto_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_month_year,\nto_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') as to_month_year,\nCAST(''#demographic_location_id#'' AS TEXT) as demographic_group,\n(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language\n),\nmember_det as (\n\tselect r.member_id, r.native_location_id as loc_id,\n\tr.unique_health_id, r.family_id, r.member_name as name,\n\tto_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd\n\tfrom rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p\n\twhere r.native_location_id  = l.child_id \n\tand l.parent_id = p.location_id\n\tand r.lmp_month_year between p.from_month_year and p.to_month_year\n\tand (p.demographic_group=''null'' or l.child_loc_demographic_type in ( select distinct demographic_type from location_demographic_type_master \n\twhere demographic_group = p.demographic_group)) \n\torder by r.lmp_date\n\t#limit_offset#\n), loc_det as (\n\tselect loc.loc_id, \n        string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name\n\t\t\t\t\t\telse l2.name end),''>'' order by lhcd.depth desc) as aoi\n\tfrom (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p\n\twhere lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',\n\tcase when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 736, "fieldName": "tableField", "queryUUID": "f352ec22-7949-4d79-9500-091539f1b532", "queryParams": "limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 733, "queryUUIDForParam": "66503735-9766-4a41-a12c-a934697b5690"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 734, "queryUUIDForParam": "ab822e3a-349d-443a-8381-11f4bcb74a3e"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 735, "queryUUIDForParam": "60a97ce4-c32c-45fc-834a-49c76542cbe2"}]}, "isFilterOpen": false, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mtr_pw_reg_with_lmp', 'fd07e715-ac38-41f2-befc-febc8b05adbc'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(285, 'Early ANC (Service provide to pregnant women with lmp)', NULL, true, 'DYNAMIC', NULL, '2019-09-23 19:43:37.919', 58981, '2019-03-01 19:28:06.407', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Early ANC (Service provide to pregnant women with lmp)\nwith parameters as (\nselect CAST(#location_id# AS INTEGER) as location_id,\nto_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_month_year,\nto_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') as to_month_year,\nCAST(''#demographic_location_id#'' AS TEXT) as demographic_group,\n(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language\n),\nmember_det as (\n\tselect r.member_id, r.native_location_id as loc_id,\t\n\tr.unique_health_id, r.family_id, r.member_name as name,\n\tto_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd\n\tfrom rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p\n\twhere r.native_location_id  = l.child_id \n\tand l.parent_id = p.location_id\n\tand early_anc = true\n\tand r.lmp_month_year between p.from_month_year and p.to_month_year\n\tand (p.demographic_group=''null'' or l.child_loc_demographic_type in ( select distinct demographic_type from location_demographic_type_master \n\twhere demographic_group = p.demographic_group)) \n\torder by r.lmp_date\n\t#limit_offset#\n), loc_det as (\n\tselect loc.loc_id, \n        string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p\n\twhere lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',\n\tcase when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 740, "fieldName": "tableField", "queryUUID": "e00281ee-a362-4eca-8615-208979531dd4", "queryParams": "limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 2, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 739, "queryUUIDForParam": "da4b1c1e-1196-4411-b577-bb5b9c1a881b"}, {"index": 1, "isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 738, "queryUUIDForParam": "e16bad46-4df8-49dd-9eb5-4b225419091a"}, {"index": 0, "isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 737, "queryUUIDForParam": "4aa7620c-483e-4b49-95e0-9746ef0bc3c2"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mtr_early_anc_lmp', '4c0c5075-fa56-4b3a-8b8e-78ad7f604d9b'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(195, 'OPV 3 given(Immunization Services Provided to Children with Date of Birth)', NULL, true, 'DYNAMIC', NULL, '2020-05-25 16:21:09.336', 1, '2019-02-13 12:31:41.935', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--OPV 3 given(Immunization Services Provided to Children with Date of Birth)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.opv3 is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.dob_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 day''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 407, "fieldName": "tableField", "queryUUID": "0038c4f6-f6a2-4f70-83f5-034e9b7046a0", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 405, "queryUUIDForParam": "bb842b51-e390-4d09-8676-5406415e3a9f"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 406, "queryUUIDForParam": "848fe347-6b44-416d-97f9-e1a0a0729d1d"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 404, "queryUUIDForParam": "89030e3d-5a74-4c73-ac0e-b72e96b748d2"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": false}', 'ch_opv3_monthly', '30f646ae-54e1-447f-84fe-dea7ebc37e67'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(521, 'RCH Push Report', NULL, true, 'DYNAMIC', NULL, '2019-12-05 13:34:20.705', 63746, '2019-09-13 12:24:39.386', 74840, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "with eligible_couple as (\n\tselect \n\tcast(''Eligible registration'' as text) as \"service\",\n\tcount(1) as \"total count\",\n\tsum(case when eligible_registration_id != ''-1'' then 1 else 0 end) as \"success count\",\n\tsum(case when eligible_registration_id = ''-1''  then 1 else 0 end) as \"failed count\",\n\t0 as pending\n\tfrom anmol_master\n)\n,tracking as (\n\tselect \n\tcast(''Tracking'' as text) as \"service\",\n\tcount(1) as \"total count\",\n\tsum(case when anmol_follow_up_status = ''SUCCESS'' then 1 else 0 end) as \"success count\",\n\tsum(case when anmol_follow_up_status = ''FAIL'' then 1 else 0 end) as \"failed count\",\n\tsum(case when anmol_follow_up_status is null then 1 else 0 end) as pending\n\tfrom anmol_master anmol\n\tinner join rch_lmp_follow_up lmp on anmol.member_id = lmp.member_id\n\twhere anmol.state=''ACTIVE'' and eligible_registration_id!= ''-1'' \n)\n,anc as (\n\tselect \n\tcast(''Anc'' as text) as \"service\",\n\tcount(1) as \"total count\",\n\tsum(case when anmol_anc_status = ''SUCCESS'' then 1 else 0 end) as \"success count\",\n\tsum(case when anmol_anc_status = ''FAIL'' then 1 else 0 end) as \"failed count\",\n\tsum(case when anmol_anc_status is null then 1 else 0 end) as pending\n\tfrom anmol_master anmol\n\tinner join rch_anc_master anc on anmol.member_id = anc.member_id\n\twhere anmol.pregnancy_reg_det_id  = anc.pregnancy_reg_det_id\n\tAND anmol.mother_medial_registration_status = ''SUCCESS''\n\tAND anmol.state=''ACTIVE'' \n)\n,pnc_mother as (\n\tselect \n\tcast(''PNC'' as text) as \"service\",\n\tcount(1) as \"total count\",\n\tsum(case when anmol_pnc_status = ''SUCCESS'' then 1 else 0 end) as \"success count\",\n\tsum(case when anmol_pnc_status = ''FAIL'' then 1 else 0 end) as \"failed count\",\n\tsum(case when anmol_pnc_status is null then 1 else 0 end) as pending\n\tfrom anmol_master anmol\n\tinner join rch_pnc_mother_master pnc_mother on anmol.member_id = pnc_mother.mother_id\n\tinner join rch_pnc_master pnc_master on pnc_master.id = pnc_mother.pnc_master_id\n\twhere anmol.pregnancy_reg_det_id  = pnc_master.pregnancy_reg_det_id\n\tand anmol.child_infant_registration_status =''SUCCESS''\n)\n,pnc_child as(\n\tselect \n\tcast(''Child PNC'' as text) as \"service\",\n\tcount(1) as \"total count\",\n\tsum(case when anmol_pnc_status = ''SUCCESS'' then 1 else 0 end) as \"success count\",\n\tsum(case when anmol_pnc_status = ''FAIL'' then 1 else 0 end) as \"failed count\",\n\tsum(case when anmol_pnc_status is null then 1 else 0 end) as pending\n\tfrom anmol_child_master anmol\n\tinner join rch_pnc_child_master pnc_child on anmol.child_id = pnc_child.child_id\n\tand anmol.child_registration_status = ''SUCCESS''\n)\n,mother_reg as (\n\tselect \n\tcast(''Mother registration'' as text) as \"service\",\n\tcount(1) as \"total count\",\n\tsum(case when mother_registration_status = ''SUCCESS'' then 1 else 0 end) as \"success count\",\n\tsum(case when mother_registration_status = ''FAIL'' then 1 else 0 end) as \"failed count\",\n\tsum(case when  mother_registration_status is null then 1 else 0 end) as pending\n\tfrom anmol_master\n\twhere eligible_tracking_status =''SUCCESS''\n)\n,mother_medical as (\n\tselect \n\tcast(''Mother medical'' as text) as \"service\",\n\tcount(1) as \"total count\",\n\tsum(case when mother_medial_registration_status = ''SUCCESS'' then 1 else 0 end) as \"success count\",\n\tsum(case when mother_medial_registration_status = ''FAIL'' then 1 else 0 end) as \"failed count\",\n\tsum(case when mother_medial_registration_status is null  then 1 else 0 end) as pending\n\tfrom anmol_master anmol inner join rch_pregnancy_analytics_details rpad on rpad.pregnancy_reg_id = anmol.pregnancy_reg_det_id\n\twhere anmol.mother_registration_status = ''SUCCESS''\n)\n, child_infalnt as (\n\tselect \n\tcast(''Infant registrations'' as text) as \"service\",\n\tcount(1) as \"total count\",\n\tsum(case when child_infant_registration_status = ''SUCCESS'' then 1 else 0 end) as \"success count\",\n\tsum(case when child_infant_registration_status = ''FAIL'' then 1 else 0 end) as \"failed count\",\n\tsum(case when child_infant_registration_status is null then 1 else 0 end) as pending\n\tfrom anmol_child_master\n)\n, child_registration as (\n\tselect \n\tcast(''Child registration'' as text) as \"service\",\n\tcount(1) as \"total count\",\n\tsum(case when child_registration_status = ''SUCCESS'' then 1 else 0 end) as \"success count\",\n\tsum(case when child_registration_status = ''FAIL'' then 1 else 0 end) as \"failed count\",\n\tsum(case when child_registration_status is null then 1 else 0 end) as pending\n\tfrom anmol_master master inner join anmol_child_master child on master.id = child.anmol_master_id\n\twhere master.mother_delivery_status = ''SUCCESS'' \n)\n\n,immunisation as(\n\tselect \n\tcast(''Child immunization'' as text) as \"service\",\n\tcount(1) as \"total count\",\n\tsum(case when imm.anmol_child_tracking_status = ''SUCCESS'' then 1 else 0 end) as \"success count\",\n\tsum(case when imm.anmol_child_tracking_status = ''FAIL'' then 1 else 0 end) as \"failed count\",\n\tsum(case when imm.anmol_child_tracking_status is null then 1 else 0 end) as pending\n\tfrom anmol_child_master acm\n                inner join anmol_master am on am.id = acm.anmol_master_id \n                inner join rch_immunisation_master imm on imm.member_id = acm.child_id and imm.member_type=''C'' \n                inner join anmol_immunisation_master amm on case when imm.vitamin_a_no is null then imm.immunisation_given else concat(imm.immunisation_given,''-'',imm.vitamin_a_no) end = amm.immunisation_given\n\t\twhere \n\t\tacm.child_registration_status =''SUCCESS'' and imm.visit_type!=''FHW_WPD'' \n)\nselect * from eligible_couple\nunion \nselect * from tracking\nunion all\nselect * from anc\nunion all\nselect * from pnc_mother\nunion all\nselect * from pnc_child\nunion all\nselect * from mother_reg\nunion all\nselect * from mother_medical\nunion all\nselect * from child_infalnt\nunion all\nselect * from child_registration\nunion all\nselect * from immunisation", "queryId": 1412, "fieldName": "tableField", "queryUUID": "9cd86ece-11b4-4a3f-8e28-e83de6b7f8e0", "queryParams": null}], "fieldsContainer": []}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'rch_push_report', '35395a1f-5dff-42ea-9667-cac67b31bb84'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(304, '1 PNC (Maternal Health Services provided to the mother registered during the year)', NULL, true, 'DYNAMIC', NULL, '2020-05-11 13:04:30.451', 58981, '2019-03-06 15:41:19.886', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--1 PNC (Maternal Health Services provided to the mother registered during the year)\nwith parameters as(\nselect CAST(#location_id# AS INTEGER) as location_id,\nCAST(''#financial_year#'' AS TEXT) as financial_year,\nCAST(''#demographic_location_id#'' AS TEXT) as demographic_group,\n(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language\n),\n member_det as (\n\tselect r.member_id, r.tracking_location_id as loc_id,\n\tr.unique_health_id, r.family_id, \n\tr.member_name as name,\n\tto_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd\n\tfrom rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p\n\twhere r.tracking_location_id  = l.child_id\n\tand pnc1 is not null\n\tand l.parent_id = p.location_id\n\tand r.reg_service_financial_year = p.financial_year\n        and (p.demographic_group=''null'' or l.child_loc_demographic_type in \n\t\t( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)\n\t)\n    and r.is_valid_for_tracking_report\n\torder by r.lmp_date\n\t#limit_offset#\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p\n\twhere lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',\n\tcase when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 793, "fieldName": "tableField", "queryUUID": "d38369e0-b9bc-4d30-8cf6-44878f79ef0b", "queryParams": "limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 792, "queryUUIDForParam": "ca67d5dc-cd44-4039-8aa0-dfc68ec8b145"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mtr_hlth_srv_pnc1', 'ff32b957-0c17-4387-ab7e-1d61499cd954'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(514, 'Successful - FHW Highrisk Confirmation (GVK : Call effectiveness reports)', NULL, true, 'DYNAMIC', NULL, '2019-12-27 18:28:39.952', 60512, '2019-08-22 14:06:26.922', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with dates as(\n\tselect\n\tto_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date ,\n\tto_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end, ''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_date \n),call_master_ids as (\n\tselect id,\n        created_on,\n        created_by,\n        get_location_hierarchy(location_id) as Location_hierarchy\n        from gvk_manage_call_master\n\tinner join dates on gvk_manage_call_master.created_on between dates.from_date and dates.to_date\n\twhere gvk_manage_call_master.location_id in(select child_id from location_hierchy_closer_det where parent_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1))\n\tand gvk_manage_call_master.call_response not in (''com.argusoft.imtecho.gvk.call.cant-talk'',\n\t''com.argusoft.imtecho.gvk.call.no-number-available'',\n\t''com.argusoft.imtecho.gvk.call.wrong-mobile-number'',\n        ''com.argusoft.imtecho.gvk.call.phone-switched-off'',\n        ''com.argusoft.imtecho.gvk.call.unresponsive'',\n        ''com.argusoft.imtecho.gvk.call.not-reachable'',\n''com.argusoft.imtecho.gvk.call.processed'',\n''com.argusoft.imtecho.gvk.call.processing''\n\t)\n\tand gvk_manage_call_master.call_type = ''FHW_HIGH_RISK_CONF''\n),response_ids as (\n\tselect gvk_high_risk_follow_up_responce.id, call_master_ids.created_on, call_master_ids.created_by,Location_hierarchy\n\tfrom call_master_ids\n\tinner join gvk_high_risk_follow_up_responce on call_master_ids.id = gvk_high_risk_follow_up_responce.manage_call_master_id\n\torder by gvk_high_risk_follow_up_responce.id desc\n\t#limit_offset#\n),response as (\n\tselect \n\tgvk_high_risk_follow_up_responce.id as gvk_follow_up_id,\n\tgvk_high_risk_follow_up_responce.member_id,\n    response_ids.created_on,response_ids.created_by,\n    Location_hierarchy,\n\tcase when gvk_high_risk_follow_up_responce.is_high_risk_condition_confirmed is true then ''Yes'' \n\t\twhen gvk_high_risk_follow_up_responce.is_high_risk_condition_confirmed is false then ''No'' \n\t\telse ''N/A'' end as is_high_risk_condition_confirmed\n\tfrom response_ids\n\tinner join gvk_high_risk_follow_up_responce on response_ids.id = gvk_high_risk_follow_up_responce.id\n),member_location_area_ids as (\n\tselect response.gvk_follow_up_id,response.member_id,imt_family.location_id,imt_family.area_id    \n\tfrom response\n\tinner join imt_member on imt_member.id = response.member_id\n\tinner join imt_family on imt_family.family_id = imt_member.family_id    \n),asha as (\n\tselect member_location_area_ids.gvk_follow_up_id,asha.id\n\tfrom member_location_area_ids\n\tinner join um_user_location asha_location on member_location_area_ids.area_id = asha_location.loc_id and asha_location.state = ''ACTIVE''\n\tinner join um_user asha on asha_location.user_id = asha.id and asha.role_id = 24 and asha.state = ''ACTIVE''\n),asha_unique as (\n\tselect asha.gvk_follow_up_id,max(asha.id)\n\tfrom asha\n\tgroup by asha.gvk_follow_up_id\n),fhw as (\n\tselect member_location_area_ids.gvk_follow_up_id,fhw.id\n\tfrom member_location_area_ids\n\tinner join um_user_location fhw_location on member_location_area_ids.location_id = fhw_location.loc_id and fhw_location.state = ''ACTIVE''\n\tinner join um_user fhw on fhw_location.user_id = fhw.id and fhw.role_id = 30 and fhw.state = ''ACTIVE''\n),fhw_unique as (\n\tselect fhw.gvk_follow_up_id,max(fhw.id)\n\tfrom fhw\n\tgroup by fhw.gvk_follow_up_id\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nimt_member.unique_health_id as \"Unique Health ID\",\nconcat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as \"Member Name\",\nLocation_hierarchy as \"Location\",\nto_char(response.created_on,''DD-MM-YYYY HH:MI PM'') as  \"Call Date\",\nconcat(fhw_user.first_name,'' '',fhw_user.middle_name,'' '',fhw_user.last_name) as \"FHW Name\",\nconcat(asha_user.first_name,'' '',asha_user.middle_name,'' '',asha_user.last_name) as \"ASHA Name\",\nconcat(um.first_name, '' '', um.last_name) as \"RO Details\",\nresponse.is_high_risk_condition_confirmed as \"Is Beneficiary confirmed as High Risk\"\nfrom response\ninner join imt_member on response.member_id = imt_member.id\ninner join imt_family on imt_family.family_id = imt_member.family_id\nleft join asha_unique on response.gvk_follow_up_id = asha_unique.gvk_follow_up_id\nleft join fhw_unique on response.gvk_follow_up_id = fhw_unique.gvk_follow_up_id\nleft join um_user asha_user on asha_unique.max = asha_user.id\nleft join um_user fhw_user on fhw_unique.max = fhw_user.id\nleft join um_user um on response.created_by = um.id", "queryId": 1379, "fieldName": "tableField", "queryUUID": "f34aa138-2568-4368-9768-d110cce75260", "queryParams": "limit_offset,from_date,to_date,location_id"}], "fieldsContainer": [{"fieldName": "location_id", "fieldType": "location", "queryUUID": null, "displayName": "Location", "isMandatory": true, "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1378, "queryUUIDForParam": "347dc0d2-0d61-48cb-81e8-9fce8a359d08", "requiredUptoLevel": 1, "fetchAccordingToUserAoi": true}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date", "queryIdForParam": 1391, "queryUUIDForParam": "4e79a547-fc8b-430e-8e9c-f1a489e33014"}, {"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date", "queryIdForParam": 1390, "queryUUIDForParam": "42c32564-1e3e-4b87-86e1-93b491e1e0a3"}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'suc_hi_risk_fhw_conf', '99269cdc-424a-446c-aa11-09def0cee957'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(570, 'COVID19 Sample Receive Pending', NULL, true, 'DYNAMIC', NULL, '2020-04-11 16:40:58.176', 74841, '2020-04-02 10:54:53.850', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with idsp_screening as (\nselect\n\tclt.id as \"id\",\n\tltd.id as lab_id,\n\tltd.lab_collection_on as collection_date,\n\tclt.location_id as loc_id,\n\timt_member.id as member_id,\n\tcase when clt.member_id is null\n\t\tthen concat_ws('' '',clt.first_name,clt.middle_name,clt.last_name)\n\t\telse concat(concat_ws('' '',imt_member.first_name,imt_member.middle_name,imt_member.last_name)\n\t\t\t, '' ('' , imt_member.unique_health_id , '')'' , ''<br>'' , imt_member.family_id) end as member_det,\n\tconcat(case when clt.member_id is null\n\t\tthen cast(clt.age as text)\n\t\telse cast(EXTRACT(YEAR FROM age(imt_member.dob)) as text) end,'' Year'') as age,\n\tto_char(clt.admission_date,''DD/MM/YYYY'') as admission_date,\n\thiwd.ward_name,\n\tsample_from.\"name\" as sample_from_health_infra,\n\tsample_from.is_covid_lab,\n\tclt.current_ward_id as ward_id,\n\tcacd.on_ventilator as on_ventilator,\n\tcacd.ventilator_type1 as ventilator_type1,\n\tcacd.ventilator_type2 as ventilator_type2,\n\tcacd.on_o2 as on_o2,\n\tcacd.on_air as on_air,\n\tcacd.remarks as remarks,\n\tclt.is_hiv as hiv,\n\tclt.current_bed_no,\n\tcacd.health_status as health_status,\n\tcacd.service_date as last_check_up_time\n\tfrom covid19_lab_test_detail ltd\n\tinner join covid19_admission_detail clt on ltd.covid_admission_detail_id = clt.id\n\tleft join health_infrastructure_ward_details hiwd on hiwd.id = clt.current_ward_id\n\tleft join covid19_admitted_case_daily_status cacd on cacd.id = clt.last_check_up_detail_id\n\tleft join health_infrastructure_details sample_from on sample_from.id = ltd.sample_health_infra\n\tleft join imt_member on clt.member_id = imt_member.id\n\tleft join imt_family on imt_member.family_id = imt_family.family_id\n\twhere\n\tltd.sample_health_infra_send_to = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = ''#loggedInUserId#'' and uhi.state = ''ACTIVE'')\n\tand clt.status not in (''DISCHARGED'',''DEAD'',''REFER'') and ltd.lab_collection_status = ''SAMPLE_COLLECTED''\n\torder by cacd.service_date\n#limit_offset#\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\"\n,member_det as \"Member Details\"\n,to_char(collection_date,''DD/MM/YYYY'') as \"Sample Collection Date\"\n,get_location_hierarchy(loc_id) as \"Location\"\n,age as \"age\"\n,admission_date as \"Admission Date\"\n,ward_name as \"Ward Name\"\n,ward_id as \"Ward ID\"\n,current_bed_no as \"Bed Number\"\n,health_status as \"Health Status\"\n,to_char(last_check_up_time,''DD/MM/YYYY'') as \"Last checkup time\"\n,sample_from_health_infra as \"Sample From Health Infrastructure\"\nfrom idsp_screening;", "queryId": 1555, "fieldName": "tableField", "queryUUID": "18bbec39-ccb6-4c73-9f7c-ca3c11a4e2a8", "queryParams": "limit_offset,loggedInUserId"}], "fieldsContainer": []}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'covid19_lab_test_pen', '6b4980f6-3557-4f81-8d31-ac1971c9fc19'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(597, 'RCH - ESTIMATION - Block Wise', NULL, true, 'DYNAMIC', NULL, '2020-05-08 16:09:35.294', 92665, '2020-05-06 11:38:47.566', 92665, '{"layout": "dynamicReport1", "containers": {"tableContainer": [{"query": "", "queryId": 1607, "fieldName": "tableField", "queryUUID": "c63261b1-5e34-450f-9d41-b73d3015eb8b", "queryParams": null}], "fieldsContainer": []}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'rch_est_block_wise', '1a8e8ba2-1a4e-4203-916c-357c69b0622f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(598, 'RCH - ESTIMATION - PHC Wise', NULL, true, 'DYNAMIC', NULL, '2020-05-08 16:26:37.082', 92665, '2020-05-06 11:55:12.559', 92665, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 1608, "fieldName": "tableField", "queryUUID": "cd4df9a6-f781-436c-a673-5212394e740b", "queryParams": "limit_offset"}], "fieldsContainer": []}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'rch_est_phc_wise', '84bdcadf-0849-4498-a6c0-083268e524bf'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(599, 'RCH - ESTIMATION - Sub Center Wise', NULL, true, 'DYNAMIC', NULL, '2020-05-08 16:41:36.352', 92665, '2020-05-06 11:58:01.215', 92665, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with anmol_location as (\n\tselect \n\ts.rch_code as state_code,\n\td.rch_code as district_code,\n\tdb.rch_code  as health_block_code,\n\tt.rch_code as taluka_code,\n\talm.rch_code as health_subfacility_code,\n\tf.rch_code as health_facility_code, \n\tcase when alm.english_name is null then alm.\"name\" else alm.english_name end as sub_facility_name,\n\tcase when f.english_name is null then f.\"name\" else f.english_name end as facility_name\n\tfrom \n\tanmol_location_master alm \n\tleft join anmol_location_master f on alm.parent_rch_code =  f.rch_code and f.type=''F''\n\tleft join anmol_location_master t on t.rch_code = f.parent_rch_code and  t.\"type\" = ''T''\n\tleft join anmol_location_master d on t.parent_rch_code =  d.rch_code and d.type=''D''\n\tleft join anmol_location_master S on d.parent_rch_code =  S.rch_code and s.type=''S''\n\tleft join anmol_location_master db on db.parent_rch_code =  t.rch_code and  db.type=''HB''\n\twhere  alm.\"type\" =''SF''\n) \n,\ncounts as(\n\tselect \n\talm.\"health_subfacility_code\" as health_subfacility_code,\n\t(sum(coalesce (lwa.total_members ,0))*21)/1000 as estimated_mother,\n\t(sum(coalesce(lwa.total_members,0))*19)/1000 as estimated_infant,\n\tsum(coalesce(lwa.r11_eligible_couple ,0)) as estimated_ec\n\n\tfrom \n\tanmol_location alm\n\tleft join location_master lm on lm.rch_code = cast(alm.health_subfacility_code as bigint) and lm.\"type\" = ''SC''\n\tleft join location_hierchy_closer_det lhcd on lhcd.parent_id = lm.id\n\tleft join location_wise_analytics lwa on lwa.loc_id = lhcd.child_id\n\twhere alm.state_code = ''24'' \n\tgroup by alm.health_subfacility_code\n\n)\n,total_row as(\n\tselect \n\tcast(''Total'' as varchar) \"State_code\",\n\tcast(null as int) as \"Yr\",\n\tcast('''' as varchar) \"HealthFacility_Code\",\n\tcast('''' as varchar)  \"HealthFacility_Name\",\n\tcast('''' as varchar) \"HealthSubFacility_Code\",\n\tcast('''' as varchar) \"HealthSubFacility_Name\",\n\tsum(coalesce(estimated_mother,0) ) \"Estimated_Mother\",\n\tsum(coalesce(estimated_infant,0)) \"Estimated_Infant\",\n\tcast('''' as text) as \"Created_Date\",\n\tcast('''' as text) \"Financial_Year\",\n\tsum(coalesce (estimated_ec, 0 ) ) \"Estimated_EC\" \n\tfrom counts \n)\n,det as (\n\tselect alm.state_code \"State_code\",\n\t2019 as \"Yr\",\n\talm.health_facility_code \"HealthFacility_Code\",\n\talm.facility_name  \"HealthFacility_Name\",\n\talm.health_subfacility_code \"HealthSubFacility_Code\",\n\talm.sub_facility_name \"HealthSubFacility_Name\",\n\tc.estimated_mother \"Estimated_Mother\",\n\tc.estimated_infant \"Estimated_Infant\",\n\tto_char(now(), ''yyyy-MM-dd'') as \"Created_Date\",\n\tcast(''2020-21'' as text) \"Financial_Year\",\n\tc.estimated_ec \"Estimated_EC\" \n\tfrom anmol_location alm inner join counts c on c.health_subfacility_code = alm.health_subfacility_code \t\n\t#limit_offset#   \n)\nselect * from det\nunion all\nselect * from total_row\n;", "queryId": 1609, "fieldName": "tableField", "queryUUID": "87b061aa-7abe-432f-84cd-c5c3c75cf72f", "queryParams": "limit_offset"}], "fieldsContainer": []}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'rch_est_sub_cen_wise', '89d70441-8b91-430b-8688-4d877f3ec8a5'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(17, 'User Count', NULL, true, 'DYNAMIC', NULL, '2020-02-19 16:06:09.263', 1027, '2018-04-26 15:26:31.308', 74840, '{"layout": "dynamicReport1", "htmlData": true, "containers": {"tableContainer": [{"query": "", "queryId": 36, "htmlData": "#table#\n<br/>\n<b>Note :</b><br/>\n<b>asha :</b>count of  Having Role ''ASHA'' <br/>\n<b>fhw : </b>count of  having Role ''FHW''<br/>\n<b>mo :</b>count of having any of these Role (''mo_phc'',''mo_uphc'',''mo_corporation'',''mo_ayush'')<br/>\n<b>mphw :</b>count of having Role  ''MPHW'' <br/>\n<b>cho :</b>count of having Role  ''CHO'' <br/>", "fieldName": "tableField", "queryUUID": "738ea2b3-e4bb-4ba2-a198-ac52c1e97b5a", "queryParams": "loggedInUserId,location_id"}], "fieldsContainer": [{"fieldName": "location_id", "fieldType": "location", "queryUUID": null, "displayName": "location id", "queryUUIDForParam": null, "fetchAccordingToUserAoi": true}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'user_count', '1f66a6de-f0d9-416b-ba47-94524b8480c2'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(228, 'Fully Immunized Children (Child Health Services Provided During The Year (Monthly))', NULL, true, 'DYNAMIC', NULL, '2020-06-25 15:48:50.527', 1, '2019-02-14 16:23:36.156', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 551, "fieldName": "tableField", "queryUUID": "c178ec62-9a4c-48a2-acf3-98fb31d2c3e0", "queryParams": ""}], "fieldsContainer": [{"fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "demographic_location_id", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year", "queryIdForParam": 550, "queryUUIDForParam": "ad3db7a5-59ca-4874-8db7-fb2f24bbf730"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 548, "queryUUIDForParam": "062425e8-6ed7-4537-84dd-2bc5c3c3ed79"}, {"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year", "queryIdForParam": 549, "queryUUIDForParam": "a9b0a2e7-d432-4683-a95e-868fcb0b1a34"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_fullyimmunized_yr', 'b3fcd6a9-9ca4-4b1d-bc09-fbb0d8318564'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(18, 'Training Total Users', NULL, true, 'DYNAMIC', NULL, '2020-10-26 12:17:20.495', 1027, '2018-04-26 17:23:31.598', 74841, '{"layout":"dynamicReport1","containers":{"tableContainer":[{"query":"with location_det as(\nselect child_id as loc_id from location_hierchy_closer_det  \nwhere parent_id in (case when #location_id# is not null then  #location_id# else \n(select loc_id from um_user_location where user_id = #loggedInUserId# and state = ''ACTIVE'') end)\n),users AS (\nSELECT\ndistinct on(uu.id)\nconcat(uu.first_name,'' '',uu.last_name) as \"Full Name\",\ncourse_name as \"Course Name\",\nurm.name as \"Role Name\" FROM \n\ttr_course_master\n\tinner join tr_course_role_rel tcrr on tcrr.course_id = tr_course_master.course_id and tr_course_master.course_state = ''ACTIVE''\n\tINNER JOIN um_user uu ON uu.role_id = tcrr.role_id and uu.state = ''ACTIVE''\n\tINNER JOIN um_role_master urm ON urm.id = uu.role_id\n\tINNER JOIN um_user_location ul on ul.state = ''ACTIVE'' and ul.user_id = uu.id \n\tINNER JOIN location_det ld on ld.loc_id = ul.loc_id\t \n\tWHERE\n\tuu.role_id=#role_id# and tr_course_master.course_id =#course_id#\n)\nselect ROW_NUMBER() over () as \"Sr. No.\",* from users","queryId":35,"fieldName":"tableField","queryUUID":"da2d10fc-0fe0-4b55-873f-2a8867a36b82","queryParams":"course_id,role_id,loggedInUserId,location_id"}],"fieldsContainer":[{"index":2,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"select name as location_id from location_master  where id = #location_id#","queryIdForParam":478,"queryUUIDForParam":"526bfe51-2554-4e54-a408-035680b0ab22"},{"index":1,"isHidden":true,"fieldName":"course_id","fieldType":"text","queryUUID":null,"displayName":"Course","queryForParam":"select course_name as course_id from tr_course_master  where course_id=#course_id#","queryIdForParam":477,"queryUUIDForParam":"94ca9757-a924-4bf4-94df-3515bcb2b3e5"},{"index":0,"isHidden":true,"fieldName":"role_id","fieldType":"text","queryUUID":null,"displayName":"Role","queryForParam":"select name as \"role_id\" from um_role_master where id=#role_id#","queryIdForParam":476,"queryUUIDForParam":"fcb659ce-1cbf-4abe-9d81-ef841f41bcf4"}]},"isFilterOpen":false,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","selectedContainer":"tableContainer","isBackButtonRequired":true}', 'tr_total', '617c22f3-be7c-42e6-a0c8-5861bcbd278c'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(165, 'FIPV 1 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-20 17:42:49.309', 1, '2019-02-11 17:20:28.139', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--FIPV 1 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.f_ipv1 is not null\n\tand c.is_valid_for_tracking_report = true\n\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 287, "fieldName": "tableField", "queryUUID": "cf5e7d47-16c2-474b-80b8-d85b50393e67", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 286, "queryUUIDForParam": "0e500448-6369-451f-9e82-9cb5fe07afcc"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_fipv_1_given_year', '49ac48bb-049d-4280-938c-c3584f4b4cae'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(168, 'OPV 2 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))', NULL, true, 'DYNAMIC', NULL, '2020-05-25 16:54:50.752', 1, '2019-02-11 17:39:34.222', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--OPV 2 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#), \n child_det as (\n\tselect m.id, c.tracking_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.tracking_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.opv2 is not null\n\tand c.financial_year = ''#financial_year#''\n\tand c.is_valid_for_tracking_report = true\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 293, "fieldName": "tableField", "queryUUID": "b6fbe018-b44f-464b-aa04-e86ca0b9eb99", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryForParam": "", "queryIdForParam": "", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "isUrlParam": false, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 292, "queryUUIDForParam": "e136c0ca-f9a9-414b-8267-a0b0b26bfbfd"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_opv2_given_year', '72e14dda-0513-4a70-b2ab-3997fe8b428a'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(248, 'Number of maternal death who registered with LMP(Delivery monitoring of Registered LMP)', NULL, true, 'DYNAMIC', NULL, '2019-09-21 19:26:52.013', 409, '2019-02-19 12:51:15.691', 69973, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Number of maternal death who registered with LMP(Delivery monitoring of Registered LMP)\nwith parameters as(\nselect CAST(#location_id# AS INTEGER) as location_id,\nto_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_date,\nto_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') + interval ''1 day'' as to_date,\nCAST(''#demographic_location_id#'' AS TEXT) as demographic_group,\n(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language\n),\n member_det as (\n\tselect r.member_id, r.native_location_id as loc_id,\n\tr.unique_health_id, r.family_id, \n\tr.member_name as name,\n\tto_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd\n\t,to_char(r.death_date,''DD/MM/YYYY'') as dod\n\t,r.maternal_death_type as death_type\n\tfrom rch_pregnancy_analytics_details r\n\t, location_hierchy_closer_det l\n\t, parameters p\t\t\n\twhere r.native_location_id  = l.child_id\n\tand l.parent_id = p.location_id\n\tand r.maternal_detah = true\n\tand r.lmp_month_year between p.from_date and p.to_date\n        and (p.demographic_group=''null'' or l.child_loc_demographic_type in \n\t\t( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)\n\t)\n\torder by r.lmp_date\n\t#limit_offset#\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p\n\twhere lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',\n\tcase when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\nmember_det.dod as \"Date of Death\",\nmember_det.death_type as \"Death Type\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 628, "fieldName": "tableField", "queryUUID": "fbfc86e4-3b8b-4d83-bdb9-0cd226a698bc", "queryParams": "limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 625, "queryUUIDForParam": "9ce5dabd-0939-43d7-900c-b6b904ada2e1"}, {"index": 2, "isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year", "queryIdForParam": 627, "queryUUIDForParam": "6e7e5156-ec83-49e1-ba67-953228ab57d1"}, {"index": 1, "isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year", "queryIdForParam": 626, "queryUUIDForParam": "ff906189-a134-495f-9672-cad6b9ed5dd1"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}', 'maternal_death_lmp', '05314918-23b5-40d3-abf3-347941fb1e1f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(250, 'Status  Of Reporting A(GVK EMRI - Non Emergency High Risk - Report 1)', NULL, true, 'DYNAMIC', NULL, '2019-06-26 17:03:13.251', 63746, '2019-02-19 14:59:19.672', 63746, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with location_det as(\n\tselect child_id as loc_id from location_hierchy_closer_det where parent_id = #location_id#\n),dates as(\n\tselect to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,\n\tto_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'')+interval ''1 day'' - interval ''1 millisecond'' as to_date\n),highriskusr as (\n(select member_id,reg_service_date as filter_date\nfrom rch_pregnancy_analytics_details,dates,location_det\nwhere reg_service_date between dates.from_date and dates.to_date\nand member_current_location_id = location_det.loc_id  \nand ( (cur_severe_anemia = true and (''#high_risk_condition#'' in (''Severe Maternal Anemia''))) \n\tor (cur_blood_pressure_issue = true and (''#high_risk_condition#'' in (''High BP''))))\n#limit_offset#)\n\nunion\n\n(select member_id, dob as filter_date\nfrom rch_child_analytics_details,dates,location_det\nwhere dob between dates.from_date and dates.to_date\nand rch_child_analytics_details.member_id is not null\nand rch_child_analytics_details.loc_id = location_det.loc_id\nand birth_weight < 3\nand ''#high_risk_condition#'' in (''Very Low Birth Weight'')\n#limit_offset#)\n\nunion\n\n(select member_id,dob as filter_date\nfrom rch_child_analytics_details,dates,location_det\nwhere dob between dates.from_date - interval ''6 year'' and dates.to_date - interval ''6 month''\nand member_id is not null and rch_child_analytics_details.loc_id = location_det.loc_id\nand is_sam_child = true\nand ''#high_risk_condition#'' in (''SAM'')\n#limit_offset#)\n)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nmem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')'' as \"Member Name\",\nfilter_date as \"RegServiceDate(Mother)/BirthDate(Child)\",\ncase when mem.mobile_number is null then ''N/A'' else\n\tmem.mobile_number end as \"Mobile Number\"\n,case \n\twhen hod.mobile_number is not null then \n\t\thod.first_name || '' '' || hod.middle_name || '' '' || hod.last_name || '' ('' || hod.mobile_number  || '')''\n\telse hod.first_name || '' '' || hod.middle_name || '' '' || hod.last_name\nend as \"Head Of Family\"\n,string_agg(lm.name,''> '' order by lhcd.depth desc) as \"Location Hierarchy\"\nfrom highriskusr  \ninner join imt_member mem on highriskusr.member_id = mem.id\ninner join imt_family fam on mem.family_id = fam.family_id\nleft join imt_member hod on fam.family_id = hod.family_id and hod.family_head = true\ninner join location_hierchy_closer_det lhcd on (case when fam.area_id is null then fam.location_id else cast(fam.area_id as bigint) end) = lhcd.child_id\ninner join location_master lm on lm.id = lhcd.parent_id \ngroup by mem.first_name, mem.middle_name, mem.last_name, mem.mobile_number,hod.mobile_number,hod.first_name,hod.middle_name,hod.last_name,mem.unique_health_id,filter_date", "queryId": 633, "fieldName": "tableField", "queryUUID": "9e83d6ac-34d3-4f2d-b09e-bcc252171102", "queryParams": "limit_offset,from_date,to_date,high_risk_condition,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "high_risk_condition", "fieldType": "text", "queryUUID": null, "displayName": "High Risk Condition", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "displayName": "From Date", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 3, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\nwhere l1.id = #location_id#", "queryIdForParam": 724, "queryUUIDForParam": "426cb28d-6760-40c6-9827-533a165b102f", "requiredUptoLevel": "1"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'gvk_status_reporting', 'a313fb19-c72c-4bb5-b75c-28ebd01c7e05'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(277, 'ANC 1(LMP Based Pregnant Women Reg. for ANC Services)', NULL, true, 'DYNAMIC', NULL, '2019-08-19 12:42:18.918', 409, '2019-02-27 13:24:54.774', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--ANC 1(LMP Based Pregnant Women Reg. for ANC Services)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\nmember_det as (\n\tselect r.member_id, r.native_location_id as loc_id,\n\tm.unique_health_id, m.family_id, \n\tm.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,\n\tto_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd\n\t,to_char(r.date_of_delivery,''DD/MM/YYYY'') as dod\n\t,to_char(r.anc1,''DD/MM/YYYY'') as anc1\n\tfrom rch_pregnancy_analytics_details r\n\t, location_hierchy_closer_det l\n\t, imt_member m\n\twhere r.member_id = m.id\n\tand r.anc1 is not null\n\tand r.native_location_id  = l.child_id\n\tand l.parent_id = #location_id#\n\tand r.lmp_month_year between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date)\n\torder by r.lmp_date\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from member_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\nmember_det.anc1 as \"ANC1 Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 701, "fieldName": "tableField", "queryUUID": "b7ee2cd3-6aab-4270-8640-dc602210623b", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year", "queryIdForParam": 699, "queryUUIDForParam": "3286330e-9448-448e-a83d-0302fdc438ae"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 698, "queryUUIDForParam": "a4ad53e3-0941-4d09-9e85-bece45a6711f"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year", "queryIdForParam": 700, "queryUUIDForParam": "57c88302-edd4-4c33-ba53-07ea997764df"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'lmp_anc1', '7d093af7-0fc9-4363-8674-77bd86ef3af9'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(314, 'Total Pregnant women regd. With 1 live children (Mothers Registered With Child Birth Order)', NULL, true, 'DYNAMIC', NULL, '2019-10-05 19:10:03.452', 58981, '2019-03-06 18:04:06.576', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Total Pregnant women regd. With 1 live children (Mothers Registered With Child Birth Order)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n member_det as (\n\tselect r.member_id, r.native_location_id as loc_id,\n\tm.unique_health_id, m.family_id, \n\tm.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,\n\tto_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd\n\tfrom rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, imt_family f, rch_pregnancy_registration_det p\n\twhere r.member_id = m.id and r.native_location_id  = l.child_id and r.pregnancy_reg_id = p.id and m.family_id = f.family_id\n\tand registered_with_no_of_child = 1\n\tand l.parent_id = #location_id#\n\tand r.reg_service_date between cast (\n\t\tcase\n\t\t\twhen ''#from_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#from_month_year#''\n\t\tend as date) and cast (\n\t\tcase\n\t\t\twhen ''#to_month_year#'' = ''null'' then ''01-01-1970''\n\t\t\telse ''#to_month_year#''\n\t\tend as date) + interval ''1 month'' - interval ''1 milliseconds''\n\torder by p.lmp_date\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from member_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 823, "fieldName": "tableField", "queryUUID": "e974471f-b345-4e31-acd8-034a76a5e857", "queryParams": "limit_offset,from_month_year,to_month_year,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 1, "isHidden": true, "fieldName": "from_month_year", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryForParam": "select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year", "queryIdForParam": 821, "queryUUIDForParam": "546ec7cc-e6bc-4a9d-a38b-2f9d0070e8f2"}, {"index": 0, "isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 820, "queryUUIDForParam": "272ca8a2-8ab1-4e6e-a44e-44326d9f91eb"}, {"isHidden": true, "fieldName": "to_month_year", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryForParam": "select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year", "queryIdForParam": 822, "queryUUIDForParam": "e7277b3c-1bc3-43ed-aa9d-029633c03aa8"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'mtr_ordr_reg_1_child', '2a5adcdc-beec-4b2c-9d1b-f851203d3976'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(364, 'LBW Child Registered (2.6-3 kg)', NULL, true, 'DYNAMIC', NULL, '2019-10-10 12:37:53.817', 64189, '2019-04-12 16:01:21.825', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--LBW Child Registered (2.6-3 kg)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.delivery_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.delivery_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.birth_weight is not null and c.birth_weight >= 2.5 and c.birth_weight < 3\n\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 990, "fieldName": "tableField", "queryUUID": "48dbace0-95a6-4af5-9183-720b8524f0ac", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 989, "queryUUIDForParam": "655142be-8ba2-42cd-a28a-6a28fb451bf6"}]}, "colspanData": false, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_lbw_ch_2.6-3', '222bfea7-6c59-4e42-8523-8f7f005d398d'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(368, 'LBW Child Registered (Weight not registered)', NULL, true, 'DYNAMIC', NULL, '2019-10-10 12:38:49.890', 64189, '2019-04-12 17:17:57.152', 409, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--LBW Child Registered (Weight not registered)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.delivery_location_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.delivery_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.birth_weight is null\n\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 998, "fieldName": "tableField", "queryUUID": "00cff9a0-df9f-4b6a-99a3-6daeaddb5141", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 997, "queryUUIDForParam": "814bbbd9-08cc-4c72-bf9d-5f8c3cb99bad"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'ch_lbw_ch_not_regi', 'b414a651-c5c8-4d82-a1b7-8d4c83751af3'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(381, '2 ANC(ANC Services Provided During The Year) (Monthly)', NULL, true, 'DYNAMIC', NULL, '2020-02-17 14:07:50.160', 60512, '2019-04-22 16:49:22.328', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--2 ANC(ANC Services Provided During The Year)\nwith parameters as (\nselect CAST(#location_id# AS INTEGER) as location_id,\nto_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date,\nto_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date,\nCAST(''#demographic_location_id#'' AS TEXT) as demographic_group,\n(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language\n),member_det as (\n\tselect r.member_id, r.anc2_location_id as loc_id,\n\tr.unique_health_id, r.family_id, \n\tr.member_name as name,\n\tto_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd\n\t,to_char(r.anc2,''DD/MM/YYYY'') as anc_date\n\t\n\tfrom rch_pregnancy_analytics_details r\n\t, location_hierchy_closer_det l\n\t, parameters p\n\twhere r.anc2_location_id  = l.child_id\n\tand l.parent_id = p.location_id\n\tand r.anc2 between p.from_date and p.to_date\n        and (p.demographic_group=''null'' or l.child_loc_demographic_type in \n\t( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))\n\torder by r.anc2\n\t#limit_offset#\n), loc_det as (\n\tselect loc.loc_id,  \nstring_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi \n\tfrom (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p \n\twhere lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\n\tselect loc.loc_id, \n\tconcat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',\n\tcase when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n\tfrom um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det\n\twhere loc.loc_id = location_hierchy_closer_det.child_id and\n\tlocation_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n)\nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nmember_det.anc_date as \"Anc date\",\nmember_det.unique_health_id as \"Member ID\",\nmember_det.family_id as \"Family ID\",\nmember_det.name as \"Name\",\nmember_det.lmp as \"LMP Date\",\nmember_det.edd as \"Estimated Delivery Date\",\ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom member_det\ninner join loc_det on member_det.loc_id = loc_det.loc_id \nleft join fhw_det on member_det.loc_id = fhw_det.loc_id;", "queryId": 1026, "fieldName": "tableField", "queryUUID": "dd84de1c-228b-412e-b849-05a6a45fe54c", "queryParams": "to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "from_month", "fieldType": "text", "queryUUID": null, "displayName": "From Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "to_month", "fieldType": "text", "queryUUID": null, "displayName": "To Month", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "demographic_location_id", "fieldType": "text", "queryUUID": null, "displayName": "Demographic Location", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1025, "queryUUIDForParam": "58c1a7a1-9efe-4d9d-96e4-ea7a1d6d9b00"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "isBackButtonRequired": false}', '2_anc_mat_month', '131ce8a5-2304-47f9-899d-afb412bc53fe'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(448, 'Children weighed (Yearly)', NULL, true, 'DYNAMIC', NULL, '2019-11-19 15:14:43.739', 409, '2019-07-05 13:19:59.150', 75398, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "--Children weighed (Yearly)\nwith prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n child_det as (\n\tselect m.id, c.native_loc_id as loc_id,\n\tconcat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,\n\tto_char(m.dob, ''DD/MM/YYYY'') as dob\n\tfrom rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m\n\twhere l.child_id = c.delivery_location_id and m.id = c.member_id\n\tand l.parent_id = #location_id#\n\tand c.birth_weight is not null\n\tand c.financial_year = ''#financial_year#''\n\torder by c.dob\n\t#limit_offset#\n), loc as (\n\tselect distinct loc_id from child_det\n), loc_det as (\n\tselect loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi \n\tfrom loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language \n\twhere l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id\n\tgroup by loc.loc_id\n), fhw_det as (\nselect loc.loc_id, \n\tu.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' \n\t|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw\n\tfrom um_user_location ul, um_user u, loc,location_hierchy_closer_det lh\n\twhere lh.child_id = loc.loc_id and\n\tlh.parent_id = ul.loc_id and u.id = ul.user_id\n\tand u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n\tand u.role_id = (select id from um_role_master where name = ''FHW'')\n\tgroup by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number\n), immunisation as (\n\tselect i.member_id, \n\tREPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''\",\"'' as text), cast(''<br>''as text)), cast(''{\"'' as text), cast('''' as text)), cast(''\"}'' as text), cast('''' as text)) as immunisation\n\tfrom rch_immunisation_master i, child_det c\n\twhere i.member_id = c.id\n\tgroup by i.member_id\n) \nselect ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nloc_det.aoi as \"Location\",\nchild_det.member_det as \"Child Details\",\nchild_det.dob as \"Date of Birth\",\ncase when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as \"Immunisations Given\", \ncase when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom child_det\ninner join loc_det on child_det.loc_id = loc_det.loc_id \nleft join fhw_det on child_det.loc_id = fhw_det.loc_id\nleft join immunisation on immunisation.member_id = child_det.id;", "queryId": 1190, "fieldName": "tableField", "queryUUID": "7bb15454-7f5b-469e-be67-61371ddfac2c", "queryParams": "limit_offset,financial_year,loggedInUserId,location_id"}], "fieldsContainer": [{"isHidden": true, "fieldName": "financial_year", "fieldType": "text", "queryUUID": null, "displayName": "Year", "queryUUIDForParam": null}, {"isHidden": true, "fieldName": "location_id", "fieldType": "text", "queryUUID": null, "displayName": "Location", "queryForParam": "with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#", "queryIdForParam": 1189, "queryUUIDForParam": "fc38f8b2-706f-4154-842d-634eac04f583"}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'child_weight_yearly', '8019b3c6-732b-4618-aad1-650fade0a85f'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(581, 'lab wise sample test analytics', NULL, true, 'DYNAMIC', NULL, '2020-04-12 17:01:08.809', 74840, '2020-04-10 17:43:42.745', 74840, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with location_det as (\n\tselect child_id as loc_id\n\tfrom location_hierchy_closer_det lhc\n\twhere \n\tparent_id = #location_id# and depth = 1\n)\n,test_capacity as (\n\tselect \n\tDISTINCT ON (health_infra_id)\n\tcompo.health_infra_id,compo.receipt_date,compo.test_capacity,compo.rna_extraction,kit.list_of_kits \n\tfrom covid19_lab_infrastructure_component_history compo inner join covid19_lab_infrastructure_kit_history  kit on compo.health_infra_id =kit.health_infra_id \n\torder by health_infra_id asc,receipt_date desc,kit.receipt_date desc\n)\n,infra_info as (\n\tselect\n\thid.id as infra_id,\n\thid.location_id,\n\thid.name as infra_name\t\t\n\tfrom health_infrastructure_details  hid\n\tinner join location_hierchy_closer_det loch on loch.child_id = hid.location_id\n\twhere loch.parent_id in (select distinct loc_id from location_det) and (is_covid_hospital or is_covid_lab)\n\tgroup by hid.id,hid.location_id,hid.name \t\t\n)\n,lab_sample_report_sent as (\n\tselect \n\tdistinct on (infra.id)\n\tinfra.id,\n\tlab.sample_health_infra,\n\tcoalesce (infra.name,''N/A'') as sample_sent_infra_name,\n\tto_char(cast(lab.lab_collection_on as timestamp),''DD/MM/YYYY HH24:MI:SS'') as date_and_time_of_sending\n\tfrom \n\tcovid19_lab_test_detail lab inner join health_infrastructure_details infra on lab.sample_health_infra_send_to = infra.id\n)\n\n,lab_wise_analytics as (\n\tselect cad.health_infra_id,\n\tcount(1) filter(where cltd.lab_sample_received_on is not null \n\t\t\t\t\tand cltd.lab_sample_received_on = current_date\n\t\t\t\t\tand (cltd.lab_sample_received_on < current_date + interval ''20 hours'' )) total_sample_received_before_8pm,\n\t\t\t\t\t\n\tcount(1) filter(where cltd.lab_sample_received_on is not null) cumilative_samples_receieved_till_today,\n\n\tcount(1) filter(where cltd.lab_result_entry_on is not null \n\t\tand cltd.lab_sample_rejected_on is null\n\t\tand cltd.lab_result_entry_on = current_date) sample_tested_today,\n\t\t\n\tcount(1) filter(where cltd.lab_result_entry_on is not null \n\t\tand cltd.lab_sample_rejected_on is null) cumilative_sample_tested_till_today,\n\t\t\n\tcount(1) filter(where cltd.lab_sample_received_on is null and EXTRACT(EPOCH FROM current_timestamp-cltd.lab_collection_on)/3600 between 0 and 11) hours_0_to_12,\n\tcount(1) filter(where cltd.lab_sample_received_on is null and EXTRACT(EPOCH FROM current_timestamp-cltd.lab_collection_on)/3600 between 12 and 23) hours_12_to_24,\n\tcount(1) filter(where cltd.lab_sample_received_on is null and EXTRACT(EPOCH FROM current_timestamp-cltd.lab_collection_on)/3600 > 23) more_than_24,\n\t\n\tcount(1) filter (where cltd.sample_health_infra_send_to is not null) as no_of_sample_sent\n\tfrom covid19_lab_test_detail cltd,covid19_admission_detail cad\n\twhere cltd.covid_admission_detail_id = cad.id\n\tgroup by cad.health_infra_id\n        #limit_offset#\n)\n\n\n,final_det as (\n\tselect\n\tinfra_info.location_id,\n\tinfra_info.infra_name,\n\tinfra_info.infra_id,\n\tcoalesce(total_sample_received_before_8pm,0) as total_sample_received_before_8pm,\n\tcoalesce(cumilative_samples_receieved_till_today,0) as cumilative_samples_receieved_till_today,\n\tcoalesce(sample_tested_today,0) as sample_tested_today,\n\tcoalesce(cumilative_sample_tested_till_today,0) as cumilative_sample_tested_till_today,\n\tcoalesce(hours_0_to_12,0) as hours_0_to_12,\n\tcoalesce(hours_12_to_24,0) as hours_12_to_24,\n\tcoalesce(more_than_24,0) as more_than_24,\t\n\tcase when lab.sample_sent_infra_name is null then ''N/A'' else lab.sample_sent_infra_name end as sample_sent_infra_name,\n\tcase when lab.date_and_time_of_sending is null then ''N/A'' else lab.date_and_time_of_sending end as date_and_time_of_sending,\n\tcoalesce(no_of_sample_sent,0) as no_of_sample_sent,\n\tcoalesce(test.rna_extraction,0) as rna_extraction,\n\tcoalesce(test.list_of_kits,0) as list_of_kits\n\tfrom infra_info left join lab_wise_analytics analytics on infra_info.infra_id = analytics.health_infra_id\n\tleft join test_capacity test on infra_info.infra_id = test.health_infra_id\n\tleft join lab_sample_report_sent lab on lab.id = infra_info.infra_id\n\t\n\n)\nselect\nrow_number() over () + cast(substring(''#limit_offset#'', position(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nlocation_id as hidden_location_id,\ninfra_name as \"Name Of Lab\",\ninfra_id as hidden_infra_id,\ntotal_sample_received_before_8pm as \"Samples received today till 8 PM\",\ncumilative_samples_receieved_till_today as \"Cumulative Samples received till today\",\nsample_tested_today as \"Samples Tested Today\",\ncumilative_sample_tested_till_today as \"Total Tested (Cumulative)\",\nhours_0_to_12 as \" Nos (for 0-12 Hours)\",\nhours_12_to_24 as \"Nos (for 12 to 24 hours)\",\nmore_than_24 as \"Nos (for More than 24 hours)\",\nsample_sent_infra_name as \"Name of the Lab where samples sent to\",\ndate_and_time_of_sending as \"Date and Time of Sending\",\nno_of_sample_sent as \"No of Samples Sent\",\nrna_extraction as \"RNA Extraction- No of Tests\",\nlist_of_kits as \"RTPCR- No of Tests\"\nfrom final_det\n\nunion all\n\nselect\nnull,\nnull,\n''<b>Total</b>'',\nnull,\nsum(total_sample_received_before_8pm),\nsum(cumilative_samples_receieved_till_today),\nsum(sample_tested_today),\nsum(cumilative_sample_tested_till_today),\nsum(hours_0_to_12),\nsum(hours_12_to_24),\nsum(more_than_24),\nnull,\nnull,\nsum(no_of_sample_sent),\nsum(rna_extraction),\nsum(list_of_kits)\nfrom \nfinal_det", "queryId": 1587, "fieldName": "tableField", "queryUUID": "d33a8d9e-7b67-4313-b5ae-1ea376b1e6dd", "dataColspan": "<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th colspan=\"3\" style=\"text-align:center\">Samples Pending for testing</th>\n<th colspan=\"3\" style=\"text-align:center\">Details of Samples sent to other Labs if any</th>\n<th colspan=\"2\" style=\"text-align:center\">Test Kit availability at 8:00 PM</th>", "queryParams": "limit_offset,location_id"}], "fieldsContainer": [{"index": 0, "fieldName": "location_id", "fieldType": "location", "queryUUID": null, "displayName": "Location Id", "isMandatory": true, "fetchUptoLevel": "", "queryUUIDForParam": null, "requiredUptoLevel": 1, "fetchAccordingToUserAoi": true}]}, "colspanData": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'lab_wise_test_det', 'c35597ad-1650-498c-8466-8f90c3ec1366'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(585, 'total sample received (Lab wise Sample Status)', NULL, true, 'DYNAMIC', NULL, '2020-07-23 16:36:29.492', 74840, '2020-04-12 21:18:38.606', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with paratemeter_det as (\n\tselect\n\tcase when ''#from_date#'' != ''null'' then to_date(''#from_date#'',''MM/DD/YYYY'') end as from_date,\n\n\tcase when ''#to_date#'' != ''null'' then to_date(''#to_date#'',''MM/DD/YYYY'') + interval ''1 day'' - interval ''1 millisecond''  end as upto_date\n)\n,lab_test_det as (\nselect\n\tdistinct on\n\t(covid_admission_detail_id)\n\tcovid_admission_detail_id,cltd.id,sample_health_infra,sample_health_infra_send_to,lab_test_number,lab_collection_on\n\tfrom covid19_lab_test_detail cltd,covid19_admission_detail cad\n\tinner join paratemeter_det on true = true\n\twhere cltd.covid_admission_detail_id = cad.id\t\n\tand cad.status not ilike ''%_temp''\n\tand cltd.sample_health_infra_send_to = case when ''#infra_id#'' = ''null'' then null else cast(#infra_id# as integer) end \n\tand case \n\t\twhen ''#column#'' = ''Samples Collected'' then cltd.lab_collection_on between paratemeter_det.from_date and paratemeter_det.upto_date\n\t\t\n\t\twhen ''#column#'' = ''Admitted'' then cltd.lab_collection_on between paratemeter_det.from_date and paratemeter_det.upto_date\n\t\t\t\tand  cad.admission_from = ''NEW''\n\t\t\t\t\n\t\twhen ''#column#'' = ''Opd'' then cltd.lab_collection_on between paratemeter_det.from_date and paratemeter_det.upto_date\n\t\t\t\tand cad.admission_from = ''OPD_ADMIT''\n\t\t\t\t\n\t\twhen ''#column#'' = ''Accepted'' then cltd.lab_sample_rejected_on is null\n\t\t\t\tand cltd.lab_sample_received_on between paratemeter_det.from_date and paratemeter_det.upto_date\t\t\n\t\t\n\t\twhen ''#column#'' = ''Rejected'' then cltd.lab_sample_rejected_on is not null\n\t\t\t\tand cltd.lab_sample_rejected_on between paratemeter_det.from_date and paratemeter_det.upto_date\t\t\n\t\t\n\t\twhen ''#column#'' = ''Result Entry'' then cltd.lab_sample_rejected_on is null\n\t\t\t\tand cltd.lab_result_entry_on between paratemeter_det.from_date and paratemeter_det.upto_date\t\t\n\t\t\n\t\twhen ''#column#'' = ''Positive'' then cltd.lab_result = ''POSITIVE''\n\t\t\t\tand cltd.lab_result_entry_on between paratemeter_det.from_date and paratemeter_det.upto_date\n\t\t\t\t\n\t\twhen ''#column#'' = ''Negative'' then cltd.lab_result = ''NEGATIVE''\n\t\t\t\tand cltd.lab_result_entry_on between paratemeter_det.from_date and paratemeter_det.upto_date\t\t\n\t\t\n\t\twhen ''#column#'' = ''Inderminate'' then cltd.lab_result = ''INDETERMINATE''\n\t\t\t\tand cltd.lab_result_entry_on between paratemeter_det.from_date and paratemeter_det.upto_date\n\t\telse false\n\t\tend\t\n\t\t\t\n\torder by covid_admission_detail_id,\tid\n)\n\t\n\tselect\n\trow_number() over (ORDER BY cad.id) as \"Srno\",\n\tconcat_ws('' '', cad.first_name, cad.last_name, cad.middle_name) as \"Name\",\n\tcad.age as \"Age\",\n\tcad.gender as \"Gender\",\n\tcad.address as \"Address\",\n\tcad.occupation as \"Occupation\",\n\tcad.contact_number as \"Contact Number\",\n\td.english_name as \"District\",\n\ts.english_name as \"State\",\n\tcast(''N/A'' as text) as \"Date of arrival in India\",\n\tcad.travelled_place as \"Travel to COVID affected country (Name of country)\",\n\tcad.flight_no as \"Flight No\",\n\tcast(''N/A'' as text) as \"Seat No\",\n\tcase\n\t\twhen cad.in_contact_with_covid19_paitent is not null then cad.in_contact_with_covid19_paitent\n\t\telse ''No''\n\tend as \"H/O contact with COVID-19 case\",\n\tcad.date_of_onset_symptom as \"Date of onset of symptoms\",\n\tconcat_ws('', '' ,(case when cad.is_fever then ''Fever'' else null end) \n\t,(case when cad.is_cough then ''Cough'' else null end)\n\t,(case when cad.is_breathlessness then ''Breathlessness'' else null end)\n\t,(case when cad.is_sari then ''SARI'' else null end)\n\t) as \"Symptoms at admission\",\n\tto_char(cad.admission_date,''DD/MM/YYYY'') as \"Date of isolation\",\n\tcase\n\t\twhen ltd.id is not null then ''Yes''\n\t\telse ''No''\n\tend \"Sample collected (yes/No)\",\n\tltd.lab_test_number as \"Sample ID\",\n\tto_char(ltd.lab_collection_on,''DD/MM/YYYY'') as \"Date of sample collection\",\n\thid_sample.name_in_english as \"Sample collection centre\",\n\thid_tested.name_in_english as \"Sample tested at\",\n\thid_tested.name_in_english as \"Lab that confirmed the result\",\n\tconcat_ws('', '' ,(case when cad.is_hiv then ''HIV'' else null end) \n\t,(case when cad.is_heart_patient then ''Heart Patient'' else null end)\n\t,(case when cad.is_diabetes then ''Diabetes'' else null end)\n\t,(case when cad.is_copd then ''COPD'' else null end)\n\t,(case when cad.is_hypertension then ''Hypertension'' else null end)\n\t,(case when cad.is_renal_condition then ''Renal Condition'' else null end)\n\t,(case when cad.is_immunocompromized then ''Immunocompromized'' else null end)\n\t,(case when cad.is_malignancy then ''Malignancy'' else null end)\n\t,(case when cad.is_other_co_mobidity then cad.other_co_mobidity else null end)\n\t) as \"Underlying medical condition\",\n\tcacds.health_status as \"Health Status\",\n\tcase when cad.discharge_status is null then ''Admitted'' else cad.discharge_status end as \"Outcome (Discharged/ Death/ Admitted)\",\n\tto_char(cad.discharge_date,''DD/MM/YYYY'') as \"Date of outcome\",\n\tcast(''N/A'' as text) as \"is patient member of covid 19\",\n\tcast(''N/A'' as text) as \"house hold contact\",\n\tcast(''N/A'' as text) as \"workplace contact\",\n\tcast(''N/A'' as text) as \"community contact\",\n\tcast(''N/A'' as text) as \"health care contact\",\n\tcast(''N/A'' as text) as \"co traveller\"\nfrom\n\tcovid19_admission_detail cad\ninner join lab_test_det ltd on\n\tcad.id = ltd.covid_admission_detail_id\nleft join covid19_admitted_case_daily_status cacds on\n\tcad.last_check_up_detail_id = cacds.id\nleft join location_master lm on\n\tlm.id = cad.location_id\nleft join location_level_hierarchy_master lh on\n\tlh.id = lm.location_hierarchy_id\nleft join health_infrastructure_details hid_sample on\n\thid_sample.id = ltd.sample_health_infra\nleft join health_infrastructure_details hid_tested on\n\thid_tested.id = ltd.sample_health_infra_send_to\nleft join location_master s on\n\tlh.level1 = s.id\n\tand s.state = ''ACTIVE''\n\tand s.name not ilike ''%delete%''\nleft join location_master d on\n\tlh.level3 = d.id\n\tand d.state = ''ACTIVE''\n\tand d.name not ilike ''%delete%''\norder by\n\tcad.id\n#limit_offset#", "queryId": 1591, "fieldName": "tableField", "queryUUID": "180c7030-a988-487f-ade4-5ab277f2a0e1", "queryParams": "infra_id,from_date,to_date,column"}], "fieldsContainer": [{"index": 0, "isHidden": true, "fieldName": "infra_id", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Infra Id", "queryUUIDForParam": null}, {"index": 1, "isHidden": true, "fieldName": "from_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "From Date", "queryUUIDForParam": null}, {"index": 2, "isHidden": true, "fieldName": "to_date", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "To Date", "queryUUIDForParam": null}, {"index": 3, "isHidden": true, "fieldName": "column", "fieldType": "text", "queryUUID": null, "isUrlParam": true, "displayName": "Column", "queryUUIDForParam": null}]}, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'sample_det_lab_wise', 'f49be609-ee6c-4ea6-a1e4-cb78cf3b9a08'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(610, 'Severe(Anemia Status Of Registered ANC Report)', NULL, true, 'DYNAMIC', NULL, '2020-12-07 15:04:21.701', 78434, '2020-06-24 14:19:41.864', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"--Severe(Anemia Status Of Registered ANC Report)\nwith parameters as (\n    select CAST(#location_id# AS INTEGER) as location_id,\n    cast(''#demographic_location_id#'' as TEXT) as demographic_group,\n    to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end, ''MM-DD-YYYY'') as from_date ,\n\tto_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end, ''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date,\n    (select report_preferred_language from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language\n),\nmember_det as (\n    select\n    r.member_id\n    ,r.native_location_id as loc_id\n    ,r.unique_health_id\n    ,r.family_id\n    ,r.member_name as name\n    ,p.preferred_language\n\tfrom\n        rch_pregnancy_analytics_details r\n        ,location_hierchy_closer_det l\n        ,parameters p\n\twhere\n        r.native_location_id  = l.child_id\n        and l.parent_id = p.location_id\n        and r.reg_service_date between p.from_date and p.to_date\n        and (p.demographic_group=''null'' or l.child_loc_demographic_type in (select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))\n        and r.hb between 0.1 and 6.99\n    #limit_offset#\n),\nfhw_det as (\n    select\n        loc.loc_id,\n        concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',\n        case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw\n    from\n        um_user_location ul\n        ,um_user u\n        ,(select distinct loc_id from member_det) loc\n        ,location_hierchy_closer_det\n    where\n        loc.loc_id = location_hierchy_closer_det.child_id\n        and location_hierchy_closer_det.parent_id = ul.loc_id\n        and u.id = ul.user_id\n        and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''\n        and u.role_id = (select id from um_role_master where name = ''FHW'')\n)\nselect\n    ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\n    get_location_hierarchy_language_wise(member_det.loc_id, member_det.preferred_language) as \"Location\",\n    member_det.unique_health_id as \"Member ID\",\n    member_det.family_id as \"Family ID\",\n    member_det.name as \"Name\",\n    case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as \"FHW Details\"\nfrom\n    member_det\nleft join\n    fhw_det on member_det.loc_id = fhw_det.loc_id;","queryId":1649,"fieldName":"tableField","queryUUID":"8c191ca3-51fa-40e9-b149-a2a43ff5e860","queryParams":"to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"from_month","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"From Month","queryUUIDForParam":null},{"isHidden":true,"fieldName":"to_month","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"To Date","queryUUIDForParam":null},{"isHidden":true,"fieldName":"demographic_location_id","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"Demographic Location","queryUUIDForParam":null},{"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"isUrlParam":true,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' > '' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1648,"queryUUIDForParam":"820dc9e8-078f-4a8d-8b97-7053bcd99596"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'severe_anemia', '1494b0f2-bf5f-4bba-9bc6-f654b3a0ed6b'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(20, 'Training Scheduled Users', NULL, true, 'DYNAMIC', NULL, '2020-10-26 12:20:38.781', 1027, '2018-04-26 17:46:35.813', 74841, '{"layout":"dynamicReport1","containers":{"tableContainer":[{"query":"with location_det as(\nselect child_id as loc_id from location_hierchy_closer_det  \nwhere parent_id in (case when #location_id# is not null then  #location_id# else (select loc_id from um_user_location where user_id = #loggedInUserId# and state = ''ACTIVE'') end)\n),users AS (\nSELECT distinct on(uu.id) tcrr.role_id, tcrr.course_id, uu.id,tr_course_master.module_id, uu.first_name, uu.last_name FROM \n\ttr_course_master\n\tinner join tr_course_role_rel tcrr on tcrr.course_id = tr_course_master.course_id and tr_course_master.course_state = ''ACTIVE''\n\tINNER JOIN um_user uu ON uu.role_id = tcrr.role_id and uu.state = ''ACTIVE''\n\tinner join um_user_location ul on ul.state = ''ACTIVE'' and ul.user_id = uu.id \n\tinner join location_det ld on ld.loc_id = ul.loc_id\n\twhere uu.role_id=#role_id# and tr_course_master.course_id =#course_id#\n\n\t \n),scheduled as (\n\t\tselect distinct on (us.id) concat(us.first_name,'' '',us.last_name) as \"Full Name\",\n\t\tTO_CHAR(cast(tr.effective_date as date),''ddth Mon yyyy'') as \"Training Date\",\n\t\tcase when tr.location_name is null then ''N/A'' else  tr.location_name end as\"Location\"\n\t\tfrom tr_training_master tr\n\t\tinner join tr_training_course_rel tcr on tr.training_id = tcr.training_id\n                inner join (select * from tr_training_attendee_rel union select * from tr_training_additional_attendee_rel) r \n                on tr.training_id = r.training_id \n\t        right join users us on us.id = r.attendee_id and us.course_id = tcr.course_id\n                 where (tr.expiration_date >= current_date) and tr.training_state = ''DRAFT''\n                --where tr.training_state = ''DRAFT''\n                 \n)\nselect ROW_NUMBER() over () as \"Sr. No.\",* from scheduled","queryId":31,"fieldName":"tableField","queryUUID":"f51da810-041b-4036-b6e0-ef7b13882b24","queryParams":"course_id,role_id,loggedInUserId,location_id"}],"fieldsContainer":[{"index":0,"isHidden":true,"fieldName":"role_id","fieldType":"text","queryUUID":null,"displayName":"Role","queryForParam":"select name as \"role_id\" from um_role_master where id=#role_id#","queryIdForParam":482,"queryUUIDForParam":"7795043d-6ee1-4540-a660-69f8cca5174f"},{"index":2,"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"select name as location_id from location_master  where id = #location_id#","queryIdForParam":484,"queryUUIDForParam":"c88b6c29-c236-4a2e-801b-6437eb0daef6"},{"index":1,"isHidden":true,"fieldName":"course_id","fieldType":"text","queryUUID":null,"displayName":"Course","queryForParam":"select course_name as course_id from tr_course_master  where course_id=#course_id#","queryIdForParam":483,"queryUUIDForParam":"b34bfb8b-d108-4210-aa98-0876c9b6285e"}]},"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","isBackButtonRequired":true}', 'tr_scheduled', '75c4dc67-74e4-4d86-a1e1-6d353884a23c'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(601, 'List of active app users', NULL, true, 'DYNAMIC', NULL, '2020-05-12 15:49:24.002', 74841, '2020-05-11 19:29:43.520', 74841, '{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "with users as (\n\tselect distinct on (user_id) *\n\tfrom \n\tum_user_app_access_details\n\twhere \n\tapp_name = #app_name# and ''#app_version#'' != ''null'' \n\torder by user_id, id desc\n), final_det as (\nselect concat(first_name, '' '',middle_name,'' '', last_name, ''('', user_name, '')'') as \"User Detail\" ,\num.\"name\" as \"Role\"\nfrom um_user\nleft join um_role_master um on um.id = um_user.role_id\nwhere um_user.id in (\n    select user_id from users \n    where \n     case when ''#device_type#'' = ''null'' and ''#app_version#'' = ''null'' then true else \n        device_type = ''#device_type#''\n        and app_version = ''#app_version#'' end\n        order by user_id\n      #limit_offset#\n    ) and um_user.state = ''ACTIVE''\n    order by um_user.id\n)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No.\",\n* from final_det", "queryId": 1611, "fieldName": "tableField", "queryUUID": "9fb9c113-5b06-4e1d-ae01-584f5ef7d90a", "queryParams": "app_name,limit_offset,app_version,device_type"}], "fieldsContainer": [{"isHidden": true, "fieldName": "app_name", "fieldType": "text", "queryUUID": null, "displayName": "App Name", "isMandatory": true, "queryUUIDForParam": null, "requiredUptoLevel": 1}, {"isHidden": true, "fieldName": "device_type", "fieldType": "text", "queryUUID": null, "displayName": "Device Type", "isMandatory": true, "queryUUIDForParam": null, "requiredUptoLevel": 1}, {"isHidden": true, "fieldName": "app_version", "fieldType": "text", "queryUUID": null, "displayName": "App Version", "isMandatory": true, "queryUUIDForParam": null, "requiredUptoLevel": 1}]}, "showDateAsOn": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": ""}', 'list_of_active_user', 'fd4d6ce4-7ef0-49d2-817a-920c0cb7089c'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(616, 'Screening Report - Admission in Programme (F-Sam+CMAM) based on Norms', NULL, true, 'DYNAMIC', NULL, '2020-10-01 10:21:52.950', 60512, '2020-06-29 11:36:36.086', 74841, '{"layout":"dynamicReport1","containers":{"tableContainer":[{"query":"with prefered_language as(\n\tselect case when prefered_language = ''EN'' then true else false end as is_english \n\tfrom um_user\n\twhere id = #loggedInUserId#\n),location_detail as (\n\tselect child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1\n),dates as (\n\tselect to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date,\n\tto_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date\n),analytics as (\n\tselect location_detail.child_id,\n\tsum(childer_screen_by_anm) as children_screened,\n\tsum(apetite_pass_no_medical_complication_boys) as apetite_pass_no_medical_complication_boys,\n\tsum(apetite_pass_no_medical_complication_girls) as apetite_pass_no_medical_complication_girls,\n\tsum(apetite_fail_medical_complication_boys) as apetite_fail_medical_complication_boys,\n\tsum(apetite_fail_medical_complication_girls) as apetite_fail_medical_complication_girls,\n\tsum(apetite_pass_medical_complication_boys) as apetite_pass_medical_complication_boys,\n\tsum(apetite_pass_medical_complication_girls) as apetite_pass_medical_complication_girls,\n\tsum(apetite_fail_no_medical_complication_boys) as apetite_fail_no_medical_complication_boys,\n\tsum(apetite_fail_no_medical_complication_girls) as apetite_fail_no_medical_complication_girls,\n\tsum(sam_oedema_m) as oedema_boys,\n\tsum(sam_oedema_f) as oedema_girls,\n\tsum(sam_boys_less_than_6_month) as less_than_6_month_boys,\n\tsum(sam_girls_less_than_6_month) as less_than_6_month_girls\n\tfrom location_detail\n\tinner join location_hierchy_closer_det on location_detail.child_id = location_hierchy_closer_det.parent_id\n\tinner join child_cmtc_nrc_analytics_location_wise_details on location_hierchy_closer_det.child_id = child_cmtc_nrc_analytics_location_wise_details.location_id\n\tinner join dates on child_cmtc_nrc_analytics_location_wise_details.month_year between dates.from_date and dates.to_date\n\tgroup by location_detail.child_id\n),details as (\n\tselect row_number() over() as sr_no,\n\tlocation_master.id as hidden_location_id,\n\tcase when prefered_language.is_english and location_master.english_name is not null then location_master.english_name else location_master.name end as loc,\n\tcoalesce(analytics.children_screened,0) as children_screened,\n\tcoalesce(analytics.apetite_pass_no_medical_complication_boys,0) as apetite_pass_no_medical_complication_boys,\n\tcoalesce(analytics.apetite_pass_no_medical_complication_girls,0) as apetite_pass_no_medical_complication_girls,\n\tcoalesce(analytics.apetite_pass_no_medical_complication_boys + analytics.apetite_pass_no_medical_complication_girls,0) as apetite_pass_no_medical_complication_total,\n\tcoalesce(analytics.apetite_fail_medical_complication_boys,0) as apetite_fail_medical_complication_boys,\n\tcoalesce(analytics.apetite_fail_medical_complication_girls,0) as apetite_fail_medical_complication_girls,\n\tcoalesce(analytics.apetite_fail_medical_complication_boys + analytics.apetite_fail_medical_complication_girls,0) as apetite_fail_medical_complication_total,\n\tcoalesce(analytics.apetite_pass_medical_complication_boys,0) as apetite_pass_medical_complication_boys,\n\tcoalesce(analytics.apetite_pass_medical_complication_girls,0) as apetite_pass_medical_complication_girls,\n\tcoalesce(analytics.apetite_pass_medical_complication_boys + analytics.apetite_pass_medical_complication_girls,0) as apetite_pass_medical_complication_total,\n\tcoalesce(analytics.apetite_fail_no_medical_complication_boys,0) as apetite_fail_no_medical_complication_boys,\n\tcoalesce(analytics.apetite_fail_no_medical_complication_girls,0) as apetite_fail_no_medical_complication_girls,\n\tcoalesce(analytics.apetite_fail_no_medical_complication_boys + analytics.apetite_fail_no_medical_complication_girls,0) as apetite_fail_no_medical_complication_total,\n\tcoalesce(analytics.oedema_boys,0) as oedema_boys,\n\tcoalesce(analytics.oedema_girls,0) as oedema_girls,\n\tcoalesce(analytics.oedema_boys + analytics.oedema_girls,0) as oedema_total,\n\tcoalesce(analytics.less_than_6_month_boys,0) as less_than_6_month_boys,\n\tcoalesce(analytics.less_than_6_month_girls,0) as less_than_6_month_girls,\n\tcoalesce(analytics.less_than_6_month_boys + analytics.less_than_6_month_girls,0) as less_than_6_month_total\n\tfrom location_detail\n\tinner join location_master on location_master.id = location_detail.child_id\n\tleft join analytics on location_detail.child_id = analytics.child_id\n    cross join prefered_language\n)\nselect row_number() over() as \"Sr. no\", \ndetails.loc as \"Location\",\ndetails.hidden_location_id,\ndetails.apetite_pass_no_medical_complication_boys as \"SAM with Appetite Test Pass without Medical Complication (Boys)\",\ndetails.apetite_pass_no_medical_complication_girls as \"SAM with Appetite Test Pass without Medical Complication (Girls)\",\ndetails.apetite_pass_no_medical_complication_total as \"SAM with Appetite Test Pass without Medical Complication (Total)\",\n\tcase when details.apetite_pass_no_medical_complication_total = 0 or details.apetite_pass_no_medical_complication_total is null or details.children_screened = 0 or details.children_screened is null then 0 else\n\tround(details.apetite_pass_no_medical_complication_total * 100.0/details.children_screened) end as \"percent_col_SAM with Appetite Test Pass without Medical Complication (Total)\",\ndetails.apetite_fail_medical_complication_boys as \"SAM with Appetite Test Fail with Medical Complication (Boys)\",\ndetails.apetite_fail_medical_complication_girls as \"SAM with Appetite Test Fail with Medical Complication (Girls)\",\ndetails.apetite_fail_medical_complication_total as \"SAM with Appetite Test Fail with Medical Complication (Total)\",\n\tcase when details.apetite_fail_medical_complication_total = 0 or details.apetite_fail_medical_complication_total is null or details.children_screened = 0 or details.children_screened is null then 0 else\n\tround(details.apetite_fail_medical_complication_total * 100.0/details.children_screened) end as \"percent_col_SAM with Appetite Test Fail with Medical Complication (Total)\",\ndetails.apetite_pass_medical_complication_boys as \"SAM with Appetite Test Pass with Medical Complication (Boys)\",\ndetails.apetite_pass_medical_complication_girls as \"SAM with Appetite Test Pass with Medical Complication (Girls)\",\ndetails.apetite_pass_medical_complication_total as \"SAM with Appetite Test Pass with Medical Complication (Total)\",\n\tcase when details.apetite_pass_medical_complication_total = 0 or details.apetite_pass_medical_complication_total is null or details.children_screened = 0 or details.children_screened is null then 0 else\n\tround(details.apetite_pass_medical_complication_total * 100.0/details.children_screened) end as \"percent_col_SAM with Appetite Test Pass with Medical Complication (Total)\",\ndetails.apetite_fail_no_medical_complication_boys as \"SAM with Appetite Test Fail without Medical Complication (Boys)\",\ndetails.apetite_fail_no_medical_complication_girls as \"SAM with Appetite Test Fail without Medical Complication (Girls)\",\ndetails.apetite_fail_no_medical_complication_total as \"SAM with Appetite Test Fail without Medical Complication (Total)\",\n\tcase when details.apetite_fail_no_medical_complication_total = 0 or details.apetite_fail_no_medical_complication_total is null or details.children_screened = 0 or details.children_screened is null then 0 else\n\tround(details.apetite_fail_no_medical_complication_total * 100.0/details.children_screened) end as \"percent_col_SAM with Appetite Test Fail without Medical Complication (Total)\",\ndetails.less_than_6_month_boys as \"Less than 6 months (Boys)\",\ndetails.less_than_6_month_girls as \"Less than 6 months (Girls)\",\ndetails.less_than_6_month_total as \"Less than 6 month (Total)\",\n\tcase when details.less_than_6_month_total = 0 or details.less_than_6_month_total is null or details.children_screened = 0 or details.children_screened is null then 0 else\n\tround(details.less_than_6_month_total * 100.0/details.children_screened) end as \"percent_col_Less than 6 month (Total)\",\ndetails.oedema_boys as \"Bilateral Pitting Oedema (Boys)\",\ndetails.oedema_girls as \"Bilateral Pitting Oedema (Girls)\",\ndetails.oedema_total as \"Bilateral Pitting Oedema (Total)\",\n\tcase when details.oedema_total = 0 or details.oedema_total is null or details.children_screened = 0 or details.children_screened is null then 0 else\n\tround(details.oedema_total * 100.0/details.children_screened) end as \"percent_col_Bilateral Pitting Oedema (Total)\",\ncoalesce(\n\tdetails.apetite_fail_medical_complication_boys\n\t+ details.apetite_pass_medical_complication_boys\n\t+ details.apetite_fail_no_medical_complication_boys\n\t+ details.less_than_6_month_boys\n\t+ details.oedema_boys\n,0) as \"Total (Boys)\",\ncoalesce(\n\tdetails.apetite_fail_medical_complication_girls\n\t+ details.apetite_pass_medical_complication_girls\n\t+ details.apetite_fail_no_medical_complication_girls\n\t+ details.less_than_6_month_girls\n\t+ details.oedema_girls\n,0) as \"Total (Girls)\",\ncoalesce(\n\tdetails.apetite_pass_no_medical_complication_total\n\t+ details.apetite_fail_medical_complication_total\n\t+ details.apetite_pass_medical_complication_total\n\t+ details.apetite_fail_no_medical_complication_total\n\t+ details.less_than_6_month_total\n\t+ details.oedema_total\n,0) as \"Grand Total\"\nfrom details\nunion all\nselect null,\n''<b>Total<b>'',\n#location_id#,\nsum(details.apetite_pass_no_medical_complication_boys),\nsum(details.apetite_pass_no_medical_complication_girls),\nsum(details.apetite_pass_no_medical_complication_total),\n\tcase when (sum(details.apetite_pass_no_medical_complication_total) = 0 or sum(details.apetite_pass_no_medical_complication_total) is null or sum(details.children_screened) = 0 or sum(details.children_screened) is null) then 0 else \n\tround(sum(details.apetite_pass_no_medical_complication_total)*100.0/sum(details.children_screened),2) end,\nsum(details.apetite_fail_medical_complication_boys),\nsum(details.apetite_fail_medical_complication_girls),\nsum(details.apetite_fail_medical_complication_total),\n\tcase when (sum(details.apetite_fail_medical_complication_total) = 0 or sum(details.apetite_fail_medical_complication_total) is null or sum(details.children_screened) = 0 or sum(details.children_screened) is null) then 0 else \n\tround(sum(details.apetite_fail_medical_complication_total)*100.0/sum(details.children_screened),2) end,\nsum(details.apetite_pass_medical_complication_boys),\nsum(details.apetite_pass_medical_complication_girls),\nsum(details.apetite_pass_medical_complication_total),\n\tcase when (sum(details.apetite_pass_medical_complication_total) = 0 or sum(details.apetite_pass_medical_complication_total) is null or sum(details.children_screened) = 0 or sum(details.children_screened) is null) then 0 else \n\tround(sum(details.apetite_pass_medical_complication_total)*100.0/sum(details.children_screened),2) end,\nsum(details.apetite_fail_no_medical_complication_boys),\nsum(details.apetite_fail_no_medical_complication_girls),\nsum(details.apetite_fail_no_medical_complication_total),\n\tcase when (sum(details.apetite_fail_no_medical_complication_total) = 0 or sum(details.apetite_fail_no_medical_complication_total) is null or sum(details.children_screened) = 0 or sum(details.children_screened) is null) then 0 else \n\tround(sum(details.apetite_fail_no_medical_complication_total)*100.0/sum(details.children_screened),2) end,\nsum(details.less_than_6_month_boys),\nsum(details.less_than_6_month_girls),\nsum(details.less_than_6_month_total),\n\tcase when (sum(details.less_than_6_month_total) = 0 or sum(details.less_than_6_month_total) is null or sum(details.children_screened) = 0 or sum(details.children_screened) is null) then 0 else \n\tround(sum(details.less_than_6_month_total)*100.0/sum(details.children_screened),2) end,\nsum(details.oedema_boys),\nsum(details.oedema_girls),\nsum(details.oedema_total),\n\tcase when (sum(details.oedema_total) = 0 or sum(details.oedema_total) is null or sum(details.children_screened) = 0 or sum(details.children_screened) is null) then 0 else \n\tround(sum(details.oedema_total)*100.0/sum(details.children_screened),2) end,\nsum(details.apetite_fail_medical_complication_boys\n\t+ details.apetite_pass_medical_complication_boys\n\t+ details.apetite_fail_no_medical_complication_boys\n\t+ details.less_than_6_month_boys\n\t+ details.oedema_boys),\nsum(details.apetite_fail_medical_complication_girls\n\t+ details.apetite_pass_medical_complication_girls\n\t+ details.apetite_fail_no_medical_complication_girls\n\t+ details.less_than_6_month_girls\n\t+ details.oedema_girls),\nsum(details.apetite_pass_no_medical_complication_total\n\t+ details.apetite_fail_medical_complication_total\n\t+ details.apetite_pass_medical_complication_total\n\t+ details.apetite_fail_no_medical_complication_total\n\t+ details.less_than_6_month_total\n\t+ details.oedema_total)\nfrom details;","queryId":1655,"fieldName":"tableField","queryUUID":"3ab4175c-0c17-4bf0-986e-3dd34ad5e84e","dataColspan":"<th></th>\n<th></th>\n<th colspan=\"4\" style=\"text-align:center\">CMAM</th>\n<th colspan=\"22\" style=\"text-align:center\">CMTC/NRC</th>\n<th></th>","queryParams":"from_date,to_date,loggedInUserId,location_id"}],"fieldsContainer":[{"fieldName":"date","fieldType":"onlyMonthFromTo","queryUUID":null,"displayName":"Month","isMandatory":true,"queryUUIDForParam":null,"requiredUptoLevel":1,"index":0,"ckSetCustomMaxMonth":true,"setCustomMaxMonth":0},{"fieldName":"location_id","fieldType":"location","queryUUID":null,"displayName":"Location","isMandatory":true,"fetchUptoLevel":"6","queryUUIDForParam":null,"requiredUptoLevel":1,"fetchAccordingToUserAoi":true}]},"colspanData":true,"isFilterOpen":true,"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'screening_cmtc_nrc', '0509ff03-6853-41bd-8b14-153cbcd22970'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(618, 'CMTC/NRC Facility Monitoring-2', NULL, true, 'DYNAMIC', NULL, '2020-09-10 10:21:27.022', 60512, '2020-06-29 11:47:41.942', 60512, '{"layout":"dynamicReport1","containers":{"tableContainer":[{"query":"with prefered_language as(\n\tselect case when prefered_language = ''EN'' then true else false end as is_english \n\tfrom um_user\n\twhere id = #loggedInUserId#\n),dates as (\n    select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date,\n\tto_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date\n),health_infra_details as (\n\tselect id,name from health_infrastructure_details\n\twhere location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)\n\tand (is_cmtc or is_nrc or is_sncu)\n),health_infra_wise_analytics as (\n\tselect health_infra_details.id as child_id,\n\tsum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.less_than_6_months_admitted) as less_than_6_months_admitted,\n\tsum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.above_6_months_admitted) as above_6_months_admitted,\n\tsum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.less_than_3_sd) as less_than_3_sd,\n\tsum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.muac_less_than_11_5) as muac_less_than_11_5,\n\tsum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.sd_and_muac) as sd_and_muac,\n\tsum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.oedema) as oedema,\n\tsum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.height_less_than_45) as height_less_than_45,\n\tsum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.visited_by_pediatrician) as visited_by_pediatrician,\n\tsum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.discharge_from_facility) as discharge_from_facility,\n\tsum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.cured) as cured,\n\tsum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.defaulters) as defaulters,\n\tsum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.death) as death,\n\tsum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.referred_for_cmam) as referred_for_cmam,\n\tsum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.weight_gain_15) as weight_gain_15\n\tfrom health_infra_details\n\tinner join child_cmtc_nrc_health_facility_wise_analytics_wise_details on health_infra_details.id = child_cmtc_nrc_health_facility_wise_analytics_wise_details.health_infra_id\n\tinner join dates on child_cmtc_nrc_health_facility_wise_analytics_wise_details.month_year between dates.from_date and dates.to_date\n\tgroup by health_infra_details.id\n),medical_transfer_details as (\n\tselect health_infra_details.id as child_id,\n\tcount(*) as medical_transfer\n\tfrom health_infra_details\n\tinner join child_cmtc_nrc_referral_detail on health_infra_details.id = child_cmtc_nrc_referral_detail.referred_from\n\tinner join dates on child_cmtc_nrc_referral_detail.referred_date between dates.from_date and dates.to_date\n\tgroup by health_infra_details.id\n), det as (\n\tselect row_number() over() as sr_no, \n\thealth_infra_details.name,\n\thealth_infra_details.id as hidden_health_id,\n\thealth_infrastructure_details.no_of_beds as no_of_beds,\n\tcoalesce(health_infra_wise_analytics.less_than_6_months_admitted) as less_than_6_months_admitted,\n\tcoalesce(health_infra_wise_analytics.above_6_months_admitted) as above_6_months_admitted,\n\tcoalesce(health_infra_wise_analytics.less_than_6_months_admitted + health_infra_wise_analytics.above_6_months_admitted) as admitted_total,\n\tcoalesce(health_infra_wise_analytics.less_than_3_sd) as less_than_3_sd,\n\tcoalesce(health_infra_wise_analytics.muac_less_than_11_5) as muac_less_than_11_5,\n\tcoalesce(health_infra_wise_analytics.sd_and_muac) as sd_and_muac,\n\tcoalesce(health_infra_wise_analytics.oedema) as oedema,\n\tcoalesce(health_infra_wise_analytics.height_less_than_45) as height_less_than_45,\n\tcoalesce(\n\thealth_infra_wise_analytics.less_than_3_sd\n\t+ health_infra_wise_analytics.muac_less_than_11_5\n\t+ health_infra_wise_analytics.sd_and_muac\n\t+ health_infra_wise_analytics.oedema\n\t+ health_infra_wise_analytics.height_less_than_45\n\t) as criteria_total,\n\tcoalesce(health_infra_wise_analytics.visited_by_pediatrician) as visited_by_pediatrician,\n\tcoalesce(health_infra_wise_analytics.discharge_from_facility) as discharge_from_facility,\n\tcoalesce(health_infra_wise_analytics.cured) as cured,\n\tcoalesce(health_infra_wise_analytics.defaulters) as defaulters,\n\tcoalesce(health_infra_wise_analytics.death) as death,\n\tcoalesce(health_infra_wise_analytics.referred_for_cmam) as referred_for_cmam,\n\tcoalesce(health_infra_wise_analytics.weight_gain_15) as weight_gain_15,\n\tcoalesce(medical_transfer_details.medical_transfer) as medical_transfer\n\tfrom health_infra_details\n\tinner join health_infrastructure_details on health_infra_details.id = health_infrastructure_details.id\n\tleft join health_infra_wise_analytics on health_infra_details.id = health_infra_wise_analytics.child_id\n\tleft join medical_transfer_details on health_infra_details.id = medical_transfer_details.child_id\n)\nselect row_number() over() as \"Sr.No\",\ndet.name as \"Facility Name\",\ndet.hidden_health_id,\ndet.no_of_beds as \"No. of Beds\",\ndet.less_than_6_months_admitted as \"Less than 6 months\",\ndet.above_6_months_admitted as \"Above 6 months\",\ndet.admitted_total as \"Total Admission\",\ndet.less_than_3_sd as \"Less than 3SD\",\ndet.muac_less_than_11_5 as \"Less than 11.5 MUAC\",\ndet.sd_and_muac as \"Both\",\ndet.oedema as \"Oedema\",\ndet.height_less_than_45 as \"Other (Less than 45cm length)\",\ndet.criteria_total as \"Total\",\n\tcase when det.admitted_total = 0 or det.admitted_total is null or det.no_of_beds = 0 or det.no_of_beds is null then 0 else\n\tround(det.admitted_total * 100.0/(det.no_of_beds*2)) end as \"Admission Rate\",\ndet.visited_by_pediatrician as \"Visited by pediatrician\",\n\tcase when det.visited_by_pediatrician = 0 or det.visited_by_pediatrician is null or det.admitted_total = 0 or det.admitted_total is null then 0 else\n\tround(det.visited_by_pediatrician * 100.0/det.admitted_total) end as \"percent_col_Visited by Pediatrician\",\ndet.discharge_from_facility as \"Discharge from facility\",\n\tcase when det.discharge_from_facility = 0 or det.discharge_from_facility is null or det.admitted_total = 0 or det.admitted_total is null then 0 else\n\tround(det.discharge_from_facility * 100.0/det.admitted_total) end as \"percent_col_Discharge from facility\",\ndet.cured as \"Improved nutritional status on discharge from facility\",\n\tcase when det.cured = 0 or det.cured is null or det.discharge_from_facility = 0 or det.discharge_from_facility is null then 0 else\n\tround(det.cured * 100.0/det.discharge_from_facility) end as \"percent_col_Improved nutritional status on discharge from facility\",\ndet.defaulters as \"Defaulters\",\n\tcase when det.defaulters = 0 or det.defaulters is null or det.admitted_total = 0 or det.admitted_total is null then 0 else\n\tround(det.defaulters * 100.0/det.admitted_total) end as \"percent_col_Defaulters\",\ndet.medical_transfer as \"Medical Transfer\",\n\tcase when det.medical_transfer = 0 or det.medical_transfer is null or det.admitted_total = 0 or det.admitted_total is null then 0 else\n\tround(det.medical_transfer * 100.0/det.admitted_total) end as \"percent_col_Medical Transfer\",\ndet.death as \"Death\",\ndet.referred_for_cmam as \"Child referred for enrolling in CMAM program\",\n\tcase when det.referred_for_cmam = 0 or det.referred_for_cmam is null or det.discharge_from_facility = 0 or det.discharge_from_facility is null then 0 else\n\tround(det.referred_for_cmam * 100.0/det.discharge_from_facility) end as \"percent_col_Child referred for enrolling in CMAM program\",\ndet.weight_gain_15 as \"No. of children with 15% weigth gain\"\nfrom det\nunion all\nselect null,\n''<b>Total<b>'',\n#location_id#,\nsum(det.no_of_beds),\nsum(det.less_than_6_months_admitted),\nsum(det.above_6_months_admitted),\nsum(det.admitted_total),\nsum(det.less_than_3_sd),\nsum(det.muac_less_than_11_5),\nsum(det.sd_and_muac),\nsum(det.oedema),\nsum(det.height_less_than_45),\nsum(det.criteria_total),\n\tcase when (sum(det.admitted_total) = 0 or sum(det.admitted_total) is null or sum(det.no_of_beds) = 0 or sum(det.no_of_beds) is null) then 0 else \n\tround(sum(det.admitted_total)*100.0/(sum(det.no_of_beds)*2),2) end,\nsum(det.visited_by_pediatrician),\n\tcase when (sum(det.visited_by_pediatrician) = 0 or sum(det.visited_by_pediatrician) is null or sum(det.admitted_total) = 0 or sum(det.admitted_total) is null) then 0 else \n\tround(sum(det.visited_by_pediatrician)*100.0/sum(det.admitted_total),2) end,\nsum(det.discharge_from_facility),\n\tcase when (sum(det.discharge_from_facility) = 0 or sum(det.discharge_from_facility) is null or sum(det.admitted_total) = 0 or sum(det.admitted_total) is null) then 0 else \n\tround(sum(det.discharge_from_facility)*100.0/sum(det.admitted_total),2) end,\nsum(det.cured),\n\tcase when (sum(det.cured) = 0 or sum(det.cured) is null or sum(det.discharge_from_facility) = 0 or sum(det.discharge_from_facility) is null) then 0 else \n\tround(sum(det.cured)*100.0/sum(det.discharge_from_facility),2) end,\nsum(det.defaulters),\n\tcase when (sum(det.defaulters) = 0 or sum(det.defaulters) is null or sum(det.admitted_total) = 0 or sum(det.admitted_total) is null) then 0 else \n\tround(sum(det.defaulters)*100.0/sum(det.admitted_total),2) end,\nsum(det.medical_transfer),\n\tcase when (sum(det.medical_transfer) = 0 or sum(det.medical_transfer) is null or sum(det.admitted_total) = 0 or sum(det.admitted_total) is null) then 0 else \n\tround(sum(det.medical_transfer)*100.0/sum(det.admitted_total),2) end,\nsum(det.death),\nsum(det.referred_for_cmam),\n\tcase when (sum(det.referred_for_cmam) = 0 or sum(det.referred_for_cmam) is null or sum(det.discharge_from_facility) = 0 or sum(det.discharge_from_facility) is null) then 0 else \n\tround(sum(det.referred_for_cmam)*100.0/sum(det.discharge_from_facility),2) end,\nsum(det.weight_gain_15)\t\nfrom det","queryId":1657,"fieldName":"tableField","queryUUID":"6aa4f634-b359-455b-baa8-1d2a35ff5aa9","dataColspan":"<th></th>\n<th></th>\n<th colspan=\"3\" style=\"text-align:center\">No. of children admitted at CMTC/NRC</th>\n<th colspan=\"6\" style=\"text-align:center\">Admission Criteria</th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>","queryParams":"from_date,to_date,loggedInUserId,location_id"}],"fieldsContainer":[{"fieldName":"date","fieldType":"onlyMonthFromTo","queryUUID":null,"displayName":"Month","isMandatory":true,"queryUUIDForParam":null,"requiredUptoLevel":1},{"fieldName":"location_id","fieldType":"location","queryUUID":null,"displayName":"Location","isMandatory":true,"fetchUptoLevel":"6","queryUUIDForParam":null,"requiredUptoLevel":1,"fetchAccordingToUserAoi":true}]},"colspanData":true,"isFilterOpen":true,"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'cmtc_fac_monitor2', 'd5af9d9b-372d-4872-9c92-064bdc3d0a1b'::uuid);
INSERT INTO public.report_master
(id, report_name, file_name, active, report_type, menu_id, modified_on, created_by, created_on, modified_by, config_json, code, uuid)
VALUES(626, 'Anmol Total Pregnancy Not Registed ( Aanmol Pregnancy Analytic Details )', NULL, true, 'DYNAMIC', NULL, '2020-08-10 13:46:25.449', 74841, '2020-07-16 17:10:08.485', 74841, '{"layout":"dynamicReportWithPagination","containers":{"tableContainer":[{"query":"with financial_year as (\n\tSELECT\n        to_date(\n            CASE WHEN ''#from_month#'' = ''null'' THEN\n                NULL\n            ELSE\n                ''#from_month#''\n            END, ''MM/DD/YYYY'') AS from_date,\n        to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date\n), final_det as (\n\tselect\n\trprd.pregnancy_reg_location_id as location_id,\n\trprd.member_id,\nam.mother_registration_status,\nam.mother_registration_wsdl_code\n\tfrom rch_pregnancy_analytics_details rprd \n\tinner join anmol_location_mapping mapping on rprd.pregnancy_reg_location_id = mapping.location_id\n\tINNER JOIN location_hierchy_closer_det lm on lm.child_id = mapping.location_id and parent_loc_type  = ''V''\n\tleft join anmol_master am on rprd.pregnancy_reg_id = am.pregnancy_reg_det_id\n\tleft join financial_year fy on true \n\twhere parent_loc_type = ''V'' and \n\tcast(rprd.reg_service_date_month_year as date) between fy.from_date and fy.to_date  \n\tand rprd.preg_reg_state in (''DELIVERY_DONE'', ''PENDING'', ''PREGNANT'')\n\tand \n(am.mother_registration_status is null or am.mother_registration_status = ''FAIL'')\nand rprd.pregnancy_reg_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id# )\n\tORDER BY rprd.pregnancy_reg_id\n\t#limit_offset#\n), previous_preg_det as (\n\tselect fd.member_id,string_agg(case when rwmm.pregnancy_outcome is not null and rwmm.pregnancy_outcome != '''' then rwmm.pregnancy_outcome else ''N/A'' end, '','') as  pregnancy_outcome,\n        string_agg(case when am.mother_delivery_status is not null and am.mother_delivery_status  != '''' then am.mother_delivery_status else ''N/A'' end, '','') as  delivery_outcome\n\tfrom final_det fd\n\tleft join anmol_master am on am.member_id = fd.member_id\n\tleft join rch_wpd_mother_master rwmm on rwmm.pregnancy_reg_det_id = am.pregnancy_reg_det_id\nwhere \nrwmm.has_delivery_happened is true\nand rwmm.state is null\n\tgroup by fd.member_id\n)\nselect \nROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as \"Sr No\",\nget_location_hierarchy(fd.location_id) as \"Location\",\nim.first_name || '' '' || im.middle_name || '' '' || im.last_name || '' ('' || im.unique_health_id || '')'' as \"Member Det\",\ncast(age(cast(im.dob as date))  as text) as \"Age\",\nim.basic_state as \"Member Basic State\",\nimf.basic_state as \"Family Basic State\",\ncase when im.gender = ''F'' then ''Female'' else ''Male'' end as \"Gender\",\nlfvd.value as \"Marital Status\",\nfd.mother_registration_status as \"Current Mother Registration Status\",\nfd.mother_registration_wsdl_code as \"Current Wsdl Status\",\ncase when ppd.delivery_outcome is not null then ppd.delivery_outcome else ''N/A'' end as \"Previous Delivery Outcome\",\ncase when ppd.pregnancy_outcome is not null then ppd.pregnancy_outcome else ''N/A'' end as \"Previous Pregnancy Outcome\"\nfrom final_det fd\nleft join previous_preg_det ppd on ppd.member_id = fd.member_id\nleft join imt_member im on im.id = fd.member_id\nleft join imt_family imf on imf.family_id = im.family_id\nleft join listvalue_field_value_detail lfvd on lfvd.id = im.marital_status","queryId":1687,"fieldName":"tableField","queryUUID":"9d300a4e-73ce-45dc-aca7-ef3eb106c002","queryParams":"to_month,limit_offset,from_month,location_id"}],"fieldsContainer":[{"isHidden":true,"fieldName":"to_month","fieldType":"text","queryUUID":null,"displayName":"To Month","queryForParam":"select to_char(cast(''#to_month#'' as date),''MM/YYYY'') as to_date","queryIdForParam":1686,"queryUUIDForParam":"943fe753-a2b6-4fd5-8c78-7fa98c093d38"},{"isHidden":true,"fieldName":"location_id","fieldType":"text","queryUUID":null,"displayName":"Location","queryForParam":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\nselect \nstring_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''> '' order by lhcd.depth desc) as location_id\nfrom location_master l1 \ninner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id\ninner join location_master l2 on l2.id = lhcd.parent_id\ncross join prefered_language\nwhere l1.id = #location_id#","queryIdForParam":1685,"queryUUIDForParam":"d6d95cf9-244e-408c-b201-48dc3268da1b"},{"isHidden":true,"fieldName":"from_month","fieldType":"text","queryUUID":null,"displayName":"From Month","queryForParam":"select to_char(cast(''#from_month#'' as date),''MM/YYYY'') as from_date","queryIdForParam":1684,"queryUUIDForParam":"0b97cf23-4a01-45cb-8102-4ee8d8bb5ded"}]},"isFilterOpen":true,"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":""}', 'anmol_preg_member_de', '17733880-4a6c-4baa-9dec-3bb472994899'::uuid);
INSERT INTO public.report_master (id,report_name,file_name,active,report_type,menu_id,modified_on,created_by,created_on,modified_by,config_json,code,uuid) VALUES
(69,'Pregnant Women Report',NULL,true,'DYNAMIC',93,'2020-03-16 13:17:29.977',1027,'2018-09-21 17:39:12.591',74841,'{"layout": "dynamicReportWithPagination", "containers": {"tableContainer": [{"query": "", "queryId": 81, "fieldName": "tableField", "queryUUID": "ee79f53d-1302-4a7f-95a8-cfd2f09f15e4", "queryParams": "limit_offset,loggedInUserId,location_id"}], "fieldsContainer": [{"index": 0, "fieldName": "location_id", "fieldType": "location", "queryUUID": null, "displayName": "location_id", "queryUUIDForParam": null, "requiredUptoLevel": "3", "fetchAccordingToUserAoi": true}]}, "isFilterOpen": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer", "isBackButtonRequired": false}','preg_women','dc464f6b-91ad-47d6-b652-609126ac316d'),
(62,'High Risk Mother-Present Pregnancy Complication',NULL,true,'DYNAMIC',86,'2019-12-05 13:38:21.541',1027,'2018-08-30 12:10:14.218',74840,'{"layout": "dynamicReport1", "htmlData": true, "containers": {"tableContainer": [{"query": "with prefered_language as(\nselect (case \n\t\twhen report_preferred_language = ''EN'' then true  \n\t\telse false \n\tend) as is_enlish \nfrom um_user where id = #loggedInUserId#)\n,dates as (\nselect to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date\n,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date\n),w as(\n\tselect\n\tlm.id,\n    case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name\n\t\t\t\telse lm.name end as name,\n    coalesce(sum(anc_reg),0) as reg_preg_women,\n    coalesce(sum(high_risk),0) as high_risk,\n    coalesce(sum(severe_anemia),0) as severe_anemia,\n    coalesce(sum(blood_pressure),0) as blood_pressure,\n    coalesce(sum(diabetes),0) as diabetes,\n    coalesce(sum(cur_mal_presentation_issue),0) as cur_mal_presentation_issue,\n    coalesce(sum(cur_malaria_issue),0) as cur_malaria_issue,\n    coalesce(sum(multipara),0) as multipara,\n    coalesce(sum(extreme_age),0) as extreme_age,\n    coalesce(sum(interval_bet_preg_less_18_months),0) as interval_bet_preg_less_18_months,\n    coalesce(sum(height),0) as height,\n    coalesce(sum(weight),0) as weight,\n    coalesce(sum(urine_albumin),0) as urine_albumin\n\tfrom (\n\t\tselect child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1) as t \n\tinner join location_hierchy_closer_det on t.child_id = location_hierchy_closer_det.parent_id \n\tinner join location_master lm on lm.id = t.child_id\n\tcross join dates\n\tleft join rch_service_provided_during_year lwrra on lwrra.location_id = location_hierchy_closer_det.child_id and lwrra.month_year between dates.from_date and dates.to_date\n        cross join prefered_language\n\tgroup by lm.id,prefered_language.is_enlish\n\torder by lm.name\n)\nselect row_number() over() as \"Sr. no\",\nid as hidden_location_id,\nname as \"Location Name\",\nreg_preg_women as \"Total number of PW registered during selected period\",\nhigh_risk as \"Total No of High risk mothers\",\nround(case when reg_preg_women = 0 then 0 else high_risk*100.0/reg_preg_women end,2) as \"percent_col_high_risk_mother\",\nsevere_anemia  as \"Severe anemia (Hb less than 7gm%)\",\nround(case when high_risk = 0 then 0 else severe_anemia*100.0/high_risk end,2) as \"percent_col_Severe anemia (Hb less than 7gm%)\",\nblood_pressure  as \"Blood pressure (More than 140/90)(Either or both)\",\nround(case when high_risk = 0 then 0 else blood_pressure*100.0/high_risk end,2) as \"percent_col_Blood pressure (More than 140/90)(Either or both)\",\ndiabetes  as \"Gestational Diabetes Mellitus\",\nround(case when high_risk = 0 then 0 else diabetes*100.0/high_risk end,2) as \"percent_col_Gestational Diabetes Mellitus\",\ncur_malaria_issue  as \"Malaria\",\nround(case when high_risk = 0 then 0 else cur_malaria_issue*100.0/high_risk end,2) as \"percent_col_Malaria\",\nmultipara  as \"Grand Multipara\",\nround(case when high_risk = 0 then 0 else multipara*100.0/high_risk end,2) as \"percent_col_Grand Multipara\",\ncur_mal_presentation_issue  as \"Mal Presentation\",\nround(case when high_risk = 0 then 0 else cur_mal_presentation_issue*100.0/high_risk end,2) as \"percent_col_Mal Presentation\",\nextreme_age  as \"Extreme Age (Less than 18 and more than 35 years)\",\nround(case when high_risk = 0 then 0 else extreme_age*100.0/high_risk end,2) as \"percent_col_Extreme Age (Less than 18 and more than 35 years)\",\ninterval_bet_preg_less_18_months  as \"Interval less than 18 months between last and present pregnancy\",\nround(case when high_risk = 0 then 0 else interval_bet_preg_less_18_months*100.0/high_risk end,2) as \"percent_col_Interval less than 18 months between last and present pregnancy\", \nheight  as \"Height less than 140 cm\",\nround(case when high_risk = 0 then 0 else height*100.0/high_risk end,2) as \"percent_col_Height less than 140 cm\",\nweight  as \"Weight less than 45kg\",\nround(case when high_risk = 0 then 0 else weight*100.0/high_risk end,2) as \"percent_col_Weight less than 45kg\",\nurine_albumin  as \"Urine Albumin Present\",\nround(case when high_risk = 0 then 0 else urine_albumin*100.0/high_risk end,2) as \"percent_col_Urine Albumin Present\"\nfrom w\nunion all\nselect\nnull,\n#location_id#,\n''<b>Total<b>'',\ncoalesce(sum(reg_preg_women),0),\ncoalesce(sum(high_risk),0),\nround(case when sum(reg_preg_women) = 0 then 0 else sum(high_risk)*100.0/sum(reg_preg_women) end,2),\ncoalesce(sum(severe_anemia),0),\nround(case when sum(high_risk) = 0 then 0 else sum(severe_anemia)*100.0/sum(high_risk) end,2),\ncoalesce(sum(blood_pressure),0),\nround(case when sum(high_risk) = 0 then 0 else sum(blood_pressure)*100.0/sum(high_risk) end,2),\ncoalesce(sum(diabetes),0),\nround(case when sum(high_risk) = 0 then 0 else sum(diabetes)*100.0/sum(high_risk) end,2),\ncoalesce(sum(cur_malaria_issue),0),\nround(case when sum(high_risk) = 0 then 0 else sum(cur_malaria_issue)*100.0/sum(high_risk) end,2),\ncoalesce(sum(multipara),0),\nround(case when sum(high_risk) = 0 then 0 else sum(multipara)*100.0/sum(high_risk) end,2),\ncoalesce(sum(cur_mal_presentation_issue),0),\nround(case when sum(high_risk) = 0 then 0 else sum(cur_mal_presentation_issue)*100.0/sum(high_risk) end,2),\ncoalesce(sum(extreme_age),0),\nround(case when sum(high_risk) = 0 then 0 else sum(extreme_age)*100.0/sum(high_risk) end,2),\ncoalesce(sum(interval_bet_preg_less_18_months),0),\nround(case when sum(high_risk) = 0 then 0 else sum(interval_bet_preg_less_18_months)*100.0/sum(high_risk) end,2),\ncoalesce(sum(height),0),\nround(case when sum(high_risk) = 0 then 0 else sum(height)*100.0/sum(high_risk) end,2),\ncoalesce(sum(weight),0),\nround(case when sum(high_risk) = 0 then 0 else sum(weight)*100.0/sum(high_risk) end,2),\ncoalesce(sum(urine_albumin),0),\nround(case when sum(high_risk) = 0 then 0 else sum(urine_albumin)*100.0/sum(high_risk) end,2) \nfrom w", "queryId": 74, "htmlData": "#table#\n<br/>\n<b>Note :</b><br/>\n<b>Total number of PW registered during selected period :</b>Total number of pregnant women registered during selected period<br/>\n<b>Total No of High risk mothers :</b>Total number of high risk mothers during given time.<br/>\n<b>Severe anemia :</b>Total mothers with severe anemia (Hb less than 7gm%).<br/>\n<b>Blood pressure (More than 140/90) :</b>Total mothers with high blood pressure (More than 140/90).<br/>\n<b>Gestational Diabetes Mellitus :</b>Total mothers with gestational diabetes mellitus.<br/>\n<b>Malaria :</b>Total mothers with malaria.<br/>\n<b>Grand Multipara :</b>Total mothers with grand multipara.<br/>\n<b>Mal Presentation :</b>Total mothers with mal presentation.<br/>\n<b>Extreme Age : </b>Total mothers with extreme age (Less than 18 and more than 35 years). <br/>\n<b>Interval less than 18 months between last and present pregnancy :</b>Total mothers with interval less than 18 months between last and present pregnancy.<br/>\n<b>Height less than 140 cm :</b>Total mothers with height less than 140 cm.<br/>\n<b>Weight less than 45kg :</b>Total mothers with weight less than 45 kg.<br/>\n<b>Urine Albumin Present :</b>Total mothers with urine albumin present.", "fieldName": "tableField", "queryUUID": "403f97bd-5994-40a3-a754-724f7de39ddd", "dataColspan": "<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th colspan=\"22\" style=\"text-align:center\">Present Pregnancy Complication</th>", "queryParams": "to_month,loggedInUserId,from_month,location_id"}], "fieldsContainer": [{"fieldName": "location_id", "fieldType": "location", "queryUUID": null, "displayName": "location id", "queryUUIDForParam": null, "fetchAccordingToUserAoi": true}, {"fieldName": "month", "fieldType": "onlyMonthFromTo", "queryUUID": null, "displayName": "Month", "isMandatory": true, "queryUUIDForParam": null, "requiredUptoLevel": 1}], "tableFieldContainer": [{"index": 0, "isLink": true, "fieldName": "Total No of High risk mothers", "customParam": "", "customState": "techo.report.view({\"id\":120,\"queryParams\":{\"location_id\":@hidden_location_id@,\"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\"}})", "navigationState": null, "locationLevelForLink": "1"}, {"index": 1, "isLink": true, "fieldName": "Severe anemia (Hb less than 7gm%)", "customParam": "", "customState": "techo.report.view({\"id\":121,\"queryParams\":{\"location_id\":@hidden_location_id@,\"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\"}})", "navigationState": null, "locationLevelForLink": "4"}, {"index": 2, "isLink": true, "fieldName": "Blood pressure (More than 140/90)(Either or both)", "customParam": "", "customState": "techo.report.view({\"id\":122,\"queryParams\":{\"location_id\":@hidden_location_id@,\"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\"}})", "navigationState": null, "locationLevelForLink": "4"}, {"index": 3, "isLink": true, "fieldName": "Gestational Diabetes Mellitus", "customParam": "", "customState": "techo.report.view({\"id\":123,\"queryParams\":{\"location_id\":@hidden_location_id@,\"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\"}})", "navigationState": null, "locationLevelForLink": "4"}, {"index": 4, "isLink": true, "fieldName": "Malaria", "customParam": "", "customState": "techo.report.view({\"id\":124,\"queryParams\":{\"location_id\":@hidden_location_id@,\"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\"}})", "navigationState": null, "locationLevelForLink": "4"}, {"index": 5, "isLink": true, "fieldName": "Grand Multipara", "customParam": "", "customState": "techo.report.view({\"id\":125,\"queryParams\":{\"location_id\":@hidden_location_id@,\"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\"}})", "navigationState": null, "locationLevelForLink": "4"}, {"index": 6, "isLink": true, "fieldName": "Mal Presentation", "customParam": "", "customState": "techo.report.view({\"id\":126,\"queryParams\":{\"location_id\":@hidden_location_id@,\"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\"}})", "navigationState": null, "locationLevelForLink": "4"}, {"index": 7, "isLink": true, "fieldName": "Extreme Age (Less than 18 and more than 35 years)", "customParam": "", "customState": "techo.report.view({\"id\":127,\"queryParams\":{\"location_id\":@hidden_location_id@,\"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\"}})", "navigationState": null, "locationLevelForLink": "4"}, {"index": 8, "isLink": true, "fieldName": "Interval less than 18 months between last and present pregnancy", "customParam": "", "customState": "techo.report.view({\"id\":128,\"queryParams\":{\"location_id\":@hidden_location_id@,\"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\"}})", "navigationState": null, "locationLevelForLink": "4"}, {"index": 9, "isLink": true, "fieldName": "Height less than 140 cm", "customParam": "", "customState": "techo.report.view({\"id\":129,\"queryParams\":{\"location_id\":@hidden_location_id@,\"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\"}})", "navigationState": null, "locationLevelForLink": "4"}, {"index": 10, "isLink": true, "fieldName": "Weight less than 45kg", "customParam": "", "customState": "techo.report.view({\"id\":130,\"queryParams\":{\"location_id\":@hidden_location_id@,\"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\"}})", "navigationState": null, "locationLevelForLink": "4"}, {"index": 11, "isLink": true, "fieldName": "Urine Albumin Present", "customParam": "", "customState": "techo.report.view({\"id\":131,\"queryParams\":{\"location_id\":@hidden_location_id@,\"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\"}})", "navigationState": null, "locationLevelForLink": "4"}]}, "colspanData": true, "isFilterOpen": true, "templateType": "DYNAMIC_REPORTS", "isExcelOption": true, "isPrintOption": true, "locationLevel": "", "selectedContainer": "tableContainer"}','hrm_presnt_preg_comp','4fb300f3-1f11-4be0-9b7c-d3fc2396c198'),
(55,'Delivery monitoring of Registered LMP',NULL,true,'DYNAMIC',79,'2020-11-19 15:58:02.087',1027,'2018-08-30 11:26:16.89',74841,'{"layout":"dynamicReport1","htmlData":true,"containers":{"tableContainer":[{"query":"with parameters as (\nselect CAST(#location_id# AS INTEGER) as location_id,\nto_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_date,\nto_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') as to_date,\nCAST(''#demographic_location_id#'' AS TEXT) as demographic_group,\nCAST(#loggedInUserId# AS INTEGER) as logged_in_user_id\n),location_wise_data as(\nselect lcd.parent_id as loc_id, sum(anc_reg) as anc_reg, coalesce(sum(abortion),0) as abortion,coalesce(sum(mtp),0) as mtp,\ncoalesce(sum(no_of_inst_del),0) as no_of_inst_del, coalesce(sum(no_of_home_del),0) as no_of_home_del,\ncoalesce(sum(no_of_maternal_death),0) as no_of_maternal_death,\ncoalesce(sum(no_of_missing_del),0) as no_of_missing_del,\ncoalesce(sum(no_of_not_missing_del),0) as no_of_not_missing_del\nfrom rch_lmp_base_location_wise_data_point, vw_location_closure_det_by_parent_location_depth lcd, parameters p\nwhere rch_lmp_base_location_wise_data_point.location_id = lcd.child_id and lcd.location_id = p.location_id\nand lcd.depth=1 and month_year between p.from_date and p.to_date\nand (p.demographic_group=''null'' or lcd.child_demographic_type in ( select distinct demographic_type from location_demographic_type_master where\ndemographic_group = p.demographic_group))\ngroup by lcd.parent_id\n), final_data as (\nselect\nlhcd.child_id as hidden_location_id,\np.demographic_group as hidden_demographic_location_id,\npl.location_name as \"Location Name\",\ncoalesce(anc_reg,0) as \"Number of PW registered with LMP\",\n  coalesce(abortion,0) as \"Number of abortion registered with LMP\",\n  round(coalesce(case when anc_reg = 0 then 0 else abortion*100.0/anc_reg end,0),2)  as \"percent_col_Number of abortion registered with LMP\",\n  coalesce(mtp,0) as \"Number of MTP registered with LMP\",\n  round(coalesce(case when anc_reg = 0 then 0 else mtp*100.0/anc_reg end,0),2)  as \"percent_col_Number of MTP registered with LMP\",\n  coalesce(no_of_inst_del,0)  as \"Number of institutional delivery registered with LMP\",\n  round(coalesce(case when anc_reg = 0 then 0 else no_of_inst_del*100.0/anc_reg end,0),2)  as \"percent_col_Number of institutional delivery registered with LMP\",\n  coalesce(no_of_home_del,0) as \"Number of Home delivery and who registered with LMP\",\n  round(coalesce(case when anc_reg = 0 then 0 else no_of_home_del*100.0/anc_reg end,0),2)  as \"percent_col_Number of Home delivery and who registered with LMP\",\n  coalesce(no_of_maternal_death,0) as \"Number of maternal death who registered with LMP\",\n  round(coalesce(case when anc_reg = 0 then 0 else no_of_maternal_death*100.0/anc_reg end,0),2)  as \"percent_col_Number of maternal death who registered with LMP\",\n  coalesce(no_of_missing_del,0) as \"Edd Lapsed\",\n  round(coalesce(case when anc_reg = 0 then 0 else no_of_missing_del*100.0/anc_reg end,0),2)  as \"percent_col_Edd Lapsed\",\n  coalesce(no_of_not_missing_del,0) as \"Edd not lapsed\",\n  round(coalesce(case when anc_reg = 0 then 0 else no_of_not_missing_del*100.0/anc_reg end,0),2)  as \"percent_col_Edd not lapsed\"\nfrom location_hierchy_closer_det lhcd \ncross join parameters p \ninner join vw_location_detail_with_user_prefer_language pl on pl.location_id = lhcd.child_id and pl.user_id = p.logged_in_user_id\nleft join location_wise_data lwd on lwd.loc_id=lhcd.child_id\nwhere lhcd.parent_id= p.location_id and lhcd.depth = 1\nand \n(p.demographic_group=''null'' or \nlhcd.child_loc_demographic_type in ( select distinct demographic_type from location_demographic_type_master \nwhere  demographic_group = p.demographic_group))\norder by \"Location Name\"\n)\nselect row_number() over() as \"Sr no.\",* from final_data\nunion all\nselect\nnull,\n(select location_id from parameters),\n(select demographic_group as demographic_location_id from parameters),\n  ''<b>Total<b>'',\n  coalesce(sum(anc_reg),0),\n  coalesce(sum(abortion),0),\nround(case when sum(anc_reg) = 0 then 0 else sum(abortion)*100.0/sum(anc_reg) end,2),\n  coalesce(sum(mtp),0),\nround(case when sum(anc_reg) = 0 then 0 else sum(mtp)*100.0/sum(anc_reg) end,2),\n  coalesce(sum(no_of_inst_del),0),\nround(case when sum(anc_reg) = 0 then 0 else sum(no_of_inst_del)*100.0/sum(anc_reg) end,2),\n  coalesce(sum(no_of_home_del),0),\nround(case when sum(anc_reg) = 0 then 0 else sum(no_of_home_del)*100.0/sum(anc_reg) end,2),\n  coalesce(sum(no_of_maternal_death),0),\nround(case when sum(anc_reg) = 0 then 0 else sum(no_of_maternal_death)*100.0/sum(anc_reg) end,2),\n  coalesce(sum(no_of_missing_del),0),\nround(case when sum(anc_reg) = 0 then 0 else sum(no_of_missing_del)*100.0/sum(anc_reg) end,2),\ncoalesce(sum(no_of_not_missing_del),0),\nround(case when sum(anc_reg) = 0 then 0 else sum(no_of_not_missing_del)*100.0/sum(anc_reg) end,2)\nfrom location_wise_data;","queryId":67,"htmlData":"#table#\n<br/>\n<b>Note :</b><br/>\n<b>Number of PW registered with LMP :</b>Total pregnant women registered with LMP during given month.<br/>\n<b>Number of abortion registered with LMP :</b>Total abortion registered with LMP during given month.<br/>\n<b>Number of MTP registered with LMP :</b>Total MTP registered with LMP during given month.<br/>\n<b>Number of institutional delivery registered with LMP :</b>Total institutional deliveries registered with LMP during given month.<br/>\n<b>Number of Home delivery and who registered with LMP :</b>Total home deliveries registered with LMP during given month.<br/>\n<b>Number of maternal death who registered with LMP :</b>Total maternal deaths registered with LMP during given month.<br/>\n<b>Missing Delivery Edd Lapsed:</b>Total missing deliveries amongst registered during given month whose edd has been lapsed(Overdue).<br/>\n<b>Missing Delivery Edd Not Lapsed:</b>Total missing deliveries amongst registered during given month whose edd has not lapsed.","fieldName":"tableField","queryUUID":"1aa46bc6-a964-4385-a08a-730fab9da823","dataColspan":"<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th colspan=\"4\" style=\"text-align:center\">Missing Delivery</th>","queryParams":"from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id"}],"fieldsContainer":[{"index":0,"fieldName":"location_id","fieldType":"location","queryUUID":null,"displayName":"location id","queryUUIDForParam":null,"requiredUptoLevel":"1","fetchAccordingToUserAoi":true,"demographicFilterRequired":true},{"index":1,"fieldName":"month_year","fieldType":"onlyMonthFromTo","queryUUID":null,"displayName":"Month","isMandatory":true,"queryUUIDForParam":null}],"tableFieldContainer":[{"index":0,"isLink":true,"fieldName":"Edd Lapsed","customParam":"","customState":"techo.report.view({\"id\":249,\"queryParams\":{\"demographic_location_id\":\"@hidden_demographic_location_id@\",\"location_id\":@hidden_location_id@, \"from_month_year\":\"$from_month_year$\", \"to_month_year\":\"$to_month_year$\"}})","navigationState":null,"locationLevelForLink":"4"},{"index":1,"isLink":true,"fieldName":"Number of PW registered with LMP","customParam":"","customState":"techo.report.view({\"id\":243,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month_year\":\"$from_month_year$\", \"to_month_year\":\"$to_month_year$\",\"demographic_location_id\":\"@hidden_demographic_location_id@\"}})","navigationState":null,"locationLevelForLink":"4"},{"index":2,"isLink":true,"fieldName":"Number of MTP registered with LMP","customParam":"","customState":"techo.report.view({\"id\":245,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month_year\":\"$from_month_year$\", \"to_month_year\":\"$to_month_year$\",\"demographic_location_id\":\"@hidden_demographic_location_id@\"}})","navigationState":null,"locationLevelForLink":"4"},{"index":3,"isLink":true,"fieldName":"Number of institutional delivery registered with LMP","customParam":"","customState":"techo.report.view({\"id\":246,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month_year\":\"$from_month_year$\", \"to_month_year\":\"$to_month_year$\",\"demographic_location_id\":\"@hidden_demographic_location_id@\"}})","navigationState":null,"locationLevelForLink":"4"},{"index":4,"isLink":true,"fieldName":"Number of Home delivery and who registered with LMP","customParam":"","customState":"techo.report.view({\"id\":247,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month_year\":\"$from_month_year$\", \"to_month_year\":\"$to_month_year$\",\"demographic_location_id\":\"@hidden_demographic_location_id@\"}})","navigationState":null,"locationLevelForLink":"1"},{"index":5,"isLink":true,"fieldName":"Number of maternal death who registered with LMP","customParam":"","customState":"techo.report.view({\"id\":248,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month_year\":\"$from_month_year$\", \"to_month_year\":\"$to_month_year$\",\"demographic_location_id\":\"@hidden_demographic_location_id@\"}})","navigationState":null,"locationLevelForLink":"4"},{"index":6,"isLink":true,"fieldName":"Number of abortion registered with LMP","customParam":"","customState":"techo.report.view({\"id\":244,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month_year\":\"$from_month_year$\", \"to_month_year\":\"$to_month_year$\",\"demographic_location_id\":\"@hidden_demographic_location_id@\"}})","locationLevelForLink":"4"},{"index":7,"isLink":true,"fieldName":"Edd not lapsed","customParam":"","customState":"techo.report.view({\"id\":394,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month_year\":\"$from_month_year$\", \"to_month_year\":\"$to_month_year$\",\"demographic_location_id\":\"@hidden_demographic_location_id@\"}})","navigationState":null,"locationLevelForLink":"4"}]},"colspanData":true,"isFilterOpen":true,"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","selectedContainer":"tableContainer"}','del_monitor_lmp','a0eecf79-b783-4fdf-abad-6c6eeedbdd4f'),
(66,'Maternal Service Delivery',NULL,true,'DYNAMIC',90,'2021-01-08 16:36:51.681',1027,'2018-08-30 12:28:08.055',74841,'{"layout":"dynamicReport1","htmlData":true,"containers":{"tableContainer":[{"query":"-----------Maternal Service Delivery Report----------\nwith prefered_language as(\nselect (case \n\t\twhen report_preferred_language = ''EN'' then true  \n\t\telse false \n\tend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\nldp as(\n  select location_id,mtp,abortion,del_reg_still_live_birth,preg_reg,sbirth,lbirth,home_del,sc,phc,chc,sdh,uhc,gia,chiranjivi,pvt,inst_del,home_del_by_sba,home_del_by_non_sba\n  ,phi_del_3_ancs,breast_feeding,maternal_detah,dh,mdh,delivery_108,delivery_out_of_state_govt,delivery_out_of_state_pvt\n  from rch_delivery_date_base_location_wise_data_point,location_hierchy_closer_det\n  where rch_delivery_date_base_location_wise_data_point.location_id = location_hierchy_closer_det.child_id and location_hierchy_closer_det.parent_id = #location_id#\n  and month_year between (case when #from_month_year# is null then ''01/01/1970'' else to_date(''#from_month_year#'',''MM/DD/YYYY'') end) \n  \tand (case when #to_month_year# is null then ''01/01/1970'' else to_date(''#to_month_year#'',''MM/DD/YYYY'') end)\n ), w as (\n    select\n    location_hierchy_closer_det.parent_id as loc_id,\n\tcoalesce(sum(preg_reg),0) as preg_reg,\n    coalesce(sum(del_reg_still_live_birth),0) as del_reg_still_live_birth,\n    coalesce(sum(mtp),0) as mtp,\n    coalesce(sum(abortion),0) as abortion,\n\tcoalesce(sum(maternal_detah),0) as maternal_death,\n    coalesce(sum(sbirth),0) as sbirth,\n    coalesce(sum(lbirth),0) as lbirth,\n    coalesce(sum(home_del),0) as home_del,\n    coalesce(sum(home_del_by_sba),0) as home_del_by_sba,\n    coalesce(sum(home_del_by_non_sba),0) as home_del_by_non_sba,\n    coalesce(sum(sc),0) as sc,\n    coalesce(sum(phc),0) as phc,\n    coalesce(sum(chc),0) as chc,\n    coalesce(sum(sdh),0) as sdh,\n    coalesce(sum(uhc),0) as uhc,\n    coalesce(sum(gia),0) as gia,\n    coalesce(sum(chiranjivi),0) as chiranjivi,\n\tcoalesce(sum(mdh),0) as mdh,\n\tcoalesce(sum(dh),0) as dh,\t\n\tcoalesce(sum(delivery_108),0) as delivery_108,\n    coalesce(sum(pvt),0) as pvt,\n    coalesce(sum(delivery_out_of_state_govt),0) as delivery_out_of_state_govt,\n    coalesce(sum(delivery_out_of_state_pvt),0) as delivery_out_of_state_pvt,\n    coalesce(sum(inst_del),0) as inst_del,\n    coalesce(sum(phi_del_3_ancs),0) as phi_del_3_ancs,\n    coalesce(sum(breast_feeding),0) as breast_feeding\n    from (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth=1)as t \ninner join location_hierchy_closer_det on t.child_id = location_hierchy_closer_det.parent_id \ninner join ldp on ldp.location_id = location_hierchy_closer_det.child_id\ngroup by location_hierchy_closer_det.parent_id \n),s as (\nselect case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name else lm.name end as \"Location Name\",\ncase when ( prefered_language.is_enlish and (parent.english_name is not null)) then parent.english_name else parent.name end as \"Parent Location Name\",\n\tlm.id as hidden_location_id,\n\tcoalesce(preg_reg,0) as \"Preg-nant Women Reg\",\n\tcoalesce(lbirth,0) as \"Live birth\",\n    coalesce(sbirth,0) as \"Still birth\",\n    coalesce(mtp,0) as \"MTP\",\n    coalesce(abortion,0) as \"Abortion\",\n\tcoalesce(maternal_death,0) as \"Maternal Death\",\n\tcoalesce(del_reg_still_live_birth,0) as \"No of del Reg\",\n    coalesce(home_del_by_sba,0) as \"Home Delivery by SBA\",\n    coalesce(home_del_by_non_sba,0) as \"Home Delivery by NON SBA\",\n    coalesce(home_del,0) as \"Total Home delivery\",\n    coalesce(sc,0) as \"SC\",\n    coalesce(phc,0) as \"PHC\",\n    coalesce(chc,0) as \"CHC\",\n    coalesce(sdh,0) as \"SDH\",\n    coalesce(uhc,0) as \"UHC\",\n    coalesce(gia,0) as \"GIA\",\n    coalesce(chiranjivi,0) as \"Chiranjivi hospt\",\n\tcoalesce(mdh,0) as \"MCH\",\n\tcoalesce(dh,0) as \"DH\",\n\tcoalesce(delivery_108,0) as \"GVK 108\",\n\tcoalesce(sc+phc+chc+sdh+uhc+gia+chiranjivi+mdh+dh+delivery_108,0) as \"Total PHI deliveries\",    \n    coalesce(breast_feeding,0) as \"Breast feeding within one hour of birth of phi deliveries\",\n    coalesce(phi_del_3_ancs,0) as \"PHI deliveries with 3 ANCs\",\n    coalesce(pvt,0) as \"Private hospital deliveries\",\n    coalesce(sc+phc+chc+sdh+uhc+gia+chiranjivi+mdh+dh+pvt+delivery_108,0) as \"Total institutional deliveries(Gvt + Pvt)\",\n    coalesce(delivery_out_of_state_govt+delivery_out_of_state_pvt,0) as \"Total Delivery out of State\"    \nfrom (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth=1 limit 500) as t\ninner join location_master lm on lm.id = t.child_id\ninner join location_master parent on parent.id = lm.parent\nleft join w on w.loc_id = lm.id\ncross join prefered_language\norder by \"Location Name\"\n)\nselect row_number() over() as \"Sr no.\", s.* from s\nunion all\nSELECT\n\tNULL,\n    ''<b>Total<b>'',\nNULL,\n    #location_id#,\ncoalesce(sum(\"Preg-nant Women Reg\"),0),\ncoalesce(sum(\"Live birth\"),0),\ncoalesce(sum(\"Still birth\"),0),\ncoalesce(sum(\"MTP\"),0),\ncoalesce(sum(\"Abortion\"),0),\ncoalesce(sum(\"Maternal Death\"),0),\ncoalesce(sum(\"No of del Reg\"),0),\ncoalesce(sum(\"Home Delivery by SBA\"),0),\ncoalesce(sum(\"Home Delivery by NON SBA\"),0),\ncoalesce(sum(\"Total Home delivery\"),0),\ncoalesce(sum(\"SC\"),0),\ncoalesce(sum(\"PHC\"),0),\ncoalesce(sum(\"CHC\"),0),\ncoalesce(sum(\"SDH\"),0),\ncoalesce(sum(\"UHC\"),0),\ncoalesce(sum(\"GIA\"),0),\ncoalesce(sum(\"Chiranjivi hospt\"),0),\ncoalesce(sum(\"MCH\"),0),\ncoalesce(sum(\"DH\"),0),\ncoalesce(sum(\"GVK 108\"),0),\ncoalesce(sum(\"Total PHI deliveries\"),0),\ncoalesce(sum(\"Breast feeding within one hour of birth of phi deliveries\"),0),\ncoalesce(sum(\"PHI deliveries with 3 ANCs\"),0),\ncoalesce(sum(\"Private hospital deliveries\"),0),\ncoalesce(sum(\"Total institutional deliveries(Gvt + Pvt)\"),0),\ncoalesce(sum(\"Total Delivery out of State\"),0)\nfrom s","queryId":78,"htmlData":"#table#\n<br/>\n<b>Note :</b><br/>\n<b>Pregnant Women Reg :</b>Pregnant women registered during given month.<br/>\n<b>Live birth :</b>Live Births during given month.<br/>\n<b>Still birth :</b>Still Births during given month.<br/>\n<b>MTP :</b>Total MTP performed during given month.<br/>\n<b>Abortion :</b>Total abortions during given month.<br/>\n<b>Maternal Death :</b>Total maternal deaths during given month.<br/>\n<b>No of del Reg :</b>Total deliveries registered during given month.<br/>\n<b>Home Delivery by SBA :</b>Total home deliveries performed by SBA during given month.<br/>\n<b>Home Delivery by NON SBA :</b>Total home deliveries performed by Non SBA during given month.<br/>\n<b>Total Home delivery :</b>Total Home deliveries performed during given month.<br/>\n<b>SC :</b>Total deliveries in subcenter during given month.<br/>\n<b>PHC :</b>Total deliveries in PHC during given month.<br/>\n<b>CHC :</b>Total deliveries in CHC during given month.<br/>\n<b>SDH :</b>Total deliveries in SDH during given month.<br/>\n<b>Chiranjivi hospt :</b>Total deliveries in Chiranjivi Hospital during given month.<br/>\n<b>MCH :</b>Total deliveries in MCH during given month.<br/>\n<b>DH :</b>Total deliveries in DH during given month.<br/>\n<b>Total PHI deliveries :</b>Total deliveries in PHI during given month.<br/>\n<b>Breast feeding within one hour of birth of phi deliveries :</b>Total breast feeding done within one hour of birth among PHI deliveries during given month.<br/>\n<b>PHI deliveries with 3 ANCs :</b>Total PHI deliveries with 3 ANCs during given month.<br/>\n<b>Private hospital deliveries :</b>Total private hospital deliveries during given month.<br/>\n<b>Total institutional deliveries(Gvt + Pvt) :</b>Total institutional deliveries during given month.<br/>\n<b>Total Delivery out of State in Gov:</b> Total delivery happened out side of state <br/>","fieldName":"tableField","queryUUID":"f10cb393-15a8-420d-bc7a-9622c3772b2c","dataColspan":"<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th colspan=\"3\" style=\"text-align:center\">Home Delivery</th>\n<th colspan=\"8\" style=\"text-align:center\">PHI Deliveries</th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>","queryParams":"from_month_year,to_month_year,loggedInUserId,location_id"}],"fieldsContainer":[{"index":0,"fieldName":"location_id","fieldType":"location","queryUUID":null,"displayName":"location id","isMandatory":true,"queryUUIDForParam":null,"requiredUptoLevel":1,"fetchAccordingToUserAoi":true},{"index":1,"fieldName":"month_year","fieldType":"onlyMonthFromTo","queryUUID":null,"displayName":"Month","isMandatory":true,"queryUUIDForParam":null}],"tableFieldContainer":[{"index":0,"isLink":true,"fieldName":"Home Delivery by SBA","customParam":"","customState":"techo.report.view({\"id\":310,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month_year\":\"$from_month_year$\", \"to_month_year\":\"$to_month_year$\"}})","navigationState":null,"locationLevelForLink":"1"},{"index":1,"isLink":true,"fieldName":"Home Delivery by NON SBA","customParam":"","customState":"techo.report.view({\"id\":311,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month_year\":\"$from_month_year$\", \"to_month_year\":\"$to_month_year$\"}})","navigationState":null,"locationLevelForLink":"1"},{"index":2,"isLink":true,"fieldName":"Total Home delivery","customParam":"","customState":"techo.report.view({\"id\":312,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month_year\":\"$from_month_year$\", \"to_month_year\":\"$to_month_year$\"}})","navigationState":null,"locationLevelForLink":"1"}]},"isFilterOpen":true,"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","selectedContainer":"tableContainer","isLandscape":false,"numberOfRecordsPerPage":20,"numberOfColumnPerPage":10}','preg_services','171c493a-7799-4dda-bf33-629e8f14fdf8'),
(344,'Maternal Health Services Provided during the year (Monthly)',NULL,true,'DYNAMIC',175,'2021-01-08 16:12:24.029',60512,'2019-04-10 11:41:17.581',74841,'{"layout":"dynamicReport1","htmlData":false,"containers":{"tableContainer":[{"query":"with parameters as (\nselect CAST(#location_id# AS INTEGER) as location_id,\nto_date(case when #from_month# is null then null else ''#from_month#'' end,''MM/DD/YYYY'') as from_month,\nto_date(case when #to_month# is null then null else ''#to_month#'' end,''MM/DD/YYYY'') as to_month,\nCAST(''#demographic_location_id#'' AS TEXT) as demographic_group,\n(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language\n), r as (\n\tselect vlc.parent_id as id\n\t,coalesce(sum(stat.anc_reg),0) as anc_reg\n\t,coalesce(sum(stat.tt1),0) as tt1\n\t,coalesce(sum(stat.tt2_tt_booster),0) as tt2_tt_booster\n\t,coalesce(sum(stat.early_anc),0) as early_anc\n\t,coalesce(sum(stat.anc1),0) as anc1\n\t,coalesce(sum(stat.anc2),0) as anc2\n\t,coalesce(sum(stat.anc3),0) as anc3\n\t,coalesce(sum(stat.anc4),0) as anc4\n\t,coalesce(sum(stat.no_of_delivery),0) as no_of_del\n\t,coalesce(sum(stat.mtp),0) as mtp\n\t,coalesce(sum(stat.abortion),0) as abortion\n\t,coalesce(sum(stat.pnc1),0) as pnc1\n\t,coalesce(sum(stat.pnc2),0) as pnc2\n\t,coalesce(sum(stat.pnc3),0) as pnc3\n\t,coalesce(sum(stat.pnc4),0) as pnc4\n\t,coalesce(sum(stat.mother_death),0) as maternal_detah\n\tfrom parameters p cross join vw_location_closure_det_by_parent_location_depth vlc \n\tleft join rch_service_provided_during_year stat on vlc.child_id = stat.location_id\n\tand stat.month_year between p.from_month and p.to_month\n\twhere vlc.location_id=p.location_id and vlc.depth=1 \n\tand (p.demographic_group=''null'' or vlc.child_demographic_type in \n\t(select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)\n\t) group by vlc.parent_id\n),\ns as (\n\tselect case when ( p.preferred_language and (lm.english_name is not null)) \n\t\tthen lm.english_name \n\t\telse lm.name end as location_name,\n\t\tcase when ( p.preferred_language and (parent.english_name is not null)) \n\t\tthen parent.english_name \n\t\telse parent.name end as parnet_location_name,\n\tr.* from r, parameters p, location_master lm, location_master parent\n\twhere lm.id=r.id and parent.id = lm.parent\n\torder by location_name\n)\nselect  row_number() over() as \"Sr. no\"\n,id as hidden_location_id\n,(select demographic_group from parameters) as hidden_demographic_location_id\n,location_name as  \"Location\"\n,parnet_location_name as \"Parent Location Name\"\n,anc_reg as \"Total Registered\"\n,tt1 as \"TT1 given\"\n,case when anc_reg = 0 then 0 else round(tt1*100.0/anc_reg,2) end as \"percent_col_TT1 given\"\n,tt2_tt_booster as \"TT2+TT Booster\"\n,case when anc_reg = 0 then 0 else round(tt2_tt_booster*100.0/anc_reg,2) end as \"percent_col_TT2+TT Booster\"\n,early_anc  as \"Early ANC\"\n,case when anc_reg = 0 then 0 else round(early_anc*100.0/anc_reg ,2) end as \"percent_col_Early ANC\"\n,anc1  as \"1 ANC\"\n,case when anc_reg = 0 then 0 else round(anc1*100.0/anc_reg ,2) end as \"percent_col_1 ANC\"\n,anc2 as \"2 ANC\"\n,case when anc_reg = 0 then 0 else round(anc2*100.0/anc_reg ,2) end as \"percent_col_2 ANC\" \n,anc3  as \"3 ANC\"\n,case when anc_reg = 0 then 0 else round(anc3*100.0/anc_reg ,2) end as \"percent_col_3 ANC\"\n,anc4  as \"4 ANC\"\n,case when anc_reg = 0 then 0 else round(anc4*100.0/anc_reg ,2) end as \"percent_col_4 ANC\"\n,no_of_del  as \"No of del\"\n,case when anc_reg = 0 then 0 else round(no_of_del*100.0/anc_reg,2) end as \"percent_col_No of del\"\n,mtp  as \"MTP\"\n,case when anc_reg = 0 then 0 else round(mtp*100.0/anc_reg ,2) end as \"percent_col_MTP\"\n,abortion  as \"Abortion\"\n,case when anc_reg = 0 then 0 else round(abortion*100.0/anc_reg ,2) end as \"percent_col_Abortion\"\n,pnc1 as \"1 PNC\"\n,case when anc_reg = 0 then 0 else round(pnc1*100.0/anc_reg ,2) end as \"percent_col_1 PNC\"\n,pnc2  as \"2 PNC\"\n,case when anc_reg = 0 then 0 else round(pnc2*100.0/anc_reg ,2) end as \"percent_col_2 PNC\"\n,pnc3  as \"3 PNC\"\n,case when anc_reg = 0 then 0 else round(pnc3*100.0/anc_reg ,2) end as \"percent_col_3 PNC\"\n,pnc4  as \"4 PNC\"\n,case when anc_reg = 0 then 0 else round(pnc4*100.0/anc_reg ,2) end as \"percent_col_4 PNC\"\n,maternal_detah  as \"Maternal deaths\"\n,case when anc_reg = 0 then 0 else round(maternal_detah*100.0/anc_reg ,2) end as \"percent_col_Maternal deaths\"\nfrom s\nunion all\nselect \nnull\n,(select location_id from parameters) as hidden_location_id\n,(select demographic_group from parameters) as hidden_demographic_location_id\n,''<b>Total</b>''\n,null\n,sum(anc_reg)\n,sum(tt1)\n,case when sum(anc_reg) = 0 then 0 else round(sum(tt1)*100.0/sum(anc_reg),2) end\n,sum(tt2_tt_booster)\n,case when sum(anc_reg) = 0 then 0 else round(sum(tt2_tt_booster)*100.0/sum(anc_reg),2) end\n,sum(early_anc)\n,case when sum(anc_reg) = 0 then 0 else round(sum(early_anc)*100.0/sum(anc_reg),2) end\n,sum(anc1)\n,case when sum(anc_reg) = 0 then 0 else round(sum(anc1)*100.0/sum(anc_reg),2) end\n,sum(anc2)\n,case when sum(anc_reg) = 0 then 0 else round(sum(anc2)*100.0/sum(anc_reg),2) end\n,sum(anc3)\n,case when sum(anc_reg) = 0 then 0 else round(sum(anc3)*100.0/sum(anc_reg),2) end\n,sum(anc4)\n,case when sum(anc_reg) = 0 then 0 else round(sum(anc4)*100.0/sum(anc_reg),2) end\n,sum(no_of_del)\n,case when sum(anc_reg) = 0 then 0 else round(sum(no_of_del)*100.0/sum(anc_reg),2) end\n,sum(mtp)\n,case when sum(anc_reg) = 0 then 0 else round(sum(mtp)*100.0/sum(anc_reg),2) end\n,sum(abortion)\n,case when sum(anc_reg) = 0 then 0 else round(sum(abortion)*100.0/sum(anc_reg),2) end\n,sum(pnc1)\n,case when sum(anc_reg) = 0 then 0 else round(sum(pnc1)*100.0/sum(anc_reg),2) end\n,sum(pnc2)\n,case when sum(anc_reg) = 0 then 0 else round(sum(pnc2)*100.0/sum(anc_reg),2) end\n,sum(pnc3)\n,case when sum(anc_reg) = 0 then 0 else round(sum(pnc3)*100.0/sum(anc_reg),2) end\n,sum(pnc4)\n,case when sum(anc_reg) = 0 then 0 else round(sum(pnc4)*100.0/sum(anc_reg),2) end\n,sum(maternal_detah)\n,case when sum(anc_reg) = 0 then 0 else round(sum(maternal_detah)*100.0/sum(anc_reg),2) end\nfrom s;","queryId":950,"fieldName":"tableField","queryUUID":"7c01b9af-825e-4060-9f88-302a282d8291","queryParams":"to_month,demographic_location_id,loggedInUserId,from_month,location_id"}],"fieldsContainer":[{"index":0,"fieldName":"location_id","fieldType":"location","queryUUID":null,"displayName":"Location","isMandatory":true,"queryUUIDForParam":null,"requiredUptoLevel":1,"demographicFilterRequired":true},{"fieldName":"month","fieldType":"onlyMonthFromTo","queryUUID":null,"displayName":"Month","isMandatory":true,"queryUUIDForParam":null,"requiredUptoLevel":1}],"tableFieldContainer":[{"index":0,"isLink":true,"fieldName":"TT1 given","customParam":"","customState":"techo.report.view({\"id\":377,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\",\"demographic_location_id\":\"@hidden_demographic_location_id@\"}})","navigationState":null,"locationLevelForLink":"4"},{"index":1,"isLink":true,"fieldName":"TT2+TT Booster","customParam":"","customState":"techo.report.view({\"id\":378,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\",\"demographic_location_id\":\"@hidden_demographic_location_id@\"}})","navigationState":null,"locationLevelForLink":"4"},{"index":2,"isLink":true,"fieldName":"Early ANC","customParam":"","customState":"techo.report.view({\"id\":379,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\",\"demographic_location_id\":\"@hidden_demographic_location_id@\"}})","navigationState":null,"locationLevelForLink":"4"},{"index":3,"isLink":true,"fieldName":"1 ANC","customParam":"","customState":"techo.report.view({\"id\":380,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\",\"demographic_location_id\":\"@hidden_demographic_location_id@\"}})","navigationState":null,"locationLevelForLink":"4"},{"index":4,"isLink":true,"fieldName":"2 ANC","customParam":"","customState":"techo.report.view({\"id\":381,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\",\"demographic_location_id\":\"@hidden_demographic_location_id@\"}})","navigationState":null,"locationLevelForLink":"4"},{"index":5,"isLink":true,"fieldName":"3 ANC","customParam":"","customState":"techo.report.view({\"id\":382,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\",\"demographic_location_id\":\"@hidden_demographic_location_id@\"}})","navigationState":null,"locationLevelForLink":"4"},{"index":6,"isLink":true,"fieldName":"4 ANC","customParam":"","customState":"techo.report.view({\"id\":383,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\",\"demographic_location_id\":\"@hidden_demographic_location_id@\"}})","navigationState":null,"locationLevelForLink":"4"},{"index":7,"isLink":true,"fieldName":"No of del","customParam":"","customState":"techo.report.view({\"id\":384,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\",\"demographic_location_id\":\"@hidden_demographic_location_id@\"}})","navigationState":null,"locationLevelForLink":"4"},{"index":8,"isLink":true,"fieldName":"MTP","customParam":"","customState":"techo.report.view({\"id\":385,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\",\"demographic_location_id\":\"@hidden_demographic_location_id@\"}})","navigationState":null,"locationLevelForLink":"4"},{"index":9,"isLink":true,"fieldName":"Abortion","customParam":"","customState":"techo.report.view({\"id\":386,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\",\"demographic_location_id\":\"@hidden_demographic_location_id@\"}})","navigationState":null,"locationLevelForLink":"4"},{"index":10,"isLink":true,"fieldName":"1 PNC","customParam":"","customState":"techo.report.view({\"id\":387,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\",\"demographic_location_id\":\"@hidden_demographic_location_id@\"}})","navigationState":null,"locationLevelForLink":"4"},{"index":11,"isLink":true,"fieldName":"2 PNC","customParam":"","customState":"techo.report.view({\"id\":388,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\",\"demographic_location_id\":\"@hidden_demographic_location_id@\"}})","navigationState":null,"locationLevelForLink":"4"},{"index":12,"isLink":true,"fieldName":"3 PNC","customParam":"","customState":"techo.report.view({\"id\":389,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\",\"demographic_location_id\":\"@hidden_demographic_location_id@\"}})","navigationState":null,"locationLevelForLink":"4"},{"index":13,"isLink":true,"fieldName":"4 PNC","customParam":"","customState":"techo.report.view({\"id\":390,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\",\"demographic_location_id\":\"@hidden_demographic_location_id@\"}})","navigationState":null,"locationLevelForLink":"4"},{"index":14,"isLink":true,"fieldName":"Maternal deaths","customParam":"","customState":"techo.report.view({\"id\":391,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month\":\"$from_month$\", \"to_month\":\"$to_month$\",\"demographic_location_id\":\"@hidden_demographic_location_id@\"}})","navigationState":null,"locationLevelForLink":"4"}]},"isFilterOpen":true,"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","selectedContainer":"tableContainer","isBackButtonRequired":false,"isLandscape":false,"numberOfRecordsPerPage":20,"numberOfColumnPerPage":10}','mat_health_ser_month','b4c2d5f1-96f4-46ef-8afa-0515b63bb10f'),
(58,'Report of Antenatal Corticosteroid (ANC)',NULL,true,'DYNAMIC',82,'2020-10-14 10:59:57.894',1027,'2018-08-30 11:42:43.084',74841,'{"layout":"dynamicReport1","htmlData":true,"containers":{"tableContainer":[{"query":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\nldp as(\n  select location_id,del_reg_still_live_birth,del_less_eq_34,del_bet_35_37,del_greater_37,cortico_steroid\n  from rch_delivery_date_base_location_wise_data_point,location_hierchy_closer_det\n  where rch_delivery_date_base_location_wise_data_point.location_id = location_hierchy_closer_det.child_id \n  and location_hierchy_closer_det.parent_id = #location_id#\n  and month_year between \n  \t(case when #from_month_year# is null then ''01/01/1970'' else to_date(''#from_month_year#'',''MM/DD/YYYY'') end) \n  and \n  \t(case when #to_month_year# is null then ''01/01/1970'' else to_date(''#to_month_year#'',''MM/DD/YYYY'') end)\n ), w as (\n    select\n    location_hierchy_closer_det.parent_id as loc_id,\n    coalesce(sum(del_reg_still_live_birth),0) as preg_reg,\n    coalesce(sum(del_less_eq_34),0) as del_less_eq_34,\n    coalesce(sum(del_bet_35_37),0) as del_bet_35_37,\n    coalesce(sum(del_greater_37),0) as del_greater_37,\n    coalesce(sum(cortico_steroid),0) as cortico_steroid\n    from (select child_id from location_hierchy_closer_det \n    where parent_id = #location_id# and depth=1)as t \ninner join location_hierchy_closer_det on t.child_id = location_hierchy_closer_det.parent_id \ninner join ldp on ldp.location_id = location_hierchy_closer_det.child_id\ngroup by location_hierchy_closer_det.parent_id \n),s as (\n\tselect case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name else lm.name end as \"Location Name\",\n\tlm.id AS hidden_location_id,\n    coalesce(preg_reg,0) as \"Total Delivery regd during the year\",\n    coalesce(del_less_eq_34,0) as \"Delivery before 34 weeks\", \n\tround(case when preg_reg = 0 then 0 else del_less_eq_34*100.0/preg_reg end,2) as \"percent_col_Delivery before 34 weeks\",\n    coalesce(del_bet_35_37,0) as \"Delivery between 34-37 weeks\", \n\tround(case when preg_reg = 0 then 0 else del_bet_35_37*100.0/preg_reg end,2) as \"percent_col_Delivery between 34-37 weeks\",\n    coalesce(del_greater_37,0) as \"Delivery after 37 weeks\", \n    round(case when preg_reg = 0 then 0 else del_greater_37*100.0/preg_reg end,2) as \"percent_col_Delivery after 37 weeks\",\n    coalesce(cortico_steroid,0) as \"No of antenatal corticosteroid given to delivery before 34 weeks\",\n\tround(case when del_less_eq_34 = 0 then 0 else cortico_steroid*100.0/del_less_eq_34 end,2) as \"percent_col_No of antenatal corticosteroid given to delivery before 34 weeks\"\n\tfrom (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth=1 limit 100) as t\n\tinner join location_master lm on lm.id = t.child_id\n\tleft join w on w.loc_id = lm.id\n        cross join prefered_language\n\torder by lm.name\n)\nselect row_number() over() as \"Sr no.\", s.* FROM s\nunion all\nSELECT\n\tNULL,\n    ''<b>Total<b>'',\n    #location_id#,\n    coalesce(sum(preg_reg),0),\n    coalesce(sum(del_less_eq_34),0),\n\tround(case when sum(preg_reg) = 0 then 0 \n\t\telse sum(del_less_eq_34)*100.0/sum(preg_reg) end,2),\n    coalesce(sum(del_bet_35_37),0),\n\tround(case when sum(preg_reg) = 0 then 0 \n\t\telse sum(del_bet_35_37)*100.0/sum(preg_reg) end,2),\n    coalesce(sum(del_greater_37),0),\n\tround(case when sum(preg_reg) = 0 then 0 \n\t\telse sum(del_greater_37)*100.0/sum(preg_reg) end,2),\n    coalesce(sum(cortico_steroid),0),\n\tround(case when sum(del_less_eq_34) = 0 then 0 \n\t\telse sum(cortico_steroid)*100.0/sum(del_less_eq_34) end,2)\nfrom w","queryId":70,"htmlData":"#table#\n<br/>\n<b>Note :</b><br/>\n<b>Total Delivery regd during the year :</b>Total deliveries done during the given year.<br/>\n<b>Delivery before <= 34 weeks :</b>Total deliveries done within 34 weeks during given year.<br/>\n<b>Delivery between 34-37 weeks :</b>Total deliveries done between 34-37 weeks during given year.<br/>\n<b>Delivery after 37 weeks :</b>Total deliveries done after 37 weeks during given year.<br/>\n<b>No of antenatal corticosteroid given to delivery before <= 34 weeks :</b>Total corticosteroid given before 34 weeks.","fieldName":"tableField","queryUUID":"b09487a4-efb4-4cfd-88d0-28cb2d35ad7d","queryParams":"from_month_year,to_month_year,loggedInUserId,location_id"}],"fieldsContainer":[{"index":0,"fieldName":"location_id","fieldType":"location","queryUUID":null,"displayName":"location id","isMandatory":true,"queryUUIDForParam":null,"requiredUptoLevel":"1","fetchAccordingToUserAoi":true},{"index":1,"fieldName":"month_year","fieldType":"onlyMonthFromTo","queryUUID":null,"displayName":"Month","isMandatory":true,"queryUUIDForParam":null}],"tableFieldContainer":[{"index":0,"isLink":true,"fieldName":"Delivery before 34 weeks","customParam":"","customState":"techo.report.view({\"id\":315,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month_year\":\"$from_month_year$\", \"to_month_year\":\"$to_month_year$\"}})","navigationState":null,"locationLevelForLink":"4"}]},"isFilterOpen":true,"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","selectedContainer":"tableContainer"}','antinatal_corti_anc','c3485e70-9a99-4887-b976-89b72177c9ca'),
(56,'High Risk Mother-Previous Pregnancy and Pre Existing Chronic Illness',NULL,true,'DYNAMIC',80,'2021-01-07 16:47:23.586',1027,'2018-08-30 11:37:26.131',74841,'{"layout":"dynamicReport1","htmlData":true,"containers":{"tableContainer":[{"query":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\n ldp as(\n  select location_id,high_risk,prev_anemia,prev_caesarian,prev_aph_pph,pre_preg_pre_eclampsia,multipara,prev_abortion,chro_tb,chro_diabetes,chro_heart_kidney\n  ,chro_hiv,chro_sickle,chro_thalessemia\n  from rch_current_state_pregnancy_analytics_data,location_hierchy_closer_det\n  where rch_current_state_pregnancy_analytics_data.location_id = location_hierchy_closer_det.child_id and location_hierchy_closer_det.parent_id = #location_id#\n ), w as (\n    select\nlocation_hierchy_closer_det.parent_id as loc_id,\n    coalesce(sum(high_risk),0) as high_risk_mother,\n    coalesce(sum(prev_anemia),0) as prev_anemia,\n    coalesce(sum(prev_caesarian),0) as prev_caesarian,\n    coalesce(sum(prev_aph_pph),0) as prev_aph_pph,\n    coalesce(sum(pre_preg_pre_eclampsia),0) as pre_preg_pre_eclampsia,\n    coalesce(sum(prev_abortion),0) as abortion,\n    coalesce(sum(multipara),0) as multipara,\n    coalesce(sum(chro_tb),0) as tb,\n    coalesce(sum(chro_diabetes),0) as diabetes,\n    coalesce(sum(chro_heart_kidney),0) as heart_kidney,\n    coalesce(sum(chro_hiv),0) as hiv,\n    coalesce(sum(chro_sickle),0) as sickle,\n    coalesce(sum(chro_thalessemia),0) as thalessemia\n    from (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth=1)as t \ninner join location_hierchy_closer_det on t.child_id = location_hierchy_closer_det.parent_id \ninner join ldp on ldp.location_id = location_hierchy_closer_det.child_id\ngroup by location_hierchy_closer_det.parent_id \n),s as (\nselect case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name\nelse lm.name end as \"Location Name\",\n    coalesce(high_risk_mother,0) as \"Total No of high risk mothers\",\n    coalesce(prev_anemia,0) as \"Anemia\",\n\tround(coalesce(case when high_risk_mother = 0 then 0 else prev_anemia*100.0/high_risk_mother end,0),2)  as \"percent_col_Anemia\",\n    coalesce(prev_caesarian,0) as \"Caessarian Section\",\n\tround(coalesce(case when high_risk_mother = 0 then 0 else prev_caesarian*100.0/high_risk_mother end,0),2) as \"percent_col_Caessarian Section\",\n    coalesce(prev_aph_pph,0)  as \"Ante Partum Haemorrhage/Post partum Haemorrhage\",\n\tround(coalesce(case when high_risk_mother = 0 then 0 else prev_aph_pph*100.0/high_risk_mother end,0),2) as \"percent_col_Ante Partum Haemorrhage/Post partum Haemorrhage\",\n    coalesce(pre_preg_pre_eclampsia,0) as \"Pre-Eclampsia/Eclampsia\",\n\tround(coalesce(case when high_risk_mother = 0 then 0 else pre_preg_pre_eclampsia*100.0/high_risk_mother end,0),2) as \"percent_col_Pre-Eclampsia/Eclampsia\",\n    coalesce(abortion,0) as \"Abortion\",\n\tround(coalesce(case when high_risk_mother = 0 then 0 else abortion*100.0/high_risk_mother end,0),2) as \"percent_col_Abortion\",\n    coalesce(multipara,0) as \"Ectopic Preg. /Multiple Pregnancy\",\n\tround(coalesce(case when high_risk_mother = 0 then 0 else multipara*100.0/high_risk_mother end,0),2) as \"percent_col_Ectopic Preg. /Multiple Pregnancy\",\n    coalesce(tb,0) as \"Tuberculosis\",\n\tround(coalesce(case when high_risk_mother = 0 then 0 else tb*100.0/high_risk_mother end,0),2) as \"percent_col_Tuberculosis\",\n    coalesce(diabetes,0) as \"Diabetes mellitus\",\n\tround(coalesce(case when high_risk_mother = 0 then 0 else diabetes*100.0/high_risk_mother end,0),2) as \"percent_col_Diabetes mellitus\",\n    coalesce(heart_kidney,0) as \"Heart / kidney disease\",\n\tround(coalesce(case when high_risk_mother = 0 then 0 else heart_kidney*100.0/high_risk_mother end,0),2) as \"percent_col_Heart / kidney disease\",\n    coalesce(hiv,0) as \"HIV\",\n\tround(coalesce(case when high_risk_mother = 0 then 0 else hiv*100.0/high_risk_mother end,0),2) as \"percent_col_HIV\",\n    coalesce(sickle,0) as \"Sickle cell Anaemia\",\n\tround(coalesce(case when high_risk_mother = 0 then 0 else sickle*100.0/high_risk_mother end,0),2) as \"percent_col_Sickle cell Anaemia\",\n    coalesce(thalessemia,0) as \"Thalassaemia\",\n\tround(coalesce(case when high_risk_mother = 0 then 0 else thalessemia*100.0/high_risk_mother end,0),2) as \"percent_col_Thalassaemia\"\nfrom (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth=1 limit 100) as t\ninner join location_master lm on lm.id = t.child_id\nleft join w on w.loc_id = lm.id\ncross join prefered_language\norder by lm.name\n)\nselect row_number() over() as \"Sr no.\",r.* from\n(select * from s\nunion all\nselect\n    ''<b>Total<b>'',\n    coalesce(sum(high_risk_mother),0),\n\tcoalesce(sum(prev_anemia),0), \n\tround(case when sum(high_risk_mother) = 0 then 0 else sum(prev_anemia)*100.0/sum(high_risk_mother) end,2),\n    coalesce(sum(prev_caesarian),0), \n\tround(case when sum(high_risk_mother) = 0 then 0 else sum(prev_caesarian)*100.0/sum(high_risk_mother) end,2),\n\tcoalesce(sum(prev_aph_pph),0), \n\tround(case when sum(high_risk_mother) = 0 then 0 else sum(prev_aph_pph)*100.0/sum(high_risk_mother) end,2),\n\tcoalesce(sum(pre_preg_pre_eclampsia),0), \n\tround(case when sum(high_risk_mother) = 0 then 0 else sum(pre_preg_pre_eclampsia)*100.0/sum(high_risk_mother) end,2),\n\tcoalesce(sum(abortion),0), \n\tround(case when sum(high_risk_mother) = 0 then 0 else sum(abortion)*100.0/sum(high_risk_mother) end,2),\n\tcoalesce(sum(multipara),0),\n\tround(case when sum(high_risk_mother) = 0 then 0 else sum(multipara)*100.0/sum(high_risk_mother) end,2),\n\tcoalesce(sum(tb),0),\n\tround(case when sum(high_risk_mother) = 0 then 0 else sum(tb)*100.0/sum(high_risk_mother) end,2),\n\tcoalesce(sum(diabetes),0),\n\tround(case when sum(high_risk_mother) = 0 then 0 else sum(diabetes)*100.0/sum(high_risk_mother) end,2),\n\tcoalesce(sum(heart_kidney),0),\n\tround(case when sum(high_risk_mother) = 0 then 0 else sum(heart_kidney)*100.0/sum(high_risk_mother) end,2),\n\tcoalesce(sum(hiv),0),\n\tround(case when sum(high_risk_mother) = 0 then 0 else sum(hiv)*100.0/sum(high_risk_mother) end,2),\n\tcoalesce(sum(sickle),0), \n\tround(case when sum(high_risk_mother) = 0 then 0 else sum(sickle)*100.0/sum(high_risk_mother) end,2),\n\tcoalesce(sum(thalessemia),0),\n\tround(case when sum(high_risk_mother) = 0 then 0 else sum(thalessemia)*100.0/sum(high_risk_mother) end,2)\t\nfrom w) r","queryId":68,"htmlData":"#table#\n<br/>\n<b>Note :</b><br/>\n<b>Total No of high risk mothers :</b>Total women identified as high risk.<br/>\n<b>Anemia :</b>Total women identified with Anemia.<br/>\n<b>Caessarian Section :</b>Total women who have done caessarian.<br/>\n<b>Ante Partum Haemorrhage/Post partum Haemorrhage :</b>Total women identified with Haemorrhage.<br/>\n<b>Pre-Eclampsia/Eclampsia :</b>Total women identified with Pre-Eclampsia.<br/>\n<b>Abortion :</b>Total women who have done abortion.<br/>\n<b>Ectopic Preg. /Multiple Pregnancy :</b>Total women who have multiple pregnancy.<br/>\n<b>Tuberculosis :</b>Total women identified with Tuberculosis.<br/>\n<b>Diabetes mellitus :</b>Total women identified with Diabetes mellitus.<br/>\n<b>Heart / kidney disease :</b>Total women identified with heart or kidney disease.<br/>\n<b>HIV :</b>Total women identified with HIV.<br/>\n<b>Sickle cell Anaemia :</b>Total women identified with Sickle cell Anaemia.<br/>\n<b>Thalassaemia :</b>Total women identified with Thalassaemia.","fieldName":"tableField","queryUUID":"66a7a982-2b56-464d-974e-17891d962453","dataColspan":"<th></th>\n<th></th>\n<th></th>\n<th colspan=\"12\" style=\"text-align:center\">Previous Pregnancy Complication</th>\n<th colspan=\"12\" style=\"text-align:center\">Pre existing Chronic illnesses</th>","queryParams":"loggedInUserId,location_id"}],"fieldsContainer":[{"index":0,"fieldName":"location_id","fieldType":"location","queryUUID":null,"displayName":"location id","isMandatory":true,"queryUUIDForParam":null,"requiredUptoLevel":"1","fetchAccordingToUserAoi":true}]},"colspanData":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","selectedContainer":"tableContainer"}','h_risk_prev_illness','b7ea97af-d32c-4359-b163-c7c540c31c1f'),
(57,'LMP Based Pregnant Women Reg. for ANC Services',NULL,true,'DYNAMIC',81,'2021-01-08 17:01:36.496',1027,'2018-08-30 11:40:25.421',74841,'{"layout":"dynamicReport1","htmlData":true,"containers":{"tableContainer":[{"query":"with prefered_language as(\nselect (case \nwhen report_preferred_language = ''EN'' then true  \nelse false \nend) as is_enlish \nfrom um_user where id = #loggedInUserId#),\nldp as(\n  select location_id,anc_reg,early_anc,tt2_tt_booster,anc1,anc2,anc3,anc4,ifa,full_anc\n  from rch_lmp_base_location_wise_data_point,location_hierchy_closer_det\n  where rch_lmp_base_location_wise_data_point.location_id = location_hierchy_closer_det.child_id \n  and location_hierchy_closer_det.parent_id = #location_id#\n  and month_year between \n  \t(case when #from_month_year# is null then ''01/01/1970'' else to_date(''#from_month_year#'',''MM/DD/YYYY'') end) \n  and \n  \t(case when #to_month_year# is null then ''01/01/1970'' else to_date(''#to_month_year#'',''MM/DD/YYYY'') end)\n ), w as (\n    select\n\tlocation_hierchy_closer_det.parent_id as loc_id,\n    coalesce(sum(anc_reg),0) as anc_reg,\n    coalesce(sum(early_anc),0) as early_anc,\n    coalesce(sum(tt2_tt_booster),0) as tt2_boster,\n    coalesce(sum(anc1),0) as anc1,\n    coalesce(sum(anc2),0) as anc2,\n    coalesce(sum(anc3),0) as anc3,\n    coalesce(sum(anc4),0) as anc4,\n    coalesce(sum(ifa),0) as ifa_180,\n    coalesce(sum(full_anc),0) as full_anc\nfrom (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth=1)as t \ninner join location_hierchy_closer_det on t.child_id = location_hierchy_closer_det.parent_id \ninner join ldp on ldp.location_id = location_hierchy_closer_det.child_id\ngroup by location_hierchy_closer_det.parent_id \n),s as (\nselect \ncase when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name\nelse lm.name end as \"Location Name\",\ncase when ( prefered_language.is_enlish and (parent.english_name is not null)) then parent.english_name\nelse parent.name end as \"Parent Location Name\",\n\tlm.id AS hidden_location_id,\n    coalesce(anc_reg,0) as \"Total ANC registered\",\n    coalesce(early_anc,0) as \"Early ANC\",\n    round(coalesce(case when anc_reg = 0 then 0 else early_anc*100/anc_reg end,0),2) as \"Percentage of Early ANC\",\n    coalesce(tt2_boster,0) as \"TT2+TT Booster\",\n    round(coalesce(case when anc_reg = 0 then 0 else tt2_boster*100/anc_reg end,0),2) as \"Percentage of TT2+TT Booster\",\n    coalesce(anc1,0) as \"ANC 1\",\n    round(coalesce(case when anc_reg = 0 then 0 else anc1*100/anc_reg end,0),2) as \"Percentage of ANC 1\",\n    coalesce(anc2,0) as \"ANC 2\",\n    round(coalesce(case when anc_reg = 0 then 0 else anc2*100/anc_reg end,0),2) as \"Percentage of ANC 2\",\n    coalesce(anc3,0) as \"ANC 3\",\n    round(coalesce(case when anc_reg = 0 then 0 else anc3*100/anc_reg end,0),2) as \"Percentage of ANC 3\",\n    coalesce(anc4,0) as \"ANC 4\",\n    round(coalesce(case when anc_reg = 0 then 0 else anc4*100/anc_reg end,0),2) as \"Percentage of ANC 4\",\n    coalesce(ifa_180,0) as \"180 IFA\",\n    round(coalesce(ifa_180*100/anc_reg,0),2) as \"Percentage of 180 IFA\",\n    coalesce(full_anc,0) as \"Full ANC\",\n    round(coalesce(full_anc*100/anc_reg,0),2) as \"Percentage of Full ANC\"\nfrom (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth=1 limit 500) as t\ninner join location_master lm on lm.id = t.child_id\ninner join location_master parent on lm.parent = parent.id\nleft join w on w.loc_id = lm.id\ncross join prefered_language\norder by (case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name\nelse lm.name end)\n)\nselect row_number() over() as \"Sr. no\", s.* FROM s\nunion all\nSELECT\n\tNULL,\n    ''<b>Total<b>'',\n    null,\n    #location_id#,\n    coalesce(sum(\"Total ANC registered\"),0),\n    coalesce(sum(\"Early ANC\"),0),\n    round(coalesce(case when sum(\"Total ANC registered\") = 0 then 0 else sum(\"Early ANC\")*100/sum(\"Total ANC registered\") end,0),2), \n    coalesce(sum(\"TT2+TT Booster\"),0),\n    round(coalesce(case when sum(\"Total ANC registered\") = 0 then 0 else sum(\"TT2+TT Booster\")*100/sum(\"Total ANC registered\") end,0),2), \n    coalesce(sum(\"ANC 1\"),0),\n    round(coalesce(case when sum(\"Total ANC registered\") = 0 then 0 else sum(\"ANC 1\")*100/sum(\"Total ANC registered\") end,0),2), \n    coalesce(sum(\"ANC 2\"),0),\n    round(coalesce(case when sum(\"Total ANC registered\") = 0 then 0 else sum(\"ANC 2\")*100/sum(\"Total ANC registered\") end,0),2), \n    coalesce(sum(\"ANC 3\"),0),\n    round(coalesce(case when sum(\"Total ANC registered\") = 0 then 0 else sum(\"ANC 3\")*100/sum(\"Total ANC registered\") end,0),2), \n    coalesce(sum(\"ANC 4\"),0),\n    round(coalesce(case when sum(\"Total ANC registered\") = 0 then 0 else sum(\"ANC 4\")*100/sum(\"Total ANC registered\") end,0),2), \n    coalesce(sum(\"180 IFA\"),0),\n    round(coalesce(case when sum(\"Total ANC registered\") = 0 then 0 else sum(\"180 IFA\")*100/sum(\"Total ANC registered\") end,0),2), \n    coalesce(sum(\"Full ANC\"),0),\n    round(coalesce(case when sum(\"Total ANC registered\") = 0 then 0 else sum(\"Full ANC\")*100/sum(\"Total ANC registered\") end,0),2)\nfrom s","queryId":69,"htmlData":"#table#\n<br/>\n<b>Note :</b><br/>\n<b>Total ANC registered :</b>Total pregnant women registered.<br/>\n<b>Early ANC :</b>Total women registered with Early ANC(Done Between LMP Date to 84 days).<br/>\n<b>TT2+TT Booster :</b>Total women who are given TT2 and TT booster.<br/>\n<b>ANC 1 :</b>Total women with Minimum 1 ANC visit.<br/>\n<b>ANC 2 :</b>Total women with Minimum 2 ANC visit.<br/>\n<b>ANC 3 :</b>Total women with Minimum 3 ANC visit..<br/>\n<b>ANC 4 :</b>Total women with Minimum 4 ANC visit.<br/>\n<b>180 IFA :</b>Total women given 180 IFA tablets.<br/>\n<b>Full ANC :</b>Total women with all ANC visits completed and 180+ IFA tablets given and (tt2 or tt_booster given) .","fieldName":"tableField","queryUUID":"f0c5cb40-4da7-451d-a8f7-59bc512ab18e","queryParams":"from_month_year,to_month_year,loggedInUserId,location_id"}],"fieldsContainer":[{"index":0,"fieldName":"location_id","fieldType":"location","queryUUID":null,"displayName":"location id","queryUUIDForParam":null,"requiredUptoLevel":"1","fetchAccordingToUserAoi":true},{"index":1,"fieldName":"month_year","fieldType":"onlyMonthFromTo","queryUUID":null,"displayName":"Month","isMandatory":true,"queryUUIDForParam":null}],"tableFieldContainer":[{"isLink":true,"fieldName":"Total ANC registered","customParam":"","customState":"techo.report.view({\"id\":274,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month_year\":\"$from_month_year$\", \"to_month_year\":\"$to_month_year$\"}})","navigationState":null,"locationLevelForLink":"4"},{"isLink":true,"fieldName":"Early ANC","customParam":"","customState":"techo.report.view({\"id\":275,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month_year\":\"$from_month_year$\", \"to_month_year\":\"$to_month_year$\"}})","navigationState":null,"locationLevelForLink":"4"},{"isLink":true,"fieldName":"TT2+TT Booster","customParam":"","customState":"techo.report.view({\"id\":276,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month_year\":\"$from_month_year$\", \"to_month_year\":\"$to_month_year$\"}})","navigationState":null,"locationLevelForLink":"4"},{"isLink":true,"fieldName":"ANC 1","customParam":"","customState":"techo.report.view({\"id\":277,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month_year\":\"$from_month_year$\", \"to_month_year\":\"$to_month_year$\"}})","navigationState":null,"locationLevelForLink":"4"},{"isLink":true,"fieldName":"ANC 2","customParam":"","customState":"techo.report.view({\"id\":278,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month_year\":\"$from_month_year$\", \"to_month_year\":\"$to_month_year$\"}})","navigationState":null,"locationLevelForLink":"4"},{"isLink":true,"fieldName":"ANC 3","customParam":"","customState":"techo.report.view({\"id\":279,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month_year\":\"$from_month_year$\", \"to_month_year\":\"$to_month_year$\"}})","navigationState":null,"locationLevelForLink":"4"},{"index":6,"isLink":true,"fieldName":"ANC 4","customParam":"","customState":"techo.report.view({\"id\":280,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month_year\":\"$from_month_year$\", \"to_month_year\":\"$to_month_year$\"}})","navigationState":null,"locationLevelForLink":"4"},{"index":7,"isLink":true,"fieldName":"180 IFA","customParam":"","customState":"techo.report.view({\"id\":281,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month_year\":\"$from_month_year$\", \"to_month_year\":\"$to_month_year$\"}})","navigationState":null,"locationLevelForLink":"4"},{"index":8,"isLink":true,"fieldName":"Full ANC","customParam":"","customState":"techo.report.view({\"id\":282,\"queryParams\":{\"location_id\":@hidden_location_id@, \"from_month_year\":\"$from_month_year$\", \"to_month_year\":\"$to_month_year$\"}})","navigationState":null,"locationLevelForLink":"4"}]},"showDateAsOn":true,"templateType":"DYNAMIC_REPORTS","isExcelOption":true,"isPrintOption":true,"locationLevel":"","selectedContainer":"tableContainer","isLandscape":false,"numberOfRecordsPerPage":20,"numberOfColumnPerPage":10}','lmp_pregnant_service','56c96cad-20a4-4bbc-95d1-467ce7823239');

