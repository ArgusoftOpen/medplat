TRUNCATE public.query_master CASCADE;

INSERT INTO public.query_master (created_by,created_on,modified_by,modified_on,code,params,query,returns_result_set,state,description,is_public,uuid) VALUES
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','retrieve_icd_10_single_expresion','opdId','select scm.code,scm.description from rch_opd_member_master romm inner join rch_opd_lab_test_provisional_rel rolt on rolt.opd_member_master_id = romm.id 
inner join listvalue_field_value_detail listvalue on  rolt.provisional_id = listvalue.id inner join system_code_master scm on listvalue.id = scm.table_id where scm.table_type = ''LIST_VALUE'' and scm.code_type = ''ICD_10'' and romm.id = #opdId# ',true,'ACTIVE','Fire postgres query to get icd 10 expressions for given opdId',true,'c9b7b206-230d-494f-881a-468a392f56a7'),
	 (-1,'2020-06-03 00:00:00',-1,'2020-06-03 00:00:00','fetch_soh_element_timeline_intervals',NULL,'select
	label as "displayValue",
	timeline_type as "value",
	is_default as "checked",
       from_date,
       to_date
from
	soh_element_timeline_intervals
where
	is_active = true;',true,'ACTIVE',NULL,true,'75edc26c-8a1d-4117-924a-d26072c2d1fc'),
	 (74841,'2020-12-03 00:00:00',74841,'2020-12-03 00:00:00','get_course_module_name',NULL,'select id, 
cast(null as text) as "fieldId", 
value as "fieldValue" from listvalue_field_value_detail lfvd where lfvd.field_key = ''COURSE_MODULE_NAME''
order by value;',true,'ACTIVE',NULL,true,'fe99ce90-a33b-4094-85b0-3c021caafb50'),
	 (74841,'2020-02-06 11:50:37.421',74841,'2020-05-26 12:30:28.939','state_of_health_data_qa_wrong_mobile_no','fromDate,toDate,location_id','with dates as(
select
to_date(case when ''#fromDate#'' = ''null'' then null else ''#fromDate#'' end, ''YYYY-MM-DD'') as from_date ,
to_date(case when ''#toDate#'' = ''null'' then null else ''#toDate#'' end, ''YYYY-MM-DD'') + interval ''1 day'' - interval ''1 millisecond'' as to_date 
),
gvk_details as (
select 
analytics.member_id,
to_char(analytics.verified_on,''DD-MM-YYYY'') as "verifiedOn",
case when analytics.fields ->> ''call_response'' = ''com.argusoft.imtecho.gvk.call.wrong-mobile-number'' then ''Wrong Mobile Number''
when analytics.fields ->> ''call_response'' = ''com.argusoft.imtecho.gvk.call.number-belongs-to-ashah-or-asha-husband'' then ''Number Belongs To Ashah Or Asha Husband''
when analytics.fields ->> ''call_response'' = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-or-anm-husband'' then ''Number Belongs To Anm Or Anm Husband''
when analytics.fields ->> ''call_response'' = ''com.argusoft.imtecho.gvk.call.number-belongs-to-asha-husband'' then ''Number Belongs To Asha Husband''
when analytics.fields ->> ''call_response'' = ''com.argusoft.imtecho.gvk.call.number-belongs-to-asha-husband'' then ''Number Belongs To Asha Husband''
when analytics.fields ->> ''call_response'' = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-husband'' then ''Number Belongs To Anm Husband''
end as "Reason"
from rch_data_quality_analytics analytics
inner join dates on analytics.verified_on between dates.from_date and dates.to_date
where 
analytics.location_id = #location_id#
and verification_type = ''BENEFICIARY_WRONG_MOBILE_NUMBER''
and analytics.failed_count>=1
),
family_head_single as (
select m2.id as head_id,imt_member.id as member_id
from gvk_details
inner join imt_member on gvk_details.member_id = imt_member.id
inner join imt_family on imt_member.family_id = imt_family.family_id
inner join imt_member m2 on imt_family.family_id = m2.family_id and 
m2.id = imt_family.hof_id
group by imt_member.id, m2.id
),
family_head as (
	select distinct
	head.member_id as member_id,
	concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as family_head_name,
	
	m2.mobile_number as family_head_number
	from family_head_single head inner join imt_member m2 on m2.id = head.head_id

),
contact_person as (
select distinct gvk_details.member_id,
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as contact_person_name,
m2.mobile_number as contact_person_number
from gvk_details
inner join imt_member on gvk_details.member_id = imt_member.id
inner join imt_family on imt_member.family_id = imt_family.family_id
inner join imt_member m2 on imt_family.family_id = m2.family_id and imt_family.contact_person_id = m2.id
),member_location_area_ids as (
select gvk_details.member_id,imt_family.location_id,imt_family.area_id
from gvk_details
inner join imt_member on imt_member.id = gvk_details.member_id
inner join imt_family on imt_family.family_id = imt_member.family_id
),asha as (
select member_location_area_ids.member_id,asha.id
from member_location_area_ids
inner join um_user_location asha_location on member_location_area_ids.area_id = asha_location.loc_id and asha_location.state = ''ACTIVE''
inner join um_user asha on asha_location.user_id = asha.id and asha.role_id = 24 and asha.state = ''ACTIVE''
),asha_unique as (
select asha.member_id,max(asha.id)
from asha
group by asha.member_id
),fhw as (
select member_location_area_ids.member_id,fhw.id
from member_location_area_ids
inner join um_user_location fhw_location on member_location_area_ids.location_id = fhw_location.loc_id and fhw_location.state = ''ACTIVE''
inner join um_user fhw on fhw_location.user_id = fhw.id and fhw.role_id = 30 and fhw.state = ''ACTIVE''
),fhw_unique as (
select fhw.member_id,max(fhw.id)
from fhw
group by fhw.member_id
)
select 
imt_member.unique_health_id as "uniqueHealthId",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "memberName",
gvk_details.*,
family_head.family_head_name as "familyHead",
family_head.family_head_number as "familyHeadMobileNo",
contact_person.contact_person_name as "contactPersonName",
contact_person.contact_person_number as "contactPersonMobileNo",
case when asha_user.id is not null then concat(asha_user.first_name,'' '',asha_user.middle_name,'' '',asha_user.last_name) 
else null end as "ashaName",
asha_user.contact_number as "AshaMobileNo",
concat(fhw_user.first_name,'' '',fhw_user.middle_name,'' '',fhw_user.last_name) as "ANMName",
fhw_user.contact_number as "ANMMobileNo"
from gvk_details inner join imt_member on gvk_details.member_id = imt_member.id
left join family_head on gvk_details.member_id = family_head.member_id
left join contact_person on gvk_details.member_id = contact_person.member_id
left join asha_unique on gvk_details.member_id = asha_unique.member_id
left join fhw_unique on gvk_details.member_id = fhw_unique.member_id
left join um_user asha_user on asha_unique.max = asha_user.id
left join um_user fhw_user on fhw_unique.max = fhw_user.id',true,'ACTIVE',NULL,true,'123199ed-4e30-4452-84dd-86e4583f57f4'),
	 (1,'2020-04-20 00:00:00',1,'2020-04-20 00:00:00','opd_search_by_opd_member_master_id','opdMemberMasterId,userId','
    with maxDeliveryDateOfMember as (
        select
        rwmm.member_id,
        max(rwmm.date_of_delivery) as max_delivery_date
        from
        rch_wpd_mother_master rwmm
        where
        rwmm.member_id in (select member_id from rch_opd_member_master where id = #opdMemberMasterId#)
        and rwmm.has_delivery_happened is true
        group by rwmm.member_id
    )
    select
    im.id as "memberId",
    im.mobile_number as "mobileNumber",
    im.unique_health_id as "uniqueHealthId",
    if.family_id as "familyId",
    concat(im.first_name, '' '', im.middle_name, '' '', im.last_name) as "name",
    im.dob as "dob",
    cast(age(im.dob) as text) as "age",
    if.location_id as "locationId",
    if.area_id as "areaId",
    get_location_hierarchy(if.location_id) as "locationHierarchy",
    concat(uu1.first_name, '' '', uu1.middle_name, '' '', uu1.last_name) as "ashaName",
    uu1.contact_number as "ashaContactNumber",
    uu1.techo_phone_number as "ashaTechoContactNumber",
    concat(uu2.first_name, '' '', uu2.middle_name, '' '', uu2.last_name) as "anmName",
    uu2.contact_number as "anmContactNumber",
    uu2.techo_phone_number as "anmTechoContactNumber",
    im.is_pregnant as "isPregnant",
    cast(mddom.max_delivery_date as date) as "lastDeliveryDate",
    case
        when mddom.max_delivery_date is null then false
        when current_date - cast(mddom.max_delivery_date as date) <= 45 then true
        else false
    end as "hasDeliveryHappenedInLast45Days",
    case
        when nmdd1.status = ''NO_ABNORMALITY'' then ''No Abnormality''
        when nmdd1.status = ''TREATMENT_STARTED'' then ''Positive and Treatment Started''
        when nmdd1.status in (''CONFIRMED'', ''REFERRED'') then ''Positive''
        else ''N/A''
    end as "hypertensionStatus",
    case
        when nmdd2.status = ''NO_ABNORMALITY'' then ''No Abnormality''
        when nmdd2.status = ''TREATMENT_STARTED'' then ''Positive and Treatment Started''
        when nmdd2.status in (''CONFIRMED'', ''REFERRED'') then ''Positive''
        else ''N/A''
    end as "diabetesStatus",
    romm.service_date as "serviceDate",
    romm.medicines_given_on as "medicinesGivenOn",
    romm.any_other_state_specific_disease as "anyOtherStateSpecificDisease",
    romm.unusual_syndromes as "unusualSyndromes",
    hid."name" as "healthInfraName",
    (
    select
    string_agg(
            roltm.name, '', ''
        )
        from rch_opd_lab_test_master roltm
        inner join rch_opd_lab_test_details roltd on roltd.lab_test_id = roltm.id
        where roltd.opd_member_master_id = romm.id
    ) as "labTests",
    (
    select
    string_agg(
            lfvd.value, '', ''
        )
        from listvalue_field_value_detail lfvd
        inner join rch_opd_lab_test_provisional_rel roltpr on roltpr.opd_member_master_id = romm.id
        where lfvd.id = roltpr.provisional_id
    ) as "provisionalDiagnosis",
    (
    select
    cast(
        json_agg(
            json_build_object(
                ''id'', roed.id,
                ''memberId'', roed.member_id,
                ''opdMemberMasterId'', roed.opd_member_master_id,
                ''edlId'', roed.edl_id,
                ''frequency'', cast(roed.frequency as text),
                ''quantityBeforeFood'', cast(roed.quantity_before_food as text),
                ''quantityAfterFood'', cast(roed.quantity_after_food as text),
                ''numberOfDays'', cast(roed.number_of_days as text),
                ''createdBy'', roed.created_by,
                ''createdOn'', roed.created_on
            )
        )
        as text)
        from rch_opd_edl_details roed
        where roed.opd_member_master_id = romm.id
    ) as "opdEdlDetails"
    from rch_opd_member_master romm
    inner join imt_member im on romm.member_id = im.id
    inner join imt_family if on im.family_id = if.family_id
    left join um_user_location uul1 on uul1.loc_id = if.area_id and uul1.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul1.user_id and state = ''ACTIVE'') = 24
    left join um_user uu1 on uu1.id = uul1.user_id
    left join um_user_location uul2 on uul2.loc_id = if.location_id and uul2.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul2.user_id and state = ''ACTIVE'') = 30
    left join um_user uu2 on uu2.id = uul2.user_id
    left join maxDeliveryDateOfMember mddom on mddom.member_id = im.id
    left join ncd_member_diseases_diagnosis nmdd1 on nmdd1.member_id = im.id and nmdd1.disease_code = ''HT''
    left join ncd_member_diseases_diagnosis nmdd2 on nmdd2.member_id = im.id and nmdd2.disease_code = ''D''
    left join health_infrastructure_details hid on hid.id = romm.health_infra_id
    where romm.id = #opdMemberMasterId#
    and (cast(romm.medicines_given_on as date) = current_date or romm.medicines_given_on is null)
    -- and im.basic_state in (''NEW'', ''VERIFIED'', ''REVERIFICATION'', ''TEMPORARY'')
    and romm.health_infra_id in (select health_infrastrucutre_id from user_health_infrastructure uhi where user_id = #userId# and state = ''ACTIVE'')
',true,'ACTIVE','OPD Search By OPD Member Master ID',true,'5d12262f-3609-4b38-b11d-45864d51c4fa'),
	 (74841,'2019-09-13 10:37:09.539',74841,'2020-05-29 12:31:03.644','state_of_health_institute_delivery_detail_2','fromDate,toDate,limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
rcad.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
--to_char(rcad.last_child_service_date,''dd-MM-yyyy'') as "LastServiceData",
rcad.member_current_location_id as loc_id,
to_char(rcad.date_of_delivery,''DD-MM-YYYY'') as delivery_date,
rcad.delivery_done_by as delivery_done_by
from rch_pregnancy_analytics_details rcad
inner join imt_member m on m.id = rcad.member_id 
--inner join rch_wpd_mother_master wpd on wpd.member_id = m.id 
where rcad.delivery_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and rcad.date_of_delivery between ''#fromDate#'' and ''#toDate#''
and delivery_outcome in (''LBIRTH'',''SBIRTH'')
and (rcad.delivery_place NOT IN (''OUT_OF_STATE_GOVT'',''OUT_OF_STATE_PVT'') or rcad.delivery_place is null)
and home_del
limit #limit#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id
	where family_head = true and 
        im.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'',''TEMPORARY'')
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
and uu.role_id in (select id from um_role_master where code =''ASHA'' )
	group by member_id) as t,um_user u
	where t.user_id = u.id
		
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
inner join anmLocation a on  uld.loc_id = a.location_id
inner join um_user uu on uu.id = uld.user_id 
where 
uld.state = ''ACTIVE'' and uu.state=''ACTIVE'' and
uu.role_id in (select id from um_role_master where code =''FHW'' )
group by a.location_id,a.member_id

),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
	select max(service_date) as service_date,services.member_id from rch_member_services services
	inner join analytics a on a.member_id = services.member_id
	group by services.member_id 
),
lastServiceUnique as(
	select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
	where service.member_id = last.member_id
	group by service.member_id, last.service_date
),
lastServiceDetails as (
	select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
	service.location_id,
	location.name as locationName,
	case when service.service_type =''FHW_LMP'' then ''LMP Visit''
		when  service.service_type =''FHW_ANC'' then ''ANC Visit''
		  when service.service_type = ''FHW_PNC'' then ''PNC Visit''
		  when service.service_type = ''FHW_CS'' then ''Child Service''
		  when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
	end as service_type,
	service.member_id 
	from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id
	
	inner join location_master location on service.location_id = location.id
	
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName"
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id',true,'ACTIVE',NULL,true,'77a8425e-81a9-4e50-8112-1f65bccfda46'),
	 (-1,'2020-06-03 00:00:00',-1,'2020-06-03 00:00:00','retrive_location_type_by_level','level','select * from location_type_master where level=#level#',true,'ACTIVE','Retrive location type by level',true,'0bf19776-f0d3-471e-867a-a174826f6aea'),
	 (75398,'2020-06-03 00:00:00',75398,'2020-06-03 00:00:00','dynamic_form_configs_select_by_formid','form_id','select * from system_form_configuration where form_id=#form_id#;',true,'ACTIVE',NULL,true,'b358c003-7818-4445-96db-5be3cdfb9bca'),
	 (75398,'2020-06-03 00:00:00',75398,'2020-06-03 00:00:00','dynamic_form_config_select_by_id','id','select * from system_form_configuration where id = #id#',true,'ACTIVE',NULL,true,'97f822e9-90c0-457b-9890-4c03af6304b1'),
	 (75398,'2020-06-03 00:00:00',75398,'2020-06-03 00:00:00','dynamic_form_select_by_id','id','select * from system_form_master where id = #id#',true,'ACTIVE',NULL,true,'627be70a-a6c2-4a63-a9a0-075aed4036f5'),
	 (75398,'2020-06-03 00:00:00',75398,'2020-06-03 00:00:00','dynamic_form_select_by_code','code','select * from system_form_master where form_code ilike #code#',true,'ACTIVE',NULL,true,'c89ecb43-96b8-432f-a340-bf9ea6e5ca7b'),
	 (1,'2018-06-01 20:28:33.980159',NULL,NULL,'retrival_listvalue_active_forms','','select form_key as key,form as name from listvalue_form_master ;',true,'ACTIVE',NULL,true,'522dde0a-f0e1-4c23-84b5-48800992d216'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','retrieve_limited_system_code','limit,searchKey','SELECT * from system_code_master where  ( #searchKey# = null OR code ILIKE CONCAT(''%'', #searchKey#, ''%'' )) order by modified_on desc limit #limit#',true,'ACTIVE','Fire postgres query to get limited records from system_code_master table ',true,'9eebf020-bddd-4607-8e62-09cbbc6ae805'),
	 (75398,'2020-06-03 00:00:00',75398,'2020-06-03 00:00:00','dynamic_form_update_data','loggedInUserId,id,form_name,form_code','update system_form_master
set form_name =#form_name# ,
form_code =#form_code# ,
modified_on = now(),
modified_by =  #loggedInUserId#
where id = #id#',false,'ACTIVE',NULL,true,'7e83059f-1a9b-4984-b265-deccd7e17280'),
	 (-1,'2020-06-03 00:00:00',-1,'2020-06-03 00:00:00','dynamic_form_config_insert_data','form_id,form_config_json,loggedInUserId,version','insert into system_form_configuration(version,form_id, form_config_json, created_by, created_on, modified_on, modified_by)
values(
#version#, #form_id#, #form_config_json#,
#loggedInUserId#, now() , now() , #loggedInUserId#
)',false,'ACTIVE',NULL,true,'078e314a-09fc-4b58-a318-6ef34d52b468'),
	 (1027,'2018-08-13 21:19:53.273851',NULL,NULL,'rch_data_migration_fetchdetails','locationId','select * from rch_data_migration where location_id = #locationId# and state = ''PENDING''
union
(select * from rch_data_migration where location_id = #locationId# and state = ''EXECUTED'' order by created_on desc limit 1)',true,'ACTIVE',NULL,true,'7194a41d-152d-4c8b-94f7-59d55e0fd1e4'),
	 (1027,'2018-08-13 21:19:53.273851',NULL,NULL,'rch_data_migration_creation','locationId,user_id','INSERT INTO rch_data_migration(
            created_by, created_on, modified_by, modified_on, location_id, 
            executed_on, state)
values 
(#user_id#,localtimestamp,null,null,#locationId#,null,''PENDING'')',false,'ACTIVE',NULL,true,'95be2af4-6407-45f8-befe-aca01f73020b'),
	 (75398,'2020-06-03 00:00:00',75398,'2020-06-03 00:00:00','team_type_mark_team_type_active_or_inactive','state,id','update team_type_master set state = #state#  , modified_on = now() where id = #id# ;',false,'ACTIVE',NULL,true,'d314e205-a40a-4fed-9619-fa5fd9a92cf0'),
	 (75398,'2020-06-03 00:00:00',75398,'2020-06-03 00:00:00','retrival_listvalue_active_fields_acc_form','formKey','select * from listvalue_field_master where form=#formKey# and is_active =true',true,'ACTIVE',NULL,true,'0053b8ef-1113-4f97-ad71-5dd4c67b2002'),
	 (75398,'2020-06-03 00:00:00',75398,'2020-06-03 00:00:00','retrieve_list_values_by_field_key','fieldKey','select * from listvalue_field_value_detail where field_key=#fieldKey#',true,'ACTIVE',NULL,true,'bb1ec205-a1ab-424a-9b63-c6198777fe2a'),
	 (75398,'2020-06-03 00:00:00',75398,'2020-06-03 00:00:00','insert_listvalues','multimediaType,fieldKey,fileSize,loggedInUserId,value','INSERT INTO public.listvalue_field_value_detail(is_active, is_archive, last_modified_by, last_modified_on, multimedia_type,value,field_key,file_size) VALUES (true, false, #loggedInUserId# , now() , 
#multimediaType#, #value# , #fieldKey# , #fileSize# );',false,'ACTIVE',NULL,true,'136eee66-c5d5-4455-9858-cde74048045f'),
	 (75398,'2020-06-03 00:00:00',75398,'2020-06-03 00:00:00','user_analytics_top_usage_feature','role_name,date_filter','with date_filter as (
	select
	current_date as cur_date,
	case
		when #date_filter# = ''week'' then current_date - interval ''1 week''
		when #date_filter# = ''month'' then current_date - interval ''1 month''
		when #date_filter# = ''year'' then current_date - interval ''1 year''
	end as prev_date,
	case
		when #date_filter# = ''week'' then current_date - interval ''2 week''
		when #date_filter# = ''month'' then current_date - interval ''2 month''
		when #date_filter# = ''year'' then current_date - interval ''2 year''
		end
	as prev_to_prev_date
)
,prev_week_data as (
	select
	page_title_id as prev_page_title_id,
	avg(avg_active_time) as prev_avg_time,
	sum(no_of_times) as prev_no_of_click
	from user_wise_feature_time_taken_detail_analytics,date_filter
	where user_wise_feature_time_taken_detail_analytics.on_date between date_filter.prev_to_prev_date and date_filter.prev_date
	and case when #role_name# =  ''All'' then true else role_id = (select id from um_role_master where name = #role_name#) end
	group by page_title_id
)
,current_week_data as (
	select
	page_title_id as cur_page_title_id,
	avg(avg_active_time) as cur_avg_time,
	sum(no_of_times) as cur_no_of_click
	from user_wise_feature_time_taken_detail_analytics,date_filter
	where user_wise_feature_time_taken_detail_analytics.on_date between date_filter.prev_date + interval ''1 day''  and date_filter.cur_date
	and case when #role_name# =  ''All'' then true else role_id = (select id from um_role_master where name = #role_name#) end
	group by page_title_id
)
,compare_det as (
	select
	*
	from current_week_data cur left join prev_week_data prev  on cur.cur_page_title_id = prev.prev_page_title_id
)

,final_det as (
	select
	page_title.page_title,
	round(coalesce(prev_avg_time,0),2) as prev_avg_time,
	round(coalesce(cur_avg_time,0),2) as cur_avg_time,
	coalesce(prev_no_of_click,0) as prev_no_of_click,
	coalesce(cur_no_of_click,0) as cur_no_of_click,
	(coalesce(cur_no_of_click,0) - coalesce(prev_no_of_click,0)) as diff_no_of_click
	from
	compare_det comp inner join request_response_page_title_mapping page_title on comp.cur_page_title_id = page_title.id
	order by cur_no_of_click desc

)
select
 page_title as "pageTitle",
 TO_CHAR(cast (prev_avg_time/1000 || ''second'' as interval), ''HH24 h MI m SS s'') as "prevAvgTime",
TO_CHAR(cast (cur_avg_time/1000 || ''second'' as interval), ''HH24 h MI m SS s'') as "currAvgTime",
 prev_no_of_click as "prevClicks",
 cur_no_of_click as "currClicks",
 diff_no_of_click as "diffOfClicks"
 from final_det
 limit 50',true,'ACTIVE',NULL,true,'f1bfec2c-8c7f-4143-93e8-60d550fb863b'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','retrieve_npcb_health_infra_for_user','userId','select  h.name , h.id,h.type as type from health_infrastructure_details h, user_health_infrastructure  u where u.health_infrastrucutre_id=h.id and user_id=#userId# and is_npcb and u.state=''ACTIVE''',true,'ACTIVE','Retrieve NPCB Health Infrastructure for the user id',true,'129d4092-dd3b-46a5-985d-a30062fdb931'),
	 (75398,'2020-06-03 00:00:00',75398,'2020-07-28 17:30:02.222','dynamic_form_config_update_data','form_id,form_config_json,loggedInUserId,id,version','update system_form_configuration
set version =#version# ,
form_id =#form_id# ,
form_config_json =#form_config_json# ,
modified_on = now() ,
modified_by =  #loggedInUserId#
where id = #id#',false,'ACTIVE',NULL,true,'5fc0203a-0179-41d6-a4e8-8259a827bf6f'),
	 (75398,'2020-06-03 00:00:00',75398,'2020-06-03 00:00:00','user_analytics_not_used_in_current_week_feature','role_name,date_filter','with date_filter as (
	select
	current_date as cur_date,
	case
		when #date_filter# = ''week'' then current_date - interval ''1 week''
		when #date_filter# = ''month'' then current_date - interval ''1 month''
		when #date_filter# = ''year'' then current_date - interval ''1 year''
	end as prev_date,
	case
		when #date_filter# = ''week'' then current_date - interval ''2 week''
		when #date_filter# = ''month'' then current_date - interval ''2 month''
		when #date_filter# = ''year'' then current_date - interval ''2 year''
		end
	as prev_to_prev_date
)
,prev_week_data as (
	select
	page_title_id as prev_page_title_id,
	avg(avg_active_time) as prev_avg_time,
	sum(no_of_times) as prev_no_of_click
	from user_wise_feature_time_taken_detail_analytics,date_filter
	where user_wise_feature_time_taken_detail_analytics.on_date between date_filter.prev_to_prev_date and date_filter.prev_date
	and case when #role_name# =  ''All'' then true else role_id = (select id from um_role_master where name = #role_name#) end
	group by page_title_id
)
,current_week_data as (
	select
	page_title_id as cur_page_title_id,
	avg(avg_active_time) as cur_avg_time,
	sum(no_of_times) as cur_no_of_click
	from user_wise_feature_time_taken_detail_analytics,date_filter
	where user_wise_feature_time_taken_detail_analytics.on_date between date_filter.prev_date + interval ''1 day''  and date_filter.cur_date
	and case when #role_name# =  ''All'' then true else role_id = (select id from um_role_master where name = #role_name#) end
	group by page_title_id
)
,compare_det as (
	select * from prev_week_data prev right join current_week_data cur  on cur.cur_page_title_id = prev.prev_page_title_id
	where prev.prev_page_title_id is null
)
,final_det as (
	select
	page_title.page_title,
	round(coalesce(prev_avg_time,0),2) as prev_avg_time,
	round(coalesce(cur_avg_time,0),2) as cur_avg_time,
	round(coalesce(cur_avg_time,0) - (coalesce(prev_avg_time,0)),2) as diff_avg_time,
	coalesce(prev_no_of_click,0) as prev_no_of_click,
	coalesce(cur_no_of_click,0) as cur_no_of_click,
	(coalesce(cur_no_of_click,0) - coalesce(prev_no_of_click,0)) as diff_no_of_click
	from
	compare_det comp inner join request_response_page_title_mapping page_title on comp.cur_page_title_id = page_title.id
)
select
 page_title as "pageTitle",
 TO_CHAR(cast (prev_avg_time/1000 || ''second'' as interval), ''HH24 h MI m SS s'') as "prevAvgTime",
TO_CHAR(cast (cur_avg_time/1000 || ''second'' as interval), ''HH24 h MI m SS s'') as "currAvgTime",
case when round(diff_avg_time,2) < 0 then concat(''- '',TO_CHAR(cast (abs(round(diff_avg_time,2))/1000 || ''second'' as interval), ''HH24 h MI m SS s''))
 	else TO_CHAR(cast (abs(round(diff_avg_time,2))/1000 || ''second'' as interval), ''HH24 h MI m SS s'') end
 	as "diffTime",
 prev_no_of_click as "prevClicks",
 cur_no_of_click as "currClicks",
 diff_no_of_click as "diffInClicks"
 from final_det
 order by cur_no_of_click asc
 limit 50',true,'ACTIVE',NULL,true,'0340f798-b4fa-416b-91d8-ceed30b34d8c'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','delete_imei_database','imei,userid','INSERT INTO blocked_devices_master (imei, created_by, created_on,is_delete_database)
VALUES (#imei#, #userid#, localtimestamp,true)
ON CONFLICT (imei) DO UPDATE
  SET is_delete_database = true',false,'ACTIVE',NULL,true,'158bc0bf-b55a-467b-90c3-045e4b6aa391'),
	 (74909,'2020-06-03 00:00:00',74909,'2020-06-03 00:00:00','get_root_location_by_location_id','location_id','select
	l2.name,
	l2.id
from
	location_master l1
inner join location_hierchy_closer_det lhcd on
	lhcd.child_id = l1.id
inner join location_master l2 on
	l2.id = lhcd.parent_id
where
	l1.id = #location_id#
order by
	lhcd.depth desc
limit 1',true,'ACTIVE',NULL,true,'65aa297d-aad5-4e32-abd6-f71bb9ae6aff'),
	 (75398,'2020-06-03 00:00:00',75398,'2020-06-03 00:00:00','user_analytics_top_increase_in_feature_usage','role_name,date_filter','with date_filter as (
	select
	current_date as cur_date,
	case
		when #date_filter# = ''week'' then current_date - interval ''1 week''
		when #date_filter# = ''month'' then current_date - interval ''1 month''
		when #date_filter# = ''year'' then current_date - interval ''1 year''
	end as prev_date,
	case
		when #date_filter# = ''week'' then current_date - interval ''2 week''
		when #date_filter# = ''month'' then current_date - interval ''2 month''
		when #date_filter# = ''year'' then current_date - interval ''2 year''
		end
	as prev_to_prev_date
)
,prev_week_data as (
	select
	page_title_id as prev_page_title_id,
	avg(avg_active_time) as prev_avg_time,
	sum(no_of_times) as prev_no_of_click
	from user_wise_feature_time_taken_detail_analytics,date_filter
	where user_wise_feature_time_taken_detail_analytics.on_date between date_filter.prev_to_prev_date and date_filter.prev_date
	and case when #role_name# =  ''All'' then true else role_id = (select id from um_role_master where name = #role_name#) end
	group by page_title_id
)
,current_week_data as (
	select
	page_title_id as cur_page_title_id,
	avg(avg_active_time) as cur_avg_time,
	sum(no_of_times) as cur_no_of_click
	from user_wise_feature_time_taken_detail_analytics,date_filter
	where user_wise_feature_time_taken_detail_analytics.on_date between date_filter.prev_date + interval ''1 day''  and date_filter.cur_date
	and case when #role_name# =  ''All'' then true else role_id = (select id from um_role_master where name = #role_name#) end
	group by page_title_id
)
,compare_det as (
	select * from prev_week_data prev right join current_week_data cur on cur.cur_page_title_id = prev.prev_page_title_id
)
,final_det as (
	select
	page_title.page_title,
	round(coalesce(prev_avg_time,0),2) as prev_avg_time,
	round(coalesce(cur_avg_time,0),2) as cur_avg_time,
	(coalesce(cur_avg_time,0) - coalesce(prev_avg_time,0)) as diff_avg_time,
	coalesce(prev_no_of_click,0) as prev_no_of_click,
	coalesce(cur_no_of_click,0) as cur_no_of_click,
	(coalesce(cur_no_of_click,0) - coalesce(prev_no_of_click,0)) as diff_no_of_click,
	case when prev_no_of_click = 0 then 0 else ( coalesce(cur_no_of_click,0) - coalesce(prev_no_of_click,0)) * 100 / prev_no_of_click end as diff_count_time_in_percent
	from
	compare_det comp inner join request_response_page_title_mapping page_title on comp.cur_page_title_id = page_title.id
)
select
page_title as "pageTitle",
TO_CHAR(cast (prev_avg_time/1000 || ''second'' as interval), ''HH24 h MI m SS s'') as "prevAvgTime",
TO_CHAR(cast (cur_avg_time/1000 || ''second'' as interval), ''HH24 h MI m SS s'') as "currAvgTime",
case when round(diff_avg_time,2) < 0 then concat(''- '',TO_CHAR(cast (abs(round(diff_avg_time,2))/1000 || ''second'' as interval), ''HH24 h MI m SS s''))
 	else TO_CHAR(cast (abs(round(diff_avg_time,2))/1000 || ''second'' as interval), ''HH24 h MI m SS s'') end
 	as "diffOfAvgTime",
 prev_no_of_click as "prevClicks",
 cur_no_of_click as "currClicks",
 diff_no_of_click as "diffInClicks",
 round(coalesce(diff_count_time_in_percent,0),2) as "percentColTopIncreaseInFeatureusage"
 from final_det
 order by diff_no_of_click desc
 limit 50',true,'ACTIVE',NULL,true,'6cd2e534-b5f3-4f5d-b378-7d9faeaa8e95'),
	 (75398,'2020-06-03 00:00:00',75398,'2020-06-03 00:00:00','user_analytics_top_decrease_in_feature_usage','role_name,date_filter','with date_filter as (
	select
	current_date as cur_date,
	case
		when #date_filter# = ''week'' then current_date - interval ''1 week''
		when #date_filter# = ''month'' then current_date - interval ''1 month''
		when #date_filter# = ''year'' then current_date - interval ''1 year''
	end as prev_date,
	case
		when #date_filter# = ''week'' then current_date - interval ''2 week''
		when #date_filter# = ''month'' then current_date - interval ''2 month''
		when #date_filter# = ''year'' then current_date - interval ''2 year''
		end
	as prev_to_prev_date
)
,prev_week_data as (
	select
	page_title_id as prev_page_title_id,
	avg(avg_active_time) as prev_avg_time,
	sum(no_of_times) as prev_no_of_click
	from user_wise_feature_time_taken_detail_analytics,date_filter
	where user_wise_feature_time_taken_detail_analytics.on_date between date_filter.prev_to_prev_date and date_filter.prev_date
	and case when #role_name# =  ''All'' then true else role_id = (select id from um_role_master where name = #role_name#) end
	group by page_title_id
)
,current_week_data as (
	select
	page_title_id as cur_page_title_id,
	avg(avg_active_time) as cur_avg_time,
	sum(no_of_times) as cur_no_of_click
	from user_wise_feature_time_taken_detail_analytics,date_filter
	where user_wise_feature_time_taken_detail_analytics.on_date between date_filter.prev_date + interval ''1 day''  and date_filter.cur_date
	and case when #role_name# =  ''All'' then true else role_id = (select id from um_role_master where name = #role_name#) end
	group by page_title_id
)
,compare_det as (
	select * from prev_week_data prev right join current_week_data cur on cur.cur_page_title_id = prev.prev_page_title_id
)
,final_det as (
	select
	page_title.page_title,
	round(coalesce(prev_avg_time,0),2) as prev_avg_time,
	round(coalesce(cur_avg_time,0),2) as cur_avg_time,
	(coalesce(prev_avg_time,0) - coalesce(cur_avg_time,0)) as diff_avg_time,
	coalesce(prev_no_of_click,0) as prev_no_of_click,
	coalesce(cur_no_of_click,0) as cur_no_of_click,
	(coalesce(cur_no_of_click,0) - coalesce(prev_no_of_click,0)) as diff_no_of_click,
	case when prev_no_of_click = 0 then 0 else (coalesce(cur_no_of_click,0) - coalesce(prev_no_of_click,0)) * 100 / prev_no_of_click end as diff_count_time_in_percent
	from
	compare_det comp inner join request_response_page_title_mapping page_title on comp.cur_page_title_id = page_title.id
)
select
 page_title as "pageTitle",
 TO_CHAR(cast (prev_avg_time/1000 || ''second'' as interval), ''HH24 h MI m SS s'') as "prevAvgTime",
TO_CHAR(cast (cur_avg_time/1000 || ''second'' as interval), ''HH24 h MI m SS s'') as "currAvgTime",
case when round(diff_avg_time,2) < 0 then concat(''- '',TO_CHAR(cast (abs(round(diff_avg_time,2))/1000 || ''second'' as interval), ''HH24 h MI m SS s''))
 	else TO_CHAR(cast (abs(round(diff_avg_time,2))/1000 || ''second'' as interval), ''HH24 h MI m SS s'') end
 	as "diffOfAvgTime",
 prev_no_of_click as "prevClicks",
 cur_no_of_click as "currClicks",
 diff_no_of_click as "diffInClicks",
 round(coalesce(diff_count_time_in_percent,0),2) as "percentColTopDecreaseInFeatureUsage"
 from final_det
 order by diff_no_of_click asc
 limit 50',true,'ACTIVE',NULL,true,'8711d37d-553e-4740-bb2f-dce086956c01'),
	 (75398,'2020-06-03 00:00:00',75398,'2020-06-03 00:00:00','user_search_for_selectize','searchString','select id,first_name as "firstName", last_name as "lastName", user_name as "userName" from um_user where first_name like CONCAT(''%'', #searchString#,''%'') or last_name like CONCAT(''%'', #searchString#, ''%'') or user_name like CONCAT(''%'',#searchString#) limit 50',true,'ACTIVE',NULL,true,'cfcf6ca5-e7c9-495a-9368-67d5ebea26b1'),
	 (75398,'2020-07-09 00:00:00',75398,'2020-07-09 00:00:00','translation_label_check','key','select * from internationalization_label_master where key = #key#',true,'ACTIVE',NULL,true,'305ca773-b081-462f-ba6a-6928a4056406'),
	 (75398,'2020-06-03 00:00:00',75398,'2020-06-03 00:00:00','gvk_call_center_get_all_data','screenContext,locationId','with call_center_data as (
select ccdwa.main_type,ccdwa.sub_type,sum(ccdwa.cnt) as cnt,mct.query_code,mct.is_show_filter,mct.is_show_location_filter, mct.category_order
from gvk_call_center_date_wise_analytics ccdwa
inner join gvk_call_center_main_category_types mct on mct.main_type = ccdwa.main_type and mct.is_active = true
where call_date = current_date - interval ''1 day'' and mct.screen_context= #screenContext# 
and ccdwa.location_id = (case when #locationId# is null then 2 else #locationId# end)
group by ccdwa.main_type,sub_type,mct.query_code,is_show_filter,category_order ,is_show_location_filter
)
select ccdwa.main_type,STRING_AGG(ccdwa.sub_type,'','' order by ccdwa.sub_type) labels
,STRING_AGG(CAST(ccdwa.cnt as text),'','' order by ccdwa.sub_type) "countData"
,sum(ccdwa.cnt) as total
,query_code as "queryCode"
,is_show_filter as "isShowFilter"
,is_show_location_filter as "isShowLocationFilter"
from call_center_data ccdwa
group by main_type,query_code,is_show_filter,category_order,is_show_location_filter 
order by category_order',true,'ACTIVE',NULL,true,'886c3433-fd19-48f3-96ca-5b1efacaf5f9'),
	 (-1,'2020-06-03 00:00:00',-1,'2020-06-03 00:00:00','gvk_call_center_data_by_period','period,main_catogry,period_no,location_id','with date_period as(
SELECT to_char(d, ''DD-MM'') as series_label, Cast(''(Day-Month)'' as text) x_axis_label, d as from_date, d + interval ''1 day'' - interval ''1 milliseconds'' as to_date
	FROM  generate_series(
	current_date - #period_no# * interval ''1 day'',
	current_date - interval ''1 day'' , ''1 day'') d
	where ''day'' = #period#
Union all
SELECT to_char(d, ''DD-MM'') as series_label, Cast(''(Day-Month)'' as text) x_axis_label,
 d as from_date, d + interval ''1 week'' - interval ''1 milliseconds'' as to_date
	FROM   generate_series(
	current_date - #period_no# * interval ''1 week'',
	current_date - interval ''1 day'' , ''1 week'') d
	where ''week'' = #period#
Union all
SELECT to_char(d + interval ''1 month'', ''MM-YY'') as series_label, Cast(''(Month-Year)'' as text) x_axis_label,
d as from_date, d + interval ''1 month'' - interval ''1 milliseconds'' as to_date
	FROM   generate_series(
	current_date - #period_no# * interval ''1 month'',
	current_date - interval ''1 day'' , ''1 month'') d
	where ''month'' = #period#
Union all
SELECT to_char(d + interval ''1 month'', ''MM-YY'') as series_label, Cast(''(Month-Year)'' as text) x_axis_label,
 d as from_date, d + interval ''1 month'' - interval ''1 milliseconds'' as to_date
	FROM  generate_series(
	current_date - (EXTRACT(MONTH FROM current_date) - 4) * interval ''1 month'',
	current_date - interval ''1 day'' , ''1 month'') d
	where ''financial'' = #period#
),
selected_sub_category as(
select d.series_label, d.x_axis_label, ccdwa.sub_type labels
,case when mc.operation_type=''sum'' then sum(ccdwa.cnt)
	else case when mc.operation_type=''avg'' then round(avg(coalesce(ccdwa.cnt, 0)), 2) else 0 end 
	end as total
/*,sum(ccdwa.cnt) as total*/
from gvk_call_center_date_wise_analytics ccdwa
left join  date_period d
on call_date between d.from_date and d.to_date
left join gvk_call_center_main_category_types mc on mc.main_type =  #main_catogry#
where ccdwa.main_type= #main_catogry#
and ccdwa.location_id = (case when #location_id# is null then 2 else #location_id# end) 
group by d.series_label, ccdwa.sub_type, d.x_axis_label,mc.operation_type
)
select  STRING_AGG(CAST(dp.series_label as text),'','' order by dp.from_date) labels ,
sc.labels as "subCatogary"
,STRING_AGG(CAST(COALESCE(dc.total,0) as text),'','' order by dp.from_date) as "countData",mc.operation_type as "operationType",
sum(dc.total) as total, dp.x_axis_label as "xAxisLabel"
from 
date_period dp
inner join (select distinct labels from selected_sub_category) as sc on true = true
left join selected_sub_category dc on dp.series_label = dc.series_label and dc.labels = sc.labels
left join gvk_call_center_main_category_types mc on mc.main_type =  #main_catogry#
group by sc.labels, dp.x_axis_label,  mc.operation_type',true,'ACTIVE',NULL,true,'9fa383bc-33f0-40e1-972e-9f7e88253624'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','installed_app_info','user_name,imei','select appinfo.user_id, usr.user_name as username,
appinfo.imei,
appinfo.package_name,
appinfo.application_name,
appinfo.installed_date
from user_installed_apps appinfo
inner join um_user usr on appinfo.user_id = usr.id 
	and usr.user_name = #user_name# 
	and case when #imei# is null then true else appinfo.imei = #imei# end
order by imei, application_name',true,'ACTIVE',NULL,true,'7d6e6ecc-2df5-4f57-9bd6-7c0610a5e43a'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','block_imei_number','imei,userid','INSERT INTO blocked_devices_master (imei, created_by, created_on,is_block_device)
VALUES (#imei#, #userid#, localtimestamp,true)
ON CONFLICT (imei) DO UPDATE
  SET is_block_device = true',false,'ACTIVE',NULL,true,'05a148cb-ab0a-4642-afdf-b07dfb12f7a0'),
	 (1,'2018-07-25 18:10:36.543697',NULL,NULL,'mob_notification_mark_as_complete','action_by,notification_id','update techo_notification_master set state = ''COMPLETED'', 
        action_by = #action_by#, modified_by = #action_by#, modified_on = now() 
        where id = #notification_id#;',false,'ACTIVE','It will mark the mobile notification as COMPLETE',true,'5a9fdc96-51c7-4498-9ba7-ecebc0fbf0a8'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','unblock_imei_number','imei','delete from blocked_devices_master where imei = #imei#',false,'ACTIVE','Unblock the Imei Number',true,'a1a83233-e9dc-4d94-a600-a34e617b5f1d'),
	 (1,'2020-06-03 00:00:00',1,'2020-06-03 00:00:00','retrieve_opd_patients_for_medicines','userId','
    select
    im.id as "memberId",
    im.unique_health_id as "uniqueHealthId",
    if.family_id as "familyId",
    concat(im.first_name, '' '', im.middle_name, '' '', im.last_name) as "name",
    im.dob as "dob",
    cast(age(im.dob) as text) as "age",
    if.location_id as "locationId",
    if.area_id as "areaId",
    get_location_hierarchy(if.location_id) as "locationHierarchy",
    romm.id as "opdMemberMasterId",
    romm.health_infra_id as "healthInfraId",
    romm.service_date as "serviceDate",
    romm.medicines_given_on as "medicinesGivenOn",
    hid.name as "healthInfraName"
    from rch_opd_member_master romm
    inner join imt_member im on im.id = romm.member_id
    inner join imt_family if on im.family_id = if.family_id
    left join health_infrastructure_details hid on hid.id = romm.health_infra_id
    where romm.is_medicines_given is not true
    and (cast(romm.medicines_given_on as date) = current_date or romm.medicines_given_on is null)
    and im.basic_state in (''NEW'', ''VERIFIED'', ''REVERIFICATION'', ''TEMPORARY'', ''UNHANDLED'', ''IDSP'')
    and romm.health_infra_id in (select health_infrastrucutre_id from user_health_infrastructure uhi where user_id = #userId# and state = ''ACTIVE'')
    order by romm.medicines_given_on
',true,'ACTIVE','Retrieve OPD Patients for Medicines',true,'461e82bd-ed63-4507-ac4f-31ffd5d9100d'),
	 (409,'2020-06-30 00:00:00',409,'2020-08-07 13:04:40.556','retrieve_rch_wpd_child_master_info','healthid','with deformity as (select deformity.wpd_id ,string_agg( list.value ,'', '') as deformitysign from rch_wpd_child_congential_deformity_rel deformity
left join listvalue_field_value_detail list on  deformity.congential_deformity = list.id group by deformity.wpd_id )
,dangsign as (select danger.wpd_id ,string_agg( list.value ,'', '') as dangeroussign from rch_wpd_child_danger_signs_rel danger
	left join listvalue_field_value_detail list on  danger.danger_signs = list.id group by danger.wpd_id)
select wpdchild.id as "wpdchildid", wpdchild.member_id as "memberId", wpdchild.family_id as "wpdChildFamilyId", 
wpdchild.latitude, wpdchild.longitude, wpdchild.mobile_start_date as "startDate", 
wpdchild.mobile_end_date as "endDate", 
wpdchild.location_id as "locationId", wpdchild.wpd_mother_id as "wpdMotherId",
 wpdchild.mother_id as "motherId", wpdchild.pregnancy_outcome as "pregnancyOutcome", wpdchild.gender as "childGender", 
wpdchild.birth_weight as "childBirthWeight", wpdchild.date_of_delivery as "deliveryDate", wpdchild.created_by as "createdBy",
 wpdchild.created_on as "createdOn", wpdchild.modified_by as "modifiedBy", wpdchild.modified_on as "modifiedOn", 
wpdchild.baby_cried_at_birth as "childCry", wpdchild.notification_id as "notificationId", wpdchild.death_date as "deathDate",
 wpdchild.death_reason as "deathReason", wpdchild.place_of_death as "placeOfDeath", wpdchild.member_status as "memberStatus", 
wpdchild.type_of_delivery as "typeOfDelivery", wpdchild.breast_feeding_in_one_hour as "breastFeeding",
 wpdchild.other_congential_deformity as "congenitalDeformityOther", wpdchild.is_high_risk_case as "isHighRiskCase", 
wpdchild.was_premature as "wasPremature", wpdchild.referral_reason as "childReferralReason", wpdchild.referral_transport as "childReferralTransport",
 wpdchild.referral_place as "childReferralPlace", wpdchild.name as "name", wpdchild.breast_crawl as "breastCrawl", 
wpdchild.kangaroo_care as "kangarooCare", wpdchild.other_danger_sign as "childOtherDangerSign",dan.dangeroussign,def.deformitysign,
usr.first_name || '' '' || usr.middle_name || '' '' || usr.last_name as usrfullname,usr.user_name as username, fam.family_id as "familyId",
loc.name as locationname, referralplace.value as referralplacename
from rch_wpd_child_master wpdchild
left join location_master loc on wpdchild.location_id = loc.id
left join imt_family fam on wpdchild.family_id = fam.id
left join deformity def on wpdchild.id = def.wpd_id
left join dangsign dan on wpdchild.id = dan.wpd_id
left join um_user usr on wpdchild.created_by = usr.id
left join listvalue_field_value_detail referralplace on wpdchild.referral_place = referralplace.id
where wpdchild.member_id = (select id from imt_member where unique_health_id = #healthid# limit 1) 
and wpdchild.state is distinct from ''MARK_AS_FALSE_DELIVERY''
order by wpdchild.created_on desc limit 5',true,'ACTIVE','Retrieve RCH WPD Child Master Information',true,'3c4d910e-6a1d-4977-890d-762109441751'),
	 (1,'2018-11-23 00:00:00',NULL,NULL,'move_to_production_ncd_form','userId','select cast(''NCD'' as text) as form_code, false as result',true,'ACTIVE',NULL,true,'9097e6c6-e36d-43f9-8ff8-be8bff407344'),
	 (1,'2018-11-23 00:00:00',1,'2018-12-20 16:50:19.013','child_cmtc_nrc_location_check_by_unique_health_id','uniqueHealthId','select location_id from imt_family where family_id in (select family_id from imt_member where unique_health_id = ''#uniqueHealthId#'')',true,'ACTIVE',NULL,true,'c89c1a54-fd09-4106-9735-a1887784b677'),
	 (1,'2019-07-01 00:00:00',1027,'2020-02-13 18:25:38.861','mob_lmp_services_provided','memberId','select to_char(rch.service_date, ''DD/MM/YYYY'') as "Service Date",
cast(''Home'' as text) as "LMP Visit Place",
rch.id as "hiddenVisitId",
cast(''FHW_LMP'' as text) as "hiddenServiceType"
from rch_lmp_follow_up rch
inner join imt_member mem on rch.member_id = mem.id
where member_id = #memberId#
order by rch.service_date desc;',true,'ACTIVE',NULL,true,'f740aa34-aef1-4872-8f47-ac2c4765ac6b'),
	 (75398,'2020-12-03 00:00:00',75398,'2020-12-03 00:00:00','insert_member_audit_log_for_wpd','reason,documentId,loggedInUserId,wpdMotherId,remarks','insert into member_audit_log (member_id,table_name,data,user_id,column_name,ref_code,
document_id,reason,remarks)
select lm.member_id,''rch_wpd_mother_master'',row_to_json(lm) as data, #loggedInUserId# as user_id,
''state'',lm.id, #documentId#, #reason#, #remarks#
  from (select id,member_id,state from rch_wpd_mother_master where id=#wpdMotherId#) lm
returning id;',true,'ACTIVE','Insert query for member_audit_log to insert data of mark as wrong delivery from help desk',true,'a5b4faa3-8601-49ac-accd-320035ff1e40'),
	 (75398,'2020-12-03 00:00:00',75398,'2020-12-03 00:00:00','retrieve_rch_wpd_mother_master_info','healthid','with highriskdata as (select highrisk.wpd_id ,string_agg( list.value ,'', '') as highriskdata from rch_wpd_mother_high_risk_rel highrisk
left join listvalue_field_value_detail list on  highrisk.mother_high_risk = list.id group by highrisk.wpd_id )
,dangersigndata as (select danger.wpd_id ,string_agg( list.value ,'', '') as dangeroussigndata from rch_wpd_mother_danger_signs_rel danger
	left join listvalue_field_value_detail list on  danger.mother_danger_signs = list.id group by danger.wpd_id )
,deathdata as (select death.wpd_id ,string_agg( list.value ,'', '') as deathdata from rch_wpd_mother_death_reason_rel death
	left join listvalue_field_value_detail list on  death.mother_death_reason = list.id group by death.wpd_id )
select wpdmother.id as "wpdMotherId",wpdmother.member_id as "memberId",wpdmother.family_id as "wpdMotherFamilyId",
wpdmother.state,
wpdmother.latitude,wpdmother.longitude,
wpdmother.mobile_start_date as "mobileStartDate",wpdmother.mobile_end_date as "mobileEndDate",
wpdmother.location_id as "locationId",
wpdmother.date_of_delivery as "dateOfDelivery",wpdmother.member_status as "memberStatus",wpdmother.is_preterm_birth as "isPretermBirth",
wpdmother.delivery_place as "deliveryPlace",wpdmother.type_of_hospital as "typeOfHospital",
wpdmother.delivery_done_by as "deliveryDoneBy",wpdmother.mother_alive as "motherAlive",wpdmother.type_of_delivery as "typeOfDelivery",
wpdmother.referral_place as "referralPlace",wpdmother.created_by as "createdBy",
wpdmother.created_on as "createdOn",wpdmother.modified_by as "modifiedBy",wpdmother.modified_on as "modifiedOn",wpdmother.discharge_date as "dischargeDate",
wpdmother.breast_feeding_in_one_hour as "breastFeedingInOneHour",wpdmother.notification_id as "notificationId",
wpdmother.death_date as "deathDate",wpdmother.death_reason as "deathReason",wpdmother.place_of_death as "placeOfDeath",
wpdmother.cortico_steroid_given as "corticoSteroidGiven",wpdmother.mtp_done_at as "mtpDoneAt",
wpdmother.mtp_performed_by as "mtpPerformedBy",wpdmother.has_delivery_happened as "hasDeliveryHappened",wpdmother.other_danger_signs as "otherDangerSigns",
wpdmother.is_high_risk_case as "isHighRiskCase",wpdmother.referral_done as "referralDone",
wpdmother.pregnancy_reg_det_id as "pregnancyRegDetId",wpdmother.pregnancy_outcome as "pregnancyOutcome",wpdmother.misoprostol_given as "misoprostolGiven",
wpdmother.free_drop_delivery as "freeDropDelivery",wpdmother.delivery_person as "deliveryPerson",
wpdmother.is_discharged as "isDischarged",wpdmother.health_infrastructure_id as "healthInfrastructureId",
usr.first_name || '' '' || usr.middle_name || '' '' || usr.last_name as usrfullname,usr.user_name as username, fam.family_id as "familyId",
loc.name as locationname, hospitaltype.value as typeofhospitalvalue,referralplace.value as referralplacename,
risk.highriskdata as "highRisks", danger.dangeroussigndata as "motherDangerSigns",death.deathdata
from rch_wpd_mother_master wpdmother
left join location_master loc on wpdmother.location_id = loc.id
left join imt_family fam on wpdmother.family_id = fam.id
left join um_user usr on wpdmother.created_by = usr.id
left join highriskdata risk on wpdmother.id = risk.wpd_id
left join dangersigndata danger on wpdmother.id = danger.wpd_id
left join deathdata death on wpdmother.id = death.wpd_id
left join listvalue_field_value_detail hospitaltype on wpdmother.type_of_hospital = hospitaltype.id
left join listvalue_field_value_detail referralplace on wpdmother.referral_place = referralplace.id
where wpdmother.member_id = (select id from imt_member where unique_health_id = #healthid# limit 1) order by wpdmother.created_on desc limit 5',true,'ACTIVE','Retrieve RCH WPD Mother Master Information',true,'7babe190-d7d1-412c-8d7b-934ad83cacb0'),
	 (75398,'2020-12-03 00:00:00',75398,'2020-12-03 00:00:00','mark_as_false_delivery','member_id,action_by,pregnancy_reg_det_id,wpd_mother_id','--Activate WPD Notification
update techo_notification_master set state = from_state,modified_on = now(), modified_by = #action_by# 
from (
	select techo_notification_state_detail.notification_id,techo_notification_state_detail.from_state 
	from techo_notification_state_detail, (
		select techo_notification_master.id,max(techo_notification_state_detail.id) as techo_notification_state_detail_id  
		from techo_notification_master,techo_notification_state_detail 
		where techo_notification_master.state= ''COMPLETED'' and member_id = #member_id# and ref_code = #pregnancy_reg_det_id#
		and techo_notification_master.id = techo_notification_state_detail.notification_id
		and techo_notification_state_detail.from_state != techo_notification_state_detail.to_state
		and notification_type_id = (
			select id from notification_type_master where code = ''FHW_WPD''
		)
		group by techo_notification_master.id
	) as notification_id_last_state_detail_id
	where techo_notification_state_detail.id = notification_id_last_state_detail_id.techo_notification_state_detail_id
) as t  where t.notification_id =  techo_notification_master.id;

--Activate ANC Notification
update techo_notification_master set state = from_state,modified_on = now(), modified_by = #action_by# 
from (
	select techo_notification_state_detail.notification_id,techo_notification_state_detail.from_state 
	from techo_notification_state_detail,(
		select techo_notification_master.id,max(techo_notification_state_detail.id) as techo_notification_state_detail_id  
		from techo_notification_master,techo_notification_state_detail 
		where techo_notification_master.state= ''MARK_AS_DELIVERY_HAPPENED'' 
		and member_id = #member_id# and ref_code = #pregnancy_reg_det_id#
		and techo_notification_master.id = techo_notification_state_detail.notification_id
		and techo_notification_state_detail.from_state != techo_notification_state_detail.to_state
		and notification_type_id in (select id from notification_type_master where code in (''FHW_ANC'', ''ASHA_ANC''))
		group by techo_notification_master.id
	) as notification_id_last_state_detail_id
	where techo_notification_state_detail.id = notification_id_last_state_detail_id.techo_notification_state_detail_id
) as t  where t.notification_id =  techo_notification_master.id;

--Activate Pending Notification Generation Events
update event_mobile_notification_pending set is_completed = false, state = ''PENDING'', 
modified_by = #action_by#, modified_on = now() 
where member_id = #member_id# and state = ''COMPLETED'' 
and notification_configuration_type_id in (
	select id from event_configuration_type where mobile_notification_type in (
		select id from notification_type_master where code in (''FHW_ANC'', ''FHW_WPD'', ''ASHA_ANC'')
	)
)
and ref_code = #pregnancy_reg_det_id#;

--Activate Pregnancy Registration details
update rch_pregnancy_registration_det set state = ''PENDING'',
modified_on = now(), modified_by = #action_by# 
where id = #pregnancy_reg_det_id#;

update event_mobile_notification_pending set is_completed = false, state = ''MARK_AS_FALSE_DELIVERY'', 
modified_by = #action_by#, modified_on = now() 
where member_id = #member_id# 
and notification_configuration_type_id in (
	select id from event_configuration_type where mobile_notification_type in (
		select id from notification_type_master where code in (''FHW_PNC'', ''ASHA_PNC'')
	)
)
and ref_code = #pregnancy_reg_det_id#;

delete from techo_notification_master where notification_type_id = (select id from notification_type_master where code = ''FHW_PNC'')
and state in (''PENDING'',''RESCHEDULE'') and ref_code = #pregnancy_reg_det_id# and member_id = #member_id# ;

delete from techo_notification_master where notification_type_id = (select id from notification_type_master where code = ''ASHA_PNC'')
and state in (''PENDING'',''RESCHEDULE'') and ref_code = #pregnancy_reg_det_id# and member_id = #member_id# ;

delete from techo_notification_master where notification_type_id = (select id from notification_type_master where code = ''LMPFU'')
and state in (''PENDING'',''RESCHEDULE'') and member_id = #member_id#;

delete from techo_notification_master where notification_type_id = (select id from notification_type_master where code = ''ASHA_LMPFU'')
and state in (''PENDING'',''RESCHEDULE'') and member_id = #member_id#;

delete from techo_notification_master where notification_type_id = (select id from notification_type_master where code = ''DISCHARGE'')
and state in (''PENDING'',''RESCHEDULE'') and member_id = #member_id#;

update imt_member set is_pregnant = true
,last_delivery_date = null,last_delivery_outcome = null,cur_preg_reg_det_id = #pregnancy_reg_det_id#,
modified_on = now(), modified_by = #action_by# 
where id = #member_id#;

update imt_member set immunisation_given = t.immunisation_given,
modified_on = now(), modified_by = #action_by# 
from (
select rch_immunisation_master.member_id,
string_agg(concat(rch_immunisation_master.immunisation_given,''#'',to_char(rch_immunisation_master.given_on,''DD/MM/YYYY''))
,'','' order by rch_immunisation_master.given_on) as immunisation_given
from rch_immunisation_master 
where rch_immunisation_master.pregnancy_reg_det_id = #pregnancy_reg_det_id#
group by rch_immunisation_master.member_id) as t 
where t.member_id = imt_member.id;

update rch_wpd_mother_master set state = ''MARK_AS_FALSE_DELIVERY'',
modified_on = now(), modified_by = #action_by# 
where id = #wpd_mother_id#;

update rch_wpd_child_master set state = ''MARK_AS_FALSE_DELIVERY'',
modified_on = now(), modified_by = #action_by# 
where wpd_mother_id = #wpd_mother_id#;

update imt_member set state = ''com.argusoft.imtecho.member.state.archived'',remarks = ''MARK_AS_FALSE_DELIVERY''
,modified_by = #action_by#,modified_on = now() where id  in (select member_id from rch_wpd_child_master where wpd_mother_id = #wpd_mother_id#);

update event_mobile_notification_pending set is_completed = false, state = ''MARK_AS_FALSE_DELIVERY'', 
modified_by = #action_by#, modified_on = now() 
where member_id in (select member_id from rch_wpd_child_master where wpd_mother_id = #wpd_mother_id#) 
and notification_configuration_type_id in (
	select id from event_configuration_type where mobile_notification_type in (
		select id from notification_type_master where code in (''FHW_CS'', ''ASHA_CS'')
	)
);

delete from techo_notification_master where notification_type_id = (select id from notification_type_master where code = ''FHW_CS'')
and state in (''PENDING'',''RESCHEDULE'') and member_id in (select member_id from rch_wpd_child_master where wpd_mother_id = #wpd_mother_id#);

delete from techo_notification_master where notification_type_id = (select id from notification_type_master where code = ''ASHA_CS'')
and state in (''PENDING'',''RESCHEDULE'') and member_id in (select member_id from rch_wpd_child_master where wpd_mother_id = #wpd_mother_id#);',false,'ACTIVE','It will use when ttc/mo will reject the delivery entry.',true,'bc399365-286c-4b33-a171-2f8f022395a0'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','update_location_of_covid_19_traveller','isOutOfState,address,districtId,locationId,loggedInUserId,id','-- update location

    update covid_travellers_info
    set location_id = #locationId#,
    address = #address#,
    is_out_of_state = #isOutOfState#,
    district_id = #districtId#,
    is_active = true,
    tracking_start_date = now(),
    modified_on = now(),
    modified_by = #loggedInUserId#
    where id = #id#;',false,'ACTIVE','Update Location of COVID 19 Traveller',true,'d0813502-d6ae-4f14-a83c-d287cbdaa09d'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','school_update','isPrimarySchool,englishName,code,childFemale9To10,schoolType,isGurukul,childFemale6To8,childMale6To8,locationId,contactNumber,childFemale11To12,modifiedBy,id,rbskTeamId,isHigherSecondarySchool,otherSchoolType,isPrePrimarySchool,noOfTeachers,principalName,childFemale1To5,childMale11To12,isMadresa,contactPersonName,childMale1To5,name,grantType,isOther,childMale9To10','UPDATE school_master
    SET
    "name"=#name#, code=#code#, english_name=#englishName#, grant_type=#grantType#, school_type=#schoolType#, no_of_teachers=#noOfTeachers#, principal_name=#principalName#, contact_person_name=#contactPersonName#, is_pre_primary_school=#isPrePrimarySchool#, is_primary_school=#isPrimarySchool#, is_higher_secondary_school=#isHigherSecondarySchool#, is_madresa=#isMadresa#, is_gurukul=#isGurukul#, is_other=#isOther#, other_school_type=#otherSchoolType#, contact_number=#contactNumber#,
    child_male_1_to_5=#childMale1To5#, child_female_1_to_5=#childFemale1To5#, child_male_6_to_8=#childMale6To8#, child_female_6_to_8=#childFemale6To8#, child_male_9_to_10=#childMale9To10#, child_female_9_to_10=#childFemale9To10#, child_male_11_to_12=#childMale11To12#, child_female_11_to_12=#childFemale11To12#,
    rbsk_team_id=#rbskTeamId#, location_id=#locationId#, modified_by=#modifiedBy#, modified_on=now()
    WHERE id=#id#;',false,'ACTIVE','Update School',true,'685089f3-417e-4c68-84ae-989588c803fd'),
	 (75398,'2020-06-04 00:00:00',75398,'2020-06-04 00:00:00','system_config_update','oldKey,isActive,value,key','update system_configuration set key_value = #value# , system_key = #key#, is_active = #isActive# where system_configuration.system_key = #oldKey#',false,'ACTIVE','update system configuration',true,'acb7af62-94cf-40fd-b82a-e7cd177ef4a1'),
	 (75398,'2020-07-09 00:00:00',75398,'2020-07-09 00:00:00','translation_label_update','oldKey,isMobileLabel,isTranslationPending,language,text','UPDATE internationalization_label_master SET custom3b=#isMobileLabel#, text =#text#, translation_pending=#isTranslationPending#,modified_on=now()
 WHERE key = #oldKey# and language=#language#;',false,'ACTIVE',NULL,true,'ca191c03-3147-4e9f-be41-7e6ce31878ad'),
	 (1,'2019-08-22 00:00:00',63746,'2019-09-23 16:04:47.822','get_rch_register_mother_service_detailed_info','preg_reg_id','
with preg_member as (
    select * from rch_pregnancy_registration_det where id = #preg_reg_id#
)
,pre_preg_comli as (
    select
    string_agg(
     distinct
	 		case
    	        when previous_pregnancy_complication = ''PLPRE'' then ''Placenta previa''
    	        when previous_pregnancy_complication = ''PRETRM'' then ''Pre term''
                when previous_pregnancy_complication = ''CONVLS'' then ''Convulsion''
                when previous_pregnancy_complication = ''MLPRST'' then ''Malpresentation''
    	        when previous_pregnancy_complication = ''PRELS'' then ''Previous LSCS''
    	        when previous_pregnancy_complication = ''TWINS'' then ''Twins''
    	        when previous_pregnancy_complication = ''SBRTH'' then ''Still birth''
    	        when previous_pregnancy_complication = ''P2ABO'' then ''Previous 2 abortions''
    	        when previous_pregnancy_complication = ''KCOSCD'' then ''Known case of sickle cell disease''
    	        when previous_pregnancy_complication = ''CONGDEF'' then ''Congenital Defects''
    	        when previous_pregnancy_complication = ''SEVANM'' then ''Severe Anemia''
    	        when previous_pregnancy_complication = ''OBSLBR'' then ''Obstructed Labour''
    	        when previous_pregnancy_complication = ''CAESARIAN'' then ''Caesarian Section''
    	        when previous_pregnancy_complication = ''OTHER'' then ''Other''
    	        when previous_pregnancy_complication = ''NONE'' then ''None''
    	        when previous_pregnancy_complication = ''NK'' then ''Not known''
    	        else previous_pregnancy_complication
            end
            , '', '') as previous_complication
    from rch_anc_master rch
    left join rch_anc_previous_pregnancy_complication_rel on rch.id = anc_id
    where rch.pregnancy_reg_det_id = #preg_reg_id#
    	and previous_pregnancy_complication is not null
    group by pregnancy_reg_det_id
)
,basic_member_info as (
    select
    preg.member_id,
    case
        when fam.family_id is null then ''N/A''
        else fam.family_id
    end as family_id,
    case
    	when date_of_delivery is null then ''N/A''
    	else to_char(date_of_delivery,''dd-MM-yyyy'')
	end as date_of_delivery,
    mem.unique_health_id,
    case
    	when preg.lmp_date is null then ''N/A''
    	else to_char(preg.lmp_date,''dd-MM-yyyy'')
	end as lmp_date,
    case
    	when preg.reg_service_date is null then ''N/A''
    	else to_char(preg.reg_service_date,''dd-MM-yyyy'')
	end as reg_service_date,
    case
    	when reg_service_date is not null and lmp_date is not null then cast(TRUNC(DATE_PART(''day'', cast(reg_service_date as timestamp) - cast(lmp_date as timestamp))/7) as text)
    	else null
	end as pregnancy_week_number,
    preg.member_name,
    case
    	when early_anc is true then ''Yes''
    	else ''No''
	end as twelve_pregnancy_week_number,
    case
    	when mem.middle_name is null then ''N/A''
    	else mem.middle_name
	end as husband_name,
    case
    	when to_char(preg.edd,''dd-MM-yyyy'') is null then ''N/A''
    	else to_char(preg.edd,''dd-MM-yyyy'')
	end as edd,
    case
    	when cast(preg.age_during_delivery as text) is null then ''N/A''
    	else cast(preg.age_during_delivery as text)
	end as age_during_delivery,
    case
    	when to_char(mem.dob,''dd-MM-yyyy'') is null then ''N/A''
    	else to_char(mem.dob,''dd-MM-yyyy'')
	end as dob,
    case
    	when preg.expected_delivery_place is null then ''N/A''
    	when preg.expected_delivery_place = ''CHIRANJEEVIHOSP'' then ''Private Hospital (Chiranjeevi)''
    	when preg.expected_delivery_place = ''PRIVATEHOSP'' then ''Private Hospital''
    	when preg.expected_delivery_place = ''DISTRICTHOSP'' then ''District Hospital''
    	when preg.expected_delivery_place = ''SUBDISTRICTHOSP'' then ''Sub-District Hospital''
    	when preg.expected_delivery_place = ''OTHER'' then ''Other''
    	when preg.expected_delivery_place = ''TRUSTHOSP'' then ''Trust Hospital''
    	when preg.expected_delivery_place = ''SUBCENTER'' then ''Subcenter''
    	else preg.expected_delivery_place
	end as expected_delivery_place,
    case
    	when mem.weight is null then null
    	else cast(round(cast(mem.weight as numeric), 1) as text)
	end as weight,
    case
    	when mem.blood_group is null then ''N/A''
    	else mem.blood_group
	end as blood_group,
    case
    	when (fam.address1 is null and fam.address2 is null) then ''N/A''
    	else
    	    case
    	        when fam.address1 is null then fam.address2
    	        when fam.address2 is null then fam.address1
    	        else concat(fam.address1, '','', fam.address2)
            end
	end as address,
    case
    	when mem.mobile_number is null then ''N/A''
    	else mem.mobile_number
	end as mobile_number,
	case
		when rel.value = ''HINDU'' then ''Hindu''
		when rel.value = ''CHRISTIAN'' then ''Christian''
		when rel.value = ''MUSLIM'' then ''Muslim''
		when rel.value = ''OTHERS'' then ''Others''
		else rel.value
	end as religion,
	case
		when cas.value = ''GENERAL'' then ''General''
		else cas.value
	end as cast,
    case
    	when del_week is null then ''N/A''
	 	when fam.bpl_flag then ''BPL''
	 	else ''APL''
 	end as bpl_flag,
    case
    	when pre_com.previous_complication is null then ''N/A''
    	else pre_com.previous_complication
	end as previous_complication,
	preg.total_out_come as total_child_out_come,
	case
	    when mem.jsy_beneficiary is true then ''Yes''
	    else ''No''
    end as jsy_beneficiary,
    case
        when mem.kpsy_beneficiary is true then ''Yes''
        else ''No''
    end as kpsy_beneficiary,
    case
        when mem.iay_beneficiary is true then ''Yes''
        else ''No''
    end as iay_beneficiary,
    case
        when mem.year_of_wedding is null then ''N/A''
        else cast(mem.year_of_wedding as text)
    end as year_of_wedding
    from rch_pregnancy_analytics_details preg
    inner join imt_member mem on preg.member_id = mem.id
    inner join imt_family fam on mem.family_id = fam.family_id
    left join listvalue_field_value_detail cas on fam.caste = (cast(cas.id as varchar))
    left join listvalue_field_value_detail rel on fam.religion = (cast(rel.id as varchar))
    left join pre_preg_comli pre_com on true = true
    where preg.pregnancy_reg_id = #preg_reg_id#
)
,preg_reg_id_for_pre_preg_detail as (
    select
    preg.id
    from rch_pregnancy_registration_det preg
    inner join preg_member mem on mem.member_id = preg.member_id
    where preg.reg_date < mem.reg_date
    	and preg.id != mem.id
    	and preg.member_id = mem.member_id
    	and preg.state = ''DELIVERY_DONE''
)
,gender_info as(
    select
    string_agg(case when gender = ''M'' then ''Male'' when gender = ''F'' then ''Female'' else ''N/A'' end, '','') as preg_gender,
    pregnancy_reg_det_id
    from rch_wpd_mother_master mother
    left join rch_wpd_child_master child on mother.id = child.wpd_mother_id
    where pregnancy_reg_det_id in (select * from  preg_reg_id_for_pre_preg_detail)
    group by pregnancy_reg_det_id
)
,previous_pregnancy_details as (
 	select
	cast(json_agg(t) as text) as previous_pregnancy_details_json from (
    	select
    	reg_id.id,
    	string_agg(value, '','') as preg_complication,
    	preg_gender
    	from preg_reg_id_for_pre_preg_detail reg_id
    	left join gender_info on reg_id.id = gender_info.pregnancy_reg_det_id
    	left join rch_anc_master anc on reg_id.id = anc.pregnancy_reg_det_id
    	left join rch_anc_dangerous_sign_rel rel on rel.anc_id = anc.id
    	left join listvalue_field_value_detail list on rel.dangerous_sign_id = list.id
    	group by reg_id.id, preg_gender
  	) t
)
,previous_preg_complication as (
	select
	STRING_AGG(previous_pregnancy_complication, '', '') as previous_preg_complication,
	signs.anc_id
	from rch_anc_master anc
	inner join preg_member pm on anc.pregnancy_reg_det_id  = pm.id
	inner join rch_anc_previous_pregnancy_complication_rel signs on anc.id = signs.anc_id
	group by signs.anc_id
)
,anc_danger_signs as (
	select
	STRING_AGG(list.value, '', '') as anc_danger_signs,
	signs.anc_id
	from rch_anc_master anc
	inner join preg_member pm on anc.pregnancy_reg_det_id  = pm.id
	inner join rch_anc_dangerous_sign_rel signs on anc.id = signs.anc_id
	inner join listvalue_field_value_detail list on list.id = signs.dangerous_sign_id
	group by signs.anc_id
)
,pre_delivery_care as (
	select cast( json_agg(t) as text) as pre_delivery_care_json from (
		select
		case
			when service_date is null then ''N/A''
			else to_char(service_date,''dd-MM-yyyy'')
		end as inspection_date,
		case
			when ins_place.name is not null then ins_place.name
			else
			    case
			        when anc.delivery_place is null then ''N/A''
			        when anc.delivery_place = ''108_AMBULANCE'' then ''108 Ambulance''
                    when anc.delivery_place = ''HOSP'' then ''Hospital''
                    when anc.delivery_place = ''HOME'' then ''Home''
                    when anc.delivery_place = ''ON_THE_WAY'' then ''On the way''
                    when anc.delivery_place = ''THISHOSP'' then ''This Hospital''
                    when anc.delivery_place = ''MAMTA_DAY'' then ''Mamta Day''
                    else anc.delivery_place
                end
		end as inspection_place,
		case
			when ins_place_type.value is not null then ins_place_type.value
			else null
		end as inspection_place_type,
		case
			when ((cast(anc.service_date as text) is null) or (cast(rprd.lmp_date as text) is null)) then ''0''
			else TRUNC(DATE_PART(''day'', cast(anc.service_date as timestamp) - cast(rprd.lmp_date as timestamp))/7)
		end as pregnancy_week,
		case
			when anc.weight is null then null
			else cast(round(cast(anc.weight as numeric), 1) as text)
		end as preg_women_weight,
		case
			when cast(anc.hiv_test as text) is null then ''N/A''
			when cast(anc.hiv_test as text) = ''POSITIVE'' then ''Positive''
			when cast(anc.hiv_test as text) = ''NOT_DONE'' then ''Not done''
			when cast(anc.hiv_test as text) = ''NEGATIVE'' then ''Negative''
			else cast(anc.hiv_test as text)
		end as hiv_test,
		case
			when cast(anc.vdrl_test as text) is null then ''N/A''
			when cast(anc.vdrl_test as text) = ''POSITIVE'' then ''Positive''
			when cast(anc.vdrl_test as text) = ''NOT_DONE'' then ''Not done''
			when cast(anc.vdrl_test as text) = ''NEGATIVE'' then ''Negative''
			else cast(anc.vdrl_test as text)
		end as vdrl_test,
		case
			when cast(systolic_bp as text) is null then ''N/A''
			else cast(systolic_bp as text)
		end as systolic_bp,
		case
			when cast(diastolic_bp as text) is null then ''N/A''
			else cast(diastolic_bp as text)
		end as diastolic_bp,
		case
			when cast(haemoglobin_count as text) is null then null
			else cast(round(cast(haemoglobin_count as numeric), 1) as text)
		end as haemoglobin_count,
		case
			when cast(fa_tablets_given as text) is null then ''N/A''
			else cast(fa_tablets_given as text)
		end as falic_acid_tablets,
		case
			when cast(ifa_tablets_given as text) is null then null
			else cast(ifa_tablets_given as text)
		end as ifa_tablet,
		case
			when urine_test_done is null then ''N/A''
			when urine_test_done then ''Yes''
			else ''No''
		end as urine_test_done,
		case
			when cast(urine_albumin as text) is null then ''N/A''
			else urine_albumin
		end as urine_albumin,
		case
			when cast(urine_sugar as text) is null then ''N/A''
			else cast(urine_sugar as text)
		end as urine_sugar,
		case
			when sugar_test_before_food_val is null then ''N/A''
			else cast(sugar_test_before_food_val as text)
		end as sugar_test_before_food_val,
		case
			when cast(sugar_test_after_food_val as text) is null then ''N/A''
			else cast(sugar_test_after_food_val as text)
		end as sugar_test_after_food_val,
		case
			when immun.immunisation_given is not null and immun.immunisation_given = ''TT1'' then to_char(immun.given_on,''dd-MM-yyyy'')
			else null
		end as tt1,
		case
			when immun.immunisation_given is not null and immun.immunisation_given = ''TT2'' then to_char(immun.given_on,''dd-MM-yyyy'')
			else null
		end as tt2,
		case
			when immun.immunisation_given is not null and immun.immunisation_given = ''TT_BOOSTER'' then to_char(immun.given_on,''dd-MM-yyyy'')
			else null
		end as ttb,
		case
			when cast(foetal_height as text) is null then ''N/A''
			else cast(foetal_height as text)
		end as foetal_height,
		case
			when foetal_heart_sound is null then ''N/A''
			when foetal_heart_sound is true then ''Yes''
			else ''No''
		end as foetal_heart_sound,
		case
			when foetal_position is null then ''N/A''
			when foetal_position = ''CBMO'' then ''Cannot be made out''
			when foetal_position = ''TRANSVERSE'' then ''Transverse''
			when foetal_position = ''VERTEX'' then ''Vertex''
			when foetal_position = ''OBLIQUE'' then ''Oblique''
			when foetal_position = ''BREECH'' then ''Breech''
			else cast(foetal_position as text)
		end as foetal_position,
		case
			when foetal_movement is null then ''N/A''
			when foetal_movement = ''USUAL'' then ''Usual''
			when foetal_movement = ''ABSENT'' then ''Absent''
			when foetal_movement = ''DECREASED'' then ''Decreased''
			when foetal_movement = ''true'' then ''Yes''
			when foetal_movement = ''false'' then ''No''
			else cast(foetal_movement as text)
		end as foetal_movement,
		case
			when cast(anc.referral_done as text) is null then ''Not Applicable''
			when cast(anc.referral_done as text) = ''false'' OR cast(anc.referral_done as text) = ''NOT_REQUIRED'' then ''No''
			when cast(anc.referral_done as text) = ''true'' then ''Yes''
			else cast(anc.referral_done as text)
		end as referral_done,
		case
			when anc.family_planning_method is null then ''N/A''
			when anc.family_planning_method = ''NONE'' then ''None''
            when anc.family_planning_method = ''ANTARA'' then ''Antara''
            when anc.family_planning_method = ''IUCD5'' then ''IUCD 5 Years''
            when anc.family_planning_method = ''IUCD10'' then ''IUCD 10 Years''
            when anc.family_planning_method = ''CONDOM'' then ''Condom''
            when anc.family_planning_method = ''ORALPILLS'' then ''Oral Pills''
            when anc.family_planning_method = ''CHHAYA'' then ''Chhaya''
            when anc.family_planning_method = ''ANTARA'' then ''Antara''
            when anc.family_planning_method = ''CONTRA'' then ''Emergency Contraceptive Pills''
            when anc.family_planning_method = ''FMLSTR'' then ''Female Sterilization''
            when anc.family_planning_method = ''MLSTR'' then ''Male Sterilization''
            when anc.family_planning_method = ''OTHER'' then ''Other''
            when anc.family_planning_method = ''CHHANT'' then ''Chhant''
			else anc.family_planning_method
		end as family_planning_method,
		case
			when cast(dead_flag as text) = ''true'' then ''No''
			else ''Yes''
		end as alive_flag,
		case
			when death_reas.value is null then ''N/A''
			else death_reas.value
		end as death_reason,
		case
			when anc.death_date is null then ''N/A''
			else to_char(cast(anc.death_date as date),''dd-MM-yyyy'')
		end as death_date,
		case
			when anc.place_of_death is null then ''N/A''
			when anc.place_of_death = ''HOME'' then ''Home''
			when anc.place_of_death = ''HOSP'' then ''Hospital''
			when anc.place_of_death = ''ON_THE_WAY'' then ''On The Way''
			else anc.place_of_death
		end as death_place,
		case
			when extract(day from (case when anc.service_date is not null then anc.service_date else anc.created_on end) - rprd.lmp_date) <= 92 then cast(1 as text)
			when extract(day from (case when anc.service_date is not null then anc.service_date else anc.created_on end) - rprd.lmp_date) <= 190 then cast(2 as text)
			when extract(day from (case when anc.service_date is not null then anc.service_date else anc.created_on end) - rprd.lmp_date) <= 246 then cast(3 as text)
			when extract(day from (case when anc.service_date is not null then anc.service_date else anc.created_on end) - rprd.lmp_date) > 246 then cast(4 as text)
			else ''Unscheduled''
		end as anc_visit_number,
		case
			when DATE_PART(''hour'', cast(service_date as timestamp) - cast(rwmm.date_of_delivery as timestamp)) <= 24 then ''Yes''
			else null
		end as is_cortico_steroid_given,
		ads.anc_danger_signs,
		ppc.previous_preg_complication,
    	case
            when anc.albendazole_given is true then ''Yes''
            when anc.albendazole_given is false then ''No''
            else ''N/A''
        end as albendazole_given,
        if.family_id,
        case
            when anc.hbsag_test is null then ''N/A''
            when anc.hbsag_test = ''REACTIVE'' then ''Reactive''
            when anc.hbsag_test = ''NOT_DONE'' then ''Not Done''
            when anc.hbsag_test = ''NON_REACTIVE'' then ''Non Reactive''
            else anc.hbsag_test
        end as hbsag_test,
        case
            when anc.sickle_cell_test is null then ''N/A''
            when anc.sickle_cell_test = ''SICKLE_CELL'' then ''Sickle Cell''
            when anc.sickle_cell_test = ''SICKLE_CELL_DISEASE'' then ''Sickle Cell Disease''
            when anc.sickle_cell_test = ''POSITIVE'' then ''Positive''
            when anc.sickle_cell_test = ''NEGATIVE'' then ''Negative''
            when anc.sickle_cell_test = ''NOT_DONE'' then ''Not Done''
            when anc.sickle_cell_test = ''SOCIAL_CELL_TRAIT'' then ''Social Cell Trait''
            else anc.sickle_cell_test
        end as sickle_cell_test,
        case
            when anc.calcium_tablets_given is null then ''N/A''
            else cast(anc.calcium_tablets_given as text)
        end as calcium_tablets_given,
        case
            when anc.is_high_risk_case is true then ''Yes''
            else ''No''
        end as is_high_risk_case
		from rch_anc_master anc
        left join rch_immunisation_master immun on anc.id = immun.visit_id
        	and immun.immunisation_given in ( ''TT1'',''TT2'',''TT_BOOSTER'')
    	left join rch_wpd_mother_master rwmm on anc.pregnancy_reg_det_id = rwmm.pregnancy_reg_det_id
    		and rwmm.has_delivery_happened is true and rwmm.state is null
		left join anc_danger_signs ads on ads.anc_id = anc.id
		left join previous_preg_complication ppc on ppc.anc_id = anc.id
		left join rch_pregnancy_registration_det rprd on rprd.id = anc.pregnancy_reg_det_id
		left join health_infrastructure_details ins_place on anc.health_infrastructure_id = ins_place.id
		left join listvalue_field_value_detail ins_place_type on anc.type_of_hospital = ins_place_type.id
		left join listvalue_field_value_detail death_reas on anc.death_reason = (cast(death_reas.id as varchar))
    	left join imt_family if on if.id = anc.family_id
		where anc.pregnancy_reg_det_id = #preg_reg_id#
		order by service_date
	) t
)
,child_congential_deformity as (
	select
	STRING_AGG(list.value, '', '') as child_congential_deformity,
	deformity.wpd_id
	from preg_member
	inner join rch_wpd_mother_master wpd_mother on wpd_mother.pregnancy_reg_det_id = preg_member.id
	inner join rch_wpd_child_master wpd_child on wpd_child.wpd_mother_id = wpd_mother.id
	inner join rch_wpd_child_congential_deformity_rel deformity on deformity.wpd_id = wpd_child.id
	inner join listvalue_field_value_detail list on list.id = deformity.congential_deformity
	group by deformity.wpd_id
)
,delivery_result as(
	select cast(json_agg(t) as text) as delivery_result_json from (
		select
		child.member_id,
		case
			when mother.pregnancy_outcome in (''SPONT_ABORTION'',''ABORTION'') then
				case
					when infra.name is not null then concat(infra.name,'', '', hos.value)
					else
						case
							when hos.value is not null then hos.value
							else delivery_place
						end
                end
        end as abortion_place,
        case
            when mother.pregnancy_outcome in (''SPONT_ABORTION'',''ABORTION'') then ''true''
            else ''false''
        end as is_abortion_done,
		case
			when mother.date_of_delivery is null then ''N/A''
			else to_char(mother.date_of_delivery,''dd-MM-yyyy HH:mm:ss'')
		end as date_of_delivery,
		case
		    when infra.name is not null then infra.name
			else
			    case
			        when delivery_place is null then ''N/A''
			        when delivery_place = ''108_AMBULANCE'' then ''108 Ambulance''
                    when delivery_place = ''HOSP'' then ''Hospital''
                    when delivery_place = ''HOME'' then ''Home''
                    when delivery_place = ''ON_THE_WAY'' then ''On the way''
                    when delivery_place = ''THISHOSP'' then ''This Hospital''
                    when delivery_place = ''MAMTA_DAY'' then ''Mamta Day''
                    else delivery_place
                end
		end as delivery_place,
		case
		    when hos.value is not null then hos.value
			else null
		end as delivery_place_type,
		case
			when delivery_done_by is null then ''N/A''
			when delivery_done_by = ''NON-TBA'' then ''Non TBA''
			when delivery_done_by = ''DOCTOR'' then ''Doctor''
			when delivery_done_by = ''CY-Doctor'' then ''CY Doctor''
			when delivery_done_by = ''STAFF_NURSE'' then ''Staff Nurse''
			when delivery_done_by = ''NURSE'' then ''Nurse''
			when delivery_done_by = ''NON_TBA'' then ''Non TBA''
			else delivery_done_by
		end as delivery_done_by,
		case
			when mother.type_of_delivery is null then ''N/A''
			when mother.type_of_delivery = ''CAESAREAN'' then ''Caesarean''
			when mother.type_of_delivery = ''ASSIST'' then ''Assist''
			when mother.type_of_delivery = ''NORMAL'' then ''Normal''
			else mother.type_of_delivery
		end as type_of_delivery,
		case
			when mother.other_danger_signs is null then ''N/A''
			else mother.other_danger_signs
		end as other_danger_signs,
		case
			when discharge_date is null then ''N/A''
			else to_char( discharge_date,''dd-MM-yyyy HH:mm:ss'')
		end as discharge_date,
		case
			when child.pregnancy_outcome = ''LBIRTH'' then ''Yes''
			when child.pregnancy_outcome = ''SBIRTH'' then ''No''
			else ''N/A''
		end as is_alive_dead,
		case
	     	when was_premature then ''Yes''
			else ''No''
     	end as was_premature,
		case
			when gender is null then ''N/A''
	     	when gender = ''F'' then ''Female''
	     	else ''Male''
     	end as gender ,
		case
			when baby_cried_at_birth is null then ''N/A''
			when baby_cried_at_birth then ''Yes''
			else ''No''
		end as baby_cried_at_birth,
		case
			when birth_weight is null then null
			else cast(round(cast(birth_weight as numeric), 1) as text)
		end as birth_weight,
		case
			when child.breast_feeding_in_one_hour then ''Yes''
			else ''No''
		end as breast_feeding_in_one_hour,
		case
			when child.referral_place is null then ''N/A''
			else ''Yes''
		end as referral_perform,
		case
			when child.member_id is null then ''N/A''
			when max(case when immunisation_given = ''OPV_0'' then immun.given_on end) is not null then to_char(max(case when immunisation_given = ''OPV_0'' then immun.given_on end),''dd-MM-yyyy'')
			else ''No''
		end as opv_given,
		case
			when child.member_id is null then ''N/A''
			when max(case when immunisation_given = ''HEPATITIS_B_0'' then immun.given_on end) is not null then to_char(max(case when immunisation_given = ''HEPATITIS_B_0'' then immun.given_on end),''dd-MM-yyyy'')
			else ''No''
		end as hep_b_given,
		case
			when child.member_id is null then ''N/A''
			when max(case when immunisation_given = ''VITAMIN_K'' then immun.given_on end) is not null then to_char(max(case when immunisation_given = ''VITAMIN_K'' then immun.given_on end),''dd-MM-yyyy'')
			else ''No''
		end as vit_k_given,
		case
			when child.member_id is null then ''N/A''
			when max(case when immunisation_given = ''BCG'' then immun.given_on end) is not null then to_char(max(case when immunisation_given = ''BCG'' then immun.given_on end),''dd-MM-yyyy'')
			else ''No''
		end as bcg_given,
		case
			when child.referral_infra_id is not null then ''Yes''
			else ''No''
		end as is_referral_done,
		cd.child_congential_deformity,
        case
            when mother.has_delivery_happened is true then ''Yes''
            else ''No''
        end as has_delivery_happened,
        case
            when mother.pregnancy_outcome is null then ''N/A''
            when mother.pregnancy_outcome = ''SPONT_ABORTION'' then ''Spontaneous Abortion''
            when mother.pregnancy_outcome = ''LBIRTH'' then ''Live Birth''
            when mother.pregnancy_outcome = ''SBIRTH'' then ''Still Birth''
            when mother.pregnancy_outcome = ''ABORTION'' then ''Abortion''
            when mother.pregnancy_outcome = ''MTP'' then ''Medical Termination of Pregnancy''
            else mother.pregnancy_outcome
        end as pregnancy_outcome,
        case
            when mother.mother_alive is true then ''Yes''
            else ''No''
        end as mother_alive,
        case
            when mother.is_high_risk_case is true then ''Yes''
            else ''No''
        end as is_high_risk_case
		from rch_wpd_mother_master mother
		left join rch_wpd_child_master child on mother.id = child.wpd_mother_id
		left join child_congential_deformity cd on cd.wpd_id = child.id
		left join rch_immunisation_master immun on child.id = immun.visit_id
			and visit_type = ''FHW_WPD''
			and  member_type = ''C''
		left join health_infrastructure_details infra on mother.health_infrastructure_id = infra.id
		left join listvalue_field_value_detail hos on mother.type_of_hospital = hos.id
		where mother.pregnancy_reg_det_id = #preg_reg_id#
			and mother.has_delivery_happened = true
			and (mother.state is null or mother.state != ''MARK_AS_FALSE_DELIVERY'')
		group by wpd_mother_id, mother.date_of_delivery, delivery_place, delivery_done_by, mother.type_of_delivery,
			discharge_date, was_premature, gender, baby_cried_at_birth, birth_weight, child.breast_feeding_in_one_hour,
			mother.pregnancy_outcome, infra.name, infra.address, hos.value, child.pregnancy_outcome, immun.visit_id, child.member_id,
			mother.other_danger_signs, child.referral_place, cd.child_congential_deformity, child.referral_infra_id,
			mother.has_delivery_happened, mother.mother_alive, mother.is_high_risk_case
	) t
)
,pnc_visit as (
	select
	cast(json_agg(t) as text) as pnc_visit_json from (
		select
		to_char(mas.service_date,''dd-MM-yyyy'') as service_date,
		case
			when mother_pnc.ifa_tablets_given is null then ''N/A''
			else cast(mother_pnc.ifa_tablets_given as text)
		end as ifa_tablets_given,
		case
			when mother_pnc.other_danger_sign is null then ''No''
			else cast(mother_pnc.other_danger_sign as text)
		end as other_danger_sign,
		case
			when referral.value is null then ''N/A''
			else referral.value
		end as referral_place,
		case
			when mother_pnc.family_planning_method is null then ''N/A''
			when mother_pnc.family_planning_method = ''NONE'' OR mother_pnc.family_planning_method = ''none'' then ''None''
            when mother_pnc.family_planning_method = ''ANTARA'' then ''Antara''
            when mother_pnc.family_planning_method = ''IUCD5'' then ''IUCD 5 Years''
            when mother_pnc.family_planning_method = ''IUCD10'' then ''IUCD 10 Years''
            when mother_pnc.family_planning_method = ''CONDOM'' then ''Condom''
            when mother_pnc.family_planning_method = ''ORALPILLS'' then ''Oral Pills''
            when mother_pnc.family_planning_method = ''CHHAYA'' then ''Chhaya''
            when mother_pnc.family_planning_method = ''ANTARA'' then ''Antara''
            when mother_pnc.family_planning_method = ''CONTRA'' then ''Emergency Contraceptive Pills''
            when mother_pnc.family_planning_method = ''FMLSTR'' then ''Female Sterilization''
            when mother_pnc.family_planning_method = ''MLSTR'' then ''Male Sterilization''
            when mother_pnc.family_planning_method = ''OTHER'' then ''Other''
			when mother_pnc.family_planning_method = ''CHHANT'' then ''Chhant''
			else mother_pnc.family_planning_method
		end as family_planning_method,
		case
	    	when mother_pnc.is_alive is false then ''No''
	    	else ''Yes''
    	end as is_alive,
		case
			when mother_death_reason.value is null then ''N/A''
			else mother_death_reason.value
		end as death_reason,
		case
			when mother_pnc.death_date is null then ''N/A''
			else to_char(cast(mother_pnc.death_date as date),''dd-MM-yyyy'')
		end as death_date,
		case
			when mother_pnc.place_of_death is null then ''N/A''
			when mother_pnc.place_of_death = ''HOME'' then ''Home''
			when mother_pnc.place_of_death = ''HOSP'' then ''Hospital''
			when mother_pnc.place_of_death = ''ON_THE_WAY'' then ''On The Way''
			else mother_pnc.place_of_death
		end as place_of_death,
		concat(''['',
		    string_agg(
		    cast((
		        select
		        row_to_json(a)
		        from (
		            select
		            child_pnc.*,
		            child_death.value as child_death_reason,
		            case
		                when child_pnc.child_weight is not null then cast(round(cast(child_pnc.child_weight as numeric), 1) as text)
		                else null
                    end as pnc_child_weight,
		            case
		                when child_pnc.is_alive is false then ''No''
		                else ''Yes''
                    end as is_child_alive,
                    to_char(child_pnc.death_date,''dd-MM-yyyy'') as parsed_death_date,
                    case
                        when child_pnc.place_of_death is null then null
                        when child_pnc.place_of_death = ''HOME'' then ''Home''
                        when child_pnc.place_of_death = ''HOSP'' then ''Hospital''
                        when child_pnc.place_of_death = ''ON_THE_WAY'' then ''On the way''
                    end as child_place_of_death,
		            case
                        when extract(day from (case when mas.service_date is not null then mas.service_date else mas.created_on end) - im.dob) <= 1 then cast(1 as text)
                        when extract(day from (case when mas.service_date is not null then mas.service_date else mas.created_on end) - im.dob) <= 3 then cast(2 as text)
                        when extract(day from (case when mas.service_date is not null then mas.service_date else mas.created_on end) - im.dob) <= 7 then cast(3 as text)
                        when extract(day from (case when mas.service_date is not null then mas.service_date else mas.created_on end) - im.dob) <= 14 then cast(4 as text)
                        when extract(day from (case when mas.service_date is not null then mas.service_date else mas.created_on end) - im.dob) <= 21 then cast(5 as text)
                        when extract(day from (case when mas.service_date is not null then mas.service_date else mas.created_on end) - im.dob) <= 28 then cast(6 as text)
                        else ''Unscheduled''
                    end as pnc_visit_number,
                    to_char(mas.service_date,''dd-MM-yyyy'') as service_date,
                    concat_ws('' '', im.first_name, im.middle_name, im.last_name) as child_name
					where child_pnc.id is not null
                ) a
            ) as text),
            '',''),
        '']'') as child_pnc_dto,
		case
			when extract(day from (case when mas.service_date is not null then mas.service_date else mas.created_on end) - im.dob) <= 1 then cast(1 as text)
 			when extract(day from (case when mas.service_date is not null then mas.service_date else mas.created_on end) - im.dob) <= 3 then cast(2 as text)
			when extract(day from (case when mas.service_date is not null then mas.service_date else mas.created_on end) - im.dob) <= 7 then cast(3 as text)
 			when extract(day from (case when mas.service_date is not null then mas.service_date else mas.created_on end) - im.dob) <= 14 then cast(4 as text)
 			when extract(day from (case when mas.service_date is not null then mas.service_date else mas.created_on end) - im.dob) <= 21 then cast(5 as text)
			when extract(day from (case when mas.service_date is not null then mas.service_date else mas.created_on end) - im.dob) <= 28 then cast(6 as text)
 			else ''Unscheduled''
		end as pnc_visit_number
		from rch_pnc_master mas
		left join rch_pnc_mother_master mother_pnc on mas.id = mother_pnc.pnc_master_id
		left join rch_pnc_child_master child_pnc on mas.id = child_pnc.pnc_master_id
		left join imt_member im on child_pnc.child_id = im.id
		left join listvalue_field_value_detail referral on mother_pnc.referral_place = referral.id
		left join listvalue_field_value_detail mother_death_reason on mother_pnc.death_reason = cast(mother_death_reason.id as text)
		left join listvalue_field_value_detail child_death on cast(child_death.id as text) = child_pnc.death_reason
		where mas.pregnancy_reg_det_id = #preg_reg_id#
		group by mas.id,mother_pnc.ifa_tablets_given, mother_pnc.other_danger_sign, referral.value,
			mother_pnc.family_planning_method, mother_pnc.is_alive,
			mother_death_reason.value, mother_pnc.death_date, mother_pnc.place_of_death, im.dob
		order by mas.service_date
 	) t
)
select
*
from basic_member_info, previous_pregnancy_details, pre_delivery_care, delivery_result, pnc_visit
',true,'ACTIVE',NULL,true,'3a94ebdb-d313-439c-8f50-7f7bc57a9f01'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','school_create','isPrimarySchool,englishName,code,childFemale9To10,schoolType,isGurukul,childFemale6To8,childMale6To8,locationId,contactNumber,childFemale11To12,modifiedBy,rbskTeamId,isHigherSecondarySchool,otherSchoolType,isPrePrimarySchool,noOfTeachers,principalName,childFemale1To5,childMale11To12,isMadresa,contactPersonName,createdBy,childMale1To5,name,grantType,isOther,childMale9To10','INSERT INTO school_master(
    "name", code, english_name, grant_type, school_type, no_of_teachers, principal_name, contact_person_name, is_pre_primary_school, is_primary_school, is_higher_secondary_school, is_madresa, is_gurukul, is_other, other_school_type, contact_number,
    child_male_1_to_5, child_female_1_to_5, child_male_6_to_8, child_female_6_to_8, child_male_9_to_10, child_female_9_to_10, child_male_11_to_12, child_female_11_to_12,
    rbsk_team_id, location_id, created_by, created_on, modified_by, modified_on)
    VALUES (
        #name#, #code#, #englishName#, #grantType#, #schoolType#, #noOfTeachers#, #principalName#, #contactPersonName#, #isPrePrimarySchool#, #isPrimarySchool#, #isHigherSecondarySchool#, #isMadresa#, #isGurukul#, #isOther#, #otherSchoolType#, #contactNumber#,
        #childMale1To5#, #childFemale1To5#, #childMale6To8#, #childFemale6To8#, #childMale9To10#, #childFemale9To10#, #childMale11To12#, #childFemale11To12#,
        #rbskTeamId#, #locationId#, #createdBy#, now(), #modifiedBy#, now()
    );',false,'ACTIVE','Create School',true,'c2a20050-2738-465f-a0e1-39081d97c107'),
	 (75398,'2020-06-04 00:00:00',75398,'2020-06-04 00:00:00','retrieve_logged_actions_by_table_name_query_code','queryCode,tableName','SELECT
la.event_id as "eventId",
la.schema_name as "schemaName",
la.table_name as "tableName",
la.relid as "relId",
la.session_user_name as "sessionUserName",
la.action_tstamp_tx as "action_tstamp_tx",
la.action_tstamp_stm as "action_tstamp_stm",
la.action_tstamp_clk as "action_tstamp_clk",
la.transaction_id as "transactionId",
la.application_name as "applicationName",
la.client_port as "clientPort",
la.client_query as "clientQuery",
la.action as "action",
la.row_data -> ''id'' AS "oldId",
la.row_data -> ''code'' AS "oldCode",
la.row_data -> ''query'' AS "oldQuery",
la.row_data -> ''description'' AS "oldDescription",
la.row_data -> ''state'' AS "oldState",
la.row_data -> ''is_public'' AS "oldIsPublic",
la.row_data -> ''params'' AS "oldParams",
la.row_data -> ''created_on'' AS "oldCreatedOn",
la.row_data -> ''modified_on'' AS "oldModifiedOn",
la.row_data -> ''returns_result_set'' AS "oldReturnsResultSet",
la.changed_fields -> ''id'' AS "newId",
la.changed_fields -> ''code'' AS "newCode",
la.changed_fields -> ''query'' AS "newQuery",
la.changed_fields -> ''description'' AS "newDescription",
la.changed_fields -> ''state'' AS "newState",
la.changed_fields -> ''is_public'' AS "newIsPublic",
la.changed_fields -> ''params'' AS "newParams",
la.changed_fields -> ''created_on'' AS "newCreatedOn",
la.changed_fields -> ''modified_on'' AS "newModifiedOn",
la.changed_fields -> ''returns_result_set'' AS "newReturnsResultSet",
la.statement_only as "statementOnly"
FROM logged_actions la WHERE la.table_name = #tableName# AND 
la.row_data -> ''code'' = #queryCode# order by la.event_id desc',true,'ACTIVE','This query is used to retrieve the history of query code with all changes',true,'da210aba-151a-4f6d-b0fe-347e14432b74'),
	 (75398,'2020-06-04 00:00:00',75398,'2020-06-04 00:00:00','retrieve_limited_query_history','limit,searchKey,userId','SELECT * from query_history where user_id = #userId# AND  ( #searchKey# = null OR query ILIKE CONCAT(''%'', #searchKey#, ''%'' )) order by id desc limit #limit#',true,'ACTIVE','Fire postgres query to get limited records from query_history table for given user',true,'5ab98a63-ec6a-4f6c-8318-30b43dc06938'),
	 (69973,'2020-06-04 00:00:00',69973,'2020-06-04 00:00:00','mytecho_update_faq_status','loggedInUserId,id,status','UPDATE mytecho_faq_master SET is_active=#status#,modified_by = #loggedInUserId#,modified_on = NOW() WHERE id = #id#;',false,'ACTIVE',NULL,true,'73e7ca41-7573-4bb5-a926-7c7f31bc17ad'),
	 (69973,'2020-06-04 00:00:00',69973,'2020-06-04 00:00:00','mytecho_add_faq_category','loggedInUserId,value','insert into listvalue_field_value_detail(
	is_active, is_archive, last_modified_by, last_modified_on, value, field_key, file_size)
select true, false, #loggedInUserId# ,now(), #value#, ''my_techo_faq_category_type'', 0
where not exists (select id from listvalue_field_value_detail where value = #value#)',false,'ACTIVE',NULL,true,'3a2ce272-6287-44de-9888-ba3e7094ee69'),
	 (69973,'2020-06-04 00:00:00',69973,'2020-06-04 00:00:00','mytecho_update_category_value','id,value','update listvalue_field_value_detail set last_modified_on = now(), value = #value# where id = #id#',false,'ACTIVE',NULL,true,'f2a7b5e9-96f5-4d17-9f25-70187cd4a50e'),
	 (69973,'2020-06-04 00:00:00',69973,'2020-06-04 00:00:00','mytecho_get_faq_categorywise','id','select id from mytecho_faq_details where category_id = #id#',true,'ACTIVE',NULL,true,'66764598-bffa-4908-9b34-30423aaf9ef4'),
	 (75398,'2020-06-04 00:00:00',75398,'2020-06-04 00:00:00','update_stabilization_info_status','code,status','update
	rbsk_defect_stabilization_info
set
	status = #status#
where
	code = #code#',false,'ACTIVE',NULL,true,'399b37b2-2132-447b-a60f-b8902fd5e324'),
	 (1,'2019-05-31 00:00:00',60512,'2019-06-12 13:02:51.319','retrieve_all_hospitals_by_infra_type','infraType','select * from health_infrastructure_details where type = #infraType#',true,'ACTIVE',NULL,true,'3adb321b-1563-4278-9b24-ed7d6c49fa0a'),
	 (1,'2019-05-31 00:00:00',60512,'2019-07-30 12:50:32.937','retrieve_cmtc_nrc_centers_for_rbsk','userId','with t1 as (
select child_id from location_hierchy_closer_det 
where parent_id in 
	(select parent_id from location_hierchy_closer_det where child_id in (
	select loc_id from um_user_location where user_id = #userId# and state = ''ACTIVE'') and parent_loc_type in (''D'',''C''))
)
select * from health_infrastructure_details where location_id  in (select child_id from t1)
and (is_cmtc = true or is_nrc=true)',true,'ACTIVE',NULL,true,'38e5aa2b-8009-4061-aed1-82f9681b2fdd'),
	 (75398,'2020-06-04 00:00:00',75398,'2020-06-04 00:00:00','insert_rbsk_stabilization_info','code,description','insert
	into
		rbsk_defect_stabilization_info( code, description, status )
	values( #code#, #description#, ''ACTIVE'' );',false,'ACTIVE',NULL,true,'6ba3e709-b350-45f4-86f7-90521dcb6824'),
	 (75398,'2020-06-04 00:00:00',75398,'2020-06-04 00:00:00','retrieve_system_configuration_by_key','key','SELECT
    system_key as "key",
    is_active as "isActive",
    key_value as "value"
    FROM public.system_configuration
    WHERE system_key = #key#;',true,'ACTIVE','Retrieve System Configuration Details By Key',true,'91c31904-5a17-4eab-bcea-1be08c18929e'),
	 (75398,'2020-06-04 00:00:00',75398,'2020-06-04 00:00:00','update_system_configuration_by_key','isActive,value,key','UPDATE public.system_configuration
    SET
    is_active = #isActive#,
    key_value = #value#
    WHERE system_key = #key#;',false,'ACTIVE','Update System Configuration Details By Key',true,'bd4c270b-ce01-4961-81bf-76f4eff50a12'),
	 (75398,'2020-06-04 00:00:00',75398,'2020-06-04 00:00:00','insert_all_soh_element_permissions','elementId,permissionType','delete
from
	soh_element_permissions
where
	element_id = #elementId#
	and reference_id is not null;
insert
	into
		soh_element_permissions( element_id, permission_type)
	values(#elementId#, #permissionType#)',false,'ACTIVE',NULL,true,'76782704-2d81-45b8-adad-5d256ef75501'),
	 (75398,'2020-06-04 00:00:00',75398,'2020-06-04 00:00:00','soh_element_analysis','timelineType,lowerBoundForRural,targetMid,upperBound,upperBoundForRural,targetMidEnable,lowerBound,targetForRural,targetForUrban,target,elementName','with configurations as
    (
        select
        id,
        element_name,
        element_display_short_name,
        element_display_name,
        case
            when #upperBound# = null then upper_bound
            else #upperBound#
        end as upper_bound,
        case
            when #lowerBound# = null then lower_bound
            else #lowerBound#
        end as lower_bound,
        case
            when #upperBoundForRural# = null then upper_bound_for_rural
            else #upperBoundForRural#
        end as upper_bound_for_rural,
        case
            when #lowerBoundForRural# = null then lower_bound_for_rural
            else #lowerBoundForRural#
        end as lower_bound_for_rural,
        is_small_value_positive,
        field_name,
        module,
        case
            when #target# = null then target
            else #target#
        end as target,
        case
            when #targetForRural# = null then target_for_rural
            else #targetForRural#
        end as target_for_rural,
        case
            when #targetForUrban# = null then target_for_urban
            else #targetForUrban#
        end as target_for_urban,
        case
            when #targetMid# = null then target_mid
            else #targetMid#
        end as target_mid,
        created_by,
        created_on,
        modified_on,
        modified_by,
        is_public,
        element_display_name_postfix,
        case
            when #targetMidEnable# = null then target_mid_enable
            else #targetMidEnable#
        end as target_mid_enable,
        tabs_json,
        element_order
        from soh_element_configuration
        where element_name=#elementName#
    ),
    percentages as (
        select
        location_id,
        analytics.timeline_type,
        config.*,

        -- for calculate the value
        case
            when (analytics.element_name =''IMR'' and analytics.chart1 != 0) THEN (analytics.value * 1000 / analytics.chart1)
            when (analytics.element_name =''MMR'' and analytics.chart1 != 0) THEN (analytics.value * 100000 / analytics.chart1)
            when (analytics.element_name =''ID'' and analytics.chart1 != 0) THEN (analytics.value * 100 / analytics.chart1)
            when (analytics.element_name =''SR'' and analytics.male != 0) THEN (analytics.female * 1000 / analytics.male)
            when (analytics.element_name =''SAM'' and analytics.chart1 != 0) THEN (analytics.value * 100 / analytics.chart1)
            when (analytics.element_name =''LBW'' and analytics.value != 0) THEN ((analytics.chart1 + chart2) * 100 / analytics.value)
            when (analytics.element_name =''PREG_REG'' and analytics.value != 0) THEN ((analytics.chart1) * 100 / analytics.value)
            when (analytics.element_name =''FI'' and analytics.chart1 != 0) THEN ((analytics.value) * 100 / analytics.chart1)
            when (analytics.element_name =''Anemia'' and (analytics.chart1 + analytics.chart2 + analytics.chart3 + analytics.chart4) != 0) THEN ((analytics.chart1) * 100 / (analytics.chart1 + analytics.chart2 + analytics.chart3 + analytics.chart4))
            when (analytics.element_name =''VERIFICATION_SERVICE'' and analytics.value != 0) THEN ((analytics.chart1 * 100) / analytics.value)
            when (analytics.element_name =''PREG_VERIFICATION_SERVICE'' and analytics.value!=0) THEN ((analytics.chart1) * 100 / analytics.value)
            when (analytics.element_name =''AVG_SERVICE_DURATION'' and  analytics.value != 0) THEN ((analytics.chart1) / analytics.value)
            when (analytics.element_name =''NCD_HYPERTENSION'' and  analytics.chart1 != 0) THEN (((((30 * value) / days) * 100) / chart1) * 100) / config.target
            when (analytics.element_name =''NCD_DIABETES'' and  analytics.chart1 != 0) THEN (((((30 * value) / days) * 100) / chart1) * 100) / config.target
            when (analytics.element_name =''NCD_HYPERTENSION_CONFIRM'' and  analytics.chart4 != 0) THEN ((analytics.chart3 * 100 / analytics.chart4) * 100) / config.target
            when (analytics.element_name =''NCD_DIABETES_CONFIRM'' and analytics.chart4 != 0) THEN ((analytics.chart3 * 100 / analytics.chart4) * 100)/ config.target
            else 0
        end as calculatedTarget,

        -- for percentage calculation
        case
            when (analytics.element_name =''IMR'' and  analytics.chart1 != 0) THEN ((analytics.value * 1000 / analytics.chart1) * 100) / config.target
            when (analytics.element_name =''MMR'' and  analytics.chart1 != 0) THEN ((analytics.value * 100000 / analytics.chart1) * 100) / config.target
            when (analytics.element_name =''ID'' and  analytics.chart1 != 0) THEN (analytics.value * 100 / analytics.chart1)
            when (analytics.element_name =''SR'' and  analytics.male != 0) THEN (analytics.female * 1000 / analytics.male)
            when (analytics.element_name =''SAM'' and  analytics.chart1 != 0) THEN (analytics.value * 100 / analytics.chart1)
            when (analytics.element_name =''LBW'' and  analytics.value != 0) THEN ((analytics.chart1 + chart2) * 100 / analytics.value)
            when (analytics.element_name =''PREG_REG'' and  analytics.value != 0) THEN ((analytics.chart1) * 100 / analytics.value)
            when (analytics.element_name =''FI'' and  analytics.chart1 != 0) THEN ((analytics.value) * 100 / analytics.chart1)
            when (analytics.element_name =''Anemia'' and  (analytics.chart1 + analytics.chart2 + analytics.chart3 + analytics.chart4) != 0) THEN ((analytics.chart1) * 100 / (analytics.chart1 + analytics.chart2 + analytics.chart3 + analytics.chart4))
            when (analytics.element_name =''VERIFICATION_SERVICE'' and  analytics.value != 0) THEN ((analytics.chart1 * 100) / analytics.value)
            when (analytics.element_name =''PREG_VERIFICATION_SERVICE'' and  analytics.value != 0) THEN ((analytics.chart1) * 100 / analytics.value)
            when (analytics.element_name =''AVG_SERVICE_DURATION'' and  analytics.value != 0) THEN ((analytics.chart1) / analytics.value)
            when (analytics.element_name =''NCD_HYPERTENSION'' and  analytics.chart1 != 0) THEN (((((30 * value) / days) * 100) / chart1) * 100) / config.target
            when (analytics.element_name =''NCD_DIABETES'' and  analytics.chart1 != 0) THEN (((((30 * value) / days) * 100) / chart1) * 100) / config.target
            when (analytics.element_name =''NCD_HYPERTENSION_CONFIRM'' and  analytics.chart4 != 0) THEN ((analytics.chart3 * 100 / analytics.chart4) * 100) / config.target
            when (analytics.element_name =''NCD_DIABETES_CONFIRM'' and  analytics.chart4 != 0) THEN ((analytics.chart3 * 100 / analytics.chart4) * 100) / config.target
        end as percentage,

        case
            when location.type in (''C'',''Z'',''U'',''ANM'',''ANG'',''AA'') then
                case
                    when (target_for_rural is null or target_for_rural = 0) then config.target
                    else target_for_rural
                end
            when location.type in (''D'',''B'',''P'',''SC'',''V'',''A'') then
                case
                    when (target_for_urban is null or target_for_urban = 0) then config.target
                    else target_for_urban
                end
            when location.type in (''S'') then config.target
            else config.target
        end as target_1,

        case
            when location.type in (''C'',''Z'',''U'',''ANM'',''ANG'',''AA'') then
                case
                    when (lower_bound is null or lower_bound = 0) then config.lower_bound
                    else lower_bound
                end
            when location.type in (''D'',''B'',''P'',''SC'',''V'',''A'') then
                case
                    when (lower_bound_for_rural is null or lower_bound_for_rural = 0) then lower_bound
                    else config.lower_bound_for_rural
                end
            when location.type in (''S'') then config.lower_bound
            else config.lower_bound
        end as lower_bound_1,

        case
            when location.type in (''C'',''Z'',''U'',''ANM'',''ANG'',''AA'') then
                case
                    when (upper_bound is null or upper_bound = 0) then config.upper_bound
                    else upper_bound
                end
            when location.type in (''D'',''B'',''P'',''SC'',''V'',''A'') then
                case
                    when (upper_bound_for_rural is null or upper_bound_for_rural = 0) then upper_bound
                    else config.upper_bound_for_rural
                end
            when location.type in (''S'') then config.upper_bound
            else config.upper_bound
        end as upper_bound_1

        from soh_timeline_analytics analytics
        inner join location_master location on location.id = analytics.location_id
        inner join configurations config on analytics.element_name = config.element_name
        where analytics.location_id in (select child_id from location_hierchy_closer_det where parent_id = 2 and child_loc_type in (''D'',''C''))
        and analytics.timeline_type = #timelineType#
    ),

    calculations as(
        select
        calculatedTarget as "calculatedTarget",
        case
            when calculatedTarget < lower_bound_1 then ''UNDER_REPORTING''
            when calculatedTarget > upper_bound_1  then ''OVER_REPORTING''
            when calculatedTarget >= lower_bound_1 AND calculatedTarget <= upper_bound_1 then ''AS_EXPECTED_REPORTING''
        end as "reporting",
        case
            when is_small_value_positive then
                case
                    when percentages.target_1 >= calculatedTarget and target_mid <= calculatedTarget and target_mid_enable then ''YELLOW''
                    when percentages.target_1 > calculatedTarget  then ''GREEN''
                    else ''RED''
                end
            else
                case
                    when percentages.target_1 >= calculatedTarget and target_mid <= calculatedTarget and target_mid_enable then ''YELLOW''
                    when percentages.target_1 <= calculatedTarget then ''GREEN''
                    else ''RED''
                end
        end as "color",
        case
            when is_small_value_positive then
                case
                    when percentages.target_1 >= calculatedTarget and target_mid <= calculatedTarget and target_mid_enable then 2
                    when percentages.target_1 > calculatedTarget then 1
                    else 3
                end
            else
            case
                when percentages.target_1 >= calculatedTarget and target_mid <= calculatedTarget and target_mid_enable then 2
                when percentages.target_1 <= calculatedTarget then 1
                else 3
            end
        end as "sortPriority",
        element_name as "elementName",
        percentage as "percentage",
        location_id as "locationId",
        percentages.timeline_type as "timelineType"
        from percentages
        order by "sortPriority"
    )
    select
    cal.*,
    lm.name as "locationName"
    from calculations cal
    inner join location_master lm on cal."locationId" = lm.id',true,'ACTIVE','SoH Element Analysis',true,'a90eea3b-84f6-4156-8efe-94c30f26277b'),
	 (1027,'2018-08-04 00:56:37.857',409,'2019-02-13 18:42:44.66','insert_fhs_process_data',NULL,'BEGIN;
insert into verfied_families_village_wise_records (loc_id,created_on,total,verified) 
                select loc_id,current_date,fhs_imported_from_emamta_family,fhs_verified_family+fhs_archived_family 
                from location_wise_analytics 
                where fhs_imported_from_emamta_family > 0 ;
COMMIT;',false,'ACTIVE',NULL,true,'f279b257-a27f-4143-964f-5ea6a7c80b10'),
	 (75398,'2020-06-04 00:00:00',75398,'2020-06-04 00:00:00','dr_techo_get_dr_techo_users_by_crieteria','offset,limit,orderBy,mobileNo,states','select uu.id,
    concat(uu.first_name, '' '', uu.middle_name, '' '', uu.last_name) as "fullName",
    uu.user_name as "userName",
    uu.gender,
    udu.registration_number as "registrationNumber",
    uu.contact_number as "contactNumber",
    uu.address as address,
    udu.medical_council as "medicalCouncil",
    uu.state,
    udu.remarks,
    udu.action_on as "actionOn",
    concat(uu2.first_name, '' '', uu2.middle_name, '' '', uu2.last_name) as "actionBy",
    (select 
        cast(
            json_agg(
                json_build_object(
                    ''id'', hid.id,
                    ''healthInfrastructureName'', hid.name,
                    ''healthInfrastructurePincode'', hid.postal_code,
                    ''healthInfrastructureRegNo'', hid.registration_number,
                    ''healthInfrastructureAddress'', hid.address
                )
            ) as text
        ) from user_health_infrastructure uhi inner join health_infrastructure_details hid on hid.id = uhi.health_infrastrucutre_id where uhi.user_id = uu.id AND uhi.state = ''ACTIVE''
    ) as "healthInfrastructureDetails",
    (select
        cast(
            json_agg(
                json_build_object(
                    ''id'', lfvd.id,
                    ''value'', lfvd.value
                )
            ) as text
        ) from listvalue_field_value_detail lfvd where lfvd.field_key=''drtecho_user_document_types'' and lfvd.is_active = true
    ) as "documentTypes",
    (select
        cast(
            json_agg(
                json_build_object(
                    ''id'', dud.document_id,
                    ''typeId'', dud.document_type_id, 
                    ''name'', dm.actual_file_name
                )
            ) as text
        ) from drtecho_user_documents dud inner join document_master dm on dm.id = dud.document_id where dud.user_id = uu.id
    ) as "documentDetails"
    from um_user uu  
    inner join um_drtecho_user udu on uu.id = udu.user_id
    left join um_user uu2 on uu2.id = udu.action_by
    where uu.state in (#states#) and uu.role_id = 203
    and uu.contact_number like CONCAT(''%'',#mobileNo#,''%'') group by uu.id , udu.id , uu2.id order by #orderBy# desc
    limit #limit# offset #offset#;',true,'ACTIVE',NULL,true,'479685cd-cedf-466e-a634-89cc90be571d'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','loaction_ward_uphc_retrieval','level,locationType,wardId,parentId','select
    m.id,
    m.name,
    t.type as "typeCode",
    t.name as "type",
    m.parent as "areaParentId"
    from location_hierchy_closer_det c
    inner join location_type_master t on t.type = c.child_loc_type
    inner join location_master m on m.id = c.child_id
    left join location_wards_mapping lwm on lwm.location_id = m.id
    where t.level=#level#
    and t.type=#locationType#
    and parent_id=#parentId#
    and (lwm.ward_id is null or (lwm.ward_id is not null and lwm.ward_id=#wardId#))
    order by depth',true,'ACTIVE','Location Ward UPHC Retrieval',true,'f14a8828-17e2-4226-978f-2033dc74bad4'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','update_gvk_covid_104_calls_response','feverDays,country,address,dateOfCalling,gender,isInformationCall,travelAbroad,coughDays,arrivalDate,personName,inTouchWithAnyone,hasFever,pinCode,district,block,modifiedBy,hasShortnessOfBreath,id,village,havingCough,age,contactNo','update gvk_covid_104_calls_response
set date_of_calling = #dateOfCalling#,
person_name = #personName#,
age = #age#,
gender = #gender#,
contact_no = #contactNo#,
address = #address#,
pin_code = #pinCode#,
district = #district#,
block = #block#,
village = #village#,
is_information_call = #isInformationCall#,
has_fever = #hasFever#,
fever_days = #feverDays#,
having_cough = #havingCough#,
cough_days = #coughDays#,
has_shortness_of_breath = #hasShortnessOfBreath#,
has_travel_abroad_in_15_days = #travelAbroad#,
country = #country#,
arrival_date = #arrivalDate#,
in_touch_with_anyone_travelled_recently = #inTouchWithAnyone#,
modified_by = #modifiedBy#,
modified_on = now()
where id = #id#;
delete from gvk_covid_104_calls_contact_response where gvk_response_id = #id#;',false,'ACTIVE',NULL,true,'6b6ce8f1-ff78-45b9-bc39-f5979f91db1d'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','insert_gvk_covid_104_calls_response','feverDays,country,address,dateOfCalling,gender,isInformationCall,travelAbroad,coughDays,arrivalDate,personName,inTouchWithAnyone,hasFever,createdBy,pinCode,district,block,modifiedBy,hasShortnessOfBreath,village,havingCough,age,contactNo','insert into gvk_covid_104_calls_response
(date_of_calling,person_name,age,gender,contact_no,address,pin_code,district,block,village,
is_information_call,has_fever,fever_days,having_cough,cough_days,has_shortness_of_breath,has_travel_abroad_in_15_days,
country,arrival_date,in_touch_with_anyone_travelled_recently,created_by,created_on,modified_by,modified_on)
values(#dateOfCalling#,#personName#,#age#,#gender#,#contactNo#,#address#,#pinCode#,#district#,#block#,#village#,
#isInformationCall#,#hasFever#,#feverDays#,#havingCough#,#coughDays#,#hasShortnessOfBreath#,#travelAbroad#,
#country#, #arrivalDate#,#inTouchWithAnyone#,#createdBy#,now(),#modifiedBy#,now())
returning id;',true,'ACTIVE',NULL,true,'ec8b8f99-538b-4998-a83f-042da76481d6'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','insert_gvk_covid_104_calls_contact_response','personName,gvkId,otherDetails,district,contactNo','insert into gvk_covid_104_calls_contact_response
(gvk_response_id,person_name,contact_no,district,other_detail)
values(#gvkId#,
#personName#,
#contactNo#,
#district#,
#otherDetails#);',false,'ACTIVE',NULL,true,'8e8bfd6a-3f77-480f-9d82-695daed72522'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','covid19_get_beneficary_detail_by_id','id','with travel_history as(
select
json_agg(json_build_object(''id'',cct.id
,''travelDate'',to_char(cct.treavel_date,''DD/MM/YYYY'')
,''placeOfOrigin'',cct.place_of_origin
,''destination'',cct.destination
,''modeOfTransport'',cct.mode_of_transport
,''flightNo'',cct.flight_no
,''flightSeatNo'',cct.flight_seat_no
,''isFromOtherCountry'',cct.is_another_country
,''otherTransportDetails'',cct.other_detail
,''purposeOfTravel'',cct.purpose_of_travel
,''trainNo'',cct.train_no
,''trainSeatNo'',cct.train_seat_no
,''busDetail'',cct.bus_detail
,''travelAgencyDetail'',cct.travel_agency_detail
,''travelAgencyDetail'',cct.travel_agency_detail
)) as travel_history
from covid_case_travel_history cct
where cct.contact_person_id = #id#
),contact_person as (
select
json_agg(json_build_object(''id'',ccch.id
,''contactDate'',to_char(ccch.contact_date,''DD/MM/YYYY'')
,''name'',ccch.person_name
,''otherDetails'',ccch.other_detail
,''address'',ccch.address
,''contactNo'',ccch.contact_no
,''location'',(select name from location_master where id = ccch.location_id)
)) as contact_person
from covid_case_contact_history ccch
where ccch.parent_id = #id#
)
select cch.id,cch.person_name as name,cch.age,cch.gender,cch.contact_no,cch.address,cch.health_state as state,cch.parent_id,cch.level
,cch.location_id as "locationId",get_location_hierarchy(cch.location_id) as "location"
,(select cast(travel_history as text) from travel_history) as travel_history
,(select cast(contact_person as text) from contact_person) as contact_person
from covid_case_contact_history cch
where cch.id=#id#;',true,'ACTIVE',NULL,true,'6fd0996e-92b3-402a-8de2-0300bf3c436c'),
	 (1,'2019-01-04 13:35:28.97995',NULL,NULL,'retrieve_location_level_for_infra_type','','select location_level as level, health_infra_type_id as infraid from health_infrastructure_type_location ',true,'ACTIVE','Retrieves location level allowed for all health type',true,'54cde505-a51c-4026-b00a-c95beef6da3f'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','covid19_contatct_tracing_update_beneficary_detail','address,gender,contact_no,name,modified_by,location,state,id,age','update covid_case_contact_history
set person_name =#name# ,
age =#age# ,
gender =#gender# ,
contact_no =#contact_no# ,
address =#address# ,
health_state = #state#,
location_id=#location#,
modified_on = now() ,
modified_by =  #modified_by#
where id = #id#;',false,'ACTIVE',NULL,true,'428e2c3f-25e4-4c7a-8f22-77f686af67b1'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','covid19_contact_tracing_insert_beneficary_data','address,gender,contact_no,name,location,state,loggedInUserId,age','insert into covid_case_contact_history(person_name,age,gender,contact_no,address,health_state,state, location_id,created_by, created_on, modified_on, modified_by,level)
values(
#name#, #age#,
#gender#, #contact_no#, #address#,  #state#,''PENDING'', #location#,
#loggedInUserId#,now(), now(), #loggedInUserId#,0
)
returning id;',true,'ACTIVE',NULL,true,'3e23b4b1-9e35-4ca7-8829-383d88f96f37'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','update_location_of_covid_19_non_contactable_traveller','isOutOfState,address,districtId,locationId,loggedInUserId,id','begin;

    -- update location

    update covid_travellers_info
    set previous_location = location_id,
    location_id = #locationId#,
    address = #address#,
    is_out_of_state = #isOutOfState#,
    district_id = #districtId#,
    is_active = true,
    tracking_start_date = now(),
    is_update_location = true,
    modified_on = now(),
    modified_by = #loggedInUserId#
    where id = #id#;

    -- delete existing notifications

    delete from techo_notification_master
    where notification_type_id = (select id from notification_type_master where name = ''Travellers Screening Alert'')
    and member_id = #id#;

    commit;',false,'ACTIVE','Update Location of COVID 19 Non-Contactable Traveller',true,'35f296bf-de3b-4e70-b24d-46e5ffe54ac3'),
	 (1,'2019-02-12 00:00:00',NULL,NULL,'check_last_cp_status','id','
select status from rch_child_cp_suspects where member_id = #id# order by id desc limit 1
',true,'ACTIVE',NULL,true,'23f068d8-9815-4ace-a56b-1f07ed4ffc0d'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','update_location_not_found_of_covid_19_traveller','reason,loggedInUserId,id','begin;

    -- update location

    update covid_travellers_info
    set location_id = -1,
    is_update_location = true,
    update_location_reason = ''OTHER'',
    other_update_location_reason = #reason#,
    update_location_source_type = ''WEB'',
    is_active = false,
    modified_on = now(),
    modified_by = #loggedInUserId#
    where id = #id#;

    -- delete existing notifications

    delete from techo_notification_master
    where notification_type_id = (select id from notification_type_master where name = ''Travellers Screening Alert'')
    and member_id = #id#;

    commit;',false,'ACTIVE','Update Location Not Found of COVID 19 Non-Contactable Traveller',true,'93efe83f-2bb1-4a7b-9bce-6774dea092c7'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','covid19_get_ward_detail','loggedInUserId','select ward.id,ward_name
from health_infrastructure_ward_details ward 
where ward.health_infra_id = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi 
	where uhi.user_id = #loggedInUserId# and uhi.state = ''ACTIVE'')',true,'ACTIVE',NULL,true,'ac6d4d72-fc3d-4b31-9660-e7095bee136b'),
	 (60512,'2020-11-19 00:00:00',60512,'2020-11-19 00:00:00','emo_dashboard_get_reffer_paitent_list','searchText,offset,limit,loggedInUserId','with idsp_screening as (
	select
	clt.id as "id",
        clt.source as "source",
	clt.location_id as loc_id,
	m.family_id,
	m.id as member_id,
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name || '' ('' || m.unique_health_id || '')'' || ''<br>'' || m.family_id as member_det,
	concat(to_char(m.dob, ''DD/MM/YYYY''),''('',EXTRACT(YEAR FROM age(m.dob)),'')'') as dob,
	(case when ref_by.id is null then ''N/A''
		else concat(concat_ws('' '',ref_by.first_name,ref_by.middle_name,ref_by.last_name),'' ('',ref_by.contact_number,'')'',''<BR>('',ref_by.user_name,'') ('',urm.name,'')'') end) as reffer_by,

	(case when idsp.is_cough = 1 then true else false end) as is_cough,
	(case when idsp.is_any_illness_or_discomfort = 1 then true else false end) as is_any_illness_or_discomfort,
	(case when idsp.is_breathlessness = 1 then true else false end) as breathlessness,
	(case when idsp.is_fever = 1 then true else false end) as is_fever,
	(case when idsp.has_travel = 1 then ''Local''
		when idsp.has_travel=2 then concat(''International'',(case when idsp.country is not null then concat('' ('',idsp.country,'')'') end))
		else ''No'' end) as travel,
	concat_ws('','', address1, address2) as address,
	m.mobile_number as contact_person,
	clt.lab_test_status,
	case when clt.admission_id is not null then ''Admitted'' else ''PENDING'' end  as addmision_status,
	hid.name as refer_health_infra
	from covid19_lab_test_recommendation clt
	inner join imt_member m on clt.member_id = m.id
	inner join imt_family f on f.family_id = m.family_id
	inner join health_infrastructure_details hid on hid.id = clt.refer_health_infra_id
	left join um_user ref_by on ref_by.id = clt.reffer_by
    left join um_role_master urm on urm.id = ref_by.role_id
	left join idsp_screening_analytics idsp on clt.member_id = idsp.member_id

	where clt.lab_test_status in (''APPROVE'',''SYSTEM_APPROVE'')
        and (#searchText# = null OR clt.search_text ilike concat(''%'',#searchText#,''%''))
	and clt.refer_health_infra_id is not null
	and clt.location_id in (select child_id from location_hierchy_closer_det lhc where parent_id in (select loc_id from um_user_location ul where ul.state = ''ACTIVE'' and ul.user_id = #loggedInUserId#))
	order by idsp.member_id
	limit #limit# offset #offset#
),contact_person as (
	select distinct on(a.member_id) a.member_id as id,
	 concat( contact_person.first_name, '' '', contact_person.middle_name, '' '', contact_person.last_name,
		'' ('', case when contact_person.mobile_number is null then ''N/A'' else contact_person.mobile_number end, '')'' ) as contactPersonMobileNo
	from imt_member contact_person
	inner join idsp_screening a on a.family_id = contact_person.family_id
	where contact_person.basic_state in (''NEW'',''IDSP'',''VERIFIED'') and contact_person.id != a.member_id and a.contact_person is null
	order by a.member_id,contact_person.dob
),
loc as (
	select distinct loc_id from idsp_screening
),
loc_det as (
	select loc.loc_id, get_location_hierarchy_from_ditrict(loc.loc_id) as aoi
	from loc
)/*, fhw_det as (
	select loc.loc_id,
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>''
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id in (select id from um_role_master where name in (''MO UPHC'', ''MO PHC''))
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)*/
select
ROW_NUMBER() over () + #offset# as "srNo",
idsp_screening.id as "id",
idsp_screening.source as "source",
idsp_screening.member_det as "memberDetails",
loc_det.aoi as "location",
(case when idsp_screening.contact_person is not null then idsp_screening.contact_person else contact_person.contactPersonMobileNo end) as "contactPersonMobileNo",
idsp_screening.dob as "dob",
idsp_screening.address as "address",
idsp_screening.is_cough as "hasCough",
idsp_screening.is_fever as "hasFever",
idsp_screening.breathlessness as "hasBreathlessness",
idsp_screening.travel as "hasTravelHistory",
idsp_screening.reffer_by as "refferBy",
idsp_screening.lab_test_status as "labTestStatus",
idsp_screening.refer_health_infra as "referHealthInfra",
idsp_screening.addmision_status as "addmissionStatus"
/*fhw_det.fhw as "moDetails"*/
from idsp_screening
left join contact_person on contact_person.id = idsp_screening.id
inner join loc_det on idsp_screening.loc_id = loc_det.loc_id;',true,'ACTIVE',NULL,true,'4397ca95-e379-49cc-841e-fc6a776454d6'),
	 (79677,'2020-12-08 00:00:00',79677,'2020-12-08 00:00:00','member_information_change_audit_log','offset,column,limit,search_text','select concat( im.first_name, '' '', im.middle_name, '' '', im.last_name, ''('' , unique_health_id , '')'') as "memberDetail", 
case 
when #column# = ''gender'' then (case when mal.data ->> ''gender'' = ''M'' then ''Male'' when mal.data ->> ''gender'' = ''F'' then ''Female''  else ''Other'' end)
when #column# = ''place_of_birth'' then INITCAP(
case when data ->> ''place_of_birth'' in (''108_AMBULANCE'', ''HOME'',
''ON_THE_WAY'',
''OUT_OF_STATE_GOVT'',
''OUT_OF_STATE_PVT'') then REPLACE(data ->> ''place_of_birth'', ''_'', '' '')
when data ->> ''place_of_birth'' = ''HOSP'' then ''HOSPITAL''
when data ->> ''place_of_birth'' is null then ''-''
else data ->> ''place_of_birth'' end 
)
when #column# = ''health_infrastructure_id'' then INITCAP(
case when data ->> ''delivery_place'' in (''108_AMBULANCE'', ''HOME'',
''ON_THE_WAY'',
''OUT_OF_STATE_GOVT'',
''OUT_OF_STATE_PVT'') then REPLACE(data ->> ''delivery_place'', ''_'', '' '')
when data ->> ''delivery_place'' = ''HOSP'' then ''HOSPITAL''
when data ->> ''delivery_place'' is null then ''-''
else data ->> ''delivery_place'' end 
)
when #column# = ''state'' then mal.data ->> ''state''
else cast(to_char(cast(data ->> #column# as date), ''DD/MM/YYYY'') as text) end as "modifiedField", 
to_char(mal.created_on, ''DD/MM/YYYY'') as "createdOn",  
u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as "userInfo",
mal.document_id as "documentId" 
from member_audit_log mal
inner join imt_member im on im.id = mal.member_id 
left join um_user u on u.id = mal.user_id
where mal.column_name = #column#
and ((#search_text# is null) or (#search_text# = '''') or (unique_health_id ilike concat(''%'',#search_text#,''%''))) 
order by mal.id
limit #limit# offset #offset#',true,'ACTIVE',NULL,true,'61b542fc-bff9-4898-8cd0-6e31bc57c572'),
	 (74840,'2020-06-04 00:00:00',74840,'2020-06-04 00:00:00','state_of_health_data_retrieval_13','locationId,element_name,timeline_type','with next_active_depth as (
select
	closer.depth as "depth"
from
	location_type_master lt
inner join location_hierchy_closer_det closer on
	lt.type = closer.child_loc_type where closer.parent_id = ''#locationId#'' and lt.is_soh_enable = true  and depth != 0 order by closer."depth" limit 1
),
elements_details as (
       select lt.level,lt.type,closer.child_id as "locationId",
        case when lt.type =''C'' or lt.type =''D'' then ''Districts/Corporation'' else lt.name end as "locationType",
        case when l.english_name is not null then l.english_name else l.name end as english_name,
 cast(''#element_name#'' as  text) as "elementName",
        value as value,sh.target,male as male,female as female,
        chart1 as chart1,chart2 as chart2,chart3 as chart3,chart4 as chart4,
chart5 as chart5,
chart6 as chart6,
chart7 as chart7,
chart8 as chart8,
chart9 as chart9,
chart10 as chart10,
chart11 as chart11,
chart12 as chart12,
chart13 as chart13,
chart14 as chart14,
chart15 as chart15,

        cast(''#timeline_type#'' as text) as timeline_type,
        days as days,
        reporting as reporting,
        calculatedTarget as calculatedTarget,
        color as color,
        percentage as percentage,
        sortPriority as "sortPriority",
        displayValue as displayValue
        from location_hierchy_closer_det closer
        inner join location_master l on closer.child_id = l.id
        inner join location_type_master lt on l.type = lt.type
        left join soh_element_configuration config on config.element_name = ''#element_name#''
        left join soh_timeline_analytics_temp sh on sh.location_id = closer.child_id and config.element_name = sh.element_name
        --inner join location_hierchy_closer_det closer on closer.parent_id = 2 and depth=case when 2 = 2 then 2 else 1 end and timeline_type = ''#timeline_type#''
	and timeline_type = ''#timeline_type#''
        where closer.parent_id = ''#locationId#'' and depth=(SELECT * FROM next_active_depth)
	--and timeline_sub_type=''PERIOD''
        order by english_name),
unique_locations as (
        select distinct "locationId" from elements_details
        ),
user_details_ids as (
        select uul.loc_id as location_id, concat(uu.first_name,'' '',uu.middle_name,'' '', uu.last_name)
				 as "userName",
				 case when uu.role_id = 39 then ''CDHO''
				when uu.role_id = 41 then ''THO''
				when uu.role_id = 66 then ''MO PHC''
when uu.role_id = 86 then ''MO UPHC''

				when uu.role_id = 67 then ''MO AYUSH''
				when uu.role_id = 63 then ''RCHO''
                                when uu.role_id = 85 then ''MOH Co.''
				when uu.role_id = 99 then ''RCHO Co.''
				when uu.role_id = 204 then ''MPHW''
				when uu.role_id = 30 then ''FHW''
				when uu.role_id = 24 then ''ASHA''
				when uu.role_id = 108 then ''DHO''
                                when uu.role_id = 179 then ''CHO-HWC''
				else ''(Other)'' end as "roleName",
				uu.contact_number as "contactNumber",
				uu.id as user_id
        from unique_locations elements
        inner join um_user_location uul on elements."locationId" = uul.loc_id
        inner join um_user uu on uu.id = uul.user_id
        inner join location_master lm on lm.id =  uul.loc_id
        where uul.state=''ACTIVE''
        and uu.state=''ACTIVE''
	and uu.role_id in (39,41,67,66,63,85,99,204,24,108,30,86,179)
),
remaining_user_data as (
	select "locationId" as location_id,
	cast(''-'' as text) as "userName",
	t.roleName,
	cast(''-'' as text) as "contactNumber",
	cast(0 as numeric) as "user_id"

	from unique_locations
	inner join location_master lm on lm.id = "locationId"
	inner join (
	select ''C'' as type_id, unnest(array[''MOH Co.'', ''RCHO Co.'']) as roleName
	union all
	select ''D'' as type_id, unnest(array[''CDHO'', ''RCHO'']) as roleName
	union all
	select ''B'' as type_id, ''THO'' as roleName
	union all
	select ''Z'' as type_id, ''DHO'' as roleName
	union all
	select ''P'' as type_id, unnest(array[''MO PHC'', ''MO AYUSH'']) as roleName
	union all
	select ''U'' as type_id, unnest(array[''MO UPHC'', ''MO AYUSH'']) as roleName
	union all
	select ''V'' as type_id, unnest(array[''FHW'',''MPHW'']) as roleName
	union all
	select ''ANG'' as type_id, unnest(array[''FHW'',''MPHW'']) as roleName
	union all
	select ''SC'' as type_id, unnest(array[''CHO-HWC'']) as roleName
	union all
--select ''ANM'' as type_id, unnest(array[''CHO-HWC'']) as roleName
	--union all
	select ''A'' as type_id, unnest(array[''ASHA'']) as roleName
	union all
	select ''AA'' as type_id, unnest(array[''ASHA'']) as roleName
	) as t on t.type_id = lm."type"
),
remaining_user_data_1 as (
	select users.*
	from remaining_user_data remains
	left join user_details_ids users  on users.location_id = remains.location_id
	and users."roleName"  = remains.roleName
	where users.user_id is not null
	union
	select remains.*
        from remaining_user_data remains
	left join user_details_ids users  on users.location_id = remains.location_id
	and users."roleName"  = remains.roleName
	where users.user_id is null
),
user_details as (
	       select
	       cast(array_to_json(array_agg(row_to_json(ud.*))) as text) as user_name,ud.location_id
	       from remaining_user_data_1 ud
	       group by ud.location_id
)
select elements.*,
case when users.user_name is null then null else users.user_name end as  "userDetail"
from elements_details elements
--inner join calculations cal on cal."locationId" = elements."locationId"
left join user_details users on elements."locationId" = users.location_id',true,'ACTIVE','state of health data',true,'2d43acf0-d53a-4047-9d64-8b932c0c7e5d'),
	 (75398,'2020-06-04 00:00:00',75398,'2020-06-04 00:00:00','get_service_by_location','fromDate,locationId,toDate','with services_by_dates as (
select
parent_id,
sum(case when geo_location_state = ''CORRECT'' then 1 else 0 end) as correct,
sum(case when geo_location_state = ''INCORRECT'' then 1 else 0 end) as incorrect,
sum(case when geo_location_state = ''NOT_FOUND'' or (ser.id is not null and geo_location_state is null) then 1 else 0 end) as notfound
from location_hierchy_closer_det lh left join rch_member_services_last_90_days ser
on lh.child_id = ser.location_id
and ser.service_date between #fromDate# and #toDate#  and
service_type in (''FHW_LMP'',''FHW_ANC'',''FHW_MOTHER_WPD'',''FHW_PNC'',''FHW_CS'')
and
ser.latitude is not null and ser.latitude != ''0.0''
where
lh.parent_id in (select child_id from location_hierchy_closer_det lhcd where lhcd.parent_id=#locationId# and depth = 1
)
group by parent_id
)
select ser.*,lm.name,lm.type from services_by_dates ser
inner join location_master lm on ser.parent_id = lm.id',true,'ACTIVE',NULL,true,'16be61f5-2ce0-4516-9e97-0e3095d8bdaa'),
	 (75398,'2020-06-04 00:00:00',75398,'2020-06-04 00:00:00','get_service_line_list_by_location','fromDate,locationId,toDate','with location_services as (
select 
rlfu.*
from rch_member_services rlfu 
left join location_master latLongLocation on latLongLocation.id = rlfu.lat_long_location_id
where 
rlfu.location_id in (select child_id from location_hierchy_closer_det where parent_id = #locationId#)
and
case when ''all'' = ''all'' then rlfu.service_type in (''FHW_LMP'',''FHW_ANC'',''FHW_MOTHER_WPD'',''FHW_PNC'',''FHW_CS'') else rlfu.service_type=''all'' end 
and service_date between #fromDate# and #toDate# order by service_date desc
)
select 
to_char(ls.service_date,''dd-MM-yyyy'') as "serviceDate", 
case when ls.service_type = ''FHW_LMP'' then ''LMP Service''
     when ls.service_type = ''FHW_ANC'' then ''ANC Service''
     when ls.service_type = ''FHW_MOTHER_WPD'' then ''Delivery Service''
     when ls.service_type = ''FHW_PNC'' then ''PNC Service''
     when ls.service_type = ''FHW_CS'' then ''Child Service'' end 
 as "serviceType",
ls.lat_long_location_distance  as  "latLongLocationDistrance",
ls.latitude,
ls.longitude,
ls.geo_Location_State as "geoLocationState",
ls.location_id as "locationId",
concat(um.first_name,'' '',um.last_name) as name,
concat(im.first_name,'' '',im.last_name) as "memberName",
get_location_hierarchy(ls.location_id) as Location, 
get_location_hierarchy(ls.lat_long_location_id) as "latLongLocation"
from location_services ls
inner join um_user um  on ls.user_id = um.id
inner join imt_member im on ls.member_id = im.id
--where geo_location_state in (''CORRECT'',''INCORRECT'')',true,'ACTIVE',NULL,true,'70bfae44-add8-4f65-b6cc-55132ad259b1'),
	 (75398,'2020-06-04 00:00:00',75398,'2020-06-04 00:00:00','retrieve_staff_sms_user_sms_status_list','staffSmsConfigId','with staff_sms as(
select id, config_type, jsonb_array_elements(cast(user_list as jsonb)) as elem from sms_staff_sms_master where id = #staffSmsConfigId#
)
select sc.id,sc.config_type as "configType", sm.id as "smsId", sc.elem->>''mobileNumber'' as "mobileNumber", sc.elem->>''smsQueueId'' as "smsQueueId" ,
case when sc.config_type = ''ROLE_LOCATION_BASED'' then
(select CONCAT(u.first_name, '' '', u.last_name,'' ('', u.user_name, '')'') from um_user u where id = cast(sc.elem->>''userId'' as Integer) and state = ''ACTIVE'')
end  as "userName",
case when sq.sms_id is not null and sm.carrier_status is not null then sm.carrier_status else ''N.A.''end as "smsStatus"
from staff_sms sc
left join sms_queue sq on cast(sc.elem->>''smsQueueId'' as Integer) = sq.id
left join sms sm on sm.id = sq.sms_id',true,'ACTIVE',NULL,true,'f2a37aae-3f77-4855-8653-1772bd802da8'),
	 (75398,'2020-06-04 00:00:00',75398,'2020-06-04 00:00:00','retrieve_staff_sms_by_userid','userId','with staff_sms as(
select id, jsonb_array_elements(cast(user_list as jsonb))->> ''mobileNumber'' as elem from sms_staff_sms_master
)
select sm.id, sm.name, sm.sms_template as "smsTemplate", sm.trigger_type as "triggerType", sm.schedule_date_time as "dateTime", 
sm.state, sm.status,  sm.config_type as "configType",
(select CONCAT(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'')as "createdUserName" from um_user u where id = sm.created_by and state = ''ACTIVE'') ,
  sm.created_on, count(sc.elem) as "userCount"
from sms_staff_sms_master sm 
left join staff_sms sc on sc.id = sm.id 
where created_by = #userId#
group by sm.id,sm.created_on, sm.sms_template, sm.trigger_type, sm.schedule_date_time, "createdUserName", sm.config_type,
sm.state, sm.status, sm.name
order by created_on desc',true,'ACTIVE',NULL,true,'1ec2af2c-e9db-4783-9ec7-b543287d02e9'),
	 (75398,'2020-06-04 00:00:00',75398,'2020-06-04 00:00:00','cerebral_palsy_retrieve_pnc_danger_signs_by_id','id','select string_agg(value,'','') as "pncDangerSigns" from listvalue_field_value_detail where id in
(select distinct child_danger_signs from rch_pnc_child_danger_signs_rel where child_pnc_id in 
(select id from rch_pnc_child_master where child_id = #id#))',true,'ACTIVE',NULL,true,'4ef5e920-d857-4f39-bf8e-7f7edb68c173'),
	 (75398,'2020-06-04 00:00:00',75398,'2020-06-04 00:00:00','cerebral_palsy_retrieve_wpd_danger_signs_by_id','id','select string_agg(value,'','') as "wpdDangerSigns" from listvalue_field_value_detail where id in
(select distinct danger_signs from rch_wpd_child_danger_signs_rel where wpd_id in 
(select id from rch_wpd_child_master where member_id = #id#))',true,'ACTIVE',NULL,true,'291f5583-01e4-4a72-a39a-9ea06ba471aa'),
	 (75398,'2020-06-04 00:00:00',75398,'2020-06-04 00:00:00','cerebral_palsy_update_remarks_and_status','additionalInfo,id,childId,remarks,status','update rch_child_cp_suspects
set remarks = #remarks#, status=#status#, remarks_date = now()
where child_service_id = #id#;
update imt_member
set additional_info = #additionalInfo# where id = #childId#',false,'ACTIVE',NULL,true,'9daebacf-ddfe-40e1-99c2-4c9f7d52a93f'),
	 (75398,'2020-06-04 00:00:00',75398,'2020-06-04 00:00:00','mark_team_as_active_or_inactive','teamId,state','update team_master set state = #state#  , modified_on = now() where id = #teamId# ;',false,'ACTIVE',NULL,true,'5311d265-04ea-4ba0-9874-b388299127fe'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','covid19_save_travel_history','destination,train_seat_no,contact_person_id,loggedInUserId,flight_seat_no,purpose_of_travel,place_of_origin,mode_of_transport,flight_no,bus_detail,isFromOtherCountry,train_no,treavel_date,travel_agency_detail,other_detail','INSERT INTO covid_case_travel_history 
(contact_person_id
, place_of_origin
, destination
, mode_of_transport
, flight_no
, flight_seat_no
, train_no
, train_seat_no
, bus_detail
, travel_agency_detail
, purpose_of_travel
, treavel_date
, other_detail
,is_another_country
, created_by
, created_on
, modified_by
, modified_on) 
VALUES(#contact_person_id# 
,(case when #place_of_origin# = ''null'' then null else #place_of_origin# end) 
,(case when #destination# = ''null'' then null else #destination# end) 
,(case when #mode_of_transport# = ''null'' then null else #mode_of_transport# end) 
,(case when #flight_no# = ''null'' then null else #flight_no# end) 
,(case when #flight_seat_no# = ''null'' then null else #flight_seat_no# end) 
,(case when #train_no# = ''null'' then null else #train_no# end) 
,(case when #train_seat_no# = ''null'' then null else #train_seat_no# end) 
,(case when #bus_detail# = ''null'' then null else #bus_detail# end) 
,(case when #travel_agency_detail# = ''null'' then null else #travel_agency_detail# end) 
,(case when #purpose_of_travel# = ''null'' then null else #purpose_of_travel# end) 
,#treavel_date# 
,(case when #other_detail# = ''null'' then null else #other_detail# end) 
,#isFromOtherCountry#
,#loggedInUserId#
, now() 
,#loggedInUserId#
,now()) returning id;',true,'ACTIVE',NULL,true,'f03cc64a-ddf2-41cd-a639-0a8773fd665e'),
	 (75398,'2020-06-04 00:00:00',75398,'2020-06-04 00:00:00','team_user_search_for_selectize_by_role','searchString,roleIds,teamTypeId','with exclude_user as(
	select tmd.user_id from team_master tm inner join team_member_det tmd on tm.id = tmd.team_id and tmd.state =''ACTIVE'' and tm.state = ''ACTIVE'' where tmd.role_id in(#roleIds#) and tm.team_type_id = #teamTypeId#
)
select um_user.id,
first_name as "firstName", 
last_name as "lastName", 
user_name as "userName", 
um_user.role_id as "roleId",
um_role_master.name as "roleName"
from um_user 
inner join um_role_master on um_role_master.id = um_user.role_id
where um_user.role_id in (#roleIds#) and  um_user.id not in (select * from exclude_user) and
( first_name like CONCAT( ''%'',#searchString#,''%'') or last_name like CONCAT(''%'',#searchString#,''%'') or user_name like CONCAT(''%'',#searchString#)  ) 
limit 50',true,'ACTIVE',NULL,true,'ca4e01ec-8c57-4805-a1f4-9c4d36030b24'),
	 (75398,'2020-06-04 00:00:00',75398,'2020-06-04 00:00:00','retrive_team_type_location','teamTypeId','select * from team_type_location_management where team_type_id = #teamTypeId# and state = ''ACTIVE'';',true,'ACTIVE',NULL,true,'cfd58875-9a37-497f-ab52-2b3c367e096c'),
	 (75398,'2020-06-04 00:00:00',75398,'2020-06-04 00:00:00','retrive_team_by_team_type_and_location','teamTypeId,locationId','select tm.id, tm.name ,tm.team_type_id as "teamTypeId" 
from team_master tm  
inner join team_location_master  tlm on tm.id =  tlm.team_id
where tm.team_type_id = #teamTypeId# and  cast( #locationId# as integer) in (tlm.location_id) and tm.state=''ACTIVE'';',true,'ACTIVE',NULL,true,'ac346a00-8502-4fea-80e9-20329b7b4d4a'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','covid19_insert_contact_tracing_detail','address,contact_no,contactDate,name,location,loggedInUserId,contact_id,other_detail','insert into covid_case_contact_history(person_name,contact_no,address,other_detail,health_state,state,location_id,created_by, created_on, modified_on, modified_by,parent_id,contact_date)
values(
(case when #name# = null then null else #name# end)
,(case when #contact_no# = null then null else #contact_no# end)
,(case when #address# = null then null else #address# end)
,(case when #other_detail# = null then null else #other_detail# end)
,''Suspected''
,''PENDING''
,(case when #location# = null then null else #location# end)
,#loggedInUserId#
, now()
, now()
, #loggedInUserId#
,(case when #contact_id# = null then null else #contact_id# end)
,#contactDate#
)
returning id;',true,'ACTIVE',NULL,true,'55881043-672c-4e49-b75b-3f909d16f285'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','area_level_location_search_for_web','locationString','select loc.id,string_agg(l.name,''>'' order by lhcd.depth desc) as "hierarchy"
    from location_master loc
    inner join location_hierchy_closer_det lhcd on lhcd.child_id = loc.id
    inner join location_master l on l.id = lhcd.parent_id
    where (loc.name ilike concat(''%'',#locationString#,''%'') or loc.english_name ilike concat(''%'',#locationString#,''%'')) and loc.type in (''A'',''AA'')
    group by loc.id, loc.name
    limit 50;',true,'ACTIVE','Area Level Location Search for selectize',true,'f2493316-969b-4609-a5e9-e850d0221be9'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','update_location_and_create_imt_member_of_covid_19_traveller','isOutOfState,address,locationId,dob,loggedInUserId,id','begin;

    -- update location

    update covid_travellers_info
    set location_id = #locationId#,
    address = #address#,
    is_out_of_state = #isOutOfState#,
    is_active = true,
    tracking_start_date = now(),
    modified_on = now(),
    modified_by = #loggedInUserId#
    where id = #id#;

    -- create notification

    INSERT INTO techo_notification_master (
        notification_type_id, notification_code, location_id,
        member_id, schedule_date, expiry_date,
        state, created_by, created_on, modified_by, modified_on
    )
    select (select id from notification_type_master where name = ''Travellers Screening Alert''),
    row_number() OVER () as rnum, location_id, id,
    cast(ct.tracking_start_date as date) + interval ''1 days'' * (row_number() OVER () - 1) as sched_date,
    cast(ct.tracking_start_date as date) + interval ''1 days'' * (row_number() OVER () - 1) as exp_date, ''PENDING'',
    ''-1'', now(), ''-1'', now() from covid_travellers_info ct
    CROSS JOIN generate_series(1,14) as x where ct.id = #id# and location_id > 0 and location_id is not null;

    -- create record of imt_member and imt_family

    with get_asha_area_id as (
        select
        case
            when parent_loc_type in (''A'',''AA'') then parent_id
            when parent_loc_type in (''V'',''ANG'') then child_id
        end as location_id
        from location_hierchy_closer_det
        where parent_id = #locationId#
        limit 1
    ),
    insert_imt_family as (
        INSERT INTO imt_family (address1, area_id, caste, created_on, family_id, religion, location_id, state, basic_state, created_by, modified_by, modified_on)
        select
        #address# as address, (select location_id from get_asha_area_id) as area_id, ''627'' as caste, now() as created_on, ''FM/'' || date_part(''YEAR'', NOW()) || ''/'' || nextval(''family_id_seq'') || ''N'' as family_id,
        ''640'' as religion, (select case when type in (''A'',''AA'') then parent else id end from location_master where id = #locationId#) as location_id,
        case
            when cti.input_type = ''DR_TECHO'' then ''IDSP_DR_TECHO''
            when cti.input_type = ''MY_TECHO'' then ''IDSP_MY_TECHO''
            else ''IDSP_TECHO''
        end as state, ''IDSP'' as basic_state, #loggedInUserId#, #loggedInUserId#, now()
        from covid_travellers_info cti
        where cti.id = #id# and cti.member_id is null
        returning family_id
    ),
    insert_imt_member as (
        INSERT INTO imt_member(unique_health_id, first_name, dob, gender, state, basic_state, created_by, created_on, modified_by, modified_on, family_head, family_id)
        select ''A'' || nextval(''member_unique_health_id_seq'') || ''N'' as unique_health_id, cti.name as first_name, #dob# as dob,
        case
            when cti.gender ilike ''m'' or cti.gender ilike ''male'' then ''M''
            when cti.gender ilike ''f'' or cti.gender ilike ''female'' then ''F''
            else ''OTHER''
        end as gender,
        case
            when cti.input_type = ''DR_TECHO'' then ''IDSP_DR_TECHO''
            when cti.input_type = ''MY_TECHO'' then ''IDSP_MY_TECHO''
            else ''IDSP_TECHO''
        end as state, ''IDSP'' as basic_state, #loggedInUserId#, now(), #loggedInUserId#, now(), true, (select family_id from insert_imt_family)
        from covid_travellers_info cti
        where cti.id = #id# and cti.member_id is null
        returning id
    ),
    update_covid_travellers_info as (
        update covid_travellers_info
        set member_id = (select id from insert_imt_member)
        where id = #id# and member_id is null
    )
    update
    imt_family
    set hof_id  = (select id from insert_imt_member)
    where family_id = (select family_id from insert_imt_family);

    commit;',false,'ACTIVE','Update Location and Insert Imt Member/Family of COVID 19 Traveller',true,'860dbac6-e3ab-47ec-ab16-efdca2723004'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','update_location_and_create_imt_member_of_covid_19_non_contactable_traveller','isOutOfState,address,locationId,dob,loggedInUserId,id','begin;

    -- update location

    update covid_travellers_info
    set previous_location = location_id,
    location_id = #locationId#,
    address = #address#,
    is_out_of_state = #isOutOfState#,
    is_active = true,
    tracking_start_date = now(),
    is_update_location = false,
    modified_on = now(),
    modified_by = #loggedInUserId#
    where id = #id#;

    -- delete existing notifications

    delete from techo_notification_master
    where notification_type_id = (select id from notification_type_master where name = ''Travellers Screening Alert'')
    and member_id = #id#;

    -- create new notifications

    INSERT INTO techo_notification_master (
        notification_type_id, notification_code, location_id,
        member_id, schedule_date, expiry_date,
        state, created_by, created_on, modified_by, modified_on
    )
    select (select id from notification_type_master where name = ''Travellers Screening Alert''),
    row_number() OVER () as rnum, location_id, id,
    cast(ct.tracking_start_date as date) + interval ''1 days'' * (row_number() OVER () - 1) as sched_date,
    cast(ct.tracking_start_date as date) + interval ''1 days'' * (row_number() OVER () - 1) as exp_date, ''PENDING'',
    ''-1'', now(), ''-1'', now() from covid_travellers_info ct
    CROSS JOIN generate_series(1,14) as x where ct.id = #id# and location_id is not null and location_id > 0;

    -- create record of imt_member and imt_family

    with get_asha_area_id as (
        select
        case
            when parent_loc_type in (''A'',''AA'') then parent_id
            when parent_loc_type in (''V'',''ANG'') then child_id
        end as location_id
        from location_hierchy_closer_det
        where parent_id = #locationId#
        limit 1
    ),
    insert_imt_family as (
        INSERT INTO imt_family (address1, area_id, caste, created_on, family_id, religion, location_id, state, basic_state, created_by, modified_by, modified_on)
        select
        #address# as address, (select location_id from get_asha_area_id) as area_id, ''627'' as caste, now() as created_on, ''FM/'' || date_part(''YEAR'', NOW()) || ''/'' || nextval(''family_id_seq'') || ''N'' as family_id,
        ''640'' as religion, (select case when type in (''A'',''AA'') then parent else id end from location_master where id = #locationId#) as location_id,
        case
            when cti.input_type = ''DR_TECHO'' then ''IDSP_DR_TECHO''
            when cti.input_type = ''MY_TECHO'' then ''IDSP_MY_TECHO''
            else ''IDSP_TECHO''
        end as state, ''IDSP'' as basic_state, #loggedInUserId#, #loggedInUserId#, now()
        from covid_travellers_info cti
        where cti.id = #id# and cti.member_id is null
        returning family_id
    ),
    insert_imt_member as (
        INSERT INTO imt_member(unique_health_id, first_name, dob, gender, state, basic_state, created_by, created_on, modified_by, modified_on, family_head, family_id)
        select ''A'' || nextval(''member_unique_health_id_seq'') || ''N'' as unique_health_id, cti.name as first_name, #dob# as dob,
        case
            when cti.gender ilike ''m'' or cti.gender ilike ''male'' then ''M''
            when cti.gender ilike ''f'' or cti.gender ilike ''female'' then ''F''
            else ''OTHER''
        end as gender,
        case
            when cti.input_type = ''DR_TECHO'' then ''IDSP_DR_TECHO''
            when cti.input_type = ''MY_TECHO'' then ''IDSP_MY_TECHO''
            else ''IDSP_TECHO''
        end as state, ''IDSP'' as basic_state, #loggedInUserId#, now(), #loggedInUserId#, now(), true, (select family_id from insert_imt_family)
        from covid_travellers_info cti
        where cti.id = #id# and cti.member_id is null
        returning id
    ),
    update_covid_travellers_info as (
        update covid_travellers_info
        set member_id = (select id from insert_imt_member)
        where id = #id# and member_id is null
    )
    update
    imt_family
    set hof_id  = (select id from insert_imt_member)
    where family_id = (select family_id from insert_imt_family);

    commit;',false,'ACTIVE','Update Location and Create IMT Member/Family of COVID 19 Non-Contactable Traveller',true,'c628ece0-4094-4d01-adf6-83d6990b4a3d'),
	 (66522,'2020-12-08 00:00:00',66522,'2020-12-08 00:00:00','helpdesk_update_member_dob','dob,loggedInUserId,memberId','with preg_mother_id as (
	select
	child.wpd_mother_id, mot.member_id
	from rch_wpd_child_master child
	left join rch_wpd_mother_master mot on child.wpd_mother_id = mot.id
	where child.member_id = #memberId#
)
,member_dob as (
	select dob from imt_member where id = #memberId#
)
,twin_brother_info as(
	select rch_wpd_child_master.member_id from rch_wpd_child_master, preg_mother_id
	where rch_wpd_child_master.wpd_mother_id = preg_mother_id.wpd_mother_id
	union
	select #memberId#
)
, insert_member_audit_log as (
 	insert into member_audit_log (member_id,table_name,data,user_id,column_name,ref_code)
	select id,''imt_member'',row_to_json(lm) as data, #loggedInUserId# as user_id,''dob'',lm.id
	from (select id,dob from imt_member where id in(select member_id from twin_brother_info)) lm
	returning member_id
)
, update_member_dob_immmun_in_imt_member as (
	update imt_member set dob = #dob#, immunisation_given = null, modified_by = #loggedInUserId#, modified_on = current_timestamp
	from twin_brother_info where id = twin_brother_info.member_id
	returning id
)
, delete_immun as (
	delete from rch_immunisation_master where member_id in (select member_id from twin_brother_info) and member_type = ''C''
	returning id
)
, update_mobile_noti_child as (
	update event_mobile_notification_pending
	set base_date = #dob# ,	modified_by = #loggedInUserId#, modified_on = current_timestamp
	where member_id in (select member_id from twin_brother_info)
	and state=''PENDING''
	and notification_configuration_type_id in (''f51c8c4f-6b2b-4dcb-8e64-ada1a3044a67'',''dfa2b7ee-0ae4-4d5e-bb8e-20252905ebc6'')
	returning id
)
,delete_techo_noti_child as (
	delete from techo_notification_master
	where notification_type_id = 4
	and member_id in (select member_id from twin_brother_info) and state in (''PENDING'',''RESCHEDULE'')
	returning id
),
update_date_of_del_child as (
	update rch_wpd_child_master
	set date_of_delivery = #dob#,  modified_by = #loggedInUserId#, modified_on = current_timestamp
	where member_id in (select member_id from twin_brother_info)
	returning id
),
update_date_of_del_mother as (
	 update rch_wpd_mother_master
	set date_of_delivery = #dob#,  modified_by = #loggedInUserId#, modified_on = current_timestamp
	where id = (select wpd_mother_id from preg_mother_id)
	returning id
),
update_mobile_noti_mother as (
	update event_mobile_notification_pending
	set base_date = #dob#, 	modified_by = #loggedInUserId#, modified_on = current_timestamp
	where member_id = (select member_id from preg_mother_id)
	and state=''PENDING''
	and notification_configuration_type_id in (select id from event_configuration_type
					where mobile_notification_type = (select id from notification_type_master where code = (''FHW_PNC'')))
	returning id
)
,delete_techo_noti_mother as (
	delete from techo_notification_master
	where notification_type_id = (select id from notification_type_master where code = (''FHW_PNC''))
	and member_id in (select member_id from twin_brother_info) and state in (''PENDING'',''RESCHEDULE'')
	returning id
)
update imt_member mother
set last_delivery_date = #dob#, modified_by = #loggedInUserId#, modified_on = current_timestamp
from member_dob,preg_mother_id
where mother.id = preg_mother_id.member_id
and to_char(mother.last_delivery_date, ''dd/mm/yyyy'') = to_char(member_dob.dob, ''dd/mm/yyyy'');',false,'ACTIVE',NULL,true,'20483f2d-5a84-4a94-900f-ed6c372b40bc'),
	 (84954,'2020-06-17 10:37:56.041',84954,'2020-06-17 10:37:56.041','fetch_all_types_of_location',NULL,'select * from location_type_master',true,'ACTIVE',NULL,NULL,'c3be56d4-6de7-471e-b83a-6a5c3b0cf94d'),
	 (66522,'2019-12-31 10:08:39.15',66522,'2019-12-31 10:08:39.15','state_of_health_get_element_data','locationId,timeLine,elementName','select * from soh_timeline_analytics where location_id =#locationId# and element_name =''#elementName#'' and timeline_type=''#timeLine#''',true,'ACTIVE',NULL,true,'50a85268-8632-4365-86a7-21891050b3cf'),
	 (80208,'2020-06-18 00:00:00',80208,'2020-06-18 00:00:00','system_function_retrieve_all',NULL,'select 
sfm.id ,
sfm.name ,
sfm.description ,
sfm.parameters,
sfm.class_name as "className",
sfm.created_by "createdBy ",
sfm.created_on as "createdOn ",
sfm.modified_on as "modifiedOn ",
sfm.modified_by as "modifiedBy"
from system_function_master sfm ;',true,'ACTIVE',NULL,true,'d9dee4e3-60ed-44fe-b796-8d5179f78551'),
	 (1,'2019-12-30 00:00:00',74841,'2020-03-11 19:10:07.184','cm_dashboard_ddo_kpi','monthyear','with loc_det as (
    select
        case 
            when lm.type in (''D'', ''C'') then ''D''
            when lm.type in (''T'', ''B'', ''Z'') then ''T''
            when lm.type in (''P'', ''U'') then ''P''
            else lm.type end,
        lm.id as loc_id,
        lh.location_id,
        s.english_name as stateName,
        s.location_code as stateCode,
        d.english_name as districtName,
        case when lm.type = ''S'' then 0 else d.location_code end as districtCode,
        b.english_name as talukaName,
        lm.cm_dashboard_code as talukaCode,
        p.english_name as facilityName,
        case when lm.type = ''P'' then 1 when lm.type = ''U'' then 3 else null end as facilityCode
    from location_master lm
    left join location_master s
    on lh.level1 = s.id and s.state = ''ACTIVE'' and s.name not ilike ''%delete%''
    left join location_master d
    on lh.level3 = d.id and d.state = ''ACTIVE'' and d.name not ilike ''%delete%''
    left join location_master b
    on lh.level4 = b.id and b.state = ''ACTIVE'' and b.name not ilike ''%delete%''
    left join location_master p
    on lh.level5 = p.id and p.state = ''ACTIVE'' and p.name not ilike ''%delete%''
    where lm.state = ''ACTIVE'' and lm.name not ilike ''%delete%'' and lm."type" in (''S'', ''C'', ''D'', ''B'', ''P'', ''U'', ''T'', ''Z'')
),
ddo_api_report_det as (
    select
        lh.parent_id as loc_id
        ,sum(fi_partial_numerator) as total_fi_partial_numerator
        ,sum(fi_total_denominator) as total_fi_total_denominator
        ,sum(early_registration_numerator) as total_early_registration_numerator
        ,sum(pregnant_women_registration_denominator) as total_pregnant_women_registration_denominator
        ,sum(pmsma_trimester_numerator) as total_pmsma_trimester_numerator
        ,sum(pmsma_total_denominator) as total_pmsma_total_denominator
        ,sum(sex_ratio_male) as total_sex_ration_male
        ,sum(sex_ratio_female) as total_sex_ration_female
        ,sum(sex_ratio_male + sex_ratio_female ) as child
        ,sum(anemia_treated_numerator) as total_anemia_treated_numerator
        ,sum(anemia_tested_denominator) as total_anemia_tested_denominator
        ,sum(infant_death_actual_numerator) as total_infant_death_actual_numerator
        ,round(sum(sex_ratio_male + sex_ratio_female ) * 30 / 1000,0) as total_infant_death_estimated_denominator
        ,sum(low_birth_baby_partial_numerator) as total_low_birth_baby_partial_numerator
        ,sum(low_birth_baby_total_denominator) as total_low_birth_baby_total_denominator
        ,sum(institutional_deliveries_numerator) as total_institutional_deliveries_numerator
        ,sum(estimated_deliveries_denominator) as total_estimated_deliveries_denominator
        ,sum(maternal_death_actual_numerator) as total_maternal_death_actual_numerator
        ,round(sum(sex_ratio_male + sex_ratio_female ) * 87 / 100000,0) as total_maternal_death_estimated_denominator
        ,sum(ppiucd_inserted_numerator) as total_ppiucd_inserted_numerator
        ,sum(ppiucd_institutional_denominator) as total_ppiuce_institutional_denominator
    from cm_dashboard_ddo_kpi_detail as cm , location_hierchy_closer_det lh
    where cm.month_year = to_date(''#monthyear#'', ''MM-DD-YYYY'')
    and cm.location_id = lh.child_id and lh.parent_id in (select loc_id from loc_det)
    group by lh.parent_id
)
select
    EXTRACT(YEAR FROM to_date(''#monthyear#'', ''MM-DD-YYYY'')) as year,
    EXTRACT(MONTH FROM to_date(''#monthyear#'', ''MM-DD-YYYY'')) as month,
       loc_det.type as "locationLevel",
    loc_det.districtCode as "districtCode",
    loc_det.districtName as "districtName",
    loc_det.talukaCode as "talukaCode",
    loc_det.talukaName as "talukaName",
    loc_det.facilityName as "facilityName",
    loc_det.facilityCode as "facilityCode",
    COALESCE(ddo_api_report_det.total_fi_partial_numerator, 0) as "fullImmunizationAchievedNumerator",
    COALESCE(ddo_api_report_det.total_fi_total_denominator, 0) as "liveBirthRegDenominator",
    COALESCE(round(((ddo_api_report_det.total_fi_partial_numerator * 100.0) / NULLIF(ddo_api_report_det.total_fi_total_denominator, 0)), 2), 0) as "perFullyImmunization",

    COALESCE(ddo_api_report_det.total_early_registration_numerator, 0) as "totalEarlyANCRegistrationNumerator",
    COALESCE(ddo_api_report_det.total_pregnant_women_registration_denominator, 0) as "totalPregnantWomenRegistrationDenominator",
    COALESCE(round(((ddo_api_report_det.total_early_registration_numerator * 100.0) / NULLIF(ddo_api_report_det.total_pregnant_women_registration_denominator, 0)), 2), 0) as "perEarlyANCRegistrationAgainstPregnanatWomenRegisterd",

    COALESCE(ddo_api_report_det.total_pmsma_trimester_numerator, 0) as "totalPmsmaTrimesterNumerator",
    COALESCE(ddo_api_report_det.total_pmsma_total_denominator, 0) as "totalPmsmaDenominator",
    COALESCE(round(((ddo_api_report_det.total_pmsma_trimester_numerator * 100.0) / NULLIF(ddo_api_report_det.total_pmsma_total_denominator, 0)), 2), 0) as "perOfSecondAndThirdTrimsterAntenatalAgainstUnderPmsma",

    COALESCE(ddo_api_report_det.total_sex_ration_male, 0) as "totalSexRatioMale",
    COALESCE(ddo_api_report_det.total_sex_ration_female, 0) as "totalSexRatioFemale",
    COALESCE(round(((ddo_api_report_det.total_sex_ration_female * 1000.0) / NULLIF(ddo_api_report_det.total_sex_ration_male, 0)), 0), 0) as "sexRatioAtBirth",

    COALESCE(ddo_api_report_det.total_anemia_treated_numerator, 0) as "totalSevereAnemiaTreatedNumerator",
    COALESCE(ddo_api_report_det.total_anemia_tested_denominator, 0) as "totalSevereAnemiaTestedDenominator",
    COALESCE(round(((ddo_api_report_det.total_anemia_treated_numerator * 100.0) / NULLIF(ddo_api_report_det.total_anemia_tested_denominator, 0)), 2), 0) as "perPregnantWomanHavingSevereAnemiaTreatedAgainstSevereAnemiatested ",

    COALESCE(ddo_api_report_det.total_infant_death_actual_numerator, 0) as "totalInfantDeathActualNumerator",
    COALESCE(ddo_api_report_det.total_infant_death_estimated_denominator, 0) as "totalInfantDeathEstimatedDenominator",
    COALESCE(round(((ddo_api_report_det.total_infant_death_actual_numerator * 100.0) / NULLIF(ddo_api_report_det.total_infant_death_estimated_denominator, 0)), 2), 0) as "perInfantDeathReportedAgainstEstimatedInfantDeaths",

    COALESCE(ddo_api_report_det.total_low_birth_baby_partial_numerator, 0) as "totalLowBirthWeightBabyNumerator",
    COALESCE(ddo_api_report_det.total_low_birth_baby_total_denominator, 0) as "totalLiveBirthRegisteredDenominator",
    COALESCE(round(((ddo_api_report_det.total_low_birth_baby_partial_numerator * 100.0) / NULLIF(ddo_api_report_det.total_low_birth_baby_total_denominator, 0)), 2), 0) as "perLowBirthWeightBabyAgainstLiveBirthReg",

    COALESCE(ddo_api_report_det.total_institutional_deliveries_numerator, 0) as "totalInstitutionalDeliveriesNumerator",
    COALESCE(ddo_api_report_det.total_estimated_deliveries_denominator, 0) as "totalRegisteredDeliveriesDenominator",
    COALESCE(round(((ddo_api_report_det.total_institutional_deliveries_numerator * 100.0) / NULLIF(ddo_api_report_det.total_estimated_deliveries_denominator, 0)), 2), 0) as "perInstitutionalDeliveriesAgainstEstimatedDelivery",

    COALESCE(ddo_api_report_det.total_maternal_death_actual_numerator, 0) as "totalMaternalDeathActualNumerator",
    COALESCE(ddo_api_report_det.total_maternal_death_estimated_denominator, 0) as "totalMaternalDeathEstimatedDenominator",
    COALESCE(round(((ddo_api_report_det.total_maternal_death_actual_numerator * 100.0) / NULLIF(ddo_api_report_det.total_maternal_death_estimated_denominator, 0)), 2), 0) as "perMaternalDeathsReportedAgainstEstimated",

    COALESCE(ddo_api_report_det.total_ppiucd_inserted_numerator, 0) as "totalPpiucdInsertedNumerator",
    COALESCE(ddo_api_report_det.total_ppiuce_institutional_denominator, 0) as "totalPpiucdInstitutionalDenominator",
    COALESCE(round(((ddo_api_report_det.total_ppiucd_inserted_numerator * 100.0) / NULLIF(ddo_api_report_det.total_ppiuce_institutional_denominator, 0)), 2), 0) as "perPpiucdInsertedAgainstInstitutionalDeliveries",

    current_date as "asOnDate"

from loc_det
left join ddo_api_report_det on loc_det.loc_id = ddo_api_report_det.loc_id
order by loc_det.loc_id',true,'ACTIVE',NULL,true,'d8e7f898-f661-41fe-af99-42d4b0781f6d'),
	 (75398,'2020-06-18 00:00:00',75398,'2020-06-18 00:00:00','retrieve_health_infra_for_user','userId','select  h.name , h.id,h.type as type from health_infrastructure_details  h
 ,user_health_infrastructure  u
 where u.health_infrastrucutre_id=h.id and user_id=#userId# and u.state=''ACTIVE''',true,'ACTIVE','Retrieve Health Infrastructure for the user id',true,'867748e8-97fb-4f62-9d28-4f2e268cbd8f'),
	 (69851,'2020-06-18 00:00:00',69851,'2020-06-18 00:00:00','retrieve_followups_by_admission_id','admissionId','select * from child_cmtc_nrc_follow_up where admission_id = #admissionId#',true,'ACTIVE',NULL,true,'8eccb47b-841f-408c-867b-f58a1f95a124'),
	 (75398,'2020-06-18 00:00:00',75398,'2020-06-18 00:00:00','fetch_listvalue_detail_from_field','field','select * from listvalue_field_value_detail where field_key = (select field_key from listvalue_field_master where field =#field#) and is_active = true',true,'ACTIVE','It will fetch the active list values from field name',true,'161086f3-5a83-47f5-b5b6-0d8e809fd5d7'),
	 (75398,'2020-06-22 00:00:00',75398,'2020-06-22 00:00:00','location_search_for_web','locationString','select loc.id,string_agg(l.name,''>'' order by lhcd.depth desc) as "hierarchy"
from location_master loc 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = loc.id
inner join location_master l on l.id = lhcd.parent_id
where (loc.name ilike concat(''%'',#locationString#,''%'') or loc.english_name ilike concat(''%'',#locationString#,''%'')) and loc.type in (''V'',''ANG'')
group by loc.id, loc.name
limit 50',true,'ACTIVE',NULL,true,'ae9f821c-2703-4e75-b882-a856c3dd58f5'),
	 (75398,'2020-06-22 00:00:00',75398,'2020-06-22 00:00:00','retrival_listvalue_values_acc_field','fieldKey','select * from listvalue_field_value_detail where  field_key=#fieldKey# and is_active',true,'ACTIVE',NULL,true,'f432547a-8222-492c-b276-206013f5db55'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','covid19_get_admission_by_health_infra_and_case_no','loggedInUserId,caseNo','with health_infra_det as (
select * from health_infrastructure_details where id = (select uhi.health_infrastrucutre_id 
from user_health_infrastructure uhi where uhi.user_id = #loggedInUserId# and uhi.state = ''ACTIVE'')
)
select concat_ws('' '',first_name, middle_name,last_name,''is already register with same indoor case no. Please enter new indoor case number'') as "resultMsg"
from covid19_admission_detail where health_infra_id in (select id from health_infra_det) 
and case_no = #caseNo# limit 1',true,'ACTIVE',NULL,true,'21403fb9-4924-4606-bb1f-d49e968eec47'),
	 (60512,'2020-12-08 00:00:00',60512,'2020-12-08 00:00:00','get_last_n_financial_year_range','count','select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as year
from generate_series(current_date - cast(concat(#count#,''year'') as interval), current_date, ''1 year'') as curr order by year desc;',true,'ACTIVE','To get financial last #count# financial year and current one',true,'c04a9e6a-1c78-4af4-89d8-4f4533871792'),
	 (58981,'2019-09-02 14:23:12.236',58981,'2019-09-02 14:23:12.236','mob_asha_anc_services_provided','memberId','select to_char(rch.service_date, ''DD/MM/YYYY'') as "Service Date",
cast(''Home'' as text) as "ANC Place",
rch.id as "hiddenVisitId",
cast(''ASHA_ANC'' as text) as "hiddenServiceType"
from rch_asha_anc_master rch
inner join imt_member mem on rch.member_id = mem.id
where member_id = #memberId#
order by rch.service_date desc;',true,'ACTIVE',NULL,true,'0dd90c18-b1e3-43e2-b518-865cc84349ac'),
	 (75398,'2020-06-22 00:00:00',75398,'2020-06-22 00:00:00','no_of_caesarean_deliveries_conducted','performanceDate,hid','SELECT count(*) from rch_wpd_mother_master where health_infrastructure_id=#hid# and  type_of_delivery = ''CAESAREAN'' and
date_of_delivery between cast(date_trunc(''day'', cast(#performanceDate# as date)) + ''00:00:00'' as timestamp)
	and
cast(date_trunc(''day'', cast(#performanceDate# as date)) + ''23:59:59'' as timestamp)',true,'ACTIVE','To get number of caesarean deliveries conducted at health infrastructure on date',true,'35230f5a-1313-457d-93d6-0dc7fe2f1f73'),
	 (75398,'2020-06-22 00:00:00',75398,'2020-06-22 00:00:00','no_of_deliveries_conducted','performanceDate,hid','SELECT count(*) from rch_wpd_mother_master where health_infrastructure_id=#hid#  and
date_of_delivery between cast(date_trunc(''day'', cast(#performanceDate# as date)) + ''00:00:00'' as timestamp)
	and
cast(date_trunc(''day'', cast(#performanceDate# as date)) + ''23:59:59'' as timestamp)',true,'ACTIVE','To get number of deliveries conducted at health infrastructure on date.',true,'6472cc04-105e-4a47-9d3c-97c07def2849'),
	 (57698,'2019-05-07 19:34:15.552',66522,'2019-07-22 17:58:50.112','state_of_health_data_retrieval_2','locationId,columnName','with  location_type as(select  level,string_agg(name,''/'') as location_type from location_type_master where 
level=(case when ''#locationId#'' = ''null'' then 1 else (select level+1 from location_type_master t 
inner join anmol_location_master_temp m on t.type=m.type where id=#locationId#) end)group by level )

select lt.level,lt.type,l.id as "locationId",location_type.location_type as "locationType",
case when l.english_name is not null then l.english_name else l.name end as english_name,element_name as "elementName",
sum(yesterday) as yesterday,sum(last7days) as last7days,sum(last30days) as last30days,target,sum(male) as male,sum(female) as female,
sum(chart1) as chart1,sum(chart2) as chart2,sum(chart3) as chart3,sum(chart4) as chart4 from 
location_type,location_type_master lt,state_of_health_master sh,anmol_location_master_temp l where sh.location_id in 
(select id from anmol_location_master_temp  where #columnName# = (case when ''#locationId#'' = ''null'' then  2  else #locationId# end))and sh.location_id = l.id 
and l.type = lt.type group by lt.level, lt.type,
location_type.location_type, sh.target,l.id,l.english_name,sh.element_name order by english_name;',true,'ACTIVE',NULL,true,'a83521fa-5e43-4628-9079-15ef59189951'),
	 (75398,'2020-06-22 00:00:00',75398,'2020-06-22 00:00:00','retrieve_opd_registered_patients','fetchPendingOnly,searchDate,userId','select
    im.id as "memberId",
    im.unique_health_id as "uniqueHealthId",
    if.family_id as "familyId",
    concat(im.first_name, '' '', im.middle_name, '' '', im.last_name) as "name",
    im.dob as "dob",
    cast(age(im.dob) as text) as "age",
    if.location_id as "locationId",
    if.area_id as "areaId",
    get_location_hierarchy(if.location_id) as "locationHierarchy",
    romr.id as "opdMemberRegistrationId",
    romr.registration_date as "registrationDate",
    romr.health_infra_id as "healthInfraId",
    hid.name as "healthInfraName"
    from rch_opd_member_registration romr
    inner join imt_member im on im.id = romr.member_id
    inner join imt_family if on im.family_id = if.family_id
    left join health_infrastructure_details hid on hid.id = romr.health_infra_id
    left join rch_opd_member_master romm on romr.id = romm.opd_member_registration_id
    where cast(romr.registration_date as date) = cast(#searchDate# as date)
    and (case
            when #fetchPendingOnly# = true then romm.id is null
            else true
        end)
    and im.basic_state in (''NEW'', ''VERIFIED'', ''REVERIFICATION'', ''TEMPORARY'', ''UNHANDLED'', ''IDSP'')
    and romr.health_infra_id in (select health_infrastrucutre_id from user_health_infrastructure uhi where user_id = #userId# and state = ''ACTIVE'')
    order by romr.registration_date',true,'ACTIVE','Retrieve OPD Registered Patients',true,'a89d0cdb-e3b8-4186-842b-887cf464c9d2'),
	 (409,'2019-08-02 16:04:11.177',409,'2019-08-02 16:06:09.272','crs_still_birth_details_between_dates','from_date,to_date','with dates as(
select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end,''MM-DD-YYYY'') as from_date
,to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds'' as to_date
),still_birth_detail as (
select 
rwm.pregnancy_reg_det_id as pregnancy_id
,mother.unique_health_id as mother_techo_id
,case when rwc.gender = ''M'' then true else false end as is_male
,case when rwc.gender = ''F'' then true else false end as is_female
,case when rwc.gender not in(''M'',''F'') then true else false end as is_other
,mother.family_id as family_id
, to_char(rwc.date_of_delivery,''DD/MM/YYYY'') as dob
, mother.middle_name as father_name
, mother.first_name as mother_name
, rwc.birth_weight as birth_weight
, concat(f.address1,'' , '',f.address2) as address
, concat(f.address1,'' , '',f.address2) as permenant_address
, case when rwm.delivery_place = ''HOSP'' then true else false end as is_hospital_delivery
, case when rwm.delivery_place = ''HOME'' then true else false end as is_home_delivery
, case when rwm.delivery_place not in (''HOME'',''HOSP'') then true else false end as is_other_place_delivery
, hid."name" as hospital_name
,hid.address as hospital_address
,case when f.religion = ''621'' then true else false end as is_hindu_region
,case when f.religion = ''622'' then true else false end as is_muslim_region
,case when f.religion = ''623'' then true else false end as is_christian_region
,case when f.religion = ''640'' then true else false end as is_other_region
,case when mother.education_status = ''701'' then true else false end as is_mother_education_illiterate
,case when mother.education_status in (''702'',''703'') then true else false end as is_mother_education_till_7_class
,case when mother.education_status in (''704'',''705'') then true else false end as is_mother_education_till_12_class
,case when mother.education_status in (''706'') then true else false end as is_mother_education_less_then_graduate
,case when mother.education_status in (''707'',''708'') then true else false end as is_mother_education_graduate
,case when (mother.education_status is null or mother.education_status = ''737'') then true else false end as is_mother_education_not_applicable
,null as father_occupation
,null as mother_occupation
,mother.year_of_wedding - extract(year from mother.dob) as age_marriage
,cast(EXTRACT(year FROM age(rwc.date_of_delivery,mother.dob)) as int) as age_at_a_time_of_delivery
,coalesce(rpa.registered_with_no_of_child,0) + 0 as total_child
,coalesce(rpa.registered_with_male_cnt,0) as male_child
,coalesce(rpa.registered_with_female_cnt,0)  as female_child
,case when rwm.type_of_hospital in (''897'',''1062'',''899'',''1061'',''895'',''1009'',''890'',''1008'',''894'',''1063'',''892'',''891'',''1012'',''896'',''1007'',''1084'') then true else false end as is_govt_hospital_service
,case when rwm.type_of_hospital in (''893'',''898'',''1013'',''1010'') then true else false end as is_pvt_hospital_service
,case when rwm.delivery_done_by in (''DOCTOR'',''NURSE'',''STAFF_NURSE'',''CY-Doctor'',''ANM'') then true else false end as is_doctor_nurse_anm_service
,case when rwm.delivery_done_by in (''TBA'') then true else false end as is_dayan_service
,case when rwm.delivery_done_by in (''NON_TBA'',''NON-TBA'') then true else false end as is_other_service
,rwm.location_id 
,(cast(rwc.date_of_delivery as date) - rpr.lmp_date)/7 as del_week 
from 
(select * from rch_wpd_mother_master,dates where created_on between dates.from_date and dates.to_date) rwm
inner join rch_wpd_child_master rwc on rwm.pregnancy_outcome = ''SBIRTH'' and
rwc.wpd_mother_id = rwm.id 
left join rch_pregnancy_analytics_details rpa on rpa.pregnancy_reg_id = rwm.pregnancy_reg_det_id
inner join rch_pregnancy_registration_det rpr on rpr.id = rwm.pregnancy_reg_det_id
inner join imt_member mother on rwm.member_id = mother.id
inner join imt_family f on f.family_id = mother.family_id
left join health_infrastructure_details hid on hid.id = rwm.health_infrastructure_id
),location_detail as (
select t.location_id,t.district_name,t.taluka_name,t.village_name,t.district_lgd_code,t.taluka_lgd_code,t.village_lgd_code
,case  when t.is_village = 1 then true else false end as is_village
,case  when t.is_urban = 1 then true else false end as is_urban
,hi.nin as sub_center_code
from (
select lh.child_id as location_id
,max(case when lh.parent_loc_type in (''C'',''D'') then lm.name else null end) as district_name
,max(case when lh.parent_loc_type in (''B'',''Z'') then lm.name else null end) as taluka_name
,max(case when lh.parent_loc_type in (''V'',''ANG'') then lm.name else null end) as village_name
,max(case when lh.parent_loc_type in (''C'',''D'') then lm.lgd_code else null end) as district_lgd_code
,max(case when lh.parent_loc_type in (''B'',''Z'') then lm.lgd_code else null end) as taluka_lgd_code
,max(case when lh.parent_loc_type in (''V'',''ANG'') then lm.lgd_code else null end) as village_lgd_code
,max(case when lh.parent_loc_type in (''V'') then 1 else 0 end) as is_village
,max(case when lh.parent_loc_type in (''ANG'') then 1 else 0 end) as is_urban
,max(case when lh.parent_loc_type in (''SC'') then lm.id else null end) as sub_centre_id
from still_birth_detail lbd 
inner join location_hierchy_closer_det lh on lh.child_id = lbd.location_id
inner join location_master lm on lh.parent_id = lm.id
group by  lh.child_id
) as t 
left join health_infrastructure_details hi on hi.location_id = t.sub_centre_id
)
select 
pregnancy_id as "pregnancyId"
,mother_techo_id as "motherTechoId"
,is_male as "isMale"
,is_female as "isFemale"
,is_other as "isOther"
,dob as "dob"
,father_name as "fatherName"
,mother_name as "motherName"
,is_hospital_delivery as "isHospitalDelivery"
,is_home_delivery as "isHomeDelivery"
,is_other_place_delivery as "isOtherPlaceDelivery"
,hospital_name as "hospitalName"
,hospital_address as "hospitalAddress"
,is_mother_education_illiterate  as "isMotherEducationIlliterate"
,is_mother_education_till_7_class as "isMotherEducationTill7Class"
,is_mother_education_till_12_class as "isMotherEducationTill12Class"
,is_mother_education_less_then_graduate as "isMotherEducationLessThenGraduate"
,is_mother_education_graduate  "isMotherEducationGraduate"
,is_mother_education_not_applicable as "isMotherEducationNotApplicable"
,age_at_a_time_of_delivery as "ageAtTimeOfDelivery"
,is_govt_hospital_service as "isGovtHospitalService"
,is_pvt_hospital_service as "isPvtHospitalService"
,is_doctor_nurse_anm_service as "isDoctorNurseAnmService"
,is_dayan_service as "isDayanService"
,is_other_service as "isOtherService"
,del_week as "deliveryWeek"

,district_name as "districtName"
,taluka_name as "talukaName"
,village_name as "villageName"
,district_lgd_code as "districtLgdCode"
,taluka_lgd_code as "talukaLgdCode"
,village_lgd_code as "villageLgdCode"
,is_village as "isVillage"
,is_urban as "isUrban"
,sub_center_code as "subCenterCode"

from 
still_birth_detail lbd
left join location_detail ld on ld.location_id = lbd.location_id;',true,'ACTIVE',NULL,true,'8099a2db-6c0e-4a1b-b06f-52097ac26741'),
	 (75398,'2020-06-22 00:00:00',75398,'2020-06-22 00:00:00','retrieve_opd_patients_for_treatment','fetchPendingOnly,searchDate,userId','select
    im.id as "memberId",
    im.unique_health_id as "uniqueHealthId",
    if.family_id as "familyId",
    concat(im.first_name, '' '', im.middle_name, '' '', im.last_name) as "name",
    im.dob as "dob",
    cast(age(im.dob) as text) as "age",
    if.location_id as "locationId",
    if.area_id as "areaId",
    get_location_hierarchy(if.location_id) as "locationHierarchy",
    romr.id as "opdMemberRegistrationId",
    romr.registration_date as "registrationDate",
    romr.health_infra_id as "healthInfraId",
    hid.name as "healthInfraName"
    from rch_opd_member_registration romr
    inner join imt_member im on im.id = romr.member_id
    inner join imt_family if on im.family_id = if.family_id
    left join health_infrastructure_details hid on hid.id = romr.health_infra_id
    left join rch_opd_member_master romm on romr.id = romm.opd_member_registration_id
    where
        (case
            when #fetchPendingOnly# = true then romm.id is null
            else true
        end)
    -- and cast(romr.registration_date as date) = cast(#searchDate# as date)
    and im.basic_state in (''NEW'', ''VERIFIED'', ''REVERIFICATION'', ''TEMPORARY'', ''UNHANDLED'', ''IDSP'')
    and romr.health_infra_id in (select health_infrastrucutre_id from user_health_infrastructure uhi where user_id = #userId# and state = ''ACTIVE'')
    order by romr.registration_date desc',true,'ACTIVE','Retrieve OPD Patients for Treatment',true,'05d4e978-67a8-46c3-8b57-5cf4b4cbe2c3'),
	 (75398,'2020-06-22 00:00:00',75398,'2020-06-22 00:00:00','opd_search_by_member_id','offSet,limit,uniqueHealthId','select
   imt_member.unique_health_id as "uniqueHealthId",
   imt_member.id as "memberId",
   imt_family.family_id as "familyId",
   imt_family.location_id as "locationId",
   imt_member.mobile_number as "mobileNumber",
   imt_family.area_id as "areaId",
   get_location_hierarchy(imt_family.location_id) as "locationHierarchy",
   concat(imt_member.first_name, '' '', imt_member.middle_name, '' '', imt_member.last_name) as "name",
   imt_member.dob as "dob",
   cast(age(imt_member.dob) as text) as "age",
   concat(uu1.first_name, '' '', uu1.middle_name, '' '', uu1.last_name) as "ashaName",
   uu1.contact_number as "ashaContactNumber",
   uu1.techo_phone_number as "ashaTechoContactNumber",
   concat(uu2.first_name, '' '', uu2.middle_name, '' '', uu2.last_name) as "anmName",
   uu2.contact_number as "anmContactNumber",
   uu2.techo_phone_number as "anmTechoContactNumber"
   from imt_member
   inner join imt_family on imt_member.family_id = imt_family.family_id
   left join um_user_location uul1 on uul1.loc_id = imt_family.area_id and uul1.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul1.user_id and state = ''ACTIVE'') = 24
   left join um_user uu1 on uu1.id = uul1.user_id
   left join um_user_location uul2 on uul2.loc_id = imt_family.location_id and uul2.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul2.user_id and state = ''ACTIVE'') = 30
   left join um_user uu2 on uu2.id = uul2.user_id
   where imt_member.unique_health_id in (#uniqueHealthId#)
   and imt_member.basic_state in (''NEW'', ''VERIFIED'', ''REVERIFICATION'', ''TEMPORARY'')
   limit #limit# offset #offSet#',true,'ACTIVE','OPD Search By Member ID',true,'e597e279-6c53-4e2e-a34e-71d4b97131ad'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','help_desk_nutrition_cmam_admission_details_retrieve','healthid','select child_nutrition_cmam_master.id as "id",
service_date as "serviceDate",
identified_from as "identifiedFrom",
cured_on as "curedOn",
cured_muac as "curedMuac",
case when is_case_completed is true then ''Yes'' else ''No'' end as "isCaseCompleted",
concat(um_user.first_name,'' '',um_user.last_name) as "createdBy",
child_nutrition_cmam_master.created_on as "createdOn"
from child_nutrition_cmam_master
inner join um_user on child_nutrition_cmam_master.created_by = um_user.id
where child_id in (select id from imt_member where unique_health_id = #healthid#)',true,'ACTIVE',NULL,true,'3143010b-fbee-45c5-8570-790ccdb92f88'),
	 (75398,'2020-06-22 00:00:00',75398,'2020-06-22 00:00:00','opd_search_by_mobile_number','offSet,mobileNumber,limit','select
   imt_member.unique_health_id as "uniqueHealthId",
   imt_member.id as "memberId",
   imt_family.family_id as "familyId",
   imt_family.location_id as "locationId",
   imt_member.mobile_number as "mobileNumber",
   get_location_hierarchy(imt_family.location_id) as "locationHierarchy",
   concat(imt_member.first_name, '' '', imt_member.middle_name, '' '', imt_member.last_name) as "name",
   imt_member.dob as "dob",
   cast(age(imt_member.dob) as text) as "age",
   concat(uu1.first_name, '' '', uu1.middle_name, '' '', uu1.last_name) as "ashaName",
   uu1.contact_number as "ashaContactNumber",
   uu1.techo_phone_number as "ashaTechoContactNumber",
   concat(uu2.first_name, '' '', uu2.middle_name, '' '', uu2.last_name) as "anmName",
   uu2.contact_number as "anmContactNumber",
   uu2.techo_phone_number as "anmTechoContactNumber"
   from imt_member
   inner join imt_family on imt_member.family_id = imt_family.family_id
   left join um_user_location uul1 on uul1.loc_id = imt_family.area_id and uul1.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul1.user_id and state = ''ACTIVE'') = 24
   left join um_user uu1 on uu1.id = uul1.user_id
   left join um_user_location uul2 on uul2.loc_id = imt_family.location_id and uul2.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul2.user_id and state = ''ACTIVE'') = 30
   left join um_user uu2 on uu2.id = uul2.user_id
   where imt_member.mobile_number = #mobileNumber#
   and imt_member.basic_state in (''NEW'', ''VERIFIED'', ''REVERIFICATION'', ''TEMPORARY'')
   limit #limit# offset #offSet#',true,'ACTIVE','OPD Search By Mobile Number',true,'62a317fb-f9dd-4241-a9c7-83732b61934a'),
	 (75398,'2020-06-22 00:00:00',75398,'2020-06-22 00:00:00','opd_search_by_family_id','familyId,offSet,limit','select
   imt_member.unique_health_id as "uniqueHealthId",
   imt_member.id as "memberId",
   imt_family.family_id as "familyId",
   imt_family.location_id as "locationId",
   imt_member.mobile_number as "mobileNumber",
   get_location_hierarchy(imt_family.location_id) as "locationHierarchy",
   concat(imt_member.first_name, '' '', imt_member.middle_name, '' '', imt_member.last_name) as "name",
   imt_member.dob as "dob",
   cast(age(imt_member.dob) as text) as "age",
   concat(uu1.first_name, '' '', uu1.middle_name, '' '', uu1.last_name) as "ashaName",
   uu1.contact_number as "ashaContactNumber",
   uu1.techo_phone_number as "ashaTechoContactNumber",
   concat(uu2.first_name, '' '', uu2.middle_name, '' '', uu2.last_name) as "anmName",
   uu2.contact_number as "anmContactNumber",
   uu2.techo_phone_number as "anmTechoContactNumber"
   from imt_member
   inner join imt_family on imt_member.family_id = imt_family.family_id
   left join um_user_location uul1 on uul1.loc_id = imt_family.area_id and uul1.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul1.user_id and state = ''ACTIVE'') = 24
   left join um_user uu1 on uu1.id = uul1.user_id
   left join um_user_location uul2 on uul2.loc_id = imt_family.location_id and uul2.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul2.user_id and state = ''ACTIVE'') = 30
   left join um_user uu2 on uu2.id = uul2.user_id
   where imt_family.family_id in (#familyId#)
   and imt_member.basic_state in (''NEW'', ''VERIFIED'', ''REVERIFICATION'', ''TEMPORARY'')
   limit #limit# offset #offSet#',true,'ACTIVE','OPD Search By Family ID',true,'ad64a058-7dad-41e4-a7d3-6b9a03575e4c'),
	 (75398,'2020-06-22 00:00:00',75398,'2020-06-22 00:00:00','pnc_retrieve_mother_list_by_woman_id','womanId','select * from imt_member where id in 
(select member_id from rch_pregnancy_registration_det where delivery_date > now() - interval ''60 days''
and state = ''DELIVERY_DONE''
and mthr_reg_no = #womanId#)
and ((imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')) or (imt_member.state = ''com.argusoft.imtecho.member.state.temporary''))',true,'ACTIVE',NULL,true,'cb1c0474-044a-49b5-b9e1-d2c411989ff9'),
	 (409,'2019-08-02 16:04:25.964',409,'2019-08-02 16:06:19.264','crs_death_details_between_dates','from_date,to_date','with dates as(
select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end,''MM-DD-YYYY'') as from_date
,to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds'' as to_date
),death_detail as (
select 
member_det.unique_health_id as member_techo_id
,f.location_id
,case when member_det.gender = ''M'' then true else false end as is_male
,case when member_det.gender = ''F'' then true else false end as is_female
,case when member_det.gender not in(''M'',''F'') then true else false end as is_other
,member_det.family_id as family_id
, to_char(rmdd.dod,''DD/MM/YYYY'') as dod
, concat_ws('' '',member_det.first_name,member_det.middle_name,member_det.last_name) as full_name
, member_det.middle_name as father_husband_name
, mother.first_name as mother_name
,cast(EXTRACT(year FROM age(rmdd.dod,member_det.dob)) as int) as age_time_of_death
, concat(f.address1,'' , '',f.address2) as address
, concat(f.address1,'' , '',f.address2) as permenant_address
, case when rmdd.place_of_death = ''HOSP'' then true else false end as is_hospital_death
, case when rmdd.place_of_death = ''HOME'' then true else false end as is_home_death
, case when rmdd.place_of_death not in (''HOME'',''HOSP'') then true else false end as is_other_place_death
,case when f.religion = ''621'' then true else false end as is_hindu_region
,case when f.religion = ''622'' then true else false end as is_muslim_region
,case when f.religion = ''623'' then true else false end as is_christian_region
,case when f.religion = ''640'' then true else false end as is_other_region
,case when member_det.education_status = ''701'' then true else false end as is_beneficary_education_illiterate
,case when member_det.education_status in (''702'',''703'') then true else false end as is_beneficary_education_till_7_class
,case when member_det.education_status in (''704'',''705'') then true else false end as is_beneficary_education_till_12_class
,case when member_det.education_status in (''706'') then true else false end as is_beneficary_education_less_then_graduate
,case when member_det.education_status in (''707'',''708'') then true else false end as is_beneficary_education_graduate
,case when (mother.education_status is null or mother.education_status = ''737'') then true else false end as is_beneficary_education_not_applicable
,case when (member_det.is_pregnant = true or (cast(rmdd.dod as date) - cast(member_det.last_delivery_date as date) <= 42)) then true else false end as maternal_death
,lov.value as death_reason

from 
(select * from rch_member_death_deatil,dates where created_on between dates.from_date and dates.to_date)  rmdd
inner join imt_member member_det on member_det.id = rmdd.member_id
left join imt_member mother on member_det.mother_id = mother.id
inner join imt_family f on f.family_id = member_det.family_id
left join listvalue_field_value_detail lov on lov.id = cast(rmdd.death_reason as int)

),location_detail as (

select t.location_id,t.district_name,t.taluka_name,t.village_name,t.district_lgd_code,t.taluka_lgd_code,t.village_lgd_code
,case  when t.is_village = 1 then true else false end as is_village
,case  when t.is_urban = 1 then true else false end as is_urban
,hi.nin as sub_center_code
from (
select lh.child_id as location_id
,max(case when lh.parent_loc_type in (''C'',''D'') then lm.name else null end) as district_name
,max(case when lh.parent_loc_type in (''B'',''Z'') then lm.name else null end) as taluka_name
,max(case when lh.parent_loc_type in (''V'',''ANG'') then lm.name else null end) as village_name
,max(case when lh.parent_loc_type in (''C'',''D'') then lm.lgd_code else null end) as district_lgd_code
,max(case when lh.parent_loc_type in (''B'',''Z'') then lm.lgd_code else null end) as taluka_lgd_code
,max(case when lh.parent_loc_type in (''V'',''ANG'') then lm.lgd_code else null end) as village_lgd_code
,max(case when lh.parent_loc_type in (''V'') then 1 else 0 end) as is_village
,max(case when lh.parent_loc_type in (''ANG'') then 1 else 0 end) as is_urban
,max(case when lh.parent_loc_type in (''SC'') then lm.id else null end) as sub_centre_id
from death_detail lbd 
inner join location_hierchy_closer_det lh on lh.child_id = lbd.location_id
inner join location_master lm on lh.parent_id = lm.id
group by  lh.child_id
) as t 
left join health_infrastructure_details hi on hi.location_id = t.sub_centre_id
)
select 
member_techo_id as "memberTechoId"
,is_male as  "isMale"
,is_female as "isFemale"
,is_other as "isOther"
,dod as "dateOfDeath"
,full_name as "fullName"
,father_husband_name as "fatherOrHusbandName"
,mother_name as "motherName"
,age_time_of_death as "ageAtTimeOfDeath"
,address as "currentAddress"
,permenant_address as "permenantAddress"
,is_hospital_death as "isHospitalDeath"
,is_home_death as "isHomeDeath"
,is_other_place_death as "isOtherPlaceDeath"
,is_hindu_region as "isHinduRegion"
,is_muslim_region as "isMuslimRegion"
,is_christian_region as "isChristianRegion"
,is_other_region as "isOtherRegion"
,is_beneficary_education_illiterate as "isBeneficaryEducationIlliterate"
,is_beneficary_education_till_7_class as "isBeneficaryEducationTill7Class"
,is_beneficary_education_till_12_class as "isBeneficaryEducationTill12Class"
,is_beneficary_education_less_then_graduate as "isBeneficaryEducationLessThenGraduate"
,is_beneficary_education_graduate as "isBeneficaryEducationGraduate"
,is_beneficary_education_not_applicable as "isBeneficaryEducationNotApplicable"
,maternal_death as "isMaternalDeath"
,death_reason as "deathReason"

,district_name as "districtName"
,taluka_name as "talukaName"
,village_name as "villageName"
,district_lgd_code as "districtLgdCode"
,taluka_lgd_code as "talukaLgdCode"
,village_lgd_code as "villageLgdCode"
,is_village as "isVillage"
,is_urban as "isUrban"

from 
death_detail lbd
left join location_detail ld on ld.location_id = lbd.location_id;',true,'ACTIVE',NULL,true,'c5843f03-f9ab-4047-834e-2ff5dd24c60b'),
	 (75398,'2020-06-22 00:00:00',75398,'2020-06-22 00:00:00','opd_search_by_dob','offSet,dob,limit','select
   imt_member.unique_health_id as "uniqueHealthId",
   imt_member.id as "memberId",
   imt_family.family_id as "familyId",
   imt_family.location_id as "locationId",
   imt_member.mobile_number as "mobileNumber",
   get_location_hierarchy(imt_family.location_id) as "locationHierarchy",
   concat(imt_member.first_name, '' '', imt_member.middle_name, '' '', imt_member.last_name) as "name",
   imt_member.dob as "dob",
   cast(age(imt_member.dob) as text) as "age",
   concat(uu1.first_name, '' '', uu1.middle_name, '' '', uu1.last_name) as "ashaName",
   uu1.contact_number as "ashaContactNumber",
   uu1.techo_phone_number as "ashaTechoContactNumber",
   concat(uu2.first_name, '' '', uu2.middle_name, '' '', uu2.last_name) as "anmName",
   uu2.contact_number as "anmContactNumber",
   uu2.techo_phone_number as "anmTechoContactNumber"
   from imt_member
   inner join imt_family on imt_member.family_id = imt_family.family_id
   left join um_user_location uul1 on uul1.loc_id = imt_family.area_id and uul1.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul1.user_id and state = ''ACTIVE'') = 24
   left join um_user uu1 on uu1.id = uul1.user_id
   left join um_user_location uul2 on uul2.loc_id = imt_family.location_id and uul2.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul2.user_id and state = ''ACTIVE'') = 30
   left join um_user uu2 on uu2.id = uul2.user_id
   where imt_member.dob = cast(#dob# as date)
   and imt_member.basic_state in (''NEW'', ''VERIFIED'', ''REVERIFICATION'', ''TEMPORARY'')
   limit #limit# offset #offSet#',true,'ACTIVE','OPD Search By DOB',true,'45394147-30e4-44ee-9ede-5d8d4c25438a'),
	 (75398,'2020-06-22 00:00:00',75398,'2020-06-22 00:00:00','opd_search_by_pmjay_number','pmjayNumber,offSet,limit','select
   imt_member.unique_health_id as "uniqueHealthId",
   imt_member.id as "memberId",
   imt_family.family_id as "familyId",
   imt_family.location_id as "locationId",
   imt_member.mobile_number as "mobileNumber",
   get_location_hierarchy(imt_family.location_id) as "locationHierarchy",
   concat(imt_member.first_name, '' '', imt_member.middle_name, '' '', imt_member.last_name) as "name",
   imt_member.dob as "dob",
   cast(age(imt_member.dob) as text) as "age",
   concat(uu1.first_name, '' '', uu1.middle_name, '' '', uu1.last_name) as "ashaName",
   uu1.contact_number as "ashaContactNumber",
   uu1.techo_phone_number as "ashaTechoContactNumber",
   concat(uu2.first_name, '' '', uu2.middle_name, '' '', uu2.last_name) as "anmName",
   uu2.contact_number as "anmContactNumber",
   uu2.techo_phone_number as "anmTechoContactNumber"
   from imt_member
   inner join imt_member_cfhc_master on imt_member.id = imt_member_cfhc_master.member_id
   inner join imt_family on imt_member.family_id = imt_family.family_id
   left join um_user_location uul1 on uul1.loc_id = imt_family.area_id and uul1.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul1.user_id and state = ''ACTIVE'') = 24
   left join um_user uu1 on uu1.id = uul1.user_id
   left join um_user_location uul2 on uul2.loc_id = imt_family.location_id and uul2.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul2.user_id and state = ''ACTIVE'') = 30
   left join um_user uu2 on uu2.id = uul2.user_id
   where imt_member_cfhc_master.pmjay_number = #pmjayNumber#
   and imt_member.basic_state in (''NEW'', ''VERIFIED'', ''REVERIFICATION'', ''TEMPORARY'')
   limit #limit# offset #offSet#',true,'ACTIVE','OPD Search By PMJAY Number',true,'1578f8de-b5c5-4f16-bc4d-9e129fab58d9'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','update_iucd_removal','iucdRemovalReason,iucdRemovalDate,loggedInUserId,memberId','update imt_member
set is_iucd_removed = true,
last_method_of_contraception = null,
fp_insert_operate_date = null,
iucd_removal_date = #iucdRemovalDate#,
iucd_removal_reason = #iucdRemovalReason#,
modified_on = now(),
modified_by = #loggedInUserId#
where id = #memberId#',false,'ACTIVE',NULL,true,'a8c1c9fd-acce-4032-a3e7-f7545f05f6e5'),
	 (60512,'2019-07-30 18:51:35.955',60512,'2019-07-30 18:51:35.955','cmtc_nrc_follow_up_organization_unit_search','offSet,locationId,limit','with location_ids as (
	select child_id from location_hierchy_closer_det
	where parent_id = #locationId#
)
select
imt_member.id,
imt_member.first_name as "firstName",
imt_member.middle_name as "middleName",
imt_member.last_name as "lastName",
imt_member.dob as dob,
csd.admission_id as "admissionId",
get_location_hierarchy(imt_family.location_id) as "locationHierarchy"
from imt_member
inner join imt_family on imt_member.family_id = imt_family.family_id
inner join child_cmtc_nrc_screening_detail csd on imt_member.id = csd.child_id 
where imt_family.location_id in (select child_id from location_ids)
and csd.state = ''DISCHARGE'' and csd.is_case_completed is null
limit #limit# offset #offSet#',true,'ACTIVE',NULL,true,'2ede2883-c7db-4fe5-a813-ace61fb1f182'),
	 (60512,'2019-07-30 18:50:20.95',60512,'2019-07-31 17:54:12.327','cmtc_nrc_follow_up_family_id_search','familyId,offSet,limit','select 
imt_member.id,
imt_member.first_name as "firstName",
imt_member.middle_name as "middleName",
imt_member.last_name as "lastName",
imt_member.dob as dob,
csd.admission_id as "admissionId",
get_location_hierarchy(imt_family.location_id) as "locationHierarchy"
from imt_member
inner join imt_family on imt_member.family_id = imt_family.family_id
inner join child_cmtc_nrc_screening_detail csd on imt_member.id = csd.child_id 
where imt_member.family_id = ''#familyId#''
and csd.state = ''DISCHARGE'' and csd.is_case_completed is null
limit #limit# offset #offSet#',true,'ACTIVE',NULL,true,'d2243cf3-bb3a-4d7a-a06e-3a189593b098'),
	 (75398,'2020-06-22 00:00:00',75398,'2020-06-22 00:00:00','opd_search_by_ration_number','rationNumber,offSet,limit','select
   imt_member.unique_health_id as "uniqueHealthId",
   imt_member.id as "memberId",
   imt_family.family_id as "familyId",
   imt_family.location_id as "locationId",
   imt_member.mobile_number as "mobileNumber",
   get_location_hierarchy(imt_family.location_id) as "locationHierarchy",
   concat(imt_member.first_name, '' '', imt_member.middle_name, '' '', imt_member.last_name) as "name",
   imt_member.dob as "dob",
   cast(age(imt_member.dob) as text) as "age",
   concat(uu1.first_name, '' '', uu1.middle_name, '' '', uu1.last_name) as "ashaName",
   uu1.contact_number as "ashaContactNumber",
   uu1.techo_phone_number as "ashaTechoContactNumber",
   concat(uu2.first_name, '' '', uu2.middle_name, '' '', uu2.last_name) as "anmName",
   uu2.contact_number as "anmContactNumber",
   uu2.techo_phone_number as "anmTechoContactNumber"
   from imt_member
   inner join imt_family on imt_member.family_id = imt_family.family_id
   left join um_user_location uul1 on uul1.loc_id = imt_family.area_id and uul1.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul1.user_id and state = ''ACTIVE'') = 24
   left join um_user uu1 on uu1.id = uul1.user_id
   left join um_user_location uul2 on uul2.loc_id = imt_family.location_id and uul2.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul2.user_id and state = ''ACTIVE'') = 30
   left join um_user uu2 on uu2.id = uul2.user_id
   where imt_family.ration_card_number = #rationNumber#
   and imt_member.basic_state in (''NEW'', ''VERIFIED'', ''REVERIFICATION'', ''TEMPORARY'')
   limit #limit# offset #offSet#',true,'ACTIVE','OPD Search By Ration Number',true,'3818d84c-b196-4e34-8c2a-b875ffc46095'),
	 (409,'2019-08-02 16:09:12.904',409,'2019-08-02 16:52:27.617','crs_live_birth_details_by_techo_health_id','techo_health_id','with live_birth_detail as (
select 
rwm.pregnancy_reg_det_id as pregnancy_id
,child.unique_health_id as child_techo_id
,mother.unique_health_id as mother_techo_id
,case when child.gender = ''M'' then true else false end as is_male
,case when child.gender = ''F'' then true else false end as is_female
,case when child.gender not in(''M'',''F'') then true else false end as is_other
,child.family_id as family_id
, to_char(child.dob,''DD/MM/YYYY'') as dob
, child.first_name as child_name
, child.middle_name as father_name
, mother.first_name as mother_name
, rwc.birth_weight as birth_weight
, concat(f.address1,'' , '',f.address2) as address
, concat(f.address1,'' , '',f.address2) as permenant_address
, case when rwm.delivery_place = ''HOSP'' then true else false end as is_hospital_delivery
, case when rwm.delivery_place = ''HOME'' then true else false end as is_home_delivery
, case when rwm.delivery_place not in (''HOME'',''HOSP'') then true else false end as is_other_place_delivery
, hid."name" as hospital_name
,hid.address as hospital_address
,case when f.religion = ''621'' then true else false end as is_hindu_region
,case when f.religion = ''622'' then true else false end as is_muslim_region
,case when f.religion = ''623'' then true else false end as is_christian_region
,case when f.religion = ''640'' then true else false end as is_other_region
,case when mother.education_status = ''701'' then true else false end as is_mother_education_illiterate
,case when mother.education_status in (''702'',''703'') then true else false end as is_mother_education_till_7_class
,case when mother.education_status in (''704'',''705'') then true else false end as is_mother_education_till_12_class
,case when mother.education_status in (''706'') then true else false end as is_mother_education_less_then_graduate
,case when mother.education_status in (''707'',''708'') then true else false end as is_mother_education_graduate
,case when (mother.education_status is null or mother.education_status = ''737'') then true else false end as is_mother_education_not_applicable
,null as father_occupation
,null as mother_occupation
,mother.year_of_wedding - extract(year from mother.dob) as age_marriage
,cast(EXTRACT(year FROM age(child.dob,mother.dob)) as int) as age_at_a_time_of_delivery
,coalesce(rpa.registered_with_no_of_child,0) + 1 as total_child
,coalesce(rpa.registered_with_male_cnt,0) + (case when child.gender = ''M'' then 1 else 0 end) as male_child
,coalesce(rpa.registered_with_female_cnt,0) + (case when child.gender = ''F'' then 1 else 0 end) as female_child
,case when rwm.type_of_hospital in (''897'',''1062'',''899'',''1061'',''895'',''1009'',''890'',''1008'',''894'',''1063'',''892'',''891'',''1012'',''896'',''1007'',''1084'') then true else false end as is_govt_hospital_service
,case when rwm.type_of_hospital in (''893'',''898'',''1013'',''1010'') then true else false end as is_pvt_hospital_service
,case when rwm.delivery_done_by in (''DOCTOR'',''NURSE'',''STAFF_NURSE'',''CY-Doctor'',''ANM'') then true else false end as is_doctor_nurse_anm_service
,case when rwm.delivery_done_by in (''TBA'') then true else false end as is_dayan_service
,case when rwm.delivery_done_by in (''NON_TBA'',''NON-TBA'') then true else false end as is_other_service
,rwm.location_id 
,(child.dob - rpr.lmp_date) /7 as del_week 
,case when rwm.type_of_delivery = ''CAESAREAN'' then true else false end as is_cesarean
,case when rwm.type_of_delivery in (''ASSIT'',''ASSIST'') then true else false end as is_vacuum
,case when rwm.type_of_delivery in (''NORMAL'') then true else false end as is_normal

from 
rch_wpd_mother_master rwm
inner join rch_wpd_child_master rwc on rwm.pregnancy_outcome = ''LBIRTH'' and
rwc.wpd_mother_id = rwm.id  and rwc.member_id = (select id from imt_member where unique_health_id = ''#techo_health_id#'')
left join rch_pregnancy_analytics_details rpa on rpa.pregnancy_reg_id = rwm.pregnancy_reg_det_id
inner join rch_pregnancy_registration_det rpr on rpr.id = rwm.pregnancy_reg_det_id
inner join imt_member child on child.id = rwc.member_id
inner join imt_member mother on rwm.member_id = mother.id
inner join imt_family f on f.family_id = mother.family_id
left join health_infrastructure_details hid on hid.id = rwm.health_infrastructure_id
),father_detail as (
select t.child_id,case when father.education_status = ''701'' then true else false end as is_father_education_illiterate
,case when father.education_status in (''702'',''703'') then true else false end as is_father_education_till_7_class
,case when father.education_status in (''704'',''705'') then true else false end as is_father_education_till_12_class
,case when father.education_status in (''706'') then true else false end as is_father_education_less_then_graduate
,case when father.education_status in (''707'',''708'') then true else false end as is_father_education_graduate 
,case when (father.education_status is null or father.education_status = ''737'') then true else false end as is_father_education_not_applicable
from (
select lbd.child_techo_id as child_id,max(m.id) as id from imt_member m,live_birth_detail lbd where m.family_id = lbd.family_id and m.first_name = lbd.father_name
group by lbd.child_techo_id ) as t,imt_member father where father.id = t.id
),location_detail as (
select t.location_id,t.district_name,t.taluka_name,t.village_name,t.district_lgd_code,t.taluka_lgd_code,t.village_lgd_code
,case  when t.is_village = 1 then true else false end as is_village
,case  when t.is_urban = 1 then true else false end as is_urban
,hi.nin as sub_center_code
from (
select lh.child_id as location_id
,max(case when lh.parent_loc_type in (''C'',''D'') then lm.name else null end) as district_name
,max(case when lh.parent_loc_type in (''B'',''Z'') then lm.name else null end) as taluka_name
,max(case when lh.parent_loc_type in (''V'',''ANG'') then lm.name else null end) as village_name
,max(case when lh.parent_loc_type in (''C'',''D'') then lm.lgd_code else null end) as district_lgd_code
,max(case when lh.parent_loc_type in (''B'',''Z'') then lm.lgd_code else null end) as taluka_lgd_code
,max(case when lh.parent_loc_type in (''V'',''ANG'') then lm.lgd_code else null end) as village_lgd_code
,max(case when lh.parent_loc_type in (''V'') then 1 else 0 end) as is_village
,max(case when lh.parent_loc_type in (''ANG'') then 1 else 0 end) as is_urban
,max(case when lh.parent_loc_type in (''SC'') then lm.id else null end) as sub_centre_id
from live_birth_detail lbd 
inner join location_hierchy_closer_det lh on lh.child_id = lbd.location_id
inner join location_master lm on lh.parent_id = lm.id
group by  lh.child_id
) as t 
left join health_infrastructure_details hi on hi.location_id = t.sub_centre_id
)
select 
pregnancy_id as "pregnancyId"
,child_techo_id as "childTechoId"
,mother_techo_id as "motherTechoId"
,is_male as "isMale"
,is_female as "isFemale"
,is_other as "isOther"
,dob as "dob"
,child_name as "childName"
,father_name as "fatherName"
,mother_name as "motherName"
,birth_weight as "birthWeight"
,address as "address"
,permenant_address as "permenantAddress"
,is_hospital_delivery as "isHospitalDelivery"
,is_home_delivery as "isHomeDelivery"
,is_other_place_delivery as "isOtherPlaceDelivery"
,hospital_name as "hospitalName"
,hospital_address as "hospitalAddress"
,is_hindu_region as "isHinduRegion"
,is_muslim_region as "isMuslimRegion"
,is_christian_region as "isChristianRegion"
,is_other_region as "isOtherRegion"
,is_mother_education_illiterate as "isMotherEducationIlliterate"
,is_mother_education_till_7_class as "isMotherEducationTill7Class"
,is_mother_education_till_12_class as "isMotherEducationTill12Class"
,is_mother_education_less_then_graduate as "isMotherEducationLessThenGraduate"
,is_mother_education_graduate as "isMotherEducationGraduate"
,is_mother_education_not_applicable  as "isMotherEducationNotApplicable"
/*,father_occupation as "fatherOccupation"
,mother_occupation as "motherOccupation"*/
,age_marriage as "ageAtTimeOfMarriage"
,age_at_a_time_of_delivery as "ageAtTimeOfDelivery"
,total_child as "totalChild"
,male_child as "maleChild"
,female_child as "femaleChild"
,is_govt_hospital_service as "isGovtHospitalService"
,is_pvt_hospital_service as "isPvtHospitalService"
,is_doctor_nurse_anm_service as "isDoctorNurseAnmService"
,is_dayan_service as "isDayanService"
,is_other_service as "isOtherService"
,del_week as "deliveryWeek"
,is_cesarean as "isCesareanDelivey"
,is_normal as "isNoramlDelivey"
,is_vacuum as "isVacuum"

,is_father_education_illiterate as "isFatherEducationIlliterate"
,is_father_education_till_7_class as "isFatherEducationTill7Class"
,is_father_education_till_12_class as "isFatherEducationTill12Class"
,is_father_education_less_then_graduate as "isFatherEducationLessThenGraduate"
,is_father_education_graduate as "isFatherEducationGraduate"
,is_father_education_not_applicable as "isFatherEducationNotApplicable"

,district_name as "districtName"
,taluka_name as "talukaName"
,village_name as "villageName"
,district_lgd_code as "districtLgdCode"
,taluka_lgd_code as "talukaLgdCode"
,village_lgd_code as "villageLgdCode"
,is_village as "isVillage"
,is_urban as "isUrban"
,sub_center_code as "subCenterCode"

from 
live_birth_detail lbd
left join father_detail fd on fd.child_id = lbd.child_techo_id
left join location_detail ld on ld.location_id = lbd.location_id;',true,'ACTIVE',NULL,true,'dcfa21d8-1d62-4e67-8fe2-b95f896374fd'),
	 (1,'2019-08-22 00:00:00',NULL,NULL,'get_rch_register_child_service_detailed_info','member_id','
with vitamin_a_second_dose as (
	select
	given_on
	from rch_immunisation_master
	where immunisation_given = ''VITAMIN_A''
		and member_id = #member_id#
	order by given_on asc
	limit 1
	offset 1
),
breast_feeding_info as (
	select
	case
		when complementary_feeding_start_period = ''BEFORE6'' then ''Yes''
		else ''No''
	end as is_breastfed_till_six_month,
	case
		when complementary_feeding_start_period is null then ''N/A''
		when complementary_feeding_start_period = ''ENDOF6'' then ''End of 6th month''
		when complementary_feeding_start_period = ''AFTER6'' then ''After 6th month''
		when complementary_feeding_start_period = ''BEFORE6'' then ''Before 6th month''
		else complementary_feeding_start_period
	end as complementary_feeding_start_period
	from rch_child_service_master
	where complementary_feeding_start_period is not null
		and member_id = #member_id#
	order by id desc
	limit 1
),
basic_info as (
	select
	mem.id as member_id,
	mem.unique_health_id as child_unique_health_id,
	child.member_name,
	case
		when mem.gender is not null then
			case
				when mem.gender = ''F'' then ''Female''
				else ''Male''
			end else ''N/A''
		end as gender ,
		case
			when mother.first_name is not null then mother.first_name
			else ''N/A''
		end as mother_name,
		case
			when mother.unique_health_id is not null then mother.unique_health_id
			else ''N/A''
		end as mother_unique_health_id,
		case
			when (fam.address1 is null and fam.address2 is null) then ''N/A''
			else
				case
					when fam.address1 is null then fam.address2
					when fam.address2 is null then fam.address1
					else concat(fam.address1, '','', fam.address2)
				end
		end as address,
		case
			when child.dob is not null then to_char(child.dob ,''dd-MM-yyyy'')
			else ''N/A''
		end as dob,
		case
			when child.birth_weight is not null then cast(round(cast(child.birth_weight as numeric), 1) as text)
			else null
		end as birth_weight,
		case
			when child.loc_id is not null then dob_location.name
			else ''N/A''
		end as birth_location,
		case
			when rel.value = ''HINDU'' then ''Hindu''
			when rel.value = ''CHRISTIAN'' then ''Christian''
			when rel.value = ''MUSLIM'' then ''Muslim''
			when rel.value = ''OTHERS'' then ''Others''
			else rel.value
		end as religion,
		case
			when cas.value = ''GENERAL'' then ''General''
			else cas.value
		end as cast,
		case
			when last_child_service_date is null then ''N/A''
			else to_char(last_child_service_date,''dd-MM-yyyy'')
		end as last_child_service_date,
		-- vaccinazation
		case
			when bcg is null then ''N/A''
			else to_char(bcg,''dd-MM-yyyy'')
		end as bcg,
		case
			when opv1 is null then ''N/A''
			else to_char(opv1,''dd-MM-yyyy'')
		end as opv1,
		case
			when penta1 is null then ''N/A''
			else to_char(penta1,''dd-MM-yyyy'')
		end as penta1,
		case
			when opv2 is null then ''N/A''
			else to_char(opv2,''dd-MM-yyyy'')
		end as opv2,
		case
			when penta2 is null then ''N/A''
			else to_char(penta2,''dd-MM-yyyy'')
		end as penta2,
		case
			when opv3 is null then ''N/A''
			else to_char(opv3,''dd-MM-yyyy'')
		end as opv3,
		case
			when penta3 is null then ''N/A''
			else to_char(penta3,''dd-MM-yyyy'')
		end as penta3,
		case
			when measles is null then ''N/A''
			else to_char(measles,''dd-MM-yyyy'')
		end as measles,
		case
			when f_ipv1 is null then ''N/A''
			else to_char(f_ipv1,''dd-MM-yyyy'')
		end as f_ipv_1,
		case
			when f_ipv2 is null then ''N/A''
			else to_char(f_ipv2,''dd-MM-yyyy'')
		end as f_ipv_2,
		case
			when measles_rubella is null then ''N/A''
			else to_char(measles_rubella,''dd-MM-yyyy'')
		end as measles_rubella,
		case
			when measles_rubella_2 is null then ''N/A''
			else to_char(measles_rubella_2,''dd-MM-yyyy'')
		end as measles_rubella_2,
		case
			when fully_immunization_in_number_of_month is not null then
				case
					when fully_immunization_in_number_of_month  > 12 then ''Yes''
					else ''No''
				end
			else ''N/A''
		end as fully_immunization_in_twelve_of_month ,
		case
			when opv_booster is null then ''N/A''
			else to_char(opv_booster,''dd-MM-yyyy'')
		end as opv_booster,
		case
			when dpt_booster is null then ''N/A''
			else to_char(dpt_booster,''dd-MM-yyyy'')
		end as dpt_booster,
		case
			when measles_2 is null then ''N/A''
			else to_char(measles_2,''dd-MM-yyyy'')
		end as measles_2,
		case
			when rota_virus_1 is null then ''N/A''
			else to_char(rota_virus_1,''dd-MM-yyyy'')
		end as rota_virus_1,
		case
			when rota_virus_2 is null then ''N/A''
			else to_char(rota_virus_2,''dd-MM-yyyy'')
		end as rota_virus_2,
		case
			when rota_virus_3 is null then ''N/A''
			else to_char(rota_virus_3,''dd-MM-yyyy'')
		end as rota_virus_3,
		case
			when complementary_feeding_start_period is null then ''N/A''
			else complementary_feeding_start_period
		end as complementary_feeding_start_period,
		case
			when is_breastfed_till_six_month is null then ''No''
			else is_breastfed_till_six_month
		end as is_breastfed_till_six_month,
		case
			when bcg is not null
				and opv1 is not null
				and penta1 is not null
				and opv2 is not null
				and penta2 is not null
				and opv3 is not null
				and penta3 is not null
				and opv_booster is not null
				and measles is not null
				and measles_2 is not null
				and dpt_booster is not null
				and vitamin_a_second_dose.given_on is not null
				then
					case
						when EXTRACT(
							year FROM age(GREATEST(opv1, penta1, opv2, penta2, opv3, penta3, opv_booster, measles, measles_2, dpt_booster, vitamin_a_second_dose.given_on), child.dob))*12
							+ EXTRACT(
							month FROM age(GREATEST(opv1, penta1, opv2, penta2, opv3, penta3, opv_booster, measles, measles_2, dpt_booster, vitamin_a_second_dose.given_on), child.dob)) < 24
							then ''Yes''
						else ''No''
					end
			else ''No''
		end as fully_immunization_in_two_year
		from rch_child_analytics_details child
		left join imt_member mem on child.member_id = mem.id
		left join imt_member mother on child.mother_id = mother.id
		left join imt_family fam on mem.family_id = fam.family_id
		left join location_master dob_location on child.loc_id = dob_location.id
		left join listvalue_field_value_detail cas on fam.caste = (cast(cas.id as varchar))
		left join listvalue_field_value_detail rel on fam.religion = (cast(rel.id as varchar))
		left join vitamin_a_second_dose on true = true
		left join breast_feeding_info on true = true
		where mem.id = #member_id#
),
vitamin_a_dose as (
	select
	#member_id# as member_id,
	string_agg(given_date, '','') as vitamin_a_dose
	from (select to_char(given_on,''dd-MM-yyyy'') as given_date
	from rch_immunisation_master
	where immunisation_given = ''VITAMIN_A''
		and member_id = #member_id#
	order by given_on asc
	) t
)
,side_effect_vaccination_dpt_booster_2 as(
	select
	#member_id# as member_id,
	given_on as dpt_booster_2_given_on,
	adverse_effect as dpt_booster_2_adverse_effect,
	concat(''Manufacturer:'', manufacturer, '', batch numbe:'' , batch_number) as vaccination_details
	from rch_immunisation_master imm
	left join rch_vaccine_adverse_effect ser on imm.member_id = ser.member_id
	where imm.immunisation_given = ''DPT_BOOSTER_2''
		and imm.member_id = #member_id#
),
extra_info as (
	select
	case
		when complementary_feeding_start_period is not null then
			case
				when complementary_feeding_start_period = ''AFTER6'' then ''Yes''
				else ''No''
			end
		else ''N/A''
	end as breast_feeded_upto_six_month
	from rch_child_service_master
	where complementary_feeding_started = true
	and member_id = #member_id#
	order by service_date desc
	limit 1
),
side_effect_vaccination_dpt_booster as(
	select
	child_ser.member_id,
    child_ser.service_date as dpt_booster_given_date,
    case
        when child_ser.weight is not null then cast(round(cast(child_ser.weight as numeric), 1) as text)
        else null
    end as dpt_booster_child_weight,
	case
		when dis.value is not null then
			case
				when dis.id = 880 then ''Yes''
				else ''No''
			end
		else ''N/A''
	end as is_diarrhea,
	case
		when dis.value is not null then
			case
				when dis.id = 889 then ''Yes''
				else ''No''
			end
		else ''N/A''
	end as is_pnuemonia
	from rch_immunisation_master  imm
	left join rch_child_service_master child_ser on imm.visit_id = child_ser.id
	left join rch_child_service_diseases_rel des on child_ser.id = des.child_service_id
	left join listvalue_field_value_detail dis on des.diseases = dis.id
	where imm.immunisation_given  = ''DPT_BOOSTER''
	and child_ser.member_id = #member_id#
)
select
bas.*,
vitamin_a_dose,
--case when given_on is not null then to_char(given_on ,''dd-MM-yyyy'') else ''N/A'' end as dpt_booster_2_given_on,
case
	when dpt_booster_2_given_on is not null then to_char(dpt_booster_2_given_on ,''dd-MM-yyyy'')
	else ''N/A''
end as dpt_booster_2_given_on,
case
	when dpt_booster_2_adverse_effect is not null then dpt_booster_2_adverse_effect
	else ''N/A''
end as dpt_booster_2_adverse_effect,
case
	when vaccination_details is not null then vaccination_details
	else ''N/A''
end as vaccination_details,
--case when child_ser.service_date is not null then to_char(child_ser.service_date ,''dd-MM-yyyy'') else ''N/A'' end as dpt_booster_given_date,
case
	when dpt_booster_given_date is not null then to_char( dpt_booster_given_date ,''dd-MM-yyyy'')
	else ''N/A''
end as dpt_booster_given_date,
case
	when dpt_booster_child_weight is not null then cast(round(cast(dpt_booster_child_weight as numeric), 1) as text)
	else null
end as dpt_booster_child_weight,
case
	when is_diarrhea is null then ''N/A''
	else is_diarrhea
end as is_diarrhea,
case
	when is_pnuemonia is null then ''N/A''
	else is_pnuemonia
end as is_pnuemonia,
case
    when rcsm.ifa_syrup_given is true then ''Yes''
    else ''No''
end as ifa_syrup_given,
case
    when rcsm.mid_arm_circumference is not null then cast(round(cast(rcsm.mid_arm_circumference as numeric), 1) as text)
    else ''N/A''
end as mid_arm_circumference,
case
    when rcsm.height is null then ''N/A''
    else cast(rcsm.height as text)
end as height,
case
    when rcsm.have_pedal_edema is true then ''Yes''
    else ''No''
end as have_pedal_edema,
if.family_id
from basic_info bas
left join vitamin_a_dose vit_a on bas.member_id = vit_a.member_id
left join rch_child_service_master rcsm on rcsm.member_id = bas.member_id
left join side_effect_vaccination_dpt_booster_2 booster_2 on bas.member_id = booster_2.member_id
left join side_effect_vaccination_dpt_booster booster on bas.member_id = booster.member_id
left join imt_family if on if.id = rcsm.family_id
limit 1
',true,'ACTIVE',NULL,true,'0ac4a6a1-fe1d-4049-8fe8-cdfb43c3b8e4'),
	 (60512,'2020-06-23 00:00:00',60512,'2020-06-23 00:00:00','covid19_lab_test_result_report_print','labTestIds','
select
    case
        when admission.name_in_english is not null then admission.name_in_english
        else admission.name
    end as hospital_name,
    admission.address as hospital_address,
    to_char(now(),''DD/MM/YYYY HH24:MI'') as reporting_date,
    case
        when referring.name_in_english is not null then referring.name_in_english
        else referring.name
    end as referring_hospital,
    to_char(covid19_admission_detail.date_of_onset_symptom,''DD/MM/YYYY'') as onset_illness_date,
    to_char(covid19_lab_test_detail.lab_collection_on,''DD/MM/YYYY HH24:MM'') as sample_collection_date,
    to_char(covid19_lab_test_detail.lab_sample_received_on,''DD/MM/YYYY HH24:MM'') as receipt_date,
    cast(''N.A'' as text) as quality_on_arrival,
    covid19_lab_test_detail.lab_test_id as report_id,
    covid19_lab_test_detail.lab_test_id as sample_id,
    concat(covid19_admission_detail.first_name,'' '',covid19_admission_detail.middle_name,'' '',covid19_admission_detail.last_name) as patient_name,
    cast(covid19_admission_detail.age as text) as age,
    covid19_admission_detail.gender as sex,
    cast(''N.A'' as text) as specimen_type,
    to_char(covid19_lab_test_detail.lab_result_entry_on,''DD/MM/YYYY HH24:MM'') as date_of_sample_testing,
    covid19_lab_test_detail.lab_result as "SARS_CoV_2_result",
    cast(''N.A'' as text) as other_respiratory_virus,
    covid19_admission_detail.address as patient_address,
    covid19_lab_test_detail.lab_sample_reject_reason as remarks,
    cast(''N.A'' as text) as electronically_signed_by
from covid19_lab_test_detail
inner join covid19_admission_detail on covid19_lab_test_detail.covid_admission_detail_id = covid19_admission_detail.id
left join health_infrastructure_details admission on covid19_admission_detail.health_infra_id = admission.id
left join health_infrastructure_details referring on covid19_lab_test_detail.sample_health_infra = referring.id
where
    covid19_lab_test_detail.id in (#labTestIds#)
',true,'ACTIVE',NULL,true,'b0164238-eeb4-439b-9ff2-665553ae30c1'),
	 (75398,'2020-06-22 00:00:00',75398,'2020-06-22 00:00:00','opd_search_by_maa_vatsalya_number','maavatsalyaNumber,offSet,limit','select
   imt_member.unique_health_id as "uniqueHealthId",
   imt_member.id as "memberId",
   imt_family.family_id as "familyId",
   imt_family.location_id as "locationId",
   imt_member.mobile_number as "mobileNumber",
   get_location_hierarchy(imt_family.location_id) as "locationHierarchy",
   concat(imt_member.first_name, '' '', imt_member.middle_name, '' '', imt_member.last_name) as "name",
   imt_member.dob as "dob",
   cast(age(imt_member.dob) as text) as "age",
   concat(uu1.first_name, '' '', uu1.middle_name, '' '', uu1.last_name) as "ashaName",
   uu1.contact_number as "ashaContactNumber",
   uu1.techo_phone_number as "ashaTechoContactNumber",
   concat(uu2.first_name, '' '', uu2.middle_name, '' '', uu2.last_name) as "anmName",
   uu2.contact_number as "anmContactNumber",
   uu2.techo_phone_number as "anmTechoContactNumber"
   from imt_member
   inner join imt_family on imt_member.family_id = imt_family.family_id
   left join um_user_location uul1 on uul1.loc_id = imt_family.area_id and uul1.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul1.user_id and state = ''ACTIVE'') = 24
   left join um_user uu1 on uu1.id = uul1.user_id
   left join um_user_location uul2 on uul2.loc_id = imt_family.location_id and uul2.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul2.user_id and state = ''ACTIVE'') = 30
   left join um_user uu2 on uu2.id = uul2.user_id
   where imt_family.maa_vatsalya_number = #maavatsalyaNumber#
   and imt_member.basic_state in (''NEW'', ''VERIFIED'', ''REVERIFICATION'', ''TEMPORARY'')
   limit #limit# offset #offSet#',true,'ACTIVE','OPD Search By MAA Vatsalya Number',true,'b3ca91a3-9d56-4473-ab70-9cd017e24a8e'),
	 (75398,'2020-06-22 00:00:00',75398,'2020-06-22 00:00:00','retrieve_opd_lab_tests_and_category_by_health_infrastructure','healthInfrastructureId,healthInfrastructureType,type','with lab_test_table as( select
	rch_opd_lab_test_master.id as "labTestId", rch_opd_lab_test_master.name as "labTestName", rch_opd_lab_test_master.category
from
	health_infrastructure_lab_test_mapping
inner join rch_opd_lab_test_master on
	health_infrastructure_lab_test_mapping.ref_id = rch_opd_lab_test_master.id
where
	case
		when ( select
			count(*)
		from
			health_infrastructure_lab_test_mapping
		where
			health_infra_id = #healthInfrastructureId# )>0 then health_infra_id = #healthInfrastructureId#
		else health_infra_type = #healthInfrastructureType#
	end
	and permission_type = #type#
	and rch_opd_lab_test_master.is_active = true) select
	lab_test_table."labTestId",
	lab_test_table."labTestName",
	cat.id as "categoryId",
	cat.value as "categoryName"
from
	lab_test_table
inner join listvalue_field_value_detail cat on
	lab_test_table.category = cat.id',true,'ACTIVE',NULL,true,'a46fe381-bf3f-4b00-ac93-f705a3b8ab10'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','update_fp_method','healthInfrastructure,familyPlanningMethod,fpInsertOperateDate,loggedInUserId,memberId','update imt_member
set last_method_of_contraception = #familyPlanningMethod#,
fp_insert_operate_date = #fpInsertOperateDate#,
family_planning_health_infra = #healthInfrastructure#,
is_iucd_removed = null,
modified_on = now(),
modified_by = #loggedInUserId#
where id = #memberId#',false,'ACTIVE',NULL,true,'f2b31c2c-e347-4644-9382-ceeb6b462ba3'),
	 (66522,'2020-02-12 18:42:59.513',66522,'2020-03-13 19:46:54.557','state_of_health_immu_non_fi_gt_1yr_lt_2yr','limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
rcad.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
to_char(m.dob ,''DD-MM-YYYY'') as "dob",
INITCAP(REPLACE (cast(age(current_date,m.dob) as text), ''mon'', ''month''))
 as "age",
case when current_date - m.dob >= 310 and current_date - m.dob < 365 then ''10 to 11 Months''
 when current_date - m.dob >= 365 then ''Greater than 1 year'' end as "AgeGroup",
m.immunisation_given as "immunisationGiven_OLD",
rcad.overdue_immunisation as "overdueImmunisation",
m.mobile_number as "contactNumber",
to_char(rcad.last_child_service_date,''dd-MM-yyyy'') as "LastServiceData",
rcad.loc_id
from rch_child_analytics_details rcad,imt_member m
where rcad.loc_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and rcad.dob   between (current_date - interval ''2 year'') and (current_date - interval ''1 years'')
and death_date is null and member_id is not null
and m.id = rcad.member_id 
and full_immunization_date is null
limit #limit#),
analytics_run_date as (
	select TO_DATE(key_value,''MM-DD-YYYY'') as last_run_date from system_configuration where  system_key  =''rch_child_analytics_last_schedule_date''
),
immunisationsTemp as (
  select * from rch_immunisation_master,analytics_run_date
   where member_id in (select member_id from analytics )
  and created_on < analytics_run_date.last_run_date
  order by given_on
),
immunisations as (
  select member_id, string_agg( CONCAT(immunisation_given,''#'',to_char(given_on,''DD/MM/YYYY'')),'','') as immunisation_given from immunisationsTemp
  group by member_id
),
family_head as (
select a.member_id as member_id,
concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
im.mobile_number as FamilyHeadMobileNo
from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id
where family_head = true
),
contact_person as (
select a.member_id, 
concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
im.mobile_number as contactPersonMobileNo  
from imt_member im 
inner join analytics a on a.family_id = im.family_id 
inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id

),

asha as (
select t.member_id
,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
u.contact_number as ashaMobileNo
from (
select member_id,max(uld.user_id) as user_id
from um_user_location uld 
inner join analytics a on  uld.loc_id = a.loc_id
inner join um_user uu on uu.id = uld.user_id 
where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
group by member_id) as t,um_user u
where t.user_id = u.id

),
anmLocation as (
select parent_id as location_id,a.member_id from location_hierchy_closer_det 
lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
inner join anmLocation a on  uld.loc_id = a.location_id
inner join um_user uu on uu.id = uld.user_id 
where uu.role_id in (select id from um_role_master where code =''FHW'' )
and uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
group by a.location_id,a.member_id
),
anmName as (
select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
uu.contact_number as ANMMobileNo

FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
select max(service_date) as service_date,services.member_id from rch_member_services services
inner join analytics a on a.member_id = services.member_id
group by services.member_id 
),
lastServiceUnique as(
select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
where service.member_id = last.member_id
group by service.member_id, last.service_date
),
lastServiceDetails as (
select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
service.location_id,
location.name as locationName,
case when service.service_type =''FHW_LMP'' then ''LMP Visit''
when  service.service_type =''FHW_ANC'' then ''ANC Visit''
 when service.service_type = ''FHW_PNC'' then ''PNC Visit''
 when service.service_type = ''FHW_CS'' then ''Child Service''
 when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
end as service_type,
service.member_id 
from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id

inner join location_master location on service.location_id = location.id

)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",

service.locationName as "LastServiceLocationName",
immu.immunisation_given as "immunisationGiven"
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id
left join immunisations immu on immu.member_id = a.member_id',true,'ACTIVE',NULL,true,'705062d5-4a30-4218-9a0a-58f5c1d34ddb'),
	 (75398,'2020-06-22 00:00:00',75398,'2020-06-22 00:00:00','opd_member_treatment_history','offset,limit,uniqueHealthId','select
    romm.service_date as "serviceDate",
    romm.medicines_given_on as "medicinesGivenOn",
    hid."name" as "healthInfraName",
    (
    	select
    	string_agg(
    		roltm.name, '', ''
		)
	    from rch_opd_lab_test_master roltm
	    inner join rch_opd_lab_test_details roltd on roltd.lab_test_id = roltm.id
	    where roltd.opd_member_master_id = romm.id
    ) as "labTests",
    (
    	select
    	cast(json_agg(
		    json_build_object(
		    	''name'', roltm.name,
		    	''category'', (select value from listvalue_field_value_detail where id = roltm.category),
		    	''result'', roltd.result,
		    	''requestedOn'', roltd.request_on,
		    	''formConfigJson'', sfc.form_config_json
			)
		) as text)
	    from rch_opd_lab_test_master roltm
	    inner join rch_opd_lab_test_details roltd on roltd.lab_test_id = roltm.id
        left join rch_opd_lab_test_master lab_test_master on lab_test_master.id = roltd.lab_test_id
        left join system_form_configuration sfc on sfc.form_id = lab_test_master.form_id and sfc."version" = roltd.result_version
	    where roltd.opd_member_master_id = romm.id
    ) as "labTestResults",
    (
    	select
    	string_agg(
    		lfvd.value, '', ''
		)
	    from listvalue_field_value_detail lfvd
	    inner join rch_opd_lab_test_provisional_rel roltpr on roltpr.opd_member_master_id = romm.id
	    where lfvd.id = roltpr.provisional_id
    ) as "provisionalDiagnosis",
    (
    	select
    	cast(json_agg(
		    json_build_object(
		    	''id'', roed.id,
		    	''memberId'', roed.member_id,
		    	''opdMemberMasterId'', roed.opd_member_master_id,
		    	''edlName'', (select value from listvalue_field_value_detail where id = roed.edl_id),
	    		''frequency'', cast(roed.frequency as text),
	    		''quantityBeforeFood'', cast(roed.quantity_before_food as text),
	    		''quantityAfterFood'', cast(roed.quantity_after_food as text),
	    		''numberOfDays'', cast(roed.number_of_days as text)
			)
		) as text)
	    from rch_opd_edl_details roed
	    where roed.opd_member_master_id = romm.id
    ) as "opdEdlDetails",
    concat(uu.first_name, '' '', uu.middle_name, '' '', uu.last_name) as "treatmentDoneBy"
    from rch_opd_member_master romm
    inner join imt_member im on romm.member_id = im.id
    inner join um_user uu on romm.created_by = uu.id
    left join health_infrastructure_details hid on hid.id = romm.health_infra_id
    where im.unique_health_id in (#uniqueHealthId#)
    -- and im.basic_state in (''NEW'', ''VERIFIED'', ''REVERIFICATION'', ''TEMPORARY'')
    order by romm.service_date desc
    limit #limit# offset #offset#',true,'ACTIVE','OPD Member Treatment History',true,'e06598a5-6888-4dd8-a8a7-3e683b7c8e34'),
	 (75398,'2020-06-22 00:00:00',75398,'2020-06-22 00:00:00','fetch_listvalue_detail_from_field_on_debounce','searchString,field','select
    *
    from listvalue_field_value_detail lvfvd
    where lvfvd.field_key = (select field_key from listvalue_field_master where field =#field#)
    and lvfvd."value" ilike concat(''%'',#searchString#,''%'')
    and is_active = true
    limit 10;',true,'ACTIVE','Fetch List Value Details by Field on Debounce',true,'5265a0e4-9d4f-4fd8-aa0e-a40bab830c19'),
	 (1,'2019-02-20 15:21:04.681903',NULL,NULL,'blocked_app_info','imei','select imei from blocked_devices_master where imei in (#imei#)',true,'ACTIVE','Retrieve blocked imei info',true,'fc467fd1-c113-4851-882e-ddad87c5750a'),
	 (80208,'2020-06-23 00:00:00',80208,'2020-06-23 00:00:00','retriveal_of_team_conf_detail_by_team_type','teamTypeId','SELECT tcd.id as id,
tcd.team_type_id as "teamTypeId",
tcd.min_member as "minMember",
tcd.max_member as "maxMember",
rm.name as "roleName",
rm.id as "roleId"
from team_configuration_det tcd  inner join um_role_master rm on rm.id = tcd.role_id and rm.state =''ACTIVE'' where tcd.team_type_id = #teamTypeId# and tcd.state =''ACTIVE'' ;',true,'ACTIVE',NULL,true,'f9b82356-2c50-4668-841a-244114af4d39'),
	 (75398,'2020-06-22 00:00:00',75398,'2020-06-22 00:00:00','sickle_cell_search_by_family_id','familyId,offSet,limit','select imt_member.unique_health_id as "uniqueHealthId",
imt_member.id as "memberId",
imt_member.family_id as "familyId",
imt_member.mobile_number as "mobileNumber",
concat(imt_family.address1,'', '',imt_family.address2) as "address",
imt_family.location_id as "locationId",
get_location_hierarchy(imt_family.location_id) as "locationHierarchy",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "name",
imt_member.gender as "gender",
rel.value as "religion",
cas.value as "caste",
imt_member.dob as "dob",
cast(age(imt_member.dob)as text) as "age",
extract(year from age(imt_member.dob)) as "ageInYears"
from imt_member
inner join imt_family on imt_member.family_id = imt_family.family_id
left join listvalue_field_value_detail rel on cast(imt_family.religion as bigint) = rel.id
left join listvalue_field_value_detail cas on cast(imt_family.caste as bigint) = cas.id
where imt_member.family_id = #familyId#
and ((imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')) or (imt_member.state = ''com.argusoft.imtecho.member.state.temporary''))
limit #limit# offset #offSet#',true,'ACTIVE',NULL,true,'7e74f1b4-c627-4291-ad03-ee7e2e96f503'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','location_ward_retrieval_by_lgd_code','lgdCode,id','SELECT
    id,
    ward_name,
    lgd_code,
    location_id
    FROM location_wards
    WHERE
    lgd_code = #lgdCode#
    and id != #id#;',true,'ACTIVE','Retrieve Location Ward By LGD Code',true,'5c2c9044-d8d0-4a20-909e-05942f1e3b6d'),
	 (66522,'2020-01-20 17:37:39.814',66522,'2020-02-11 10:22:55.427','state_of_health_immunized_non_fi_detail_2','limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
rcad.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
to_char(m.dob ,''DD-MM-YYYY'') as "dob",
INITCAP(REPLACE (cast(age(current_date,m.dob) as text), ''mon'', ''month''))
 as "age",
case when current_date - m.dob >= 310 and current_date - m.dob < 365 then ''10 to 11 Months''
 when current_date - m.dob >= 365 then ''Greater than 1 year'' end as "AgeGroup",
m.immunisation_given as "immunisationGiven_OLD",
rcad.overdue_immunisation as "overdueImmunisation",
m.mobile_number as "contactNumber",
to_char(rcad.last_child_service_date,''dd-MM-yyyy'') as "LastServiceData",
rcad.loc_id
from rch_child_analytics_details rcad,imt_member m
where rcad.native_loc_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and current_date - rcad.dob <= 730
and death_date is null and member_id is not null
and m.id = rcad.member_id 
and overdue_immunisation is not null
limit #limit#),
analytics_run_date as (
	select TO_DATE(key_value,''MM-DD-YYYY'') as last_run_date from system_configuration where  system_key  =''rch_child_analytics_last_schedule_date''
),
immunisationsTemp as (
  select * from rch_immunisation_master,analytics_run_date
   where member_id in (select member_id from analytics )
  and created_on < analytics_run_date.last_run_date
  order by given_on
),
immunisations as (
  select member_id, string_agg( CONCAT(immunisation_given,''#'',to_char(given_on,''DD/MM/YYYY'')),'','') as immunisation_given from immunisationsTemp
  group by member_id
),
family_head as (
select a.member_id as member_id,
concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
im.mobile_number as FamilyHeadMobileNo
from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id
where family_head = true
),
contact_person as (
select a.member_id, 
concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
im.mobile_number as contactPersonMobileNo  
from imt_member im 
inner join analytics a on a.family_id = im.family_id 
inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id

),

asha as (
select t.member_id
,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
u.contact_number as ashaMobileNo
from (
select member_id,max(uld.user_id) as user_id
from um_user_location uld 
inner join analytics a on  uld.loc_id = a.loc_id
inner join um_user uu on uu.id = uld.user_id 
where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
group by member_id) as t,um_user u
where t.user_id = u.id

),
anmLocation as (
select parent_id as location_id,a.member_id from location_hierchy_closer_det 
lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
inner join anmLocation a on  uld.loc_id = a.location_id
inner join um_user uu on uu.id = uld.user_id 
where uu.role_id in (select id from um_role_master where code =''FHW'' )
and uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
group by a.location_id,a.member_id
),
anmName as (
select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
uu.contact_number as ANMMobileNo

FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
select max(service_date) as service_date,services.member_id from rch_member_services services
inner join analytics a on a.member_id = services.member_id
group by services.member_id 
),
lastServiceUnique as(
select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
where service.member_id = last.member_id
group by service.member_id, last.service_date
),
lastServiceDetails as (
select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
service.location_id,
location.name as locationName,
case when service.service_type =''FHW_LMP'' then ''LMP Visit''
when  service.service_type =''FHW_ANC'' then ''ANC Visit''
 when service.service_type = ''FHW_PNC'' then ''PNC Visit''
 when service.service_type = ''FHW_CS'' then ''Child Service''
 when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
end as service_type,
service.member_id 
from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id

inner join location_master location on service.location_id = location.id

)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",

service.locationName as "LastServiceLocationName",
immu.immunisation_given as "immunisationGiven"
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id
left join immunisations immu on immu.member_id = a.member_id',true,'ACTIVE',NULL,true,'fca5aa89-f88c-4e34-8350-266c3464e3eb'),
	 (75398,'2020-06-22 00:00:00',75398,'2020-06-22 00:00:00','sickle_cell_search_by_member_id','offSet,limit,uniqueHealthId','select imt_member.unique_health_id as "uniqueHealthId",
imt_member.id as "memberId",
imt_member.family_id as "familyId",
imt_member.mobile_number as "mobileNumber",
concat(imt_family.address1,'', '',imt_family.address2) as "address",
imt_family.location_id as "locationId",
get_location_hierarchy(imt_family.location_id) as "locationHierarchy",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "name",
imt_member.gender as "gender",
rel.value as "religion",
cas.value as "caste",
imt_member.dob as "dob",
cast(age(imt_member.dob)as text) as "age",
extract(year from age(imt_member.dob)) as "ageInYears"
from imt_member
inner join imt_family on imt_member.family_id = imt_family.family_id
left join listvalue_field_value_detail rel on cast(imt_family.religion as bigint) = rel.id
left join listvalue_field_value_detail cas on cast(imt_family.caste as bigint) = cas.id
where unique_health_id in (#uniqueHealthId#)
and ((imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')) or (imt_member.state = ''com.argusoft.imtecho.member.state.temporary''))
limit #limit# offset #offSet#',true,'ACTIVE',NULL,true,'f2b3d249-13d7-4ae5-9c1f-6ee05455a709'),
	 (75398,'2020-06-22 00:00:00',75398,'2020-06-22 00:00:00','sickle_cell_search_by_name','firstName,lastName,offSet,locationId,limit,middleName','select imt_member.unique_health_id as "uniqueHealthId",
imt_member.id as "memberId",
imt_member.family_id as "familyId",
imt_family.location_id as "locationId",
get_location_hierarchy(imt_family.location_id) as "locationHierarchy",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "name",
imt_member.gender as "gender",
rel.value as "religion",
cas.value as "caste",
imt_member.dob as "dob",
cast(age(imt_member.dob)as text) as "age"
from imt_member
inner join imt_family on imt_member.family_id = imt_family.family_id
inner join location_hierchy_closer_det on imt_family.location_id = location_hierchy_closer_det.child_id
left join listvalue_field_value_detail rel on cast(imt_family.religion as bigint) = rel.id
left join listvalue_field_value_detail cas on cast(imt_family.caste as bigint) = cas.id
where location_hierchy_closer_det.parent_id = #locationId#
and similarity(#firstName#,imt_member.first_name)>=0.50
and similarity(#lastName#,imt_member.last_name)>=0.60
and case when #middleName# != null  and  #middleName# !='''' then similarity(#middleName#,imt_member.middle_name)>=0.50 else 1=1 end
and ((imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')) or (imt_member.state = ''com.argusoft.imtecho.member.state.temporary''))
limit #limit# offset #offSet#',true,'ACTIVE',NULL,true,'d5065289-c1d0-4d11-b8f2-c31d25f9bd5d'),
	 (80276,'2020-06-30 00:00:00',80276,'2020-06-30 00:00:00','get_ccc_overdue_service_member_detail','serviceType,fhwId','with service_type_info as (
	select 2 as notification_id, ''highriskanc'' as service_name
	union
	select 2 as notification_id, ''nonhighriskanc'' as service_name
	union
	select 5 as notification_id, ''wpd'' as service_name
	union
	select 4 as notification_id, ''cs'' as service_name
	
)
,fhw_loc_id as( 
	select loc_id from um_user_location
	where user_id = #fhwId# and state = ''ACTIVE'' 
)
,fhw_child_location_id_list as (
	select child_id from location_hierchy_closer_det,fhw_loc_id where parent_id in (fhw_loc_id.loc_id)
)
select 
	mem.id, mem.member_id, 
	concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name,'' ('',imt_member.unique_health_id,'')'') as "memberName",
	mem.last_given_service_date,get_location_hierarchy(last_given_service_location),
	mem.service_due_on_date,  
	(CAST((current_date) AS date) - CAST((mem.service_due_on_date ) AS date)) as datedifference,
	mem.location_id, mem.notification_type_id,
	imt_member.dob as member_dob,
	imt_member.immunisation_given as member_immunisation_given
	from ccc_overdue_services_follow_up_info mem
	inner join notification_type_master noti on noti.id = mem.notification_type_id
	inner join imt_member on imt_member.id = mem.member_id
	cross join fhw_child_location_id_list
	cross join service_type_info
	left join gvk_high_risk_follow_up_usr_info high_risk on high_risk.member_id = mem.member_id and mem.notification_type_id = 2
	where call_state in (''com.argusoft.imtecho.ccc.call.to-be-processed'', ''com.argusoft.imtecho.ccc.call.processing'')
			      
	and mem.call_attempt < 3
	and mem.service_state in (''PENDING'' , ''RESCHEDULE'')
	and fhw_child_location_id_list.child_id = mem.location_id
	and service_name = #serviceType#
	and  mem.notification_type_id = service_type_info.notification_id 
	and  case when service_name = ''highriskanc'' then (high_risk.id is not null)
		when service_name = ''nonhighriskanc'' then (high_risk.id is null)
		else true end',true,'ACTIVE',NULL,true,'91b45db2-86c7-4d47-bace-4474800465eb'),
	 (75398,'2020-06-22 00:00:00',75398,'2020-06-22 00:00:00','sickle_cell_search_by_mobile_number','offSet,mobileNumber,limit','select imt_member.unique_health_id as "uniqueHealthId",
imt_member.id as "memberId",
imt_member.family_id as "familyId",
imt_member.mobile_number as "mobileNumber",
concat(imt_family.address1,'', '',imt_family.address2) as "address",
imt_family.location_id as "locationId",
get_location_hierarchy(imt_family.location_id) as "locationHierarchy",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "name",
imt_member.gender as "gender",
rel.value as "religion",
cas.value as "caste",
imt_member.dob as "dob",
cast(age(imt_member.dob)as text) as "age",
extract(year from age(imt_member.dob)) as "ageInYears"
from imt_member
inner join imt_family on imt_member.family_id = imt_family.family_id
left join listvalue_field_value_detail rel on cast(imt_family.religion as bigint) = rel.id
left join listvalue_field_value_detail cas on cast(imt_family.caste as bigint) = cas.id
where imt_member.mobile_number = #mobileNumber#
and ((imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')) or (imt_member.state = ''com.argusoft.imtecho.member.state.temporary''))
limit #limit# offset #offSet#',true,'ACTIVE',NULL,true,'1454599d-dd27-495f-bfa4-ea656936ba99'),
	 (75398,'2020-06-22 00:00:00',75398,'2020-06-22 00:00:00','sickle_cell_search_by_family_mobile_number','offSet,mobileNumber,limit','select imt_member.unique_health_id as "uniqueHealthId",
imt_member.id as "memberId",
imt_member.family_id as "familyId",
imt_member.mobile_number as "mobileNumber",
concat(imt_family.address1,'', '',imt_family.address2) as "address",
imt_family.location_id as "locationId",
get_location_hierarchy(imt_family.location_id) as "locationHierarchy",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "name",
imt_member.gender as "gender",
rel.value as "religion",
cas.value as "caste",
imt_member.dob as "dob",
cast(age(imt_member.dob)as text) as "age",
extract(year from age(imt_member.dob)) as "ageInYears"
from imt_member
inner join imt_family on imt_member.family_id = imt_family.family_id
left join listvalue_field_value_detail rel on cast(imt_family.religion as bigint) = rel.id
left join listvalue_field_value_detail cas on cast(imt_family.caste as bigint) = cas.id
where imt_member.family_id in (select family_id from imt_member where mobile_number = #mobileNumber#)
and ((imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')) or (imt_member.state = ''com.argusoft.imtecho.member.state.temporary''))
limit #limit# offset #offSet#',true,'ACTIVE',NULL,true,'ca4cee88-1713-4ed2-b017-5bd12e3c7ba4'),
	 (75398,'2020-06-22 00:00:00',75398,'2020-06-22 00:00:00','retrieve_health_infra_by_level','filter,infrastructureType','with details as (
	select location_level from health_infrastructure_type_location where health_infra_type_id = #infrastructureType#
)select health_infra_type_id 
from health_infrastructure_type_location,details where 
case when #filter# = ''U'' then health_infrastructure_type_location.location_level <= details.location_level
	 when #filter# = ''L'' then health_infrastructure_type_location.location_level >= details.location_level
end;',true,'ACTIVE',NULL,true,'9235fa0f-53c4-44ad-9fa6-b2868ed62a8c'),
	 (1,'2019-12-03 15:34:39.775516',NULL,NULL,'mytecho_retrieve_user_starred_cards','loggedInUserId','select 
mt_config.category_id
,mt_config.id
,cast(lv.code as int) as catagory_order
,mt_language_config.language as language
,mt_language_config.tittle as title
,mt_language_config.description as "description"
,mt_config.component_type as "componentType"
,mt_language_config.button_text as "buttonText"
,case when (mt_language_config.url is null or mt_language_config.url = ''null'')
	then cast (mt_language_config.media_name as text)  else mt_language_config.url end as "mediaUrl"
,case when (mt_language_config.url is null or mt_language_config.url = ''null'')
	then ''SYSTEM'' else ''URL'' end as "mediaType"
, CAST(''thumbnail.jpg'' as text) as thumbnail
from 
mytecho_user_starred_card_master mt_star_card
inner join mytecho_timeline_config_det mt_config 
	on mt_config.id = mt_star_card.mt_timeline_config_id
left join listvalue_field_value_detail lv 
	on lv.id = mt_config.category_id
inner join mytecho_timeline_language_wise_config_det mt_language_config
	on mt_config.id = mt_language_config.mt_timeline_config_id 
	and mt_language_config.language = mt_star_card.language
	where mt_star_card.user_id=#loggedInUserId#',true,'ACTIVE','mytecho_retrieve_user_starred_cards',true,'89c69d03-a291-41f7-ab6b-3abff0214f50'),
	 (66522,'2020-08-14 10:21:11.664',66522,'2020-08-18 19:16:43.495','soh_pending_work_pnc','limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
notification.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
to_char(lmp_date,''DD-MM-YYYY'') as "val_LMP Date",
to_char(delivery_reg_date,''DD-MM-YYYY'') as "val_Delivery Date",
cast(''PNC'' AS text) as "val_Pending Work Type",
to_char(notification.schedule_date,''DD-MM-YYYY'') as "val_Schedule Date",
to_char(notification.due_on,''DD-MM-YYYY'') as "val_Due Date",
to_char(notification.expiry_date,''DD-MM-YYYY'') as "val_Expiry Date",
notification.location_id as loc_id
from techo_notification_master_analysis notification inner join imt_member m on m.id = notification.member_id
inner join rch_pregnancy_analytics_details analytics on analytics.member_id = notification.member_id
inner join  notification_type_master type_master on notification.notification_type_id = type_master.id
where 
notification.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#) 
and type_master.code=''FHW_PNC''
and cast(due_on as date) <= current_date
and ( notification.expiry_date is null or cast(notification.expiry_date as date) >= current_date) and notification.state  = ''PENDING''
limit #limit#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id
	where family_head = true
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
inner join anmLocation a on  uld.loc_id = a.location_id
inner join um_user uu on uu.id = uld.user_id 
where 
uld.state = ''ACTIVE'' and uu.state=''ACTIVE'' and
uu.role_id in (select id from um_role_master where code =''FHW'' )
group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
	select max(service_date) as service_date,services.member_id from rch_member_services services
	inner join analytics a on a.member_id = services.member_id
	group by services.member_id 
),
lastServiceUnique as(
	select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
	where service.member_id = last.member_id
	group by service.member_id, last.service_date
),
lastServiceDetails as (
	select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
	service.location_id,
	location.name as locationName,
	case when service.service_type =''FHW_LMP'' then ''LMP Visit''
		when  service.service_type =''FHW_ANC'' then ''ANC Visit''
		  when service.service_type = ''FHW_PNC'' then ''PNC Visit''
		  when service.service_type = ''FHW_CS'' then ''Child Service''
		  when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
	end as service_type,
	service.member_id 
	from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id
	
	inner join location_master location on service.location_id = location.id
	
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName"
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = a.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id',true,'ACTIVE',NULL,NULL,'649b68e1-e29b-4055-a6a8-f8d7fddb2ad1'),
	 (1,'2019-05-17 00:00:00',NULL,NULL,'move_to_production_cho_form','userId','
with temp_details as (
	select * from 
    dblink(''host=localhost user=postgres password=q1w2e3R$ dbname=techo'',''select distinct tcm.user_id,training_id,certification_on from tr_certificate_master tcm where user_id = #userId# and course_id in = 17 and grade_type = ''TRAINED'' '' )
    AS certification_on(user_id bigint,
    training_id bigint,
    certification_on timestamp without time zone )
)select cast(''CHO'' as text) as form_code, case when temp_details.certification_on is not null
then true 
else false end as result
from
(select #userId# as user_id) tmp left join
temp_details on temp_details.user_id = tmp.user_id;
',true,'ACTIVE',NULL,true,'1b4e7fc3-c377-42a9-a52e-b305bc88ed89'),
	 (1,'2019-07-01 00:00:00',58981,'2020-05-08 19:34:37.212','mob_work_register_detail_anc','visitId','--mob_work_register_detail_anc
with const as (
	select cast(''APH'' as text) as const, cast(''APH'' as text) as name
	union
	select cast(''PPH'' as text) as const, cast(''PPH'' as text) as name
	union
	select cast(''PLPRE'' as text) as const, cast(''Placenta previa'' as text) as name
	union
	select cast(''PRETRM'' as text) as const, cast(''Pre term'' as text) as name
	union
	select cast(''PIH'' as text) as const, cast(''PIH'' as text) as name
	union
	select cast(''CONVLS'' as text) as const, cast(''Convulsion'' as text) as name
	union
	select cast(''MLPRST'' as text) as const, cast(''Malpresentation'' as text) as name
	union
	select cast(''PRELS'' as text) as const, cast(''Previous LSCS'' as text) as name
	union
	select cast(''TWINS'' as text) as const, cast(''Twins'' as text) as name
	union
	select cast(''SBRTH'' as text) as const, cast(''Still birth'' as text) as name
	union
	select cast(''P2ABO'' as text) as const, cast(''Previous 2 abortions'' as text) as name
	union
	select cast(''KCOSCD'' as text) as const, cast(''Known case of sickle cell disease'' as text) as name
	union
	select cast(''CONGDEF'' as text) as const, cast(''Congenital Defects'' as text) as name
	union
	select cast(''SEVANM'' as text) as const, cast(''Severe Anemia'' as text) as name
	union
	select cast(''OBSLBR'' as text) as const, cast(''Obstructed Labour'' as text) as name
	union
	select cast(''CAESARIAN'' as text) as const, cast(''Caesarian Section'' as text) as name
	union
	select cast(''OTHER'' as text) as const, cast(''Other'' as text) as name
	union
	select cast(''NK'' as text) as const, cast(''Not known'' as text) as name
	union
	select cast(''LBIRTH'' as text) as const, cast(''Live Birth'' as text) as name
	union
	select cast(''SBIRTH'' as text) as const, cast(''Still Birth'' as text) as name
	union
	select cast(''MTP'' as text) as const, cast(''MTP'' as text) as name
	union
	select cast(''ABORTION'' as text) as const, cast(''Abortion'' as text) as name
	union
	select cast(''HOME'' as text) as const, cast(''Home'' as text) as name
	union
	select cast(''MAMTA_DAY'' as text) as const, cast(''Mamta Day'' as text) as name
	union
	select cast(''HOSP'' as text) as const, cast(''Institution'' as text) as name
	union
	select cast(''THIS_HOSP'' as text) as const, cast(''Institution'' as text) as name
	union
	select cast(''108_AMBULANCE'' as text) as const, cast(''108 Ambulance'' as text) as name
	union
	select cast(''ON_THE_WAY'' as text) as const, cast(''On The Way'' as text) as name
	union
	select cast(''NOT_DONE'' as text) as const, cast(''Not done'' as text) as name
	union
	select cast(''REACTIVE'' as text) as const, cast(''Reactive'' as text) as name
	union
	select cast(''NON_REACTIVE'' as text) as const, cast(''Non-reactive'' as text) as name
	union
	select cast(''EMPTY'' as text) as const, cast(''Done on empty stomach'' as text) as name
	union
	select cast(''NON_EMPTY'' as text) as const, cast(''Done on non-empty stomach'' as text) as name
	union
	select cast(''POSITIVE'' as text) as const, cast(''Positive'' as text) as name
	union
	select cast(''NEGATIVE'' as text) as const, cast(''Negative'' as text) as name
	union
	select cast(''SOCIAL_CELL_TRAIT'' as text) as const, cast(''Social Cell Trait'' as text) as name
	union
	select cast(''SICKLE_CELL'' as text) as const, cast(''Sickle Cell'' as text) as name
	union
	select cast(''FMLSTR'' as text) as const, cast(''FEMALE STERILIZATION'' as text) as name
	union
	select cast(''MLSTR'' as text) as const, cast(''MALE STERILIZATION'' as text) as name
	union
	select cast(''IUCD5'' as text) as const, cast(''IUCD- 5 YEARS'' as text) as name
	union
	select cast(''IUCD10'' as text) as const, cast(''IUCD- 10 YEARS'' as text) as name
	union
	select cast(''CONDOM'' as text) as const, cast(''CONDOM'' as text) as name
	union
	select cast(''ORALPILLS'' as text) as const, cast(''ORAL PILLS'' as text) as name
	union
	select cast(''CHHAYA'' as text) as const, cast(''CHHAYA'' as text) as name
	union
	select cast(''ANTARA'' as text) as const, cast(''ANTARA'' as text) as name
	union
	select cast(''CONTRA'' as text) as const, cast(''EMERGENCY CONTRACEPTIVE PILLS'' as text) as name
	union
	select cast(''PPIUCD'' as text) as const, cast(''PPIUCD'' as text) as name
	union
	select cast(''PAIUCD'' as text) as const, cast(''PAIUCD'' as text) as name
	union
	select cast(''NONE'' as text) as const, cast(''NONE'' as text) as name
	union
	select cast(''SUBCENTER'' as text) as const, cast(''Subcenter'' as text) as name
	union
	select cast(''PHC'' as text) as const, cast(''PHC'' as text) as name
	union
	select cast(''UPHC'' as text) as const, cast(''UPHC'' as text) as name
	union
	select cast(''CHC'' as text) as const, cast(''CHC'' as text) as name
	union
	select cast(''SUBDISTRICTHOSP'' as text) as const, cast(''Sub-District Hospital'' as text) as name
	union
	select cast(''DISTRICTHOSP'' as text) as const, cast(''District Hospital'' as text) as name
	union
	select cast(''TRUSTHOSP'' as text) as const, cast(''Trust Hospital'' as text) as name
	union
	select cast(''CHIRANJEEVIHOSP'' as text) as const, cast(''Private (Chiranjeevi)'' as text) as name
	union
	select cast(''PRIVATEHOSP'' as text) as const, cast(''Private Hospital'' as text) as name
	union
	select cast(''OTHER'' as text) as const, cast(''Other'' as text) as name
        union
        select cast(''USUAL'' as text) as const, cast(''Usual'' as text) as name
        union
        select cast(''ABSENT'' as text) as const, cast(''Absent'' as text) as name
        union
        select cast(''DECREASED'' as text) as const, cast(''Decreased'' as text) as name
), dangsign as (
	select rel.anc_id, string_agg(det.value ,'', '') as dangeroussign 
	from rch_anc_dangerous_sign_rel rel
	inner join listvalue_field_value_detail det on rel.dangerous_sign_id = det.id
	where rel.anc_id = #visitId# group by rel.anc_id 
), prev_preg_comp as (
	select rel.anc_id, 
	string_agg(case when const.name is null then rel.previous_pregnancy_complication else const.name end,'', '') as prev_preg_comp 
	from rch_anc_previous_pregnancy_complication_rel rel
	left join const on const.const = rel.previous_pregnancy_complication
	where rel.anc_id = #visitId# group by rel.anc_id 
)
select 
concat(mem.first_name,'' '',mem.middle_name,'' '',mem.last_name,'' ('',mem.unique_health_id,'')'') as "Member Name",
mem.family_id as "Family Id",
to_char(reg.reg_date, ''DD/MM/YYYY'') as "Date of Registration",
to_char(anc.service_date, ''DD/MM/YYYY'') as "Date of examination",
case when ancplace.value is not null then ancplace.value when delivery_place.name is not null then delivery_place.name else null end as "Place Name",
type_of_hospital.value as "Place type",
case when anc.lmp is not null then to_char(anc.lmp, ''DD/MM/YYYY'') else null end as "LMP Date",
case when anc.service_date is null or reg.lmp_date is null then null else TRUNC(DATE_PART(''day'', cast(anc.service_date as timestamp) - cast(reg.lmp_date as timestamp))/7) end as "Pregnancy week",
anc.blood_group as "Blood Group",
case when anc.member_height is not null then cast(anc.member_height as text) else null end as "Height",
case when anc.weight is not null then cast(anc.weight as text) else null end as "Weight",
case when anc.haemoglobin_count is not null then cast(anc.haemoglobin_count as text) else null end as "Hb (gm%)",
case when anc.systolic_bp is not null then cast(anc.systolic_bp as text) else null end as "Systolic BP",
case when anc.diastolic_bp is not null then cast(anc.diastolic_bp as text) else null end as "Diastolic BP",
case when anc.foetal_height is not null then cast(anc.foetal_height as text) else null end as "Foetal Height",
case when anc.foetal_heart_sound = true then ''Yes'' when anc.foetal_heart_sound = false then ''No'' else null end as "Foetal Heart Sound",
foetal_position.name as "Foetal Position",
foetal_movement.name as "Foetal Movement",
case when anc.fa_tablets_given is not null then cast(anc.fa_tablets_given as text) else null end as "Folic Acid Tablets",
case when anc.ifa_tablets_given is not null then cast(anc.ifa_tablets_given as text) else null end as "IFA Tablets",
case when anc.calcium_tablets_given is not null then cast(anc.calcium_tablets_given as text) else null end as "Calcium Tablets",
prev_del_out.name as "Previous Delivery Outcome",
prev_preg_comp.prev_preg_comp as "Previous Pregnancy Complication",
anc.other_previous_pregnancy_complication as "Other Previous Pregnancy Complication",
case when anc.jsy_beneficiary = true then ''Yes'' when anc.jsy_beneficiary = false then ''No'' else null end as "JSY Beneficiary",
case when anc.jsy_payment_done = true then ''Yes'' when anc.jsy_payment_done = false then ''No'' else null end as "JSY Payment Done",
case when anc.kpsy_beneficiary = true then ''Yes'' when anc.kpsy_beneficiary = false then ''No'' else null end as "KPSY Beneficiary", 
case when anc.iay_beneficiary = true then ''Yes'' when anc.iay_beneficiary = false then ''No'' else null end as "IAY Beneficiary", 
case when anc.chiranjeevi_yojna_beneficiary = true then ''Yes'' when anc.chiranjeevi_yojna_beneficiary = false then ''No'' else null end as "Chiranjeevi Yojna Beneficiary",
case when anc.urine_test_done = true then ''Yes'' when anc.urine_test_done = false then ''No'' else null end as "Urine Test Done",
anc.urine_albumin as "Urine Albumin",
anc.urine_sugar as "Urine Sugar",
blood_sugar_test.name as "Blood Sugar Test",
case when anc.sugar_test_before_food_val is not null then cast(anc.sugar_test_before_food_val as text) else null end as "Blood Sugar - Before Food",
case when anc.sugar_test_after_food_val is not null then cast(anc.sugar_test_after_food_val as text) else null end as "Blood Sugar - After Food",
hbsag_test.name as "HBsAg Test",
vdrl_test.name as "VDRL Test",
hiv_test.name as "HIV Test",
sickle_cell_test.name as "Sickle Cell Test",
case when anc.albendazole_given = true then ''Yes'' when anc.albendazole_given = false then ''No'' else null end as "Albendazole Given",
dan.dangeroussign as "Dangerous Sign",
anc.other_dangerous_sign as "Other Dangerous Sign",
case when immun.immunisation_given is not null and immun.immunisation_given = ''TT1'' then to_char(immun.given_on,''dd-MM-yyyy'') else null end as "TT 1",
case when immun.immunisation_given is not null and immun.immunisation_given = ''TT2'' then to_char(immun.given_on,''dd-MM-yyyy'') else null end as "TT 2",
case when immun.immunisation_given is not null and immun.immunisation_given = ''TT_BOOSTER'' then to_char(immun.given_on,''dd-MM-yyyy'') else null end as "TT Booster",
case when anc.dead_flag = true then ''Yes'' when anc.dead_flag = false then ''No'' else null end as "Is the Member Dead",
case when anc.death_date is not null then to_char(anc.death_date, ''DD/MM/YYYY'') else null end as "Death Date",
place_of_death.name as "Place Of Death",
death_reason.value as "Death Reason",
expected_delivery_place.name as "Expected Delivery Place",
family_planning_method.name as "Contraceptive method post pregnancy",
case when anc.is_high_risk_case = true then ''Yes'' when anc.is_high_risk_case = false then ''No'' else null end as "Is High Risk Case",
referralplace.value as "Referral place Name"
from rch_anc_master anc 
inner join imt_member mem on anc.member_id = mem.id
inner join imt_family fam on fam.family_id = mem.family_id
left join imt_member husband on mem.husband_id = husband.id
left join rch_pregnancy_registration_det reg on anc.pregnancy_reg_det_id = reg.id 
left join listvalue_field_value_detail caste on cast(fam.caste as bigint) = caste.id
left join listvalue_field_value_detail religion on cast(fam.religion as bigint) = religion.id
left join listvalue_field_value_detail ancplace on anc.anc_place = ancplace.id
left join listvalue_field_value_detail type_of_hospital on anc.type_of_hospital = type_of_hospital.id
left join listvalue_field_value_detail referralplace on anc.referral_place = referralplace.id
left join listvalue_field_value_detail death_reason on cast(anc.death_reason as bigint) = death_reason.id
left join const delivery_place on delivery_place.const = anc.delivery_place 
left join const prev_del_out on prev_del_out.const = anc.last_delivery_outcome
left join const foetal_movement on foetal_movement.const = anc.foetal_movement
left join const foetal_position on foetal_position.const = anc.foetal_position
left join const blood_sugar_test on blood_sugar_test.const = anc.blood_sugar_test
left join const hbsag_test on hbsag_test.const = anc.hbsag_test
left join const vdrl_test on vdrl_test.const = anc.vdrl_test
left join const hiv_test on hiv_test.const = anc.hiv_test
left join const sickle_cell_test on sickle_cell_test.const = anc.sickle_cell_test
left join const expected_delivery_place on expected_delivery_place.const = anc.expected_delivery_place
left join const family_planning_method on family_planning_method.const = anc.family_planning_method
left join const place_of_death on place_of_death.const = anc.place_of_death
left join dangsign dan on anc.id = dan.anc_id
left join prev_preg_comp on anc.id = prev_preg_comp.anc_id
left join rch_immunisation_master immun on immun.visit_id = anc.id and immun.immunisation_given in ( ''TT1'',''TT2'',''TT_BOOSTER'')
where anc.id = #visitId#',true,'ACTIVE',NULL,true,'e6297316-f1b8-48b8-875d-0c0acc7ce035'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','update_covid19_new_admission_detail','inContactWithCovid19Paitent,otherCoMobidity,firstname,indications,occupation,gender,bed_no,date_of_onset_symptom,isHypertension,isRenalCondition,emergencyContactNo,isHeartPatient,isOtherCoMobidity,abroad_contact_details,flightno,referFromHosital,opdCaseNo,contact_no,admission_date,case_number,isImmunocompromized,address,unitno,ward_no,emergencyContactName,isSari,hasCough,pregnancy_status,middlename,travelHistory,loggedInUserId,isCOPD,travelledPlace,lastname,isMalignancy,hasShortnessBreath,isMigrant,hasFever,isHIV,otherIndications,districtLocationId,is_abroad_in_contact,admissionId,isDiabetes,age,ageMonth','update covid19_admission_detail set
first_name =#firstname#,
middle_name =(case when #middlename# = null then null else #middlename# end),
last_name =(case when #lastname# = null then null else #lastname# end),
age =(case when #age# = null then  age else  #age# end)
,age_month =(case when #ageMonth# = null then  age_month else  #ageMonth# end),
contact_number =(case when #contact_no# = null then null else #contact_no# end),
address =(case when #address# = null then null else #address# end),
gender =(case when #gender# = null then null else #gender# end),
flight_no =(case when #flightno# = null then null else #flightno# end),
refer_from_hospital =(case when #referFromHosital# = null then null else #referFromHosital# end),
case_no =(case when #case_number# = null then null else #case_number# end),
unit_no =(case when #unitno# = null then null else #unitno# end),
is_cough =#hasCough#,
is_fever =#hasFever#,
is_breathlessness =#hasShortnessBreath#,
location_id =#districtLocationId#,
current_ward_id =#ward_no#,
current_bed_no =#bed_no#,
admission_date =#admission_date#,
admission_entry_by =#loggedInUserId#,
admission_entry_on =now(),
is_hiv = #isHIV#,
is_heart_patient =#isHeartPatient#,
is_diabetes =#isDiabetes#,
status =''CONFORMED'',
health_infra_id = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = #loggedInUserId# and uhi.state = ''ACTIVE''),
emergency_contact_name =(case when #emergencyContactName# = null then null else #emergencyContactName# end),
emergency_contact_no =(case when #emergencyContactNo# = null then null else #emergencyContactNo# end),
is_immunocompromized =#isImmunocompromized#,
is_hypertension =#isHypertension#,
is_malignancy =#isMalignancy#,
is_renal_condition =#isRenalCondition#,
is_copd =#isCOPD#,
pregnancy_status =(case when #pregnancy_status# = null then null else #pregnancy_status# end),
date_of_onset_symptom =(case when #date_of_onset_symptom# = null then null else to_date(#date_of_onset_symptom#,''MM-DD-YYYY'') end),
occupation =(case when #occupation# = null then null else #occupation# end),
travel_history =(case when #travelHistory# = null then null else #travelHistory# end),
travelled_place =(case when #travelledPlace# = null then null else #travelledPlace# end),
is_abroad_in_contact =(case when #is_abroad_in_contact# = null then null else #is_abroad_in_contact# end),
abroad_contact_details =(case when #abroad_contact_details# = null then null else #abroad_contact_details# end),
in_contact_with_covid19_paitent =(case when #inContactWithCovid19Paitent# = null then null else #inContactWithCovid19Paitent# end),
opd_case_no =(case when #opdCaseNo# = null then null else #opdCaseNo# end),
is_other_co_mobidity =#isOtherCoMobidity#,
other_co_mobidity =(case when #otherCoMobidity# = null then null else #otherCoMobidity# end),
is_sari =#isSari#,
indications =(case when #indications# = null then null else #indications# end),
indication_other =(case when #otherIndications# = null then null else #otherIndications# end),
is_migrant =#isMigrant#
where id=#admissionId#;',false,'ACTIVE',NULL,true,'6b262f1a-c954-46ac-abae-a76051a2975c'),
	 (1,'2020-05-11 00:00:00',1,'2020-05-11 00:00:00','retrieval_next_level_rch_locations','id','
    select
    lm.id as "id",
    lm.name as "name",
    lm.english_name as "englishName",
    lm.type as "type",
    lm.parent as "parentId",
    (select type from location_master where id = lm.parent) as "parentType",
    lm.rch_code as "rchCode",
    get_location_hierarchy(lm.id) as "techoLocationHierarchy",
    ltm.level as "level",
    alsm.id as "anmolId",
    alsm.name as "anmolName",
    alsm.english_name as "anmolEnglishName",
    alsm.type as "anmolType",
    alsm.techo_location_type as "anmolTechoType",
    alsm.rch_code as "anmolRchCode",
    alsm.parent_type as "anmolParentType",
    alsm.techo_parent_location_type as "anmolTechoParentType",
    alsm.parent_rch_code as "anmolParentRchCode",
    alsm.asha_id as "ashaId",
    alsm.anm_id as "anmId",
    alsm2.rch_code as "parentRchCode",
    case
        when alsm.id is not null and cast((select rch_code from location_master where id = lm.parent) as text) != alsm.parent_rch_code then true
        else false
    end as "isParentRchCodeMismatch"
    from location_master lm
    inner join location_type_master ltm on ltm.type = lm.type
    left join anmol_location_master alsm on
        alsm.rch_code = cast(lm.rch_code as text)
        and (
            case
			    when lm.type in (''S'') and alsm.type in (''S'') then true
                when lm.type in (''D'', ''C'') and alsm.type in (''D'') then true
                when lm.type in (''B'', ''Z'') and alsm.type in (''T'') then true
                when lm.type in (''P'') and alsm.type in (''F'') then true
                when lm.type in (''U'') and alsm.type in (''FU'') then true
                when lm.type in (''SC'', ''ANM'') and alsm.type in (''SF'') then true
                when lm.type in (''V'', ''ANG'') and alsm.type in (''V'') then true
                else false
            end
        )
    left join anmol_location_master alsm2 on
	    alsm2.rch_code =
        case
            when (select "type" from location_master where id = #id#) in (''S'', ''R'') then
                cast((
                    select lm2.rch_code from location_master lm2 where lm2.id = (select lm3.parent from location_master lm3 where lm3.id = lm.parent))
                as text)
            else cast((select lm2.rch_code from location_master lm2 where lm2.id = lm.parent) as text)
        end
		and
		case
            when lm.type in (''D'', ''C'') and alsm2.type in (''S'') then true
            when lm.type in (''B'', ''Z'') and alsm2.type in (''D'') then true
            when lm.type in (''P'', ''U'') and alsm2.type in (''T'') then true
            when lm.type in (''SC'', ''ANM'') and alsm2.type in (''F'', ''FU'') then true
            when lm.type in (''V'', ''ANG'') and alsm2.type in (''SF'') then true
            else false
        end
    where
    case
        when (select "type" from location_master where id = #id#) = ''S'' then lm.parent in (select lm2.id from location_master lm2 where lm2.parent = #id#)
        else lm.parent = #id#
    end
',true,'ACTIVE','Retrieval Next Level RCH Locations',true,'2e45226d-5418-4905-9c1e-40450eba450b'),
	 (74909,'2020-05-11 00:00:00',74909,'2020-05-11 00:00:00','get_elements_details_permission_wise','user_id,locationId,timeline_type','with user_detail as(
select role_id,id from um_user where id = #user_id#
),
elements_id as ( select soh_element_permissions.element_id from soh_element_permissions inner join user_detail on true
where  (case when permission_type = ''ROLE'' then reference_id = user_detail.role_id end) or
(case when permission_type = ''USER'' then reference_id = user_detail.id end) or
permission_type = ''ALL''),
soh_elements as (select * from soh_element_configuration where id in (select distinct(element_id) from elements_id) or is_public = true),
elements_details as (
       select lt.level,lt.type,closer.child_id as "locationId",
        case when lt.type =''C'' or lt.type =''D'' then ''Districts/Corporation'' else lt.name end as "locationType",
        case when l.english_name is not null then l.english_name else l.name end as english_name,
config.element_name as "elementName",
        value as value,sh.target,male as male,female as female,
        chart1 as chart1,chart2 as chart2,chart3 as chart3,chart4 as chart4,
chart5 as chart5,
chart6 as chart6,
chart7 as chart7,
chart8 as chart8,
chart9 as chart9,
chart10 as chart10,
chart11 as chart11,
chart12 as chart12,
chart13 as chart13,
chart14 as chart14,
chart15 as chart15,
        cast(''#timeline_type#'' as text) as timeline_type,
        days as days,
        reporting as reporting,
        calculatedTarget as calculatedTarget,
        color as color,
        percentage as percentage,
        sortPriority as "sortPriority",
        displayValue as displayValue
        from location_hierchy_closer_det closer
        inner join location_master l on closer.child_id = l.id
        inner join location_type_master lt on l.type = lt.type
        left join soh_elements config on TRUE
        left join soh_timeline_analytics_temp sh on sh.location_id = closer.parent_id and config.element_name = sh.element_name
        --inner join location_hierchy_closer_det closer on closer.parent_id = 2 and depth=case when 2 = 2 then 2 else 1 end and timeline_type = ''#timeline_type#''
	and timeline_type = ''#timeline_type#''
        where closer.parent_id = ''#locationId#'' and depth=0
	--and timeline_sub_type=''PERIOD''
        order by english_name),
unique_locations as (
        select distinct "locationId" from elements_details
        ),
user_details_ids as (
        select uul.loc_id as location_id, concat(uu.first_name,'' '',uu.middle_name,'' '', uu.last_name)
				 as "userName",
				 case when uu.role_id = 39 then ''CDHO''
				when uu.role_id = 41 then ''THO''
				when uu.role_id = 66 then ''MO PHC''
when uu.role_id = 86 then ''MO UPHC''

				when uu.role_id = 67 then ''MO AYUSH''
				when uu.role_id = 63 then ''RCHO''
                                when uu.role_id = 85 then ''MOH Co.''
				when uu.role_id = 99 then ''RCHO Co.''
				when uu.role_id = 204 then ''MPHW''
				when uu.role_id = 30 then ''FHW''
				when uu.role_id = 24 then ''ASHA''
				when uu.role_id = 108 then ''DHO''
                                when uu.role_id = 179 then ''CHO-HWC''
				else ''(Other)'' end as "roleName",
				uu.contact_number as "contactNumber",
				uu.id as user_id
        from unique_locations elements
        inner join um_user_location uul on elements."locationId" = uul.loc_id
        inner join um_user uu on uu.id = uul.user_id
        inner join location_master lm on lm.id =  uul.loc_id
        where uul.state=''ACTIVE''
        and uu.state=''ACTIVE''
	and uu.role_id in (39,41,67,66,63,85,99,204,24,108,30,86,179)
),
remaining_user_data as (
	select "locationId" as location_id,
	cast(''-'' as text) as "userName",
	t.roleName,
	cast(''-'' as text) as "contactNumber",
	cast(0 as numeric) as "user_id"

	from unique_locations
	inner join location_master lm on lm.id = "locationId"
	inner join (
	select ''C'' as type_id, unnest(array[''MOH Co.'', ''RCHO Co.'']) as roleName
	union all
	select ''D'' as type_id, unnest(array[''CDHO'', ''RCHO'']) as roleName
	union all
	select ''B'' as type_id, ''THO'' as roleName
	union all
	select ''Z'' as type_id, ''DHO'' as roleName
	union all
	select ''P'' as type_id, unnest(array[''MO PHC'', ''MO AYUSH'']) as roleName
	union all
	select ''U'' as type_id, unnest(array[''MO UPHC'', ''MO AYUSH'']) as roleName
	union all
	select ''V'' as type_id, unnest(array[''FHW'',''MPHW'']) as roleName
	union all
	select ''ANG'' as type_id, unnest(array[''FHW'',''MPHW'']) as roleName
	union all
	select ''SC'' as type_id, unnest(array[''CHO-HWC'']) as roleName
	union all
--select ''ANM'' as type_id, unnest(array[''CHO-HWC'']) as roleName
	--union all
	select ''A'' as type_id, unnest(array[''ASHA'']) as roleName
	union all
	select ''AA'' as type_id, unnest(array[''ASHA'']) as roleName
	) as t on t.type_id = lm."type"
),
remaining_user_data_1 as (
	select users.*
	from remaining_user_data remains
	left join user_details_ids users  on users.location_id = remains.location_id
	and users."roleName"  = remains.roleName
	where users.user_id is not null
	union
	select remains.*
        from remaining_user_data remains
	left join user_details_ids users  on users.location_id = remains.location_id
	and users."roleName"  = remains.roleName
	where users.user_id is null
),
user_details as (
	       select
	       cast(array_to_json(array_agg(row_to_json(ud.*))) as text) as user_name,ud.location_id
	       from remaining_user_data_1 ud
	       group by ud.location_id
)
select elements.*,
case when users.user_name is null then null else users.user_name end as  "userDetail"
from elements_details elements
--inner join calculations cal on cal."locationId" = elements."locationId"
left join user_details users
on elements."locationId" = users.location_id',true,'ACTIVE',NULL,true,'46a8c7ea-c976-4d82-b4f9-8d7f631b0f13'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','covid19_addmitted_case_daily_status_insert_data','otherCoMobidity,temprature,isSerum,isECG,serviceDate,cTScanImpression,G6PDImpression,ventilatorType2,ventilatorType1,isHypertension,serumCreatinineImpression,isG6PD,hydroxychloroquine,bedNumber,bpDialostic,memberId,isImmunocompromized,onAir,h1N1TestImpression,sp02,azithromycin,isSGPT,wardId,loggedInUserId,isCOPD,hasShortnessBreath,healthStatus,xRAYImpression,antibiotics,isRenalCondition,isHeartPatient,isOtherCoMobidity,respirationRate,isH1N1,locationId,onO2,bloodCultureImpression,isXray,bpSystolic,isSari,sGPTImpression,hasCough,eCGImpression,isMalignancy,isBlood,hasFever,onVentilator,isHIV,pulseRate,admissionId,oseltamivir,isDiabetes,clinicallyCured,remarks,isCtScan','with insert_daily_check_up as (
insert into covid19_admitted_case_daily_status(member_id,
location_id,
admission_id,
service_date,
ward_id,
bed_no,
health_status,
on_ventilator,
ventilator_type1,
ventilator_type2,
on_o2,
on_air,
clinically_clear,
remarks,
created_by,
created_on,

temperature,   
pulse_rate,
bp_systolic,
bp_dialostic,
respiration_rate,
spo2,

azithromycin,
hydroxychloroquine,
oseltamivir,
antibiotics,

is_xray,
xray_detail,
is_ctscan,
ct_scan_detail,
is_ecg,
ecg_detail,
is_serum_creatinine,
serum_creatinine_detail,
is_sgpt,
sgpt_detail,
is_h1n1_test,
h1n1_test_detail,
blood_culture,
blood_culture_detail,
is_g6pd,
g6pd_detail)
values(
#memberId#,
#locationId#,
#admissionId#,
#serviceDate#
,#wardId#
,(case when #bedNumber# = null then null else #bedNumber# end)
,#healthStatus#
, #onVentilator#
,#ventilatorType1#
,#ventilatorType2#
,#onO2#
,#onAir#
,#clinicallyCured#
,#remarks#
,#loggedInUserId#
,now()

,#temprature#,
#pulseRate#,
#bpSystolic#,
#bpDialostic#,
#respirationRate#,
#sp02#,

#azithromycin#,
#hydroxychloroquine#,
#oseltamivir#,
#antibiotics#,

#isXray#,
(case when #xRAYImpression# = null then null else #xRAYImpression# end),
#isCtScan#,
(case when #cTScanImpression# = null then null else #cTScanImpression# end),
#isECG#,
(case when #eCGImpression# = null then null else #eCGImpression# end),
#isSerum#,
(case when #serumCreatinineImpression# = null then null else #serumCreatinineImpression# end),
#isSGPT# ,
(case when #sGPTImpression# = null then null else #sGPTImpression# end),
#isH1N1#,
(case when #h1N1TestImpression# = null then null else #h1N1TestImpression# end),
#isBlood#,
(case when #bloodCultureImpression# = null then null else #bloodCultureImpression# end),
#isG6PD#,
(case when #G6PDImpression# = null then null else #G6PDImpression# end)
)
returning id
)
update covid19_admission_detail cad set current_ward_id = #wardId#
, current_bed_no = (case when #bedNumber# = null then null else  #bedNumber# end)
, last_check_up_detail_id = (select id from insert_daily_check_up),
is_cough=#hasCough#,
is_fever=#hasFever#,
is_breathlessness=#hasShortnessBreath#,
is_sari=#isSari#,
is_copd=#isCOPD#,
is_diabetes=#isDiabetes#,
is_hiv=#isHIV#,
is_heart_patient=#isHeartPatient#,
is_hypertension=#isHypertension#,
is_renal_condition=#isRenalCondition#,
is_immunocompromized=#isImmunocompromized#,
is_malignancy=#isMalignancy#,
is_other_co_mobidity=#isOtherCoMobidity#,
other_co_mobidity= (case when #otherCoMobidity# = null then null else  #otherCoMobidity# end)
where id = #admissionId#;',false,'ACTIVE',NULL,true,'407bd0ba-a73c-498f-8fde-dc1f5cd6e04b'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','covid19_update_admitted_patients_det_for_editing','is_copd,is_hypertension,firstname,indications,occupation,gender,refer_from_hospital,date_of_onset_symptom,other_co_mobidity,is_breathlessness,emergency_contact_name,location_id,abroad_contact_details,emergency_contact_no,flight_no,travel_history,admission_date,is_diabetes,is_malignancy,health_status,is_fever,is_cough,pincode,case_no,address,is_sari,pregnancy_status,is_other_co_mobidity,middlename,current_bed_no,is_immunocompromized,contact_number,is_hiv,lastname,is_renal_condition,isMigrant,travelled_place,is_heart_patient,otherIndications,unit_no,is_abroad_in_contact,admissionId,opd_case_no,in_contact_with_covid19_paitent,age,current_ward_id,ageMonth','begin;
update covid19_admission_detail
set
first_name = case when #firstname# != null then #firstname# else null end,
middle_name = case when #middlename# != null then #middlename# else null end,
last_name = case when #lastname# != null then #lastname# else null end,
address = case when #address# != null then #address# else null end,
pincode = #pincode#,
occupation = case when #occupation# != null then #occupation# else null end,
travel_history = case when #travel_history# != null then #travel_history# else null end,
travelled_place = case when #travelled_place# != null then #travelled_place# else null end,
flight_no = case when #flight_no# != null then #flight_no# else null end,
is_abroad_in_contact = case when #is_abroad_in_contact# != null then #is_abroad_in_contact# else null end,
in_contact_with_covid19_paitent = case when #in_contact_with_covid19_paitent# != null then #in_contact_with_covid19_paitent# else null end,
abroad_contact_details = case when #abroad_contact_details# != null then #abroad_contact_details# else null end,
admission_date = #admission_date#,
case_no = case when #case_no# != null then #case_no# else null end ,
opd_case_no = case when #opd_case_no# != null then #opd_case_no# else null end,
contact_number = case when #contact_number# != null then #contact_number# else null end,
gender = case when #gender# != null then #gender# else null end,
pregnancy_status = case when #pregnancy_status# != null then #pregnancy_status# else null end,
age = #age#,
is_fever = #is_fever#,
is_cough = #is_cough#,
is_breathlessness = #is_breathlessness#,
is_sari = #is_sari#,
is_hiv = #is_hiv#,
is_heart_patient = #is_heart_patient#,
is_diabetes = #is_diabetes#,
is_copd = #is_copd#,
is_hypertension = #is_hypertension#,
is_renal_condition = #is_renal_condition#,
is_immunocompromized = #is_immunocompromized#,
is_malignancy = #is_malignancy#,
is_other_co_mobidity = #is_other_co_mobidity#,
other_co_mobidity = case when #other_co_mobidity# != null then #other_co_mobidity# else null end,
indications = case when #indications# != null then #indications# else null end,
date_of_onset_symptom = (case when #date_of_onset_symptom# = null then null else to_date(#date_of_onset_symptom#,''MM-DD-YYYY'') end),
refer_from_hospital = case when #refer_from_hospital# != null then #refer_from_hospital# else null end,
current_bed_no = case when #current_bed_no# != null then #current_bed_no# else null end,
unit_no = case when #unit_no# != null then #unit_no# else null end,
emergency_contact_name = case when #emergency_contact_name# != null then #emergency_contact_name# else null end,
emergency_contact_no = case when #emergency_contact_no# != null then #emergency_contact_no# else null end,
current_ward_id = #current_ward_id#,
is_migrant=#isMigrant#,
age_month=case when #ageMonth# = null then age_month else #ageMonth#  end,
indication_other=case when #otherIndications# != null then #otherIndications# else null end,
location_id = #location_id#
where id = #admissionId#;

update covid19_admitted_case_daily_status
set 
location_id = #location_id#,
health_status = case when #health_status# != null then #health_status# else null end 
where admission_id = #admissionId#;

commit;',false,'ACTIVE',NULL,true,'88043cfc-5c58-4830-b157-be687977ebda'),
	 (80276,'2020-06-30 00:00:00',80276,'2020-06-30 00:00:00','family_id_retrieval_by_mobile_number','mobileNumber','select family_id from imt_member im where mobile_number = #mobileNumber# group by family_id;',true,'ACTIVE','Get family ids which having given mobile number',true,'172fdcd4-b368-4e80-b90e-5651e236a238'),
	 (80276,'2020-06-30 00:00:00',80276,'2020-06-30 00:00:00','update_mobile_number_by_member_id','mobileNumber,memberId','update imt_member im set mobile_number = #mobileNumber# where id = #memberId#;',false,'ACTIVE','Update phone number by member id',true,'e94655d7-01e7-40f7-b1c8-34581c3e589d'),
	 (1,'2019-09-20 00:00:00',NULL,NULL,'update_mytecho_faq_by_id','faqid','
SELECT * from mytecho_faq_details where id =  #faqid#
',true,'ACTIVE',NULL,true,'053e5689-f648-4e06-b097-45a9b75bed3b'),
	 (1,'2019-09-20 00:00:00',NULL,NULL,'delete_faq_by_id','faqId','
DELETE FROM mytecho_faq_details WHERE id = #faqId#
',false,'ACTIVE',NULL,true,'39615899-1da6-4f44-a4d4-6e69545943e3'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','cmtc_nrc_family_id_search','familyId,offSet,limit','select
imt_member.id,
imt_member.first_name as "firstName",
imt_member.middle_name as "middleName",
imt_member.last_name as "lastName",
imt_member.dob as dob,
string_agg(location_master.name,''>'' order by location_hierchy_closer_det.depth desc) as "locationHierarchy"
from imt_member
inner join imt_family on imt_member.family_id = imt_family.family_id
inner join location_hierchy_closer_det on location_hierchy_closer_det.child_id = imt_family.location_id
inner join location_master on location_master.id = location_hierchy_closer_det.parent_id
where imt_member.family_id = #familyId#
and imt_member.dob >= (current_date - interval ''60 months'') and imt_member.dob <=(current_date)
group by
imt_member.id,
imt_member.first_name,
imt_member.middle_name,
imt_member.last_name,dob
limit #limit# offset #offSet#',true,'ACTIVE',NULL,true,'6e3f411a-2f58-440b-8623-611479a48ed1'),
	 (60512,'2020-04-16 00:00:00',60512,'2020-04-16 00:00:00','covid19_lab_test_archive_members','ids','update covid19_lab_test_detail
set is_archive = true
where id in (#ids#);',false,'ACTIVE',NULL,true,'b76e1d32-c8c6-462b-adb4-e84abc02d983'),
	 (66522,'2020-02-12 15:41:41.468',66522,'2020-10-09 11:02:05.449','state_of_health_immu_non_fi_gt_10_lt_1yr','limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
rcad.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
to_char(m.dob ,''DD-MM-YYYY'') as "dob",
INITCAP(REPLACE (cast(age(current_date,m.dob) as text), ''mon'', ''month''))
 as "age",
case when current_date - m.dob >= 310 and current_date - m.dob < 365 then ''10 to 11 Months''
 when current_date - m.dob >= 365 then ''Greater than 1 year'' end as "AgeGroup",
m.immunisation_given as "immunisationGiven_OLD",
rcad.overdue_immunisation as "overdueImmunisation",
m.mobile_number as "contactNumber",
to_char(rcad.last_child_service_date,''dd-MM-yyyy'') as "LastServiceData",
rcad.loc_id
from rch_child_analytics_details rcad,imt_member m
where rcad.loc_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and rcad.dob between (current_date - interval ''1 year'') and (current_date - interval ''11 months'')
and death_date is null and member_id is not null
and m.id = rcad.member_id 
and full_immunization_date is null
limit #limit#),
analytics_run_date as (
	select TO_DATE(key_value,''MM-DD-YYYY'') as last_run_date from system_configuration where  system_key  =''rch_child_analytics_last_schedule_date''
),
immunisationsTemp as (
  select * from rch_immunisation_master,analytics_run_date
   where member_id in (select member_id from analytics )
  and created_on < analytics_run_date.last_run_date
  order by given_on
),
immunisations as (
  select member_id, string_agg( CONCAT(immunisation_given,''#'',to_char(given_on,''DD/MM/YYYY'')),'','') as immunisation_given from immunisationsTemp
  group by member_id
),
family_head as (
select a.member_id as member_id,
concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
im.mobile_number as FamilyHeadMobileNo
from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id
where family_head = true
),
contact_person as (
select a.member_id, 
concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
im.mobile_number as contactPersonMobileNo  
from imt_member im 
inner join analytics a on a.family_id = im.family_id 
inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id

),

asha as (
select t.member_id
,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
u.contact_number as ashaMobileNo
from (
select member_id,max(uld.user_id) as user_id
from um_user_location uld 
inner join analytics a on  uld.loc_id = a.loc_id
inner join um_user uu on uu.id = uld.user_id 
where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
group by member_id) as t,um_user u
where t.user_id = u.id

),
anmLocation as (
select parent_id as location_id,a.member_id from location_hierchy_closer_det 
lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
inner join anmLocation a on  uld.loc_id = a.location_id
inner join um_user uu on uu.id = uld.user_id 
where uu.role_id in (select id from um_role_master where code =''FHW'' )
and uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
group by a.location_id,a.member_id
),
anmName as (
select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
uu.contact_number as ANMMobileNo

FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
select max(service_date) as service_date,services.member_id from rch_member_services services
inner join analytics a on a.member_id = services.member_id
group by services.member_id 
),
lastServiceUnique as(
select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
where service.member_id = last.member_id
group by service.member_id, last.service_date
),
lastServiceDetails as (
select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
service.location_id,
location.name as locationName,
case when service.service_type =''FHW_LMP'' then ''LMP Visit''
when  service.service_type =''FHW_ANC'' then ''ANC Visit''
 when service.service_type = ''FHW_PNC'' then ''PNC Visit''
 when service.service_type = ''FHW_CS'' then ''Child Service''
 when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
end as service_type,
service.member_id 
from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id

inner join location_master location on service.location_id = location.id

)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",

service.locationName as "LastServiceLocationName",
immu.immunisation_given as "immunisationGiven"
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id
left join immunisations immu on immu.member_id = a.member_id',true,'ACTIVE',NULL,true,'e2625ea6-a1cc-4c66-b3fc-b7cb3fcfcbff'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','cmtc_nrc_follow_up_unique_health_id_search','offSet,limit,uniqueHealthId','select 
imt_member.id,
imt_member.first_name as "firstName",
imt_member.middle_name as "middleName",
imt_member.last_name as "lastName",
imt_member.dob as dob,
csd.admission_id as "admissionId",
get_location_hierarchy(imt_family.location_id) as "locationHierarchy"
from imt_member
inner join imt_family on imt_member.family_id = imt_family.family_id
inner join child_cmtc_nrc_screening_detail csd on imt_member.id = csd.child_id 
where imt_member.unique_health_id = #uniqueHealthId#
and csd.state = ''DISCHARGE'' and csd.is_case_completed is null
limit #limit# offset #offSet#',true,'ACTIVE',NULL,true,'6bda3369-1bd8-434a-bb81-f34d3dc12cbe'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','cmtc_nrc_follow_up_name_search','firstName,lastName,offSet,limit','select
imt_member.id,
imt_member.first_name as "firstName",
imt_member.middle_name as "middleName",
imt_member.last_name as "lastName",
imt_member.dob as dob,
csd.admission_id as "admissionId",
get_location_hierarchy(imt_family.location_id) as "locationHierarchy"
from imt_member
inner join imt_family on imt_member.family_id = imt_family.family_id
inner join child_cmtc_nrc_screening_detail csd on imt_member.id = csd.child_id 
where imt_member.first_name ilike concat(''%'',#firstName#,''%'') and imt_member.last_name ilike concat(''%'',#lastName#,''%'')
and csd.state = ''DISCHARGE'' and csd.is_case_completed is null
limit #limit# offset #offSet#',true,'ACTIVE',NULL,true,'9f367260-9b93-4f93-be6d-58ab74131ffa'),
	 (57698,'2019-05-21 10:15:46.733',66522,'2019-09-19 14:44:38.358','soh_get_app_version',NULL,'select key_value as "androidVersion" from system_configuration where system_key =''SOH_ANDROID_VERSION''',true,'ACTIVE','It will return application version',true,'c8685be2-f1d1-4304-a336-6586bc9b5773'),
	 (1,'2019-11-20 15:51:19.35289',NULL,NULL,'mytecho_archive_user_timeline','id','update mytecho_user_timeline_response_det
set status = ''ARCHIVED''
where id = #id#;',false,'ACTIVE',NULL,true,'fefb97bc-07c5-43bd-83e9-1ea9605c64ec'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','cmtc_nrc_follow_up_mobile_number_search','offSet,mobileNumber,limit','select
imt_member.id,
imt_member.first_name as "firstName",
imt_member.middle_name as "middleName",
imt_member.last_name as "lastName",
imt_member.dob as dob,
csd.admission_id as "admissionId",
get_location_hierarchy(imt_family.location_id) as "locationHierarchy"
from imt_member
inner join imt_member m2 on imt_member.mother_id = m2.id
inner join imt_family on imt_member.family_id = imt_family.family_id
inner join child_cmtc_nrc_screening_detail csd on imt_member.id = csd.child_id 
where m2.mobile_number = #mobileNumber#
and csd.state = ''DISCHARGE'' and csd.is_case_completed is null
limit #limit# offset #offSet#',true,'ACTIVE',NULL,true,'d4bd4de9-1241-4c5b-826b-7b2e1353ac13'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','cmtc_nrc_unique_health_id_search','offSet,limit,uniqueHealthId','select
imt_member.id,
imt_member.first_name as "firstName",
imt_member.middle_name as "middleName",
imt_member.last_name as "lastName",
imt_member.dob as dob,
string_agg(location_master.name,''>'' order by location_hierchy_closer_det.depth desc) as "locationHierarchy"
from imt_member
inner join imt_family on imt_member.family_id = imt_family.family_id
inner join location_hierchy_closer_det on location_hierchy_closer_det.child_id = imt_family.location_id
inner join location_master on location_master.id = location_hierchy_closer_det.parent_id
where imt_member.unique_health_id = #uniqueHealthId#
and imt_member.dob >= (current_date - interval ''60 months'') and imt_member.dob <=(current_date)
group by
imt_member.id,
imt_member.first_name,
imt_member.middle_name,
imt_member.last_name,dob
limit #limit# offset #offSet#',true,'ACTIVE',NULL,true,'87ab3cdb-3664-4daa-833f-8dc6b4480b55'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','location_ward_update','wardName,lgdCode,locationId,wardNameEnglish,loggedInUserId,id','UPDATE location_wards
    SET
    "ward_name"=#wardName#, ward_name_english=#wardNameEnglish#, lgd_code=#lgdCode#, location_id=#locationId#, modified_by=#loggedInUserId#, modified_on=now()
    WHERE id=#id#;',false,'ACTIVE','Update Location Ward',true,'f821d4ed-686f-446a-b34a-b123d2e85a5d'),
	 (1,'2019-02-12 00:00:00',NULL,NULL,'retrieve_last_cp_questions_list','id','
select * from rch_child_cerebral_palsy_master where member_id = #id# order by id desc limit 1
',true,'ACTIVE',NULL,true,'37aa8ce0-34ba-4278-872d-905af647e8e5'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','cmtc_nrc_mobile_number_search','offSet,mobileNumber,limit','with ids as(
	select imt_member.id,string_agg(location_master.name,''>'' order by location_hierchy_closer_det.depth desc) as "locationHierarchy"
	from imt_member
	inner join imt_family on imt_member.family_id = imt_family.family_id
	inner join location_hierchy_closer_det on location_hierchy_closer_det.child_id = imt_family.location_id
	inner join location_master on location_master.id = location_hierchy_closer_det.parent_id
	inner join imt_member m2 on imt_member.mother_id = m2.id
	where m2.mobile_number = #mobileNumber#
	and imt_member.dob >= (current_date - interval ''60 months'') and imt_member.dob <=(current_date)
	group by
	imt_member.id
	limit #limit# offset #offSet#
)select imt_member.id,
imt_member.first_name as "firstName",
imt_member.middle_name as "middleName",
imt_member.last_name as "lastName",
imt_member.dob as dob,
ids."locationHierarchy"
from ids inner join imt_member on imt_member.id = ids.id',true,'ACTIVE',NULL,true,'442b1295-a65c-4954-a36f-200bf6a8215c'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','cmtc_nrc_name_search','firstName,lastName,offSet,locationId,limit','with members as (
	select
	imt_member.id,
	imt_member.first_name,
	imt_member.middle_name,
	imt_member.last_name,
	imt_member.dob as dob,
	imt_family.location_id
	from imt_member
	inner join imt_family on imt_member.family_id = imt_family.family_id
	inner join location_hierchy_closer_det on location_hierchy_closer_det.child_id = imt_family.location_id
	and location_hierchy_closer_det.parent_id = #locationId#
	where imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')
	and imt_member.dob between (current_date - interval ''60 months'') and (current_date)
	and imt_member.first_name ilike concat(''%'',#firstName#,''%'') and imt_member.last_name ilike concat(''%'',#lastName#,''%'')
	limit #limit# offset #offSet#
)
select members.id,members.first_name as "firstName",members.middle_name as "middleName",members.last_name as "lastName",
string_agg(l.name,''>'' order by lhcd.depth desc) as "locationHierarchy"
from members inner join location_master dl on  members.location_id = dl.id
inner join location_hierchy_closer_det lhcd on lhcd.child_id = dl.id
inner join location_master l on l.id = lhcd.parent_id
group by dl.id, members.id, members.first_name,members.middle_name,members.last_name,members.dob,members.location_id',true,'ACTIVE',NULL,true,'4c92a0eb-d13d-42a3-96e1-0d400e0f0519'),
	 (1,'2019-02-12 00:00:00',NULL,NULL,'retrieve_previous_cp_data','id,childServiceId','
select status,remarks,remarks_date from rch_child_cp_suspects where member_id = #id# and child_service_id != #childServiceId#
',true,'ACTIVE',NULL,true,'92a03123-4ed3-4bad-9bc2-6084b2c8614a'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','help_desk_nutrition_cmam_follow_up_details_retrieve','healthid','select child_nutrition_cmam_followup.id as "id",
cmam_master_id as "cmamMasterId",
service_date as "serviceDate",
weight as "weight",
height as "height",
muac as "muac",
given_sachets as "givenSachets",
consumed_sachets as "consumedSachets",
concat(um_user.first_name,'' '',um_user.last_name) as "createdBy",
child_nutrition_cmam_followup.created_on as "createdOn"
from child_nutrition_cmam_followup
inner join um_user on child_nutrition_cmam_followup.created_by = um_user.id
where member_id in (select id from imt_member where unique_health_id = #healthid#)',true,'ACTIVE',NULL,true,'44ffea95-6179-4c5e-9f7c-663ddfdf475b'),
	 (66522,'2020-02-12 18:43:17.283',66522,'2020-10-09 11:02:26.681','state_of_health_immu_non_fi_due_lt_10m','limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
rcad.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
to_char(m.dob ,''DD-MM-YYYY'') as "dob",
INITCAP(REPLACE (cast(age(current_date,m.dob) as text), ''mon'', ''month''))
 as "age",
case when current_date - m.dob >= 310 and current_date - m.dob < 365 then ''10 to 11 Months''
 when current_date - m.dob >= 365 then ''Greater than 1 year'' end as "AgeGroup",
m.immunisation_given as "immunisationGiven_OLD",
rcad.overdue_immunisation as "overdueImmunisation",
m.mobile_number as "contactNumber",
to_char(rcad.last_child_service_date,''dd-MM-yyyy'') as "LastServiceData",
rcad.loc_id
from rch_child_analytics_details rcad,imt_member m
where rcad.loc_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and rcad.dob between (current_date - interval ''11 months'') and current_date
and death_date is null and member_id is not null
and m.id = rcad.member_id 
and overdue_immunisation is not null
limit #limit#),
analytics_run_date as (
	select TO_DATE(key_value,''MM-DD-YYYY'') as last_run_date from system_configuration where  system_key  =''rch_child_analytics_last_schedule_date''
),
immunisationsTemp as (
  select * from rch_immunisation_master,analytics_run_date
   where member_id in (select member_id from analytics )
  and created_on < analytics_run_date.last_run_date
  order by given_on
),
immunisations as (
  select member_id, string_agg( CONCAT(immunisation_given,''#'',to_char(given_on,''DD/MM/YYYY'')),'','') as immunisation_given from immunisationsTemp
  group by member_id
),
family_head as (
select a.member_id as member_id,
concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
im.mobile_number as FamilyHeadMobileNo
from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id
where family_head = true
),
contact_person as (
select a.member_id, 
concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
im.mobile_number as contactPersonMobileNo  
from imt_member im 
inner join analytics a on a.family_id = im.family_id 
inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id

),

asha as (
select t.member_id
,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
u.contact_number as ashaMobileNo
from (
select member_id,max(uld.user_id) as user_id
from um_user_location uld 
inner join analytics a on  uld.loc_id = a.loc_id
inner join um_user uu on uu.id = uld.user_id 
where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
group by member_id) as t,um_user u
where t.user_id = u.id

),
anmLocation as (
select parent_id as location_id,a.member_id from location_hierchy_closer_det 
lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
inner join anmLocation a on  uld.loc_id = a.location_id
inner join um_user uu on uu.id = uld.user_id 
where uu.role_id in (select id from um_role_master where code =''FHW'' )
and uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
group by a.location_id,a.member_id
),
anmName as (
select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
uu.contact_number as ANMMobileNo

FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
select max(service_date) as service_date,services.member_id from rch_member_services services
inner join analytics a on a.member_id = services.member_id
group by services.member_id 
),
lastServiceUnique as(
select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
where service.member_id = last.member_id
group by service.member_id, last.service_date
),
lastServiceDetails as (
select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
service.location_id,
location.name as locationName,
case when service.service_type =''FHW_LMP'' then ''LMP Visit''
when  service.service_type =''FHW_ANC'' then ''ANC Visit''
 when service.service_type = ''FHW_PNC'' then ''PNC Visit''
 when service.service_type = ''FHW_CS'' then ''Child Service''
 when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
end as service_type,
service.member_id 
from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id

inner join location_master location on service.location_id = location.id

)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",

service.locationName as "LastServiceLocationName",
immu.immunisation_given as "immunisationGiven"
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id
left join immunisations immu on immu.member_id = a.member_id',true,'ACTIVE',NULL,true,'8b0f8dac-d1e3-48a6-8312-97af67f4e797'),
	 (60512,'2020-12-15 00:00:00',60512,'2020-12-15 00:00:00','retrieve_anc_information','healthid','with dangsign as ( select rel.anc_id,string_agg(det.value ,'', '') as dangeroussign from rch_anc_dangerous_sign_rel rel
inner join listvalue_field_value_detail det on rel.dangerous_sign_id = det.id group by rel.anc_id )
select anc.id,anc.member_id,anc.family_id as ancfamilyid,anc.latitude,anc.longitude,anc.mobile_start_date,anc.mobile_end_date,anc.location_id,
anc.lmp,anc.weight,anc.jsy_beneficiary,anc.kpsy_beneficiary,anc.iay_beneficiary,anc.chiranjeevi_yojna_beneficiary,anc.anc_place,anc.systolic_bp,
anc.diastolic_bp,anc.member_height,anc.foetal_height,anc.foetal_heart_sound,anc.ifa_tablets_given,anc.fa_tablets_given,anc.calcium_tablets_given,
anc.hbsag_test,anc.blood_sugar_test,anc.urine_test_done,anc.albendazole_given,anc.referral_place,anc.dead_flag,anc.other_dangerous_sign,anc.created_by,
anc.created_on,anc.modified_by,anc.modified_on,anc.member_status,anc.edd,anc.notification_id,anc.death_date,anc.vdrl_test,
anc.hiv_test,anc.place_of_death,anc.haemoglobin_count,anc.death_reason,anc.jsy_payment_done,anc.last_delivery_outcome,anc.expected_delivery_place,
anc.family_planning_method,anc.foetal_position,anc.dangerous_sign_id,anc.other_previous_pregnancy_complication,anc.foetal_movement,anc.referral_done,
anc.urine_albumin,anc.urine_sugar,anc.is_high_risk_case,anc.blood_group,anc.sugar_test_after_food_val,anc.sugar_test_before_food_val,anc.pregnancy_reg_det_id,
anc.service_date,anc.sickle_cell_test,anc.iron_def_anemia_inj,anc.iron_def_anemia_inj_due_date,anc.blood_transfusion,
usr.first_name || '' '' || usr.middle_name || '' '' || usr.last_name as usrfullname,usr.user_name as username,fam.family_id as familyid,
dan.dangeroussign, ancplace.value as ancplacename, referralplace.value as referralplacename, loc.name as locationname
from rch_anc_master anc
left join imt_family fam on anc.family_id = fam.id
left join um_user usr on anc.created_by = usr.id
left join location_master loc on anc.location_id = loc.id
left join dangsign dan on anc.id = dan.anc_id
left join listvalue_field_value_detail ancplace on anc.anc_place = ancplace.id
left join listvalue_field_value_detail referralplace on anc.referral_place = referralplace.id
where anc.member_id = (select id from imt_member where unique_health_id = #healthid# limit 1) order by anc.created_on desc limit 5',true,'ACTIVE','Retrieve RCH ANC Master Information',true,'3073dcba-c8f8-4f94-9f25-aaa0c1588b17'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','covid19_admission_discharge','admissionStatus,tohealthInfraId,dischargeRemark,referralState,dischargeDate,admissionId,loggedInUserId,deathCause','with health_infra_det as (
select * from health_infrastructure_details where id = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = #loggedInUserId# and uhi.state = ''ACTIVE'')
),
refer_to_helth_infra as(
insert into covid19_admission_refer_detail (admission_id, refer_from_health_infra_id,refer_to_health_infra_id,state,status, created_by,created_on)
select #admissionId#, (select id from health_infra_det), #tohealthInfraId#, #referralState#,#admissionStatus#, #loggedInUserId#, now() 
)
update covid19_admission_detail set status = #admissionStatus#,
discharge_date = #dischargeDate#,
discharge_status = #admissionStatus#,
discharge_entry_by =#loggedInUserId#,
discharge_entry_on =now(),
discharge_remark=#dischargeRemark#,
death_cause = #deathCause#
where id = #admissionId#;',false,'ACTIVE',NULL,true,'b50326fd-d508-439e-b172-f4049630d843'),
	 (60512,'2019-09-11 20:46:05.48',60512,'2019-09-11 20:46:05.48','maternal_death_verification_mo_verbal_autospy_updation','verbalAutopsy,taskId','with member_id as (
	select member_id from techo_web_notification_master where id = #taskId#
)update rch_member_death_deatil
set verbal_autopsy = #verbalAutopsy#
where member_id = (select member_id from member_id)',false,'ACTIVE',NULL,true,'3942788c-0b91-4689-8edc-bebe0f04267b'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','retrieve_rch_child_service_master_info','healthid','select csm.id as "csmId",csm.member_id as "memberId",csm.family_id as "csmFamilyId",csm.latitude,csm.longitude,csm.mobile_start_date as "mobileStartDate",
csm.mobile_end_date as "mobileEndDate",csm.location_id as "locationId",
csm.notification_id as "notification_id",csm.is_alive as "isAlive",
csm.weight as "weight",csm.ifa_syrup_given as "ifaSyrupGiven",csm.complementary_feeding_started as "complementaryFeedingStarted",
csm.is_treatement_done as "isTreatementDone",csm.created_by as "createdBy",csm.created_on as "createdOn",csm.modified_by as "modifiedBy",
csm.modified_on as "modifiedOn",csm.death_date as "deathDate",csm.place_of_death as "placeOfDeath",csm.member_status as "memberStatus",
csm.death_reason as "deathReason",csm.other_death_reason as "otherDeathReason",csm.complementary_feeding_start_period as "complementaryFeedingStartPeriod",
csm.other_diseases as "otherDiseases",csm.mid_arm_circumference as "midArmCircumference",csm.height as "height",
csm.have_pedal_edema as "havePedalEdema",csm.exclusively_breastfeded as "exclusivelyBreastfeded",csm.any_vaccination_pending as "anyVaccinationPending",
csm.service_date as "serviceDate",
csm.sd_score as "sdScore",
usr.first_name || '' '' || usr.middle_name || '' '' || usr.last_name as usrfullname,usr.user_name as username, fam.family_id as "familyId",
loc.name as locationname
from rch_child_service_master csm 
left join location_master loc on csm.location_id = loc.id
left join imt_family fam on csm.family_id = fam.id
left join um_user usr on csm.created_by = usr.id
where csm.member_id = (select id from imt_member where unique_health_id = #healthid# limit 1) order by csm.created_on desc limit 5',true,'ACTIVE','Retrieve RCH Child Service Master Information',true,'c44f124a-b856-4576-8720-de03478a41da'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','location_ward_create','wardName,lgdCode,locationId,wardNameEnglish,loggedInUserId','INSERT INTO location_wards(
    ward_name, ward_name_english, lgd_code, location_id, created_by, created_on, modified_by, modified_on)
    VALUES (
        #wardName#, #wardNameEnglish#, #lgdCode#, #locationId#, #loggedInUserId#, now(), #loggedInUserId#, now()
    ) returning id;',true,'ACTIVE','Create Location Ward',true,'8dd72b0b-7ff6-4f72-bd26-2189daada164'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','covid19_refer_in_admit','inContactWithCovid19Paitent,admissionDate,unitNo,travelHistory,loggedInUserId,wardId,travelledPlace,caseNo,abroad_contact_details,flightno,opdCaseNo,bedNo,is_abroad_in_contact,admissionId,id','update covid19_admission_refer_detail card set
old_ward_id = cad.current_ward_id,
old_admission_date = cad.admission_date,
old_case_no = cad.case_no,
old_opd_case_no = cad.opd_case_no,
old_unit_no = cad.unit_no,
old_bed_no = cad.current_bed_no,
state=''COMPLETED'',
modified_by=#loggedInUserId#,
modified_on=now()
from covid19_admission_detail cad
where card.admission_id= cad.id and card.id = #id#;

update covid19_admission_detail set 
current_ward_id = #wardId#,
current_bed_no=#bedNo#,
unit_no = #unitNo#,
case_no = #caseNo#,
opd_case_no = #opdCaseNo#,
health_infra_id = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = #loggedInUserId# and uhi.state = ''ACTIVE''),
status = ''CONFORMED'',
admission_date=#admissionDate#,
travel_history = #travelHistory#,
travelled_place = #travelledPlace#,
is_abroad_in_contact = #is_abroad_in_contact#,
abroad_contact_details = #abroad_contact_details#,
in_contact_with_covid19_paitent = #inContactWithCovid19Paitent#,
flight_no = #flightno#
where id = #admissionId#;',false,'ACTIVE',NULL,true,'2f063e77-c1c0-4fa3-86cd-ca0e69791b47'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','retrieve_rch_pnc_mother_master_info','healthid','with pncmother as(
select * from rch_pnc_mother_master
where
	mother_id = (
		select id
	from
		imt_member
	where
		unique_health_id = #healthid#
	limit 1)
order by
	created_on desc
limit 5
), dangersign as (
	select danger.mother_pnc_id,
	string_agg(list.value, '', '') as dangersigndata
from
pncmother 
inner join 
	rch_pnc_mother_danger_signs_rel danger on 
	danger.mother_pnc_id = pncmother.id
inner join listvalue_field_value_detail list on
	danger.mother_danger_signs = list.id
group by
	danger.mother_pnc_id) ,
deathsign as (
	select death.mother_pnc_id,
	string_agg(list.value, '', '') as deathsigndata
from
pncmother 
inner join 
	rch_pnc_mother_death_reason_rel death on death.mother_pnc_id = pncmother.id
left join listvalue_field_value_detail list on
	death.mother_death_reason = list.id
group by
	death.mother_pnc_id) 
select
	pncmother.id as "pcnmotherid",
	pncmother.pnc_master_id as "pncMasterId",
	pncmother.mother_id as "motherId",
	pncmother.date_of_delivery as "dateOfDelivery",
	pncmaster.service_date as "serviceDate",
	pncmother.is_alive as "isAlive",
	pncmother.ifa_tablets_given as "ifaTabletsGiven",
	pncmother.other_danger_sign as "otherDangerSign",
	pncmother.referral_place as "referralPlace",
	pncmother.created_by as "createdBy",
	pncmother.created_on as "createdOn",
	pncmother.modified_by as "modifiedBy",
	pncmother.modified_on as "modifiedOn",
	pncmother.member_status as "memberStatus",
	pncmother.death_date as "deathDate",
	deathreason.value as "deathReason",
	pncmother.place_of_death as "placeOfDeath",
	pncmother.fp_insert_operate_date as "fpInsertOperateDate",
	pncmother.family_planning_method as "familyPlanningMethod",
	pncmother.other_death_reason as "otherDeathReason",
	pncmother.is_high_risk_case as "isHighRiskCase",
	pncmother.mother_referral_done as "motherReferralDone",
	pncmaster.family_id,
	pncmaster.latitude,
	pncmaster.longitude,
	pncmaster.mobile_start_date as "mobileStartDate",
	pncmaster.mobile_end_date as "mobileEndDate",
	pncmaster.location_id as "locationId",
	pncmaster.notification_id as "notificationId",
	pncmaster.pregnancy_reg_det_id as "pregnancyRegDetId",
	pncmaster.pnc_no as "pncNo",
	pncmaster.is_from_web as "isFromWeb",
	usr.first_name || '' '' || usr.middle_name || '' '' || usr.last_name as usrfullname,
	usr.user_name as username,
	referralplace.value as referralplacename,
	fam.family_id as familyid,
	loc.name as locationname,
	danger.dangersigndata,
	death.deathsigndata
from
	pncmother
inner join rch_pnc_master pncmaster on
	pncmother.pnc_master_id = pncmaster.id
inner join imt_family fam on
	pncmaster.family_id = fam.id
left join location_master loc on
	pncmaster.location_id = loc.id
left join um_user usr on
	pncmother.created_by = usr.id
left join deathsign death on
	pncmother.id = death.mother_pnc_id
left join dangersign danger on
	pncmother.id = danger.mother_pnc_id
left join listvalue_field_value_detail referralplace on
	pncmother.referral_place = referralplace.id
left join listvalue_field_value_detail deathreason on
	pncmother.death_reason\:\:bigint = deathreason.id
order by
	pncmother.created_on desc;',true,'ACTIVE','Retrieve RCH PNC Mother Master Information',true,'3efdda8a-c4ed-4b02-a545-f9e617348bb4'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','retrieve_rch_pregnancy_registration_det','healthid','select 
preg.id as "pregId",preg.mthr_reg_no as "motherRegNo",preg.member_id,preg.lmp_date as "lmpDate",preg.edd as "expectedDeliveryDate",
preg.reg_date as "registrationDate",preg.state,preg.created_on as "createdOn",preg.created_by as "createdBy",preg.modified_on as "modifiedOn",
preg.modified_by as "modifiedBy",preg.location_id as "locationId",preg.family_id as "pregFamilyId",preg.current_location_id as "currLocationId",
usr.first_name || '' '' || usr.middle_name || '' '' || usr.last_name as usrfullname,usr.user_name as username,fam.family_id as "familyId",
loc.name as locationname, curloc.name as currentlocationname
from rch_pregnancy_registration_det preg 
left join um_user usr on preg.created_by = usr.id
left join imt_family fam on preg.family_id = fam.id
left join location_master loc on preg.location_id = loc.id
left join location_master curloc on preg.current_location_id = curloc.id
where preg.member_id = (select id from imt_member where unique_health_id = #healthid# limit 1) order by preg.created_on desc limit 5',true,'ACTIVE','Retrieve Pregnancy Registration Details',true,'058013df-5435-4244-83e5-708a7569c0b8'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','retrieve_rch_immunisation_master_by_health_id','healthid','select rim.* from rch_immunisation_master rim inner join imt_member im on im.id=rim.member_id 
where im.unique_health_id=#healthid# and
case when im.dob < current_date - interval ''5 years'' then rim.member_type = ''M''
else rim.member_type = ''C'' end;',true,'ACTIVE',NULL,true,'c08b1314-a55c-49af-a0ff-695b39096579'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','help_desk_nutrition_screening_details_retrieve','healthid','select child_nutrition_sam_screening_master.id as "id",
service_date as "serviceDate",
height as "height",
weight as "weight",
muac as "muac",
have_pedal_edema as "oedema",
medical_complications_present as "medicalComplications",
breast_feeding_done as "breastFeedingDone",
breast_sucking_problems as "breastSuckingProblems",
sd_score as "sdScore",
appetite_test as "apetiteTest",
referral_done as "referralDone",
health_infrastructure_details.name_in_english as "referralHealthInfra",
concat(um_user.first_name,'' '',um_user.middle_name,'' '',um_user.last_name) as "createdBy",
child_nutrition_sam_screening_master.created_on as "createdOn"
from child_nutrition_sam_screening_master
inner join um_user on child_nutrition_sam_screening_master.created_by = um_user.id
left join health_infrastructure_details on child_nutrition_sam_screening_master.referral_place = health_infrastructure_details.id
where member_id in (select id from imt_member where unique_health_id = #healthid#)',true,'ACTIVE',NULL,true,'183f9e41-b7a3-4855-96f3-fe811693b05b'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','help_desk_nutrition_fsam_screening_details_retrieve','healthid','select child_cmtc_nrc_screening_detail.id as "caseId",
admission_id as "admissionId",
discharge_id as "dischargeId",
identified_from as "identifiedFrom",
case when is_case_completed then ''Yes'' else ''No'' end as "caseCompleted",
child_cmtc_nrc_screening_detail.created_on as "createdOn",
concat(um_user.first_name,'' '',um_user.last_name) as "createdBy"
from child_cmtc_nrc_screening_detail
inner join um_user on child_cmtc_nrc_screening_detail.created_by = um_user.id
where child_id = (select id from imt_member where unique_health_id = #healthid#)',true,'ACTIVE',NULL,true,'fc329dda-5edd-4f30-b988-9e4d8abd08ad'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','help_desk_nutrition_fsam_admission_details_retrieve','healthid','select child_cmtc_nrc_admission_detail.id as "admissionId",
admission_date as "admissionDate",
case_id as "caseId",
weight_at_admission as "weightAtAdmission",
height as "height",
mid_upper_arm_circumference as "muac",
bilateral_pitting_oedema as "oedema",
sd_score as "sdScore",
apetite_test as "apetiteTest",
breast_feeding as "breastFeeding",
problem_in_breast_feeding as "problemInBreastFeeding",
problem_in_milk_injection as "problemInMilkInjection",
visible_wasting as "visibleWasting",
kmc_provided as "kmcProvided",
no_of_times_kmc_done as "noOfTimesKmcDone",
no_of_times_amoxicillin_given as "noOfTimesAmoxicillinGiven",
medical_officer_visit_flag as "medicalOfficerVisit",
specialist_pediatrician_visit_flag as "specialistPediatricianVisit",
defaulter_date as "defaulterDate",
health_infrastructure_details.name_in_english as "screeningCenter",
child_cmtc_nrc_admission_detail.created_on as "createdOn",
concat(um_user.first_name,'' '',um_user.last_name) as "createdBy"
from child_cmtc_nrc_admission_detail
inner join um_user on child_cmtc_nrc_admission_detail.created_by = um_user.id
inner join health_infrastructure_details on child_cmtc_nrc_admission_detail.screening_center = health_infrastructure_details.id
where child_id = (select id from imt_member where unique_health_id = #healthid#)',true,'ACTIVE',NULL,true,'5fb4edc7-4af8-4d51-84d5-955e28231bee'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','help_desk_nutrition_fsam_weight_details_retrieve','healthid','select admission_id as "admissionId",
weight_date as "weightDate",
weight as "weight",
height as "height",
bilateral_pitting_oedema as "oedema",
formula_given as "formulaGiven",
is_mother_councelling as "motherCouncelling",
is_amoxicillin as "amoxicillin",
is_vitamina as "vitaminA",
is_albendazole as "albendazole",
is_folic_acid as "folicAcid",
is_potassium as "potassium",
is_magnesium as "magnesium",
is_zinc as "zinc",
is_iron as "iron",
other_higher_nutrients_given as "otherHigherNutrients",
multi_vitamin_syrup as "multiVitaminSyrup",
is_sugar_solution as "sugarSolution",
night_stay as "nightStay",
kmc_provided as "kmcProvided",
no_of_times_kmc_done as "noOfTimesKmcDone",
child_cmtc_nrc_weight_detail.created_on as "createdOn",
concat(um_user.first_name,'' '',um_user.last_name) as "createdBy"
from child_cmtc_nrc_weight_detail
inner join um_user on child_cmtc_nrc_weight_detail.created_by = um_user.id
where child_id = (select id from imt_member where unique_health_id = #healthid#)',true,'ACTIVE',NULL,true,'8dab6b96-c099-4ae7-92ea-d7391d17d0aa'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','help_desk_nutrition_fsam_discharge_details_retrieve','healthid','select child_cmtc_nrc_discharge_detail.id as "dischargeId",
child_cmtc_nrc_discharge_detail.discharge_date as "dischargeDate",
admission_id as "admissionId",
case_id as "caseId",
weight as "weight",
height as "height",
mid_upper_arm_circumference as "muac",
bilateral_pitting_oedema as "oedema",
sd_score as "sdScore",
kmc_provided as "kmcProvided",
no_of_times_kmc_done as "noOfTimesKmcDone",
discharge_status as "dischargeStatus",
child_cmtc_nrc_discharge_detail.created_on as "createdOn",
concat(um_user.first_name,'' '',um_user.last_name) as "createdBy"
from child_cmtc_nrc_discharge_detail
inner join um_user on child_cmtc_nrc_discharge_detail.created_by = um_user.id
where child_id = (select id from imt_member where unique_health_id = #healthid#)',true,'ACTIVE',NULL,true,'7d024d0c-8893-4497-98b4-b629db9f0fb8'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','help_desk_nutrition_fsam_follow_up_details_retrieve','healthid','select child_cmtc_nrc_follow_up.id as "id",
admission_id as "admissionId",
case_id as "caseId",
follow_up_visit as "visitNo",
follow_up_date as "visitDate",
weight as "weight",
height as "height",
mid_upper_arm_circumference as "muac",
bilateral_pitting_oedema as "oedema",
sd_score as "sdScore",
concat(um_user.first_name,'' '',um_user.last_name) as "createdBy",
child_cmtc_nrc_follow_up.created_on as "createdOn"
from child_cmtc_nrc_follow_up
inner join um_user on child_cmtc_nrc_follow_up.created_by = um_user.id
where child_id in (select id from imt_member where unique_health_id = #healthid#)',true,'ACTIVE',NULL,true,'ed8cc4bd-31aa-48b8-afc9-8da458020869'),
	 (1,'2019-12-03 15:34:39.775516',NULL,NULL,'mytecho_mark_card_as_starred','loggedInUserId,configId,languageCode','insert into mytecho_user_starred_card_master(user_id,mt_timeline_config_id,language,created_on,created_by) 
values(#loggedInUserId#,#configId#,''#languageCode#'',now(),#loggedInUserId#)',false,'ACTIVE','mytecho_retrieve_user_starred_cards',true,'9891aaeb-5769-47d7-ac10-1d16b9605da6'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','helpdesk_name_search','firstName,lastName,locationId','with family_ids as (
	select family_id from imt_family
	where location_id in (select child_id from location_hierchy_closer_det where parent_id = #locationId#)
),member_ids as(
	select id from imt_member
	where family_id in (select * from family_ids)
	and imt_member.first_name ilike concat(''%'',#firstName#,''%'') and imt_member.last_name ilike concat(''%'',#lastName#,''%'')
)
select m.id as memberid,
m.unique_health_id as uniquehealthid,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as membername,
m.family_head as familyhead,
m.is_pregnant as ispregnant,
m.gender as gender,
m.mobile_number as mobilenumber,
m.basic_state as memberbasicstate
from imt_member m where id in (select * from member_ids)',true,'ACTIVE',NULL,true,'ae708090-2b0a-41b0-ae75-f801d4188092'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','retrieve_user_login_details','username','select loginfo.imei_number as imeinumber, loginfo.apk_version as apkversion, loginfo.logging_from_web as loggingfromweb, loginfo.no_of_attempts as noofattempts,
to_char(loginfo.created_on, ''dd/mm/yyyy hh12:mi:ss'') as logindet  from um_user_login_det loginfo
left join um_user um on um.id = loginfo.user_id 
where um.user_name = #username# 
group by loginfo.created_on,loginfo.imei_number,loginfo.apk_version,loginfo.logging_from_web,loginfo.no_of_attempts  
order by loginfo.created_on 
desc limit 5',true,'ACTIVE','Retrieve User Information using userName',true,'1763225a-07b2-48ac-9179-dcd1e0df8f0f'),
	 (75398,'2020-07-09 00:00:00',75398,'2020-07-09 00:00:00','covid19_insert_location_cluster_mapping_detail','locations,clusterId,userId','insert into location_cluster_mapping_detail
(cluster_id,location_id,state,created_by,created_on,modified_by,modified_on)
select #clusterId#,x,''ACTIVE'',#userId#,now(),#userId#,now()
from unnest(cast (#locations# as int[])) x;',false,'ACTIVE',NULL,true,'d2a40d1b-8fba-42f9-a3db-4cad23f4680e'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','remove_last_method_of_contraception','reason_for_change,unique_health_id,loggedInUserId','with insert_change_log_detail as (
insert into support_change_request_log(member_id,change_type,other_detail,reason_for_change,created_on)
select id as member_id,''REMOVE_LAST_METHOD_OF_CONTRACEPTION'',null,(case when ''null'' = #reason_for_change# then null else  #reason_for_change# end ),now() from imt_member
where unique_health_id = #unique_health_id# and last_method_of_contraception is not null
returning id
),update_imt_member as (
update imt_member set last_method_of_contraception = null,modified_on = now(),modified_by=#loggedInUserId# where  unique_health_id = #unique_health_id# and last_method_of_contraception is not null
returning id)
select cast(''Changes done'' as text) result from update_imt_member;',true,'ACTIVE','',true,'48a0b7c8-57e5-43fa-b766-977671a9f09a'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','helpdesk_update_pregregdetails_reg_date','regDate,loggedInUserId,rchPregnancyRegistrationDetId,memberId','insert into member_audit_log (member_id,table_name,data,user_id,column_name,ref_code)
select lm.member_id,''rch_pregnancy_registration_det'',row_to_json(lm) as data, #loggedInUserId# as user_id,''reg_date'',lm.id  from (select id,member_id,reg_date from rch_pregnancy_registration_det where id=#rchPregnancyRegistrationDetId#) lm;

update rch_pregnancy_registration_det set reg_date =#regDate#,modified_by = #loggedInUserId#,modified_on=now() where id=#rchPregnancyRegistrationDetId# and member_id=#memberId#;

update imt_member set cur_preg_reg_date=#regDate#,modified_by = #loggedInUserId#,modified_on = now() where cur_preg_reg_det_id   = #rchPregnancyRegistrationDetId# and id=#memberId#;',false,'ACTIVE',NULL,true,'73f547e2-8f1a-4f19-884e-e73b0383f806'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','helpdesk_update_pregregdetails_lmp_date','lmpDate,loggedInUserId,rchPregnancyRegistrationDetId,memberId','insert into member_audit_log (member_id,table_name,data,user_id,column_name,ref_code)
select #memberId#,''imt_member'',row_to_json(lm) as data, #loggedInUserId# as user_id,''lmp'',lm.id  from (select id,lmp from imt_member where id=#memberId#) lm;

insert into member_audit_log (member_id,table_name,data,user_id,column_name,ref_code)
select #memberId#,''rch_pregnancy_registration_det'',row_to_json(lm) as data, #loggedInUserId# as user_id,''lmp_date'',lm.id  from (select id,lmp_date from rch_pregnancy_registration_det where id=#rchPregnancyRegistrationDetId#) lm;

update rch_pregnancy_registration_det set lmp_date =#lmpDate#, edd = to_date(#lmpDate#, ''YYYY/MM/DD'') + interval ''281 days'',modified_by=#loggedInUserId#,modified_on=now() where id=#rchPregnancyRegistrationDetId# and member_id=#memberId#;

update imt_member set lmp = #lmpDate#, edd = to_date(#lmpDate#, ''YYYY/MM/DD'') + interval ''281 days'',modified_by=#loggedInUserId#,modified_on=now() WHERE id=#memberId# and cur_preg_reg_det_id=#rchPregnancyRegistrationDetId#;

update event_mobile_notification_pending set base_date =  #lmpDate# where member_id=#memberId# and state=''PENDING'' and ref_code =#rchPregnancyRegistrationDetId# and notification_configuration_type_id in (''5d1131bc-f5bc-4a4a-8d7d-6dfd3f512f0a'',''faedb8e7-3e46-40a2-a9ac-ea7d5de944fa'');

delete from techo_notification_master where notification_type_id in (5,2) and member_id=#memberId# and state=''PENDING'' and ref_code =#rchPregnancyRegistrationDetId#;',false,'ACTIVE',NULL,true,'3829a14f-022e-4488-9f8a-c6d1ef6f55ff'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','helpdesk_immu_update_given_on','givenOn,rchImmuId,loggedInUserId,memberId','insert into member_audit_log (member_id,table_name,data,user_id,column_name,ref_code)
select lm.member_id,''rch_immunisation_master'',row_to_json(lm) as data, #loggedInUserId# as user_id,''given_on'',lm.id  from (select id,member_id,given_on from rch_immunisation_master where id=#rchImmuId#) lm;

update rch_immunisation_master set given_on = #givenOn#,modified_by=#loggedInUserId#,modified_on=now() where id=#rchImmuId# and member_id= #memberId#;

update imt_member set immunisation_given = get_vaccination_string(id),modified_by=#loggedInUserId#,modified_on=now() where id = #memberId#;',false,'ACTIVE',NULL,true,'8b34ae99-0cdf-4195-903d-ef856dbf2460'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','helpdesk_update_anc_service_date','ancMasterId,serviceDate,loggedInUserId,rchPregnancyRegistrationDetId,memberId','insert into member_audit_log (member_id,table_name,data,user_id,column_name,ref_code
)
select lm.member_id,''rch_anc_master'',row_to_json(lm) as data, #loggedInUserId# as user_id,''service_date'',lm.id  from (select id,member_id,service_date from rch_anc_master where id=#ancMasterId#) lm;

update rch_anc_master set service_date =#serviceDate#,modified_by=#loggedInUserId#,modified_on=now() where id=#ancMasterId# and member_id = #memberId#;

with service_dates as (
select string_agg(to_char(service_date,''dd/MM/yyyy''),'','' order by service_date) service_dates ,pregnancy_reg_det_id
from rch_anc_master where pregnancy_reg_det_id =#rchPregnancyRegistrationDetId# group by pregnancy_reg_det_id)
update imt_member im set anc_visit_dates  = sd.service_dates,modified_by=#loggedInUserId#,modified_on=now()
from service_dates sd where sd.pregnancy_reg_det_id = cur_preg_reg_det_id and im.id = #memberId#',false,'ACTIVE',NULL,true,'02db8c3b-751e-4c38-a3c5-cd9f6b01a0c8'),
	 (58981,'2019-09-02 14:24:01.123',58981,'2019-09-02 14:24:01.123','mob_asha_child_services_provided','memberId','select to_char(rch.service_date, ''DD/MM/YYYY'') as "Service Date",
cast(''Home'' as text)  as "CS Visit Place",
rch.id as "hiddenVisitId",
cast(''ASHA_CS'' as text) as "hiddenServiceType"
from rch_asha_child_service_master rch
inner join imt_member mem on rch.member_id = mem.id
where member_id = #memberId#
order by rch.service_date desc;',true,'ACTIVE',NULL,true,'1a28286b-07db-49ac-8c89-fe6cf916ecf1'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','helpdesk_update_wpd_date_of_delivery','dateOfDelivery,loggedInUserId,wpdMotherId,memberId','insert into member_audit_log (member_id,table_name,data,user_id,column_name,ref_code)
select lm.member_id,''rch_wpd_mother_master'',row_to_json(lm) as data, #loggedInUserId# as user_id,''date_of_delivery'',lm.id  from (select id,member_id,date_of_delivery from rch_wpd_mother_master where id=#wpdMotherId#) lm;

update rch_wpd_mother_master set date_of_delivery  =#dateOfDelivery#,modified_by=#loggedInUserId#,modified_on=now() where id=#wpdMotherId#;

update rch_wpd_child_master set date_of_delivery = #dateOfDelivery#,modified_by=#loggedInUserId#,modified_on=now() where wpd_mother_id = #wpdMotherId#;

with wpd_childs as (
select * from rch_wpd_child_master where wpd_mother_id = #wpdMotherId# )
update imt_member im set dob=#dateOfDelivery#,modified_by=#loggedInUserId#,modified_on=now()
from wpd_childs wc where wc.member_id=im.id;


DELETE FROM rch_immunisation_master where member_type=''C'' and member_id in (
	select member_id from rch_wpd_child_master where wpd_mother_id = #wpdMotherId#
);

update imt_member set immunisation_given = null,modified_by=#loggedInUserId#,modified_on=now() where id in (
select member_id from rch_wpd_child_master where wpd_mother_id = #wpdMotherId#
);


update event_mobile_notification_pending  set base_date= #dateOfDelivery# where member_id=#memberId# and state=''PENDING'' and notification_configuration_type_id = ''9b1a331b-fac5-48f0-908e-ef545e0b0c52'';

delete from techo_notification_master where notification_type_id in (3) and member_id=#memberId# and state in (''PENDING'',''RESCHEDULE'');

delete from techo_notification_master where notification_type_id =4 and member_id
in(select member_id from rch_wpd_child_master where wpd_mother_id = #wpdMotherId#)
and state in (''PENDING'',''RESCHEDULE'');

update event_mobile_notification_pending  set base_date= #dateOfDelivery# where
member_id in(select member_id from rch_wpd_child_master where wpd_mother_id = #wpdMotherId#)
and state=''PENDING''
and notification_configuration_type_id in (''f51c8c4f-6b2b-4dcb-8e64-ada1a3044a67'',''dfa2b7ee-0ae4-4d5e-bb8e-20252905ebc6'');',false,'ACTIVE',NULL,true,'05ad3cdf-2cc5-4e8d-b06a-d04082e4a575'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','helpdesk_update_pnc_service_date','serviceDate,pncMasterId,loggedInUserId,memberId','insert into member_audit_log (member_id,table_name,data,user_id,column_name,ref_code)
select lm.member_id,''rch_pnc_master'',row_to_json(lm) as data, #loggedInUserId# as user_id,''service_date'',lm.id  from (select id,member_id,service_date from rch_pnc_master where id=#pncMasterId#) lm;

insert into member_audit_log (member_id,table_name,data,user_id,column_name,ref_code)
select lm.mother_id,''rch_pnc_mother_master'',row_to_json(lm) as data, #loggedInUserId# as user_id,''service_date'',lm.id  from (select id,mother_id,service_date from rch_pnc_mother_master where pnc_master_id=#pncMasterId#) lm;

update rch_pnc_master set service_date   =#serviceDate#,modified_by=#loggedInUserId#,modified_on=now() where id=#pncMasterId#; -- and member_id = #memberId#;

update rch_pnc_mother_master set service_date =#serviceDate#,modified_by=#loggedInUserId#,modified_on=now() where pnc_master_id=#pncMasterId#; -- and mother_id = #memberId#;',false,'ACTIVE',NULL,true,'72fb2bc9-7238-46bd-bf2d-55af353b89c0'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','helpdesk_update_child_service_date','serviceDate,rchChildServiceMasterId,loggedInUserId,memberId','insert into member_audit_log (member_id,table_name,data,user_id,column_name,ref_code)
select lm.member_id,''rch_child_service_master'',row_to_json(lm) as data, #loggedInUserId# as user_id,''service_date'',lm.id  from (select id,member_id,service_date from rch_child_service_master where id=#rchChildServiceMasterId#) lm;

update rch_child_service_master set service_date = #serviceDate#,modified_by=#loggedInUserId#,modified_on=now() where id=#rchChildServiceMasterId# and member_id = #memberId#;',false,'ACTIVE',NULL,true,'e005605d-e905-41a7-9c1b-5155c04514c9'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','helpdesk_update_wpd_mother_delivery_place','healthInfrastructureId,typeOfHospital,id,userId,deliveryPlace','INSERT INTO member_audit_log (member_id , table_name,  created_on , user_id, data , column_name, ref_code)
Values ((select member_id from rch_wpd_mother_master where id=#id# ), ''rch_wpd_mother_master'' , now() , #userId# , json_build_object(''id'',#id# , ''health_infrastructure_id'' , (select health_infrastructure_id from rch_wpd_mother_master where id= #id#) , ''type_of_hospital'' , (select type_of_hospital from rch_wpd_mother_master where id= #id#) ,''delivery_place'', (select rch_wpd_mother_master.delivery_place from rch_wpd_mother_master where id= #id# )) , ''health_infrastructure_id'' , #id#);

INSERT INTO member_audit_log  (member_id , table_name,  created_on , user_id, data , column_name, ref_code)
select member_id,''imt_member'' , now() , #userId# , json_build_object(''id'',member_id , ''place_of_birth'' , (select place_of_birth from imt_member where id = member_id)),''place_of_birth'', member_id from rch_wpd_child_master where wpd_mother_id = #id#;

update rch_wpd_mother_master set delivery_place = #deliveryPlace# , health_infrastructure_id = #healthInfrastructureId# , type_of_hospital = #typeOfHospital# , modified_on = now() , modified_by = #userId# where id = #id#;

update imt_member set place_of_birth = #deliveryPlace#,modified_by = #userId# , modified_on = now() where id IN (select member_id from rch_wpd_child_master where wpd_mother_id = #id# );',false,'ACTIVE','Update Delivery Place',true,'a77b2a4b-e432-42bf-8f9b-135c94b5e0ce'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','helpdesk_update_member_gender','gender,loggedInUserId,memberId','insert into member_audit_log (member_id,table_name,data,user_id,column_name,ref_code)
select #memberId#,''imt_member'',row_to_json(lm) as data, #loggedInUserId# as user_id,''gender'',lm.id
  from (select id,gender from imt_member where id=#memberId#) lm;
update imt_member set gender =#gender#, modified_by = #loggedInUserId#, modified_on = now() where id=#memberId#;

delete from rch_pregnancy_registration_det where member_id = #memberId#;
delete from rch_anc_previous_pregnancy_complication_rel  where anc_id in (select id from rch_anc_master where member_id = #memberId#);
delete from rch_anc_dangerous_sign_rel  where anc_id in (select id from rch_anc_master where member_id = #memberId#);
delete from rch_anc_master where member_id = #memberId#;
delete from rch_pnc_mother_danger_signs_rel where mother_pnc_id in (select id from rch_pnc_mother_master where mother_id = #memberId#);
delete from rch_pnc_mother_master where mother_id  = #memberId#;
delete from rch_pnc_master where member_id = #memberId#;
delete from rch_lmp_follow_up where member_id = #memberId#;
delete from rch_wpd_mother_danger_signs_rel where wpd_id in (select id from rch_wpd_mother_master where member_id = #memberId#);
delete from rch_wpd_mother_high_risk_rel where wpd_id in (select id from rch_wpd_mother_master where member_id = #memberId#);
delete from rch_wpd_mother_treatment_rel where wpd_id in (select id from rch_wpd_mother_master where member_id = #memberId#);
delete from rch_wpd_mother_master where member_id = #memberId#;
delete from rch_immunisation_master where member_id = #memberId# and member_type = ''M'';',false,'ACTIVE',NULL,true,'16ca4d1f-b4a5-4a9f-8217-2c8383ba32d1'),
	 (75398,'2020-07-03 00:00:00',75398,'2020-07-03 00:00:00','insert_covid19_lab_test_detail','locationId,admissionId,loggedInUserId,memberId','with insert_lab_test_detail as (
INSERT INTO covid19_lab_test_detail(
member_id, location_id, covid_admission_detail_id, lab_collection_status,created_by,created_on,sample_health_infra)
VALUES (#memberId#,
#locationId#, #admissionId#,''COLLECTION_PENDING'',#loggedInUserId#,now(),(select health_infra_id from covid19_admission_detail where id  = #admissionId#))
returning id
)
update covid19_admission_detail set last_lab_test_id = (select id from insert_lab_test_detail)
where id = #admissionId#;',false,'ACTIVE',NULL,true,'09460a16-a5a6-4003-8a05-1456b4d0e5c4'),
	 (58981,'2019-09-02 14:22:59.156',58981,'2019-09-02 14:22:59.156','mob_asha_lmp_services_provided','memberId','select to_char(rch.service_date, ''DD/MM/YYYY'') as "Service Date",
cast(''Home'' as text) as "Visit Place",
rch.id as "hiddenVisitId",
cast(''ASHA_LMP'' as text) as "hiddenServiceType"
from rch_asha_lmp_follow_up rch
inner join imt_member mem on rch.member_id = mem.id
where member_id = #memberId#
order by rch.service_date desc;',true,'ACTIVE','',true,'0e26ef03-ac77-45c5-b32b-ee9bd563fd8f'),
	 (74909,'2020-06-30 00:00:00',74909,'2020-06-30 00:00:00','fetch_soh_location_type_role_mapping',NULL,'select
	soh_location_type_role_mapping.*,
	um_role_master."name"
from
	soh_location_type_role_mapping
inner join um_role_master on
	soh_location_type_role_mapping.role_id = um_role_master.id',true,'ACTIVE',NULL,true,'ff5b8d72-0d94-47e2-a5a6-e5a4bf4b3f50'),
	 (66522,'2019-12-18 17:25:27.858',66522,'2019-12-19 10:48:45.393','soh_get_app_current_version',NULL,'select key_value as "androidVersion" from system_configuration where system_key =''SOH_ANDROID_CURRENT_VERSION''	-- current version
union all
select key_value as "androidVersion" from system_configuration where system_key =''SOH_ANDROID_VERSION''		-- min version',true,'ACTIVE',NULL,true,'f5f3f6aa-1f8c-497b-9605-c59172b3805c'),
	 (75398,'2020-07-09 00:00:00',75398,'2020-07-09 00:00:00','insert_in_health_infra_lab_test_mapping','ref_ids,type,health_infra_id','delete
from
	health_infrastructure_lab_test_mapping
where
	health_infra_id = #health_infra_id# and permission_type = #type#;

insert
	into
		health_infrastructure_lab_test_mapping( health_infra_id, ref_id, permission_type )
	values(#health_infra_id#, unnest(cast( #ref_ids# as int[]) ), #type# )',false,'ACTIVE',NULL,true,'0784f5a6-452b-437f-8a19-d3d4858873ab'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','retrieve_rch_location_by_rch_code_and_type','rchCode,type,anmolId','select
    *
from
    anmol_location_master
where
    (case
        when #type# in (''S'') and type in (''S'') then true
        when #type# in (''D'', ''C'') and type in (''D'') then true
        when #type# in (''B'', ''Z'') and type in (''T'') then true
        when #type# in (''P'') and type in (''F'') then true
        when #type# in (''U'') and type in (''FU'') then true
        when #type# in (''SC'', ''ANM'') and type in (''SF'') then true
        when #type# in (''V'', ''ANG'') and type in (''V'') then true
        else false
    end)
    and rch_code = #rchCode#
    and (id != #anmolId# or #anmolId# = null);',true,'ACTIVE','Retrieve RCH Location By RCH Code And Type',true,'41376d68-1f45-4994-8272-852044b4f374'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','update_rch_location','anmId,newRchCode,locationId,updateParentRchCodeInMapping,newParentRchCode,locationLevel,oldRchCode,loggedInUserId,ashaId,anmolType','begin;

    -- update rch_code in anmol_location_master (in current and child locations)

    UPDATE
    anmol_location_master
    SET
    rch_code = #newRchCode#,
    parent_rch_code = case when #updateParentRchCodeInMapping# = true then #newParentRchCode# else parent_rch_code end,
    asha_id = cast(case when #locationLevel# = 7 then #ashaId# else null end as numeric),
    anm_id = cast(case when #locationLevel# = 7 then #anmId# else null end as numeric),
    modified_by = #loggedInUserId#,
    modified_on = now()
    where rch_code = #oldRchCode#
    and type = #anmolType#;

    UPDATE
    anmol_location_master
    SET
    parent_rch_code=#newRchCode#,
    modified_by = #loggedInUserId#,
    modified_on = now()
    where parent_rch_code = #oldRchCode#
    and parent_type = #anmolType#;

    -- update rch_code in anmol_location_mapping

    UPDATE
    anmol_location_mapping
    set
        state_code = case when #locationLevel# = 1 then cast(#newRchCode# as integer) else state_code end,
        district_code = case when #locationLevel# = 3 then #newRchCode# else district_code end,
        taluka_code = case when #locationLevel# = 4 then #newRchCode# else taluka_code end,
        health_facility_code = case when #locationLevel# = 5 then cast(#newRchCode# as integer)  else health_facility_code end,
        health_subfacility_code = case when #locationLevel# = 6 then cast(#newRchCode# as integer) else health_subfacility_code end,
        village_code = case when #locationLevel# = 7 then #newRchCode# else village_code end,
        asha_id = case when #locationLevel# = 7 then #ashaId# else asha_id end,
        anm_id = case when #locationLevel# = 7 then #anmId# else anm_id end,
        modified_by = #loggedInUserId#,
        modified_on = now()
    WHERE
    case
        when #locationLevel# = 1 then state_code = cast(#oldRchCode# as integer)
        when #locationLevel# = 3 then district_code = #oldRchCode#
        when #locationLevel# = 4 then taluka_code = ''#oldRchCode#''
        when #locationLevel# = 5 then health_facility_code = cast(#oldRchCode# as integer)
        when #locationLevel# = 6 then health_subfacility_code = cast(#oldRchCode# as integer)
        when #locationLevel# = 7 then village_code = #oldRchCode#
        else false
    end;

    -- update parent rch_code in anmol_location_mapping if updateParentRchCodeInMapping flag is true

    UPDATE
    anmol_location_mapping
    set
        state_code = case when #locationLevel# = 3 then cast(#newParentRchCode# as integer) else state_code end,
        district_code = case when #locationLevel# = 4 then #newParentRchCode# else district_code end,
        taluka_code = case when #locationLevel# = 5 then #newParentRchCode# else taluka_code end,
        health_facility_code = case when #locationLevel# = 6 then cast(#newParentRchCode# as integer) else health_facility_code end,
        health_subfacility_code = case when #locationLevel# = 7 then cast(#newParentRchCode# as integer) else health_subfacility_code end,
        modified_by = #loggedInUserId#,
        modified_on = now()
    WHERE
    #updateParentRchCodeInMapping# = true
    and case
            when #locationLevel# = 1 then state_code = cast(#oldRchCode# as integer)
            when #locationLevel# = 3 then district_code = #oldRchCode#
            when #locationLevel# = 4 then taluka_code = #oldRchCode#
            when #locationLevel# = 5 then health_facility_code = cast(#oldRchCode# as integer)
            when #locationLevel# = 6 then health_subfacility_code = cast(#oldRchCode# as integer)
            when #locationLevel# = 7 then village_code = #oldRchCode#
            else false
        end;

    -- update location_master

    UPDATE
    location_master
    SET
    rch_code= cast(#newRchCode# as bigint), 
    modified_by = #loggedInUserId#,
    modified_on = now()
    WHERE id=#locationId#;

    commit;',false,'ACTIVE','Update RCH Location',true,'395041f9-e6f6-43a0-ad6c-9065a4a9229b'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','insert_rch_location','englishName,anmId,techoLocationType,parentRchCode,locationId,name,locationLevel,rchCode,techoParentLocationType,loggedInUserId,ashaId','begin;

    -- insert record in anmol_location_master

    insert
	into
	anmol_location_master ("name", english_name, "type", techo_location_type, rch_code, parent_type, techo_parent_location_type, parent_rch_code, asha_id, anm_id, created_by, created_on, modified_by, modified_on)
	values (
	    #name#,
	    #englishName#,
		case
			when #locationLevel# = 1 then ''S''
			when #locationLevel# = 3 then ''D''
			when #locationLevel# = 4 then ''T''
			when #locationLevel# = 5 and #techoLocationType# = ''P'' then ''F''
			when #locationLevel# = 5 and #techoLocationType# = ''U'' then ''FU''
			when #locationLevel# = 6 then ''SF''
			when #locationLevel# = 7 then ''V''
			else null
		end,
		#techoLocationType#,
		#rchCode#,
		case
			when #locationLevel# = 1 then ''''
			when #locationLevel# = 3 then ''S''
			when #locationLevel# = 4 then ''D''
			when #locationLevel# = 5 then ''T''
			when #locationLevel# = 6 and #techoParentLocationType# = ''P'' then ''F''
			when #locationLevel# = 6 and #techoParentLocationType# = ''U'' then ''FU''
			when #locationLevel# = 7 then ''SF''
			else null
		end,
		#techoParentLocationType#,
		#parentRchCode#,
        cast(case
            when #locationLevel# = 7 then #ashaId#
            else null
        end as numeric),
        cast(case
            when #locationLevel# = 7 then #anmId#
            else null
        end as numeric),
        #loggedInUserId#,
        now(),
        #loggedInUserId#,
        now()
    );

    -- update location_master

    UPDATE
    location_master
    SET
    rch_code = cast(#rchCode# as bigint),
    modified_by = #loggedInUserId#,
    modified_on = now()
    WHERE id = #locationId#;

    commit;',false,'ACTIVE','Insert RCH Location',true,'dc8e6c67-f21e-4d2b-86bb-37e023afaccf'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','retrieve_user_for_health_approval','state','select * from soh_user where state = #state#',true,'ACTIVE',NULL,true,'fa8c87a4-4db6-4420-a783-63a669f64109'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','delete_all_lab_test_by_health_infra_id','type,health_infra_id','delete
from
	health_infrastructure_lab_test_mapping
where
	health_infra_id = #health_infra_id# and permission_type = #type#;',false,'ACTIVE',NULL,true,'dd049419-5646-4856-a0ea-d2b1c42371c8'),
	 (1,'2019-10-05 00:00:00',NULL,NULL,'get_faq_question_list',NULL,'
select id,title,is_active from mytecho_faq_master;
',true,'ACTIVE',NULL,true,'de2986ce-150a-4d9a-8ea7-fbc5c85cdeb2'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','get_service_by_service_date','fromDate,locationId,toDate','with services_by_dates as(
	select 
	sum(case when geo_location_state = ''CORRECT'' then 1 else 0 end) as correct, 
        sum(case when geo_location_state = ''INCORRECT'' then 1 else 0 end) as incorrect,
        sum(case when geo_location_state = ''NOT_FOUND'' or geo_location_state is null then 1 else 0 end) as notfound,
        to_char(ser.service_date,''yyyy-MM-dd'') as service_date_temp
	from rch_member_services_last_90_days ser, location_hierchy_closer_det lh 
	where 
	ser.service_date between  #fromDate# and #toDate#  
       and ser.latitude is not null and ser.latitude != ''0.0'' 
        and service_type in (''FHW_LMP'',''FHW_ANC'',''FHW_MOTHER_WPD'',''FHW_PNC'',''FHW_CS'') and 
	lh.child_id = ser.location_id  
	and lh.parent_id in (select child_id from location_hierchy_closer_det lhcd where lhcd.parent_id=#locationId# and depth = 1)
	group by service_date_temp order by service_date_temp
)
select to_char(to_date(service_date_temp,''yyyy-MM-dd''),''dd-Mon(Dy)'' ) as service_date_view,*
from services_by_dates',true,'ACTIVE',NULL,true,'8e220db1-036a-4b7a-8db6-b264b0296734'),
	 (80208,'2020-06-30 00:00:00',80208,'2020-06-30 00:00:00','event_config_retrieve_exceptions_by_config_id','configId','select te.id 
, te.event_config_id  as "eventConfigId"
, te.exception_string as "exceptionString"
,te.processed 
, te.processed_on as "processedOn"
, te.system_trigger_on as "systemTriggerOn"
from timer_event te where te.status = ''EXCEPTION'' and te.event_config_id = #configId# order by te.system_trigger_on desc limit 1;',true,'ACTIVE',NULL,true,'550bd005-d939-4953-bc04-8859f433193b'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','get_geo_service_location_details','serviceType,from_date,to_date,locationId','with location_services as (
select 
sum(case when geo_location_state = ''INCORRECT'' then 1 else 0 end) as incorrect_locations,
sum(case when geo_location_state = ''CORRECT'' then 1 else 0 end) as correct_locations,
sum(case when geo_location_state = ''NOT_FOUND'' or geo_location_state is null then 1 else 0 end) as geo_not_available,
count(1) as total_services,
user_id
from rch_member_services  rlfu 
left join location_master latLongLocation on latLongLocation.id = rlfu.lat_long_location_id
where 
rlfu.location_id in (select child_id from location_hierchy_closer_det where parent_id =#locationId#)
and
case when ''all'' = #serviceType# then rlfu.service_type in (''FHW_LMP'',''FHW_ANC'',''FHW_MOTHER_WPD'',''FHW_PNC'',''FHW_CS'') else rlfu.service_type=#serviceType# end 
and service_date between #from_date# and #to_date#
group by user_id 
)
select ls.*, concat(um.first_name,'' '',um.last_name) as name
from location_services ls
inner join um_user um  on ls.user_id = um.id',true,'ACTIVE',NULL,true,'2615ca21-441b-45a9-91a7-333a95b7dc6c'),
	 (75398,'2020-07-09 00:00:00',75398,'2020-07-09 00:00:00','translation_label_retrival','searchText,offset,limit,startsWith','SELECT labelMaster1.key AS KEY, labelMaster1.language AS LANGUAGE ,labelMaster2.text AS label ,labelMaster1.text ,CASE WHEN labelMaster1.language = ''EN'' THEN ''English'' ELSE ''Gujarati'' END AS languageToDisplay, labelMaster1.translation_pending AS "isTranslationPending",labelMaster1.custom3b AS "isMobileLabel" FROM internationalization_label_master AS labelMaster1 JOIN internationalization_label_master AS labelMaster2 ON labelMaster2.key = labelMaster1.key WHERE labelMaster2.language = ''EN'' AND (#startsWith# = null OR labelMaster2.text ilike CONCAT(#startsWith# , ''%'')) AND (#searchText# = null OR labelMaster2.text ilike CONCAT(''%'',#searchText# , ''%'')) ORDER BY labelMaster1.key 
limit #limit# offset #offset#',true,'ACTIVE',NULL,true,'578b67fd-94cb-44f0-9e86-ff8ed9536f50'),
	 (75398,'2020-06-30 00:00:00',75398,'2020-06-30 00:00:00','get_geo_service_by_user_id','serviceType,from_date,to_date,locationId,userId','select 
user_id,
ROW_NUMBER () OVER (ORDER BY rlfu.id) as "srNo",
concat(um.first_Name, '' '' , um.last_name) as name,
concat(im.first_Name, '' '' , im.last_name) as "memberName",
get_location_hierarchy(rlfu.location_id) as Location, 
rlfu.location_id as "locationId",
get_location_hierarchy(lat_long_location_id) as "latLongLocation",
geo_location_state as "geoLocationState",
rlfu.latitude,
rlfu.longitude,
rlfu.lat_long_location_distance as "latLongLocationDistrance",
case when rlfu.service_type = ''FHW_LMP'' then ''LMP Service''
     when rlfu.service_type = ''FHW_ANC'' then ''ANC Service''
     when rlfu.service_type = ''FHW_MOTHER_WPD'' then ''Delivery Service''
     when rlfu.service_type = ''FHW_PNC'' then ''PNC Service''
     when rlfu.service_type = ''FHW_CS'' then ''Child Service'' end 
 as "serviceType",
to_char(rlfu.service_date,''dd-MM-yyyy'') as "serviceDate"
from rch_member_services  rlfu 
inner join um_user um on um.id = rlfu.user_id
inner join imt_member im on im.id = rlfu.member_id
--and geo_location_state in (''CORRECT'',''INCORRECT'')
where user_id = #userId#
and case when ''all'' = #serviceType# then rlfu.service_type in (''FHW_LMP'',''FHW_ANC'',''FHW_MOTHER_WPD'',''FHW_PNC'',''FHW_CS'') else rlfu.service_type=#serviceType# end
and service_date between #from_date# and #to_date#
and rlfu.location_id in (select child_id from location_hierchy_closer_det where parent_id =#locationId#)',true,'ACTIVE',NULL,true,'122c1d59-3d4a-41f7-9b0d-aca91c8aa66f'),
	 (60512,'2020-07-03 00:00:00',60512,'2020-07-03 00:00:00','child_service_by_id','childId','select child.id as "memberId",
child.unique_health_id as "uniqueHealthId",
concat(child.first_name,'' '',child.middle_name,'' '',child.last_name) as "memberName",
imt_family.id as "familyId",
child.family_id as "familyUniqueId",
get_location_hierarchy(case when imt_family.area_id is not null then imt_family.area_id else imt_family.location_id end) as "locationHierarchy",
case when imt_family.area_id is not null then imt_family.area_id else imt_family.location_id end as "locationId",
imt_family.area_id as "areaId",
case when child.immunisation_given is not null then child.immunisation_given else '''' end as "immunisationGiven",
child.dob as "dob",
child.additional_info as "additionalInfo",
child.gender as "gender",
listvalue_field_value_detail.value as "caste",
mother.mobile_number as "motherMobileNumber"
from imt_member child
left join imt_member mother on child.mother_id = mother.id
inner join imt_family on child.family_id = imt_family.family_id
left join listvalue_field_value_detail on cast(imt_family.caste as integer) = listvalue_field_value_detail.id
where child.id = #childId#',true,'ACTIVE',NULL,true,'05eef71a-abae-4f46-a5a8-8564a50391af'),
	 (-1,'2020-07-03 00:00:00',-1,'2020-07-03 00:00:00','retrieve_infra_by_role_location','roleId,locationIds','
    select
        r.id as roleId,
        r.name as rolename,
        h.type as type,
        h.name as infrastructureName,
        h.id as infraId,
        h.location_id as locationId
    from
        health_infrastructure_details h,
        um_role_master r,
        role_health_infrastructure_type  rh
    where
        h.type = rh.health_infrastructure__type_id
        and r.id = rh.role_id
        and (location_id IN (
            select
                d.child_id
            from
                location_master m,
                location_hierchy_closer_det d
            where
                m.id=d.child_id and (''#locationIds#'' = ''null'' or parent_id in (#locationIds#))
            order by depth asc
        ))
        and rh.state=''ACTIVE''
        and role_id=#roleId#
',true,'ACTIVE','Retrieves all the health infrastructure for the given location and its child locations and role id',true,'808ef0dc-cb72-4144-bd5a-08b50ae5cb70'),
	 (1,'2019-10-05 00:00:00',NULL,NULL,'faq_retrive_question_by_id','id','
select * from mytecho_faq_details where faq_master_id  = #id#
',true,'ACTIVE',NULL,true,'f7012694-1ed9-444d-8dfa-1e545b25dc9e'),
	 (1,'2019-10-05 00:00:00',NULL,NULL,'faq_language_list','NULL','
select code as languageCode ,name from internationalization_language_master
',true,'ACTIVE',NULL,true,'5d01b572-e193-4ee2-9207-8ac374fd1304'),
	 (75398,'2020-07-09 00:00:00',75398,'2020-07-09 00:00:00','covid19_update_location_cluster_master','name,id,userId,population','update location_cluster_master
set name = #name#,
population = #population#,
modified_by = #userId#,
modified_on = now()
where id = #id#;
delete from location_cluster_mapping_detail where cluster_id = #id#;',false,'ACTIVE',NULL,true,'e0e153b9-a404-49bc-b06e-9d78cc28356a'),
	 (75398,'2020-07-09 00:00:00',75398,'2020-07-09 00:00:00','covid19_insert_location_cluster_master','name,userId,population','insert into location_cluster_master
(name,state,population,created_by,created_on,modified_by,modified_on)
values(#name#,''ACTIVE'',#population#,#userId#,now(),#userId#,now())
returning id;',true,'ACTIVE','',true,'ff09f991-f550-4f07-b2af-b0222958582d'),
	 (75398,'2020-07-09 00:00:00',75398,'2020-07-09 00:00:00','covid19_retrieve_lab_location','type','select * 
from location_master 
where id in (select lhc.parent_id from location_hierchy_closer_det lhc where lhc.child_id in (
select location_id from health_infrastructure_details where is_covid_lab
) and lhc.parent_loc_type in (#type#)
)
order by name;',true,'ACTIVE',NULL,true,'0d271a27-0ee6-4284-b384-b0d792aca410'),
	 (-1,'2019-11-21 19:43:14.51',-1,'2019-11-21 19:43:14.51','mark_family_as_lfu','outOfState,id,userid','update imt_family_migration_master
set confirmed_by = #userid#, confirmed_on = now(),
modified_by = #userid#, modified_on = now(), 
state = ''LFU'',
out_of_state = #outOfState#
where id = #id#;',false,'ACTIVE','Mark Family As LFU',true,'25a2fd3d-6374-4ffd-8d03-5d16a0ead400'),
	 (75398,'2020-07-09 00:00:00',75398,'2020-07-09 00:00:00','covid19_retrieve_covid_hospital_location','type','select * from location_master where type in (#type#) order by name',true,'ACTIVE',NULL,true,'4adcbd37-8bb0-4ca3-b039-0e89133e8e21'),
	 (75398,'2020-07-09 00:00:00',75398,'2020-07-09 00:00:00','emo_dashboard_update_lab_test_result','result,loggedInUserId,id','update covid19_lab_test_recommendation
set lab_test_status = #result#
, lab_test_status_entry_on = now()
,lab_test_status_entry_by = #loggedInUserId#
where id = #id#;',false,'ACTIVE',NULL,true,'a3214b8f-42f2-440a-bea7-315fdc1a5bb2'),
	 (75398,'2020-07-09 00:00:00',75398,'2020-07-09 00:00:00','covid19_insert_lab_infrastructure_kit_details','healthInfraId,receiptDate,receivedFrom,kitsList,userId','insert into covid19_lab_infrastructure_kit_history
(health_infra_id,receipt_date,received_from,list_of_kits,created_by,created_on,modified_by,modified_on)
values(#healthInfraId#,#receiptDate#,#receivedFrom#,#kitsList#,#userId#,now(),#userId#,now());',false,'ACTIVE',NULL,true,'259a2728-c74c-42fe-a9c3-59ad47d4dd16'),
	 (75398,'2020-07-09 00:00:00',75398,'2020-07-09 00:00:00','covid19_component_details_by_date_and_infra','healthInfraId,receiptDate','select *
from covid19_lab_infrastructure_component_history
where health_infra_id = #healthInfraId#
and receipt_date = #receiptDate#;',true,'ACTIVE',NULL,true,'e1cd218d-3059-464b-9b1a-b6b89523b010'),
	 (75398,'2020-07-09 00:00:00',75398,'2020-07-09 00:00:00','covid19_insert_lab_infrastructure_component_details','healthInfraId,eg,confirmatoryAssay,testCapacity,receiptDate,agPath,userId,rnaExtraction','insert into covid19_lab_infrastructure_component_history
(health_infra_id,receipt_date,rna_extraction,eg_available,confirmatory_assay,ag_path,test_capacity,created_by,created_on,modified_by,modified_on)
values(#healthInfraId#,#receiptDate#,#rnaExtraction#,#eg#,#confirmatoryAssay#,#agPath#,#testCapacity#,#userId#,now(),#userId#,now());',false,'ACTIVE',NULL,true,'ca5d0a1e-d478-4f65-a63d-d1ae0f5813fa'),
	 (75398,'2020-07-09 00:00:00',75398,'2020-07-09 00:00:00','lab_test_dashboard_save_sample_collection','healthInfraId,id,collectionDate,userId','update covid19_lab_test_detail
set sample_health_infra_send_to = case when #healthInfraId# = null then sample_health_infra else #healthInfraId# end,
lab_collection_on = #collectionDate#,
lab_collection_entry_by = #userId#,
lab_collection_status = ''SAMPLE_COLLECTED'',
collection_server_date = now()
where id = #id#;',false,'ACTIVE',NULL,true,'fa38a80a-9742-4b4b-9d3b-13ccd3466046'),
	 (409,'2018-12-31 05:41:52.467',409,'2020-08-29 11:15:54.377','mark_as_false_death','member_id,action_by','update techo_notification_master set state = from_state,modified_on = now(), modified_by = #action_by# 
from (select techo_notification_state_detail.notification_id,techo_notification_state_detail.from_state 
from techo_notification_state_detail,(
select techo_notification_master.id,max(techo_notification_state_detail.id) as techo_notification_state_detail_id  
from techo_notification_master,techo_notification_state_detail 
where techo_notification_master.state= ''MARK_AS_DEATH'' and member_id = #member_id#
and techo_notification_master.id = techo_notification_state_detail.notification_id
and techo_notification_state_detail.from_state != techo_notification_state_detail.to_state
group by techo_notification_master.id) as notification_id_last_state_detail_id
where techo_notification_state_detail.id = notification_id_last_state_detail_id.techo_notification_state_detail_id)
as t  where t.notification_id =  techo_notification_master.id;

update event_mobile_notification_pending set is_completed = false, state = ''PENDING'',
modified_by = #action_by#, modified_on = now() 
where member_id = #member_id# and state = ''MARK_AS_DEATH'';


with max_record as (
select extract(epoch from max(service_date))*1000 as last_service_date
from rch_member_services 
where member_id = #member_id#  
and service_date < (
select cast(max(service_date) as date) from rch_member_services 
where member_id = #member_id#)
)
update imt_member set 
additional_info = cast(jsonb_set(
	cast(additional_info as jsonb), cast(''{lastServiceLongDate}'' as text[])
	,  cast(cast(max_record.last_service_date as text) as jsonb), false) as text),
death_detail_id = null, state = imt_member_state_detail.from_state, 
modified_on = now(), modified_by = #action_by# 
from imt_member_state_detail,max_record where imt_member.id = #member_id#
and imt_member_state_detail.id = (select max(id) from imt_member_state_detail where member_id = #member_id#);

delete from rch_member_death_deatil where member_id = #member_id#;',false,'ACTIVE',NULL,true,'badc338d-593c-4215-9348-75716cad1d55'),
	 (75398,'2020-07-09 00:00:00',75398,'2020-07-09 00:00:00','translation_label_add','isMobileLabel,language,label,loggedInUserId,text','INSERT INTO internationalization_label_master(country, key, language, created_by, created_on, custom3b, text, translation_pending) 
VALUES (''IN'', REPLACE(#label#,'' '',''''), #language#, #loggedInUserId# , now(), #isMobileLabel# , #text# ,false );',false,'ACTIVE',NULL,true,'ef3a751e-377b-4113-8016-5d97f4100baa'),
	 (-1,'2020-07-09 00:00:00',-1,'2020-07-09 00:00:00','update_family_area','id,areaId,loggedInUserId','
    update
        imt_family
    set
        area_id = #areaId#,
        modified_by = #loggedInUserId#,
        modified_on = now()
    where
        id = #id#;
',false,'ACTIVE','Update family area',true,'1d07070c-2e6b-4cc8-9096-ff5240337785'),
	 (75398,'2020-07-09 00:00:00',75398,'2020-07-09 00:00:00','covid19_insert_techo_member_contact_detail','address,contact_no,name,location,loggedInUserId,memberId','insert into covid_case_contact_history
(member_id,person_name,contact_no,address,health_state,state,location_id,created_by, created_on, modified_on, modified_by)
values(#memberId#,#name#
,(case when #contact_no# = null then null else #contact_no# end)
,(case when #address# = null then null else #address# end)
,''Suspected''
,''PENDING''
,(case when #location# = null then null else #location# end)
,#loggedInUserId#
, now()
, now()
, #loggedInUserId#
)
returning id;',true,'ACTIVE',NULL,true,'b13bf844-5963-4228-baa5-3615d88906e3'),
	 (75398,'2020-07-09 00:00:00',75398,'2020-07-09 00:00:00','insert_soh_location_type_role_mapping','location_type,role_ids','delete from soh_location_type_role_mapping where location_type = #location_type#;
insert
	into
		soh_location_type_role_mapping( location_type, role_id )
	values( #location_type#, unnest(cast(#role_ids# as int[])))',false,'ACTIVE',NULL,true,'8274392d-9e2c-4409-97cc-ac95d9e5032f'),
	 (75398,'2020-07-09 00:00:00',75398,'2020-07-09 00:00:00','delete_soh_location_user_by_type','location_type','delete from soh_location_users where location_type = #location_type#;',false,'ACTIVE',NULL,true,'bc8277cb-3130-4814-9a1c-ec8b0bf7dd9b'),
	 (75398,'2020-07-09 00:00:00',75398,'2020-07-09 00:00:00','set_soh_enbale_in_location_type','is_soh_enable,type','update
	location_type_master
set
	is_soh_enable = #is_soh_enable#
where
	type = #type#',false,'ACTIVE',NULL,true,'d229c71e-009e-44a0-ac97-fb4b45f1101b'),
	 (75398,'2020-07-09 00:00:00',75398,'2020-07-09 00:00:00','preg_reg_date_edit_list_retrieve','from_date,to_date,offSet,locationId,limit','with dates as(
	select to_date(#from_date#,''MM/DD/YYYY'') from_date,
	to_date(#to_date#,''MM/DD/YYYY'') + interval ''1 month'' - interval ''1 millisecond'' to_date
),preg_ids as (
	select id,member_id from rch_pregnancy_registration_det
	inner join dates on true
	where location_id in (select child_id from location_hierchy_closer_det where parent_id = #locationId#)
	and rch_pregnancy_registration_det.is_reg_date_verified is null
	and rch_pregnancy_registration_det.reg_date between dates.from_date and dates.to_date
	order by rch_pregnancy_registration_det.reg_date desc
	limit #limit# offset #offSet#
),anc_date as (
	select rch_anc_master.pregnancy_reg_det_id,to_char(min(service_date),''DD/MM/YYYY'') as ancVisitDate from preg_ids
	left join rch_anc_master on preg_ids.id = rch_anc_master.pregnancy_reg_det_id
	group by rch_anc_master.pregnancy_reg_det_id
)
select imt_member.id as "memberId",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name,'' ('',imt_member.unique_health_id,'')'') as "memberNameId",
get_location_hierarchy(rch_pregnancy_registration_det.current_location_id) as "locationHierarchy",
rch_pregnancy_registration_det.reg_date as "regDate",
rch_pregnancy_registration_det.lmp_date as "lmpDate",
rch_pregnancy_registration_det.id as "pregId",
concat(um_user.first_name,'' '',um_user.last_name) as "fhwName",
anc_date.ancVisitDate as "ancVisitDate"
from preg_ids
inner join imt_member on preg_ids.member_id = imt_member.id
inner join rch_pregnancy_registration_det on rch_pregnancy_registration_det.id = preg_ids.id
left join anc_date on rch_pregnancy_registration_det.id = anc_date.pregnancy_reg_det_id
inner join imt_family on imt_member.family_id = imt_family.family_id
inner join um_user_location on imt_family.location_id = um_user_location.loc_id and um_user_location.state = ''ACTIVE''
inner join um_user on um_user_location.user_id = um_user.id and role_id = 30 and um_user.state = ''ACTIVE''',true,'ACTIVE','Retrieves List of registered pregnant women in Pregnancy Registration Edit Screen',true,'bd8e4ec8-bf64-40c1-bdbf-99c13caa41ed'),
	 (75398,'2020-07-09 00:00:00',75398,'2020-07-09 00:00:00','preg_reg_date_edit_mark_incorrect','pregId,pregDate','update rch_pregnancy_registration_det
set reg_date = to_date(#pregDate#,''YYYY-MM-DD''), is_reg_date_verified = true
where id = #pregId#',false,'ACTIVE','To change the pregnancy registration date in Pregnancy Registration Edit Screen',true,'3504ae0a-cf34-4d07-9795-5ba0545a53c3'),
	 (1027,'2020-07-09 00:00:00',1027,'2020-07-09 00:00:00','role_search_for_selectize','searchString,roleIds','select id,first_name as "firstName", last_name as "lastName", user_name as "userName" from um_user where role_id in (#roleIds#) and (first_name like ''%#searchString#%'' or last_name like ''%#searchString#%'' or user_name like ''%#searchString#%'') limit 50',true,'ACTIVE','Return list of roles for wpd',true,'d5d3aaed-c896-4151-895f-f6ab129af880'),
	 (74909,'2020-07-09 00:00:00',74909,'2020-07-09 00:00:00','state_of_health_data_retrieval_14','locationId,element_name,timeline_type','with next_active_depth as (
select
	closer.depth as "depth"
from
	location_type_master lt
inner join location_hierchy_closer_det closer on
	lt.type = closer.child_loc_type where closer.parent_id = ''#locationId#'' and lt.is_soh_enable = true  and depth != 0 order by closer."depth" limit 1
),
elements_details as (
       select lt.level,lt.type,closer.child_id as "locationId",
        case when lt.type =''C'' or lt.type =''D'' then ''Districts/Corporation'' else lt.name end as "locationType",
        case when l.english_name is not null then l.english_name else l.name end as english_name,
 cast(''#element_name#'' as  text) as "elementName",
        value as value,sh.target,male as male,female as female,
        chart1 as chart1,chart2 as chart2,chart3 as chart3,chart4 as chart4,
chart5 as chart5,
chart6 as chart6,
chart7 as chart7,
chart8 as chart8,
chart9 as chart9,
chart10 as chart10,
chart11 as chart11,
chart12 as chart12,
chart13 as chart13,
chart14 as chart14,
chart15 as chart15,

        cast(''#timeline_type#'' as text) as timeline_type,
        days as days,
        reporting as reporting,
        calculatedTarget as calculatedTarget,
        color as color,
        percentage as percentage,
        sortPriority as "sortPriority",
        displayValue as displayValue
        from location_hierchy_closer_det closer
        inner join location_master l on closer.child_id = l.id
        inner join location_type_master lt on l.type = lt.type
        left join soh_element_configuration config on config.element_name = ''#element_name#''
        left join soh_timeline_analytics_temp sh on sh.location_id = closer.child_id and config.element_name = sh.element_name
        --inner join location_hierchy_closer_det closer on closer.parent_id = 2 and depth=case when 2 = 2 then 2 else 1 end and timeline_type = ''#timeline_type#''
	and timeline_type = ''#timeline_type#''
        where closer.parent_id = ''#locationId#'' and depth=(SELECT * FROM next_active_depth)
	--and timeline_sub_type=''PERIOD''
        order by english_name),
unique_locations as (
        select distinct "locationId" from elements_details
        ),
user_details_ids as (
        select uul.loc_id as location_id, concat(uu.first_name,'' '',uu.middle_name,'' '', uu.last_name)
				 as "userName",
				 uu.role_id,
uu.contact_number as "contactNumber",
uu.id as user_id,
role.short_name as "roleName"

        from unique_locations elements
        inner join um_user_location uul on elements."locationId" = uul.loc_id
        inner join location_master lm on lm.id =  uul.loc_id
        inner join soh_location_type_role_mapping as t on t.location_type = lm."type"
        inner join um_user uu on uu.id = uul.user_id
        inner join um_role_master role on role.id= t.role_id

        where uul.state=''ACTIVE''
        and uu.state=''ACTIVE''
         and uu.role_id=role.id
),
remaining_user_data as (
select "locationId" as location_id,
cast(''-'' as text) as "userName",
t.role_id,
cast(''-'' as text) as "contactNumber",
cast(0 as numeric) as "user_id",
role.short_name as "roleName"
from unique_locations
inner join location_master lm on lm.id = "locationId"
inner join soh_location_type_role_mapping as t on t.location_type = lm."type"
inner join um_role_master role on role.id= t.role_id
),
remaining_user_data_1 as (
select users.*
from remaining_user_data remains
left join user_details_ids users  on users.location_id = remains.location_id
and users.role_id  = remains.role_id
where users.user_id is not null
union
select remains.*
from remaining_user_data remains
left join user_details_ids users  on users.location_id = remains.location_id
and users.role_id  = remains.role_id
where users.user_id is null
),
user_details as (
      select
      cast(array_to_json(array_agg(row_to_json(ud.*))) as text) as user_name,ud.location_id
      from remaining_user_data_1 ud
      group by ud.location_id
)
select elements.*,
case when users.user_name is null then null else users.user_name end as  "userDetail"
from elements_details elements
--inner join calculations cal on cal."locationId" = elements."locationId"
left join user_details users on elements."locationId" = users.location_id',true,'ACTIVE',NULL,true,'d48c894f-44b3-456f-b395-f17cc3fe26aa'),
	 (85436,'2020-05-12 13:49:39.989',85436,'2020-05-12 14:27:31.221','test_test_test',NULL,'test_test_test',true,'ACTIVE','test_test_test',true,'27343017-20bb-44e8-b249-187f4c0cfc8c'),
	 (1,'2019-06-25 00:00:00',NULL,NULL,'get_rch_service_register_detail_wpd_mother','visitId','


select 
concat(mem.first_name,'' '',mem.middle_name,'' '',mem.last_name,'' ('',mem.unique_health_id,'')'') as "Member Name",
	mem.family_id as "Family Id", 
case when mother.date_of_delivery is not null then to_char(mother.date_of_delivery, ''DD/MM/YYYY'')  \:\:text  else ''Not Available'' end as "Date Of Delivery",
case when mother.member_status is not null then mother.member_status \:\:text  else ''Not Available'' end as "Mother Status",
case when mother.is_preterm_birth is not null then case when  mother.is_preterm_birth then ''Yes'' else ''No'' end \:\:text  else ''Not Available'' end as "Is Preterm Birth",
case when mother.delivery_place is not null then mother.delivery_place \:\:text  else ''Not Available'' end as "Delivery Place",
case when hos_type.value is not null then hos_type.value \:\:text  else ''Not Available'' end as "Hostpital Type",
case when mother.type_of_delivery is not null then mother.type_of_delivery \:\:text  else ''Not Available'' end as "Type Of Delivery", 
case when mother.delivery_done_by is not null then mother.delivery_done_by \:\:text  else ''Not Available'' end as "Delivery Done By",
case when mother.mother_alive is not null then mother.mother_alive \:\:text  else ''Not Available'' end as "Mother Alive",
case when mother.discharge_date is not null then to_char(mother.discharge_date, ''DD/MM/YYYY'') \:\:text  else ''Not Available'' end as "Discharge Date",
case when mother.death_date is not null then to_char(mother.death_date, ''DD/MM/YYYY'') \:\:text  else ''Not Available'' end as "Death Date", 
case when mother.death_reason is not null then mother.death_reason \:\:text  else ''Not Available'' end as "Death Reason", 
case when mother.place_of_death is not null then mother.place_of_death  \:\:text  else ''Not Available'' end as "Place Of Death", 
case when mother.cortico_steroid_given is not null then case when  mother.cortico_steroid_given then ''Yes'' else ''No'' end  \:\:text  else ''Not Available'' end as "Cortico Steroid Given", 
case when mother.mtp_done_at is not null then mother.mtp_done_at \:\:text  else ''Not Available'' end as "Mtp Done At",
case when mother.mtp_performed_by is not null then mother.mtp_performed_by \:\:text  else ''Not Available'' end as "Mtp Performed By",
case when mother.has_delivery_happened is not null then case when mother.has_delivery_happened then ''Yes'' else ''No'' end \:\:text  else ''Not Available'' end as "Has Delivery Happened",  
case when mother.is_high_risk_case is not null then case when mother.is_high_risk_case then ''Yes'' else ''No'' end \:\:text  else ''Not Available'' end as "Is High Risk Case", 
case when mother.pregnancy_outcome is not null then mother.pregnancy_outcome \:\:text  else ''Not Available'' end as "Pregnancy Outcome", 
case when mother.is_discharged is not null then case when mother.is_discharged then ''Yes'' else ''No'' end \:\:text  else ''Not Available'' end as "Is Discharged", 
case when mother.misoprostol_given is not null then case when mother.misoprostol_given then ''Yes'' else ''No'' end \:\:text  else ''Not Available'' end as "Misoprostol Given",
case when mother.free_drop_delivery is not null then mother.free_drop_delivery \:\:text  else ''Not Available'' end as "Free Drop Delivery", 
case when helth_infra.value is not null then helth_infra.value \:\:text  else ''Not Available'' end as "Health Infrastructure", 
case when mother.other_death_reason is not null then mother.other_death_reason \:\:text  else ''Not Available'' end as "Other Death Reason",
case when mother.institutional_delivery_place is not null then mother.institutional_delivery_place \:\:text  else ''Not Available'' end as "Institutional Delivery Place", 
case when mother.delivery_person_name is not null then mother.delivery_person_name \:\:text  else ''Not Available'' end as "Delivery Person Name"

from rch_wpd_mother_master mother
inner join imt_member mem on mother.member_id = mem.id 
left join listvalue_field_value_detail hos_type on mother.type_of_hospital = hos_type.id
left join listvalue_field_value_detail helth_infra on mother.health_infrastructure_id = helth_infra.id
where mother.id = #visitId#
',true,'ACTIVE',NULL,true,'8c7eaee0-d1cd-4d7f-9572-e4182806711b'),
	 (74909,'2020-07-09 00:00:00',74909,'2020-07-09 00:00:00','get_elements_details_permission_wise_2','user_id,locationId,timeline_type','with user_detail as(
select role_id,id from um_user where id = #user_id#
),
elements_id as ( select soh_element_permissions.element_id from soh_element_permissions inner join user_detail on true
where  (case when permission_type = ''ROLE'' then reference_id = user_detail.role_id end) or
(case when permission_type = ''USER'' then reference_id = user_detail.id end) or
permission_type = ''ALL''),
soh_elements as (select * from soh_element_configuration where id in (select distinct(element_id) from elements_id) or is_public = true),
elements_details as (
       select lt.level,lt.type,closer.child_id as "locationId",
        case when lt.type =''C'' or lt.type =''D'' then ''Districts/Corporation'' else lt.name end as "locationType",
        case when l.english_name is not null then l.english_name else l.name end as english_name,
config.element_name as "elementName",
        value as value,sh.target,male as male,female as female,
        chart1 as chart1,chart2 as chart2,chart3 as chart3,chart4 as chart4,
chart5 as chart5,
chart6 as chart6,
chart7 as chart7,
chart8 as chart8,
chart9 as chart9,
chart10 as chart10,
chart11 as chart11,
chart12 as chart12,
chart13 as chart13,
chart14 as chart14,
chart15 as chart15,
        cast(''#timeline_type#'' as text) as timeline_type,
        days as days,
        reporting as reporting,
        calculatedTarget as calculatedTarget,
        color as color,
        percentage as percentage,
        sortPriority as "sortPriority",
        displayValue as displayValue
        from location_hierchy_closer_det closer
        inner join location_master l on closer.child_id = l.id
        inner join location_type_master lt on l.type = lt.type
        left join soh_elements config on TRUE
        left join soh_timeline_analytics_temp sh on sh.location_id = closer.parent_id and config.element_name = sh.element_name
        --inner join location_hierchy_closer_det closer on closer.parent_id = 2 and depth=case when 2 = 2 then 2 else 1 end and timeline_type = ''#timeline_type#''
	and timeline_type = ''#timeline_type#''
        where closer.parent_id = ''#locationId#'' and depth=0
	--and timeline_sub_type=''PERIOD''
        order by english_name),
unique_locations as (
        select distinct "locationId" from elements_details
        ),
user_details_ids as (
        select uul.loc_id as location_id, concat(uu.first_name,'' '',uu.middle_name,'' '', uu.last_name)
				 as "userName",
				 uu.role_id,
uu.contact_number as "contactNumber",
uu.id as user_id,
role.short_name as "roleName"

        from unique_locations elements
        inner join um_user_location uul on elements."locationId" = uul.loc_id
        inner join location_master lm on lm.id =  uul.loc_id
        inner join soh_location_type_role_mapping as t on t.location_type = lm."type"
        inner join um_user uu on uu.id = uul.user_id
        inner join um_role_master role on role.id= t.role_id

        where uul.state=''ACTIVE''
        and uu.state=''ACTIVE''
        and uu.role_id=role.id
),
remaining_user_data as (
select "locationId" as location_id,
cast(''-'' as text) as "userName",
t.role_id,
cast(''-'' as text) as "contactNumber",
cast(0 as numeric) as "user_id",
role.short_name as "roleName"
from unique_locations
inner join location_master lm on lm.id = "locationId"
inner join soh_location_type_role_mapping as t on t.location_type = lm."type"
inner join um_role_master role on role.id= t.role_id
),
remaining_user_data_1 as (
select users.*
from remaining_user_data remains
left join user_details_ids users  on users.location_id = remains.location_id
and users.role_id  = remains.role_id
where users.user_id is not null
union
select remains.*
from remaining_user_data remains
left join user_details_ids users  on users.location_id = remains.location_id
and users.role_id  = remains.role_id
where users.user_id is null
),
user_details as (
      select
      cast(array_to_json(array_agg(row_to_json(ud.*))) as text) as user_name,ud.location_id
      from remaining_user_data_1 ud
      group by ud.location_id
)
select elements.*,
case when users.user_name is null then null else users.user_name end as  "userDetail"
from elements_details elements
--inner join calculations cal on cal."locationId" = elements."locationId"
left join user_details users on elements."locationId" = users.location_id',true,'ACTIVE',NULL,true,'7081e938-1e4e-493b-8e10-2e9ad65de9fc'),
	 (66522,'2020-08-14 17:14:44.884',66522,'2020-08-19 12:56:26.034','soh_pending_work_tt_booster','limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
analytics.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
cast(''TT Booster'' AS text) as "val_Pending Work Type",
to_char(lmp_date,''DD-MM-YYYY'') as "val_LMP Date",
to_char(reg_service_date,''DD-MM-YYYY'') as "val_Registration Date",
analytics.member_current_location_id as loc_id
from rch_pregnancy_analytics_details analytics inner join imt_member m on m.id = analytics.member_id
where 
analytics.member_current_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#) 
and delivery_outcome is null and death_date is null 
and
((m.immunisation_given is null or m.immunisation_given = '''' is true) and (last_delivery_date >= current_date - interval ''3 year'' ) and anc1 is not null)
limit #limit#

),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id
	where family_head = true
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
inner join anmLocation a on  uld.loc_id = a.location_id
inner join um_user uu on uu.id = uld.user_id 
where 
uld.state = ''ACTIVE'' and uu.state=''ACTIVE'' and
uu.role_id in (select id from um_role_master where code =''FHW'' )
group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
	select max(service_date) as service_date,services.member_id from rch_member_services services
	inner join analytics a on a.member_id = services.member_id
	group by services.member_id 
),
lastServiceUnique as(
	select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
	where service.member_id = last.member_id
	group by service.member_id, last.service_date
),
lastServiceDetails as (
	select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
	service.location_id,
	location.name as locationName,
	case when service.service_type =''FHW_LMP'' then ''LMP Visit''
		when  service.service_type =''FHW_ANC'' then ''ANC Visit''
		  when service.service_type = ''FHW_PNC'' then ''PNC Visit''
		  when service.service_type = ''FHW_CS'' then ''Child Service''
		  when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
	end as service_type,
	service.member_id 
	from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id
	
	inner join location_master location on service.location_id = location.id
	
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName"
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = a.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id',true,'ACTIVE',NULL,NULL,'ee70b756-7449-45d7-870f-fa058113ef96'),
	 (66522,'2020-08-14 10:22:03.058',66522,'2020-08-18 18:58:35.797','soh_pending_work_wpd','limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
m.id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
to_char(lmp_date,''DD-MM-YYYY'') as "val_LMP Date",
to_char(analytics.edd,''DD-MM-YYYY'') as "val_EDD Date",
cast(''WPD'' AS text) as "val_Pending Work Type",
analytics.member_current_location_id as loc_id
from rch_pregnancy_analytics_details analytics inner join imt_member m on analytics.member_id= m.id
where 
delivery_outcome is null and death_date is null and analytics.edd < current_date
and analytics.member_current_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#) 
limit #limit#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id
	where family_head = true
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
inner join anmLocation a on  uld.loc_id = a.location_id
inner join um_user uu on uu.id = uld.user_id 
where 
uld.state = ''ACTIVE'' and uu.state=''ACTIVE'' and
uu.role_id in (select id from um_role_master where code =''FHW'' )
group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
	select max(service_date) as service_date,services.member_id from rch_member_services services
	inner join analytics a on a.member_id = services.member_id
	group by services.member_id 
),
lastServiceUnique as(
	select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
	where service.member_id = last.member_id
	group by service.member_id, last.service_date
),
lastServiceDetails as (
	select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
	service.location_id,
	location.name as locationName,
	case when service.service_type =''FHW_LMP'' then ''LMP Visit''
		when  service.service_type =''FHW_ANC'' then ''ANC Visit''
		  when service.service_type = ''FHW_PNC'' then ''PNC Visit''
		  when service.service_type = ''FHW_CS'' then ''Child Service''
		  when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
	end as service_type,
	service.member_id 
	from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id
	
	inner join location_master location on service.location_id = location.id
	
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName"
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = a.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id',true,'ACTIVE',NULL,NULL,'0f1b05d7-43f8-4b5c-857e-3748cbed4dd3'),
	 (74909,'2020-07-13 00:00:00',74909,'2020-07-13 00:00:00','get_soh_labels',NULL,'select
	label."language",
	cast( json_agg( json_build_object( label.key, label.text )) as text ) as "labels"
from
	internationalization_label_master label
where
	label.app_name = ''SOH''
group by
	label."language"',true,'ACTIVE',NULL,true,'429210a6-4485-4ebc-84cb-85837a14c099'),
	 (74909,'2020-07-13 00:00:00',74909,'2020-07-13 00:00:00','retrieve_system_by_key',NULL,'select key_value from system_configuration where system_key = ''SOH_LOCALE_VERSION''',true,'ACTIVE',NULL,true,'7a9306e5-c52c-47b9-881a-1ac14dd50bb9'),
	 (1,'2020-01-30 00:00:00',NULL,NULL,'dr_techo_rbsk_child_search_by_member_id','uniqueHealthId','
select
	child.id as "memberId",
	child.unique_health_id as "uniqueHealthId",
	child.first_name as "firstName",
	child.middle_name as "middleName",
	child.last_name as "lastName",
	child.family_id as "familyId",
	child.gender,
	child.dob,
	child.birth_weight as "weight",
	mother.unique_health_id as "motherId",
	mother.mobile_number as "motherPhoneNumber",
	concat( mother.first_name, '' '', mother.middle_name, '' '', mother.last_name ) as "motherName"
from
	imt_member child
inner join imt_member mother on
	child.mother_id = mother.id
where
	child.unique_health_id in ( ''#uniqueHealthId#'' )
',true,'ACTIVE',NULL,true,'322d2b54-6efc-4775-8e09-7ccdb6dfcda5'),
	 (74909,'2020-07-13 00:00:00',74909,'2020-07-13 00:00:00','get_soh_vaccine_name',NULL,'select cast(''{
    "HEPATITIS_B_0":"HEPATITIS B 0",
    "OPV_0":"OPV 0",
    "OPV_1":"OPV 1",
    "OPV_2":"OPV 2",
    "OPV_3":"OPV 3",
    "BCG":"BCG",
    "PENTA_1":"PENTA 1",
    "PENTA_2":"PENTA 2",
    "PENTA_3":"PENTA 3",
    "VITAMIN_A":"VITAMIN A",
    "VITAMIN_K":"VITAMIN K",
    "F_IPV_1_01":"F IPV 1 01",
    "F_IPV_2_01":"F IPV 2 01",
    "F_IPV_2_05":"F IPV 2 05",
    "MEASLES_RUBELLA_1":"MEASLES RUBELLA 1",
    "MEASLES_RUBELLA_2":"MEASLES RUBELLA 2",
    "ROTA_VIRUS_3":"ROTA VIRUS 3",
    "ROTA_VIRUS_2":"ROTA VIRUS 2",
    "ROTA_VIRUS_1":"ROTA VIRUS 1",
    "OPV_BOOSTER":"OPV BOOSTER",
    "DPT_BOOSTER":"DPT BOOSTER",
    "DPT_1":"DPT 1",
    "DPT_2":"DPT 2",
    "DPT_3":"DPT 3",
    "MMR":"MMR",
    "HIB_2":"HIB 2",
    "HEPATITIS_B_1":"HEPATITIS B 1",
    "CHICKEN_POX":"CHICKEN POX",
    "HEPATITIS_A_1":"HEPATITIS A 1",
    "MEASLES_1":"MEASLES 1",
    "HEPATITIS_B_3":"HEPATITIS B 3",
    "HIB_1":"HIB 1",
    "JE":"JE",
    "DPT_BOOSTER_2":"DPT BOOSTER 2",
    "HEPATITIS_A_2":"HEPATITIS A 2",
    "TT_16":"TT 16",
    "HIB_3":"HIB 3",
    "MEASLES_2":"MEASLES 2",
    "TYPHOID":"TYPHOID",
    "HEPATITIS_B_2":"HEPATITIS B 2",
    "TT_10":"TT 10"
}'' as text) as "VACCINATION_NAME"',true,'ACTIVE',NULL,true,'51fe0482-f01f-4d7e-824e-8e08f7129fb5'),
	 (75398,'2020-07-13 00:00:00',75398,'2020-07-13 00:00:00','covid19_lab_test_dashboard_distinct_ward_name_receive','healthInfra,loggedInUserId','select id,ward_name
from health_infrastructure_ward_details
where case when #healthInfra# != null then health_infra_id = (select id from health_infrastructure_details where name_in_english = #healthInfra#)
	else health_infra_id in (select
	Distinct ltd.sample_health_infra as id
	from covid19_lab_test_detail ltd
	where
	(((select role_id from um_user where id = #loggedInUserId#) in (59,25,96))
	or ltd.sample_health_infra_send_to = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = ''#loggedInUserId#'' and uhi.state = ''ACTIVE'')
	) and ltd.lab_collection_status = ''SAMPLE_COLLECTED'') end
and status = ''ACTIVE''',true,'ACTIVE',NULL,true,'03d33b28-7011-4561-8976-0ff030364203'),
	 (75398,'2020-07-13 00:00:00',75398,'2020-07-13 00:00:00','covid19_lab_test_pending_sample_receive','searchText,offset,healthInfra,limit,loggedInUserId,wardId,collectionDate','with idsp_screening as (
select
	clt.id as "id",
	ltd.id as lab_id,
	ltd.lab_collection_on as collection_date,
	ltd.sample_health_infra_send_to as health_infra_to,
	ltd.is_transferred as is_transferred,
	ltd.lab_test_id as lab_test_id,
	ltd.lab_test_number as lab_test_number,
	clt.location_id as loc_id,
	imt_member.id as member_id,
	case when clt.member_id is null
		then concat_ws('' '',clt.first_name,clt.middle_name,clt.last_name)
		else concat(concat_ws('' '',imt_member.first_name,imt_member.middle_name,imt_member.last_name)
			, '' ('' , imt_member.unique_health_id , '')'' , ''<br>'' , imt_member.family_id) end as member_det,
	concat(case when clt.member_id is null
		then cast(clt.age as text)
		else cast(EXTRACT(YEAR FROM age(imt_member.dob)) as text) end,'' Year'') as age,
	to_char(clt.admission_date,''DD/MM/YYYY'') as admission_date,
	hiwd.ward_name,
	sample_from.name_in_english as sample_from_health_infra,
	sample_from.is_covid_lab,
	clt.current_ward_id as ward_id,
	cacd.on_ventilator as on_ventilator,
	cacd.ventilator_type1 as ventilator_type1,
	cacd.ventilator_type2 as ventilator_type2,
	cacd.on_o2 as on_o2,
	cacd.on_air as on_air,
	cacd.remarks as remarks,
	clt.is_hiv as hiv,
	clt.current_bed_no,
	cacd.health_status as health_status,
	cacd.service_date as last_check_up_time
	from covid19_lab_test_detail ltd
	inner join covid19_admission_detail clt on ltd.covid_admission_detail_id = clt.id
	left join health_infrastructure_ward_details hiwd on hiwd.id = clt.current_ward_id
	left join covid19_admitted_case_daily_status cacd on cacd.id = clt.last_check_up_detail_id
	left join health_infrastructure_details sample_from on sample_from.id = ltd.sample_health_infra
	left join imt_member on clt.member_id = imt_member.id
	left join imt_family on imt_member.family_id = imt_family.family_id
	where
	(((select role_id from um_user where id = #loggedInUserId#) in (59,25,96))
	or ltd.sample_health_infra_send_to = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = #loggedInUserId# and uhi.state = ''ACTIVE'')
	)and clt.status not in (''DISCHARGED'',''DEAD'',''REFER'') and ltd.lab_collection_status = ''SAMPLE_COLLECTED''
	and case when #searchText# != ''null'' and #searchText# != '''' then ltd.search_text ilike concat(''%'',#searchText#,''%'') else true end
	and case when #healthInfra# != ''null'' and #healthInfra# != '''' then sample_from.name_in_english ilike concat(''%'',#healthInfra#,''%'') else true end
	and case when #collectionDate# != ''null'' and #collectionDate# != '''' then cast(ltd.lab_collection_on as date) = #collectionDate# else true end
    and case when #wardId# != ''null'' and #wardId# != '''' then hiwd.ward_name = #wardId# else true end
	order by ltd.collection_server_date desc
	limit #limit# offset #offset#
)
select
id as "admissionId"
,lab_id as "labCollectionId"
,collection_date as "sampleCollectionDate"
,health_infra_to as "healthInfraTo"
,is_transferred as "isTransferred"
,lab_test_id as "labTestId"
,lab_test_number as "labTestNumber"
,member_id as "memberId"
,loc_id as "locationId"
,member_det as "memberDetail"
,age as "age"
,admission_date as "admissionDate"
,ward_name as "wardName"
,ward_id as "wardId"
,current_bed_no as "bedNumber"
,health_status as "healthStatus"
,to_char(last_check_up_time,''DD/MM/YYYY'') as "lastCheckUpTime"
,on_ventilator
,ventilator_type1
,ventilator_type2
,on_o2
,on_air
,remarks
,hiv
,sample_from_health_infra as "sampleFrom"
,is_covid_lab as "isSameHealthInfrastructure"
from idsp_screening;',true,'ACTIVE',NULL,true,'2a9daba6-a0fd-472f-8560-a42278b01ffa'),
	 (1,'2019-08-22 00:00:00',63746,'2019-08-28 11:05:14.887','get_rch_register_child_service_basic_info','serviceType,from_date,to_date,offset,limit,location_id','
with location_det as(
	select child_id as loc_id from location_hierchy_closer_det where parent_id = #location_id#
),dates as(
	select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'')+interval ''1 day'' - interval ''1 millisecond'' as to_date
)
,member_det as (
	(
	select id as ref_id, member_id
	from rch_child_analytics_details,dates,location_det
	where ''#serviceType#'' in (''rch_child_service'')
	and date_part(''years'',age(to_date, dob)) < 5
        and dob between dates.from_date and dates.to_date
        and rch_child_analytics_details.loc_id = location_det.loc_id
	order by dob)
)
select
member_det.ref_id,
mem.id as member_id,
concat(mem.first_name, '' '', mem.last_name, '' ('', mem.unique_health_id, '')'') as member_name,
mem.middle_name as father_name,
case
    when (fam.address1 is null and fam.address2 is null) then ''N/A''
    else
        case
            when fam.address1 is null then fam.address2
            when fam.address2 is null then fam.address1
            else concat(fam.address1, '','', fam.address2)
        end
end as address,
date_part(''years'', age(localtimestamp, dob)) as age,
dob as child_dob,
to_char(dob,''dd-MM-yyyy'') as dob,
case
	when rel.value = ''HINDU'' then ''Hindu''
	when rel.value = ''CHRISTIAN'' then ''Christian''
	when rel.value = ''MUSLIM'' then ''Muslim''
	when rel.value = ''OTHERS'' then ''Others''
	else rel.value
end as religion,
case
	when cas.value = ''GENERAL'' then ''General''
	else cas.value
end as cast
from imt_member mem
inner join member_det on mem.id = member_det.member_id
inner join imt_family fam on mem.family_id = fam.family_id
left join listvalue_field_value_detail cas on fam.caste = (cast(cas.id as varchar))
left join listvalue_field_value_detail rel on fam.religion = (cast(rel.id as varchar))
order by child_dob
limit #limit# offset #offset#
',true,'ACTIVE',NULL,true,'4d17269e-f5f2-49e9-aec8-1bb7bd8fe1c7'),
	 (1,'2019-08-22 00:00:00',NULL,NULL,'get_rch_register_mother_service_basic_info','location_id,to_date,from_date,limit,offset,serviceType','
with location_det as(
	select child_id as loc_id from location_hierchy_closer_det where parent_id = #location_id#
),dates as(
	select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'')+interval ''1 day'' - interval ''1 millisecond'' as to_date
)
,member_det as (
	(select pregnancy_reg_id as ref_id, member_id, reg_service_date
	from rch_pregnancy_analytics_details,dates,location_det
	where ''#serviceType#'' in (''rch_mother_service'')
	and reg_service_date between dates.from_date and dates.to_date
	and member_current_location_id = location_det.loc_id
	order by reg_service_date)
)
select
member_det.ref_id,
mem.id as member_id,
concat(mem.first_name,'' '', mem.last_name, '' ('', mem.unique_health_id, '')'') as member_name,
mem.middle_name as husband_name,
case
    when (fam.address1 is null and fam.address2 is null) then ''N/A''
    else
        case
            when fam.address1 is null then fam.address2
            when fam.address2 is null then fam.address1
            else concat(fam.address1, '','', fam.address2)
        end
end as address,
date_part(''years'',age(localtimestamp, dob)) as age,
case
	when rel.value = ''HINDU'' then ''Hindu''
	when rel.value = ''CHRISTIAN'' then ''Christian''
	when rel.value = ''MUSLIM'' then ''Muslim''
	when rel.value = ''OTHERS'' then ''Others''
	else rel.value
end as religion,
case
	when cas.value = ''GENERAL'' then ''General''
	else cas.value
end as cast,
member_det.reg_service_date
from imt_member mem
inner join member_det on mem.id = member_det.member_id
inner join imt_family fam on mem.family_id = fam.family_id
left join listvalue_field_value_detail cas on fam.caste = (cast(cas.id as varchar))
left join listvalue_field_value_detail rel on fam.religion = (cast(rel.id as varchar))
order by member_det.reg_service_date
limit #limit# offset #offset#
',true,'ACTIVE',NULL,true,'4d70dac3-0c79-4d7d-93c4-4f4cc307e068'),
	 (1,'2020-02-14 00:00:00',NULL,NULL,'retrieve_all_teams_with_members','','select tm.id, tm.name , tm.state ,tm.team_type_id as "teamTypeId" ,ttm.type as "teamType",
cast( json_agg(json_build_object(''id'',uu.id ,''firstName'', uu.first_name,''lastName''  ,uu.last_name,''userName'' ,uu.user_name ,''middleName'',uu.middle_name ,''roleId'', uu.role_id,''roleName'' ,urm.name )) as text)as users from team_master tm  
inner join team_type_master ttm on ttm.id = tm.team_type_id 
inner join team_member_det tmd on tm.id = tmd.team_id 
inner join um_user uu on uu.id = tmd.user_id 
inner join um_role_master urm on urm.id = uu.role_id where tmd.state = ''ACTIVE'' group by tm.id , ttm.type ;',true,'ACTIVE',NULL,true,'453a9d06-a45e-43c7-969d-b5a992efc794'),
	 (58981,'2020-01-31 13:31:36.411',58981,'2020-01-31 13:31:36.411','mob_rbsk_defect_by_id','ids','select * from rbsk_defect_configuration where id in #ids#',true,'ACTIVE',NULL,true,'dce6b9e0-9b15-4c22-984b-cc26a9d34a13'),
	 (80314,'2020-10-16 00:00:00',80314,'2020-10-16 00:00:00','check_for_user_exist_or_not_for_same_team_type','roleIds,teamTypeId,teamId','with available_user as(
select
	tmd.user_id as "userId",
	tm."name"
from
	team_master tm
inner join team_member_det tmd on
	tm.id = tmd.team_id
where
	tmd.role_id in (#roleIds#)
	and tm.team_type_id = #teamTypeId#
	and tm.id not  in (#teamId#)
        and tmd.state = ''ACTIVE''
)
select um_user.id as "userId",
first_name as "firstName",
last_name as "lastName",
user_name as "userName",
available_user.name as "teamName"
from um_user inner join available_user on um_user.id = available_user."userId"',true,'ACTIVE',NULL,true,'f049398d-b63c-43e5-8524-c478292d3934'),
	 (1,'2020-02-14 00:00:00',NULL,NULL,'school_retrieval','limit,offset,locationId','
    SELECT
    sm.id,
	sm.name,
	sm.code,
	sm.english_name as "englishName",
	lfvd1.value as "grantType",
	lfvd2.value as "schoolType",
	sm.no_of_teachers as "noOfTeachers",
	sm.principal_name as "principalName",
	sm.contact_person_name as "contactPersonName",
	sm.is_pre_primary_school as "isPrePrimarySchool",
	sm.is_primary_school as "isPrimarySchool",
	sm.is_higher_secondary_school as "isHigherSecondarySchool",
	sm.is_madresa as "isMadresa",
	sm.is_gurukul as "isGurukul",
	sm.is_other as "isOther",
	lfvd3.value as "otherSchoolType",
	sm.contact_number as "contactNumber",
	sm.child_male_1_to_5 as "childMale1To5",
	sm.child_female_1_to_5 as "childFemale1To5",
	sm.child_male_6_to_8 as "childMale6To8",
	sm.child_female_6_to_8 as "childFemale6To8",
	sm.child_male_9_to_10 as "childMale9To10",
	sm.child_female_9_to_10 as "childFemale9To10",
	sm.child_male_11_to_12 as "childMale11To12",
	sm.child_female_11_to_12 as "childFemale11To12",
	sm.rbsk_team_id as "rbskTeamId",
	get_location_hierarchy(sm.location_id) as "locationHierarchy"
 	FROM public.school_master sm
	LEFT JOIN listvalue_field_value_detail lfvd1 on lfvd1.id = sm.grant_type
	LEFT JOIN listvalue_field_value_detail lfvd2 on lfvd2.id = sm.school_type
	LEFT JOIN listvalue_field_value_detail lfvd3 on lfvd3.id = sm.other_school_type
	WHERE sm.location_id in (select child_id from location_hierchy_closer_det lhcd where lhcd.parent_id = #locationId#) or ''#locationId#'' = ''null'' or ''#locationId#'' = ''''
  	limit #limit# offset #offset#
',true,'ACTIVE','School Retrieval',true,'98680602-ccd8-4ae4-804a-a5ff9141ed56'),
	 (1,'2020-04-03 00:00:00',1,'2020-04-03 00:00:00','retrieve_gvk_covid_104_calls_contact_response_by_id','id','
select person_name as "name",
contact_no as "contactNo",
district as "districtLocationId",
location_master.name as "districtName",
other_detail as "otherDetail"
from gvk_covid_104_calls_contact_response
left join location_master on gvk_covid_104_calls_contact_response.district = location_master.id
where gvk_response_id = #id#
',true,'ACTIVE',NULL,true,'217df5ed-26a3-475b-86ac-11b974dc19ee'),
	 (75398,'2020-07-24 00:00:00',75398,'2020-07-24 00:00:00','insert_lab_test_for_selected_infra_type','permissionType,infraTypeIds,refId','delete
from
	health_infrastructure_lab_test_mapping
where
    health_infra_id is null and
	ref_id = #refId#
	and permission_type = #permissionType#;

 insert
	into
		health_infrastructure_lab_test_mapping( health_infra_type, ref_id, permission_type )
	values (unnest(cast(#infraTypeIds# as int[])), #refId#, #permissionType# )',false,'ACTIVE',NULL,true,'6dfc82a5-0c6f-4c18-87a3-af9d19ac6459'),
	 (75398,'2020-06-03 00:00:00',75398,'2020-07-28 17:37:28.613','dynamic_form_insert_data','loggedInUserId,form_name,form_code','insert into system_form_master(form_name,form_code, created_by, created_on, modified_on, modified_by)
values(
#form_name#, #form_code#, 
#loggedInUserId#, now(), now(), #loggedInUserId#
)
returning id;',true,'ACTIVE',NULL,true,'6f9dbd56-1925-4390-b178-f57c026680b6'),
	 (74841,'2019-09-13 10:36:21.385',74841,'2020-05-14 13:32:20.939','state_of_health_get_mmr_detail_2','fromDate,toDate,limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
preg.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
preg.member_current_location_id as loc_id,
to_char(preg.death_date,''DD-MM-YYYY'') as "deathDate",
case when death.place_of_death in ( ''HOME'',''home'')  then ''Home''
when death.place_of_death =''ON_THE_WAY'' THEN ''On the way''
when death.place_of_death =''HOSP'' then ''Hospital'' 
else ''Other'' end as "deathLocation",
case when reasons.value is null then death.other_death_reason else reasons.value end as "deathReason"
from rch_pregnancy_analytics_details preg 
inner join imt_member m on m.id = preg.member_id 
left join rch_member_death_deatil death on death.member_id = preg.member_id 
left join listvalue_field_value_detail reasons on reasons.id\:\:text = death.death_reason 
where preg.death_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and preg.death_date between ''#fromDate#'' and ''#toDate#''
and preg.maternal_detah
limit #limit#),
family_head as (
    select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
	where family_head = true
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
inner join anmLocation a on  uld.loc_id = a.location_id
inner join um_user uu on uu.id = uld.user_id 
where 
uld.state = ''ACTIVE'' and uu.state=''ACTIVE'' and
uu.role_id in (select id from um_role_master where code =''FHW'' )
group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
	select max(service_date) as service_date,services.member_id from rch_member_services services
	inner join analytics a on a.member_id = services.member_id
	group by services.member_id 
),
lastServiceUnique as(
	select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
	where service.member_id = last.member_id
	group by service.member_id, last.service_date
),
lastServiceDetails as (
	select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
	service.location_id,
	location.name as locationName,
	case when service.service_type =''FHW_LMP'' then ''LMP Visit''
		when  service.service_type =''FHW_ANC'' then ''ANC Visit''
		  when service.service_type = ''FHW_PNC'' then ''PNC Visit''
		  when service.service_type = ''FHW_CS'' then ''Child Service''
		  when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
	end as service_type,
	service.member_id 
	from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id
	
	inner join location_master location on service.location_id = location.id
	
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName"
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id',true,'ACTIVE',NULL,true,'52397373-8bcd-4978-87f0-da2a1063d7c6'),
	 (75398,'2020-07-13 00:00:00',75398,'2020-07-13 00:00:00','covid19_admin_get_all_lab_tests','searchText,offset,healthInfra,limit,wardId,collectionDate','with idsp_screening as (
select
	distinct on (clt.id)clt.id as "id",
	ltd.id as lab_id,
	ltd.lab_test_id as lab_test_id,
	ltd.lab_result as lab_result,
	ltd.lab_collection_status as lab_collection_status,
        ltd.lab_result_entry_on as lab_result_entry_on,
	ltd.lab_collection_on as lab_collection_on,
	ltd.lab_test_number as lab_test_number,
	clt.location_id as loc_id,
	imt_member.id as member_id,
	case when clt.member_id is null
		then concat_ws('' '',clt.first_name,clt.middle_name,clt.last_name)
		else concat(concat_ws('' '',imt_member.first_name,imt_member.middle_name,imt_member.last_name)
			, '' ('' , imt_member.unique_health_id , '')'' , ''<br>'' , imt_member.family_id) end as member_det,
	concat(case when clt.member_id is null
		then cast(clt.age as text)
		else cast(EXTRACT(YEAR FROM age(imt_member.dob)) as text) end,'' Year'') as age,
	to_char(clt.admission_date,''DD/MM/YYYY'') as admission_date,
	hiwd.ward_name,
	sample_from."name_in_english" as sample_from_health_infra,
	sample_from.is_covid_lab,
	clt.current_ward_id as ward_id,
	cacd.on_ventilator as on_ventilator,
	cacd.ventilator_type1 as ventilator_type1,
	cacd.ventilator_type2 as ventilator_type2,
	cacd.on_o2 as on_o2,
	cacd.on_air as on_air,
	cacd.remarks as remarks,
	clt.is_hiv as hiv,
	clt.current_bed_no,
        clt.admission_from,
        clt.status,
	(select name_in_english from health_infrastructure_details where id = clt.health_infra_id) as health_infra_name,
        (select name_in_english from health_infrastructure_details where id = clt.suggested_health_infra) as suggested_health_infra,
	(select name_in_english from health_infrastructure_details where id = referDetail.refer_to_health_infra_id) as trasfer_hospital_name,
	cacd.health_status as health_status,
	cacd.service_date as last_check_up_time
	from covid19_lab_test_detail ltd
	inner join covid19_admission_detail clt on ltd.covid_admission_detail_id = clt.id
	left join health_infrastructure_ward_details hiwd on hiwd.id = clt.current_ward_id
	left join covid19_admitted_case_daily_status cacd on cacd.id = clt.last_check_up_detail_id
	left join health_infrastructure_details sample_from on sample_from.id = ltd.sample_health_infra
	left join imt_member on clt.member_id = imt_member.id
	left join imt_family on imt_member.family_id = imt_family.family_id
	left join covid19_admission_refer_detail referDetail on referDetail.admission_id =  clt.id
	where
	(case when #searchText# != null and #searchText# != '''' then ltd.search_text ilike concat(''%'',#searchText#,''%'') else true end)
	and (case when #healthInfra# != null and #healthInfra# != '''' then sample_from.name_in_english ilike concat(''%'',#healthInfra#,''%'') else true end)
	and (case when #collectionDate# != null and #collectionDate# != '''' then cast(ltd.lab_collection_on as date) = #collectionDate# else true end)
	and (case when #wardId# != null and #wardId# != '''' then hiwd.ward_name = #wardId# else true end)
	order by  clt.id,ltd.id
	limit #limit# offset #offset#
)
select
id as "admissionId"
,lab_id as "labCollectionId"
,lab_test_id as "labTestId"
,lab_result as "labResult"
,lab_collection_status as "labCollectionStatus"
,to_char(lab_result_entry_on,''DD/MM/YYYY'') as "labResultEntryOn"
,to_char(lab_collection_on,''DD/MM/YYYY'') as "labCollectionOn"
,lab_test_number as "labTestNumber"
,member_id as "memberId"
,loc_id as "locationId"
,member_det as "memberDetail"
,age as "age"
,admission_date as "admissionDate"
,ward_name as "wardName"
,ward_id as "wardId"
,current_bed_no as "bedNumber"
,admission_from as "admissionFrom"
,status as "admissionStatus"
,health_infra_name as "healthInfraName"
,suggested_health_infra as "suggestedHealthInfraName"
,trasfer_hospital_name as "trasferHospitalName"
,health_status as "healthStatus"
,to_char(last_check_up_time,''DD/MM/YYYY'') as "lastCheckUpTime"
,on_ventilator
,ventilator_type1
,ventilator_type2
,on_o2
,on_air
,remarks
,hiv
,sample_from_health_infra as "sampleFrom"
,is_covid_lab as "isSameHealthInfrastructure"
from idsp_screening;',true,'ACTIVE',NULL,true,'dbf0a4d8-f2ab-4955-b7ca-f00844a0b3f5'),
	 (60512,'2020-07-03 00:00:00',60512,'2020-07-14 13:09:32.176','family_report_detail','family_ids','with family_details as (
	select imt_family.family_id,
	imt_family.location_id,
	concat(hof.first_name,'' '',hof.last_name) as hof,
	hof.mobile_number as hof_contact_details,
	religion.value as religion,
	caste.value as caste,
	imt_family.bpl_flag,
	imt_family.rsby_card_number,
	imt_family.migratory_flag,
	imt_family.toilet_available_flag,
	imt_family.maa_vatsalya_number,
	concat(imt_family.address1,''<br/>'',imt_family.address2) as address,
	imt_family.house_number
	from imt_family
	left join imt_member hof on imt_family.hof_id = hof.id
	left join listvalue_field_value_detail religion on cast(imt_family.religion as integer) = religion.id
	left join listvalue_field_value_detail caste on cast(imt_family.caste as integer) = caste.id
	where imt_family.family_id in (#family_ids#)
),location_details as (
	select family_details.family_id,
	cast(
		json_agg(
			json_build_object(
				''location_type'',location_type_master.name,
				''location_name'',location_master.name
			) order by level
		) as text
	) as loc_details
	from family_details
	inner join location_hierchy_closer_det on family_details.location_id = location_hierchy_closer_det.child_id
	inner join location_master on location_hierchy_closer_det.parent_id = location_master.id
	inner join location_type_master on location_master.type = location_type_master.type
	group by family_details.family_id
),member_details as (
	select family_details.family_id,
	cast(
		json_agg(
			json_build_object(
				''id'',imt_member.id,
				''name'',concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name),
				''unique_health_id'',imt_member.unique_health_id,
				''year'',extract(year from age(imt_member.dob)),
				''month'',extract(month from age(imt_member.dob)),
				''day'',extract(day from age(imt_member.dob)),
				''gender'',imt_member.gender,
				''marital_status'',imt_member.marital_status,
				''is_pregnant'',imt_member.is_pregnant,
				''family_planning_method'',imt_member.family_planning_method,
				''education_status'',imt_member.education_status,
				''mobile_number'',imt_member.mobile_number,
				''account_number'',imt_member.account_number,
				''ifsc'',imt_member.ifsc,
				''eye_issue_detail'',(select string_agg(eye_issues.value,'','')
									from imt_member_eye_issue_rel
									inner join listvalue_field_value_detail eye_issues on imt_member_eye_issue_rel.eye_issue_id = eye_issues.id
									where imt_member_eye_issue_rel.member_id = imt_member.id),
				''chronic_disease_detail'',(select string_agg(eye_issues.value,'','')
									from imt_member_chronic_disease_rel
									inner join listvalue_field_value_detail eye_issues on imt_member_chronic_disease_rel.chronic_disease_id = eye_issues.id
									where imt_member_chronic_disease_rel.member_id = imt_member.id),
				''current_disease_detail'',(select string_agg(eye_issues.value,'','')
									from imt_member_current_disease_rel
									inner join listvalue_field_value_detail eye_issues on imt_member_current_disease_rel.current_disease_id = eye_issues.id
									where imt_member_current_disease_rel.member_id = imt_member.id)
			)
		) as text
	) as member_detail
	from family_details
	inner join imt_member on family_details.family_id = imt_member.family_id
	group by family_details.family_id
)
select family_details.*,
location_details.loc_details,
member_details.member_detail
from family_details
left join location_details on family_details.family_id = location_details.family_id
left join member_details on family_details.family_id = member_details.family_id',true,'ACTIVE','retrieve family wise report for print',true,'9e201501-45f2-4861-bb1b-376d4ad4afb8'),
	 (75398,'2020-07-13 00:00:00',75398,'2020-07-13 00:00:00','emo_dashboard_retrieve_referred_for_covid_lab_test','searchText,offset,limit,loggedInUserId','with idsp_screening as (
	select
	clt.id as "id",
	clt.source as "source",
	idsp.location_id as loc_id,
	m.family_id,
	m.id as member_id,
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name || '' ('' || m.unique_health_id || '')'' || ''<br>'' || m.family_id as member_det,
	concat(to_char(m.dob, ''DD/MM/YYYY''),''('',EXTRACT(YEAR FROM age(m.dob)),'')'') as dob,
	(case when ref_by.id is null then ''N/A'' 
		else concat(concat_ws('' '',ref_by.first_name,ref_by.middle_name,ref_by.last_name),'' ('',ref_by.contact_number,'')'',''<BR>('',ref_by.user_name,'') ('',urm.name,'')'') end) as reffer_by,
	(case when idsp.is_cough = 1 then true else false end) as is_cough,
	(case when idsp.is_any_illness_or_discomfort = 1 then true else false end) as is_any_illness_or_discomfort,
	(case when idsp.is_breathlessness = 1 then true else false end) as breathlessness,
	(case when idsp.is_fever = 1 then true else false end) as is_fever,
	(case when idsp.has_travel = 1 then ''Local'' 
		when idsp.has_travel=2 then concat(''International'',(case when idsp.country is not null then concat('' ('',idsp.country,'')'') end))
		else ''No'' end) as travel,
	concat_ws('','', address1, address2) as address,
	m.mobile_number as contact_person
	from covid19_lab_test_recommendation clt
	inner join imt_member m on clt.member_id = m.id
	inner join imt_family f on f.family_id = m.family_id
	left join um_user ref_by on ref_by.id = clt.reffer_by
	left join um_role_master urm on urm.id = ref_by.role_id
	left join idsp_screening_analytics idsp on clt.member_id = idsp.member_id
	where clt.lab_test_status = ''PENDING''
        and (#searchText# = null OR clt.search_text ilike concat(''%'',#searchText#,''%''))
	and clt.location_id in (select child_id from location_hierchy_closer_det lhc where parent_id in (select loc_id from um_user_location ul where ul.state = ''ACTIVE'' and ul.user_id = #loggedInUserId#))
	order by idsp.member_id
	limit #limit# offset #offset#
),contact_person as (
	select distinct on(a.member_id) a.member_id as id,
	 concat( contact_person.first_name, '' '', contact_person.middle_name, '' '', contact_person.last_name,
		'' ('', case when contact_person.mobile_number is null then ''N/A'' else contact_person.mobile_number end, '')'' ) as contactPersonMobileNo
	from imt_member contact_person
	inner join idsp_screening a on a.family_id = contact_person.family_id
	where contact_person.basic_state in (''NEW'',''IDSP'',''VERIFIED'') and contact_person.id != a.member_id and a.contact_person is null
	order by a.member_id,contact_person.dob
),
loc as (
	select distinct loc_id from idsp_screening
),
loc_det as (
	select loc.loc_id, get_location_hierarchy_from_ditrict(loc.loc_id) as aoi
	from loc
)/*, fhw_det as (
	select loc.loc_id,
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>''
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id in (select id from um_role_master where name in (''MO UPHC'', ''MO PHC''))
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)*/
select 
ROW_NUMBER() over () + #offset# as "srNo",
idsp_screening.id as "id",
idsp_screening.source as "source",
idsp_screening.member_det as "memberDetails",
loc_det.aoi as "location",
(case when idsp_screening.contact_person is not null then idsp_screening.contact_person else contact_person.contactPersonMobileNo end) as "contactPersonMobileNo",
idsp_screening.dob as "dob",
idsp_screening.address as "address",
idsp_screening.is_cough as "hasCough",
idsp_screening.is_fever as "hasFever",
idsp_screening.breathlessness as "hasBreathlessness",
idsp_screening.travel as "hasTravelHistory",
idsp_screening.reffer_by as "refferBy"
/*fhw_det.fhw as "moDetails"*/
from idsp_screening
left join contact_person on contact_person.id = idsp_screening.id
inner join loc_det on idsp_screening.loc_id = loc_det.loc_id;',true,'ACTIVE',NULL,true,'dbfb3a58-c7e4-4ba8-bba5-bd461686abd9'),
	 (84954,'2019-09-13 10:35:43.981',84954,'2020-07-27 17:49:32.507','state_of_health_get_sam_detail_2','fromDate,toDate,limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
rcad.member_id as member_id,
case when rcad.last_sd_score is null then ''N/A'' else rcad.last_sd_score end as "z_score",
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
to_char(rcad.sam_child_date, ''DD-MM-YYYY'')as sam_child_date,
rcad.loc_id
from rch_child_analytics_details rcad,imt_member m
where rcad.loc_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and rcad.sam_child_date between ''#fromDate#'' and ''#toDate#''
and m.id = rcad.member_id 
limit #limit#),
child_details_height_service as (
	select max(service.id) as id
	from rch_child_service_master service
	where service.member_id in (select member_id from analytics)
	and service.height is not null 
        group by service.member_id
),
child_details_height as (
	select service.id,service.member_id,
	cast(service.height as text) as height
	from rch_child_service_master service inner join child_details_height_service service_height on service.id =  service_height.id
	where service.member_id in (select member_id from analytics)
	
),
child_details_weight_service as (
	select max(service.id) as id
	from rch_child_service_master service
	where service.member_id in (select member_id from analytics)
	and service.weight is not null 
        group by service.member_id
),
child_details_weight as (
	select service.id,service.member_id,
	service.weight
	from rch_child_service_master service inner join child_details_weight_service service_weight on service.id =  service_weight.id
	where service.member_id in (select member_id from analytics)
	
),
child_details_musc_service as (
	select max(service.id) as id
	from rch_child_service_master service
	where service.member_id in (select member_id from analytics)
	and service.mid_arm_circumference is not null 
        group by service.member_id
),
child_details_musc as (
	select service.id,service.member_id,
	cast(service.mid_arm_circumference as text) as musc
	from rch_child_service_master service inner join child_details_musc_service service_musc on service.id =  service_musc.id
	where service.member_id in (select member_id from analytics)
	
),
family_head as (
	select a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id 
	where family_head = true and 
        im.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'',''TEMPORARY'')
),
pedal_edoema_serivce as (
		select max(service.id) as id
		from rch_child_service_master service
		where service.member_id in (select member_id from analytics)
		and service.have_pedal_edema is not null 
	        group by service.member_id
	),
	pedal_edoema as (
		select service.id,service.member_id,
		service.have_pedal_edema as have_pedal_edema 
		from rch_child_service_master service inner join pedal_edoema_serivce service_edoema on service.id =  service_edoema.id
		where service.member_id in (select member_id from analytics)
	),
	medical_complications as (
		select service.member_id,
		string_agg(lfvd.value, '','') as diseases
		from rch_child_service_master service 
		inner join rch_child_service_diseases_rel diseases_rel on diseases_rel.child_service_id = service.id
		inner join listvalue_field_value_detail lfvd on lfvd.id = diseases_rel.diseases
		where service.member_id in (select member_id from analytics)
		group by service.member_id
	),
contact_person as (
	select a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
	inner join anmLocation a on  uld.loc_id = a.location_id
	inner join um_user uu on uu.id = uld.user_id 
where 
uld.state = ''ACTIVE'' and uu.state=''ACTIVE'' and
uu.role_id in (select id from um_role_master where code =''FHW'' )
	group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
	select max(service_date) as service_date,services.member_id from rch_member_services services
	inner join analytics a on a.member_id = services.member_id
	group by services.member_id 
),
lastServiceUnique as(
	select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
	where service.member_id = last.member_id
	group by service.member_id, last.service_date
),
lastServiceDetails as (
	select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
	service.location_id,
	location.name as locationName,
	case when service.service_type =''FHW_LMP'' then ''LMP Visit''
		when  service.service_type =''FHW_ANC'' then ''ANC Visit''
		  when service.service_type = ''FHW_PNC'' then ''PNC Visit''
		  when service.service_type = ''FHW_CS'' then ''Child Service''
		  when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
	end as service_type,
	service.member_id 
	from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id
	
	inner join location_master location on service.location_id = location.id
	
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
a.sam_child_date as "val_SAM Child Date",
case when hight.height is not null then CONCAT(hight.height, '' '', ''CM'') else hight.height end as "height",
weight.weight as "weight",
case when edo.have_pedal_edema then ''Yes'' when edo.have_pedal_edema is false then ''No'' else ''-'' end as "val_Pedal Edema",
case when musc.musc is not null then CONCAT(musc.musc, '' '', ''CM'') else musc.musc end as "muac",
service.locationName as "LastServiceLocationName",
case when mco.diseases is null then ''-'' else mco.diseases end as "val_Medical Complications"

from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id
left join child_details_height hight on a.member_id = hight.member_id 
left join child_details_weight weight on a.member_id = weight.member_id 
left join child_details_musc musc on a.member_id = musc.member_id
left join pedal_edoema edo on edo.member_id = a.member_id
left join medical_complications mco on mco.member_id = a.member_id',true,'ACTIVE',NULL,true,'51bfc26d-1d53-4e87-b479-6a9325768410'),
	 (75398,'2020-07-13 00:00:00',75398,'2020-07-13 00:00:00','covid19_get_suspected_admitted_patient_list','searchText,offset,limit,loggedInUserId','with idsp_screening as (
select
	clt.id as "id",
	clt.location_id as loc_id,
	imt_member.id as member_id,
	case when clt.member_id is null 
		then concat_ws('' '',clt.first_name,clt.middle_name,clt.last_name)
		else concat(concat_ws('' '',imt_member.first_name,imt_member.middle_name,imt_member.last_name)
			, '' ('' , imt_member.unique_health_id , '')'' , ''<br>'' , imt_member.family_id) end as member_det,
	concat(case when clt.member_id is null 
		then clt.age
		else EXTRACT(YEAR FROM age(imt_member.dob)) end,'' Year'') as dob,
	to_char(clt.admission_date,''DD/MM/YYYY'') as admission_date,
	hiwd.ward_name,
	clt.current_ward_id as ward_id,
	cacd.on_ventilator as on_ventilator,
	cacd.ventilator_type1 as ventilator_type1,
	cacd.ventilator_type2 as ventilator_type2,
	cacd.on_o2 as on_o2,
	cacd.on_air as on_air,
	cacd.remarks as remarks,
	clt.current_bed_no,
	cltd.lab_collection_status as test_result,
	(case when cltd.lab_collection_status in (''COLLECTION_PENDING'',''SAMPLE_COLLECTED'',''SAMPLE_ACCEPTED'') then true else false end) as "isLabTestInProgress",
	cacd.health_status as health_status,
	cacd.service_date as last_check_up_time,
	clt.is_hiv,
	clt.is_heart_patient,
	clt.is_diabetes ,
	clt.is_copd,
	clt.is_renal_condition,
	clt.is_hypertension,
	clt.is_immunocompromized,
	clt.is_malignancy,
	clt.is_other_co_mobidity,
	clt.other_co_mobidity,
	clt.is_fever,
	clt.is_cough,
	clt.is_breathlessness,
	clt.is_sari,
        clt.case_no
	from covid19_admission_detail clt
	inner join health_infrastructure_ward_details hiwd on hiwd.id = clt.current_ward_id
	inner join covid19_admitted_case_daily_status cacd on cacd.id = clt.last_check_up_detail_id
	inner join covid19_lab_test_detail cltd on cltd.id = clt.last_lab_test_id
	left join imt_member on clt.member_id = imt_member.id
	left join imt_family on imt_member.family_id = imt_family.family_id
	where
	clt.health_infra_id = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = #loggedInUserId# and uhi.state = ''ACTIVE'')
	and clt.status in (''SUSPECT'')
	and (#searchText# = null OR clt.search_text ilike concat(''%'',#searchText#,''%''))
	order by cacd.service_date
	limit #limit# offset #offset#
)
select 
id as "admissionId" 
,member_id as "memberId"
,loc_id as "locationId"
,member_det as "memberDetail"
,dob as "DOB"
,admission_date as "admissionDate"
,ward_name as "wardName"
,ward_id as "wardId"
,current_bed_no as "bedNumber"
,test_result as "testResult"
,health_status as "healthStatus"
,to_char(last_check_up_time,''DD/MM/YYYY'') as "lastCheckUpTime"
,on_ventilator as "onVentilator"
,ventilator_type1 as "ventilatorType1"
,ventilator_type2 as "ventilatorType2"
,on_o2 as "onO2"
,on_air as "onAir"
,remarks
,"isLabTestInProgress"
,is_hiv as "isHIV"
,is_heart_patient as "isHeartPatient"
,is_diabetes as "isDiabetes"
,is_copd as "isCOPD"
,is_renal_condition as "isRenalCondition"
,is_hypertension as "isHypertension"
,is_immunocompromized as "isImmunocompromized"
,is_malignancy as "isMalignancy"
,is_other_co_mobidity as "isOtherCoMobidity"
,other_co_mobidity as "otherCoMobidity"
,is_fever as "hasFever"
,is_cough as "hasCough"
,is_breathlessness as "hasShortnessBreath"
,is_sari as "isSari"
,case_no as "caseNo"
from idsp_screening;',true,'ACTIVE',NULL,true,'2ba6a8ab-48aa-46f3-b439-6d1a27f454a7'),
	 (75398,'2020-07-13 00:00:00',75398,'2020-07-13 00:00:00','covid19_get_pending_admission_for_lab_test','searchText,offset,limit,loggedInUserId','with idsp_screening as (
select
	clt.id as "id",
	clt.location_id as loc_id,
	imt_member.id as member_id,
	case when clt.member_id is null 
		then concat_ws('' '',clt.first_name,clt.middle_name,clt.last_name)
		else concat(concat_ws('' '',imt_member.first_name,imt_member.middle_name,imt_member.last_name)
			, '' ('' , imt_member.unique_health_id , '')'' , ''<br>'' , imt_member.family_id) end as member_det,
	clt.first_name,
	clt.middle_name,
	clt.last_name,
	clt.age,
	clt.age_month,
	clt.address,
	clt.gender,
	concat(case when clt.member_id is null 
		then clt.age
		else EXTRACT(YEAR FROM age(imt_member.dob)) end,'' Year'') as dob,
	to_char(clt.admission_date,''DD/MM/YYYY'') as admission_date,
	clt.contact_number,
	hiwd.ward_name,
	clt.current_ward_id as ward_id,
	clt.current_bed_no,
	clt.unit_no,
	cltd.lab_collection_status as test_result,
	(case when cltd.lab_collection_status in (''COLLECTION_PENDING'',''SAMPLE_COLLECTED'',''SAMPLE_ACCEPTED'') then true else false end) as "isLabTestInProgress",
	cacd.health_status as health_status,
	cacd.service_date as last_check_up_time,
	clt.is_hiv,
	clt.is_heart_patient,
	clt.is_diabetes ,
	clt.is_copd,
	clt.is_renal_condition,
	clt.is_hypertension,
	clt.is_immunocompromized,
	clt.is_malignancy,
	clt.is_other_co_mobidity,
	clt.other_co_mobidity,
	clt.is_fever,
	clt.is_cough,
	clt.is_breathlessness,
	clt.is_sari,
concat(case when clt.is_fever 
		then ''Fever, '' else '''' end,
                 case when clt.is_cough 
		then ''Cough, '' else '''' end,
 case when clt.is_breathlessness 
		then ''Shortness of Breath, '' else '''' end,
 case when clt.is_sari 
		then ''SARI'' else '''' end
		) as symptoms,
        clt.case_no,
	clt.emergency_contact_name,
	clt.emergency_contact_no,
	clt.pregnancy_status,
	clt.date_of_onset_symptom,
	clt.occupation,
	clt.opd_case_no,
	clt.is_migrant,
	clt.indications,
	clt.indication_other,
	concat(clt.travel_history,clt.travelled_place) as travel,
(case when ref_by.id is null then ''N/A'' 
		else concat(concat_ws('' '',ref_by.first_name,ref_by.middle_name,ref_by.last_name),'' ('',ref_by.contact_number,'')'',''<BR>('',ref_by.user_name,'')'') end) as reffer_by
	from covid19_admission_detail clt
	left join health_infrastructure_ward_details hiwd on hiwd.id = clt.current_ward_id
	inner join covid19_admitted_case_daily_status cacd on cacd.id = clt.last_check_up_detail_id
	inner join covid19_lab_test_detail cltd on cltd.id = clt.last_lab_test_id
	left join imt_member on clt.member_id = imt_member.id
	left join imt_family on imt_member.family_id = imt_family.family_id
        left join um_user ref_by on ref_by.id = clt.admission_entry_by
	where
	clt.suggested_health_infra = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = #loggedInUserId# and uhi.state = ''ACTIVE'')
	and clt.admission_from = ''OPD_ADMIT''
	and cltd.lab_collection_status = ''POSITIVE''
	and clt.health_infra_id is null
	and (#searchText# = null OR clt.search_text ilike concat(''%'',#searchText#,''%''))
	order by cacd.service_date
	limit #limit# offset #offset#
)
select 
id as "id"
,''opdAdmit'' as "type" 
,member_id as "memberId"
,loc_id as "districtLocationId"
,get_location_hierarchy_from_ditrict(loc_id) as "location"
,member_det as "memberDetails"
,first_name as "firstname"
,middle_name as "middlename"
,last_name as "lastname"
,dob as "dob"
,age as "age"
,age_month as "ageMonth"
,admission_date as "admissionDate"
,contact_number as "contact_no"
,address as "address"
,gender as "gender"
,ward_name as "wardName"
,ward_id as "wardId"
,current_bed_no as "bedNumber"
,unit_no as "unitNo"
,test_result as "testResult"
,health_status as "healthStatus"
,to_char(last_check_up_time,''DD/MM/YYYY'') as "lastCheckUpTime"
,"isLabTestInProgress"
,is_hiv as "isHIV"
,is_heart_patient as "isHeartPatient"
,is_diabetes as "isDiabetes"
,is_copd as "isCOPD"
,is_renal_condition as "isRenalCondition"
,is_hypertension as "isHypertension"
,is_immunocompromized as "isImmunocompromized"
,is_malignancy as "isMalignancy"
,is_other_co_mobidity as "isOtherCoMobidity"
,other_co_mobidity as "otherCoMobidity"
,is_fever as "hasFever"
,is_cough as "hasCough"
,is_breathlessness as "hasShortnessBreath"
,is_sari as "isSari"
,case_no as "caseNo"
,emergency_contact_name as "emergencyContactName"
,emergency_contact_no as "emergencyContactNo"
,pregnancy_status as "pregnancyStatus"
,date_of_onset_symptom as "date_of_onset_symptom"
,occupation as "occupation"
,opd_case_no as "opdCaseNo"
,is_migrant as "isMigrant"
,indications as "indications"
,indication_other as "indicationOther"
,travel as "hasTravelHistory",
reffer_by as "refferBy",
null as "labTestStatus",
symptoms 
from idsp_screening



UNION ALL



(with idsp_screening as (
	select
	clt.id as "id",
        idsp.location_id as loc_id,
	m.family_id,
	m.id as member_id,
	m.gender,
	m.first_name,
	m.middle_name,
	m.last_name,
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name || '' ('' || m.unique_health_id || '')'' || ''<br>'' || m.family_id as member_det,
	concat(to_char(m.dob, ''DD/MM/YYYY''),''('',EXTRACT(YEAR FROM age(m.dob)),'')'') as dob,
EXTRACT(YEAR FROM age(m.dob)) as age,
	(case when ref_by.id is null then ''N/A'' 
		else concat(concat_ws('' '',ref_by.first_name,ref_by.middle_name,ref_by.last_name),'' ('',ref_by.contact_number,'')'',''<BR>('',ref_by.user_name,'')'') end) as reffer_by,
	(case when idsp.is_cough = 1 then true else false end) as is_cough,
	(case when idsp.is_any_illness_or_discomfort = 1 then true else false end) as is_any_illness_or_discomfort,
	(case when idsp.is_breathlessness = 1 then true else false end) as breathlessness,
	(case when idsp.is_fever = 1 then true else false end) as is_fever,
concat(case when  idsp.is_fever = 1 
		then ''Fever, '' else '''' end,
                 case when  idsp.is_cough = 1 
		then ''Cough, '' else '''' end,
 case when idsp.is_breathlessness = 1
		then ''Shortness of Breath '' else '''' end
		) as symptoms,
	(case when idsp.has_travel = 1 then ''Local'' 
		when idsp.has_travel=2 then concat(''International'',(case when idsp.country is not null then concat('' ('',idsp.country,'')'') end))
		else ''No'' end) as travel,
	concat_ws('','', address1, address2) as address,
	m.mobile_number as contact_person,
	clt.lab_test_status
	from covid19_lab_test_recommendation clt
	inner join imt_member m on clt.member_id = m.id
	inner join imt_family f on f.family_id = m.family_id
	left join um_user ref_by on ref_by.id = clt.refer_health_infra_entry_by
	left join idsp_screening_analytics idsp on clt.member_id = idsp.member_id
	where clt.refer_health_infra_id is not null
	and clt.admission_id is null
	--and cld.refer_health_infra_id in (select id from user_health_infrastructure uhi where uhi.user_id = #loggedInUserId# and uhi.state = ''ACTIVE'')
	order by idsp.member_id
	limit #limit# offset #offset#
),contact_person as (
	select distinct on(a.member_id) a.member_id as id,
	 concat( contact_person.first_name, '' '', contact_person.middle_name, '' '', contact_person.last_name,
		'' ('', case when contact_person.mobile_number is null then ''N/A'' else contact_person.mobile_number end, '')'' ) as contactPersonMobileNo
	from imt_member contact_person
	inner join idsp_screening a on a.family_id = contact_person.family_id
	where contact_person.basic_state in (''NEW'',''IDSP'',''VERIFIED'') and contact_person.id != a.member_id and a.contact_person is null
	order by a.member_id,contact_person.dob
),
loc as (
	select distinct loc_id from idsp_screening
),
loc_det as (
	select loc.loc_id, get_location_hierarchy_from_ditrict(loc.loc_id) as aoi
	from loc
)
select 
idsp_screening.id as "id",
''refer'' as "type",
idsp_screening.member_id as "memberId",
idsp_screening.loc_id as "districtLocationId",
get_location_hierarchy_from_ditrict(idsp_screening.loc_id) as "location",
idsp_screening.member_det as "memberDetails",
idsp_screening.first_name as "firstname",
idsp_screening.middle_name as "middlename",
idsp_screening.last_name as "lastname",
idsp_screening.dob as "dob"
,idsp_screening.age  as "age"
,null as "ageMonth"
,null as "admissionDate"
,(case when idsp_screening.contact_person is not null then idsp_screening.contact_person else contact_person.contactPersonMobileNo end) as "contact_no",
idsp_screening.address as "address",
idsp_screening.gender
,null as "wardName"
,null as "wardId"
,null as "bedNumber"
,null as "unitNo"
,null as "testResult"
,null as "healthStatus"
,null as "lastCheckUpTime"
,null as "isLabTestInProgress"
,null as "isHIV"
,null as "isHeartPatient"
,null as "isDiabetes"
,null as "isCOPD"
,null as "isRenalCondition"
,null as "isHypertension"
,null as "isImmunocompromized"
,null as "isMalignancy"
,null as "isOtherCoMobidity"
,null as "otherCoMobidity"
,idsp_screening.is_cough as "hasCough",
idsp_screening.is_fever as "hasFever",
idsp_screening.breathlessness as "hasBreathlessness"
,null as "isSari"
,null as "caseNo"
,null as "emergencyContactName"
,null as "emergencyContactNo"
,null as "pregnancyStatus"
,null as "date_of_onset_symptom"
,null as "occupation"
,null as "opdCaseNo"
,null as "isMigrant"
,null as "indications"
,null as "indicationOther"
,idsp_screening.travel as "hasTravelHistory",
idsp_screening.reffer_by as "refferBy",
idsp_screening.lab_test_status as "labTestStatus",
idsp_screening.symptoms as "symptoms"
from idsp_screening
left join contact_person on contact_person.id = idsp_screening.id
inner join loc_det on idsp_screening.loc_id = loc_det.loc_id
)',true,'ACTIVE',NULL,true,'0ae6165b-373c-4c3e-bf71-c6d283b612ac'),
	 (60512,'2021-09-21 00:00:00',60512,'2021-09-21 00:00:00','delete_je_vaccine_summary','loggedInUserId,id','update rch_je_vaccine_service
set state = ''INACTIVE'',
modified_by = #loggedInUserId#,
modified_on = now()
where id = #id#',false,'ACTIVE',NULL,true,'10ec7123-c253-4e68-822c-622a8638bc4e'),
	 (75398,'2020-07-13 00:00:00',75398,'2020-07-13 00:00:00','covid19_get_confirmed_admitted_patient_list','searchText,offset,limit,loggedInUserId','with idsp_screening as (
select
	clt.id as "id",
	clt.location_id as loc_id,
	imt_member.id as member_id,
	case when clt.member_id is null 
		then concat_ws('' '',clt.first_name,clt.middle_name,clt.last_name)
		else concat(concat_ws('' '',imt_member.first_name,imt_member.middle_name,imt_member.last_name)
			, '' ('' , imt_member.unique_health_id , '')'' , ''<br>'' , imt_member.family_id) end as member_det,
	concat(case when clt.member_id is null 
		then clt.age
		else EXTRACT(YEAR FROM age(imt_member.dob)) end,'' Year'') as dob,
	to_char(clt.admission_date,''DD/MM/YYYY'') as admission_date,
	hiwd.ward_name,
	clt.current_ward_id as ward_id,
	cacd.on_ventilator as on_ventilator,
	cacd.ventilator_type1 as ventilator_type1,
	cacd.ventilator_type2 as ventilator_type2,
	cacd.on_o2 as on_o2,
	cacd.on_air as on_air,
	cacd.remarks as remarks,
	clt.current_bed_no,
	cltd.lab_collection_status as test_result,
	(case when cltd.lab_collection_status in (''COLLECTION_PENDING'',''SAMPLE_COLLECTED'',''SAMPLE_ACCEPTED'') then true else false end) as "isLabTestInProgress",
	cacd.health_status as health_status,
	cacd.service_date as last_check_up_time,
	clt.is_hiv,
	clt.is_heart_patient,
	clt.is_diabetes ,
	clt.is_copd,
	clt.is_renal_condition,
	clt.is_hypertension,
	clt.is_immunocompromized,
	clt.is_malignancy,
	clt.is_other_co_mobidity,
	clt.other_co_mobidity,
	clt.is_fever,
	clt.is_cough,
	clt.is_breathlessness,
	clt.is_sari,
        clt.case_no
	from covid19_admission_detail clt
	left join health_infrastructure_ward_details hiwd on hiwd.id = clt.current_ward_id
	inner join covid19_admitted_case_daily_status cacd on cacd.id = clt.last_check_up_detail_id
	inner join covid19_lab_test_detail cltd on cltd.id = clt.last_lab_test_id
	left join imt_member on clt.member_id = imt_member.id
	left join imt_family on imt_member.family_id = imt_family.family_id
	where
	clt.health_infra_id = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = #loggedInUserId# and uhi.state = ''ACTIVE'')
	and clt.status in (''CONFORMED'')
        and (#searchText# = null OR clt.search_text ilike concat(''%'',#searchText#,''%''))
	order by cacd.service_date
	limit #limit# offset #offset#
)
,intial_lab_test as(
select DISTINCT on(cltd.covid_admission_detail_id)cltd.covid_admission_detail_id as admission_id,lab_collection_status as initial_result
from idsp_screening isr
left join covid19_lab_test_detail cltd on cltd.covid_admission_detail_id = isr.id
order by cltd.covid_admission_detail_id,cltd.id
)
select 
id as "admissionId" 
,member_id as "memberId"
,loc_id as "locationId"
,member_det as "memberDetail"
,dob as "DOB"
,admission_date as "admissionDate"
,ward_name as "wardName"
,ward_id as "wardId"
,current_bed_no as "bedNumber"
,test_result as "testResult"
,intial_lab_test.initial_result as "initialResult"
,health_status as "healthStatus"
,to_char(last_check_up_time,''DD/MM/YYYY'') as "lastCheckUpTime"
,on_ventilator as "onVentilator"
,ventilator_type1 as "ventilatorType1"
,ventilator_type2 as "ventilatorType2"
,on_o2 as "onO2"
,on_air as "onAir"
,remarks
,"isLabTestInProgress"
,is_hiv as "isHIV"
,is_heart_patient as "isHeartPatient"
,is_diabetes as "isDiabetes"
,is_copd as "isCOPD"
,is_renal_condition as "isRenalCondition"
,is_hypertension as "isHypertension"
,is_immunocompromized as "isImmunocompromized"
,is_malignancy as "isMalignancy"
,is_other_co_mobidity as "isOtherCoMobidity"
,other_co_mobidity as "otherCoMobidity"
,is_fever as "hasFever"
,is_cough as "hasCough"
,is_breathlessness as "hasShortnessBreath"
,is_sari as "isSari"
,case_no as "caseNo"
from idsp_screening
inner join intial_lab_test on idsp_screening.id = intial_lab_test.admission_id;',true,'ACTIVE',NULL,true,'8e03a63b-cd4f-48cf-8cca-c81b9331a964'),
	 (75398,'2020-07-13 00:00:00',75398,'2020-07-13 00:00:00','covid19_get_refer_in_patient_list','searchText,offset,limit,loggedInUserId','with idsp_screening as (
select
	clt.id as "id",
card.id as ref_id,
	clt.location_id as loc_id,
	imt_member.id as member_id,
	case when clt.member_id is null 
		then concat_ws('' '',clt.first_name,clt.middle_name,clt.last_name)
		else concat(concat_ws('' '',imt_member.first_name,imt_member.middle_name,imt_member.last_name)
			, '' ('' , imt_member.unique_health_id , '')'' , ''<br>'' , imt_member.family_id) end as member_det,
	concat(case when clt.member_id is null 
		then clt.age
		else EXTRACT(YEAR FROM age(imt_member.dob)) end,'' Year'') as dob,
	to_char(clt.admission_date,''DD/MM/YYYY'') as admission_date,
	hiwd.ward_name,
	clt.current_ward_id as ward_id,
	cacd.on_ventilator as on_ventilator,
	cacd.ventilator_type1 as ventilator_type1,
	cacd.ventilator_type2 as ventilator_type2,
	cacd.on_o2 as on_o2,
	cacd.on_air as on_air,
	cacd.remarks as remarks,
	clt.current_bed_no,
	cltd.lab_collection_status as test_result,
	(case when cltd.lab_collection_status in (''COLLECTION_PENDING'',''SAMPLE_COLLECTED'',''SAMPLE_ACCEPTED'') then true else false end) as "isLabTestInProgress",
	cacd.health_status as health_status,
	cacd.service_date as last_check_up_time,
	clt.travel_history,
	clt.travelled_place,
	clt.is_abroad_in_contact,
	clt.abroad_contact_details,
	clt.in_contact_with_covid19_paitent,
	clt.flight_no
	from covid19_admission_detail clt
	inner join covid19_admission_refer_detail card on clt.id = card.admission_id and card.state = ''PENDING''
	inner join health_infrastructure_ward_details hiwd on hiwd.id = clt.current_ward_id
	inner join covid19_admitted_case_daily_status cacd on cacd.id = clt.last_check_up_detail_id
	inner join covid19_lab_test_detail cltd on cltd.id = clt.last_lab_test_id
	left join imt_member on clt.member_id = imt_member.id
	left join imt_family on imt_member.family_id = imt_family.family_id
	where
	card.refer_to_health_infra_id = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = #loggedInUserId# and uhi.state = ''ACTIVE'')
	and clt.status in (''REFER'')
        and (#searchText# = ''null'' OR clt.search_text ilike concat(''%'',#searchText#,''%''))
	order by cacd.service_date
	limit #limit# offset #offset#
)
select 
id as "admissionId" 
,member_id as "memberId"
,loc_id as "locationId"
,member_det as "memberDetail"
,dob as "DOB"
,admission_date as "admissionDate"
,ward_name as "wardName"
,ward_id as "wardId"
,current_bed_no as "bedNumber"
,test_result as "testResult"
,health_status as "healthStatus"
,to_char(last_check_up_time,''DD/MM/YYYY'') as "lastCheckUpTime"
,on_ventilator
,ventilator_type1
,ventilator_type2
,on_o2
,on_air
,remarks
,"isLabTestInProgress"
,ref_id as "refId"
,travel_history as "travelHistory"
,travelled_place as "travelledPlace"
,is_abroad_in_contact as "is_abroad_in_contact"
,abroad_contact_details as "abroad_contact_details"
,in_contact_with_covid19_paitent as "inContactWithCovid19Paitent"
,flight_no as "flightno"
from idsp_screening;',true,'ACTIVE',NULL,true,'aa9a0f04-eeab-4c8c-b4b5-39dd03fed36a'),
	 (75398,'2020-07-13 00:00:00',75398,'2020-07-13 00:00:00','covid19_get_refer_out_patient_list','searchText,offset,limit,loggedInUserId','with idsp_screening as (
select
	clt.id as "id",
	clt.location_id as loc_id,
	imt_member.id as member_id,
	case when clt.member_id is null 
		then concat_ws('' '',clt.first_name,clt.middle_name,clt.last_name)
		else concat(concat_ws('' '',imt_member.first_name,imt_member.middle_name,imt_member.last_name)
			, '' ('' , imt_member.unique_health_id , '')'' , ''<br>'' , imt_member.family_id) end as member_det,
	concat(case when clt.member_id is null 
		then clt.age
		else EXTRACT(YEAR FROM age(imt_member.dob)) end,'' Year'') as dob,
	to_char(clt.admission_date,''DD/MM/YYYY'') as admission_date,
	hiwd.ward_name,
	clt.current_ward_id as ward_id,
	cacd.on_ventilator as on_ventilator,
	cacd.ventilator_type1 as ventilator_type1,
	cacd.ventilator_type2 as ventilator_type2,
	cacd.on_o2 as on_o2,
	cacd.on_air as on_air,
	cacd.remarks as remarks,
	clt.current_bed_no,
	cltd.lab_collection_status as test_result,
	(case when cltd.lab_collection_status in (''COLLECTION_PENDING'',''SAMPLE_COLLECTED'',''SAMPLE_ACCEPTED'') then true else false end) as "isLabTestInProgress",
	cacd.health_status as health_status,
	cacd.service_date as last_check_up_time,
        refer_detail.status as refer_status
	from covid19_admission_detail clt
	inner join health_infrastructure_ward_details hiwd on hiwd.id = clt.current_ward_id
	inner join covid19_admitted_case_daily_status cacd on cacd.id = clt.last_check_up_detail_id
	inner join covid19_lab_test_detail cltd on cltd.id = clt.last_lab_test_id
	left join imt_member on clt.member_id = imt_member.id
	left join imt_family on imt_member.family_id = imt_family.family_id
	inner join covid19_admission_refer_detail refer_detail on refer_detail.admission_id = clt.id
	where
	refer_detail.refer_from_health_infra_id = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = #loggedInUserId# and uhi.state = ''ACTIVE'')
	and (#searchText# = null OR clt.search_text ilike concat(''%'',#searchText#,''%''))
	order by refer_detail.created_on desc
	limit #limit# offset #offset#
)
select 
id as "admissionId" 
,member_id as "memberId"
,loc_id as "locationId"
,member_det as "memberDetail"
,dob as "DOB"
,admission_date as "admissionDate"
,ward_name as "wardName"
,ward_id as "wardId"
,current_bed_no as "bedNumber"
,test_result as "testResult"
,health_status as "healthStatus"
,to_char(last_check_up_time,''DD/MM/YYYY'') as "lastCheckUpTime"
,on_ventilator
,ventilator_type1
,ventilator_type2
,on_o2
,on_air
,remarks
,"isLabTestInProgress"
,refer_status as "referStatus"
from idsp_screening;',true,'ACTIVE',NULL,true,'c75e8cd4-9653-4ec0-a17e-bae892d145aa'),
	 (84954,'2019-09-13 10:34:56.731',84954,'2020-05-15 10:45:06.304','state_of_health_get_sex_ratio_detail_2','fromDate,toDate,limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
case when m.gender = ''M'' then ''Male'' when m.gender = ''F'' then ''Female'' end as gender,
preg.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
preg.loc_id as loc_id
from rch_child_analytics_details preg,imt_member m
where  preg.delivery_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and preg.dob between ''#fromDate#'' and ''#toDate#'' and preg.member_id is not null


and m.id = preg.member_id 
limit #limit#),
family_head as (
select a.member_id as member_id,
concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
im.mobile_number as FamilyHeadMobileNo
from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id
where family_head = true and 
        im.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'',''TEMPORARY'')
),
contact_person as (
select a.member_id, 
concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
im.mobile_number as contactPersonMobileNo  
from imt_member im 
inner join analytics a on a.family_id = im.family_id 
inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id

),

asha as (
select t.member_id
,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
u.contact_number as ashaMobileNo
from (
select member_id,max(uld.user_id) as user_id
from um_user_location uld 
inner join analytics a on  uld.loc_id = a.loc_id
inner join um_user uu on uu.id = uld.user_id 
where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
and uu.role_id in (select id from um_role_master where code =''ASHA'' )
group by member_id) as t,um_user u
where t.user_id = u.id

),
anmLocation as (
select parent_id as location_id,a.member_id from location_hierchy_closer_det 
lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
inner join anmLocation a on  uld.loc_id = a.location_id
inner join um_user uu on uu.id = uld.user_id 
where 
uld.state = ''ACTIVE'' and uu.state=''ACTIVE'' and
uu.role_id in (select id from um_role_master where code =''FHW'' )
group by a.location_id,a.member_id
),
anmName as (
select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
uu.contact_number as ANMMobileNo

FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
	select max(service_date) as service_date,services.member_id from rch_member_services services
	inner join analytics a on a.member_id = services.member_id
	group by services.member_id 
),
lastServiceUnique as(
	select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
	where service.member_id = last.member_id
	group by service.member_id, last.service_date
),
lastServiceDetails as (
	select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
	service.location_id,
	location.name as locationName,
	case when service.service_type =''FHW_LMP'' then ''LMP Visit''
		when  service.service_type =''FHW_ANC'' then ''ANC Visit''
		  when service.service_type = ''FHW_PNC'' then ''PNC Visit''
		  when service.service_type = ''FHW_CS'' then ''Child Service''
		  when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
	end as service_type,
	service.member_id 
	from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id
	
	inner join location_master location on service.location_id = location.id
	
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName"

from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id',true,'ACTIVE',NULL,true,'2ffa9343-26d6-47ed-973a-88543812c74d'),
	 (75398,'2020-07-13 00:00:00',75398,'2020-07-13 00:00:00','covid19_retrieve_admission_details_for_print','admissionId','select get_location_hierarchy_from_ditrict(clt.location_id) as "location",
clt.address as "address",
clt.pincode as "pincode",
clt.occupation as "occupation",
clt.travel_history as "travelHistory",
clt.is_abroad_in_contact as "abroadContact",
clt.in_contact_with_covid19_paitent as "covidPositiveContact",
clt.case_no as "caseNumber",
clt.opd_case_no as "opdCaseNumber",
clt.contact_number as "contactNumber",
clt.gender as "gender",
clt.is_fever as "fever",
clt.is_cough as "cough",
clt.is_breathlessness as "breathlessness",
clt.is_sari as "sari",
clt.is_hiv as "hiv",
clt.is_heart_patient as "heartPatient",
clt.is_diabetes as "diabetes",
clt.is_copd as "copd",
clt.is_hypertension as "hypertension",
clt.is_renal_condition as "renalCondition",
clt.is_immunocompromized as "immunocompromized",
clt.is_malignancy as "maligancy",
to_char(clt.date_of_onset_symptom,''DD/MM/YYYY'') as "onsetDate",
to_char(clt.discharge_date,''DD/MM/YYYY'') as "dischargeDate",
to_char(current_timestamp,''DD/MM/YYYY'') as "currentDate",
to_char(clt.admission_date,''DD/MM/YYYY'') as "admissionDate",
CASE WHEN clt.discharge_date IS NULL THEN DATE_PART(''day'',current_timestamp - clt.admission_date) 
ELSE DATE_PART(''day'',clt.discharge_date - clt.admission_date) END as "days",
clt.unit_no as "unitNumber",
hiwd.ward_name as "wardName",
clt.current_bed_no as "bedNumber",
clt.status as "status",
concat(clt.emergency_contact_name,'' ('',clt.emergency_contact_no,'')'') as "emergencyDetails",
case when clt.member_id is null 
		then concat_ws('' '',clt.first_name,clt.middle_name,clt.last_name)
		else concat(concat_ws('' '',imt_member.first_name,imt_member.middle_name,imt_member.last_name)
			, '' ('' , imt_member.unique_health_id , '')'' , '' '' , imt_member.family_id) end as "name",
clt.age as "age",
hid.name_in_english as "hospital_name"
from covid19_admission_detail clt
left join imt_member on clt.member_id = imt_member.id
left join imt_family on imt_member.family_id = imt_family.family_id
left join health_infrastructure_details hid on clt.health_infra_id = hid.id 
left join health_infrastructure_ward_details hiwd on clt.current_ward_id = hiwd.id
where clt.id = #admissionId#',true,'ACTIVE',NULL,true,'504567fa-8527-4276-9702-7748e52c1723'),
	 (75398,'2020-07-13 00:00:00',75398,'2020-07-13 00:00:00','covid19_get_admitted_patient_daily_status_print','admissionId','with temp as (
select
	cacd.id as "id",
	to_char(cacd.service_date,''DD/MM/YYYY'') as service_date,
	cacd.on_ventilator as on_ventilator,
	cacd.ventilator_type1 as ventilator_type1,
	cacd.ventilator_type2 as ventilator_type2,
	cacd.on_o2 as on_o2,
	cacd.on_air as on_air,
	cacd.remarks as remarks,
	cacd.clinically_clear as clinically_clear,
	cacd.temperature as temperature,
	cacd.pulse_rate as pulse_rate,
	cacd.bp_systolic as bp_systolic,
	cacd.bp_dialostic as bp_dialostic,
	cacd.respiration_rate as respiration_rate,
	cacd.spo2 as spo2,
	cacd.azithromycin as azithromycin,
	cacd.hydroxychloroquine as hydroxychloroquine,
	cacd.oseltamivir as oseltamivir,
	cacd.antibiotics as antibiotics,
	cacd.health_status as health_status,
	cacd.is_xray as is_xray,
	cacd.xray_detail as xray_detail,
	cacd.is_ctscan as is_ctscan,
	cacd.ct_scan_detail as ct_scan_detail,
	cacd.is_ecg as is_ecg,
	cacd.ecg_detail as ecg_detail,
	cacd.is_serum_creatinine as is_serum_creatinine,
	cacd.serum_creatinine_detail as serum_creatinine_detail,
	cacd.is_sgpt as is_sgpt,
	cacd.sgpt_detail as sgpt_detail,
	cacd.is_h1n1_test as is_h1n1_test,
	cacd.h1n1_test_detail as h1n1_test_detail,
	cacd.blood_culture as blood_culture,
	cacd.blood_culture_detail as blood_culture_detail,
	cacd.is_g6pd as is_g6pd,
	cacd.g6pd_detail as g6pd_detail
	from covid19_admitted_case_daily_status cacd
	inner join covid19_admission_detail clt on clt.id = cacd.admission_id
	where
	cacd.admission_id =   #admissionId#
	order by cacd.service_date
)
select 
id as "id" 
,service_date as "service_date"
,health_status as "health_status"
,on_ventilator as "on_ventilator"
,ventilator_type1 as "ventilator_type1"
,ventilator_type2 as "ventilator_type2"
,on_o2 as "on_o2"
,on_air as "on_air"
,remarks
,"temperature"
,"pulse_rate"
,"bp_systolic"
,"bp_dialostic"
,"respiration_rate"
,"spo2"
,"azithromycin"
,"hydroxychloroquine"
,"oseltamivir"
,"antibiotics"
, is_xray as "is_xray"
, xray_detail as "xray_detail"
, is_ctscan as "is_ctscan"
, ct_scan_detail as "ct_scan_detail"
, is_ecg as "is_ecg"
, ecg_detail as "ecg_detail"
, is_serum_creatinine as "is_serum_creatinine"
, serum_creatinine_detail as "serum_creatinine_detail"
, is_sgpt as "is_sgpt"
, sgpt_detail as "sgpt_detail"
, is_h1n1_test as "is_h1n1_test"
, h1n1_test_detail as "h1n1_test_detail"
, blood_culture as "blood_culture"
, blood_culture_detail as "blood_culture_detail"
, is_g6pd as "is_g6pd"
, g6pd_detail as "g6pd_detail"
from temp;',true,'ACTIVE','this query is used to print the daily status of  patient',true,'b36dc726-0ecf-47b5-8eb0-0d3899e5294a'),
	 (75398,'2020-07-13 00:00:00',75398,'2020-07-13 00:00:00','covid19_get_lab_test_for_admission_print','admissionId','select
ltd.id as "id",
ltd.lab_collection_status as "lab_collection_status",
to_char(ltd.lab_collection_on,''DD/MM/YYYY hh:mi AM'') as "lab_collection_on",
to_char(ltd.lab_sample_received_on,''DD/MM/YYYY hh:mi AM'') as "lab_sample_received_on",
to_char(ltd.lab_result_entry_on,''DD/MM/YYYY hh:mi AM'') as "lab_result_entry_on",
to_char(ltd.lab_sample_rejected_on,''DD/MM/YYYY hh:mi AM'') as "lab_sample_rejected_on",
ltd.lab_result as "lab_result",
hid1.name_in_english as "sample_health_infra",
hid2.name_in_english as "sample_health_infra_send_to",
ltd.lab_sample_reject_reason as "lab_sample_reject_reason",
ltd.lab_test_number as "lab_test_number",
ltd.lab_test_id as "lab_test_id"
from covid19_lab_test_detail ltd
left join health_infrastructure_details hid1 on ltd.sample_health_infra = hid1.id
left join health_infrastructure_details hid2 on ltd.sample_health_infra_send_to = hid2.id
where ltd.covid_admission_detail_id  =  #admissionId#',true,'ACTIVE','this query is used for printing the admission details',true,'297c5400-0be1-401b-8637-5f4c5fba47ec'),
	 (80251,'2020-07-13 00:00:00',80251,'2020-07-13 00:00:00','retrieve_system_code_mapping_by_opd_lab_test',NULL,'WITH LIST_VALUE  AS
(select * from rch_opd_lab_test_master where is_active = true ) ,
CODES AS ( select value as "code" from listvalue_field_value_detail as lvd where field_key  = ''system_codes_supported_types''  AND is_active = true ) ,
CODE_MASTER AS ( select * from system_code_master where table_type = ''OPD_LAB_TEST'' ) ,
TEMP_TEB AS  ( SELECT lv.id ,lv.name from
LIST_VALUE lv,CODES codes group by lv.id,lv.name 
) 
select tt.id,tt.name,
cast(array_to_json(array_agg(json_build_object( ''id'', CAST ( cm.id AS TEXT), ''tableId'',cm.table_id, ''tableType'',cm.table_type,''codeType'',cm.code_type
,''code'',cm.code,''description'',cm.description,''parentCode'',cm.parent_code ))) as text) as "SYSTEM_CODE"
  from  
TEMP_TEB tt LEFT  JOIN CODE_MASTER cm ON tt.id  = cm.table_id group by tt.id,tt.name',true,'ACTIVE','retrieve system code mapping along with opd lab test id and names',true,'e87df1dd-3873-4054-8552-cf758c1fd63a'),
	 (409,'2020-01-10 17:05:24.191',409,'2020-01-10 17:05:24.191','cm_dashboard_maternal_death','finacial_year','select distinct on ("memberId")* from cm_dashboard_maternal_death_detail where financialYear = ''#finacial_year#''',true,'ACTIVE',NULL,true,'51eb5c66-4625-47ee-af94-938253f52a19'),
	 (74841,'2019-09-13 10:36:03.178',74841,'2020-05-15 10:33:22.236','state_of_health_get_imr_detail_2','fromDate,toDate,limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
rcad.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
to_char(rcad.last_child_service_date,''dd-MM-yyyy'') as "LastServiceData",
to_char(rcad.death_date,''dd-MM-yyyy'') as "deathDate",
case when death.place_of_death in ( ''HOME'',''home'')  then ''Home''
when death.place_of_death =''ON_THE_WAY'' THEN ''On the way''
when death.place_of_death =''HOSP'' then ''Hospital'' 
else ''Other'' end as "deathLocation",
case when lfvd.value is null then death.other_death_reason else lfvd.value end as "deathReason",
rcad.loc_id
from rch_child_analytics_details rcad 
inner join imt_member m on m.id = rcad.member_id 
left join location_master lm on lm.id = rcad.death_location_id
left join rch_member_death_deatil death on death.member_id = rcad.member_id 
left join listvalue_field_value_detail lfvd on lfvd.id\:\:text = death.death_reason
where rcad.death_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and rcad.death_date between ''#fromDate#'' and ''#toDate#''
and rcad.is_infant_death
limit #limit#),
family_head as (
	select distinct a.member_id as member_id,
concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
im.mobile_number as FamilyHeadMobileNo
from imt_member im inner join analytics a on a.family_id = im.family_id
where family_head = true
),
contact_person as (
	select DISTINCT a.member_id, 
 concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
inner join anmLocation a on  uld.loc_id = a.location_id
inner join um_user uu on uu.id = uld.user_id 
where 
uld.state = ''ACTIVE'' and uu.state=''ACTIVE'' and
uu.role_id in (select id from um_role_master where code =''FHW'' )
group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
	select max(service_date) as service_date,services.member_id from rch_member_services services
	inner join analytics a on a.member_id = services.member_id
	group by services.member_id 
),
lastServiceUnique as(
	select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
	where service.member_id = last.member_id
	group by service.member_id, last.service_date
),
lastServiceDetails as (
	select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
	service.location_id,
	location.name as locationName,
	case when service.service_type =''FHW_LMP'' then ''LMP Visit''
		when  service.service_type =''FHW_ANC'' then ''ANC Visit''
		  when service.service_type = ''FHW_PNC'' then ''PNC Visit''
		  when service.service_type = ''FHW_CS'' then ''Child Service''
		  when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
	end as service_type,
	service.member_id 
	from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id
	
	inner join location_master location on service.location_id = location.id
	
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName"
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id',true,'ACTIVE',NULL,true,'85121b8d-10b1-4cb3-a406-d875882d49c7'),
	 (1,'2018-06-01 20:28:33.980159',NULL,NULL,'update_active_inactive_listvalues','id,isActive','UPDATE public.listvalue_field_value_detail
   SET is_active=#isActive#, last_modified_on = now()
 WHERE id=#id#;',false,'ACTIVE',NULL,true,'d49b3794-2dd9-4b54-b626-962d475e0d92'),
	 (64189,'2019-04-30 15:27:39.14',64189,'2019-04-30 15:27:39.14','cm_dash_total_record_high_risk_mother',NULL,'select
	count(*)
from
	rch_pregnancy_analytics_details rpadetails
where
	rpadetails.high_risk_mother = true
	and rpadetails.lmp_date >= current_date - interval ''1 year''',true,'ACTIVE','To get total number of records for High Risk Mother API',true,'9d9eb0d9-26b3-4d07-b73f-14ce791ed45d'),
	 (80240,'2020-08-05 00:00:00',80240,'2020-08-05 00:00:00','lab_test_dashboard_mark_result_status','result,otherResultRemarksSelected,resultDate,labName,isRecollect,id,userId,resultRemarks','with admission_det as (
select cltd.covid_admission_detail_id as admission_id
from covid19_lab_test_detail cltd where id = #id# and #result# = ''POSITIVE''
),update_admission_status as (
update covid19_admission_detail
set status = ''CONFORMED'' where id = (select admission_id from admission_det) and #result# = ''POSITIVE'' and discharge_status is null
)
update covid19_lab_test_detail
set lab_result_entry_on = cast(#resultDate# as timestamp),
lab_result_entry_by = #userId#,
lab_result = #result#,
lab_collection_status = #result#,
indeterminate_lab_name = (case when #labName# = null then indeterminate_lab_name else #labName# end),
result_remarks = (case when #resultRemarks# = null then null else #resultRemarks# end),
is_recollect = #isRecollect#,
other_result_remarks_selected = (case when #otherResultRemarksSelected# = null then null else #otherResultRemarksSelected# end),
result_server_date = now()
where id = #id#;',false,'ACTIVE',NULL,true,'be70361d-62c5-41bb-b91f-ee87a76acd0b'),
	 (66522,'2019-09-13 10:35:12.345',74841,'2020-01-29 17:59:31.862','state_of_health_get_anemia_detail_2','fromDate,toDate,limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
m.family_id as family_id,
m.id as member_id,
member_current_location_id as loc_id
from rch_pregnancy_analytics_details preg,rch_anc_master anc
,imt_member m
where preg.member_current_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and anc.created_on = (select max(created_on) from rch_anc_master  where member_id = preg.member_id)
and haemoglobin_count < 7
and preg_reg_state in (''PENDING'',''PREGNANT'')
and anc.created_on between ''#fromDate#'' and ''#toDate#''
and m.id = preg.member_id
limit #limit#),
hb as (
	select member_id,min(rch_anc_master.haemoglobin_count) as hb
	from rch_anc_master
	where member_id in (select member_id from analytics)
	group by member_id
),
family_head as (
	select a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id
	where family_head = true and im.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'',''TEMPORARY'')
),
contact_person as (
	select a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
inner join anmLocation a on  uld.loc_id = a.location_id
inner join um_user uu on uu.id = uld.user_id 
where 
uld.state = ''ACTIVE'' and uu.state=''ACTIVE'' and
uu.role_id in (select id from um_role_master where code =''FHW'' )
group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
	select max(service_date) as service_date,services.member_id from rch_member_services services
	inner join analytics a on a.member_id = services.member_id
	group by services.member_id 
),
lastServiceUnique as(
	select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
	where service.member_id = last.member_id
	group by service.member_id, last.service_date
),
lastServiceDetails as (
	select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
	service.location_id,
	location.name as locationName,
	case when service.service_type =''FHW_LMP'' then ''LMP Visit''
		when  service.service_type =''FHW_ANC'' then ''ANC Visit''
		  when service.service_type = ''FHW_PNC'' then ''PNC Visit''
		  when service.service_type = ''FHW_CS'' then ''Child Service''
		  when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
	end as service_type,
	service.member_id 
	from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id
	
	inner join location_master location on service.location_id = location.id
	
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
hb.hb as "hb",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName"
from analytics a 
left join hb on a.member_id = hb.member_id
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id',true,'ACTIVE',NULL,true,'a0e7b12c-57ca-4845-8521-306d20c798ac'),
	 (66522,'2019-09-18 11:47:08.779',74841,'2020-01-29 18:30:14.974','state_of_health_get_hypertension_diabetes_detail_2','fromDate,toDate,limit,location_id','--select * from ncd_member_diseases_diagnosis where member_id =33728334
with  analytics as(
select m.unique_health_id as "uniqueHealthId",
dia.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
dia.location_id as loc_id,
dia.disease_code,
to_char(dia.diagnosed_on,''dd-MM-yyyy'') as diagnosed_on
from ncd_member_diseases_diagnosis dia,imt_member m
where dia.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and dia.diagnosed_on between ''#fromDate#'' and ''#toDate#''
and m.id = dia.member_id 
and dia.disease_code in (''D'',''HT'')
limit #limit#
),

family_head_single as (
select m2.id as head_id,imt_member.id as member_id
from analytics
inner join imt_member on analytics.member_id = imt_member.id
inner join imt_family on imt_member.family_id = imt_family.family_id
and imt_family.hof_id = imt_member.id
inner join imt_member m2 on imt_family.family_id = m2.family_id and m2.family_head
group by imt_member.id, m2.id
),
family_head as (
	select 
	head.member_id as member_id,
	concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as FamilyHead,
	m2.mobile_number as FamilyHeadMobileNo
	from family_head_single head inner join imt_member m2 on m2.id = head.head_id

),
contact_person as (
	select a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from user_location_detail uld 
	inner join anmLocation a on  uld.location = a.location_id
	inner join um_user uu on uu.id = uld.user_id 
	group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
	select max(service_date) as service_date,services.member_id from rch_member_services services
	inner join analytics a on a.member_id = services.member_id
	group by services.member_id 
),
lastServiceUnique as(
	select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
	where service.member_id = last.member_id
	group by service.member_id, last.service_date
),
lastServiceDetails as (
	select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
	service.location_id,
	location.name as locationName,
	case when service.service_type =''FHW_LMP'' then ''LMP Visit''
		when  service.service_type =''FHW_ANC'' then ''ANC Visit''
		  when service.service_type = ''FHW_PNC'' then ''PNC Visit''
		  when service.service_type = ''FHW_CS'' then ''Child Service''
		  when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
	end as service_type,
	service.member_id 
	from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id
	
	inner join location_master location on service.location_id = location.id
	
)
select a.*,
fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName",
case when a.disease_code = ''D'' then ''Diabetes''
     when a.disease_code = ''HT'' then ''Hypertension''
     else ''Other'' end as "diagnosisType",
a.diagnosed_on as "diagnosedOn"    
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id',true,'ACTIVE',NULL,true,'c9b7b3d8-c148-40d9-9c4a-4447a1baf2f2'),
	 (75398,'2020-07-15 00:00:00',75398,'2020-07-15 00:00:00','mytecho_create_or_update_timeline_config','component_type,expier_after_number_of_days,is_active,category_id,timeline_theme,name,id,schedule_after_number_of_days,base_date_type','INSERT INTO mytecho_timeline_config_det(
            id, name, component_type, is_any_condition, base_date_type, schedule_after_number_of_days, 
            expier_after_number_of_days, timeline_theme, is_important, is_active, category_id)
VALUES (case when #id# is null then nextval(''mytecho_timeline_config_det_id_seq'') else #id# end,#name#
,#component_type#, false, #base_date_type#, #schedule_after_number_of_days#
,cast (case when #expier_after_number_of_days# = null then null else #expier_after_number_of_days# end as smallint)
, #timeline_theme#, true, true, cast (case when  #category_id#= null then null else  #category_id# end as smallint))
on conflict (id)
DO UPDATE
set name = #name#,component_type=#component_type#,is_any_condition=false,base_date_type = #base_date_type#
,schedule_after_number_of_days = #schedule_after_number_of_days# 
,expier_after_number_of_days =  cast (case when #expier_after_number_of_days# = null then null else #expier_after_number_of_days# end as smallint)
,timeline_theme = #timeline_theme#
,is_important = true
,is_active = #is_active#
,category_id = cast (case when  #category_id#= null then null else  #category_id# end as smallint)
returning id;',true,'ACTIVE',NULL,true,'95cad377-a11d-41a9-9cf3-3d819d3f4565'),
	 (75398,'2020-07-15 00:00:00',75398,'2020-07-15 00:00:00','mytecho_delete_timeline_audiance_det','mt_timeline_config_id','DELETE FROM mytecho_timeline_audience_det
                WHERE mt_timeline_config_id = #mt_timeline_config_id#',false,'ACTIVE',NULL,true,'4756bd2f-f2d8-4cd5-becc-b75dfaaaba81'),
	 (75398,'2020-07-15 00:00:00',75398,'2020-07-15 00:00:00','mytecho_delete_timeline_context_det','mt_timeline_config_id','DELETE FROM mytecho_timeline_context_det
                WHERE mt_timeline_config_id = #mt_timeline_config_id#',false,'ACTIVE','Delete Context of given Timeline',true,'29c44d7d-9e9c-4a60-8955-bc8ae4f7c11c'),
	 (75398,'2020-07-15 00:00:00',75398,'2020-07-15 00:00:00','mytecho_delete_timeline_event_det','mt_timeline_config_id','DELETE FROM mytecho_timeline_event_det
                WHERE mt_timeline_config_id = #mt_timeline_config_id#',false,'ACTIVE','Delete events of timeline',true,'e409b0af-8a0e-49d1-87f3-db98b6facd13'),
	 (75398,'2020-07-15 00:00:00',75398,'2020-07-15 00:00:00','mytecho_create_timeline_audiance_det','audience_type,mt_timeline_config_id','INSERT INTO mytecho_timeline_audience_det(
           mt_timeline_config_id, audience_type)
VALUES (#mt_timeline_config_id#, 
#audience_type#)
returning mt_timeline_config_id;',true,'ACTIVE',NULL,true,'ad8b24dd-69a9-492e-818a-370b2063cbbe'),
	 (75398,'2020-07-15 00:00:00',75398,'2020-07-15 00:00:00','mytecho_create_timeline_context_det','context_type,mt_timeline_config_id','INSERT INTO mytecho_timeline_context_det(
           mt_timeline_config_id, context_type)
VALUES (#mt_timeline_config_id#, 
#context_type#)
returning mt_timeline_config_id;',true,'ACTIVE','Create Timeline Context',true,'620f8bc7-e1f1-496f-a0dd-6680ef8b1e94'),
	 (75398,'2020-07-15 00:00:00',75398,'2020-07-15 00:00:00','mytecho_create_timeline_event_det','event_type,mt_timeline_config_id','INSERT INTO mytecho_timeline_event_det(
           mt_timeline_config_id, event_type)
VALUES (#mt_timeline_config_id#, 
#event_type#)
returning mt_timeline_config_id;',true,'ACTIVE','Create timeline event',true,'c20bdb2a-bfa2-447b-a27c-2d497b947a0b'),
	 (75398,'2020-07-15 00:00:00',75398,'2020-07-15 00:00:00','mytecho_create_or_update_timeline_languagewise_config','original_media_name,description,language,short_descr,button_text,media_name,mt_timeline_config_id,tittle,url','INSERT INTO mytecho_timeline_language_wise_config_det(
           mt_timeline_config_id, language, tittle, button_text, description, media_name, original_media_name, url, short_descr)
VALUES ( #mt_timeline_config_id# , #language#,
#tittle#, 
case when #button_text# = null then NULL else #button_text# end, 
#description#
,cast (case when #media_name# = null then null else #media_name# end as bigint),
case when #original_media_name# = null then NULL else #original_media_name# end,
case when #url# = null then NULL else #url# end,
#short_descr#)
ON CONFLICT ON CONSTRAINT mytecho_timeline_language_wise_config_det_pkey
DO UPDATE
set
tittle=#tittle#,
button_text = case when #button_text# = null then NULL else #button_text# end,
description = #description#,
media_name = cast (case when #media_name# = null then null else #media_name# end as bigint),
original_media_name = case when #original_media_name# = null then NULL else #original_media_name# end,
url= case when #url# = null then NULL else #url# end,
short_descr=#short_descr#
returning mt_timeline_config_id;',true,'ACTIVE',NULL,true,'7f5b881a-5611-4b20-82ae-38167b6c14fb'),
	 (74909,'2020-07-15 00:00:00',74909,'2020-07-15 00:00:00','get_soh_maintenance_mode_1','systemKey','select
	is_active,
	key_value
from
	system_configuration
where
	system_key = #systemKey#',true,'ACTIVE',NULL,true,'b7169e7b-91f7-4bc5-a258-7d97b3b1712f'),
	 (74909,'2020-07-15 00:00:00',74909,'2020-07-15 00:00:00','insert_um_user_app_access_details_1','deviceType,appVersion,appName,imei,userId','insert
	into
		um_user_app_access_details( user_id, app_name, app_version, device_type, created_on, imei_number )
	values(#userId#, #appName#, #appVersion#, #deviceType#, now(),
(case when #imei# = null then null else  #imei#  end)
)',false,'ACTIVE',NULL,true,'ef3ec7d6-4490-4755-a7a5-08661d102326'),
	 (1027,'2018-04-27 17:16:11.457279',NULL,NULL,'fhs_dashboard_userwise_list','userId,locationId','select cast(user_loc.user_id as varchar) as id
                 ,um_user.first_name || '' '' || um_user.last_name || '' ('' || um_user.user_name || '' )'' as "personName"
                 ,cast(coalesce(sum(fhs_imported_from_emamta_family), 0) as int) as "importedFromEmamta" 
                 ,cast(coalesce(sum(fhs_imported_from_emamta_member), 0) as int) as "importedFromEmamtaMember" 
                 ,cast(coalesce(sum(fhs_to_be_processed_family), 0) as int) as "unverifiedFHS" 
                 ,cast(coalesce(sum(fhs_verified_family), 0) as int) as "verifiedFHS" 
                 ,cast(coalesce(sum(fhs_archived_family), 0) as int) as "archivedFHS" 
                 ,cast(coalesce(sum(fhs_new_family), 0) as int) as "newFamily" 
                 ,cast(coalesce(sum(fhs_verified_family + fhs_new_family), 0) as int) as "totalFamily" 
                 ,cast(coalesce(sum(fhs_total_member), 0) as int) as "totalMember" 
                 ,cast(coalesce(sum(fhs_inreverification_family), 0) as int) as "inReverification" 
                 from um_user_location um_loc 
                 inner join location_hierchy_closer_det um_loc_closer 
                 on um_loc.loc_id = um_loc_closer.parent_id and um_loc.state = ''ACTIVE'' and user_id = #userId#
                 inner join location_hierchy_closer_det sel_loc_closer 
                 on sel_loc_closer.parent_id = #locationId#
                 and sel_loc_closer.child_id = um_loc_closer.child_id
                 inner join um_user_location user_loc
                 on user_loc.loc_id = sel_loc_closer.child_id and user_loc.state = ''ACTIVE''
                 inner join um_user on um_user.id = user_loc.user_id 
                 and um_user.role_id = (select id from um_role_master where name = ''FHW'') and um_user.state = ''ACTIVE''
                 inner join location_wise_analytics loc_anlyts
                 on loc_anlyts.loc_id = um_loc_closer.child_id
                 group by user_loc.user_id, um_user.first_name, um_user.last_name, um_user.user_name 
                 order by "personName"',true,'ACTIVE',NULL,true,'6aa24cf8-f556-437c-a344-c0ecdb131986'),
	 (74909,'2020-07-15 00:00:00',74909,'2020-07-15 00:00:00','state_of_health_data_retrieval_15','locationId,element_name,timeline_type','with next_active_depth as (
select
	closer.depth as "depth"
from
	location_type_master lt
inner join location_hierchy_closer_det closer on
	lt.type = closer.child_loc_type where closer.parent_id = #locationId# and lt.is_soh_enable = true  and depth != 0 order by closer."depth" limit 1
),
elements_details as (
       select lt.level,lt.type,closer.child_id as "locationId",
        case when lt.type =''C'' or lt.type =''D'' then ''Districts/Corporation'' else lt.name end as "locationType",
        case when l.english_name is not null then l.english_name else l.name end as english_name,
 cast(#element_name# as  text) as "elementName",
        value as value,sh.target,male as male,female as female,
        chart1 as chart1,chart2 as chart2,chart3 as chart3,chart4 as chart4,
chart5 as chart5,
chart6 as chart6,
chart7 as chart7,
chart8 as chart8,
chart9 as chart9,
chart10 as chart10,
chart11 as chart11,
chart12 as chart12,
chart13 as chart13,
chart14 as chart14,
chart15 as chart15,

        cast(#timeline_type# as text) as timeline_type,
        days as days,
        reporting as reporting,
        calculatedTarget as calculatedTarget,
        color as color,
        percentage as percentage,
        sortPriority as "sortPriority",
        displayValue as displayValue
        from location_hierchy_closer_det closer
        inner join location_master l on closer.child_id = l.id
        inner join location_type_master lt on l.type = lt.type
        left join soh_element_configuration config on config.element_name = #element_name#
        left join soh_timeline_analytics_temp sh on sh.location_id = closer.child_id and config.element_name = sh.element_name
	and timeline_type = #timeline_type#
        where closer.parent_id = #locationId# and depth=(SELECT * FROM next_active_depth)
        order by english_name),
unique_locations as (
        select distinct "locationId" from elements_details
        ),
user_details_ids as (
        select uul.loc_id as location_id, concat(uu.first_name,'' '',uu.middle_name,'' '', uu.last_name)
				 as "userName",
				 uu.role_id,
uu.contact_number as "contactNumber",
uu.id as user_id,
role.short_name as "roleName"

        from unique_locations elements
        inner join um_user_location uul on elements."locationId" = uul.loc_id
        inner join location_master lm on lm.id =  uul.loc_id
        inner join soh_location_type_role_mapping as t on t.location_type = lm."type"
        inner join um_user uu on uu.id = uul.user_id
        inner join um_role_master role on role.id= t.role_id

        where uul.state=''ACTIVE''
        and uu.state=''ACTIVE''
         and uu.role_id=role.id
),
remaining_user_data as (
select "locationId" as location_id,
cast(''-'' as text) as "userName",
t.role_id,
cast(''-'' as text) as "contactNumber",
cast(0 as numeric) as "user_id",
role.short_name as "roleName"
from unique_locations
inner join location_master lm on lm.id = "locationId"
inner join soh_location_type_role_mapping as t on t.location_type = lm."type"
inner join um_role_master role on role.id= t.role_id
),
remaining_user_data_1 as (
select users.*
from remaining_user_data remains
left join user_details_ids users  on users.location_id = remains.location_id
and users.role_id  = remains.role_id
where users.user_id is not null
union
select remains.*
from remaining_user_data remains
left join user_details_ids users  on users.location_id = remains.location_id
and users.role_id  = remains.role_id
where users.user_id is null
),
user_details as (
      select
      cast(array_to_json(array_agg(row_to_json(ud.*))) as text) as user_name,ud.location_id
      from remaining_user_data_1 ud
      group by ud.location_id
)
select elements.*,
case when users.user_name is null then null else users.user_name end as  "userDetail"
from elements_details elements
left join user_details users on elements."locationId" = users.location_id',true,'ACTIVE',NULL,true,'70cdd8fa-0cda-479c-81f4-417826170a97'),
	 (97070,'2022-11-02 00:00:00',97070,'2022-11-02 00:00:00','menu_list_by_role_ids','rids','select distinct(menu_name) from menu_config menuC join user_menu_item on menuC.id=user_menu_item.menu_config_id where user_menu_item.role_id in (#rids#)',true,'ACTIVE',NULL,true,'e0f63992-28a8-4e78-a199-9d441d36582c'),
	 (74909,'2020-07-15 00:00:00',74909,'2020-07-15 00:00:00','get_elements_details_permission_wise_3','user_id,locationId,timeline_type','with user_detail as(
select role_id,id from um_user where id = #user_id#
),
elements_id as ( select soh_element_permissions.element_id from soh_element_permissions inner join user_detail on true
where  (case when permission_type = ''ROLE'' then reference_id = user_detail.role_id end) or
(case when permission_type = ''USER'' then reference_id = user_detail.id end) or
permission_type = ''ALL''),
soh_elements as (select * from soh_element_configuration where id in (select distinct(element_id) from elements_id) or is_public = true),
elements_details as (
       select lt.level,lt.type,closer.child_id as "locationId",
        case when lt.type =''C'' or lt.type =''D'' then ''Districts/Corporation'' else lt.name end as "locationType",
        case when l.english_name is not null then l.english_name else l.name end as english_name,
config.element_name as "elementName",
        value as value,sh.target,male as male,female as female,
        chart1 as chart1,chart2 as chart2,chart3 as chart3,chart4 as chart4,
chart5 as chart5,
chart6 as chart6,
chart7 as chart7,
chart8 as chart8,
chart9 as chart9,
chart10 as chart10,
chart11 as chart11,
chart12 as chart12,
chart13 as chart13,
chart14 as chart14,
chart15 as chart15,
        cast(#timeline_type# as text) as timeline_type,
        days as days,
        reporting as reporting,
        calculatedTarget as calculatedTarget,
        color as color,
        percentage as percentage,
        sortPriority as "sortPriority",
        displayValue as displayValue
        from location_hierchy_closer_det closer
        inner join location_master l on closer.child_id = l.id
        inner join location_type_master lt on l.type = lt.type
        left join soh_elements config on TRUE
        left join soh_timeline_analytics_temp sh on sh.location_id = closer.parent_id and config.element_name = sh.element_name
	and timeline_type = #timeline_type#
        where closer.parent_id = #locationId# and depth=0
        order by english_name),
unique_locations as (
        select distinct "locationId" from elements_details
        ),
user_details_ids as (
        select uul.loc_id as location_id, concat(uu.first_name,'' '',uu.middle_name,'' '', uu.last_name)
				 as "userName",
				 uu.role_id,
uu.contact_number as "contactNumber",
uu.id as user_id,
role.short_name as "roleName"

        from unique_locations elements
        inner join um_user_location uul on elements."locationId" = uul.loc_id
        inner join location_master lm on lm.id =  uul.loc_id
        inner join soh_location_type_role_mapping as t on t.location_type = lm."type"
        inner join um_user uu on uu.id = uul.user_id
        inner join um_role_master role on role.id= t.role_id

        where uul.state=''ACTIVE''
        and uu.state=''ACTIVE''
        and uu.role_id=role.id
),
remaining_user_data as (
select "locationId" as location_id,
cast(''-'' as text) as "userName",
t.role_id,
cast(''-'' as text) as "contactNumber",
cast(0 as numeric) as "user_id",
role.short_name as "roleName"
from unique_locations
inner join location_master lm on lm.id = "locationId"
inner join soh_location_type_role_mapping as t on t.location_type = lm."type"
inner join um_role_master role on role.id= t.role_id
),
remaining_user_data_1 as (
select users.*
from remaining_user_data remains
left join user_details_ids users  on users.location_id = remains.location_id
and users.role_id  = remains.role_id
where users.user_id is not null
union
select remains.*
from remaining_user_data remains
left join user_details_ids users  on users.location_id = remains.location_id
and users.role_id  = remains.role_id
where users.user_id is null
),
user_details as (
      select
      cast(array_to_json(array_agg(row_to_json(ud.*))) as text) as user_name,ud.location_id
      from remaining_user_data_1 ud
      group by ud.location_id
)
select elements.*,
case when users.user_name is null then null else users.user_name end as  "userDetail"
from elements_details elements
left join user_details users on elements."locationId" = users.location_id',true,'ACTIVE',NULL,true,'1824ebcb-eb65-425e-9cd6-ff7ea5e126d1'),
	 (74909,'2020-07-15 00:00:00',74909,'2020-07-15 00:00:00','update_user_pin_1','pin,id','UPDATE um_user SET pin = #pin# ,modified_on = now() WHERE id = #id#;',false,'ACTIVE',NULL,true,'902feb83-aa1c-48fe-be56-9eda813aaaf4'),
	 (74841,'2020-04-04 16:38:04.462',74841,'2020-04-04 16:50:59.709','cm_dashboard_member_contact_det_count',NULL,'select
count(1) as "numberOfMember"
from zzz_member_with_contact where length(mobile_number) = 10;',true,'ACTIVE',NULL,true,'b798e595-f595-4b71-bf52-7116ef721111'),
	 (74840,'2020-07-16 00:00:00',74840,'2020-07-16 00:00:00','get_active_server_list',NULL,'select id,server_name,username,host_url,is_active from server_list_master where is_active = true',true,'ACTIVE','Get all the actively available server',true,'bd6d99e3-0b7b-46e9-b938-1812a3e54d0a'),
	 (74840,'2020-07-16 00:00:00',74840,'2020-07-16 00:00:00','get_system_sync_configuration_id_from_feature_uuid','featureUUID,server_id','select sync.id from sync_system_configuration_server_access_details scsa right join sync_system_configuration_master sync
on scsa.config_id = sync.id and scsa.server_id = #server_id#
where scsa.config_id is null
and sync.feature_uuid = ''#featureUUID#''',true,'ACTIVE','get id from system sync table',true,'ba40779b-faaf-4373-9c73-83cd2e070f25'),
	 (74840,'2020-07-16 00:00:00',74840,'2020-07-16 00:00:00','get_server_list_which_are_in_sync_for_auto_sync_configuration','featureUUID','select distinct serv.server_name from sync_server_feature_mapping_detail mapper inner join server_list_master serv on mapper.server_id = serv.id
where mapper.feature_uuid = ''#featureUUID#''',true,'ACTIVE','get list of all the server which are set for syncing respective feature config
and not in sync',true,'0a7d5036-f44c-42b6-81df-d449d1c3ecd3'),
	 (74840,'2020-07-16 00:00:00',74840,'2020-07-16 00:00:00','update_list_server_password','password,id','update server_list_master set password = ''#password#'' where id = #id# returning id;',true,'ACTIVE',NULL,true,'c4b908be-b5f9-428c-8b4a-6c6abcf2296a'),
	 (74909,'2020-07-16 00:00:00',74909,'2020-07-16 00:00:00','translation_label_add_1','appName,language,label,loggedInUserId,text','INSERT INTO internationalization_label_master(country, key, language, created_by, created_on, app_name, text, translation_pending)
VALUES (''IN'', REPLACE(#label#,'' '',''''), #language#, #loggedInUserId# , now(), #appName# , #text# ,false );',false,'ACTIVE',NULL,true,'36155a13-3c9b-4981-bd38-f24bbbe30ff9'),
	 (84954,'2020-06-03 00:00:00',84954,'2020-07-23 14:02:46.021','get_data_quality_by_time_line','locationId,elementName','select * from soh_timeline_analytics_temp where location_id =#locationId# and element_name =''#elementName#'' and timeline_type=''YEAR_04_2019''',true,'ACTIVE',NULL,true,'f824cd38-0cfc-4a8b-8a3b-ee999f5336b1'),
	 (66522,'2020-08-18 13:25:33.335',66522,'2020-08-18 19:10:30.677','soh_pending_work_anc_4','limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
notification.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
to_char(lmp_date,''DD-MM-YYYY'') as "val_LMP Date",
to_char(reg_service_date,''DD-MM-YYYY'') as "val_Registration Date",
cast(''ANC 4'' AS text) as "val_Pending Work Type",
to_char(notification.schedule_date,''DD-MM-YYYY'') as "val_Schedule Date",
to_char(notification.due_on,''DD-MM-YYYY'') as "val_Due Date",
to_char(notification.expiry_date,''DD-MM-YYYY'') as "val_Expiry Date",
notification.location_id as loc_id
from techo_notification_master_analysis notification inner join imt_member m on m.id = notification.member_id
inner join rch_pregnancy_analytics_details analytics on analytics.member_id = notification.member_id
inner join  notification_type_master type_master on notification.notification_type_id = type_master.id
where 
delivery_outcome is null and death_date is null and
notification.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#) 
and type_master.code=''FHW_ANC''
and cast(due_on as date) <= current_date
and notification_code =''4''
and ( notification.expiry_date is null or cast(notification.expiry_date as date) >= current_date) and notification.state  = ''PENDING''
limit #limit#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id
	where family_head = true
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
inner join anmLocation a on  uld.loc_id = a.location_id
inner join um_user uu on uu.id = uld.user_id 
where 
uld.state = ''ACTIVE'' and uu.state=''ACTIVE'' and
uu.role_id in (select id from um_role_master where code =''FHW'' )
group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
	select max(service_date) as service_date,services.member_id from rch_member_services services
	inner join analytics a on a.member_id = services.member_id
	group by services.member_id 
),
lastServiceUnique as(
	select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
	where service.member_id = last.member_id
	group by service.member_id, last.service_date
),
lastServiceDetails as (
	select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
	service.location_id,
	location.name as locationName,
	case when service.service_type =''FHW_LMP'' then ''LMP Visit''
		when  service.service_type =''FHW_ANC'' then ''ANC Visit''
		  when service.service_type = ''FHW_PNC'' then ''PNC Visit''
		  when service.service_type = ''FHW_CS'' then ''Child Service''
		  when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
	end as service_type,
	service.member_id 
	from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id
	
	inner join location_master location on service.location_id = location.id
	
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName"
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = a.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id',true,'ACTIVE',NULL,NULL,'6b31fd5a-c4e0-430a-827f-e2eb466b5a28'),
	 (1,'2020-02-12 00:00:00',NULL,NULL,'get_all_stabilization_info','','
select * from rbsk_defect_stabilization_info
',true,'ACTIVE',NULL,true,'1b4adb30-ec61-460b-862b-899ba6e46fb1'),
	 (66522,'2020-07-13 00:00:00',66522,'2020-08-05 16:56:55.403','soh_performance_line_chart','locationId','with json_to_row as (
select
	json_array_elements(cast(configuration_json as json)) as fields,
	from_date,
	to_date,
	id
from
	soh_chart_configuration
),
chart_details as (
select
	jtr.id,
	jtr.from_date,
	jtr.to_date,
	json_array_elements(jtr.fields -> ''fields'') as config,
	jtr.fields ->> ''elementName'' as element_name,
	jtr.fields ->> ''color'' as color,
	jtr.fields ->> ''displayName'' as display_name
from
	json_to_row jtr),
json_with_row_number as (
select
	*,
	row_number () over() as serial
from
	chart_details
),
axis_data as (
select
	*,
	row_to_json(t) as json
from
	(
	select
		jtr.element_name as name,
		jtr.color as color,
		jtr.display_name as display_name,
		jtr.id,
		array_agg(
		    case
		        when jtr.config ->> ''field'' = ''chart1'' then cast(coalesce(soh.chart1, 0) as text)
		        when jtr.config ->> ''field'' = ''timeline'' then (
                    case
                        when soh.timeline_sub_type = ''DAY'' then concat(''Day '', (cast(timeline_type as date) - cast(''2020-03-18'' as date)))
                        when soh.timeline_sub_type = ''DAY_15'' and current_date - cast(timeline_type as date) >= 24 then ''24+ Day''
			when soh.timeline_sub_type = ''DAY_15'' then concat(current_date - cast(timeline_type as date), '' Day'')
                        else to_char(cast(soh.timeline_type as date),''Mon-''''YY'')
                    end
                )
                when jtr.config ->> ''field'' = ''chart2'' then cast(coalesce(soh.chart2, 0) as text)
                when jtr.config ->> ''field'' = ''chart3'' then cast(coalesce(soh.chart3, 0) as text)
                when jtr.config ->> ''field'' = ''chart4'' then cast(coalesce(soh.chart4, 0) as text)
                when jtr.config ->> ''field'' = ''chart5'' then cast(soh.chart5 as text)
		        when jtr.config ->> ''field'' = ''chart6'' then cast(soh.chart6 as text)
                when jtr.config ->> ''field'' = ''chart7'' then cast(soh.chart7 as text)
                when jtr.config ->> ''field'' = ''chart8'' then cast(soh.chart8 as text)
                when jtr.config ->> ''field'' = ''chart9'' then cast(soh.chart9 as text)
                when jtr.config ->> ''field'' = ''chart10'' then cast(soh.chart10 as text)
                when jtr.config ->> ''field'' = ''chart11'' then cast(soh.chart11 as text)
                when jtr.config ->> ''field'' = ''chart12'' then cast(soh.chart12 as text)
                when jtr.config ->> ''field'' = ''chart13'' then cast(soh.chart13 as text)
                when jtr.config ->> ''field'' = ''chart14'' then cast(soh.chart14 as text)
                when jtr.config ->> ''field'' = ''chart15'' then cast(soh.chart15 as text)
                when jtr.config ->> ''field'' = ''percentage'' then cast(coalesce(soh.percentage, 0) as text)
                when jtr.config ->> ''field'' = ''displayValue'' then cast(soh.displayValue as text)
                when jtr.config ->> ''field'' = ''value'' then cast(coalesce(soh.value, 0) as text)
                when jtr.config ->> ''field'' = ''calculatedTarget'' then cast(soh.calculatedTarget as text)
            end order by case when soh.timeline_sub_type = ''DAY_15'' then cast(soh.timeline_type as date) end desc,
			case when soh.timeline_sub_type != ''DAY_15'' then cast(soh.timeline_type as date) end asc 	
            ) as value,
		jtr.config ->> ''type'' as "axis",
		jtr.config ->> ''name'' as "axisName"

	from
		soh_timeline_analytics soh
	inner join json_with_row_number jtr on
		jtr.element_name = soh.element_name
	where
		soh.timeline_sub_type IN (''DATE'',''DAY'',''DAY_15'')
		and soh.location_id = #locationId#
        and cast(soh.timeline_type as date) between jtr.from_date and jtr.to_date
	group by
		jtr.id,
		jtr.element_name,
		jtr.config ->> ''type'',
                jtr.config ->> ''name'',
		jtr.color,
		jtr.display_name) as t),
result_set as (
select
	t.id,
	json_agg(t) as element_name
from
	(
	select
		id,
		name,
		json_agg(json) as json
	from
		axis_data
	group by
		id,
		name,
		color) as t
group by
	id
)
select
	scc.id,
	name,
    module as module,
	display_name,
     chart_type as "chartType",

	cast(element_name as text) as data
from
	result_set rs
	inner join soh_chart_configuration scc
	on scc.id = rs.id
order by scc.chart_order',true,'ACTIVE',NULL,true,'e616fb90-ce62-4e16-bfbc-be375da62cd0'),
	 (66522,'2020-07-15 00:00:00',66522,'2020-08-05 17:05:36.063','state_of_health_get_timeline_data_1','locationId','select to_char(cast (timeline_type as date),''Mon,YYYY'') as timeline,*
from soh_timeline_analytics where
timeline_sub_type in (''DATE'' ,''DAY'') and location_id=#locationId#',true,'ACTIVE',NULL,true,'227e1a28-4966-40ce-84fb-0bb3069b247d'),
	 (80240,'2020-08-05 00:00:00',80240,'2020-08-05 00:00:00','covid19_lab_test_pending_sample_result','searchText,limit_offset,offset,healthInfra,limit,loggedInUserId,wardId,collectionDate','with idsp_screening as (
select
	clt.id as "id",
	ltd.id as lab_id,
	ltd.lab_test_number as lab_test_number,
	ltd.lab_sample_received_on as receive_date,
	ltd.lab_test_id as lab_test_id,
	clt.location_id as loc_id,
	imt_member.id as member_id,
	case when clt.member_id is null
		then concat_ws('' '',clt.first_name,clt.middle_name,clt.last_name)
		else concat(concat_ws('' '',imt_member.first_name,imt_member.middle_name,imt_member.last_name)
			, '' ('' , imt_member.unique_health_id , '')'' , ''<br>'' , imt_member.family_id) end as member_det,
	concat(case when clt.member_id is null
		then cast(clt.age as text)
		else cast(EXTRACT(YEAR FROM age(imt_member.dob)) as text) end,'' Year'') as age,
	to_char(clt.admission_date,''DD/MM/YYYY'') as admission_date,
	hiwd.ward_name,
	sample_from.name_in_english as sample_from_health_infra,
	sample_from.is_covid_lab,
	clt.current_ward_id as ward_id,
	cacd.on_ventilator as on_ventilator,
	cacd.ventilator_type1 as ventilator_type1,
	cacd.ventilator_type2 as ventilator_type2,
	cacd.on_o2 as on_o2,
	cacd.on_air as on_air,
	cacd.remarks as remarks,
	clt.is_hiv as hiv,
	clt.current_bed_no,
	cacd.health_status as health_status,
	cacd.service_date as last_check_up_time
	from covid19_lab_test_detail ltd
	inner join covid19_admission_detail clt on ltd.covid_admission_detail_id = clt.id
	left join health_infrastructure_ward_details hiwd on hiwd.id = clt.current_ward_id
	left join covid19_admitted_case_daily_status cacd on cacd.id = clt.last_check_up_detail_id
	left join health_infrastructure_details sample_from on sample_from.id = ltd.sample_health_infra
	left join imt_member on clt.member_id = imt_member.id
	left join imt_family on imt_member.family_id = imt_family.family_id
	where
	(((select role_id from um_user where id = #loggedInUserId#) in (59,25,96))
	or ltd.sample_health_infra_send_to = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = ''#loggedInUserId#'' and uhi.state = ''ACTIVE'')
	)and clt.status not in (''DISCHARGED'',''DEAD'',''REFER'') and ltd.lab_collection_status = ''SAMPLE_ACCEPTED''
--	and (case when ''#searchText#'' != ''null'' and ''#searchText#'' != '''' then ltd.search_text ilike ''%#searchText#%'' else true end)
	and ltd.search_text ilike concat(''%'',#searchText#,''%'')
	and (case when ''#healthInfra#'' != ''null'' and ''#healthInfra#'' != '''' then sample_from.name_in_english ilike ''%#healthInfra#%'' else true end)
--	and (case when ''#collectionDate#'' != ''null'' and ''#collectionDate#'' != '''' then to_char(ltd.lab_sample_received_on,''DD/MM/YYYY'') ilike ''%#collectionDate#%'' else true end)
	and (case when #collectionDate# != null and #collectionDate# != '''''''' then cast(ltd.lab_collection_on as date) = #collectionDate# else true end)
	and (case when ''#wardId#'' != ''null'' and ''#wardId#'' != '''' then hiwd.ward_name = ''#wardId#'' else true end)
	order by ltd.receive_server_date desc
--	#limit_offset#
	limit #limit# offset #offset#
)
select
id as "admissionId"
,lab_id as "labCollectionId"
,lab_test_number as "labTestNumber"
,receive_date as "sampleReceiveDate"
,lab_test_id as "labTestId"
,member_id as "memberId"
,loc_id as "locationId"
,member_det as "memberDetail"
,age as "age"
,admission_date as "admissionDate"
,ward_name as "wardName"
,ward_id as "wardId"
,current_bed_no as "bedNumber"
,health_status as "healthStatus"
,to_char(last_check_up_time,''DD/MM/YYYY'') as "lastCheckUpTime"
,on_ventilator
,ventilator_type1
,ventilator_type2
,on_o2
,on_air
,remarks
,hiv
,sample_from_health_infra as "sampleFrom"
,is_covid_lab as "isSameHealthInfrastructure"
,cast(''CONFIRMATION'' as text) as "resultStage"
from idsp_screening',true,'ACTIVE',NULL,true,'c6185ad1-c6e0-4291-b524-db3280e20443'),
	 (80240,'2020-08-05 00:00:00',80240,'2020-08-05 00:00:00','lab_test_dashboard_mark_indeterminate','resultDate,id,userId','update covid19_lab_test_detail
set lab_result = ''INDETERMINATE'',
is_indeterminate = true,
indeterminate_marked_date =  #resultDate#,
indeterminate_marked_by = #userId#,
lab_collection_status = ''INDETERMINATE'',
indeterminate_server_date = now()
where id = #id#;',false,'ACTIVE',NULL,true,'1ff2ec19-23a4-4eb6-9c5c-4d1e2bfa85e9'),
	 (1,'2018-06-06 01:27:03.531838',NULL,NULL,'retrival_listvalues_multimedia','','select id,value from listvalue_field_value_detail where multimedia_type <> ''''',true,'ACTIVE','retrieves all multimedia values',true,'2ebba2e3-cce7-4b43-857b-c61018dae661'),
	 (1,'2018-06-06 01:27:03.531838',NULL,NULL,'update_values_inactive','idsToBeInActive','update listvalue_field_value_detail 
	set is_active=false
	where id in (#idsToBeInActive#)',false,'ACTIVE','retrieves all multimedia values',true,'783f06a4-7fab-4d2c-a4b9-2888aa50c944'),
	 (80240,'2020-08-05 00:00:00',80240,'2020-08-05 00:00:00','covid19_lab_test_retrieve_result_confirmed_list','searchText,limit_offset,offset,limit,loggedInUserId','with idsp_screening as (
select
	clt.id as "id",
	ltd.id as lab_id,
	ltd.lab_test_number as lab_test_number,
	ltd.indeterminate_marked_date as indeterminate_date,
	ltd.lab_test_id as lab_test_id,
	ltd.lab_result as lab_result,
    ltd.result_remarks as result_remarks,
    ltd.is_recollect as is_recollect,
    ltd.other_result_remarks_selected as other_result_remarks_selected,
    ltd.lab_result_entry_on as lab_result_entry_on,
    suggested_hospital.name_in_english as suggested_hospital,
	clt.location_id as loc_id,
	imt_member.id as member_id,
	case when clt.member_id is null
		then concat_ws('' '',clt.first_name,clt.middle_name,clt.last_name)
		else concat(concat_ws('' '',imt_member.first_name,imt_member.middle_name,imt_member.last_name)
			, '' ('' , imt_member.unique_health_id , '')'' , ''<br>'' , imt_member.family_id) end as member_det,
	concat(case when clt.member_id is null
		then cast(clt.age as text)
		else cast(EXTRACT(YEAR FROM age(imt_member.dob)) as text) end,'' Year'') as age,
	to_char(clt.admission_date,''DD/MM/YYYY'') as admission_date,
	hiwd.ward_name,
	sample_from.name_in_english as sample_from_health_infra,
	sample_from.is_covid_lab,
	clt.current_ward_id as ward_id,
	cacd.on_ventilator as on_ventilator,
	cacd.ventilator_type1 as ventilator_type1,
	cacd.ventilator_type2 as ventilator_type2,
	cacd.on_o2 as on_o2,
	cacd.on_air as on_air,
	cacd.remarks as remarks,
	clt.is_hiv as hiv,
	clt.current_bed_no,
	cacd.health_status as health_status,
	cacd.service_date as last_check_up_time
	from covid19_lab_test_detail ltd
	inner join covid19_admission_detail clt on ltd.covid_admission_detail_id = clt.id
	left join health_infrastructure_details suggested_hospital on clt.suggested_health_infra = suggested_hospital.id
	left join health_infrastructure_ward_details hiwd on hiwd.id = clt.current_ward_id
	inner join covid19_admitted_case_daily_status cacd on cacd.id = clt.last_check_up_detail_id
	left join health_infrastructure_details sample_from on sample_from.id = ltd.sample_health_infra
	left join imt_member on clt.member_id = imt_member.id
	left join imt_family on imt_member.family_id = imt_family.family_id
	where
	(((select role_id from um_user where id = #loggedInUserId#) in (59,25,96))
	or ltd.sample_health_infra_send_to = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = ''#loggedInUserId#'' and uhi.state = ''ACTIVE'')
	)
	and clt.status not in (''DISCHARGED'',''DEAD'',''REFER'') and ltd.lab_collection_status in (''POSITIVE'',''NEGATIVE'')
and lab_result not like ''%_temp''
	and  ltd.search_text ilike concat(''%'',#searchText#,''%'')
	and ltd.is_archive is not true
	order by ltd.result_server_date desc
--	#limit_offset#
	limit #limit# offset #offset#
)
select
id as "admissionId"
,lab_id as "labCollectionId"
,lab_test_number as "labTestNumber"
,indeterminate_date as "indeterminateDate"
,lab_test_id as "labTestId"
,lab_result as "labResult"
,result_remarks as "resultRemarks"
,is_recollect as "isRecollect"
,other_result_remarks_selected as "otherResultRemarksSelected"
,lab_result_entry_on as "labResultEntryOn"
,suggested_hospital as "suggestedHospital"
,member_id as "memberId"
,loc_id as "locationId"
,member_det as "memberDetail"
,age as "age"
,admission_date as "admissionDate"
,ward_name as "wardName"
,ward_id as "wardId"
,current_bed_no as "bedNumber"
,health_status as "healthStatus"
,to_char(last_check_up_time,''DD/MM/YYYY'') as "lastCheckUpTime"
,on_ventilator
,ventilator_type1
,ventilator_type2
,on_o2
,on_air
,remarks
,hiv
,sample_from_health_infra as "sampleFrom"
,is_covid_lab as "isSameHealthInfrastructure"
,cast(''CONFIRMATION'' as text) as "resultStage"
from idsp_screening',true,'ACTIVE',NULL,true,'b9d9ff01-25f8-46e0-a9bc-da3901609368'),
	 (80240,'2020-08-05 00:00:00',80240,'2020-08-05 00:00:00','covid19_edit_lab_result','result,otherResultRemarksSelected,resultDate,labName,isRecollect,id,userId,resultRemarks','with admission_det as ( 
select cltd.covid_admission_detail_id as admission_id
from covid19_lab_test_detail cltd where id = #id#
),sample_count_det as(
select count(1) as sample_count from covid19_lab_test_detail cltd where cltd.covid_admission_detail_id = (select admission_id from admission_det) 
),update_admission_status as (
update covid19_admission_detail
set status = (case when scd.sample_count = 1 and #result# = ''POSITIVE'' then ''CONFORMED''
when scd.sample_count = 1 then ''SUSPECTED''
else status end)
from sample_count_det scd
where id = (select admission_id from admission_det) and status in (''CONFORMED'',''SUSPECTED'')
)
update covid19_lab_test_detail
set lab_result_entry_on = #resultDate# ,
lab_result_entry_by = #userId#,
lab_result = #result#,
lab_collection_status = #result#,
indeterminate_lab_name = (case when #labName# = null then indeterminate_lab_name else #labName# end),
result_remarks = (case when #resultRemarks# = null then null else #resultRemarks# end),
is_recollect = #isRecollect#,
other_result_remarks_selected = (case when #otherResultRemarksSelected# = null then null else #otherResultRemarksSelected# end),
result_server_date = now()
where id = #id#;',false,'ACTIVE',NULL,true,'da31b1a0-c013-4612-9d17-32da83a96905'),
	 (80240,'2020-08-05 00:00:00',80240,'2020-08-05 00:00:00','lab_test_dashboard_mark_sample_received_status','receiveDate,rejectionRemarks,labTestNumber,rejectionRemarkSelected,id,userId,status','update covid19_lab_test_detail
set lab_collection_status = #status#,
lab_sample_rejected_by = case when #status# = ''SAMPLE_REJECTED'' then #userId# else null end,
lab_sample_rejected_on = case when #status# = ''SAMPLE_REJECTED'' then cast(#receiveDate# as timestamp) else null end,
lab_sample_reject_reason = #rejectionRemarks#,
lab_sample_received_by = case when #status# = ''SAMPLE_ACCEPTED'' then #userId# else null end,
lab_sample_received_on = case when #status# = ''SAMPLE_ACCEPTED'' then cast(#receiveDate# as timestamp) else null end,
lab_test_number = case when #status# = ''SAMPLE_ACCEPTED'' then #labTestNumber# else null end,
rejection_remark_selected = (case when #rejectionRemarkSelected# = ''null'' then null else #rejectionRemarkSelected# end),
receive_server_date = now()
where id = #id#;',false,'ACTIVE',NULL,true,'1b605f3c-ea8e-4722-93e6-13e01fdf1e7f'),
	 (80240,'2020-08-05 00:00:00',80240,'2020-08-05 00:00:00','lab_test_insert_transfer_history','healthInfraTo,labTestId,transferDate,healthInfraFrom,userId','insert into covid19_lab_test_transfer_history
(lab_test_id,health_infra_from,health_infra_to,transferred_on,transfer_server_date,transferred_by)
values(#labTestId#,#healthInfraFrom#,#healthInfraTo#,cast(#transferDate# as timestamp),now(),#userId#);',false,'ACTIVE',NULL,true,'98b90f9a-a4ae-489f-8e1f-a41462b15a8c'),
	 (-1,'2018-07-04 21:21:18.305',58981,'2019-05-02 17:29:19.058','save_duplicate_member_det','action_by,is_member2_valid,id,is_member1_valid','update imt_member_duplicate_member_detail set 
is_member1_valid = #is_member1_valid# , is_member2_valid = #is_member2_valid# , is_active = false , modified_on = now(),modified_by = #action_by# 
where id = #id#;',false,'ACTIVE','It will call when duplicate member detail are save.',true,'c91eb3e5-67ef-418d-acb9-377dce389c0f'),
	 (74840,'2020-08-05 00:00:00',74840,'2020-08-05 00:00:00','covid_19_edit_opd_lab_test','is_hypertension,indications,occupation,refer_from_hospital,location_id,healthInfraId,abroad_contact_details,flight_no,contact_no,health_status,is_fever,pincode,case_no,pregnancy_status,current_bed_no,is_hiv,lastname,unit_no,is_abroad_in_contact,suggestedHealthInfra,opd_case_no,in_contact_with_covid19_paitent,is_copd,firstname,gender,date_of_onset_symptom,other_co_mobidity,is_breathlessness,emergency_contact_name,labHealthInfraId,emergency_contact_no,travel_history,is_diabetes,is_malignancy,is_cough,address,is_sari,is_other_co_mobidity,middlename,is_immunocompromized,collectionDate,is_renal_condition,isMigrant,travelled_place,is_heart_patient,otherIndications,admissionId,age,current_ward_id,ageMonth','begin;
update covid19_admission_detail
set
first_name = case when #firstname# != null then #firstname# else null end,
middle_name = case when #middlename# != null then #middlename# else null end,
last_name = case when #lastname# != null then #lastname# else null end,
address = case when #address# != null then #address# else null end,
pincode = #pincode#,
occupation = case when #occupation# != null then #occupation# else null end,
travel_history = case when #travel_history# != null then #travel_history# else null end,
travelled_place = case when #travelled_place# != null then #travelled_place# else null end,
flight_no = case when #flight_no# != null then #flight_no# else null end,
is_abroad_in_contact = case when #is_abroad_in_contact# != null then #is_abroad_in_contact# else null end,
in_contact_with_covid19_paitent = case when #in_contact_with_covid19_paitent# != null then #in_contact_with_covid19_paitent# else null end,
abroad_contact_details = case when #abroad_contact_details# != null then #abroad_contact_details# else null end,
case_no = case when #case_no# != null then #case_no# else null end ,
opd_case_no = case when #opd_case_no# != null then #opd_case_no# else null end,
contact_number = case when #contact_no# != null then #contact_no# else null end,
gender = case when #gender# != null then #gender# else null end,
pregnancy_status = case when #pregnancy_status# != null then #pregnancy_status# else null end,
age = #age#,
is_fever = #is_fever#,
is_cough = #is_cough#,
is_breathlessness = #is_breathlessness#,
is_sari = #is_sari#,
is_hiv = #is_hiv#,
is_heart_patient = #is_heart_patient#,
is_diabetes = #is_diabetes#,
is_copd = #is_copd#,
is_hypertension = #is_hypertension#,
is_renal_condition = #is_renal_condition#,
is_immunocompromized = #is_immunocompromized#,
is_malignancy = #is_malignancy#,
is_other_co_mobidity = #is_other_co_mobidity#,
other_co_mobidity = case when #other_co_mobidity# != null then #other_co_mobidity# else null end,
indications = case when #indications# != null then #indications# else null end,
date_of_onset_symptom = (case when #date_of_onset_symptom# = null then null else to_date(#date_of_onset_symptom#,''MM-DD-YYYY'') end),
refer_from_hospital = case when #refer_from_hospital# != null then #refer_from_hospital# else null end,
current_bed_no = case when #current_bed_no# != null then #current_bed_no# else null end,
unit_no = case when #unit_no# != null then #unit_no# else null end,
emergency_contact_name = case when #emergency_contact_name# != null then #emergency_contact_name# else null end,
emergency_contact_no = case when #emergency_contact_no# != null then #emergency_contact_no# else null end,
current_ward_id = #current_ward_id#,
is_migrant=#isMigrant#,
age_month=case when #ageMonth# = null then age_month else #ageMonth#  end,
indication_other=case when #otherIndications# != null then #otherIndications# else null end,
location_id = #location_id#,
suggested_health_infra = #suggestedHealthInfra#
where id = #admissionId#;

update covid19_admitted_case_daily_status
set
location_id = #location_id#,
health_status = case when #health_status# != null then #health_status# else null end
where admission_id = #admissionId#;

update covid19_lab_test_detail
set
sample_health_infra = #healthInfraId# ,
sample_health_infra_send_to = #labHealthInfraId# ,
lab_collection_on =to_timestamp(#collectionDate#,''DD/MM/YYYY HH24:MI:SS'')
where covid_admission_detail_id = #admissionId#;

commit;',false,'ACTIVE',NULL,true,'9308868a-bc1e-415c-b194-d15e7dc7f55f'),
	 (1,'2019-04-24 00:00:00',57698,'2019-11-25 13:58:50.346','version_based_app_install_counts',NULL,'select mp.text_version,count(distinct user_id) from  
(select user_id,max(apk_version) as version from um_user_login_det where apk_version is not null group by user_id)
as t1,um_user u,mobile_version_mapping mp where mp.apk_version = t1.version and u.id = t1.user_id and u.state = ''ACTIVE'' group by apk_version order by apk_version desc limit 4',true,'ACTIVE',NULL,true,'ad02572e-6871-47d4-b0e3-051bf7b390e6'),
	 (1,'2020-03-17 00:00:00',60512,'2020-04-02 13:41:12.286','get_all_lab_test',NULL,'select
	lab_test.id,
	lab_test.name,
	lab_test.category,
	field_value.value as "categoryName",
	lab_test.is_active as "isActive",
	lab_test.form_id as "formId",
	form_master.form_name as "formName"
from
	rch_opd_lab_test_master as "lab_test"
left join listvalue_field_value_detail as "field_value" on
	lab_test.category = field_value.id
inner join system_form_master as "form_master" on
	lab_test.form_id = form_master.id',true,'ACTIVE',NULL,true,'7edb030b-f5e8-4110-997d-d859ed14a593'),
	 (69851,'2020-08-05 00:00:00',69851,'2020-08-05 00:00:00','covid_19_get_opd_only_lab_test_admission','searchText,offset,limit,loggedInUserId','with idsp_screening as (
select
	clt.id as "id",
	clt.location_id as loc_id,
	imt_member.id as member_id,
	case when clt.member_id is null
		then concat_ws('' '',clt.first_name,clt.middle_name,clt.last_name)
		else concat(concat_ws('' '',imt_member.first_name,imt_member.middle_name,imt_member.last_name)
			, '' ('' , imt_member.unique_health_id , '')'' , ''<br>'' , imt_member.family_id) end as member_det,
	concat(case when clt.member_id is null
		then clt.age
		else EXTRACT(YEAR FROM age(imt_member.dob)) end,'' years'') as dob,
	to_char(clt.admission_date,''DD/MM/YYYY'') as admission_date,
	hiwd.ward_name,
	clt.current_ward_id as ward_id,
	cacd.on_ventilator as on_ventilator,
	cacd.ventilator_type1 as ventilator_type1,
	cacd.ventilator_type2 as ventilator_type2,
	cacd.on_o2 as on_o2,
	cacd.on_air as on_air,
	cacd.remarks as remarks,
	clt.current_bed_no,
	cltd.lab_collection_status as test_result,
	(case when cltd.lab_collection_status in (''COLLECTION_PENDING'',''SAMPLE_COLLECTED'',''SAMPLE_ACCEPTED'') then true else false end) as "isLabTestInProgress",
	cacd.health_status as health_status,
	cacd.service_date as last_check_up_time,
	clt.is_hiv,
	clt.is_heart_patient,
	clt.is_diabetes ,
	clt.is_copd,
	clt.is_renal_condition,
	clt.is_hypertension,
	clt.is_immunocompromized,
	clt.is_malignancy,
	clt.is_other_co_mobidity,
	clt.other_co_mobidity,
	clt.is_fever,
	clt.is_cough,
	clt.is_breathlessness,
	clt.is_sari,
    cltd.id as lab_test_id,
    cltd.lab_test_id as lab_id
	from covid19_admission_detail clt
	left join health_infrastructure_ward_details hiwd on hiwd.id = clt.current_ward_id
	inner join covid19_admitted_case_daily_status cacd on cacd.id = clt.last_check_up_detail_id
	inner join covid19_lab_test_detail cltd on cltd.id = clt.last_lab_test_id
	left join imt_member on clt.member_id = imt_member.id
	left join imt_family on imt_member.family_id = imt_family.family_id
	where
	cltd.sample_health_infra in (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = #loggedInUserId# and uhi.state = ''ACTIVE'')
	and clt.admission_from in (''OPD_ADMIT'')
    and (#searchText# = null OR clt.search_text ilike concat(''%'',#searchText#,''%''))
	order by cltd.created_on desc
	limit #limit# offset #offset#
)
select
id as "admissionId"
,member_id as "memberId"
,loc_id as "locationId"
,member_det as "memberDetail"
,dob as "DOB"
,admission_date as "admissionDate"
,ward_name as "wardName"
,ward_id as "wardId"
,current_bed_no as "bedNumber"
,test_result as "testResult"
,health_status as "healthStatus"
,to_char(last_check_up_time,''DD/MM/YYYY'') as "lastCheckUpTime"
,on_ventilator as "onVentilator"
,ventilator_type1 as "ventilatorType1"
,ventilator_type2 as "ventilatorType2"
,on_o2 as "onO2"
,on_air as "onAir"
,remarks
,"isLabTestInProgress"
,is_hiv as "isHIV"
,is_heart_patient as "isHeartPatient"
,is_diabetes as "isDiabetes"
,is_copd as "isCOPD"
,is_renal_condition as "isRenalCondition"
,is_hypertension as "isHypertension"
,is_immunocompromized as "isImmunocompromized"
,is_malignancy as "isMalignancy"
,is_other_co_mobidity as "isOtherCoMobidity"
,other_co_mobidity as "otherCoMobidity"
,is_fever as "hasFever"
,is_cough as "hasCough"
,is_breathlessness as "hasShortnessBreath"
,is_sari as "isSari"
,lab_test_id as "labTestId"
,lab_id as "labTestIdFromLabTest"
from idsp_screening;',true,'ACTIVE',NULL,true,'ce8adad7-1fc7-4432-8b16-65437d7d4e97'),
	 (66522,'2020-08-18 13:23:55.21',66522,'2020-08-18 19:10:17.755','soh_pending_work_anc_1','limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
notification.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
to_char(lmp_date,''DD-MM-YYYY'') as "val_LMP Date",
to_char(reg_service_date,''DD-MM-YYYY'') as "val_Registration Date",
cast(''ANC 1'' AS text) as "val_Pending Work Type",
to_char(notification.schedule_date,''DD-MM-YYYY'') as "val_Schedule Date",
to_char(notification.due_on,''DD-MM-YYYY'') as "val_Due Date",
to_char(notification.expiry_date,''DD-MM-YYYY'') as "val_Expiry Date",
notification.location_id as loc_id
from techo_notification_master_analysis notification inner join imt_member m on m.id = notification.member_id
inner join rch_pregnancy_analytics_details analytics on analytics.member_id = notification.member_id
inner join  notification_type_master type_master on notification.notification_type_id = type_master.id
where 
delivery_outcome is null and death_date is null and
notification.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#) 
and type_master.code=''FHW_ANC''
and cast(due_on as date) <= current_date
and notification_code =''1''
and ( notification.expiry_date is null or cast(notification.expiry_date as date) >= current_date) and notification.state  = ''PENDING''
limit #limit#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id
	where family_head = true
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
inner join anmLocation a on  uld.loc_id = a.location_id
inner join um_user uu on uu.id = uld.user_id 
where 
uld.state = ''ACTIVE'' and uu.state=''ACTIVE'' and
uu.role_id in (select id from um_role_master where code =''FHW'' )
group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
	select max(service_date) as service_date,services.member_id from rch_member_services services
	inner join analytics a on a.member_id = services.member_id
	group by services.member_id 
),
lastServiceUnique as(
	select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
	where service.member_id = last.member_id
	group by service.member_id, last.service_date
),
lastServiceDetails as (
	select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
	service.location_id,
	location.name as locationName,
	case when service.service_type =''FHW_LMP'' then ''LMP Visit''
		when  service.service_type =''FHW_ANC'' then ''ANC Visit''
		  when service.service_type = ''FHW_PNC'' then ''PNC Visit''
		  when service.service_type = ''FHW_CS'' then ''Child Service''
		  when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
	end as service_type,
	service.member_id 
	from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id
	
	inner join location_master location on service.location_id = location.id
	
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName"
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = a.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id',true,'ACTIVE',NULL,NULL,'0cdd7b03-db03-404a-a2bc-bd243eea94cc'),
	 (-1,'2018-06-18 17:52:21.84',1027,'2018-06-22 12:57:40.83','tr_training_status','userId','select tcm1.course_name "course1",concat(us.first_name,'' '',us.last_name) as "trainer1",lm.name as "ou1",
res."trainingId",res."effectiveDate",res."expirationDate",res."pending",res."totalNoOfAttendees",res."completedCount",
res."trainingState",res."attendeeCount" from
(select distinct on (tcm.training_id) tm.training_id as "trainingId",
case when tm.location_name is null then ''N/A'' else tm.location_name end as "location",tm.effective_date as "effectiveDate",
tm.expiration_date as "expirationDate",
tcm.state as "pending",r1."totalNoOfAttendees",
case when cert."completedCount" is null then 0 else cert."completedCount" end,tm.training_state as "trainingState",count(*) as "attendeeCount"
from tr_training_master tm  inner join tr_training_primary_trainer_rel pt using (training_id)
inner join 
(select count(*) as "totalNoOfAttendees",training_id from 
(select * from tr_training_attendee_rel union select * from tr_training_additional_attendee_rel)r group by r.training_id) r1
on r1.training_id = tm.training_id
left join 
(select count(*) as "completedCount",training_id from tr_certificate_master
where certificate_type = ''COURSECOMPLETION''
group by training_id) cert
on tm.training_id= cert.training_id
inner join (select max(topic_id),expiration_date,training_id,state from tr_topic_coverage_master
group by training_id,expiration_date,state ) tcm 
on tm.training_id = tcm.training_id and tm.expiration_date\:\:date = tcm.expiration_date\:\:date
inner join 
(select count(distinct effective_date) as days,training_id from tr_topic_coverage_master 
group by training_id) days on tm.training_id = days.training_id
inner join 
(select count(*),training_id from tr_attendance_master where  is_present = true
group by training_id,user_id) fully on fully.count = days.days and fully.training_id = days.training_id
where ((tm.expiration_date\:\:date < current_date or (tm.expiration_date\:\:date = current_date and tm.training_state = ''SUBMITTED'')) and
((tcm.state = ''SUBMITTED'') or (tcm.state = ''PENDING'' and tcm.expiration_date\:\:date + interval ''3 days'' >= current_date))
)
and pt.primary_trainer_id = #userId#
group by fully.training_id,tm.training_id,tcm.state,r1."totalNoOfAttendees",
cert."completedCount",tcm.training_id) res
inner join tr_training_course_rel tcr on tcr.training_id = res."trainingId"
inner join tr_course_master tcm1 on tcr.course_id = tcm1.course_id
inner join tr_training_primary_trainer_rel ptr on ptr.training_id = res."trainingId"
inner join um_user us on us.id = ptr.primary_trainer_id
inner join tr_training_org_unit_rel torg on torg.training_id = res."trainingId"
inner join location_master lm on lm.id = torg.org_unit_id',true,'ACTIVE','Retrieves date of training_status of userId',true,'4a35cf26-64ae-49d2-80d4-b6b02b9e9244'),
	 (66522,'2020-08-14 10:02:19.808',66522,'2020-08-18 19:15:17.765','soh_pending_work_anc','limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
notification.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
to_char(lmp_date,''DD-MM-YYYY'') as "val_LMP Date",
to_char(reg_service_date,''DD-MM-YYYY'') as "val_Registration Date",
cast(''ANC'' AS text) as "val_Pending Work Type",
to_char(notification.schedule_date,''DD-MM-YYYY'') as "val_Schedule Date",
to_char(notification.due_on,''DD-MM-YYYY'') as "val_Due Date",
to_char(notification.expiry_date,''DD-MM-YYYY'') as "val_Expiry Date",
notification.location_id as loc_id
from techo_notification_master_analysis notification inner join imt_member m on m.id = notification.member_id
inner join rch_pregnancy_analytics_details analytics on analytics.member_id = notification.member_id
inner join  notification_type_master type_master on notification.notification_type_id = type_master.id
where 
delivery_outcome is null and death_date is null and
notification.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#) 
and type_master.code=''FHW_ANC''
and cast(due_on as date) <= current_date
and ( notification.expiry_date is null or cast(notification.expiry_date as date) >= current_date) and notification.state  = ''PENDING''
limit #limit#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id
	where family_head = true
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
inner join anmLocation a on  uld.loc_id = a.location_id
inner join um_user uu on uu.id = uld.user_id 
where 
uld.state = ''ACTIVE'' and uu.state=''ACTIVE'' and
uu.role_id in (select id from um_role_master where code =''FHW'' )
group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
	select max(service_date) as service_date,services.member_id from rch_member_services services
	inner join analytics a on a.member_id = services.member_id
	group by services.member_id 
),
lastServiceUnique as(
	select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
	where service.member_id = last.member_id
	group by service.member_id, last.service_date
),
lastServiceDetails as (
	select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
	service.location_id,
	location.name as locationName,
	case when service.service_type =''FHW_LMP'' then ''LMP Visit''
		when  service.service_type =''FHW_ANC'' then ''ANC Visit''
		  when service.service_type = ''FHW_PNC'' then ''PNC Visit''
		  when service.service_type = ''FHW_CS'' then ''Child Service''
		  when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
	end as service_type,
	service.member_id 
	from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id
	
	inner join location_master location on service.location_id = location.id
	
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName"
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = a.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id',true,'ACTIVE',NULL,NULL,'509392da-9912-4278-aae0-d008ec93582f'),
	 (66522,'2020-08-14 17:11:47.658',66522,'2020-08-19 12:55:24.209','soh_pending_work_tt1','limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
analytics.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
cast(''TT 1'' AS text) as "val_Pending Work Type",
to_char(lmp_date,''DD-MM-YYYY'') as "val_LMP Date",
to_char(reg_service_date,''DD-MM-YYYY'') as "val_Registration Date",

analytics.member_current_location_id as loc_id
from rch_pregnancy_analytics_details analytics inner join imt_member m on m.id = analytics.member_id
where 
analytics.member_current_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#) 
and
delivery_outcome is null and death_date is null and
(( m.immunisation_given is null or  m.immunisation_given = '''' is true) and (last_delivery_date is null or last_delivery_date <= current_date - interval ''3 year'' ) and anc1 is not null)
limit #limit#
),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id
	where family_head = true
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
inner join anmLocation a on  uld.loc_id = a.location_id
inner join um_user uu on uu.id = uld.user_id 
where 
uld.state = ''ACTIVE'' and uu.state=''ACTIVE'' and
uu.role_id in (select id from um_role_master where code =''FHW'' )
group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
	select max(service_date) as service_date,services.member_id from rch_member_services services
	inner join analytics a on a.member_id = services.member_id
	group by services.member_id 
),
lastServiceUnique as(
	select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
	where service.member_id = last.member_id
	group by service.member_id, last.service_date
),
lastServiceDetails as (
	select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
	service.location_id,
	location.name as locationName,
	case when service.service_type =''FHW_LMP'' then ''LMP Visit''
		when  service.service_type =''FHW_ANC'' then ''ANC Visit''
		  when service.service_type = ''FHW_PNC'' then ''PNC Visit''
		  when service.service_type = ''FHW_CS'' then ''Child Service''
		  when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
	end as service_type,
	service.member_id 
	from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id
	
	inner join location_master location on service.location_id = location.id
	
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName"
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = a.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id',true,'ACTIVE',NULL,NULL,'21010d04-7357-4bf4-a77b-dfc111b1d013'),
	 (1,'2019-05-14 00:00:00',NULL,NULL,'retrieve_display_name_for_feature','feature_name_list,menu_id','select feature_name,display_name from feature_display_name where menu_id = #menu_id# and feature_name in (#feature_name_list#)',true,'ACTIVE',NULL,true,'1170d23b-53db-4975-abbb-8a79a8b15b5c'),
	 (66522,'2020-08-18 13:24:28.162',66522,'2020-08-18 19:10:02.03','soh_pending_work_anc_2','limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
notification.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
to_char(lmp_date,''DD-MM-YYYY'') as "val_LMP Date",
to_char(reg_service_date,''DD-MM-YYYY'') as "val_Registration Date",
cast(''ANC 2'' AS text) as "val_Pending Work Type",
to_char(notification.schedule_date,''DD-MM-YYYY'') as "val_Schedule Date",
to_char(notification.due_on,''DD-MM-YYYY'') as "val_Due Date",
to_char(notification.expiry_date,''DD-MM-YYYY'') as "val_Expiry Date",
notification.location_id as loc_id
from techo_notification_master_analysis notification inner join imt_member m on m.id = notification.member_id
inner join rch_pregnancy_analytics_details analytics on analytics.member_id = notification.member_id
inner join  notification_type_master type_master on notification.notification_type_id = type_master.id
where 
delivery_outcome is null and death_date is null and
notification.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#) 
and type_master.code=''FHW_ANC''
and cast(due_on as date) <= current_date
and notification_code =''2''
and ( notification.expiry_date is null or cast(notification.expiry_date as date) >= current_date) and notification.state  = ''PENDING''
limit #limit#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id
	where family_head = true
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
inner join anmLocation a on  uld.loc_id = a.location_id
inner join um_user uu on uu.id = uld.user_id 
where 
uld.state = ''ACTIVE'' and uu.state=''ACTIVE'' and
uu.role_id in (select id from um_role_master where code =''FHW'' )
group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
	select max(service_date) as service_date,services.member_id from rch_member_services services
	inner join analytics a on a.member_id = services.member_id
	group by services.member_id 
),
lastServiceUnique as(
	select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
	where service.member_id = last.member_id
	group by service.member_id, last.service_date
),
lastServiceDetails as (
	select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
	service.location_id,
	location.name as locationName,
	case when service.service_type =''FHW_LMP'' then ''LMP Visit''
		when  service.service_type =''FHW_ANC'' then ''ANC Visit''
		  when service.service_type = ''FHW_PNC'' then ''PNC Visit''
		  when service.service_type = ''FHW_CS'' then ''Child Service''
		  when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
	end as service_type,
	service.member_id 
	from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id
	
	inner join location_master location on service.location_id = location.id
	
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName"
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = a.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id',true,'ACTIVE',NULL,NULL,'c2089f1b-2a11-4034-8f77-ad91e7e59e9e'),
	 (66522,'2020-08-14 17:13:29.515',66522,'2020-08-19 12:56:08.586','soh_pending_work_tt2','limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
analytics.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
to_char(lmp_date,''DD-MM-YYYY'') as "val_LMP Date",
to_char(reg_service_date,''DD-MM-YYYY'') as "val_Registration Date",
cast(''TT 2'' AS text) as "val_Pending Work Type",
analytics.member_current_location_id as loc_id
from rch_pregnancy_analytics_details analytics inner join imt_member m on m.id = analytics.member_id
where 
analytics.member_current_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#) 
and delivery_outcome is null and death_date is null 
and
analytics.tt1_given is not null and analytics.tt2_given is null and analytics.tt1_given <= current_date - interval ''28 days''
and anc2 is not null
limit #limit#

),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id
	where family_head = true
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
inner join anmLocation a on  uld.loc_id = a.location_id
inner join um_user uu on uu.id = uld.user_id 
where 
uld.state = ''ACTIVE'' and uu.state=''ACTIVE'' and
uu.role_id in (select id from um_role_master where code =''FHW'' )
group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
	select max(service_date) as service_date,services.member_id from rch_member_services services
	inner join analytics a on a.member_id = services.member_id
	group by services.member_id 
),
lastServiceUnique as(
	select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
	where service.member_id = last.member_id
	group by service.member_id, last.service_date
),
lastServiceDetails as (
	select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
	service.location_id,
	location.name as locationName,
	case when service.service_type =''FHW_LMP'' then ''LMP Visit''
		when  service.service_type =''FHW_ANC'' then ''ANC Visit''
		  when service.service_type = ''FHW_PNC'' then ''PNC Visit''
		  when service.service_type = ''FHW_CS'' then ''Child Service''
		  when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
	end as service_type,
	service.member_id 
	from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id
	
	inner join location_master location on service.location_id = location.id
	
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName"
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = a.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id',true,'ACTIVE',NULL,NULL,'c1f53c7e-5bf8-48c0-8d35-19600417fdf4'),
	 (66522,'2020-08-18 13:24:58.795',66522,'2020-08-18 19:09:14.178','soh_pending_work_anc_3','limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
notification.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
to_char(lmp_date,''DD-MM-YYYY'') as "val_LMP Date",
to_char(reg_service_date,''DD-MM-YYYY'') as "val_Registration Date",
cast(''ANC 3'' AS text) as "val_Pending Work Type",
to_char(notification.schedule_date,''DD-MM-YYYY'') as "val_Schedule Date",
to_char(notification.due_on,''DD-MM-YYYY'') as "val_Due Date",
to_char(notification.expiry_date,''DD-MM-YYYY'') as "val_Expiry Date",
notification.location_id as loc_id
from techo_notification_master_analysis notification inner join imt_member m on m.id = notification.member_id
inner join rch_pregnancy_analytics_details analytics on analytics.member_id = notification.member_id
inner join  notification_type_master type_master on notification.notification_type_id = type_master.id
where 
delivery_outcome is null and death_date is null and
notification.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#) 
and type_master.code=''FHW_ANC''
and cast(due_on as date) <= current_date
and notification_code =''3''
and ( notification.expiry_date is null or cast(notification.expiry_date as date) >= current_date) and notification.state  = ''PENDING''
limit #limit#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id
	where family_head = true
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
inner join anmLocation a on  uld.loc_id = a.location_id
inner join um_user uu on uu.id = uld.user_id 
where 
uld.state = ''ACTIVE'' and uu.state=''ACTIVE'' and
uu.role_id in (select id from um_role_master where code =''FHW'' )
group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
	select max(service_date) as service_date,services.member_id from rch_member_services services
	inner join analytics a on a.member_id = services.member_id
	group by services.member_id 
),
lastServiceUnique as(
	select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
	where service.member_id = last.member_id
	group by service.member_id, last.service_date
),
lastServiceDetails as (
	select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
	service.location_id,
	location.name as locationName,
	case when service.service_type =''FHW_LMP'' then ''LMP Visit''
		when  service.service_type =''FHW_ANC'' then ''ANC Visit''
		  when service.service_type = ''FHW_PNC'' then ''PNC Visit''
		  when service.service_type = ''FHW_CS'' then ''Child Service''
		  when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
	end as service_type,
	service.member_id 
	from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id
	
	inner join location_master location on service.location_id = location.id
	
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName"
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = a.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id',true,'ACTIVE',NULL,NULL,'afb59edb-0b83-4710-a3b2-fe012a09896d'),
	 (1,'2020-02-19 13:16:14.653612',NULL,NULL,'team_type_retrival','roleId','select ttm.id ,
 ttm.type from team_type_master ttm inner join 
(select * from team_type_role_master ttrm where role_id = #roleId# AND state = ''ACTIVE'') as team_role 
on team_role.team_type_id = ttm.id where ttm.state =''ACTIVE'';',true,'ACTIVE',NULL,true,'e92b1be9-ac8e-4ec8-813d-3d181a7ad60a'),
	 (80251,'2020-08-25 00:00:00',80251,'2020-08-25 00:00:00','insert_into_system_code_master_list','codeCategory,code,otherDetails,description,publishedEdition,isActive,codeId,descTypeId,parentCode,createdBy,name,modifiedBy,id,effectiveDate,code_type','insert into system_code_master_list (id,code_type
,code_category,code_id,code,parent_code,name,description,desc_type_id,effective_date,
other_details,published_edition,is_active,created_by,created_on,modified_by,modified_on )
values 
(  CAST (  #id#  AS uuid )  ,#code_type#
,#codeCategory#,#codeId#,#code#,#parentCode#,#name#,#description#,#descTypeId#,#effectiveDate#,
#otherDetails#,#publishedEdition#,#isActive#,#createdBy#,now(),#modifiedBy#, now() )
ON CONFLICT (code_id) 
DO 
UPDATE SET  
modified_on  = now() ,
 modified_by = EXCLUDED.modified_by,
 code_category= EXCLUDED.code_category,
 code= EXCLUDED.code,
 code_type= EXCLUDED.code_type,
 name= EXCLUDED.name,
 parent_code= EXCLUDED.parent_code,
 description= EXCLUDED.description,
 desc_type_id= EXCLUDED.desc_type_id,
 effective_date= EXCLUDED.effective_date,
 other_details= EXCLUDED.other_details,
 published_edition= EXCLUDED.published_edition,
 is_active= EXCLUDED.is_active;',false,'ACTIVE','this query is used to insert or update into system code master list table',true,'e9ce70dd-8f58-4b57-ae36-c0b51c591bac'),
	 (75398,'2020-08-25 00:00:00',75398,'2020-08-25 00:00:00','retrieve_snomed_ct_single_expresion','opdId','select concat_ws('' | '', scm.code,scm.description ) from rch_opd_member_master romm inner join rch_opd_lab_test_provisional_rel rolt on rolt.opd_member_master_id = romm.id 
inner join listvalue_field_value_detail listvalue on  rolt.provisional_id = listvalue.id inner join system_code_master scm on listvalue.id = scm.table_id where scm.table_type = ''LIST_VALUE'' and scm.code_type = ''SNOMED_CT'' and romm.id = #opdId# ',true,'ACTIVE','Fire postgres query to get snomed ct expressions for given opdId',true,'85da7dbd-f80c-407e-8022-c4834b776f00'),
	 (58981,'2019-09-02 14:23:26.639',58981,'2019-09-02 14:23:26.639','mob_asha_wpd_services_provided','memberId','select to_char(rch.service_date, ''DD/MM/YYYY'') as "Reported Date",
case when rch.has_delivery_happened = true then ''Yes'' when rch.has_delivery_happened = false then ''No'' else null end as "Delivery Happened"
from rch_asha_wpd_master rch
inner join imt_member mem on rch.member_id = mem.id
where member_id = #memberId#
order by rch.service_date desc;',true,'ACTIVE',NULL,true,'61233dae-ecbe-4229-9583-7c575a065b7a'),
	 (74841,'2020-08-25 00:00:00',74841,'2020-08-25 00:00:00','get_locations_type',NULL,'select type,name,level from location_type_master',true,'ACTIVE',NULL,true,'86a64620-97fc-480a-98c3-f724824ae5de'),
	 (74841,'2020-08-25 00:00:00',74841,'2020-08-25 00:00:00','delete_health_infra_mapping','is_active,is_archive,id,userId','UPDATE listvalue_field_value_detail
SET is_active= #is_active#, 
is_archive= #is_archive#, 
last_modified_by = #userId#, 
last_modified_on = now()
WHERE id= #id#;',false,'ACTIVE',NULL,true,'1229a93d-98b5-490b-90ab-5d1ea16591e4'),
	 (1027,'2018-08-14 21:43:11.089047',NULL,NULL,'user_access_detail_access_mob_entry','userId,apkVersion','insert into user_data_access_detail_request 
(user_id,created_on,apk_version)
select #userId#,localtimestamp,#apkVersion#',false,'ACTIVE',NULL,true,'95332a57-cb98-44aa-9727-0e40ab768ad8'),
	 (74909,'2020-08-25 00:00:00',74909,'2020-08-25 00:00:00','get_geo_map_by_lgdcode','lgdCode','with lgc_codes as (
	 select lgd_code from location_master where id  in (select parent_id from location_hierchy_closer_det lh  where lh.parent_loc_type  in (''V'',''C'') and child_id in(#lgdCode#))
union all
	select lgd_code from location_master where id  in (select parent_id from location_hierchy_closer_det lh  where lh.parent_loc_type  in (''B'') and child_loc_type =''AA'' and child_id in(#lgdCode#))
)
select ST_AsGeoJSON(geom),lgd_code from location_geo_coordinates where lgd_code in (select lgd_code from lgc_codes);',true,'ACTIVE',NULL,true,'6d402403-b75e-4cb6-88bc-479a3289efec'),
	 (74840,'2020-08-25 00:00:00',74840,'2020-08-25 00:00:00','retrieve_assigned_covid_hospitals','userId','select
    health_infrastructure_details.*,
    get_location_hierarchy(health_infrastructure_details.location_id) as "healthInfraLocation",
    listvalue_field_value_detail.value as "typeOfHosiptalName"
    from health_infrastructure_details
    inner join user_health_infrastructure on health_infrastructure_details.id = user_health_infrastructure.health_infrastrucutre_id
    left join listvalue_field_value_detail on health_infrastructure_details.type = listvalue_field_value_detail.id
    where user_health_infrastructure.user_id = #userId#
    and user_health_infrastructure.state = ''ACTIVE''
    and (health_infrastructure_details.is_covid_hospital or health_infrastructure_details.is_covid_lab)
    and is_covid_lab = true',true,'ACTIVE',NULL,true,'22e1256b-9081-4a13-9e15-407dedba7d1a'),
	 (57698,'2020-04-01 19:41:07.093',57698,'2020-04-10 17:01:15.614','covid_case_markings_retrieval',NULL,'--select lat as "latitude",long as "longitude",''Age:''||age 
--|| '',''||''Sex:''||sex as description
--from covid_positive_case_info  where  lat is not null and long is not null

select address_lat as "latitude", address_lng as "longitude",''Age:''||cad.age 
|| '',''||''Sex:''||cad.gender as description from covid19_admission_detail cad, covid19_admission_analytics_details caa where cad.id = caa.admission_id and caa.positive_member = 1 and address_lat is not null',true,'ACTIVE',NULL,true,'9b64c67b-8e9d-4c76-b53e-94e9b91d9274'),
	 (80314,'2020-10-16 00:00:00',80314,'2020-10-16 00:00:00','check_for_team_name_already_exist_or_not','teamName,id','select
	count(*)
from
	team_master
where
	case
		when #id# is null then "name" = #teamName#
		else "name" = #teamName#
		and id not in (#id#)
	end',true,'ACTIVE',NULL,true,'c5401d39-edac-4959-bbb5-defd3fd968cf'),
	 (409,'2019-07-16 21:40:41.006',409,'2019-08-22 14:39:17.6','cm_dashboard_jsy_report','monthyear','--JSY
with loc_det as (
select lm.id as loc_id,lm.english_name as taluka_name,lm.cm_dashboard_code as taluka_code
,dist.location_code as district_code,dist.english_name as district_name
from location_master lm,location_master dist
where lm.type in (''B'',''Z'') and lm.parent = dist.id
),dates as (
select to_date(case when ''#monthyear#'' = ''null'' then null else ''#monthyear#'' end,''MM-DD-YYYY'') as from_date 
,to_date(case when ''#monthyear#'' = ''null'' then null else ''#monthyear#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 milliseconds'' as to_date
),jsy_report_det as (
select lh.parent_id as loc_id,count(*) as total_jsy_payment,count(*) as total_jsy_transaction,count(*) as total_jsy_dbt_transfer
from rch_pregnancy_analytics_details rpa,location_hierchy_closer_det lh,dates
where lh.child_id = rpa.native_location_id and lh.parent_id in (select loc_id from loc_det)
and rpa.jsy_payment_date 
between dates.from_date	and dates.to_date
group by lh.parent_id
),delivery_det as (
select lh.parent_id as loc_id,count(*) as del_reg
from rch_pregnancy_analytics_details rpa1,location_hierchy_closer_det lh,dates
where lh.child_id = rpa1.delivery_location_id and lh.parent_id in (select loc_id from loc_det)
and rpa1.date_of_delivery_month_year = dates.from_date
and rpa1.jsy_beneficiary
and  date_of_delivery_month_year is not null and delivery_outcome is not null
group by lh.parent_id
)
select loc_det.district_code ,loc_det.district_name
,loc_det.taluka_code,loc_det.taluka_name
,EXTRACT(YEAR FROM dates.from_date) as year
,EXTRACT(MONTH FROM dates.from_date) as month
,delivery_det.del_reg as total_delivery_reg
,jsy_report_det.total_jsy_payment
,jsy_report_det.total_jsy_transaction
,jsy_report_det.total_jsy_dbt_transfer
from loc_det
inner join dates on true
left join jsy_report_det on jsy_report_det.loc_id = loc_det.loc_id
left join delivery_det on delivery_det.loc_id = loc_det.loc_id;',true,'ACTIVE',NULL,true,'5b13214f-2e33-4c8e-9f54-7f21ea339aa9'),
	 (74841,'2020-08-25 00:00:00',74841,'2020-08-25 00:00:00','retrieve_field_values_for_form_field','form,fieldKey','select value as value , v.id as id from listvalue_field_master f , listvalue_field_value_detail  v
where f.field_key=v.field_key and f.form = #form# and v.field_key=#fieldKey#
and v.is_active=true',true,'ACTIVE','Retrieve field values for particular field key and form ',true,'931f76f0-7c59-490d-ace0-023ba4414912'),
	 (74841,'2020-08-25 00:00:00',74841,'2020-08-25 00:00:00','retrieve_field_values_for_form_with_health_infra_type','form,fieldKey','with type_mapping as (
	select health_infra_type_id, string_agg(ltm.name, '','') as loc_value, string_agg(ltm."type", '','') as loc_types ,
string_agg('''' || hitl.location_level, '','') as location_level
from health_infrastructure_type_location hitl
	left join location_type_master ltm on ltm.type = hitl.location_type
	group by health_infra_type_id
)

select value as value , v.id as id, tm.loc_value, tm.loc_types, tm.location_level
from listvalue_field_master f , listvalue_field_value_detail  v, type_mapping tm 
where f.field_key=v.field_key and f.form = #form# and v.field_key= #fieldKey# and tm.health_infra_type_id = v.id
and v.is_active=true',true,'ACTIVE',NULL,true,'a461ddaa-07be-4237-b938-df8db4a2b932'),
	 (74840,'2020-08-25 00:00:00',74840,'2020-08-25 00:00:00','npcb_mark_as_spectacles_given','loggedInUserId,id,spectaclesGivenDate,memberId','update npcb_member_examination_detail
set spectacles_given_date =  to_date(#spectaclesGivenDate#,''YYYY-MM-DD''),
modified_on = now(),
modified_by = #loggedInUserId#
where id = #id#;
update imt_member
set additional_info =
case when additional_info is not null then
jsonb_set(cast(additional_info as jsonb),''{npcbStatus}'',''"SPECTACLES_GIVEN"'',true)
else ''{"npcbStatus":"SPECTACLES_GIVEN"}'' end
where id = #memberId#;',false,'ACTIVE',NULL,true,'4855a380-d4cc-46b0-8aa2-d66292b2349e'),
	 (57698,'2019-07-10 12:58:29.733',57698,'2019-07-18 21:12:41.104','retrieve_coordinates_assigned_location','userId','select lgd_code,coordinates_csv from location_geo_coordinates where lgd_code in 
(select l.lgd_code from location_hierchy_closer_det ld,location_master l where l.id = ld.child_id and ld.parent_id in
(select distinct level5 from location_level_hierarchy_master  where location_id  in 
(select loc_id from um_user_location where user_id = #userId# and state = ''ACTIVE'')) and l.lgd_code is not null)',true,'ACTIVE','Coordinates retrieval for user',true,'fdea27c0-7524-480f-8cff-ba64304fbc65'),
	 (80314,'2020-08-25 00:00:00',80314,'2020-08-25 00:00:00','insert_soh_element_permissions','elementId,permissionType,ref_ids','delete
from
	soh_element_permissions
where
	element_id = #elementId#
	and permission_type = ''ALL'';
insert
	into
		soh_element_permissions( element_id, permission_type, reference_id )
	values(#elementId#, ''#permissionType#'',
unnest( array#ref_ids#))',false,'ACTIVE',NULL,true,'5a2f6f8f-6915-4bef-a6d5-52d8e06a5336'),
	 (74840,'2020-08-25 00:00:00',74840,'2020-08-25 00:00:00','get_feature_name_with_uuid','searchText,offset,featureType,limit','with unique_uuid as (
	select
	distinct on (feature_uuid )
	feature_uuid,feature_name,feature_type
	from sync_system_configuration_master scs
	where feature_uuid is not null
	and feature_type = #featureType#
    and case when #searchText# != null then feature_name ilike ''%#searchText#%'' else true end
	order by feature_uuid,id desc
	limit #limit# offset #offset#
)
,server_id_merger as (
	select
	u.feature_uuid,
	feature_name,
	feature_type,
	string_agg(cast(master.id as text),'','') as server_ids,
	string_agg(master.server_name,'','') as server_names
	from unique_uuid u
	left join sync_server_feature_mapping_detail map on map.feature_uuid = u.feature_uuid
	left join server_list_master master on map.server_id = master.id
	group by u.feature_uuid,u.feature_name,u.feature_type
)
select cast(feature_uuid as text) as feature_uuid,feature_name,feature_type,server_names,server_ids from server_id_merger',true,'ACTIVE','get feature name',true,'ccd5e720-f4db-4407-b2ef-0e1dc7d8c759'),
	 (-1,'2018-07-04 21:21:18.305',409,'2019-05-03 12:23:08.302','mark_member_as_duplicate','member_id,action_by','update techo_notification_master set state = ''MARK_AS_DUPLICATE'',modified_on = now(),modified_by = #action_by# where member_id = #member_id# 
and state in (''PENDING'',''RESCHEDULE'');

update event_mobile_notification_pending set is_completed =  true ,state = ''MARK_AS_DUPLICATE'',modified_by = #action_by#,modified_on = now()
from event_mobile_configuration where event_mobile_notification_pending.notification_configuration_type_id = event_mobile_configuration.id and member_id = #member_id# 
and state = ''PENDING'';

update imt_member set state = ''com.argusoft.imtecho.member.state.archived'',modified_on = now(),modified_by = #action_by#
where imt_member.id = #member_id# ;',false,'ACTIVE','It will call when any member is marked as duplicate.',true,'e6698236-93df-4dd4-9d53-534acfbf1c75'),
	 (74840,'2020-08-25 00:00:00',74840,'2020-08-25 00:00:00','insert_covid19_new_admission_detail','otherCoMobidity,indications,occupation,isHypertension,emergencyContactNo,abroad_contact_details,referFromHosital,opdCaseNo,admission_date,contact_no,case_number,health_status,memberId,isImmunocompromized,unitno,pregnancy_status,loggedInUserId,isCOPD,travelledPlace,lastname,hasShortnessBreath,pinCode,is_abroad_in_contact,inContactWithCovid19Paitent,firstname,gender,bed_no,date_of_onset_symptom,isRenalCondition,isHeartPatient,isOtherCoMobidity,flightno,locationId,member_id,address,loggedIn_user,ward_no,emergencyContactName,isSari,hasCough,middlename,travelHistory,isMalignancy,isMigrant,covid19_lab_test_recommendation_id,hasFever,isHIV,otherIndications,districtLocationId,isDiabetes,age,ageMonth','with generated_id as (
select  nextval(''covid19_admission_detail_id_seq'') as id
),health_infra_det as (
select * from health_infrastructure_details where id = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = #loggedInUserId# and uhi.state = ''ACTIVE'')
),insert_daily_admission_det as (
insert into covid19_admitted_case_daily_status(member_id,location_id,admission_id,service_date,ward_id,bed_no,health_status,created_by,created_on)
values(#member_id#,#districtLocationId#,(select id from generated_id),#admission_date#,#ward_no#,#bed_no#,#health_status#,#loggedInUserId#,now())
returning id
),insert_lab_test as (
INSERT INTO covid19_lab_test_detail(
member_id, location_id, covid_admission_detail_id, lab_collection_status,created_by,created_on,sample_health_infra)
VALUES (#memberId#,
#locationId#, (select id from generated_id),''COLLECTION_PENDING'',#loggedInUserId#,now(), (select id from health_infra_det))
returning id
),update_lab_test_recommdation as (
update covid19_lab_test_recommendation set admission_id = (select id from generated_id)
where id = #covid19_lab_test_recommendation_id#
)
insert into covid19_admission_detail
(id,
member_id,
first_name,
middle_name,
last_name,
age,
age_month,
contact_number,
address,
gender,
flight_no,
refer_from_hospital,

case_no,
unit_no,

is_cough,
is_fever,
is_breathlessness,
location_id,
covid19_lab_test_recommendation_id,
last_lab_test_id,
last_check_up_detail_id,
health_infra_id,
current_ward_id,
current_bed_no,
admission_status_id,
admission_date,
admission_entry_by,
admission_entry_on,
is_hiv,
is_heart_patient,
is_diabetes,
admission_from,
status,
pincode,
emergency_contact_name,
emergency_contact_no,
is_immunocompromized,
is_hypertension,
is_malignancy,
is_renal_condition,
is_copd,
pregnancy_status,
date_of_onset_symptom,
occupation,
travel_history,
travelled_place,
is_abroad_in_contact,
abroad_contact_details,

in_contact_with_covid19_paitent,
opd_case_no,
is_other_co_mobidity,
other_co_mobidity,
is_sari,
indications,
indication_other,
is_migrant
)
values(
(select id from generated_id)
,#member_id#
,#firstname#
,(case when #middlename# = null then null else #middlename# end)
,(case when #lastname# = null then null else #lastname# end)
,#age#
,#ageMonth#
,(case when #contact_no# = null then null else #contact_no# end)
,(case when #address# = null then null else #address# end)
,(case when #gender# = null then null else #gender# end)
,(case when #flightno# = null then null else #flightno# end)
,(case when #referFromHosital# = null then null else #referFromHosital# end)

,(case when #case_number# = null then null else #case_number# end)
,(case when #unitno# = null then null else #unitno# end)
,#hasCough#
,#hasFever#
,#hasShortnessBreath#
,#districtLocationId#
,#covid19_lab_test_recommendation_id#
,(select id from insert_lab_test)
,(select id from insert_daily_admission_det)
,(select id from health_infra_det)
,#ward_no#
,#bed_no#
,(select id from insert_daily_admission_det)
,#admission_date#
,#loggedIn_user#
,now()
,#isHIV#
,#isHeartPatient#
,#isDiabetes#
,''NEW''
,''SUSPECT''
,(case when #pinCode# = null then null else #pinCode# end)
,(case when #emergencyContactName# = null then null else #emergencyContactName# end)
,(case when #emergencyContactNo# = null then null else #emergencyContactNo# end)
,#isImmunocompromized#
,#isHypertension#
,#isMalignancy#
,#isRenalCondition#
,#isCOPD#
,(case when #pregnancy_status# = null then null else #pregnancy_status# end)
,(case when #date_of_onset_symptom# = null then null else cast(#date_of_onset_symptom# as date) end)
,(case when #occupation# = null then null else #occupation# end)
,(case when #travelHistory# = null then null else #travelHistory# end)
,(case when #travelledPlace# = null then null else #travelledPlace# end)
,(case when #is_abroad_in_contact# = null then null else #is_abroad_in_contact# end)
,(case when #abroad_contact_details# = null then null else #abroad_contact_details# end)

,(case when #inContactWithCovid19Paitent# = null then null else #inContactWithCovid19Paitent# end)
,(case when #opdCaseNo# = null then null else #opdCaseNo# end)
,#isOtherCoMobidity#
,(case when #otherCoMobidity# = null then null else #otherCoMobidity# end)
,#isSari#
,(case when #indications# = null then null else #indications# end)
,(case when #otherIndications# = null then null else #otherIndications# end)
,#isMigrant#
)
RETURNING id;',true,'ACTIVE','This query will insert new record into data base for new covid 19 patient Query must be corrected to map with UI
JSON as input paramter',true,'8201f0fd-c01a-4610-ae0d-1a32e3e782b1'),
	 (60512,'2020-04-04 00:00:00',60512,'2020-04-04 00:00:00','retrieve_covid_hospitals_by_location','locationId','select *
from health_infrastructure_details
where (case when #locationId# is not null then location_id in (select child_id from location_hierchy_closer_det where parent_id = #locationId#) else true end)
and is_covid_hospital',true,'ACTIVE',NULL,true,'6f897ad3-c7e1-4559-b66e-8f316fbb3b4b'),
	 (1,'2019-05-03 00:00:00',NULL,NULL,'cerebral_palsy_cp_list_retrieve','userId,limit,offSet','
with ids as (
	select max(rch_child_cp_suspects.id) from rch_child_cp_suspects
	inner join imt_member on imt_member.id = rch_child_cp_suspects.member_id
	where location_id in (
		select child_id from location_hierchy_closer_det where parent_id in (
			select loc_id from um_user_location where user_id = #userId# and state = ''ACTIVE''
		)
	)
	and imt_member.mother_id is not null
	and status is null
	group by rch_child_cp_suspects.member_id
	limit #limit# offset #offSet#
), member_details as (
	select * from rch_child_cp_suspects
	inner join ids on rch_child_cp_suspects.id = ids.max
)
,hierarchy as (
	select member_details.member_id,
	string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
	from location_master l1 
	inner join member_details on member_details.location_id = l1.id
	inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
	inner join location_master l2 on l2.id = lhcd.parent_id
	group by member_details.member_id
)select t1.id,t3.area_id,member_details.location_id,member_details.child_service_id,member_details.status,
uma.first_name as "ashaName",
uma.contact_number as "ashaNumber",
um.first_name as "FHWName",
um.contact_number as "FHWNumber", 
t1.first_name as "childFirstName",
t1.last_name as "childLastName",
t1.middle_name as "childMiddleName",
t1.dob,
t2.first_name as "motherFirstName",
t2.middle_name as "motherMiddleName",
t2.last_name as "motherLastName",
t2.mobile_number,
hierarchy.location_id as "locationHierarchy"
from member_details
inner join imt_member t1 on t1.id = member_details.member_id
inner join imt_member t2 on t1.mother_id = t2.id
inner join imt_family t3 on t1.family_id = t3.family_id
left join um_user_location ula on t3.area_id = ula.loc_id and ula.state=''ACTIVE''
left join um_user uma on ula.user_id = uma.id and uma.role_id = 24 and uma.state = ''ACTIVE''
inner join um_user_location ul on member_details.location_id = ul.loc_id and ul.state = ''ACTIVE''
inner join um_user um on ul.user_id = um.id and um.role_id = 30 and um.state = ''ACTIVE''
inner join hierarchy on member_details.member_id = hierarchy.member_id
',true,'ACTIVE',NULL,true,'eacac4d8-86cc-4454-93da-26217d6093fb'),
	 (1,'2019-07-01 00:00:00',58981,'2020-05-08 19:11:37.357','mob_work_register_detail_pnc_mother','visitId','--mob_work_register_detail_pnc_mother
with const as (
	select cast(''HOME'' as text) as const, cast(''Home'' as text) as name
	union
	select cast(''ON_THE_WAY'' as text) as const, cast(''On the way'' as text) as name
	union
	select cast(''HOSP'' as text) as const, cast(''Hospital'' as text) as name
	union
	select cast(''MAMTA_DAY'' as text) as const, cast(''Mamta Day'' as text) as name
	union
	select cast(''FMLSTR'' as text) as const, cast(''FEMALE STERILIZATION'' as text) as name
	union
	select cast(''MLSTR'' as text) as const, cast(''MALE STERILIZATION'' as text) as name
	union
	select cast(''IUCD5'' as text) as const, cast(''IUCD- 5 YEARS'' as text) as name
	union
	select cast(''IUCD10'' as text) as const, cast(''IUCD- 10 YEARS'' as text) as name
	union
	select cast(''CONDOM'' as text) as const, cast(''CONDOM'' as text) as name
	union
	select cast(''ORALPILLS'' as text) as const, cast(''ORAL PILLS'' as text) as name
	union
	select cast(''CHHAYA'' as text) as const, cast(''CHHAYA'' as text) as name
	union
	select cast(''ANTARA'' as text) as const, cast(''ANTARA'' as text) as name
	union
	select cast(''CONTRA'' as text) as const, cast(''EMERGENCY CONTRACEPTIVE PILLS'' as text) as name
	union
	select cast(''PPIUCD'' as text) as const, cast(''PPIUCD'' as text) as name
	union
	select cast(''PAIUCD'' as text) as const, cast(''PAIUCD'' as text) as name
	union
	select cast(''NONE'' as text) as const, cast(''NONE'' as text) as name
), dang_sign as (
	select rel.mother_pnc_id, string_agg(det.value ,'', '') as dang_sign 
	from rch_pnc_mother_danger_signs_rel rel
	inner join listvalue_field_value_detail det on rel.mother_danger_signs = det.id
	where rel.mother_pnc_id in (select id from rch_pnc_mother_master where pnc_master_id = #visitId#) 
	group by rel.mother_pnc_id 
)
select 
concat(mem.first_name,'' '',mem.middle_name,'' '',mem.last_name,'' ('',mem.unique_health_id,'')'') as "Mother Name",
mem.family_id as "Family Id",
case when pm.service_date is not null then to_char(pm.service_date , ''DD/MM/YYYY'') else null end as "Service Date", 
case when notif.notification_code is null then ''Unscheduled'' else notif.notification_code end as "Visit Number",
delivery_place.name as "PNC Visit Place",
health_infra.name as "Health Infrastructure",
case when pmm.is_alive = true then ''Yes'' when pmm.is_alive = false then ''No'' else null end as "Is mother alive",
case when pmm.ifa_tablets_given is not null then cast(pmm.ifa_tablets_given as text) else null end as "IFA Tablets", 
dang_sign.dang_sign as "Dangerous Signs",
pmm.other_danger_sign as "Other Dangerous Sign", 
family_planning_method.name as "Contraceptive method used after delivery",
case when pmm.fp_insert_operate_date is not null then to_char( pmm.fp_insert_operate_date, ''DD/MM/YYYY'') else null end as "FP Insert Operate Date",
case when pmm.mother_referral_done = ''YES'' then ''Yes'' when pmm.mother_referral_done = ''NO'' then ''No'' when pmm.mother_referral_done = ''NOT_REQUIRED'' then ''Not required'' else null end as "Referral done",
case when pmm.death_date is not null then to_char(pmm.death_date, ''DD/MM/YYYY'') else null end as "Death Date", 
death_reason.value as "Death Reason", 
place_of_death.name as "Place Of Death",
pmm.other_death_reason as "Other Death Reason"
from rch_pnc_master pm
inner join rch_pnc_mother_master pmm on pm.id = pmm.pnc_master_id
inner join imt_member mem on pmm.mother_id = mem.id
left join health_infrastructure_details health_infra on pm.health_infrastructure_id = health_infra.id
left join const delivery_place on delivery_place.const = pm.delivery_place
left join const family_planning_method on family_planning_method.const = pmm.family_planning_method
left join dang_sign on dang_sign.mother_pnc_id = pmm.id
left join listvalue_field_value_detail death_reason on cast(pmm.death_reason as bigint) = death_reason.id
left join const place_of_death on place_of_death.const = pmm.place_of_death
left join techo_notification_master notif on notif.id = pm.notification_id 
where pm.id = #visitId#',true,'ACTIVE',NULL,true,'d42eb92c-17c7-4cf3-aca9-da9080f1b429'),
	 (1,'2018-07-25 18:10:36.543697',NULL,NULL,'update_lmp_date','member_id,last_lmp_date,pregnancy_reg_det_id','update rch_pregnancy_registration_det set lmp_date = #last_lmp_date# where member_id = #member_id#;
    update imt_member set lmp = #last_lmp_date# where id = #member_id#;
    update event_mobile_notification_pending set base_date = #last_lmp_date# 
        where member_id = #member_id# and ref_code = #pregnancy_reg_det_id#;',false,'ACTIVE','It will update the lmp_date in imt_member, rch_pregnancy_registration_det and event_mobile_notification_pending',true,'28293744-56de-430d-b88b-706a32358248'),
	 (1,'2018-07-25 18:10:36.543697',NULL,NULL,'mob_notification_reschedule','expiary_days_add,action_by,due_days_add,schedule_days_add,notification_id','update techo_notification_master set state = ''RESCHEDULE'', 
        modified_by = #action_by#, modified_on = now(), 
        schedule_date = current_date + #schedule_days_add# * INTERVAL ''1 day'', 
        due_on = case when ''#due_days_add#'' != ''null'' then (current_date + #schedule_days_add# * INTERVAL ''1 day'') + #due_days_add# * INTERVAL ''1 day'' else null end,
        expiry_date = case when ''#expiary_days_add#'' != ''null'' then (current_date + #schedule_days_add# * INTERVAL ''1 day'') + #expiary_days_add# * INTERVAL ''1 day'' else expiry_date end
        where id = #notification_id#;',false,'ACTIVE','It will mark the mobile notification as RESCHEDULE',true,'c2667f93-7ebd-4aeb-97ee-dbf2367939b9'),
	 (80208,'2020-05-11 11:35:16.945911',80208,'2020-05-11 11:35:16.945911','team_type_config_retieve_all',NULL,'with team_type_role as (
select ttm.id , cast(json_agg(json_build_object(''id'',urm1.id,''name'',urm1.name ) ) as text) as "selectedManageRoleIds"
from team_type_master ttm 
left join team_type_role_master ttrm on ttrm.team_type_id = ttm.id and ttrm.state=''ACTIVE'' 
left join um_role_master urm1 on urm1.id = ttrm.role_id 
group by ttm.id
),
team_type_conf as (
select ttm.id, 
cast(json_agg(json_build_object(''roleId'',tcd.role_id ,''minMember'',tcd.min_member,''maxMember'' ,tcd.max_member,''role'',json_build_object(''id'',urm.id ,''name'',urm.name ) ) )as text) as "teamConfDetails"
from team_type_master ttm 
left join team_configuration_det tcd on tcd.team_type_id = ttm.id and tcd.state = ''ACTIVE'' 
left join um_role_master urm on urm.id = tcd.role_id group by ttm.id 
)
select ttm.id ,ttm."type" , ttm.state , ttr."selectedManageRoleIds" , ttc."teamConfDetails" 
from team_type_master ttm left join team_type_role ttr on ttr.id = ttm.id left join team_type_conf ttc on ttm.id = ttc.id order by ttm.modified_on desc , ttm.created_on desc ;',true,'ACTIVE','',true,'0fb5e5ba-0b30-4b55-b2a9-05333e1c97f8'),
	 (1,'2018-07-25 18:10:36.543697',NULL,NULL,'mark_member_as_migrated','member_id,action_by','update techo_notification_master set state = ''MARK_AS_MIGRATED'', modified_on = now(), modified_by = #action_by# 
        where member_id = #member_id# and state in (''PENDING'',''RESCHEDULE'');
    update event_mobile_notification_pending set is_completed = true, state = ''MARK_AS_MIGRATED'', 
        modified_by = #action_by#, modified_on = now() from event_mobile_configuration 
        where event_mobile_notification_pending.notification_configuration_type_id = event_mobile_configuration.id
        and member_id = #member_id# and state = ''PENDING'';
    update imt_member set state = ''com.argusoft.imtecho.member.state.migrated'', 
        modified_on = now(), modified_by = #action_by# 
        where imt_member.id = #member_id#;',false,'ACTIVE','It will mark the member as MIGRATED',true,'9d89af1d-8208-482f-817b-abb6c021f600'),
	 (74840,'2020-09-03 00:00:00',74840,'2020-09-03 00:00:00','covid_19_save_only_lab_test_admission','otherCoMobidity,indications,occupation,isHypertension,emergencyContactNo,health_infra_id,abroad_contact_details,referFromHosital,opdCaseNo,admission_date,contact_no,case_number,health_status,memberId,isImmunocompromized,unitno,pregnancy_status,loggedInUserId,isCOPD,travelledPlace,lastname,hasShortnessBreath,pinCode,is_abroad_in_contact,suggestedHealthInfra,inContactWithCovid19Paitent,firstname,gender,bed_no,date_of_onset_symptom,isRenalCondition,isHeartPatient,labHealthInfraId,isOtherCoMobidity,flightno,locationId,member_id,address,loggedIn_user,ward_no,emergencyContactName,isSari,hasCough,middlename,travelHistory,collectionDate,isMalignancy,isMigrant,covid19_lab_test_recommendation_id,hasFever,isHIV,otherIndications,districtLocationId,isDiabetes,age,ageMonth','drop table if exists lab_id_det;
create temp table lab_id_det (
lab_id integer
);

with generated_id as (
select  nextval(''covid19_admission_detail_id_seq'') as id
),health_infra_det as (
select id from health_infrastructure_details where #health_infra_id# is null and id = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = #loggedInUserId# and uhi.state = ''ACTIVE'')
union all
select cast(#health_infra_id# as integer) as id where  #health_infra_id# is not null
),insert_daily_admission_det as (
insert into covid19_admitted_case_daily_status(member_id,location_id,admission_id,service_date,ward_id,bed_no,health_status,created_by,created_on)
values(#member_id#,#districtLocationId#,(select id from generated_id),to_date(#admission_date#,''DD/MM/YYYY''),#ward_no#,#bed_no#,#health_status#,#loggedInUserId#,now())
returning id
),insert_lab_test as (
INSERT INTO covid19_lab_test_detail(
member_id, location_id, covid_admission_detail_id, lab_collection_status,created_by,created_on,sample_health_infra,sample_health_infra_send_to,lab_collection_on,lab_collection_entry_by, collection_server_date)
VALUES (#memberId#,
#locationId#, (select id from generated_id),''SAMPLE_COLLECTED'',#loggedInUserId#,now(), (select id from health_infra_det),#labHealthInfraId#,to_timestamp(#collectionDate#,''DD/MM/YYYY HH24:MI:SS''),#loggedInUserId#, now())
returning id
),update_lab_test_recommdation as (
update covid19_lab_test_recommendation set admission_id = (select id from generated_id)
where id = #covid19_lab_test_recommendation_id#
),insert_lab_test_det_id as(
insert into lab_id_det(lab_id)
select id from insert_lab_test
)
insert into covid19_admission_detail
(id,
member_id,
first_name,
middle_name,
last_name,
age,
age_month,
contact_number,
address,
gender,
flight_no,
refer_from_hospital,

case_no,
unit_no,

is_cough,
is_fever,
is_breathlessness,
location_id,
covid19_lab_test_recommendation_id,
last_lab_test_id,
last_check_up_detail_id,
current_ward_id,
current_bed_no,
admission_status_id,
admission_date,
admission_entry_by,
admission_entry_on,
is_hiv,
is_heart_patient,
is_diabetes,
admission_from,
status,
pincode,
emergency_contact_name,
emergency_contact_no,
is_immunocompromized,
is_hypertension,
is_malignancy,
is_renal_condition,
is_copd,
pregnancy_status,
date_of_onset_symptom,
occupation,
travel_history,
travelled_place,
is_abroad_in_contact,
abroad_contact_details,

in_contact_with_covid19_paitent,
opd_case_no,
is_other_co_mobidity,
other_co_mobidity,
is_sari,
indications,
indication_other,
suggested_health_infra,
is_migrant
)
values(
(select id from generated_id)
,#member_id#
,#firstname#
,(case when #middlename# = null then null else #middlename# end)
,(case when #lastname# = null then null else #lastname# end)
,#age#
,#ageMonth#
,(case when #contact_no# = null then null else #contact_no# end)
,(case when #address# = null then null else #address# end)
,(case when #gender# = null then null else #gender# end)
,(case when #flightno# = null then null else #flightno# end)
,(case when #referFromHosital# = null then null else #referFromHosital# end)

,(case when #case_number# = null then null else #case_number# end)
,(case when #unitno# = null then null else #unitno# end)
,#hasCough#
,#hasFever#
,#hasShortnessBreath#
,#districtLocationId#
,#covid19_lab_test_recommendation_id#
,(select id from insert_lab_test)
,(select id from insert_daily_admission_det)
,#ward_no#
,(case when #bed_no# = null then null else #bed_no# end)
,(select id from insert_daily_admission_det)
,to_timestamp(#admission_date#,''DD/MM/YYYY HH24:MI:SS'')
,#loggedIn_user#
,now()
,#isHIV#
,#isHeartPatient#
,#isDiabetes#
,''OPD_ADMIT''
,''OPD_ADMIT''
,#pinCode#
,(case when #emergencyContactName# = null then null else #emergencyContactName# end)
,(case when #emergencyContactNo# = null then null else #emergencyContactNo# end)
,#isImmunocompromized#
,#isHypertension#
,#isMalignancy#
,#isRenalCondition#
,#isCOPD#
,(case when #pregnancy_status# = null then null else #pregnancy_status# end)
,(case when #date_of_onset_symptom# = null then null else to_date(#date_of_onset_symptom#,''MM-DD-YYYY'') end)
,(case when #occupation# = null then null else #occupation# end)
,(case when #travelHistory# = null then null else #travelHistory# end)
,(case when #travelledPlace# = null then null else #travelledPlace# end)
,(case when #is_abroad_in_contact# = null then null else #is_abroad_in_contact# end)
,(case when #abroad_contact_details# = null then null else #abroad_contact_details# end)

,(case when #inContactWithCovid19Paitent# = null then null else #inContactWithCovid19Paitent# end)
,(case when #opdCaseNo# = null then null else #opdCaseNo# end)
,#isOtherCoMobidity#
,(case when #otherCoMobidity# = null then null else #otherCoMobidity# end)
,#isSari#
,(case when #indications# = null then null else #indications# end)
,(case when #otherIndications# = null then null else #otherIndications# end)
,#suggestedHealthInfra#
,#isMigrant#);
update covid19_lab_test_detail set created_by = created_by where id = (select lab_id from lab_id_det);',false,'ACTIVE',NULL,true,'9ca0743e-599a-4c4f-a028-386d9637f109'),
	 (74840,'2020-09-03 00:00:00',74840,'2020-09-03 00:00:00','COVID_19_ICMR_Specimen_Referral_Form','labTestIds','select
concat_ws('' '',clt.first_name,clt.middle_name,clt.last_name) as "patientName",
case
    when clt.age is null then null
    when clt.age < 2 and clt.age_month < 2 then concat_ws('' '', clt.age, ''year'', case when clt.age_month is null then 0 else clt.age_month end, ''month'')
    when clt.age_month < 2 and clt.age > 2 then concat_ws('' '', clt.age, ''years'', case when clt.age_month is null then 0 else clt.age_month end, ''month'')
    when clt.age_month > 2 and clt.age < 2 then concat_ws('' '', clt.age, ''year'', case when clt.age_month is null then 0 else clt.age_month end, ''months'')
    when clt.age_month > 2 and clt.age < 2 then concat_ws('' '', clt.age, ''year'', case when clt.age_month is null then 0 else clt.age_month end, ''months'')
    when clt.age_month is null then concat_ws('' '', clt.age, ''years'', case when clt.age_month is null then 0 else clt.age_month end, ''month'')
    else concat_ws('' '', clt.age, ''years'', case when clt.age_month is null then 0 else clt.age_month end, ''months'')
end as "age",
clt.gender as "gender",
cast(''N/A'' as text) as "villageLocation",
clt.contact_number as "mobileNumber",
case
    when clt.contact_number is not null then cast(''Self''as text)
    else cast(''N/A'' as text)
end as "mobileNumberBelongsTo",
get_location_hierarchy_from_ditrict(clt.location_id) as "disctrictLocation",
cast(''Gujarat'' as text) as "state",
cast(''Indian'' as text) as "Nationality",
cast(null as boolean) as "isBALETA",
cast(null as boolean) as "isTSNPSNS",
cast(null as boolean) as "isBloodInEDTA",
cast(null as boolean) as "isAcuteSera",
cast(null as boolean) as "isCovalescentSera",
cast(null as boolean) as "isOtherSpecimenType",
to_char(cltd.lab_collection_on, ''DD/MM/YY'')  as "collectionDate",
cast(cltd.lab_test_id as text) as "label",
cast(cltd.lab_test_id as text) as "labcode",
cast(case when cltd.test_count > 1 then true else false end as boolean) as "isRepeatedSample",
(select name_in_english from health_infrastructure_details where id = cltd.sample_health_infra)  as "sampleCollectionFacilityName",
cast(null as text) as "collectionFacilityPincode",
case when clt.indications =''Symtomatic Person with International Travel History (last 14 days)'' then true else false end as "isSymptomaticInternational",
case when clt.indications =''Symtomatic Contacts of Laboratory Confirmed Positive Cases'' then true else false end as "isSymptomaticContact",
case when clt.indications =''Symtomatic Health Care Workers'' then true else false end as "isSymptomaticHealthcare",
case when clt.indications =''Hospitalized SARI Patient'' then true else false end as "isHospitalizedSARI",
case when clt.indications =''Asymtomatic Direct / High Risk Contact of Postivie Contact (>5 and < 14 days)'' then true else false end as "isAsymptomaticDirect",
case when clt.indications =''Healthcare worker examined Positive Case without PPE'' then true else false end as "isAsymptomaticHealthcare",
clt.address as "presentPatientAddress",
clt.pincode as "pinCode",
to_char(clt.dob, ''DD/MM/YY'') as "dateOfBirth",
cast(''N/A'' as text) as  "patientPassportNo",
cast(''N/A'' as text) as  "emailId",
cast(''N/A'' as text) as  "aadharNo",
case when clt.travel_history = ''international'' then true else false end as "travelToForeignCountry",
cast(case when clt.travel_history = ''international'' then clt.travelled_place else '''' end as text) as "travelledPlace",
cast(''N/A'' as text) as  "stayTravelDuration",
case when clt.in_contact_with_covid19_paitent = ''yes'' then true else false end as "inContactWithCovid19Paitent",
cast(case when clt.in_contact_with_covid19_paitent = ''yes'' then clt.abroad_contact_details else '''' end as text) as "confirmedPatient",
cast(''N/A'' as text) as  "isQuarantined",
cast(''N/A'' as text) as  "quarantinedPlace",
cast(''No'' as text) as  "isHealthWorker",
to_char(clt.date_of_onset_symptom, ''DD/MM/YY'') as "dateOfOnsetSymptom",
cast(''N/A'' as text) as  "firstSymptom",
clt.is_cough as "isCough",
cast(null as boolean) as "isDiarrhoea",
cast(null as boolean) as "isVomiting",
cast(null as boolean) as "isFeverAtEvaluation",
clt.is_breathlessness as "isBreathlessness",
cast(null as boolean) as "isNausea",
cast(null as boolean) as "isHaemoptysis",
cast(null as boolean) as "isBodyAche",
cast(null as boolean) as "isSoreThroat",
cast(null as boolean) as "isChestPain",
cast(null as boolean) as "isNasalDischarge",
cast(null as boolean) as "isSputum",
cast(null as boolean) as "isAbdominalPain",
cast(case when clt.is_sari then ''Yes'' else ''No'' end as text) as "isSARI",
cast(null as boolean) as "isARI",
clt.is_copd as "isCopd",
cast(null as boolean) as "isBronchitis",
clt.is_diabetes as "isDiabetes",
clt.is_hypertension as "isHypertension",
clt.is_renal_condition as "isRenalCondition",
clt.is_malignancy as "isMalignancy",
clt.is_heart_patient as "isHeartPatient",
cast(null as boolean) as "isAsthma",
cast(case when clt.is_immunocompromized then ''Yes'' else ''No'' end as text) as "isImmunocompromized",
clt.other_co_mobidity as "otherUnderlyingConditions",
to_char(clt.admission_date, ''DD/MM/YY'') as "hospitalizationDate",
cast(''N/A'' as text) as "diagnosis",
cast(''N/A'' as text) as "differentialDiagnosis",
cast(''N/A'' as text) as "etiologyIdentified",
cast(''N/A'' as text) as "atypicalPresentation",
cast(''N/A'' as text) as "unusalCourse",
cast(''N/A'' as text) as "outcome",
cast(''N/A'' as text) as "outcomeDate",
cast(''N/A'' as text) as "hospitalPhoneNo",
(select name_in_english from health_infrastructure_details where id = clt.health_infra_id) as "hospitalName",
cast(''N/A'' as text) as "nameOfDoctor",
cast(''N/A'' as text) as "hospitalEmailId",
clt.discharge_status as "dischargeStatus",
to_char(clt.discharge_date, ''DD/MM/YY'') as "dischargeDate",
to_char(cltd.lab_sample_received_on, ''DD/MM/YY'') as "dateOfSampleRecipt",
cast(case when cltd.lab_sample_received_on is not null and cltd.lab_sample_rejected_on is null then ''Accepted''
when cltd.lab_sample_received_on is not null and cltd.lab_sample_rejected_on is not null then ''Rejected''
else null end as text) as "sampleAcceptedRejected",
to_char(cltd.lab_result_entry_on, ''DD/MM/YY'') as "dateOfTesting",
cltd.lab_result as "testResult",
cast(''N/A'' as text) as "repeatedSampleRequired"
from covid19_lab_test_detail cltd
inner join covid19_admission_detail clt on cltd.covid_admission_detail_id = clt.id
where cltd.id in ( #labTestIds# )',true,'ACTIVE',NULL,true,'a3a0581e-23d2-4347-a725-f64f6853eefc'),
	 (1027,'2018-08-06 17:52:15.266',1027,'2018-08-28 13:03:37.307','family_unverified_marking','familyIds,locationId,userId','update imt_family f 
set state = ''com.argusoft.imtecho.family.state.unverified'',
location_id = case when #locationId# is not null then #locationId# else f.location_id end,modified_on = now(),modified_by = #userId#
where f.family_id in (#familyIds#)',false,'ACTIVE',NULL,true,'5c1fcf3a-b61a-47a3-b739-f324221c448d'),
	 (-1,'2019-11-15 23:49:12.206',66522,'2019-11-16 00:08:11.647','update_user_pin','pin,id','UPDATE um_user SET pin = ''#pin#'' ,modified_on = now() WHERE id = #id#;',false,'ACTIVE','update_user_pin',true,'1f8aa20b-f916-4c8e-8af9-72ce31110f61'),
	 (1,'2019-07-01 00:00:00',58981,'2020-05-08 19:11:02.911','mob_work_register_detail_lmp','visitId','--mob_work_register_detail_lmp
with const as (
	select cast(''HOME'' as text) as const, cast(''Home'' as text) as name
	union
	select cast(''ON_THE_WAY'' as text) as const, cast(''On The Way'' as text) as name
	union
	select cast(''HOSP'' as text) as const, cast(''Hospital'' as text) as name
	union
	select cast(''FMLSTR'' as text) as const, cast(''FEMALE STERILIZATION'' as text) as name
	union
	select cast(''MLSTR'' as text) as const, cast(''MALE STERILIZATION'' as text) as name
	union
	select cast(''IUCD5'' as text) as const, cast(''IUCD- 5 YEARS'' as text) as name
	union
	select cast(''IUCD10'' as text) as const, cast(''IUCD- 10 YEARS'' as text) as name
	union
	select cast(''CONDOM'' as text) as const, cast(''CONDOM'' as text) as name
	union
	select cast(''ORALPILLS'' as text) as const, cast(''ORAL PILLS'' as text) as name
	union
	select cast(''CHHAYA'' as text) as const, cast(''CHHAYA'' as text) as name
	union
	select cast(''ANTARA'' as text) as const, cast(''ANTARA'' as text) as name
	union
	select cast(''CONTRA'' as text) as const, cast(''EMERGENCY CONTRACEPTIVE PILLS'' as text) as name
	union
	select cast(''PPIUCD'' as text) as const, cast(''PPIUCD'' as text) as name
	union
	select cast(''PAIUCD'' as text) as const, cast(''PAIUCD'' as text) as name
	union
	select cast(''NONE'' as text) as const, cast(''NONE'' as text) as name	
)
select 
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name,'' ('',m.unique_health_id,'')'') as "Member Name",
m.family_id as "Family Id",
cast(l.year as text) as "Marriage Year",
to_char(l.service_date, ''DD/MM/YYYY'') as "Service date",
to_char(l.lmp, ''DD/MM/YYYY'') as "LMP date",
case when l.pregnancy_test_done = true then ''Yes'' when l.pregnancy_test_done = false then ''No'' else l.pregnancy_test_done end as "Pregnancy test done",
case when l.is_pregnant = true then ''Yes'' when l.is_pregnant = false then ''No'' else null end as "Is pregnant",
fp.name as "Family planning method",
case when l.fp_insert_operate_date is not null then to_char(l.fp_insert_operate_date, ''DD/MM/YYYY'') else null end as "Family planning method insert/operate date",
to_char(l.death_date, ''DD/MM/YYYY'') as "Death date",
dp.name as "Death Place",
l.death_reason as "Death Reason"
from rch_lmp_follow_up l
inner join imt_member m on l.member_id = m.id
left join const fp on fp.const = l.family_planning_method
left join const dp on dp.const = l.place_of_death
where l.id = #visitId#',true,'ACTIVE',NULL,true,'86ecde29-7f2c-497a-9072-38a463c1de8a'),
	 (1027,'2018-08-01 18:27:44.621',1027,'2018-08-08 15:19:20.038','fhs_verifification_percentage','locationId,loggedInUserId','select to_char(vf.created_on,''dd-mm-yyyy'') as created_on,round((sum(vf.verified)*100)/sum(vf.total),1) as percentage,
sum(vf.verified) as verified,sum(vf.total) as total from 
location_hierchy_closer_det lhcd inner join  verfied_families_village_wise_records vf
on lhcd.child_id = vf.loc_id
where 
((#locationId# is not null and parent_id = #locationId#) or
(#locationId# is null and parent_id in (select loc_id from um_user_location where user_id = #loggedInUserId# and state = ''ACTIVE'')))
group by vf.created_on order by vf.created_on desc limit 10',true,'ACTIVE',NULL,true,'3efe4693-5d64-4149-b175-f8ece38221f9'),
	 (80208,'2020-05-11 11:35:16.945911',80208,'2020-05-11 11:35:16.945911','role_retrieve_all_excluding_some_role','roleIds','select * from um_role_master urm where urm.state = ''ACTIVE'' and ((#roleIds#) is null or urm.id not in (#roleIds#))',true,'ACTIVE',NULL,true,'10ff7488-4cd8-4814-8cc0-791e7f22b932'),
	 (1,'2019-05-03 00:00:00',NULL,NULL,'cerebral_palsy_status_list_retrieve','userId,limit,offSet','
with ids as (
	select max(rch_child_cp_suspects.id) from rch_child_cp_suspects
	inner join imt_member on imt_member.id = rch_child_cp_suspects.member_id
	where location_id in (
		select child_id from location_hierchy_closer_det where parent_id in (
			select loc_id from um_user_location where user_id = #userId# and state = ''ACTIVE''
		)
	)
	and imt_member.mother_id is not null
	and status is not null
	group by rch_child_cp_suspects.member_id
	limit #limit# offset #offSet#
), member_details as (
	select * from rch_child_cp_suspects
	inner join ids on rch_child_cp_suspects.id = ids.max
)
,hierarchy as (
	select member_details.member_id,
	string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
	from location_master l1 
	inner join member_details on member_details.location_id = l1.id
	inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
	inner join location_master l2 on l2.id = lhcd.parent_id
	group by member_details.member_id
)select t1.id,t3.area_id,member_details.location_id,member_details.child_service_id,member_details.status,
uma.first_name as "ashaName",
uma.contact_number as "ashaNumber",
um.first_name as "FHWName",
um.contact_number as "FHWNumber", 
t1.first_name as "childFirstName",
t1.last_name as "childLastName",
t1.middle_name as "childMiddleName",
t1.dob,
t2.first_name as "motherFirstName",
t2.middle_name as "motherMiddleName",
t2.last_name as "motherLastName",
t2.mobile_number,
hierarchy.location_id as "locationHierarchy"
from member_details
inner join imt_member t1 on t1.id = member_details.member_id
inner join imt_member t2 on t1.mother_id = t2.id
inner join imt_family t3 on t1.family_id = t3.family_id
left join um_user_location ula on t3.area_id = ula.loc_id and ula.state=''ACTIVE''
left join um_user uma on ula.user_id = uma.id and uma.role_id = 24 and uma.state = ''ACTIVE''
inner join um_user_location ul on member_details.location_id = ul.loc_id and ul.state = ''ACTIVE''
inner join um_user um on ul.user_id = um.id and um.role_id = 30 and um.state = ''ACTIVE''
inner join hierarchy on member_details.member_id = hierarchy.member_id
',true,'ACTIVE',NULL,true,'e55b5466-7db1-43ee-92be-765cfb0bc7dd'),
	 (1,'2018-07-25 18:10:36.543',409,'2018-12-17 14:52:03.339','generate_lmp_followup','member_id,family_id,schedule_date,member_location_id,created_by','INSERT INTO public.techo_notification_master(
        notification_type_id, notification_code, location_id, 
        family_id, member_id, schedule_date, due_on, expiry_date, 
        state, created_by, created_on, modified_by, modified_on
    )
select 1, 0, #member_location_id#, #family_id#, #member_id#, ''#schedule_date#'',to_timestamp(''#schedule_date#'', ''MM/DD/YYYY'') + interval ''1'' day * 3, null, ''PENDING'', #created_by#, now(), #created_by#, now()
from imt_member where id = #member_id# and dob between (current_date - interval ''45 year'') and (current_date  - interval ''18 year'') ;
    /*VALUES(
        1, 0, #member_location_id#, #family_id#, #member_id#, ''#schedule_date#'', 
        to_timestamp(''#schedule_date#'', ''MM/DD/YYYY'') + interval ''1'' day * 3, null, 
        ''PENDING'', #created_by#, now(), #created_by#, now()
    );*/',false,'ACTIVE','It will generate notification for Lmp Follow Up visit',true,'5a741523-88dc-4ef8-98b6-18a355ad6136'),
	 (1027,'2018-08-13 21:19:53.273851',NULL,NULL,'rch_data_migration_fetchlist','userId,locationId','select rdm.id,concat(us.first_name,'' '',us.last_name,''('',us.user_name,'')'') as "createdBy",rdm.created_on,
string_agg(lm1.name,''> '' order by lhcd1.depth desc) as location,to_char(rdm.executed_on,''DD/MM/YYYY'') as executed_on,
rdm.state 
from rch_data_migration rdm inner join location_hierchy_closer_det lhcd on
rdm.location_id = lhcd.child_id inner join location_master lm on lm.id = lhcd.child_id
inner join location_hierchy_closer_det lhcd1 on lhcd1.child_id = lhcd.child_id
inner join location_master lm1 on lm1.id = lhcd1.parent_id
inner join um_user us on rdm.created_by = us.id
where 
((#locationId# is not null and lhcd.parent_id = #locationId#) or 
(#locationId# is null and lhcd.parent_id in (select loc_id from um_user_location where state = ''ACTIVE'' and user_id = #userId#)))
group by lhcd1.child_id,rdm.id,us.first_name,us.last_name,us.user_name',true,'ACTIVE',NULL,true,'38751cf4-4219-4fb5-94f3-bd8e8ad4b444'),
	 (1,'2020-01-10 12:53:51.321745',NULL,NULL,'mytecho_cards_conf_retrieval_by_id','cardId','select mt_config.id as "id" , 
mt_language_config.tittle as "title", 
mt_language_config.button_text as "buttonText",
mt_config.category_id as "category_id",
mt_config.component_type as "componentType",
mt_language_config.description as "description",
mt_language_config.language as "language",
CAST(''thumbnail.jpg'' as text) as "thumbnail",
case when (mt_language_config.url is null or mt_language_config.url = ''null'')
	then cast (mt_language_config.media_name as text)  else mt_language_config.url end as "mediaUrl",
case when (mt_language_config.url is null or mt_language_config.url = ''null'')
		then ''SYSTEM'' else ''URL'' end as "mediaType",
cast(lv.code as int) as "catagory_order"
from mytecho_timeline_language_wise_config_det mt_language_config 
inner join mytecho_timeline_config_det mt_config on mt_config.id = mt_language_config.mt_timeline_config_id 
left join listvalue_field_value_detail lv on lv.id = mt_config.category_id
where mt_config.id = #cardId#;',true,'ACTIVE',NULL,true,'a17ca984-7833-4d52-90da-5affb5acfe51'),
	 (1027,'2018-04-27 17:16:11.457',1027,'2018-08-08 14:15:13.216','fhs_dashboard_locationwise_data','locationId','with data as (
	select loc_wise_summary.*,loc.name as value, loc.type as "locationType",parent.parent_id as parent
	,coalesce(worker_det.worker_cnt, 0) as worker,
	case when loc_wise_summary."importedFromEmamta" = 0 then 0 else
	round(((loc_wise_summary."verifiedFHS" + loc_wise_summary."archivedFHS")*100)/loc_wise_summary."importedFromEmamta"\:\:numeric,2) end as percentage 
	from (
	select 
	sel_loc_closer.parent_id as id,
	coalesce(sum(fhs_imported_from_emamta_family),0) as "importedFromEmamta" 
	,coalesce(sum(fhs_imported_from_emamta_member),0) as "importedFromEmamtaMember" 
	,coalesce(sum(fhs_to_be_processed_family),0) as "unverifiedFHS" 
	,coalesce(sum(fhs_verified_family),0) as "verifiedFHS" 
	,coalesce(sum(fhs_archived_family),0) as "archivedFHS" 
	,coalesce(sum(fhs_new_family),0)  as "newFamily" 
	,coalesce(sum(fhs_total_member),0) as "totalMember"
	,coalesce(sum(total_0to1_children),0) as "totalMemberUnder1Year"
	,coalesce(sum(total_0to5_children),0) as "totalMemberUnder5Year"
	,coalesce(sum(fhs_inreverification_family),0) as "inReverification" 
	from  location_wise_analytics loc_anlyts inner join location_hierchy_closer_det sel_loc_closer
	on loc_anlyts.loc_id = sel_loc_closer.child_id 
	where sel_loc_closer.parent_id in (select child_id from location_hierchy_closer_det where parent_id = #locationId# and (depth = 1 or depth = 2))
	group by sel_loc_closer.parent_id) loc_wise_summary 
	inner join location_master loc 
	on loc_wise_summary.id = loc.id
	left join (select parent_id,count(*) as worker_cnt from (select Distinct sel_loc_closer.parent_id, um_user.id from  um_user,um_user_location user_loc,location_hierchy_closer_det sel_loc_closer
		where role_id = (select id from um_role_master where name = ''FHW'') and um_user.state = ''ACTIVE'' and um_user.id = user_loc.user_id and user_loc.state = ''ACTIVE'' and
		user_loc.loc_id = sel_loc_closer.child_id and sel_loc_closer.parent_id in (select child_id from location_hierchy_closer_det where parent_id = #locationId# and (depth = 1 or depth = 2))) as temp group by parent_id
	) as worker_det on worker_det.parent_id = loc.id
	inner join location_hierchy_closer_det parent on parent.child_id = loc.id and parent.depth = 1
	order by value
), for_total as (
	select * from data where parent = #locationId#
)
select * from data
union all
select null,coalesce(sum("importedFromEmamta"),0),coalesce(sum("importedFromEmamtaMember"),0),coalesce(sum("unverifiedFHS"),0),coalesce(sum("verifiedFHS"),0),
coalesce(sum("archivedFHS"),0),coalesce(sum("newFamily"),0),coalesce(sum("totalMember"),0),coalesce(sum("totalMemberUnder1Year"),0),
coalesce(sum("totalMemberUnder5Year"),0),coalesce(sum("inReverification"),0),''Total'',null,#locationId#,coalesce(sum(worker),0),null from for_total;',true,'ACTIVE',NULL,true,'257c370d-7781-4e47-bb32-179e14e9559c'),
	 (1,'2018-11-23 00:00:00',1,'2018-12-20 16:50:28.02','child_cmtc_nrc_location_check_by_family_id','familyId','select location_id from imt_family where family_id in (select family_id from imt_member where family_id = ''#familyId#'')',true,'ACTIVE',NULL,true,'5b08be31-c88e-4c15-a5d8-9207e34a95df'),
	 (1,'2018-11-23 00:00:00',1,'2018-12-20 16:50:36.921','child_cmtc_nrc_location_check_by_mobile_number','mobileNumber','select location_id from imt_family where family_id in (select family_id from imt_member where mobile_number = ''#mobileNumber#'')',true,'ACTIVE',NULL,true,'ac1e863f-f02c-4506-8ddc-28a210b1b0b7'),
	 (1,'2019-01-16 00:00:00',NULL,NULL,'ncd_current_score',NULL,'
select round(avg(case when m.dob between now() - INTERVAL ''35 year'' and now() - INTERVAL ''30 year'' then score end),2) as "30-35",
round(avg(case when m.dob between now() - INTERVAL ''40 year'' and now() - INTERVAL ''36 year'' then score end),2) as "36-40",
round(avg(case when m.dob between now() - INTERVAL ''45 year'' and now() - INTERVAL ''41 year'' then score end),2) as "41-45",
round(avg(case when m.dob between now() - INTERVAL ''50 year'' and now() - INTERVAL ''46 year'' then score end),2) as "46-50",
round(avg(case when m.dob between now() - INTERVAL ''55 year'' and now() - INTERVAL ''51 year'' then score end),2) as "51-55",
round(avg(case when m.dob between now() - INTERVAL ''60 year'' and now() - INTERVAL ''56 year'' then score end),2) as "56-60",
round(avg(case when m.dob between now() - INTERVAL ''65 year'' and now() - INTERVAL ''61 year'' then score end),2) as "61-65",
round(avg(case when m.dob between now() - INTERVAL ''70 year'' and now() - INTERVAL ''66 year'' then score end),2) as "66-70",
round(avg(case when m.dob between now() - INTERVAL ''75 year'' and now() - INTERVAL ''71 year'' then score end),2) as "71-75",
round(avg(case when m.dob between now() - INTERVAL ''80 year'' and now() - INTERVAL ''76 year'' then score end),2) as "76-80",
round(avg(case when m.dob between now() - INTERVAL ''85 year'' and now() - INTERVAL ''81 year'' then score end),2) as "81-85"
from imt_member m,ncd_member_cbac_detail cbac where m.id = cbac.member_id;
',true,'ACTIVE',NULL,true,'580afb8b-6dad-4127-9bb9-d9c10914d145'),
	 (1027,'2018-04-27 17:16:11.457',409,'2018-10-03 18:20:46.491','fhs_dashboard_star_performer','userId','with user_det as( 
select user_det.name||'' (''||user_det.user_name||'')'' as person_name,count(*) as record_submitted from system_sync_status ,
(select distinct um_user.id,um_user.user_name,um_user.first_name ||'' ''|| um_user.last_name as name from um_user,um_user_location,location_hierchy_closer_det,um_user_location usr_loc
where um_user_location.user_id = #userId# and  um_user_location.state = ''ACTIVE'' 
and um_user_location.loc_id = location_hierchy_closer_det.parent_id 
and usr_loc.loc_id = location_hierchy_closer_det.child_id and usr_loc.state = ''ACTIVE''
and usr_loc.user_id = um_user.id and um_user.state = ''ACTIVE'' and um_user.role_id = 30
) as user_det where user_det.id = system_sync_status.user_id and action_date > now() - interval ''1 day''
group by user_det.id,user_det.user_name,user_det.name order by count(*) desc limit 10)
select * from user_det where record_submitted = (select max(record_submitted) from user_det);',true,'ACTIVE',NULL,true,'7a9c2031-3842-4981-b91d-42db22507611'),
	 (79677,'2020-09-08 00:00:00',79677,'2020-09-08 00:00:00','covid19_retrieve_lab_infrastructure_testing_details','healthInfraId','select clikh.receipt_date as "receiptDate",
lfvd.value as "receivedFrom",
clikh.list_of_kits as "kitsList"
from covid19_lab_infrastructure_kit_history clikh
left join listvalue_field_value_detail lfvd on lfvd.id = clikh.received_from
where clikh.health_infra_id = #healthInfraId#;',true,'ACTIVE',NULL,true,'45aae210-9890-4721-b008-4f514cbccb25'),
	 (409,'2020-01-10 17:06:50.024',409,'2020-01-10 17:06:50.024','cm_dashboard_infant_death','finacial_year','select distinct on ("memberId")* from cm_dashboard_infant_death_detail   where cast(financialYear as text) = ''#finacial_year#''',true,'ACTIVE',NULL,true,'6260cc50-d1be-4441-8568-29466b54dc71'),
	 (74841,'2020-09-08 00:00:00',74841,'2020-09-08 00:00:00','location_lgd_code_check','lgdCode','select case when count(1) > 1 then true else false end as is_present from location_master where lgd_code = cast(#lgdCode# as text);',true,'ACTIVE',NULL,true,'94ca6d46-757f-4a35-a9c1-fa85c64954d9'),
	 (74841,'2020-09-08 00:00:00',74841,'2020-09-08 00:00:00','covid19_update_location_cluster_state','state,id','update location_cluster_master
set state = #state#
where id = #id#',false,'ACTIVE',NULL,true,'0b4ec42c-97e8-4da2-a164-f4dc9c10e491'),
	 (75398,'2020-10-16 00:00:00',75398,'2020-10-16 00:00:00','update_state_of_rbsk_defects','state,id','update
	rbsk_defect_configuration
set
	state = #state#,
    modified_on = now()
where
	id = #id#;',false,'ACTIVE',NULL,true,'f0f8fd82-0bfb-4272-a44b-bfdda6d4a5fd'),
	 (58981,'2020-09-11 00:00:00',58981,'2020-09-11 00:00:00','mob_rbsk_child_search_by_mother_id','health_id,userId','with l as (
	select child_id from location_hierchy_closer_det where parent_id in (
		select ul.loc_id from um_user u 
		inner join um_user_location ul on u.id = ul.user_id	
		where u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
		and u.id = #userId#
	)
)
select 
    child.id as child_id,
	child.unique_health_id,
	concat(child.first_name, '' '', child.last_name) as child_name,
	to_char(child.dob, ''DD/MM/YYYY'') as date_of_birth,
	child.gender,
	concat(mother.first_name, '' '', mother.last_name) as mother_name,
	mother.mobile_number,
	child.family_id as family_health_id,
    f.id as family_id,
    f.location_id,
	mother.unique_health_id as mother_id,
	child.birth_weight
from imt_member child
inner join imt_family f on child.family_id = f.family_id
inner join l on l.child_id = f.location_id
inner join imt_member mother on child.mother_id = mother.id
where child.dob > current_date - interval ''5 years'' and mother.unique_health_id = ''#health_id#''',true,'ACTIVE',NULL,true,'db6f4451-a16f-498d-9443-9cf34e3b09ef'),
	 (75398,'2020-04-18 00:00:00',75398,'2020-04-18 00:00:00','covid19_admin_delete_lab_test','admissionId','delete from covid19_admission_detail where id  = #admissionId#;

delete from covid19_lab_test_detail where covid_admission_detail_id  = #admissionId#;

delete from covid19_admitted_case_daily_status where admission_id  = #admissionId#;

delete from covid19_admission_refer_detail where admission_id  = #admissionId#;',false,'ACTIVE',NULL,true,'941cab6e-f57f-4e63-a73c-aae83378365f'),
	 (1,'2019-06-20 00:00:00',NULL,NULL,'get_rch_service_register_detail_pnc_child','visitId','
select 	
concat(mem.first_name,'' '',mem.middle_name,'' '',mem.last_name,'' ('',mem.unique_health_id,'')'') as "Member Name",mem.family_id as "Family Id", 
pcm.is_alive as "Is Alive", pcm.other_danger_sign as "Other Danger Sign", pcm.child_weight as "Child Weight", 
pcm.member_status as "Child Status", pcm.death_date as "Death Date", pcm.death_reason as "Death Reason", 
pcm.place_of_death as "Place Of Death",pcm.other_death_reason as "Other Death Reason", pcm.is_high_risk_case as "Is HighRisk Case"
from rch_pnc_child_master pcm 
inner join imt_member mem on pcm.child_id = mem.id
where pnc_master_id  = #visitId#
',true,'ACTIVE',NULL,true,'db2820c4-9895-43f4-86d4-93e7681869eb'),
	 (1,'2020-03-21 21:30:33.577248',NULL,NULL,'idsp_from_s_data_retrival','location_id,report_from_date,report_to_date','with ldsp_detail as(
select lhc.parent_id as location_id,
coalesce(sum(fever_less_than_7_days_male_less_than_5_year),0) as fever_less_than_7_days_male_less_than_5_year,
coalesce(sum(fever_less_than_7_days_male_more_than_5_year),0) as fever_less_than_7_days_male_more_than_5_year,
coalesce(sum(fever_less_than_7_days_female_less_than_5_year),0) as fever_less_than_7_days_female_less_than_5_year,
coalesce(sum(fever_less_than_7_days_female_more_than_5_year),0) as fever_less_than_7_days_female_more_than_5_year,
coalesce(sum(only_fever_male_less_than_5_year),0) as only_fever_male_less_than_5_year,
coalesce(sum(only_fever_male_more_than_5_year),0) as  only_fever_male_more_than_5_year,
coalesce(sum(only_fever_female_less_than_5_year),0) as only_fever_female_less_than_5_year ,
coalesce(sum(only_fever_female_more_than_5_year),0) as  only_fever_female_more_than_5_year,
coalesce(sum(fever_with_rash_male_less_than_5_year),0) as  fever_with_rash_male_less_than_5_year,
coalesce(sum(fever_with_rash_male_more_than_5_year),0) as  fever_with_rash_male_more_than_5_year,
coalesce(sum(fever_with_rash_female_less_than_5_year),0) as  fever_with_rash_female_less_than_5_year,
coalesce(sum(fever_with_rash_female_more_than_5_year),0) as  fever_with_rash_female_more_than_5_year,
coalesce(sum(fever_with_server_joint_pain_male_less_than_5_year),0) as  fever_with_server_joint_pain_male_less_than_5_year,
coalesce(sum(fever_with_server_joint_pain_male_more_than_5_year),0) as  fever_with_server_joint_pain_male_more_than_5_year,
coalesce(sum(fever_with_server_joint_pain_female_less_than_5_year),0) as  fever_with_server_joint_pain_female_less_than_5_year,
coalesce(sum(fever_with_server_joint_pain_female_more_than_5_year),0) as fever_with_server_joint_pain_female_more_than_5_year ,
coalesce(sum(fever_with_daze_male_less_than_5_year),0) as  fever_with_daze_male_less_than_5_year,
coalesce(sum(fever_with_daze_male_more_than_5_year),0) as  fever_with_daze_male_more_than_5_year,
coalesce(sum(fever_with_daze_female_less_than_5_year),0) as  fever_with_daze_female_less_than_5_year,
coalesce(sum(fever_with_daze_female_more_than_5_year),0) as  fever_with_daze_female_more_than_5_year,
coalesce(sum(fever_with_bleeding_male_less_than_5_year),0) as fever_with_bleeding_male_less_than_5_year ,
coalesce(sum(fever_with_bleeding_male_more_than_5_year),0) as fever_with_bleeding_male_more_than_5_year ,
coalesce(sum(fever_with_bleeding_female_less_than_5_year),0) as  fever_with_bleeding_female_less_than_5_year,
coalesce(sum(fever_with_bleeding_female_more_than_5_year),0) as fever_with_bleeding_female_more_than_5_year ,
coalesce(sum(fever_more_than_7_days_male_less_than_5_year),0) as  fever_more_than_7_days_male_less_than_5_year,
coalesce(sum(fever_more_than_7_days_male_more_than_5_year),0) as fever_more_than_7_days_male_more_than_5_year ,
coalesce(sum(fever_more_than_7_days_female_less_than_5_year),0) as fever_more_than_7_days_female_less_than_5_year ,
coalesce(sum(fever_more_than_7_days_female_more_than_5_year),0) as  fever_more_than_7_days_female_more_than_5_year,
coalesce(sum(cough_less_than_2_week_male_less_than_5_year),0) as cough_less_than_2_week_male_less_than_5_year,
coalesce(sum(cough_less_than_2_week_male_more_than_5_year),0) as  cough_less_than_2_week_male_more_than_5_year,
coalesce(sum(cough_less_than_2_week_female_less_than_5_year),0) as  cough_less_than_2_week_female_less_than_5_year,
coalesce(sum(cough_less_than_2_week_female_more_than_5_year),0) as  cough_less_than_2_week_female_more_than_5_year,
coalesce(sum(cough_more_than_2_week_male_less_than_5_year),0) as cough_more_than_2_week_male_less_than_5_year,
coalesce(sum(cough_more_than_2_week_male_more_than_5_year),0) as cough_more_than_2_week_male_more_than_5_year,
coalesce(sum(cough_more_than_2_week_female_less_than_5_year),0) as  cough_more_than_2_week_female_less_than_5_year,
coalesce(sum(cough_more_than_2_week_female_more_than_5_year),0) as cough_more_than_2_week_female_more_than_5_year,
coalesce(sum(lws_with_small_dehydration_male_less_than_5_year),0) as lws_with_small_dehydration_male_less_than_5_year,
coalesce(sum(lws_with_small_dehydration_male_more_than_5_year),0) as lws_with_small_dehydration_male_more_than_5_year,
coalesce(sum(lws_with_small_dehydration_female_less_than_5_year),0) as lws_with_small_dehydration_female_less_than_5_year,
coalesce(sum(lws_with_small_dehydration_female_more_than_5_year),0) as lws_with_small_dehydration_female_more_than_5_year,
coalesce(sum(lws_with_no_dehydration_male_less_than_5_year),0) as lws_with_no_dehydration_male_less_than_5_year,
coalesce(sum(lws_with_no_dehydration_male_more_than_5_year),0) as lws_with_no_dehydration_male_more_than_5_year,
coalesce(sum(lws_with_no_dehydration_female_less_than_5_year),0) as lws_with_no_dehydration_female_less_than_5_year,
coalesce(sum(lws_with_no_dehydration_female_more_than_5_year),0) as lws_with_no_dehydration_female_more_than_5_year,
coalesce(sum(lws_with_blood_male_less_than_5_year),0) as lws_with_blood_male_less_than_5_year,
coalesce(sum(lws_with_blood_male_more_than_5_year),0) as lws_with_blood_male_more_than_5_year,
coalesce(sum(lws_with_blood_female_less_than_5_year),0) as lws_with_blood_female_less_than_5_year,
coalesce(sum(lws_with_blood_female_more_than_5_year),0) as lws_with_blood_female_more_than_5_year,
coalesce(sum(case_of_acute_jaundice_male_less_than_5_year),0) as case_of_acute_jaundice_male_less_than_5_year,
coalesce(sum(case_of_acute_jaundice_male_more_than_5_year),0) as case_of_acute_jaundice_male_more_than_5_year,
coalesce(sum(case_of_acute_jaundice_female_less_than_5_year),0) as case_of_acute_jaundice_female_less_than_5_year,
coalesce(sum(case_of_acute_jaundice_female_more_than_5_year),0) as case_of_acute_jaundice_female_more_than_5_year,
coalesce(sum(case_of_flacid_paralysis_male_less_than_5_year),0) as case_of_flacid_paralysis_male_less_than_5_year,
coalesce(sum(case_of_flacid_paralysis_male_more_than_5_year),0) as case_of_flacid_paralysis_male_more_than_5_year,
coalesce(sum(case_of_flacid_paralysis_female_less_than_5_year),0) as case_of_flacid_paralysis_female_less_than_5_year,
coalesce(sum(case_of_flacid_paralysis_female_more_than_5_year),0) as case_of_flacid_paralysis_female_more_than_5_year,
coalesce(sum(other_unusual_symptoms_male_less_than_5_year),0) as other_unusual_symptoms_male_less_than_5_year,
coalesce(sum(other_unusual_symptoms_male_more_than_5_year),0) as other_unusual_symptoms_male_more_than_5_year,
coalesce(sum(other_unusual_symptoms_female_less_than_5_year),0) as other_unusual_symptoms_female_less_than_5_year,
coalesce(sum(other_unusual_symptoms_female_more_than_5_year),0) as other_unusual_symptoms_female_more_than_5_year
from location_hierchy_closer_det lhc
left join idsp_member_screening_summary_detail imsd on imsd.location_id = lhc.child_id and imsd.report_date between to_date(''#report_from_date#'',''MM-DD-YYYY'')
and to_date(''#report_to_date#'',''MM-DD-YYYY'')
where lhc.parent_id = #location_id#
group by lhc.parent_id
)
select ''Fever <7 Days'' as reason,
fever_less_than_7_days_male_less_than_5_year as "male_less_than_5_year",
fever_less_than_7_days_male_more_than_5_year as "male_more_than_5_year",
fever_less_than_7_days_male_less_than_5_year + fever_less_than_7_days_male_more_than_5_year   as "male_total",
fever_less_than_7_days_female_less_than_5_year as "female_less_than_5_year",
fever_less_than_7_days_female_more_than_5_year as "female_more_than_5_year",
fever_less_than_7_days_female_less_than_5_year + fever_less_than_7_days_female_more_than_5_year   as "female_total",
fever_less_than_7_days_male_less_than_5_year + fever_less_than_7_days_male_more_than_5_year
	+ fever_less_than_7_days_female_less_than_5_year + fever_less_than_7_days_female_more_than_5_year   as "total"
from ldsp_detail
union all
select ''Only Fever'' as reason,
only_fever_male_less_than_5_year as "male_less_than_5_year",
only_fever_male_more_than_5_year as "male_more_than_5_year",
only_fever_male_less_than_5_year+only_fever_male_more_than_5_year as "male_total",
only_fever_female_less_than_5_year as "female_less_than_5_year",
only_fever_female_more_than_5_year as "female_more_than_5_year",
only_fever_female_less_than_5_year+only_fever_female_less_than_5_year as "female_total",
only_fever_male_less_than_5_year+only_fever_male_more_than_5_year
	+only_fever_female_less_than_5_year+only_fever_female_less_than_5_year as "total"
from ldsp_detail
union all
select ''With Rash'' as reason,
fever_with_rash_male_less_than_5_year as "male_less_than_5_year",
fever_with_rash_male_more_than_5_year as "male_more_than_5_year",
fever_with_rash_male_less_than_5_year + fever_with_rash_male_more_than_5_year as "male_total",
fever_with_rash_female_less_than_5_year as "female_less_than_5_year",
fever_with_rash_female_more_than_5_year as "female_more_than_5_year",
fever_with_rash_female_less_than_5_year+fever_with_rash_female_more_than_5_year as "female_total",
fever_with_rash_male_less_than_5_year + fever_with_rash_male_more_than_5_year
	+ fever_with_rash_female_less_than_5_year+fever_with_rash_female_more_than_5_year as "total"
from ldsp_detail
union all
select ''With Severe Joint Pains & Swelling'' as reason,
fever_with_server_joint_pain_male_less_than_5_year as "male_less_than_5_year",
fever_with_server_joint_pain_male_more_than_5_year as "male_more_than_5_year",
fever_with_server_joint_pain_male_less_than_5_year + fever_with_server_joint_pain_male_more_than_5_year as "male_total",
fever_with_server_joint_pain_female_less_than_5_year as "female_less_than_5_year",
fever_with_server_joint_pain_female_more_than_5_year as "female_more_than_5_year",
fever_with_server_joint_pain_female_less_than_5_year+ fever_with_server_joint_pain_female_more_than_5_year as "female_total",
fever_with_server_joint_pain_male_less_than_5_year + fever_with_server_joint_pain_male_more_than_5_year
	+fever_with_server_joint_pain_female_less_than_5_year+ fever_with_server_joint_pain_female_more_than_5_year as "total"
from ldsp_detail
union all
select ''With bleeding'' as reason,
fever_with_bleeding_male_less_than_5_year as "male_less_than_5_year",
fever_with_bleeding_male_more_than_5_year as "male_more_than_5_year",
fever_with_bleeding_male_less_than_5_year + fever_with_bleeding_male_more_than_5_year as "male_total",
fever_with_bleeding_female_less_than_5_year as "female_less_than_5_year",
fever_with_bleeding_female_more_than_5_year as "female_more_than_5_year",
fever_with_bleeding_female_less_than_5_year+ fever_with_bleeding_female_more_than_5_year as "female_total",
fever_with_bleeding_male_less_than_5_year + fever_with_bleeding_male_more_than_5_year
	+ fever_with_bleeding_female_less_than_5_year+ fever_with_bleeding_female_more_than_5_year as "total"
from ldsp_detail
union all
select ''With Daze/Semi or unconciousness'' as reason,
fever_with_daze_male_less_than_5_year as "male_less_than_5_year",
fever_with_daze_male_more_than_5_year as "male_more_than_5_year",
fever_with_daze_male_less_than_5_year+fever_with_daze_male_more_than_5_year as "male_total",
fever_with_daze_female_less_than_5_year as "female_less_than_5_year",
fever_with_daze_female_more_than_5_year as "female_more_than_5_year",
fever_with_daze_female_less_than_5_year + fever_with_daze_female_more_than_5_year as "female_total",
fever_with_daze_male_less_than_5_year+fever_with_daze_male_more_than_5_year
	+ fever_with_daze_female_less_than_5_year + fever_with_daze_female_more_than_5_year as "total"
from ldsp_detail
union all
select ''Fever >7 Days'' as reason,
fever_more_than_7_days_male_less_than_5_year as "male_less_than_5_year",
fever_more_than_7_days_male_more_than_5_year as "male_more_than_5_year",
fever_more_than_7_days_male_less_than_5_year + fever_more_than_7_days_male_more_than_5_year as "male_total",
fever_more_than_7_days_female_less_than_5_year as "female_less_than_5_year",
fever_more_than_7_days_female_more_than_5_year as "female_more_than_5_year",
fever_more_than_7_days_female_less_than_5_year+ fever_more_than_7_days_female_more_than_5_year as "female_total",
fever_more_than_7_days_male_less_than_5_year + fever_more_than_7_days_male_more_than_5_year
+fever_more_than_7_days_female_less_than_5_year+ fever_more_than_7_days_female_more_than_5_year as "total"
from ldsp_detail
union all
select ''<2 Weeks'' as reason,
cough_less_than_2_week_male_less_than_5_year as "male_less_than_5_year",
cough_less_than_2_week_male_more_than_5_year as "male_more_than_5_year",
cough_less_than_2_week_male_less_than_5_year+cough_less_than_2_week_male_more_than_5_year as "male_total",
cough_less_than_2_week_female_less_than_5_year as "female_less_than_5_year",
cough_less_than_2_week_female_more_than_5_year as "female_more_than_5_year",
cough_less_than_2_week_female_less_than_5_year+ cough_less_than_2_week_female_more_than_5_year as "female_total",
cough_less_than_2_week_male_less_than_5_year+cough_less_than_2_week_male_more_than_5_year
	+cough_less_than_2_week_female_less_than_5_year+ cough_less_than_2_week_female_more_than_5_year as "total"
from ldsp_detail
union all
select ''>2 Weeks'' as reason,
cough_more_than_2_week_male_less_than_5_year as "male_less_than_5_year",
cough_more_than_2_week_male_more_than_5_year as "male_more_than_5_year",
cough_more_than_2_week_male_less_than_5_year + cough_more_than_2_week_male_more_than_5_year as "male_total",
cough_more_than_2_week_female_less_than_5_year as "female_less_than_5_year",
cough_more_than_2_week_female_more_than_5_year as "female_more_than_5_year",
cough_more_than_2_week_female_less_than_5_year + cough_more_than_2_week_female_more_than_5_year as "female_total",
cough_more_than_2_week_male_less_than_5_year + cough_more_than_2_week_male_more_than_5_year
	+cough_more_than_2_week_female_less_than_5_year + cough_more_than_2_week_female_more_than_5_year as "total"
from ldsp_detail
union all
select ''With small/much dehydration'' as reason,
lws_with_small_dehydration_male_less_than_5_year as "male_less_than_5_year",
lws_with_small_dehydration_male_more_than_5_year as "male_more_than_5_year",
lws_with_small_dehydration_male_less_than_5_year + lws_with_small_dehydration_male_more_than_5_year as "male_total",
lws_with_small_dehydration_female_less_than_5_year as "female_less_than_5_year",
lws_with_small_dehydration_female_more_than_5_year as "female_more_than_5_year",
lws_with_small_dehydration_female_less_than_5_year + lws_with_small_dehydration_female_more_than_5_year as "female_total",
lws_with_small_dehydration_male_less_than_5_year + lws_with_small_dehydration_male_more_than_5_year
	+ lws_with_small_dehydration_female_less_than_5_year + lws_with_small_dehydration_female_more_than_5_year as "total"
from ldsp_detail
union all
select ''With no dehydration'' as reason,
lws_with_no_dehydration_male_less_than_5_year as "male_less_than_5_year",
lws_with_no_dehydration_male_more_than_5_year as "male_more_than_5_year",
lws_with_no_dehydration_male_less_than_5_year + lws_with_no_dehydration_male_more_than_5_year as "male_total",
lws_with_no_dehydration_female_less_than_5_year as "female_less_than_5_year",
lws_with_no_dehydration_female_more_than_5_year as "female_more_than_5_year",
lws_with_no_dehydration_female_less_than_5_year + lws_with_no_dehydration_female_more_than_5_year as "female_total",
lws_with_no_dehydration_male_less_than_5_year + lws_with_no_dehydration_male_more_than_5_year
	+lws_with_no_dehydration_female_less_than_5_year + lws_with_no_dehydration_female_more_than_5_year as "total"
from ldsp_detail
union all
select ''With blood in stool'' as reason,
lws_with_blood_male_less_than_5_year as "male_less_than_5_year",
lws_with_blood_male_more_than_5_year as "male_more_than_5_year",
lws_with_blood_male_less_than_5_year+lws_with_blood_male_more_than_5_year as "male_total",
lws_with_blood_female_less_than_5_year as "female_less_than_5_year",
lws_with_blood_female_more_than_5_year as "female_more_than_5_year",
lws_with_blood_female_less_than_5_year + lws_with_blood_female_more_than_5_year as "female_total",
lws_with_blood_male_less_than_5_year+lws_with_blood_male_more_than_5_year +
+lws_with_blood_female_less_than_5_year + lws_with_blood_female_more_than_5_year as "total"
from ldsp_detail
union all
select ''Case of acute Jaundice'' as reason,
case_of_acute_jaundice_male_less_than_5_year as "male_less_than_5_year",
case_of_acute_jaundice_male_more_than_5_year as "male_more_than_5_year",
case_of_acute_jaundice_male_less_than_5_year +  case_of_acute_jaundice_male_more_than_5_year as "male_total",
case_of_acute_jaundice_female_less_than_5_year as "female_less_than_5_year",
case_of_acute_jaundice_female_more_than_5_year as "female_more_than_5_year",
case_of_acute_jaundice_female_less_than_5_year + case_of_acute_jaundice_female_more_than_5_year as "female_total",
case_of_acute_jaundice_male_less_than_5_year +  case_of_acute_jaundice_male_more_than_5_year
+case_of_acute_jaundice_female_less_than_5_year + case_of_acute_jaundice_female_more_than_5_year as "total"
from ldsp_detail
union all
select ''Case of Acute Flacid Paralysis'' as reason,
case_of_flacid_paralysis_male_less_than_5_year as "male_less_than_5_year",
case_of_flacid_paralysis_male_more_than_5_year as "male_more_than_5_year",
case_of_flacid_paralysis_male_less_than_5_year + case_of_flacid_paralysis_male_more_than_5_year as "male_total",
case_of_flacid_paralysis_female_less_than_5_year as "female_less_than_5_year",
case_of_flacid_paralysis_female_more_than_5_year as "female_more_than_5_year",
case_of_flacid_paralysis_female_less_than_5_year + case_of_flacid_paralysis_female_more_than_5_year as "female_total",
case_of_flacid_paralysis_male_less_than_5_year + case_of_flacid_paralysis_male_more_than_5_year
	+ case_of_flacid_paralysis_female_less_than_5_year + case_of_flacid_paralysis_female_more_than_5_year as "total"
from ldsp_detail
union all
select ''Unusual Symptoms leading to death of hospitalization'' as reason,
other_unusual_symptoms_male_less_than_5_year as "male_less_than_5_year",
other_unusual_symptoms_male_more_than_5_year as "male_more_than_5_year",
other_unusual_symptoms_male_less_than_5_year + other_unusual_symptoms_male_more_than_5_year as "male_total",
other_unusual_symptoms_female_less_than_5_year as "female_less_than_5_year",
other_unusual_symptoms_female_more_than_5_year as "female_more_than_5_year",
other_unusual_symptoms_female_less_than_5_year + other_unusual_symptoms_female_more_than_5_year as "female_total",
other_unusual_symptoms_male_less_than_5_year + other_unusual_symptoms_male_more_than_5_year
	+ other_unusual_symptoms_female_less_than_5_year + other_unusual_symptoms_female_more_than_5_year as "total"
from ldsp_detail',true,'ACTIVE',NULL,true,'857dc58f-e263-4505-b6ad-52983a55b0fd'),
	 (1,'2018-05-18 13:09:53.177',57698,'2019-06-28 20:25:12.043','translation_mobile_label_retrival_after_date','preferedLanguage,createdOn','
SELECT country, key, language, created_by,
case when modified_on is null then cast(cast(extract(epoch from created_on) * 1000 - 19800000 as bigint) as text)
when modified_on is not null then cast(cast(extract(epoch from modified_on) * 1000 - 19800000 as bigint) as text) end
as created_on, true as custom3b, text, translation_pending
FROM public.internationalization_label_master
where (created_on >= ''#createdOn#'' or modified_on >= ''#createdOn#'')
and language = ''#preferedLanguage#'' and app_name = ''TECHO_MOBILE_APP'' order by created_on
',true,'ACTIVE',NULL,true,'9b6fb25c-b70a-4d8a-9041-0fd6724e5011'),
	 (1,'2019-04-17 10:57:26.25499',NULL,NULL,'retrieve_location_by_level_parent','level,parentId','select m.name,m.id,t.type as typeCode,t.name as type, m.parent as areaparentid  
from  location_hierchy_closer_det  c inner join location_type_master  t on t.type=c.child_loc_type 
inner join location_master m on m.id=c.child_id where t.level=#level# and parent_id=#parentId# order by depth',true,'ACTIVE','Retrieve location by given parent and for certain level',true,'20e827af-6836-4619-9222-3c3e18f725b3'),
	 (84954,'2020-09-28 00:00:00',84954,'2020-09-28 00:00:00','dr_techo_insert_covid_beneficary_detail_2','is_travel,gender,is_shortness_of_breath,travel_details,is_cough,is_fever,pincode,travel_to,address,is_sari,travel_date,created_by,other_symtoms,is_respiratory_issue,travel_mode,travel_from,contact_with_other_traveler,name,suggest_covid_test,is_travel_from_other_country,district_id,mobile_number,age,country_id,in_contact_with_covid19_paitent','INSERT INTO covid_travellers_info
("name", address, pincode, is_active, age, gender, country, mobile_number,
status, input_type, is_cough, is_fever,is_sari, is_shortness_of_breath, is_respiratory_issue,
other_symptoms, travel_date, is_travel_from_other_country, created_by, created_on, modified_by,
modified_on,travel_from,travel_to,travel_details,travel_mode,suggest_covid_test,contact_with_other_traveler,in_contact_with_covid19_paitent,is_travel,district_id)
VALUES(''#name#''
, (case when ''#address#'' = ''null'' then null else ''#address#'' end)
, (case when #pincode# = null then 0 else #pincode# end)
,true
,(case when ''#age#'' = ''null'' then null else #age# end)
,(case when ''#gender#'' = ''null'' then null else ''#gender#'' end)
,(select value from listvalue_field_value_detail where id = #country_id#)
,(case when ''#mobile_number#'' = ''null'' then null else ''#mobile_number#'' end)
,''ACTIVE''
,''DR_TECHO''
,(case when ''#is_cough#'' = ''null'' then cast(null as boolean) else #is_cough# end)
,(case when ''#is_fever#'' = ''null'' then cast(null as boolean) else #is_fever# end)
,(case when ''#is_sari#'' = ''null'' then cast(null as boolean) else #is_sari# end)
,(case when ''#is_shortness_of_breath#'' = ''null'' then cast(null as boolean) else #is_shortness_of_breath# end)
,(case when ''#is_respiratory_issue#'' = ''null'' then cast(null as boolean) else #is_respiratory_issue# end)
,(case when ''#other_symtoms#'' = ''null'' then null else ''#other_symtoms#'' end)
,(case when ''#travel_date#'' = ''null'' then null else cast(case when ''#travel_date#'' = ''null'' then null else ''#travel_date#'' end  as timestamp)  end)
,(case when ''#is_travel_from_other_country#'' = ''null'' then cast(null as boolean) else #is_travel_from_other_country# end)
,(case when ''#created_by#'' = ''null'' then null else #created_by# end)
,now()
,(case when ''#created_by#'' = ''null'' then null else #created_by# end)
,now()
,(case when ''#travel_from#'' = ''null'' then null else ''#travel_from#'' end)
,(case when ''#travel_to#'' = ''null'' then null else ''#travel_to#'' end)
,(case when ''#travel_details#'' = ''null'' then null else ''#travel_details#'' end)
,(case when ''#travel_mode#'' = ''null'' then null else ''#travel_mode#'' end)
,(case when ''#suggest_covid_test#'' = ''null'' then cast(null as boolean) else #suggest_covid_test# end)
,(case when ''#contact_with_other_traveler#'' = ''null'' then cast(null as boolean) else #contact_with_other_traveler# end)
,(case when ''#in_contact_with_covid19_paitent#'' = ''null'' then null else ''#in_contact_with_covid19_paitent#'' end)
,(case when ''#is_travel#'' = ''null'' then cast(null as boolean) else #is_travel# end)
,(case when ''#district_id#'' = ''null'' then null else #district_id# end)
)
returning id;',true,'ACTIVE',NULL,true,'b5669340-bc6f-4c16-b412-c6661abbc140'),
	 (84954,'2020-09-28 00:00:00',84954,'2020-09-28 00:00:00','drtecho_covid19_sample_collection','otherCoMobidity,indications,occupation,isHypertension,emergencyContactNo,health_infra_id,abroad_contact_details,referFromHosital,opdCaseNo,admission_date,contact_no,case_number,health_status,memberId,isImmunocompromized,unitno,pregnancy_status,admissionFromRefId,loggedInUserId,isCOPD,travelledPlace,lastname,hasShortnessBreath,pinCode,is_abroad_in_contact,suggestedHealthInfra,inContactWithCovid19Paitent,firstname,gender,bed_no,date_of_onset_symptom,isRenalCondition,isHeartPatient,labHealthInfraId,isOtherCoMobidity,flightno,locationId,member_id,address,loggedIn_user,ward_no,emergencyContactName,isSari,hasCough,middlename,travelHistory,collectionDate,isMalignancy,isMigrant,covid19_lab_test_recommendation_id,hasFever,isHIV,otherIndications,districtLocationId,isDiabetes,age,ageMonth','with generated_id as (
select  nextval(''covid19_admission_detail_id_seq'') as id
),health_infra_det as (
select id from health_infrastructure_details where #health_infra_id# is null and id = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = ''#loggedInUserId#'' and uhi.state = ''ACTIVE'')
union all
select cast(#health_infra_id# as integer) as id where  #health_infra_id# is not null
),insert_daily_admission_det as (
insert into covid19_admitted_case_daily_status(member_id,location_id,admission_id,service_date,ward_id,bed_no,health_status,created_by,created_on)
values(#member_id#,#districtLocationId#,(select id from generated_id),to_timestamp(''#admission_date#'',''DD/MM/YYYY HH24:MI:SS''),#ward_no#,''#bed_no#'',''#health_status#'',''#loggedInUserId#'',now())
returning id
),insert_lab_test as (
INSERT INTO public.covid19_lab_test_detail(
member_id, location_id, covid_admission_detail_id, lab_collection_status,created_by,created_on,sample_health_infra,sample_health_infra_send_to,lab_collection_on,lab_collection_entry_by, collection_server_date)
VALUES (#memberId#,
#locationId#, (select id from generated_id),''SAMPLE_COLLECTED'',''#loggedInUserId#'',now(), (select id from health_infra_det),#labHealthInfraId#,to_timestamp(''#collectionDate#'',''DD/MM/YYYY HH24:MI:SS''),''#loggedInUserId#'', now())
returning id
)
insert into covid19_admission_detail
(id,
member_id,
first_name,
middle_name,
last_name,
age,
age_month,
contact_number,
address,
gender,
flight_no,
refer_from_hospital,

case_no,
unit_no,

is_cough,
is_fever,
is_breathlessness,
location_id,
covid19_lab_test_recommendation_id,
last_lab_test_id,
last_check_up_detail_id,
current_ward_id,
current_bed_no,
admission_status_id,
admission_date,
admission_entry_by,
admission_entry_on,
is_hiv,
is_heart_patient,
is_diabetes,
admission_from,
admission_from_ref_id,
status,
pincode,
emergency_contact_name,
emergency_contact_no,
is_immunocompromized,
is_hypertension,
is_malignancy,
is_renal_condition,
is_copd,
pregnancy_status,
date_of_onset_symptom,
occupation,
travel_history,
travelled_place,
is_abroad_in_contact,
abroad_contact_details,

in_contact_with_covid19_paitent,
opd_case_no,
is_other_co_mobidity,
other_co_mobidity,
is_sari,
indications,
indication_other,
suggested_health_infra,
is_migrant
)
values(
(select id from generated_id)
,#member_id#
,''#firstname#''
,(case when ''#middlename#'' = ''null'' then null else ''#middlename#'' end)
,(case when ''#lastname#'' = ''null'' then null else ''#lastname#'' end)
,#age#
,#ageMonth#
,(case when ''#contact_no#'' = ''null'' then null else ''#contact_no#'' end)
,(case when ''#address#'' = ''null'' then null else ''#address#'' end)
,(case when ''#gender#'' = ''null'' then null else ''#gender#'' end)
,(case when ''#flightno#'' = ''null'' then null else ''#flightno#'' end)
,(case when ''#referFromHosital#'' = ''null'' then null else ''#referFromHosital#'' end)

,(case when ''#case_number#'' = ''null'' then null else ''#case_number#'' end)
,(case when ''#unitno#'' = ''null'' then null else ''#unitno#'' end)
,#hasCough#
,#hasFever#
,#hasShortnessBreath#
,''#districtLocationId#''
,#covid19_lab_test_recommendation_id#
,(select id from insert_lab_test)
,(select id from insert_daily_admission_det)
,#ward_no#
,(case when ''#bed_no#'' = ''null'' then null else ''#bed_no#'' end)
,(select id from insert_daily_admission_det)
,to_timestamp(''#admission_date#'',''DD/MM/YYYY HH24:MI:SS'')
,#loggedIn_user#
,now()
,#isHIV#
,#isHeartPatient#
,#isDiabetes#
,''DR_TECHO''
,#admissionFromRefId#
,''OPD_ADMIT''
,''#pinCode#''
,(case when ''#emergencyContactName#'' = ''null'' then null else ''#emergencyContactName#'' end)
,(case when ''#emergencyContactNo#'' = ''null'' then null else ''#emergencyContactNo#'' end)
,#isImmunocompromized#
,#isHypertension#
,#isMalignancy#
,#isRenalCondition#
,#isCOPD#
,(case when ''#pregnancy_status#'' = ''null'' then null else ''#pregnancy_status#'' end)
,(case when ''#date_of_onset_symptom#'' = ''null'' then null else to_date(''#date_of_onset_symptom#'',''MM-DD-YYYY'') end)
,(case when ''#occupation#'' = ''null'' then null else ''#occupation#'' end)
,(case when ''#travelHistory#'' = ''null'' then null else ''#travelHistory#'' end)
,(case when ''#travelledPlace#'' = ''null'' then null else ''#travelledPlace#'' end)
,(case when ''#is_abroad_in_contact#'' = ''null'' then null else ''#is_abroad_in_contact#'' end)
,(case when ''#abroad_contact_details#'' = ''null'' then null else ''#abroad_contact_details#'' end)

,(case when ''#inContactWithCovid19Paitent#'' = ''null'' then null else ''#inContactWithCovid19Paitent#'' end)
,(case when ''#opdCaseNo#'' = ''null'' then null else ''#opdCaseNo#'' end)
,#isOtherCoMobidity#
,(case when ''#otherCoMobidity#'' = ''null'' then null else ''#otherCoMobidity#'' end)
,#isSari#
,(case when ''#indications#'' = ''null'' then null else ''#indications#'' end)
,(case when ''#otherIndications#'' = ''null'' then null else ''#otherIndications#'' end)
,#suggestedHealthInfra#
,#isMigrant#)
RETURNING last_lab_test_id;',true,'ACTIVE',NULL,true,'e5aadaba-3e69-432f-984b-f614323e9044'),
	 (84954,'2020-09-28 00:00:00',84954,'2020-09-28 00:00:00','drtecho_covid19_sample_pending','otherCoMobidity,indications,occupation,isHypertension,emergencyContactNo,health_infra_id,abroad_contact_details,referFromHosital,opdCaseNo,admission_date,contact_no,case_number,health_status,memberId,isImmunocompromized,unitno,pregnancy_status,admissionFromRefId,loggedInUserId,isCOPD,travelledPlace,lastname,hasShortnessBreath,pinCode,is_abroad_in_contact,suggestedHealthInfra,inContactWithCovid19Paitent,firstname,gender,bed_no,date_of_onset_symptom,isRenalCondition,isHeartPatient,isOtherCoMobidity,flightno,locationId,member_id,address,loggedIn_user,ward_no,emergencyContactName,isSari,hasCough,middlename,travelHistory,sampleHealthInfra,isMalignancy,isMigrant,covid19_lab_test_recommendation_id,hasFever,isHIV,otherIndications,districtLocationId,isDiabetes,age,ageMonth','with generated_id as (
select  nextval(''covid19_admission_detail_id_seq'') as id
),health_infra_det as (
select id from health_infrastructure_details where #health_infra_id# is null and id = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = ''#loggedInUserId#'' and uhi.state = ''ACTIVE'')
union all
select cast(#health_infra_id# as integer) as id where  #health_infra_id# is not null
),insert_daily_admission_det as (
insert into covid19_admitted_case_daily_status(member_id,location_id,admission_id,service_date,ward_id,bed_no,health_status,created_by,created_on)
values(#member_id#,#districtLocationId#,(select id from generated_id),''#admission_date#'',#ward_no#,''#bed_no#'',''#health_status#'',''#loggedInUserId#'',now())
returning id
),insert_lab_test as (
INSERT INTO public.covid19_lab_test_detail(
member_id, location_id, covid_admission_detail_id, lab_collection_status,created_by,created_on,sample_health_infra)
VALUES (#memberId#,
#locationId#, (select id from generated_id),''COLLECTION_PENDING'',''#loggedInUserId#'',now(),#sampleHealthInfra#)
returning id
)
insert into covid19_admission_detail
(id,
member_id,
first_name,
middle_name,
last_name,
age,
age_month,
contact_number,
address,
gender,
flight_no,
refer_from_hospital,

case_no,
unit_no,

is_cough,
is_fever,
is_breathlessness,
location_id,
covid19_lab_test_recommendation_id,
last_lab_test_id,
last_check_up_detail_id,
current_ward_id,
current_bed_no,
admission_status_id,
admission_date,
admission_entry_by,
admission_entry_on,
is_hiv,
is_heart_patient,
is_diabetes,
admission_from,
admission_from_ref_id,
status,
pincode,
emergency_contact_name,
emergency_contact_no,
is_immunocompromized,
is_hypertension,
is_malignancy,
is_renal_condition,
is_copd,
pregnancy_status,
date_of_onset_symptom,
occupation,
travel_history,
travelled_place,
is_abroad_in_contact,
abroad_contact_details,

in_contact_with_covid19_paitent,
opd_case_no,
is_other_co_mobidity,
other_co_mobidity,
is_sari,
indications,
indication_other,
suggested_health_infra,
is_migrant
)
values(
(select id from generated_id)
,#member_id#
,''#firstname#''
,(case when ''#middlename#'' = ''null'' then null else ''#middlename#'' end)
,(case when ''#lastname#'' = ''null'' then null else ''#lastname#'' end)
,#age#
,#ageMonth#
,(case when ''#contact_no#'' = ''null'' then null else ''#contact_no#'' end)
,(case when ''#address#'' = ''null'' then null else ''#address#'' end)
,(case when ''#gender#'' = ''null'' then null else ''#gender#'' end)
,(case when ''#flightno#'' = ''null'' then null else ''#flightno#'' end)
,(case when ''#referFromHosital#'' = ''null'' then null else ''#referFromHosital#'' end)

,(case when ''#case_number#'' = ''null'' then null else ''#case_number#'' end)
,(case when ''#unitno#'' = ''null'' then null else ''#unitno#'' end)
,#hasCough#
,#hasFever#
,#hasShortnessBreath#
,''#districtLocationId#''
,#covid19_lab_test_recommendation_id#
,(select id from insert_lab_test)
,(select id from insert_daily_admission_det)
,#ward_no#
,(case when ''#bed_no#'' = ''null'' then null else ''#bed_no#'' end)
,(select id from insert_daily_admission_det)
,''#admission_date#''
,#loggedIn_user#
,now()
,#isHIV#
,#isHeartPatient#
,#isDiabetes#
,''DR_TECHO''
,#admissionFromRefId#
,''OPD_ADMIT''
,''#pinCode#''
,(case when ''#emergencyContactName#'' = ''null'' then null else ''#emergencyContactName#'' end)
,(case when ''#emergencyContactNo#'' = ''null'' then null else ''#emergencyContactNo#'' end)
,#isImmunocompromized#
,#isHypertension#
,#isMalignancy#
,#isRenalCondition#
,#isCOPD#
,(case when ''#pregnancy_status#'' = ''null'' then null else ''#pregnancy_status#'' end)
,(case when ''#date_of_onset_symptom#'' = ''null'' then null else to_date(''#date_of_onset_symptom#'',''MM-DD-YYYY'') end)
,(case when ''#occupation#'' = ''null'' then null else ''#occupation#'' end)
,(case when ''#travelHistory#'' = ''null'' then null else ''#travelHistory#'' end)
,(case when ''#travelledPlace#'' = ''null'' then null else ''#travelledPlace#'' end)
,(case when ''#is_abroad_in_contact#'' = ''null'' then null else ''#is_abroad_in_contact#'' end)
,(case when ''#abroad_contact_details#'' = ''null'' then null else ''#abroad_contact_details#'' end)

,(case when ''#inContactWithCovid19Paitent#'' = ''null'' then null else ''#inContactWithCovid19Paitent#'' end)
,(case when ''#opdCaseNo#'' = ''null'' then null else ''#opdCaseNo#'' end)
,#isOtherCoMobidity#
,(case when ''#otherCoMobidity#'' = ''null'' then null else ''#otherCoMobidity#'' end)
,#isSari#
,(case when ''#indications#'' = ''null'' then null else ''#indications#'' end)
,(case when ''#otherIndications#'' = ''null'' then null else ''#otherIndications#'' end)
,#suggestedHealthInfra#
,#isMigrant#)
RETURNING id;',true,'ACTIVE',NULL,true,'55dbcd33-ed88-4cff-bd66-825fd80ddd2f'),
	 (60512,'2020-10-05 11:55:08.159',60512,'2020-10-05 11:55:08.159','retrieve_npcb_hospitals_by_infra_type','infraType','select * from health_infrastructure_details where type = #infraType#
and is_npcb',true,'ACTIVE',NULL,NULL,'d9b49065-fbae-4c4a-a685-8c14e79ef41f'),
	 (74840,'2020-10-16 00:00:00',74840,'2020-10-16 00:00:00','get_member_details_by_unique_health_id_for_digilocker','unique_health_id','with member_details as (
	select
	mem.id as member_id,
	concat(mem.first_name, '' '', mem.last_name, '' ('', mem.unique_health_id, '')'') as member_name,
	mem.middle_name as father_name,
	case
	    when (fam.address1 is null and fam.address2 is null) then ''N/A''
	    else
	        case
	            when fam.address1 is null then fam.address2
	            when fam.address2 is null then fam.address1
	            else concat(fam.address1, '','', fam.address2)
	        end
	end as address,
	date_part(''years'', age(localtimestamp, dob)) as age,
	dob as child_dob,
	to_char(dob,''dd-MM-yyyy'') as dob,
	case
		when rel.value = ''HINDU'' then ''Hindu''
		when rel.value = ''CHRISTIAN'' then ''Christian''
		when rel.value = ''MUSLIM'' then ''Muslim''
		when rel.value = ''OTHERS'' then ''Others''
		else rel.value
	end as religion,
	case
		when cas.value = ''GENERAL'' then ''General''
		else cas.value
	end as cast
	from imt_member mem

	inner join imt_family fam on mem.family_id = fam.family_id
	left join listvalue_field_value_detail cas on fam.caste = (cast(cas.id as varchar))
	left join listvalue_field_value_detail rel on fam.religion = (cast(rel.id as varchar))
	where mem.unique_health_id = ''#unique_health_id#''
)
select * from member_details',true,'ACTIVE',NULL,true,'95251b96-7ae1-4951-8254-170042d5b862'),
	 (74841,'2020-10-16 00:00:00',74841,'2020-10-16 00:00:00','cm_dashboard_opd_ipd_report','performanceDate','---------cm_dashboard_opd_ipd_report---------
 with healthinfradet as (
select
	health_infrastructure_details.id,
	listvalue.value,
	health_infrastructure_details.location_id as locid,
	health_infrastructure_details.name,
	l1.english_name as district,
	l1.location_code as dcode,
	l2.english_name as taluka,
	l2.location_code as tcode
from
	health_infrastructure_details
inner join listvalue_field_value_detail listvalue on
	health_infrastructure_details.type = listvalue.id
	and listvalue.value in (''PHC'',
	''UPHC'',
	''Community Health Center''
	,''Urban Community Health Center''
	,''District Hospital''
	,''Sub District Hospital''
	,''Medical College Hospital'')
    and health_infrastructure_details.is_no_reporting_unit is not true
left join location_hierchy_closer_det dis on
	health_infrastructure_details.location_id = dis.child_id
	and dis.parent_loc_type in (''D'',
	''C'')
left join location_master l1 on
	dis.parent_id = l1.id
left join location_hierchy_closer_det tal on
	health_infrastructure_details.location_id = tal.child_id
	and tal.parent_loc_type in (''B'',
	''Z'')
left join location_master l2 on
	tal.parent_id = l2.id 
where l1.name not ilike ''%delete%''
and (l2.name is null or l2.name not ilike ''%delete%'')),
fpdetails as (
select
	fpm.health_infrastrucutre_id as hid,
	fpm.no_of_opd_attended,
	fpm.no_of_ipd_attended,
	fpm.no_of_deliveres_conducted,
	fpm.no_of_csection_conducted,
	fpm.no_of_major_operation_conducted,
	fpm.no_of_minor_operation_conducted,
	fpm.no_of_laboratory_test_conducted,
	fpm.performance_date
from
	facility_performance_master fpm
where
	performance_date = cast(''#performanceDate#'' as date) ) select
	healthinfradet.dcode as "Dist_cd",
	healthinfradet.district as "Dist_Name",
	healthinfradet.tcode as "Tcode",
	coalesce(healthinfradet.taluka, ''N/A'') as "Tal_Name",
	healthinfradet.name as "Facility_Name",
	case
		when healthinfradet.value = ''PHC'' then 1
		when healthinfradet.value = ''UPHC'' then 3
		when healthinfradet.value in (''Community Health Center'',''Urban Community Health Center'') then 4
		when healthinfradet.value in (''Sub District Hospital'') then 5
		when healthinfradet.value in (''District Hospital'',''Medical College Hospital'') then 6
	end as "Facility_Type",
	coalesce(fpdetails.no_of_opd_attended, 0) as "No_Of_OPDs",
	coalesce(fpdetails.no_of_ipd_attended, 0) as "No_of_IPDs",
	coalesce(fpdetails.no_of_deliveres_conducted, 0) as "No_of_deliveries_conducted_at_facility",
	coalesce(fpdetails.no_of_csection_conducted, 0) as "No_of_c_section_conducted_at_facility",
	coalesce(fpdetails.no_of_major_operation_conducted, 0) as "No_of_Major_operations_conducted_at_facility",
	coalesce(fpdetails.no_of_minor_operation_conducted, 0) as "No_of_Minor_operations_conducted_at_facility",
	coalesce(fpdetails.no_of_laboratory_test_conducted, 0) as "No_of_laboratory_tests_conducted_at_facility",
	case when fpdetails.performance_date is not null then to_char(fpdetails.performance_date, ''MM/dd/yyyy'') 
else to_char( cast(''#performanceDate#'' as date), ''MM/dd/yyyy'') 
 end as "Date"
from
	healthinfradet
left join fpdetails on
	healthinfradet.id = fpdetails.hid',true,'ACTIVE','To get CM dashboard OPD IPD report',true,'83574a2f-4e25-47de-a87e-9a24abe33aa6'),
	 (74909,'2020-10-16 00:00:00',74909,'2020-10-16 00:00:00','get_data_quality_by_time_line_1','locationId,elementName','select * from soh_timeline_analytics_temp where location_id =#locationId# and element_name in (#elementName#) and timeline_type=''YEAR_04_2019''',true,'ACTIVE',NULL,true,'07e70988-12b1-4d2d-ac02-ad9430ca80ed'),
	 (1,'2018-10-22 18:44:55.477199',NULL,NULL,'generate_discharge_notification','location_id,family_id,member_id,date_of_delivery,created_by,pregnancy_reg_det_id,id','INSERT INTO techo_notification_master(notification_type_id, notification_code, location_id, 
        family_id, member_id, schedule_date, due_on, state, created_by, created_on, modified_by, modified_on, 
        ref_code, related_id) 
    SELECT (SELECT id FROM notification_type_master WHERE code = ''DISCHARGE''), 
        ''0'', #location_id#, #family_id#, #member_id#, 
        CASE WHEN (CAST(''#date_of_delivery#'' AS DATE) + INTERVAL ''3 days'') > now() 
            THEN (CAST(''#date_of_delivery#'' AS DATE) + INTERVAL ''3 days'') ELSE now() END,
        CASE WHEN (CAST(''#date_of_delivery#'' AS DATE) + INTERVAL ''3 days'') > now() 
            THEN (CAST(''#date_of_delivery#'' AS DATE) + INTERVAL ''6 days'') ELSE now() + INTERVAL ''3 days'' END,
        ''PENDING'', #created_by#, now(), #created_by#, now(), #pregnancy_reg_det_id#, #id#;',false,'ACTIVE','It will generate the notification for Discharge Date Entry Form For WPD',true,'6afc9d91-9212-4ee1-a2f1-e3df857332f8'),
	 (80208,'2020-05-11 11:35:16.945911',80208,'2020-05-11 11:35:16.945911','team_type_config_retrieve_by_id','id','with team_type_role as (
select ttm.id , cast(json_agg(json_build_object(''id'',urm1.id,''name'',urm1.name ) ) as text) as "selectedManageRoleIds"
from team_type_master ttm 
left join team_type_role_master ttrm on ttrm.team_type_id = ttm.id and ttrm.state=''ACTIVE'' 
left join um_role_master urm1 on urm1.id = ttrm.role_id where ttm.id = #id#
group by ttm.id
),
team_type_conf as (
select ttm.id, 
cast(json_agg(json_build_object(''roleId'',tcd.role_id ,''minMember'',tcd.min_member,''maxMember'' ,tcd.max_member,''role'',json_build_object(''id'',urm.id ,''name'',urm.name ) ) )as text) as "teamConfDetails"
from team_type_master ttm 
left join team_configuration_det tcd on tcd.team_type_id = ttm.id and tcd.state = ''ACTIVE'' 
left join um_role_master urm on urm.id = tcd.role_id 
where ttm.id = #id# group by ttm.id 
)
select ttm.id ,ttm."type" ,ttm.state , ttr."selectedManageRoleIds" , ttc."teamConfDetails" 
from team_type_master ttm left join team_type_role ttr on ttr.id = ttm.id left join team_type_conf ttc on ttm.id = ttc.id where ttm.id = #id#;',true,'ACTIVE',NULL,true,'891b890e-efb3-4e4a-90fc-76509875c6f2'),
	 (1,'2018-12-27 15:21:43.988695',NULL,NULL,'retrieve_roles_for_health_infra_type','infraType','
select r.id ,r.name from  um_role_master r
 ,role_health_infrastructure_type  rh
 where rh.role_id=r.id and r.state=''ACTIVE'' and rh.health_infrastructure__type_id=#infraType#
',true,'ACTIVE','Retrieve Roles for the health infrastructure type',true,'3210ee26-d705-4a5b-aad3-9d4c33d4285b'),
	 (1,'2019-09-20 00:00:00',66522,'2019-11-15 14:27:09.144','mytecho_search_faq','language_code,searchText','select distinct mytecho_faq_details.*
from mytecho_faq_details
where (
	mytecho_faq_details.tags ILIKE ''%#searchText#%'' or mytecho_faq_details.category ILIKE ''%#searchText#%'' or mytecho_faq_details.question ILIKE ''%#searchText#%'' or
mytecho_faq_details.content ILIKE ''%#searchText#%''
) and mytecho_faq_details.language_code = ''#language_code#''',true,'ACTIVE',NULL,true,'5a2665bf-93a3-4ee3-a058-95532351c705'),
	 (60512,'2020-04-04 00:00:00',60512,'2020-04-04 00:00:00','retrieve_covid_lab_test_by_location','locationId','select *
from health_infrastructure_details
where (case when #locationId# is not null then location_id in (select child_id from location_hierchy_closer_det where parent_id = #locationId#) else true end)
and is_covid_lab',true,'ACTIVE',NULL,true,'245f89a5-9b4e-4843-bdbf-8abffeec94a4'),
	 (75398,'2020-10-27 00:00:00',75398,'2020-10-27 00:00:00','retrieve_rch_pnc_child_master_info','healthid','with pncchild as (
select
	*
from
	rch_pnc_child_master
where
	child_id = (
	select
		id
	from
		imt_member
	where
		unique_health_id = #healthid#
	limit 1)
order by
	created_on desc
limit 5 )
,dangersign as (
select
	danger.child_pnc_id,
	string_agg(list.value, '', '') as dangersigndata
from
pncchild
inner join
	rch_pnc_child_danger_signs_rel danger on danger.child_pnc_id = pncchild.id
inner join listvalue_field_value_detail list on
	danger.child_danger_signs = list.id
group by
	danger.child_pnc_id) ,
deathsign as (
select
	death.child_pnc_id,
	string_agg(list.value, '', '') as deathsigndata
from
	rch_pnc_child_death_reason_rel death
left join listvalue_field_value_detail list on
	death.child_death_reason = list.id
group by
	death.child_pnc_id) select
	pncchild.id as "pncChildId",
	pncchild.pnc_master_id as "pncMasterId",
	pncchild.child_id as "childId",
	pncchild.is_alive as "isAlive",
	pncchild.other_danger_sign as "childOtherDanger",
	pncchild.child_weight as "childWeight",
	pncchild.created_by as "createdBy",
	pncchild.created_on as "createdOn",
	pncchild.modified_by as "modifiedBy",
	pncchild.modified_on as "modifiedOn",
	pncchild.member_status as "memberStatus",
	pncchild.death_date as "childDeathDate",
	pncchild.death_reason as "childDeathReason",
	pncchild.place_of_death as "childDeathPlace",
	pncchild.referral_place as "childReferralPlace",
	pncchild.other_death_reason as "childDeathOtherReason",
	pncchild.is_high_risk_case as "isHighRiskCase",
	pncchild.child_referral_done as "childReferralDone",
	pncmaster.family_id,
	pncmaster.latitude,
	pncmaster.longitude,
	pncmaster.mobile_start_date as "mobileStartDate",
	pncmaster.mobile_end_date as "mobileEndDate",
	pncmaster.location_id as "locationId",
	pncmaster.notification_id as "notificationId",
	pncmaster.pregnancy_reg_det_id as "pregnancyRegDetId",
	pncmaster.pnc_no as "pncNo",
	pncmaster.is_from_web as "isFromWeb",
	pncmaster.service_date as "serviceDate",
	usr.first_name || '' '' || usr.middle_name || '' '' || usr.last_name as usrfullname,
	usr.user_name as username,
	referralplace.value as referralplacename,
	fam.family_id as familyid,
	loc.name as locationname,
	danger.dangersigndata,
	death.deathsigndata
from
	pncchild
left join rch_pnc_master pncmaster on
	pncchild.pnc_master_id = pncmaster.id
left join imt_family fam on
	pncmaster.family_id = fam.id
left join location_master loc on
	pncmaster.location_id = loc.id
left join um_user usr on
	pncchild.created_by = usr.id
left join deathsign death on
	pncchild.id = death.child_pnc_id
left join dangersign danger on
	pncchild.id = danger.child_pnc_id
left join listvalue_field_value_detail referralplace on
	pncchild.referral_place = referralplace.id
order by
	pncmaster.service_date desc
limit 5',true,'ACTIVE','Retrieve RCH PNC Child Master Information',true,'2c4e56e2-3528-4e30-a4b7-6679233cfc21'),
	 (409,'2018-12-31 05:46:48.262',409,'2019-02-11 12:29:31.555','mark_techo_web_notification_as_complete','action_by,notification_id','update techo_web_notification_master set state = ''COMPLETED'',modified_on = now(),modified_by = #action_by#
where id = #notification_id#',false,'ACTIVE',NULL,true,'89ee5a3e-21af-4b9d-aff2-e40119585339'),
	 (1,'2018-11-02 00:33:48.934',60512,'2019-05-31 14:26:01.119','generate_appetite_test_notification','member_id,family_id,area_id,created_by','INSERT INTO techo_web_notification_master(notification_type_id,escalation_level_id, location_id,
        family_id, member_id, schedule_date, state, created_by, created_on, modified_by, modified_on) 
        select id,escalation_id, CAST ( ''#area_id#'' as bigint) , #family_id#, #member_id#, now(), ''PENDING'',
        #created_by#, now(), #created_by#, now() from (SELECT ntm.id,elm.id as escalation_id FROM notification_type_master ntm, escalation_level_master elm 
	WHERE ntm.code = ''CMTC_PROBABLES'' and ntm.id = elm.notification_type_id and elm.name = ''Default'') as notification_info
        WHERE NOT EXISTS 
(SELECT * FROM techo_web_notification_master where member_id = #member_id# 
and notification_type_id =  (SELECT id FROM notification_type_master WHERE code = ''CMTC_PROBABLES'' )
and state = ''PENDING'');',false,'ACTIVE','It will generate the notification for Appetite Test Alert For Child',true,'0d87f0c0-cdc3-4643-b750-3ace3076d8ed'),
	 (409,'2019-09-26 12:37:02.844',409,'2019-09-26 12:37:02.844','search_location_by_name','locationName','with location_det as (
select lm.id as location_id,lm.english_name  as location_name
from location_master lm
where "name" ilike ''%#locationName#%'' or english_name ilike ''%#locationName#%''
limit 10
)
select lh.child_id as location_id
,location_det.location_name as location_name
,max(case when lh.parent_loc_type = ''D'' then l.id else null end) as "districtId"
,max(case when lh.parent_loc_type = ''D'' then l."name" else null end) as "districtName"
,max(case when lh.parent_loc_type = ''C'' then l.id else null end) as "corporationId"
,max(case when lh.parent_loc_type = ''C'' then l."name" else null end) as "corporationName"
,max(case when lh.parent_loc_type = ''B'' then l.id else null end) as "blockId"
,max(case when lh.parent_loc_type = ''B'' then l."name" else null end) as "blockName"
,max(case when lh.parent_loc_type = ''Z'' then l.id else null end) as "zoneId"
,max(case when lh.parent_loc_type = ''Z'' then l."name" else null end) as "zoneName"
,max(case when lh.parent_loc_type = ''U'' then l.id else null end) as "uphcId"
,max(case when lh.parent_loc_type = ''U'' then l."name" else null end) as "uphcName"
,max(case when lh.parent_loc_type = ''P'' then l.id else null end) as "phcId"
,max(case when lh.parent_loc_type = ''P'' then l."name" else null end) as "phcName"
,max(case when lh.parent_loc_type = ''ANM'' then l.id else null end) as "anmAreaId"
,max(case when lh.parent_loc_type = ''ANM'' then l."name" else null end) as "anmAreaName"
,max(case when lh.parent_loc_type = ''SC'' then l.id else null end) as "scId"
,max(case when lh.parent_loc_type = ''SC'' then l."name" else null end) as "scName"
,max(case when lh.parent_loc_type = ''V'' then l.id else null end) as "villageId"
,max(case when lh.parent_loc_type = ''V'' then l."name" else null end) as "villageName"
,max(case when lh.parent_loc_type = ''ANG'' then l.id else null end) as "anganwadiId"
,max(case when lh.parent_loc_type = ''ANG'' then l."name" else null end) as "anganwadiName"
from location_hierchy_closer_det lh,location_det,location_master l
where lh.child_id = location_det.location_id
and l.id = lh.parent_id
group by lh.child_id,location_det.location_name',true,'ACTIVE','For DR Techo',true,'c16c75cb-80a1-4d54-88d3-7143b6cb0646'),
	 (60512,'2019-12-12 11:04:21.28',60512,'2019-12-12 11:04:21.28','dr_techo_retrieve_by_unique_health_id','uniqueHealthId','select id as "memberId",
unique_health_id as "uniqueHealthId",
first_name as "firstName",
middle_name as "middleName",
last_name as "lastName",
gender,
dob,
mobile_number as "mobileNumber",
marital_status as "maritalStatus"
from imt_member
where unique_health_id in (''#uniqueHealthId#'')',true,'ACTIVE',NULL,true,'3930a62e-abd4-4e60-a05d-cf700c46ccf3'),
	 (1,'2020-04-10 00:00:00',1,'2020-04-10 00:00:00','retrieve_covid_19_travellers_count','locationId,isFromImmigration','
    select
    count(*) as "totalCount",
    count(*) FILTER (WHERE location_id is null) as "pendingCount",
    count(*) FILTER (WHERE location_id is not null) as "completedCount",
    (select name from location_master where id = #locationId#) as "locationName"
    from covid_travellers_info cti
    where cti.district_id in (select lhcd.child_id from location_hierchy_closer_det lhcd where lhcd.parent_id = #locationId#)
    and (cti.is_from_immigration = #isFromImmigration# or false = #isFromImmigration#)
    and (cti.input_type = ''Travel'' or cti.is_from_immigration is true)
',true,'ACTIVE','Retrieve COVID 19 Travellers Count',true,'becf45c9-9afb-4af1-81b6-6efb67333823'),
	 (60512,'2019-05-23 17:27:26.568',60512,'2019-05-23 17:27:26.568','preg_reg_date_edit_mark_correct','pregId','update rch_pregnancy_registration_det
set is_reg_date_verified = true
where id = #pregId#',false,'ACTIVE','Marks Pregnancy Registration Date as correct date in Pregnancy Registration Edit Screen',true,'b8600183-23d9-4115-ba4b-e8a4013e7bea'),
	 (1,'2019-09-09 00:00:00',NULL,NULL,'get_ccc_overdue_service_anemia_member_detail','fhwId','
with fhw_loc_id as( 
	select loc_id from um_user_location
	where user_id = #fhwId# and state = ''ACTIVE''
)
,fhw_child_location_id_list as (
	select child_id from location_hierchy_closer_det,fhw_loc_id where parent_id = fhw_loc_id.loc_id
)	select
        distinct mem.id, rch_mem.member_id, concat(mem.first_name,'' '',mem.last_name) as member_name, mem.unique_health_id , 
	get_location_hierarchy(rch_mem.location_id) as location
from rch_anc_master rch_mem
inner join imt_member mem on rch_mem.member_id = mem.id
where haemoglobin_count < 7
and rch_mem.location_id in (select child_id from fhw_child_location_id_list)
order by id
',true,'ACTIVE',NULL,true,'df03a228-2792-4307-af1d-a2cc668e4d5a'),
	 (-1,'2018-07-04 21:21:18.305',409,'2019-04-23 18:05:53.343','retrieve_duplicate_member_det','logged_in_user,offset,limit','with loc_det as (
select child_id as loc_id from location_hierchy_closer_det 
where parent_id in (select loc_id from um_user_location 
	where state = ''ACTIVE'' and user_id = #logged_in_user#)
),duplicate_member_det as(
select duplicate_member_det.* 
from imt_member_duplicate_member_detail as duplicate_member_det,loc_det 
where is_active = true and duplicate_member_det.loc_id = loc_det.loc_id
order by similarity desc
limit #limit# offset #offset#
),location_name_det as(
select child_id as loc_id,string_agg(location_master.name,'' > '' order by depth desc) as loc_name
from location_hierchy_closer_det,location_master
where child_id in (
	select member1_loc_id as loc_id from duplicate_member_det
	union
	select member2_loc_id as loc_id from duplicate_member_det
	)
and location_master.id = parent_id
group by child_id
),fhw_det as (
select loc_id,concat_ws('' '',um_user.first_name,um_user.middle_name,um_user.last_name) as name,um_user.contact_number as mobile_number 
from um_user,(
select loc_id,max(user_id) as user_id
from (
select child_id as loc_id,um_user.id as user_id
from location_hierchy_closer_det as lhc
,um_user
,um_user_location as uul
where child_id in (
	select member1_loc_id as loc_id from duplicate_member_det
	union
	select member2_loc_id as loc_id from duplicate_member_det
	)
and um_user.state = ''ACTIVE'' and uul.loc_id = lhc.parent_id
and uul.state = ''ACTIVE'' and uul.user_id = um_user.id
and um_user.role_id = 30) as user_loc
group by loc_id
) as t
where t.user_id = um_user.id
),asha_det as (
select loc_id,concat_ws('' '',um_user.first_name,um_user.middle_name,um_user.last_name) as name,um_user.contact_number as mobile_number 
from um_user,(
select loc_id,max(user_id) as user_id
from (
select child_id as loc_id,um_user.id as user_id
from location_hierchy_closer_det as lhc
,um_user
,um_user_location as uul
where child_id in (
	select member1_loc_id as loc_id from duplicate_member_det
	union
	select member2_loc_id as loc_id from duplicate_member_det
	)
and um_user.state = ''ACTIVE'' and uul.loc_id = lhc.parent_id
and uul.state = ''ACTIVE'' and uul.user_id = um_user.id
and um_user.role_id = 24) as user_loc
group by loc_id
) as t
where t.user_id = um_user.id
)
select duplicate_member_det.id
,member1_id,m1.unique_health_id as mem1_unique_health_id,m1.family_id as member1_family_id
,concat_ws('' '',m1.first_name,m1.middle_name,m1.last_name) as member1_name,to_char(m1.dob,''DD/MM/YYYY'') as member1_dob
,m1.gender as member1_gender , to_char(m1.lmp,''DD/MM/YYYY'') as member1_lmp_date
,m1_loc.loc_name as member1_loc_name,m1.mobile_number as member1_mobile_number
,m1_fhw_det.name as member1_fhw_name
,m1_fhw_det.mobile_number as member1_fhw_mobile_number
,m1_asha_det.name as member1_asha_name
,m1_asha_det.mobile_number as member1_asha_mobile_number

,member2_id,m2.unique_health_id as mem2_unique_health_id,m2.family_id as member2_family_id
,concat_ws('' '',m2.first_name,m2.middle_name,m2.last_name) as member2_name,to_char(m2.dob,''DD/MM/YYYY'') as member2_dob
,m2.gender as member2_gender , to_char(m2.lmp,''DD/MM/YYYY'') as member2_lmp_date
,m2_loc.loc_name as member2_loc_name,m2.mobile_number as member2_mobile_number
,m2_fhw_det.name as member2_fhw_name
,m2_fhw_det.mobile_number as member2_fhw_mobile_number
,m2_asha_det.name as member2_asha_name
,m2_asha_det.mobile_number as member2_asha_mobile_number

,is_adhar_number_match,is_mobile_number_match,is_name_dob_match,is_lmp_name_match
from duplicate_member_det 
inner join imt_member m1 on  duplicate_member_det.member1_id = m1.id
inner join imt_member m2 on duplicate_member_det.member2_id = m2.id
inner join location_name_det m1_loc on m1_loc.loc_id = duplicate_member_det.member1_loc_id
inner join location_name_det m2_loc on m2_loc.loc_id = duplicate_member_det.member2_loc_id
left join fhw_det as m1_fhw_det on m1_fhw_det.loc_id = duplicate_member_det.member1_loc_id
left join fhw_det as m2_fhw_det on m2_fhw_det.loc_id = duplicate_member_det.member2_loc_id
left join asha_det as m1_asha_det on m1_asha_det.loc_id = duplicate_member_det.member1_loc_id
left join asha_det as m2_asha_det on m2_asha_det.loc_id = duplicate_member_det.member2_loc_id;',true,'ACTIVE','It will retrieve duplicate member detail',true,'f1ecdc4c-066c-4512-806c-5df5b774ae3a'),
	 (60512,'2020-11-06 00:00:00',60512,'2020-11-06 00:00:00','npcb_examined_list_retrieve','healthInfrastructureId,offSet,limit','with member_ids as (
	select id,member_id,screening_id from npcb_member_examination_detail
	where referral_health_infrastructure = #healthInfrastructureId#
	and examine_id is null
	limit #limit# offset #offSet#
),asha_details as (
	select member_ids.member_id,
	string_agg(concat(um_user.first_name,'' '',um_user.middle_name,'' '',um_user.last_name,'' ('',um_user.contact_number,'')''),'','') as asha
	from member_ids
	inner join imt_member on imt_member.id = member_ids.member_id
	inner join imt_family on imt_member.family_id = imt_family.family_id
	inner join um_user_location on imt_family.area_id = um_user_location.loc_id
	and um_user_location.state = ''ACTIVE''
	inner join um_user on um_user_location.user_id = um_user.id
	and um_user.state = ''ACTIVE''
	and role_id = 24
	group by member_ids.member_id
)
select
member_ids.id as "id",
member_ids.screening_id as "screeningId",
imt_member.id as "memberId",
imt_member.unique_health_id as "uniqueHealthId",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "memberName",
imt_member.family_id as "familyId",
get_location_hierarchy(imt_family.area_id) as "locationHierarchy",
asha_details.asha as "ashaDetails"
from member_ids
inner join imt_member on imt_member.id = member_ids.member_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join asha_details on member_ids.member_id = asha_details.member_id',true,'ACTIVE',NULL,true,'9542430c-ca3c-41e0-bde2-3144a85717d3'),
	 (60512,'2020-11-06 00:00:00',60512,'2020-11-06 00:00:00','npcb_screened_list_retrieve','healthInfrastructureId,offSet,limit','with member_ids as (
	select id,member_id
	from npcb_member_screening_master
	where health_infrastructure_id = #healthInfrastructureId#
	and is_examined is null
	limit #limit# offset #offSet#
),asha_details as (
	select member_ids.member_id,
	string_agg(concat(um_user.first_name,'' '',um_user.middle_name,'' '',um_user.last_name,'' ('',um_user.contact_number,'')''),'','') as asha
	from member_ids
	inner join imt_member on imt_member.id = member_ids.member_id
	inner join imt_family on imt_member.family_id = imt_family.family_id
	inner join um_user_location on imt_family.area_id = um_user_location.loc_id
	and um_user_location.state = ''ACTIVE''
	inner join um_user on um_user_location.user_id = um_user.id
	and um_user.state = ''ACTIVE''
	and role_id = 24
	group by member_ids.member_id
)
select
member_ids.id as "id",
imt_member.id as "memberId",
imt_member.unique_health_id as "uniqueHealthId",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "memberName",
imt_member.family_id as "familyId",
get_location_hierarchy(imt_family.area_id) as "locationHierarchy",
asha_details.asha as "ashaDetails"
from member_ids
inner join imt_member on imt_member.id = member_ids.member_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join asha_details on member_ids.member_id = asha_details.member_id',true,'ACTIVE',NULL,true,'2daa2337-30e1-48ba-9236-bafa1f2c5d43'),
	 (60512,'2020-11-06 00:00:00',60512,'2020-11-06 00:00:00','npcb_screened_details_retrieve','id','with details as (
	select imt_member.id as "memberId",
	imt_member.unique_health_id as "uniqueHealthId",
	imt_member.dob as "dob",
	imt_family.bpl_flag as "bplFlag",
	imt_family.area_id,
	imt_member.gender as gender,
	listvalue_field_value_detail.value as caste,
	concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "memberName",
	imt_member.family_id as "familyId",
	get_location_hierarchy(imt_family.area_id) as "locationHierarchy",
	npcb_member_screening_master.*
	from npcb_member_screening_master
	inner join imt_member on npcb_member_screening_master.member_id = imt_member.id
	inner join imt_family on imt_member.family_id = imt_family.family_id
	left join listvalue_field_value_detail on imt_family.caste = cast(listvalue_field_value_detail.id as text)
	where npcb_member_screening_master.id = #id#
),asha_details as (
	select details."memberId",
	string_agg(concat(um_user.first_name,'' '',um_user.middle_name,'' '',um_user.last_name,'' ('',um_user.contact_number,'')''),'','') as asha
	from details
	inner join um_user_location on details.area_id = um_user_location.loc_id and um_user_location.state = ''ACTIVE''
	inner join um_user on um_user_location.user_id = um_user.id and role_id = 24 and um_user.state = ''ACTIVE''
	group by details."memberId"
),ncd_details as (
	select details."memberId",
	case when diabetes.id is not null then true else false end as "hasDiabetes",
	case when hypertension.id is not null then true else false end as "hasHypertension"
	from details
	left join ncd_member_diseases_diagnosis diabetes on details."memberId" = diabetes.member_id
	and diabetes.disease_code = ''D''
	and diabetes.status in (''REFERRED'',''CONFIRMED'',''TREATMENT_STARTED'')
	left join ncd_member_diseases_diagnosis hypertension on details."memberId" = hypertension.member_id
	and hypertension.disease_code = ''HT''
	and hypertension.status in (''REFERRED'',''CONFIRMED'',''TREATMENT_STARTED'')
)select details.*,
asha_details.asha as "ashaDetails",
ncd_details."hasDiabetes",
ncd_details."hasHypertension"
from details
left join asha_details on details."memberId" = asha_details."memberId"
left join ncd_details on details."memberId" = ncd_details."memberId"',true,'ACTIVE',NULL,true,'a3608a4d-54a3-4ac1-9e78-e7d89e76d778'),
	 (74909,'2020-03-22 21:47:49.883',74909,'2020-03-22 21:50:53.876','delete_contact_history_by_id','contactId','delete from covid_case_contact_history where id = #contactId#',false,'ACTIVE',NULL,NULL,'88c6fd6f-a3ca-4f78-be0d-450cefe207dc'),
	 (60512,'2020-11-06 00:00:00',60512,'2020-11-06 00:00:00','npcb_examined_details_retrieve','id','with details as (
	select imt_member.id as "memberId",
	imt_member.unique_health_id as "uniqueHealthId",
	imt_member.dob as "dob",
	imt_family.bpl_flag as "bplFlag",
	imt_family.area_id,
	imt_member.gender as gender,
	listvalue_field_value_detail.value as caste,
	concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "memberName",
	imt_member.family_id as "familyId",
	get_location_hierarchy(imt_family.area_id) as "locationHierarchy",
	npcb_member_examination_detail.screening_id,
	npcb_member_examination_detail.id as "previousExamineId",
	npcb_member_screening_master.*
	from npcb_member_examination_detail
	inner join npcb_member_screening_master on npcb_member_examination_detail.screening_id = npcb_member_screening_master.id
	inner join imt_member on npcb_member_screening_master.member_id = imt_member.id
	inner join imt_family on imt_member.family_id = imt_family.family_id
	left join listvalue_field_value_detail on imt_family.caste = cast(listvalue_field_value_detail.id as text)
	where npcb_member_examination_detail.id = #id#
),asha_details as (
	select details."memberId",
	string_agg(concat(um_user.first_name,'' '',um_user.middle_name,'' '',um_user.last_name,'' ('',um_user.contact_number,'')''),'','') as asha
	from details
	inner join um_user_location on details.area_id = um_user_location.loc_id and um_user_location.state = ''ACTIVE''
	inner join um_user on um_user_location.user_id = um_user.id and role_id = 24 and um_user.state = ''ACTIVE''
	group by details."memberId"
),ncd_details as (
	select details."memberId",
	case when diabetes.id is not null then true else false end as "hasDiabetes",
	case when hypertension.id is not null then true else false end as "hasHypertension"
	from details
	left join ncd_member_diseases_diagnosis diabetes on details."memberId" = diabetes.member_id
	and diabetes.disease_code = ''D''
	and diabetes.status in (''REFERRED'',''CONFIRMED'',''TREATMENT_STARTED'')
	left join ncd_member_diseases_diagnosis hypertension on details."memberId" = hypertension.member_id
	and hypertension.disease_code = ''HT''
	and hypertension.status in (''REFERRED'',''CONFIRMED'',''TREATMENT_STARTED'')
)select details.*,
asha_details.asha as "ashaDetails",
ncd_details."hasDiabetes",
ncd_details."hasHypertension"
from details
left join asha_details on details."memberId" = asha_details."memberId"
left join ncd_details on details."memberId" = ncd_details."memberId"',true,'ACTIVE',NULL,true,'84ee50d3-2b0b-4f8e-8b35-fb4a6b1df8d4'),
	 (78434,'2021-06-10 00:00:00',78434,'2021-06-10 00:00:00','get_sms_blacklist_number_by_id','id','
select
    sbm.id as "id",
    sbm.mobile_number as "mobileNumber",
    sbm.member_id as "memberId",
    sbm.status as "status",
    sbm.active_remark as "activeRemark",
    sbm.inactive_remark as "inactiveRemark",
    im.unique_health_id as "uniqueHealthId",
    im.is_pregnant as "isPregnant"
from
    sms_block_master sbm
inner join
    imt_member im on im.id = sbm.member_id
where
    sbm.id = #id#
',true,'ACTIVE',NULL,true,'6996f954-61fc-433a-ae92-e74a47c05232'),
	 (66522,'2019-12-18 17:26:03.4',66522,'2019-12-19 10:50:07.416','soh_get_app_current_version_ios',NULL,'select key_value as "iosVersion" from system_configuration where system_key =''SOH_IOS_CURRENT_VERSION''	-- current version
union all
select key_value as "iosVersion" from system_configuration where system_key =''SOH_IOS_VERSION''		-- min version',true,'ACTIVE',NULL,true,'8e017051-2b3c-4efa-9cb6-7c1d0366e8ad'),
	 (60512,'2019-09-11 20:45:51.772',60512,'2019-09-11 20:45:51.772','mo_death_verification_mo_actions',NULL,'select id as "actionKey",value as "displayText",true as "isOtherDetailsRequired" from listvalue_field_value_detail  where 
field_key = ''maternal_death_verification_mo'' and is_active=true
union all 
select id as "actionKey",value as "displayText",true as "isOtherDetailsRequired" from listvalue_field_value_detail  where field_key = ''2018''
and is_active=true and id not in(787,792)',true,'ACTIVE',NULL,true,'2036fa36-7c78-4926-9dc7-95e4a2450c12'),
	 (79677,'2020-11-06 00:00:00',79677,'2020-11-06 00:00:00','retrieve_family_and_member_info','familyid','with emamtalocation as (
        select
        f.family_id,string_agg(lm.name,''> '' order by lhcd.depth desc) as emamtalocationname
        from imt_family f
	    inner join location_hierchy_closer_det lhcd on f.location_id = lhcd.child_id
	    inner join location_master lm on lm.id = lhcd.parent_id where f.family_id = #familyid#
	    group by f.family_id
    ), family_migration_det as (
	select distinct on (family_id ) family_id, location_migrated_from , location_migrated_to , reported_by , reported_on, state from  imt_family_migration_master ifmm 
	where ifmm.family_id = (select id from imt_family imf where family_id = #familyid#)
	order by family_id , id desc
	limit 1
)
    select
    f.family_id,
    f.address1 as address1,
    f.address2 as address2,
    f.bpl_flag as bplflag,
    f.house_number as housenumber,
    f.is_verified_flag as verifiedflag,
    f.migratory_flag as migratoryflag,
    f.toilet_available_flag as toiletavailableflag,
    f.vulnerable_flag as vulnerableflag,
    f.basic_state as familybasicstate,
    m.id as memberid,
    m.unique_health_id as uniquehealthid,
    m.first_name || '' '' || m.middle_name || '' '' || m.last_name as membername,
    m.family_head as familyhead,
    m.is_pregnant as ispregnant,
    m.gender as gender,
    m.mobile_number as mobilenumber,
    m.basic_state as memberbasicstate,
    string_agg(lm.name,''> '' order by lhcd.depth desc) as locationname,
    emm.emamtalocationname,
    case
        when f.state in (''CFHC_FN'',''CFHC_FV'') then ''Yes''
        else ''No''
    end as "isFamilyVerifiedUnderCFHC",
    get_location_hierarchy(fmd.location_migrated_from) as "familyMigratedFrom",
    get_location_hierarchy(fmd.location_migrated_to) as "familyMigratedTo",
    (select concat( uu.first_name , '' '' , uu.middle_name , '' '' , uu.last_name, ''( UserName: '', uu.user_name , '', Mobile Number: '', uu.contact_number, '')'') from um_user uu  where uu.id = fmd.reported_by)  as "familyReportedBy",
    to_char(fmd.reported_on, ''dd/mm/yyyy'') as "familyReportedOn"
    from imt_family f
    inner join imt_member m on f.family_id = m.family_id
    inner join location_hierchy_closer_det lhcd on f.location_id = lhcd.child_id
    inner join location_master lm on lm.id = lhcd.parent_id
    left join family_migration_det fmd on fmd.family_id = f.id and fmd.state = ''REPORTED''
    left join emamtalocation emm on f.family_id = emm.family_id
    where f.family_id = #familyid#
    group by m.id,
    f.address1,
    f.address2,
    f.bpl_flag,
    f.house_number,
    f.is_verified_flag,
    f.migratory_flag,
    f.toilet_available_flag,
    f.vulnerable_flag,
    f.basic_state,
    emm.emamtalocationname,
    f.family_id,
    f.state,
     fmd.location_migrated_from, fmd.location_migrated_to, fmd.reported_by, fmd.reported_on',true,'ACTIVE','Retrieve family and members basic info using familyId',true,'83a1447e-2abe-43c9-94d5-3ee37aaa5460'),
	 (60512,'2020-11-06 00:00:00',60512,'2020-11-06 00:00:00','child_cmtc_nrc_screened_list','offset,limit,userId','with child_ids as (
	select child_cmtc_nrc_screening_detail.id,child_cmtc_nrc_screening_detail.child_id
	from child_cmtc_nrc_screening_detail
	inner join user_health_infrastructure on child_cmtc_nrc_screening_detail.screening_center = user_health_infrastructure.health_infrastrucutre_id
	and user_health_infrastructure.state = ''ACTIVE''
	inner join health_infrastructure_details on user_health_infrastructure.health_infrastrucutre_id = health_infrastructure_details.id
	and (health_infrastructure_details.is_cmtc or health_infrastructure_details.is_nrc or health_infrastructure_details.is_sncu)
	where user_health_infrastructure.user_id = #userId#
	and child_cmtc_nrc_screening_detail.state = ''ACTIVE''
	and child_cmtc_nrc_screening_detail.is_case_completed is null
	and child_cmtc_nrc_screening_detail.admission_id is null
	limit #limit# offset #offset#
),asha_detail as (
	select child_ids.id,
	string_agg(concat(asha.first_name,'' '',asha.middle_name,'' '',asha.last_name,'' ('',asha.contact_number,'')''),'','') as asha
	from child_ids
	inner join imt_member on child_ids.child_id = imt_member.id
	inner join imt_family on imt_member.family_id = imt_family.family_id
	inner join um_user_location asha_location on imt_family.area_id = asha_location.loc_id and asha_location.state = ''ACTIVE''
	inner join um_user asha on asha_location.user_id = asha.id and asha.state = ''ACTIVE'' and asha.role_id = 24
	group by child_ids.id
)
select child_cmtc_nrc_screening_detail.id,
child_cmtc_nrc_screening_detail.screening_center as "screeningCenter",
child_cmtc_nrc_screening_detail.child_id as "memberId",
child_cmtc_nrc_screening_detail.screened_on as "screenedOn",
child_cmtc_nrc_screening_detail.state as "state",
child_cmtc_nrc_screening_detail.admission_id as "admissionId",
child_cmtc_nrc_screening_detail.discharge_id as "dischargeId",
child_cmtc_nrc_screening_detail.created_by as "createdBy",
child_cmtc_nrc_screening_detail.identified_from as "identifiedFrom",
health_infrastructure_details.name as "healthInfrastructureName",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "memberName",
imt_member.unique_health_id as "uniqueHealthId",
imt_member.family_id as "familyId",
imt_member.dob as "dob",
imt_member.gender as "gender",
imt_family.bpl_flag as "bplFlag",
listvalue_field_value_detail.value as "caste",
concat(mother.first_name,'' '',mother.middle_name,'' '',mother.last_name) as "motherName",
mother.mobile_number as "motherContactNumber",
concat(um_user.first_name,'' '',um_user.middle_name,'' '',um_user.last_name) as "referredByName",
um_user.contact_number as "referredByContactNumber",
asha_detail.asha as "ashaDetails",
location.name as "villageName",
area.name as "areaName",
case when child_cmtc_nrc_screening_detail.identified_from = ''FHW'' then child_nutrition_sam_screening_master.muac else null end as "muac",
case when child_cmtc_nrc_screening_detail.identified_from = ''FHW'' then child_nutrition_sam_screening_master.sd_score else null end as "sdScore",
case when child_cmtc_nrc_screening_detail.identified_from = ''FHW'' then child_nutrition_sam_screening_master.have_pedal_edema else null end as "pedalEdema"
from child_ids
inner join child_cmtc_nrc_screening_detail on child_ids.id = child_cmtc_nrc_screening_detail.id
left join child_nutrition_sam_screening_master on child_cmtc_nrc_screening_detail.reference_id = child_nutrition_sam_screening_master.id
and child_cmtc_nrc_screening_detail.identified_from = ''FHW''
left join health_infrastructure_details on child_cmtc_nrc_screening_detail.screening_center = health_infrastructure_details.id
inner join imt_member on child_cmtc_nrc_screening_detail.child_id = imt_member.id
left join imt_member mother on imt_member.mother_id = mother.id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join location_master location on imt_family.location_id = location.id
left join location_master area on imt_family.area_id = area.id
left join listvalue_field_value_detail on imt_family.caste = cast(listvalue_field_value_detail.id as character varying)
left join um_user on child_cmtc_nrc_screening_detail.created_by = um_user.id
left join asha_detail on child_cmtc_nrc_screening_detail.id = asha_detail.id
order by child_cmtc_nrc_screening_detail.id desc',true,'ACTIVE',NULL,true,'420a7bab-258f-4d88-b13a-38c558334451'),
	 (60512,'2020-11-06 00:00:00',60512,'2020-11-06 00:00:00','child_cmtc_nrc_admission_list','offset,limit,userId','with child_ids as (
	select child_cmtc_nrc_screening_detail.id,child_cmtc_nrc_screening_detail.child_id
	from child_cmtc_nrc_screening_detail
	inner join user_health_infrastructure on child_cmtc_nrc_screening_detail.screening_center = user_health_infrastructure.health_infrastrucutre_id
	and user_health_infrastructure.state = ''ACTIVE''
	inner join health_infrastructure_details on user_health_infrastructure.health_infrastrucutre_id = health_infrastructure_details.id
	and (health_infrastructure_details.is_cmtc or health_infrastructure_details.is_nrc or health_infrastructure_details.is_sncu)
	where user_health_infrastructure.user_id = #userId#
	and child_cmtc_nrc_screening_detail.state = ''ACTIVE''
	and child_cmtc_nrc_screening_detail.is_case_completed is null
	and child_cmtc_nrc_screening_detail.admission_id is not null
	limit #limit# offset #offset#
),asha_detail as (
	select child_ids.id,
	string_agg(concat(asha.first_name,'' '',asha.middle_name,'' '',asha.last_name,'' ('',asha.contact_number,'')''),'','') as asha
	from child_ids
	inner join imt_member on child_ids.child_id = imt_member.id
	inner join imt_family on imt_member.family_id = imt_family.family_id
	inner join um_user_location asha_location on imt_family.area_id = asha_location.loc_id and asha_location.state = ''ACTIVE''
	inner join um_user asha on asha_location.user_id = asha.id and asha.state = ''ACTIVE'' and asha.role_id = 24
	group by child_ids.id
)
select imt_family.area_id,child_cmtc_nrc_screening_detail.id,
child_cmtc_nrc_screening_detail.screening_center as "screeningCenter",
child_cmtc_nrc_screening_detail.child_id as "memberId",
child_cmtc_nrc_screening_detail.screened_on as "screenedOn",
child_cmtc_nrc_screening_detail.state as "state",
child_cmtc_nrc_screening_detail.admission_id as "admissionId",
child_cmtc_nrc_screening_detail.discharge_id as "dischargeId",
child_cmtc_nrc_screening_detail.created_by as "createdBy",
child_cmtc_nrc_screening_detail.identified_from as "identifiedFrom",
health_infrastructure_details.name as "healthInfrastructureName",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "memberName",
imt_member.unique_health_id as "uniqueHealthId",
imt_member.family_id as "familyId",
imt_member.dob as "dob",
imt_member.gender as "gender",
imt_family.bpl_flag as "bplFlag",
listvalue_field_value_detail.value as "caste",
concat(mother.first_name,'' '',mother.middle_name,'' '',mother.last_name) as "motherName",
mother.mobile_number as "motherContactNumber",
concat(um_user.first_name,'' '',um_user.middle_name,'' '',um_user.last_name) as "referredByName",
um_user.contact_number as "referredByContactNumber",
asha_detail.asha as "ashaDetails",
location.name as "villageName",
area.name as "areaName",
child_cmtc_nrc_admission_detail.admission_date as "admissionDate",
child_cmtc_nrc_admission_detail.no_of_times_amoxicillin_given as "noOfTimesAmoxicillinGiven",
child_cmtc_nrc_admission_detail.consecutive_3_days_weight_gain as "consecutive3DaysWeightGain"
from child_ids
inner join child_cmtc_nrc_screening_detail on child_ids.id = child_cmtc_nrc_screening_detail.id
inner join child_cmtc_nrc_admission_detail on child_cmtc_nrc_screening_detail.admission_id = child_cmtc_nrc_admission_detail.id
inner join health_infrastructure_details on child_cmtc_nrc_screening_detail.screening_center = health_infrastructure_details.id
inner join imt_member on child_cmtc_nrc_screening_detail.child_id = imt_member.id
left join imt_member mother on imt_member.mother_id = mother.id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join location_master location on imt_family.location_id = location.id
left join location_master area on imt_family.area_id = area.id
left join listvalue_field_value_detail on imt_family.caste = cast(listvalue_field_value_detail.id as character varying)
left join um_user on child_cmtc_nrc_screening_detail.created_by = um_user.id
left join asha_detail on child_cmtc_nrc_screening_detail.id = asha_detail.id
order by child_cmtc_nrc_screening_detail.id desc',true,'ACTIVE',NULL,true,'71e73bc3-8192-4f13-b4b5-947ee9ee9466'),
	 (60512,'2020-11-06 00:00:00',60512,'2020-11-06 00:00:00','child_cmtc_nrc_referred_list','offset,limit,userId','with assigned_health_infrastructures as (
	select id from health_infrastructure_details where id in
	(select health_infrastrucutre_id from user_health_infrastructure where user_id = #userId# and state = ''ACTIVE'')
	and (is_cmtc or is_nrc or is_sncu)
),child_ids as (
	select child_cmtc_nrc_screening_detail.id,
	child_cmtc_nrc_screening_detail.child_id
	from child_cmtc_nrc_screening_detail
	where child_cmtc_nrc_screening_detail.referred_from is not null
	and child_cmtc_nrc_screening_detail.referred_to is not null
	and child_cmtc_nrc_screening_detail.is_case_completed is null
	and (
			(
				child_cmtc_nrc_screening_detail.referred_from in (select id from assigned_health_infrastructures)
				and child_cmtc_nrc_screening_detail.is_archive is null
			)
		or
                (
                    child_cmtc_nrc_screening_detail.referred_to in (select id from assigned_health_infrastructures)
                    and child_cmtc_nrc_screening_detail.state=''REFERRED''
                )
	)
	limit #limit# offset #offset#
),asha_detail as (
	select child_ids.id,
	string_agg(concat(asha.first_name,'' '',asha.middle_name,'' '',asha.last_name,'' ('',asha.contact_number,'')''),'','') as asha
	from child_ids
	inner join imt_member on child_ids.child_id = imt_member.id
	inner join imt_family on imt_member.family_id = imt_family.family_id
	inner join um_user_location asha_location on imt_family.area_id = asha_location.loc_id and asha_location.state = ''ACTIVE''
	inner join um_user asha on asha_location.user_id = asha.id and asha.state = ''ACTIVE'' and asha.role_id = 24
	group by child_ids.id
)
select child_cmtc_nrc_screening_detail.id,
child_cmtc_nrc_screening_detail.screening_center as "screeningCenter",
child_cmtc_nrc_screening_detail.child_id as "memberId",
child_cmtc_nrc_screening_detail.screened_on as "screenedOn",
child_cmtc_nrc_screening_detail.state as "state",
child_cmtc_nrc_screening_detail.admission_id as "admissionId",
child_cmtc_nrc_screening_detail.discharge_id as "dischargeId",
child_cmtc_nrc_screening_detail.created_by as "createdBy",
child_cmtc_nrc_screening_detail.identified_from as "identifiedFrom",
case when to_hid.id in (select id from assigned_health_infrastructures) and child_cmtc_nrc_screening_detail.state=''REFERRED'' then ''referredToPending''
	when to_hid.id in (select id from assigned_health_infrastructures) and child_cmtc_nrc_screening_detail.state!=''REFERRED'' then ''referredToComplete''
	when from_hid.id in (select id from assigned_health_infrastructures) then ''referredFrom'' end as "referredType",
from_hid.name as "referredFromScreeningCenter",
to_hid.name as "referredToScreeningCenter",
child_cmtc_nrc_screening_detail.referred_date as "referredDate",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "memberName",
imt_member.unique_health_id as "uniqueHealthId",
imt_member.family_id as "familyId",
imt_member.dob as "dob",
imt_member.gender as "gender",
imt_family.bpl_flag as "bplFlag",
listvalue_field_value_detail.value as "caste",
concat(mother.first_name,'' '',mother.middle_name,'' '',mother.last_name) as "motherName",
mother.mobile_number as "motherContactNumber",
concat(um_user.first_name,'' '',um_user.middle_name,'' '',um_user.last_name) as "referredByName",
um_user.contact_number as "referredByContactNumber",
asha_detail.asha as "ashaDetails",
location.name as "villageName",
area.name as "areaName"
from child_ids
inner join child_cmtc_nrc_screening_detail on child_ids.id = child_cmtc_nrc_screening_detail.id
inner join health_infrastructure_details from_hid on child_cmtc_nrc_screening_detail.referred_from = from_hid.id
inner join health_infrastructure_details to_hid on child_cmtc_nrc_screening_detail.referred_to = to_hid.id
inner join imt_member on child_cmtc_nrc_screening_detail.child_id = imt_member.id
left join imt_member mother on imt_member.mother_id = mother.id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join location_master location on imt_family.location_id = location.id
left join location_master area on imt_family.area_id = area.id
left join listvalue_field_value_detail on imt_family.caste = cast(listvalue_field_value_detail.id as character varying)
left join um_user on child_cmtc_nrc_screening_detail.created_by = um_user.id
left join asha_detail on child_cmtc_nrc_screening_detail.id = asha_detail.id
order by child_cmtc_nrc_screening_detail.id desc',true,'ACTIVE',NULL,true,'feb23e39-583a-49dc-ab9d-b59d117e9a8a'),
	 (1,'2020-01-30 00:00:00',NULL,NULL,'dr_techo_rbsk_child_search_by_family_id','familyId','
select
	child.id as "memberId",
	child.unique_health_id as "uniqueHealthId",
	child.first_name as "firstName",
	child.middle_name as "middleName",
	child.last_name as "lastName",
	child.family_id as "familyId",
	child.gender,
	child.dob,
	child.birth_weight as "weight",
	mother.unique_health_id as "motherId",
	mother.mobile_number as "motherPhoneNumber",
	concat( mother.first_name, '' '', mother.middle_name, '' '', mother.last_name ) as "motherName"
from
	imt_member child
inner join imt_member mother on
	child.mother_id = mother.id
where
	child.family_id in ( ''#familyId#'' )
',true,'ACTIVE',NULL,true,'79015415-cb10-4a77-aec4-a9311ebb68ad'),
	 (60512,'2020-11-06 00:00:00',60512,'2020-11-06 00:00:00','child_cmtc_nrc_treatment_completed_list','offset,limit,userId','with child_ids as (
	select child_cmtc_nrc_screening_detail.id,
	child_cmtc_nrc_screening_detail.child_id
	from child_cmtc_nrc_screening_detail
	inner join user_health_infrastructure on child_cmtc_nrc_screening_detail.screening_center = user_health_infrastructure.health_infrastrucutre_id
	and user_health_infrastructure.state = ''ACTIVE''
	inner join health_infrastructure_details on user_health_infrastructure.health_infrastrucutre_id = health_infrastructure_details.id
	and (health_infrastructure_details.is_cmtc or health_infrastructure_details.is_nrc or health_infrastructure_details.is_sncu)
	where user_health_infrastructure.user_id = #userId#
	and child_cmtc_nrc_screening_detail.state = ''DISCHARGE''
	and child_cmtc_nrc_screening_detail.is_case_completed
	limit #limit# offset #offset#
),asha_detail as (
	select child_ids.id,
	string_agg(concat(asha.first_name,'' '',asha.middle_name,'' '',asha.last_name,'' ('',asha.contact_number,'')''),'','') as asha
	from child_ids
	inner join imt_member on child_ids.child_id = imt_member.id
	inner join imt_family on imt_member.family_id = imt_family.family_id
	inner join um_user_location asha_location on imt_family.area_id = asha_location.loc_id and asha_location.state = ''ACTIVE''
	inner join um_user asha on asha_location.user_id = asha.id and asha.state = ''ACTIVE'' and asha.role_id = 24
	group by child_ids.id
)
select child_cmtc_nrc_screening_detail.id,
child_cmtc_nrc_screening_detail.screening_center as "screeningCenter",
child_cmtc_nrc_screening_detail.child_id as "memberId",
child_cmtc_nrc_screening_detail.screened_on as "screenedOn",
child_cmtc_nrc_screening_detail.state as "state",
child_cmtc_nrc_screening_detail.admission_id as "admissionId",
child_cmtc_nrc_screening_detail.discharge_id as "dischargeId",
child_cmtc_nrc_screening_detail.created_by as "createdBy",
child_cmtc_nrc_screening_detail.identified_from as "identifiedFrom",
health_infrastructure_details.name as "healthInfrastructureName",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "memberName",
imt_member.unique_health_id as "uniqueHealthId",
imt_member.family_id as "familyId",
imt_member.dob as "dob",
imt_member.gender as "gender",
imt_family.bpl_flag as "bplFlag",
listvalue_field_value_detail.value as "caste",
concat(mother.first_name,'' '',mother.middle_name,'' '',mother.last_name) as "motherName",
mother.mobile_number as "motherContactNumber",
concat(um_user.first_name,'' '',um_user.middle_name,'' '',um_user.last_name) as "referredByName",
um_user.contact_number as "referredByContactNumber",
asha_detail.asha as "ashaDetails",
location.name as "villageName",
area.name as "areaName"
from child_ids
inner join child_cmtc_nrc_screening_detail on child_ids.id = child_cmtc_nrc_screening_detail.id
inner join health_infrastructure_details on child_cmtc_nrc_screening_detail.screening_center = health_infrastructure_details.id
inner join imt_member on child_cmtc_nrc_screening_detail.child_id = imt_member.id
left join imt_member mother on imt_member.mother_id = mother.id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join location_master location on imt_family.location_id = location.id
left join location_master area on imt_family.area_id = area.id
left join listvalue_field_value_detail on imt_family.caste = cast(listvalue_field_value_detail.id as character varying)
left join um_user on child_cmtc_nrc_screening_detail.created_by = um_user.id
left join asha_detail on child_cmtc_nrc_screening_detail.id = asha_detail.id
order by child_cmtc_nrc_screening_detail.id desc',true,'ACTIVE',NULL,true,'fe185fb9-2a1d-40fc-8cd1-357278e02a8f'),
	 (1,'2019-11-25 00:00:00',NULL,NULL,'mytecho_faq_get_category_type','NULL','
select * from listvalue_field_value_detail where field_key = ''my_techo_faq_category_type'' and is_active = true
',true,'ACTIVE',NULL,true,'3253cb1e-fe55-4db0-98b4-393b6479d989'),
	 (60512,'2020-11-06 00:00:00',60512,'2020-11-06 00:00:00','child_cmtc_nrc_screening_details','childId','with child_detail as (
	select child_cmtc_nrc_screening_detail.id as "screeningId",
	child_cmtc_nrc_screening_detail.child_id as "childId",
	child_cmtc_nrc_screening_detail.screened_on as "screenedOn",
	child_cmtc_nrc_screening_detail.location_id as "locationId",
	child_cmtc_nrc_screening_detail.state,
	child_cmtc_nrc_screening_detail.appetite_test_done as "appetiteTestDone",
	child_cmtc_nrc_screening_detail.appetite_test_reported_on as "appetiteTestReportedOn",
	child_cmtc_nrc_screening_detail.admission_id as "admissionId",
	child_cmtc_nrc_screening_detail.discharge_id as "dischargeId",
	child_cmtc_nrc_screening_detail.is_direct_admission as "isDirectAdmission",
	child_cmtc_nrc_screening_detail.screening_center as "screeningCenter",
	child_cmtc_nrc_screening_detail.is_case_completed as "isCaseCompleted",
	child_cmtc_nrc_screening_detail.referred_from as "referredFrom",
	child_cmtc_nrc_screening_detail.referred_to as "referredTo",
	child_cmtc_nrc_screening_detail.referred_date as "referredDate",
	child_cmtc_nrc_screening_detail.is_archive as "isArchive",
	child_cmtc_nrc_screening_detail.created_by as "createdBy",
	health_infrastructure_details.name as "healthInfrastructureName",
	imt_member.unique_health_id as "uniqueHealthId",
	imt_member.family_id as "familyId",
	caste.value as "caste",
	imt_family.bpl_flag as "bpl",
	imt_member.gender as "gender",
	imt_member.dob as "dob",
	imt_member.immunisation_given as "immunisationGiven",
	concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "childName",
	concat(mother.first_name,'' '',mother.middle_name,'' '',mother.last_name) as "motherName",
	mother.mobile_number as "mobileNumber",
	get_location_hierarchy(case when imt_family.area_id is not null then imt_family.area_id else imt_family.location_id end) as "locationHierarchy",
	concat(creator.first_name,'' '',creator.middle_name,'' '',creator.last_name) as "referredBy"
	from child_cmtc_nrc_screening_detail
	inner join imt_member on child_cmtc_nrc_screening_detail.child_id = imt_member.id
	left join imt_member mother on imt_member.mother_id = mother.id
	inner join imt_family on imt_member.family_id = imt_family.family_id
	left join um_user creator on child_cmtc_nrc_screening_detail.created_by = creator.id
	left join health_infrastructure_details on child_cmtc_nrc_screening_detail.screening_center = health_infrastructure_details.id
	left join listvalue_field_value_detail caste on imt_family.caste = cast(caste.id as character varying)
	where child_cmtc_nrc_screening_detail.child_id = #childId#
	and child_cmtc_nrc_screening_detail.is_case_completed is null
),asha_detail as (
	select child_detail."screeningId",
	string_agg(concat(um_user.first_name,'' '',um_user.middle_name,'' '',um_user.last_name,'' ('',um_user.contact_number,'')''),'','') as asha
	from child_detail
	left join um_user_location on child_detail."locationId" = um_user_location.loc_id
	and um_user_location.state = ''ACTIVE''
	left join um_user on um_user_location.user_id = um_user.id
	and um_user.state = ''ACTIVE''
	where um_user.role_id = 24
	group by child_detail."screeningId"
)select child_detail.*,asha_detail.asha as "ashaDetails"
from child_detail
left join asha_detail on child_detail."screeningId" = asha_detail."screeningId"',true,'ACTIVE',NULL,true,'ad0b794e-372d-4371-b7b1-d02d0919a7a8'),
	 (60512,'2019-07-03 17:25:59.509',60512,'2019-07-03 17:25:59.509','ncd_report_query','preferredLanguage,from_date,to_date,locationId','with outer_location_ids as(
	select child_id from location_hierchy_closer_det where parent_id = #locationId# and depth = 1
),inner_location_ids as(
	select outer_location_ids.child_id as outer_child_ids,location_hierchy_closer_det.child_id as inner_child_ids
	from outer_location_ids 
	inner join location_hierchy_closer_det on outer_location_ids.child_id = location_hierchy_closer_det.parent_id and location_hierchy_closer_det.depth=1
),dates as(
	select
	to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date ,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end, ''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_date 
),ncd_member_breast_detail_cnt as (
	select inner_location_ids.inner_child_ids,
	count(*) as member_breast_detail_cnt
	from inner_location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = inner_location_ids.inner_child_ids
	inner join ncd_member_breast_detail on location_hierchy_closer_det.child_id = ncd_member_breast_detail.location_id
	inner join dates on ncd_member_breast_detail.created_on between dates.from_date and dates.to_date
	group by inner_location_ids.inner_child_ids
),ncd_member_cervical_detail_cnt as (
	select inner_location_ids.inner_child_ids,
	count(*) as member_cervical_detail_cnt
	from inner_location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = inner_location_ids.inner_child_ids
	inner join ncd_member_cervical_detail on location_hierchy_closer_det.child_id = ncd_member_cervical_detail.location_id
	inner join dates on ncd_member_cervical_detail.created_on between dates.from_date and dates.to_date
	group by inner_location_ids.inner_child_ids
),ncd_member_diabetes_detail_cnt as (
	select inner_location_ids.inner_child_ids,
	count(*) as member_diabetes_detail_cnt
	from inner_location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = inner_location_ids.inner_child_ids
	inner join ncd_member_diabetes_detail on location_hierchy_closer_det.child_id = ncd_member_diabetes_detail.location_id
	inner join dates on ncd_member_diabetes_detail.created_on between dates.from_date and dates.to_date
	group by inner_location_ids.inner_child_ids
),ncd_member_hypertension_detail_cnt as (
	select inner_location_ids.inner_child_ids,
	count(*) as member_hypertension_detail_cnt
	from inner_location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = inner_location_ids.inner_child_ids
	inner join ncd_member_hypertension_detail on location_hierchy_closer_det.child_id = ncd_member_hypertension_detail.location_id
	inner join dates on ncd_member_hypertension_detail.created_on between dates.from_date and dates.to_date
	group by inner_location_ids.inner_child_ids
),ncd_member_oral_detail_cnt as (
	select inner_location_ids.inner_child_ids,
	count(*) as member_oral_detail_cnt
	from inner_location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = inner_location_ids.inner_child_ids
	inner join ncd_member_oral_detail on location_hierchy_closer_det.child_id = ncd_member_oral_detail.location_id
	inner join dates on ncd_member_oral_detail.created_on between dates.from_date and dates.to_date
	group by inner_location_ids.inner_child_ids
)
select 
case when ''#preferredLanguage#''=''EN'' then outer_location.english_name else outer_location.name end as location,
case when ''#preferredLanguage#''=''EN'' then inner_location.english_name else inner_location.name end as sub_location,
coalesce(ncd_member_breast_detail_cnt.member_breast_detail_cnt,0) as member_breast_detail_cnt,
coalesce(ncd_member_cervical_detail_cnt.member_cervical_detail_cnt,0) as member_cervical_detail_cnt,
coalesce(ncd_member_diabetes_detail_cnt.member_diabetes_detail_cnt,0) as member_diabetes_detail_cnt,
coalesce(ncd_member_hypertension_detail_cnt.member_hypertension_detail_cnt,0) as member_hypertension_detail_cnt,
coalesce(ncd_member_oral_detail_cnt.member_oral_detail_cnt,0) as member_oral_detail_cnt
from inner_location_ids
left join ncd_member_breast_detail_cnt on inner_location_ids.inner_child_ids = ncd_member_breast_detail_cnt.inner_child_ids
left join ncd_member_cervical_detail_cnt on inner_location_ids.inner_child_ids = ncd_member_cervical_detail_cnt.inner_child_ids
left join ncd_member_diabetes_detail_cnt on inner_location_ids.inner_child_ids = ncd_member_diabetes_detail_cnt.inner_child_ids
left join ncd_member_hypertension_detail_cnt on inner_location_ids.inner_child_ids = ncd_member_hypertension_detail_cnt.inner_child_ids
left join ncd_member_oral_detail_cnt on inner_location_ids.inner_child_ids = ncd_member_oral_detail_cnt.inner_child_ids
left join location_master inner_location on inner_location_ids.inner_child_ids = inner_location.id
left join location_master outer_location on inner_location_ids.outer_child_ids = outer_location.id
order by outer_location.name',true,'ACTIVE',NULL,true,'98bbce8d-5893-443d-b69f-c5bb9515f3b5'),
	 (60512,'2020-11-06 00:00:00',60512,'2020-11-06 00:00:00','child_cmtc_nrc_screening_details_for_direct_admission','childId','with member_detail as (
	select imt_member.id as "childId",
	imt_member.unique_health_id as "uniqueHealthId",
	imt_member.family_id as "familyId",
	caste.value as "caste",
	imt_family.bpl_flag as "bpl",
	imt_member.gender as "gender",
	imt_member.dob as "dob",
	concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "childName",
	concat(mother.first_name,'' '',mother.middle_name,'' '',mother.last_name) as "motherName",
	mother.mobile_number as "mobileNumber",
	get_location_hierarchy(case when imt_family.area_id is not null then imt_family.area_id else imt_family.location_id end) as "locationHierarchy",
	case when imt_family.area_id is not null then imt_family.area_id else imt_family.location_id end as "locationId"
	from imt_member
	left join imt_member mother on imt_member.mother_id = mother.id
	inner join imt_family on imt_member.family_id = imt_family.family_id
	left join listvalue_field_value_detail caste on imt_family.caste = cast(caste.id as character varying)
	where imt_member.id = #childId#
),asha_detail as (
	select member_detail."childId",
	string_agg(concat(um_user.first_name,'' '',um_user.middle_name,'' '',um_user.last_name,'' ('',um_user.contact_number,'')''),'','') as asha
	from member_detail
	left join um_user_location on member_detail."locationId" = um_user_location.loc_id
	and um_user_location.state = ''ACTIVE''
	left join um_user on um_user_location.user_id = um_user.id
	and um_user.state = ''ACTIVE''
	where um_user.role_id = 24
	group by member_detail."childId"
)select member_detail.*,asha_detail.asha as "ashaDetails"
from member_detail
left join asha_detail on member_detail."childId" = asha_detail."childId"',true,'ACTIVE',NULL,true,'4ba9d57f-faa8-4b5c-9e30-24cfd488bc45'),
	 (1027,'2018-08-04 01:00:44.887',409,'2019-01-21 14:38:41.275','update_user_form_acces_data',NULL,'INSERT INTO public.user_form_access(user_id, form_code, state, created_on)
select t.user_id,t.form_code,''MOVE_TO_PRODUCTION'',t.created_on from (SELECT user_id,form_code,created_on 
FROM dblink(''host=localhost user=postgres password=q1w2e3R$ dbname=techo_t'',''select user_id,form_code,created_on from user_form_access where state = ''''MOVE_TO_PRODUCTION'''''')
AS user_id(user_id bigint,
form_code text,
created_on timestamp without time zone
)) t left join user_form_access on t.user_id = user_form_access.user_id and t.form_code = user_form_access.form_code  where user_form_access.user_id is null ;',false,'ACTIVE',NULL,true,'534e7286-72bb-4e8c-907c-d541319d3521'),
	 (60512,'2020-11-17 00:00:00',60512,'2020-11-17 00:00:00','child_cmtc_nrc_discharge_list','offset,limit,userId','with child_ids as (
	select child_cmtc_nrc_screening_detail.id,
	child_cmtc_nrc_screening_detail.child_id,
	child_cmtc_nrc_screening_detail.admission_id,
	child_cmtc_nrc_screening_detail.discharge_id,
	child_cmtc_nrc_screening_detail.screening_center,
	child_cmtc_nrc_screening_detail.created_by,
	child_cmtc_nrc_screening_detail.screened_on,
	child_cmtc_nrc_screening_detail.state,
	child_cmtc_nrc_screening_detail.identified_from
	from child_cmtc_nrc_screening_detail
	inner join user_health_infrastructure on child_cmtc_nrc_screening_detail.screening_center = user_health_infrastructure.health_infrastrucutre_id
	and user_health_infrastructure.state = ''ACTIVE''
	inner join health_infrastructure_details on user_health_infrastructure.health_infrastrucutre_id = health_infrastructure_details.id
	and (health_infrastructure_details.is_cmtc or health_infrastructure_details.is_nrc or health_infrastructure_details.is_sncu)
	where user_health_infrastructure.user_id = #userId#
	and child_cmtc_nrc_screening_detail.state = ''DISCHARGE''
	and child_cmtc_nrc_screening_detail.is_case_completed is null
	and child_cmtc_nrc_screening_detail.discharge_id is not null
),asha_detail as (
	select child_ids.id,
	string_agg(concat(asha.first_name,'' '',asha.middle_name,'' '',asha.last_name,'' ('',asha.contact_number,'')''),'','') as asha
	from child_ids
	inner join imt_member on child_ids.child_id = imt_member.id
	inner join imt_family on imt_member.family_id = imt_family.family_id
	inner join um_user_location asha_location on imt_family.area_id = asha_location.loc_id and asha_location.state = ''ACTIVE''
	inner join um_user asha on asha_location.user_id = asha.id and asha.state = ''ACTIVE'' and asha.role_id = 24
	group by child_ids.id
),follow_up_detail as (
	select child_ids.admission_id,max(child_cmtc_nrc_follow_up.id) as follow_up_id
	from child_ids
	inner join child_cmtc_nrc_follow_up on child_ids.admission_id = child_cmtc_nrc_follow_up.admission_id
	group by child_ids.admission_id
),follow_up_visit_calc as (
	select child_ids.admission_id,
	case when child_cmtc_nrc_follow_up.follow_up_visit is null
			then case when current_date - cast(child_cmtc_nrc_discharge_detail.discharge_date as date) < 29
						then 1
					  else 2
					  end
		 when child_cmtc_nrc_follow_up.follow_up_visit = 1
		 	then case when current_date - cast(child_cmtc_nrc_discharge_detail.discharge_date as date) < 44
		 				then 2
		 			  else 3
		 			  end
		 when child_cmtc_nrc_follow_up.follow_up_visit = 2
		 	then 3
		 end as follow_up_visit_no
	from child_ids
	inner join child_cmtc_nrc_discharge_detail on child_ids.discharge_id = child_cmtc_nrc_discharge_detail.id
	left join follow_up_detail on child_ids.admission_id = follow_up_detail.admission_id
	left join child_cmtc_nrc_follow_up on follow_up_detail.follow_up_id = child_cmtc_nrc_follow_up.id
),follow_up_due_date_calc as (
	select child_ids.admission_id,
	case when child_cmtc_nrc_follow_up.follow_up_visit is null
			then case when current_date - cast(child_cmtc_nrc_discharge_detail.discharge_date as date) < 29
						then cast(child_cmtc_nrc_discharge_detail.discharge_date as date) + interval ''14 days''
					  else cast(child_cmtc_nrc_discharge_detail.discharge_date as date) + interval ''29 days''
					  end
		 when child_cmtc_nrc_follow_up.follow_up_visit = 1
		 	then case when current_date - cast(child_cmtc_nrc_discharge_detail.discharge_date as date) < 44
		 				then cast(child_cmtc_nrc_discharge_detail.discharge_date as date) + interval ''29 days''
		 			  else cast(child_cmtc_nrc_discharge_detail.discharge_date as date) + interval ''44 days''
		 			  end
		 when child_cmtc_nrc_follow_up.follow_up_visit = 2
		 	then cast(child_cmtc_nrc_discharge_detail.discharge_date as date) + interval ''44 days''
		 end as follow_up_due_date
	from child_ids
	inner join child_cmtc_nrc_discharge_detail on child_ids.discharge_id = child_cmtc_nrc_discharge_detail.id
	left join follow_up_detail on child_ids.admission_id = follow_up_detail.admission_id
	left join child_cmtc_nrc_follow_up on follow_up_detail.follow_up_id = child_cmtc_nrc_follow_up.id
)
select child_ids.id,
child_ids.screening_center as "screeningCenter",
child_ids.child_id as "memberId",
child_ids.screened_on as "screenedOn",
child_ids.state as "state",
child_ids.admission_id as "admissionId",
child_ids.discharge_id as "dischargeId",
child_ids.created_by as "createdBy",
child_ids.identified_from as "identifiedFrom",
health_infrastructure_details.name as "healthInfrastructureName",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "memberName",
imt_member.unique_health_id as "uniqueHealthId",
imt_member.family_id as "familyId",
imt_member.dob as "dob",
imt_member.gender as "gender",
imt_family.bpl_flag as "bplFlag",
listvalue_field_value_detail.value as "caste",
concat(mother.first_name,'' '',mother.middle_name,'' '',mother.last_name) as "motherName",
mother.mobile_number as "motherContactNumber",
concat(um_user.first_name,'' '',um_user.middle_name,'' '',um_user.last_name) as "referredByName",
um_user.contact_number as "referredByContactNumber",
asha_detail.asha as "ashaDetails",
location.name as "villageName",
area.name as "areaName",
child_cmtc_nrc_discharge_detail.discharge_date as "dischargeDate",
child_cmtc_nrc_follow_up.follow_up_visit as "lastFollowUpVisitNo",
child_cmtc_nrc_follow_up.follow_up_date as "lastFollowUpDate",
follow_up_visit_calc.follow_up_visit_no as "followUpVisitNo",
to_char(follow_up_due_date_calc.follow_up_due_date,''DD/MM/YYYY'') as "followUpDueDate"
from child_ids
inner join child_cmtc_nrc_discharge_detail on child_ids.discharge_id = child_cmtc_nrc_discharge_detail.id
left join follow_up_detail on child_ids.admission_id = follow_up_detail.admission_id
left join follow_up_visit_calc on child_ids.admission_id = follow_up_visit_calc.admission_id
left join follow_up_due_date_calc on child_ids.admission_id = follow_up_due_date_calc.admission_id
left join child_cmtc_nrc_follow_up on follow_up_detail.follow_up_id = child_cmtc_nrc_follow_up.id
inner join health_infrastructure_details on child_ids.screening_center = health_infrastructure_details.id
inner join imt_member on child_ids.child_id = imt_member.id
left join imt_member mother on imt_member.mother_id = mother.id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join location_master location on imt_family.location_id = location.id
left join location_master area on imt_family.area_id = area.id
left join listvalue_field_value_detail on imt_family.caste = cast(listvalue_field_value_detail.id as character varying)
left join um_user on child_ids.created_by = um_user.id
left join asha_detail on child_ids.id = asha_detail.id
order by follow_up_due_date_calc.follow_up_due_date
limit #limit# offset #offset#',true,'ACTIVE',NULL,true,'cd670c5e-b05a-4c0a-9899-2281f3718d69'),
	 (57698,'2019-03-05 18:53:14.476',57698,'2019-05-07 19:33:49.364','state_of_health_data_retrieval','locationId','with  location_type as(select  level,string_agg(name,''/'') as location_type from location_type_master where 
level=(case when ''#locationId#'' = ''null'' then 1 else (select level+1 from location_type_master t 
inner join location_master m on t.type=m.type where id=#locationId#) end)group by level )

select lt.level,lt.type,l.id as "locationId",location_type.location_type as "locationType",
case when l.english_name is not null then l.english_name else l.name end as english_name,element_name as "elementName",
sum(yesterday) as yesterday,sum(last7days) as last7days,sum(last30days) as last30days,target,sum(male) as male,sum(female) as female,
sum(chart1) as chart1,sum(chart2) as chart2,sum(chart3) as chart3,sum(chart4) as chart4 from 
location_type,location_type_master lt,state_of_health_master sh,location_master l where sh.location_id in 
(select id from location_master  where (case when ''#locationId#'' = ''null'' then id = 2  else parent=#locationId# end))and sh.location_id = l.id 
and l.type = lt.type group by lt.level, lt.type,
location_type.location_type, sh.target,l.id,l.english_name,sh.element_name order by english_name;',true,'ACTIVE','Retrieves data for CM Dashboard Application',true,'893a82a8-7170-44e7-93b2-bf282e356221'),
	 (80314,'2020-11-23 00:00:00',80314,'2020-11-23 00:00:00','covid19_lab_test_retrieve_indeterminate_list','searchText,offset,limit,loggedInUserId','with idsp_screening as (
select
	clt.id as "id",
	ltd.id as lab_id,
	ltd.lab_test_number as lab_test_number,
	ltd.indeterminate_marked_date as indeterminate_date,
	ltd.lab_test_id as lab_test_id,
	clt.location_id as loc_id,
	imt_member.id as member_id,
	case when clt.member_id is null
		then concat_ws('' '',clt.first_name,clt.middle_name,clt.last_name)
		else concat(concat_ws('' '',imt_member.first_name,imt_member.middle_name,imt_member.last_name)
			, '' ('' , imt_member.unique_health_id , '')'' , ''<br>'' , imt_member.family_id) end as member_det,
	concat(case when clt.member_id is null
		then cast(clt.age as text)
		else cast(EXTRACT(YEAR FROM age(imt_member.dob)) as text) end,'' Year'') as age,
	to_char(clt.admission_date,''DD/MM/YYYY'') as admission_date,
	hiwd.ward_name,
	sample_from.name_in_english as sample_from_health_infra,
	sample_from.is_covid_lab,
	clt.current_ward_id as ward_id,
	cacd.on_ventilator as on_ventilator,
	cacd.ventilator_type1 as ventilator_type1,
	cacd.ventilator_type2 as ventilator_type2,
	cacd.on_o2 as on_o2,
	cacd.on_air as on_air,
	cacd.remarks as remarks,
	clt.is_hiv as hiv,
	clt.current_bed_no,
	cacd.health_status as health_status,
	cacd.service_date as last_check_up_time
	from covid19_lab_test_detail ltd
	inner join covid19_admission_detail clt on ltd.covid_admission_detail_id = clt.id
	left join health_infrastructure_ward_details hiwd on hiwd.id = clt.current_ward_id
	inner join covid19_admitted_case_daily_status cacd on cacd.id = clt.last_check_up_detail_id
	left join health_infrastructure_details sample_from on sample_from.id = ltd.sample_health_infra
	left join imt_member on clt.member_id = imt_member.id
	left join imt_family on imt_member.family_id = imt_family.family_id
	where
	ltd.sample_health_infra_send_to = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = #loggedInUserId# and uhi.state = ''ACTIVE'')
	and clt.status not in (''DISCHARGED'',''DEAD'',''REFER'') and ltd.lab_collection_status = ''INDETERMINATE''
	and case when #searchText# != ''null'' and #searchText# != '''' then ltd.search_text ilike concat(''%'',#searchText#,''%'') else true end
	order by ltd.indeterminate_server_date desc
	limit #limit# offset #offset#
)
select
id as "admissionId"
,lab_id as "labCollectionId"
,lab_test_number as "labTestNumber"
,indeterminate_date as "indeterminateDate"
,lab_test_id as "labTestId"
,member_id as "memberId"
,loc_id as "locationId"
,member_det as "memberDetail"
,age as "age"
,admission_date as "admissionDate"
,ward_name as "wardName"
,ward_id as "wardId"
,current_bed_no as "bedNumber"
,health_status as "healthStatus"
,to_char(last_check_up_time,''DD/MM/YYYY'') as "lastCheckUpTime"
,on_ventilator
,ventilator_type1
,ventilator_type2
,on_o2
,on_air
,remarks
,hiv
,sample_from_health_infra as "sampleFrom"
,is_covid_lab as "isSameHealthInfrastructure"
,cast(''CONFIRMATION'' as text) as "resultStage"
from idsp_screening',true,'ACTIVE',NULL,true,'deea93fe-9d6d-4b15-a6ae-4ff348fd1fd2'),
	 (58981,'2019-09-02 14:25:17.513',58981,'2019-09-02 14:25:17.513','mob_asha_work_register_detail_pnc_mother','visitId','with const as (
	select cast(''INNIP'' as text) as const, cast(''Inverted nipple'' as text) as name
	union
	select cast(''ENBRST'' as text) as const, cast(''Engorged breast'' as text) as name
	union
	select cast(''CRCKNP'' as text) as const, cast(''Cracked nipple'' as text) as name
	union
	select cast(''HOME'' as text) as const, cast(''Home'' as text) as name
	union
	select cast(''ON_THE_WAY'' as text) as const, cast(''On the way'' as text) as name
	union
	select cast(''HOSP'' as text) as const, cast(''Hospital'' as text) as name
), dang_sign as (
	select rel.pnc_id, string_agg(rel.problem ,'', '') as dang_sign 
	from rch_asha_pnc_mother_problem_present rel
	where rel.pnc_id in (select id from rch_asha_pnc_mother_master where pnc_master_id = 9)--#visitId#) 
	group by rel.pnc_id 
)
select 
concat(mem.first_name,'' '',mem.middle_name,'' '',mem.last_name,'' ('',mem.unique_health_id,'')'') as "Mother Name",
mem.family_id as "Family Id",
case when pm.service_date is not null then to_char(pm.service_date , ''DD/MM/YYYY'') else null end as "Service Date", 
case when pmm.bleeding_continues = true then ''Yes'' when pmm.bleeding_continues = false then ''No'' else null end as "Bleeding continues",
case when pmm.pads_changed_in_24_hours is not null then cast(pmm.pads_changed_in_24_hours as text) else null end as "Pads changed in 24 hours",
case when pmm.foul_smell_discharge = true then ''Yes'' when pmm.foul_smell_discharge = false then ''No'' else null end as "Foul smell discharge",
case when pmm.abnormal_behaviour = true then ''Yes'' when pmm.abnormal_behaviour = false then ''No'' else null end as "Abnormal behaviour",
case when pmm.have_fever = true then ''Yes'' when pmm.have_fever = false then ''No'' else null end as "Have fever",
case when pmm.have_visual_disturbances = true then ''Yes'' when pmm.have_visual_disturbances = false then ''No'' else null end as "Have visual disturbances",
case when pmm.difficulty_in_breastfeeding = true then ''Yes'' when pmm.difficulty_in_breastfeeding = false then ''No'' else null end as "Difficulty in breastdeeding",
case when pmm.death_date is not null then to_char(pmm.death_date, ''DD/MM/YYYY'') else null end as "Death Date", 
death_place.name as "Place Of Death",
death_reason.value as "Death Reason", 
pmm.other_death_reason as "Other Death Reason"
from rch_asha_pnc_master pm
inner join rch_asha_pnc_mother_master pmm on pm.id = pmm.pnc_master_id
inner join imt_member mem on pm.member_id = mem.id
left join dang_sign on dang_sign.pnc_id = pmm.id
left join const death_place on death_place.const = pmm.death_place
left join listvalue_field_value_detail death_reason on cast(pmm.death_reason as bigint) = death_reason.id
where pm.id = #visitId#',true,'ACTIVE',NULL,true,'ea1257ca-5682-4aa1-a693-cc334d681dfc'),
	 (58981,'2019-09-02 14:26:24.363',58981,'2019-09-02 14:26:24.363','mob_asha_work_register_detail_cbac','visitId','with const as (
	select cast(''NEVER'' as text) as const, cast(''Never'' as text) as name
	union
	select cast(''IN_PAST'' as text) as const, cast(''Used to consume in Past/ Sometimes now'' as text) as name
	union
	select cast(''DAILY'' as text) as const, cast(''Daily'' as text) as name
	union
	select cast(''LT80'' as text) as const, cast(''80 cm or less'' as text) as name
	union
	select cast(''81TO90'' as text) as const, cast(''81-90 cm'' as text) as name
	union
	select cast(''GT90'' as text) as const, cast(''More than 90 cm'' as text) as name
	union
	select cast(''LT90'' as text) as const, cast(''90 cm or less'' as text) as name
	union
	select cast(''91TO100'' as text) as const, cast(''91-100 cm'' as text) as name
	union
	select cast(''GT100'' as text) as const, cast(''More than 100 cm'' as text) as name
	union
	select cast(''ATLEAST_150'' as text) as const, cast(''Atleast 150 minutes in a week'' as text) as name
	union
	select cast(''LESS_THAN_150'' as text) as const, cast(''Less than 150 minutes in a week'' as text) as name
	union
	select cast(''CROP_BURNING'' as text) as const, cast(''Crop residue burning / burning of garbage'' as text) as name
	union
	select cast(''INDUSTRY_WORK'' as text) as const, cast(''Leaves / Working in industries with smoke, gas and dust exposure such as brick kilns and glass factories etc.'' as text) as name
	union
	select cast(''NONE'' as text) as const, cast(''None'' as text) as name
	union
	select cast(''NORMAL'' as text) as const, cast(''Normal'' as text) as name
	union
	select cast(''HEAVY'' as text) as const, cast(''Heavy'' as text) as name
	union
	select cast(''CLOTS'' as text) as const, cast(''Clots'' as text) as name
	union
	select cast(''PAIN'' as text) as const, cast(''Pain'' as text) as name
)
select
concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'') as "Member Name",
m.family_id as "Family Id",
smoke_or_consume_gutka.name as "Smoke or consume gutka",
waist.name as "Waist",
case when cbac.consume_alcohol_daily = true then ''Yes'' when cbac.consume_alcohol_daily = false then ''No'' else null end as "Consume alcohol daily",
physical_activity_150_min.name as "Physical activity 150 min",
case when cbac.bp_diabetes_heart_history = true then ''Yes'' when cbac.bp_diabetes_heart_history = false then ''No'' else null end as "BP/diabetes/heart history",
case when cbac.shortness_of_breath = true then ''Yes'' when cbac.shortness_of_breath = false then ''No'' else null end as "Shortness of breath",
case when cbac.fits_history = true then ''Yes'' when cbac.fits_history = false then ''No'' else null end as "Fits history",
case when cbac.two_weeks_coughing = true then ''Yes'' when cbac.two_weeks_coughing = false then ''No'' else null end as "Two weeks coughing",
case when cbac.mouth_opening_difficulty = true then ''Yes'' when cbac.mouth_opening_difficulty = false then ''No'' else null end as "Mouth opening difficulty",
case when cbac.blood_in_sputum = true then ''Yes'' when cbac.blood_in_sputum = false then ''No'' else null end as "Blood in sputum",
case when cbac.two_weeks_ulcers_in_mouth = true then ''Yes'' when cbac.two_weeks_ulcers_in_mouth = false then ''No'' else null end as "Two weeks ulcers in mouth",
case when cbac.two_weeks_fever = true then ''Yes'' when cbac.two_weeks_fever = false then ''No'' else null end as "Two weeks fever",
case when cbac.change_in_tone_of_voice = true then ''Yes'' when cbac.change_in_tone_of_voice = false then ''No'' else null end as "Change in tone of voice",
case when cbac.loss_of_weight = true then ''Yes'' when cbac.loss_of_weight = false then ''No'' else null end as "Loss of weight",
case when cbac.patch_on_skin = true then ''Yes'' when cbac.patch_on_skin = false then ''No'' else null end as "Patch on skin",
case when cbac.night_sweats = true then ''Yes'' when cbac.night_sweats = false then ''No'' else null end as "Night sweats",
case when cbac.taking_anti_tb_drugs = true then ''Yes'' when cbac.taking_anti_tb_drugs = false then ''No'' else null end as "Taking Anti-TB drugs",
case when cbac.difficulty_holding_objects = true then ''Yes'' when cbac.difficulty_holding_objects = false then ''No'' else null end as "Difficulty holding objects",
case when cbac.sensation_loss_palm = true then ''Yes'' when cbac.sensation_loss_palm = false then ''No'' else null end as "Sensation loss palm",
case when cbac.family_member_suffering_from_tb = true then ''Yes'' when cbac.family_member_suffering_from_tb = false then ''No'' else null end as "Family member suffering from tb",
case when cbac.history_of_tb = true then ''Yes'' when cbac.history_of_tb = false then ''No'' else null end as "History of TB",
case when cbac.lump_in_breast = true then ''Yes'' when cbac.lump_in_breast = false then ''No'' else null end as "Lump in breast",
case when cbac.bleeding_after_menopause = true then ''Yes'' when cbac.bleeding_after_menopause = false then ''No'' else null end as "Bleeding after menopause",
case when cbac.nipple_blood_stained_discharge = true then ''Yes'' when cbac.nipple_blood_stained_discharge = false then ''No'' else null end as "Nipple blood stained discharge",
case when cbac.bleeding_after_intercourse = true then ''Yes'' when cbac.bleeding_after_intercourse = false then ''No'' else null end as "Bleeding after intercourse",
case when cbac.change_in_size_of_breast = true then ''Yes'' when cbac.change_in_size_of_breast = false then ''No'' else null end as "Change in size of breast",
case when cbac.foul_vaginal_discharge = true then ''Yes'' when cbac.foul_vaginal_discharge = false then ''No'' else null end as "Foul vaginal discharge",
case when cbac.bleeding_between_periods = true then ''Yes'' when cbac.bleeding_between_periods = false then ''No'' else null end as "Bleeding between periods",
occupational_exposure.name as "Occupational exposure",
case when cbac.score is not null then cast(cbac.score as text) else null end as "Score",
case when cbac.height is not null then cast(cbac.height as text) else null end as "Height",
case when cbac.weight is not null then cast(cbac.weight as text) else null end as "Weight",
case when cbac.bmi is not null then cast(cbac.bmi as text) else null end as "BMI"
from ncd_member_cbac_detail cbac
inner join imt_member m on cbac.member_id = m.id
left join const smoke_or_consume_gutka on smoke_or_consume_gutka.const = cbac.smoke_or_consume_gutka
left join const waist on waist.const = cbac.waist
left join const physical_activity_150_min on physical_activity_150_min.const = cbac.physical_activity_150_min
left join const occupational_exposure on occupational_exposure.const = cbac.occupational_exposure
where cbac.id = #visitId#',true,'ACTIVE',NULL,true,'9e00aa63-13eb-4f44-9e4d-e15c2a80e36b'),
	 (66522,'2019-07-22 19:25:30.651',66522,'2019-07-22 19:25:30.651','state_of_health_data_retrieval_4','locationId','with  location_type as(select  level,string_agg(name,''/'') as location_type from location_type_master where 
level=(case when ''#locationId#'' = ''null'' then 1 else (select level+1 from location_type_master t 
inner join location_master m on t.type=m.type where id=2) end)group by level )

select lt.level,lt.type,l.id as "locationId",location_type.location_type as "locationType",
case when l.english_name is not null then l.english_name else l.name end as english_name,element_name as "elementName",
sum(yesterday) as yesterday,sum(last7days) as last7days,sum(last30days) as last30days,target,sum(male) as male,sum(female) as female,
sum(chart1) as chart1,sum(chart2) as chart2,sum(chart3) as chart3,sum(chart4) as chart4 from 
location_type,location_type_master lt,state_of_health_master sh,location_master l where sh.location_id =#locationId# and sh.location_id = l.id 
and l.type = lt.type group by lt.level, lt.type,
location_type.location_type, sh.target,l.id,l.english_name,sh.element_name order by english_name;',true,'ACTIVE',NULL,true,'4ed42371-2d39-4c9c-9f4a-860093ec36a3'),
	 (60512,'2019-07-18 19:08:45.226',60512,'2019-07-18 19:08:45.226','ccc_retrieve_query','moId','with mem_loc_id as(
 select * from um_user_location
 where user_id = #moId# and state = ''ACTIVE''
)
,mo_info as(
  select mo.id as mo_user_id, string_agg(get_location_hierarchy(us_loc.loc_id),'','') as mo_location,
  mo.first_name || '' '' || mo.middle_name || '' '' || mo.last_name as mo_name,
  mo.contact_number as mo_mobile_number,
  mo.email_id as mo_email_id
  from um_user_location us_loc
  inner join um_user mo on mo.id = us_loc.user_id
  where us_loc.state = ''ACTIVE''
  and mo.id = #moId#
  group by mo.id, mo.first_name,mo.middle_name,mo.last_name ,
  mo.contact_number,mo.email_id
  )
,location_list as(
 select child_id as child_loc_id
 from location_hierchy_closer_det,mem_loc_id
 where parent_id = mem_loc_id.loc_id
)
,anm_info as(
 select fhw.id as fhw_user_id,
 fhw.first_name || '' '' || fhw.middle_name || '' '' || fhw.last_name as fhw_name,
 fhw.contact_number as fhw_mobile_number,
 string_agg(loc.name,'', '') as village_name
 from um_user fhw
 inner join um_user_location us_loc on fhw.id = us_loc.user_id
 inner join location_master loc on loc.id = us_loc.loc_id
 cross join location_list
 where fhw.role_id in (30) and fhw.state = ''ACTIVE'' and us_loc.state = ''ACTIVE''
 and us_loc.loc_id =  location_list.child_loc_id
 group by fhw.id, fhw.first_name, fhw.middle_name, fhw.last_name
)
,fhw_mo_tho_info as(
 select * from anm_info, mo_info
)

(
select
fhw_mo_tho_info.mo_user_id,
fhw_mo_tho_info.mo_name,
fhw_mo_tho_info.mo_mobile_number,
fhw_mo_tho_info.fhw_name,
fhw_mo_tho_info.fhw_mobile_number,
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name,'' ('',imt_member.unique_health_id,'')'') as member_name_id,
get_location_hierarchy(mem.location_id) as location_hierarchy,
cast(mem.schedule_date as date) as due_date,
noti.name as service_type,
date_part(''day'',now()-mem.service_due_on_date) as since_days
from ccc_overdue_services_follow_up_info mem
inner join imt_member on imt_member.id = mem.member_id
inner join location_hierchy_closer_det lhcd on mem.location_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
inner join um_user_location us_loc on lhcd.parent_id = us_loc.loc_id and  us_loc.state = ''ACTIVE''
inner join um_user on us_loc.user_id = um_user.id and um_user.state = ''ACTIVE'' and um_user.role_id = 30
inner join notification_type_master noti on noti.id = mem.notification_type_id
cross join location_list
inner join fhw_mo_tho_info on fhw_mo_tho_info.fhw_user_id = um_user.id
left join gvk_high_risk_follow_up_usr_info high_risk on high_risk.member_id = mem.member_id and mem.notification_type_id = 2
where call_state in (''com.argusoft.imtecho.ccc.call.to-be-processed'', ''com.argusoft.imtecho.ccc.call.processing'')
and mem.call_attempt < 3
and mem.service_state in (''PENDING'' , ''RESCHEDULE'')
and location_list.child_loc_id = us_loc.loc_id
order by mem.id)

union all
(
select 
distinct mo_user_id, mo_name, mo_mobile_number, fhw_name, fhw_mobile_number, 
concat(mem.first_name,'' '',mem.middle_name,'' '',mem.last_name,'' ('', mem.unique_health_id,'')'') as member_name_id,
get_location_hierarchy(rch_mem.location_id) as location_hierarchy, cast(''01-01-1970'' as date) as due_date, ''Anemia'' as service_type, 0 as since_days
from rch_anc_master rch_mem
inner join imt_member mem on rch_mem.member_id = mem.id
inner join location_hierchy_closer_det lhcd on rch_mem.location_id = lhcd.child_id --and lhcd.parent_loc_type in (''V'',''ANG'')
inner join um_user_location us_loc on lhcd.parent_id = us_loc.loc_id and  us_loc.state = ''ACTIVE''
inner join um_user on us_loc.user_id = um_user.id and um_user.state = ''ACTIVE'' and um_user.role_id = 30
inner join fhw_mo_tho_info on fhw_mo_tho_info.fhw_user_id = um_user.id
where haemoglobin_count < 7
and rch_mem.location_id in ( select child_loc_id from location_list))',true,'ACTIVE',NULL,true,'a3d051ec-7384-48d5-8417-e7594bbd241a'),
	 (1,'2020-03-17 00:00:00',NULL,NULL,'update_opd_lab_test_state','id,state','
update
	rch_opd_lab_test_master
set
	is_active = #state#
where
	id = #id#
',false,'ACTIVE',NULL,true,'48068db0-02f4-4c81-b990-293a0a074d73'),
	 (1,'2020-03-17 00:00:00',NULL,NULL,'fetch_form_details','','
select
	*
from
	system_form_master
',true,'ACTIVE',NULL,true,'b78e0cdc-d96f-4b01-bc90-d3c5f28cea4f'),
	 (74909,'2020-04-30 00:00:00',74909,'2020-04-30 00:00:00','fetch_soh_element_permissions_details','element_id','with role_ids as ( select
	id,reference_id, permission_type
from
	soh_element_permissions
where
	permission_type = ''ROLE''
	and element_id = #element_id#),
user_ids as ( select
	id,reference_id, permission_type
from
	soh_element_permissions
where
	permission_type = ''USER''
	and element_id = #element_id#) select
	role_ids.id,
	um_role_master.name,
	role_ids.permission_type
from
	um_role_master
inner join role_ids on
	um_role_master.id = role_ids.reference_id
union all select
	user_ids.id,
	concat( um_user.first_name, '' '', um_user.last_name ) as "name",
	user_ids.permission_type
from
	um_user
inner join user_ids on
	um_user.id = user_ids.reference_id
union all select
	id,
	permission_type,
	permission_type
from
	soh_element_permissions
where
	reference_id is null and element_id = #element_id#',true,'ACTIVE',NULL,true,'3413dcce-2bc9-4640-8c28-08968e417751'),
	 (1,'2018-06-18 10:45:41.956',1,'2020-02-19 13:16:14.968527','retrieval_announcements','lastUpdatedOn,userType,userId','select id, subject, from_date, is_active, default_language, file_extension, contains_multimedia, media_path, modified_on from announcement_info_master as aim
            left join announcement_info_detail as aid on aim.id = aid.announcement 
            where id in (select announcement from announcement_location_detail,location_hierchy_closer_det lh ,um_user_location uml
            where lh.parent_id = location and uml.user_id = #userId# and lh.child_id = uml.loc_id and uml.state = ''ACTIVE'' 
            and announcement_for in (''#userType#'') and is_active = true) 
            and from_date < now() and modified_on >= cast((case when ''#lastUpdatedOn#'' = ''null'' 
            then ''1970-01-01 05:30:00.0'' else ''#lastUpdatedOn#'' end) as timestamp)',true,'ACTIVE','retrieve all announcement for user',true,'9415c52e-055c-4023-be43-889486d22482'),
	 (66522,'2019-07-22 19:25:53.068',66522,'2019-07-22 19:25:53.068','state_of_health_data_retrieval_3','locationId','with  location_type as(select  level,string_agg(name,''/'') as location_type from location_type_master where 
level=(case when ''#locationId#'' = ''null'' then 1 else (select level+1 from location_type_master t 
inner join location_master m on t.type=m.type where id=2) end)group by level )

select lt.level,lt.type,l.id as "locationId",location_type.location_type as "locationType",
case when l.english_name is not null then l.english_name else l.name end as english_name,element_name as "elementName",
sum(yesterday) as yesterday,sum(last7days) as last7days,sum(last30days) as last30days,target,sum(male) as male,sum(female) as female,
sum(chart1) as chart1,sum(chart2) as chart2,sum(chart3) as chart3,sum(chart4) as chart4 from 
location_type,location_type_master lt,state_of_health_master sh,location_master l where sh.location_id in 
(select id from location_master  where id in (select child_id 
							from location_hierchy_closer_det 
							where parent_id =#locationId#  and depth=case when #locationId# = 2 then 2 else 1 end))
							and sh.location_id = l.id 
and l.type = lt.type group by lt.level, lt.type,
location_type.location_type, sh.target,l.id,l.english_name,sh.element_name order by english_name;',true,'ACTIVE',NULL,true,'e4d8d441-3a74-4780-a199-4795f3d155e0'),
	 (64189,'2019-04-09 20:42:58.7',409,'2019-07-04 12:46:15.388','cm_dashboard_techo_daily_report','date','-------cm_dashboard_techo_daily_report------
select
    lm3.location_code as "Dcode",
    lm2.location_code as "Tcode",
    to_char( cast(''#date#'' as date),''MM/dd/yyyy'') as "Dt",     
	lm3.english_name as "District",
	lm2.english_name as "Taluka",
	lm1.english_name as "PHC",
	sum(coalesce(cmtdr.preg_women,0)) as "Preg_Women" ,
	sum(coalesce(cmtdr.early_ANC,0)) as "Early_ANC" ,
	sum(coalesce(cmtdr.no_of_delivery,0)) as "No_Of_Delivery",
	sum(coalesce(cmtdr.inst_del_in_public,0)) as "Inst_Del_InPublic",
	sum(coalesce(cmtdr.inst_del_in_private,0)) as "Inst_Del_InPrivate",
	sum(coalesce(cmtdr.home_delivery,0)) as "Home_Delivery",
	sum(coalesce(cmtdr.child_reg,0)) as "Child_Reg",
	sum(coalesce(cmtdr.ANC1 ,0)) as "ANC1",
	sum(coalesce(cmtdr.ANC2 ,0)) as "ANC2",
	sum(coalesce(cmtdr.ANC3 ,0)) as "ANC3",
	sum(coalesce(cmtdr.ANC4 ,0)) as "ANC4",
	sum(coalesce(cmtdr.ANC3_due,0)) as "ANC3_Due",
	sum(coalesce(cmtdr.ANC4_due,0)) as "ANC4_Due",
	sum(coalesce(cmtdr.OPV0,0)) as "OPV0",
	sum(coalesce(cmtdr.hepatitisB0,0)) as "HepatitisB0",
	sum(coalesce(cmtdr.OPV1,0)) as "OPV1",
	sum(coalesce(cmtdr.OPV2,0)) as "OPV2",
	sum(coalesce(cmtdr.OPV3,0)) as "OPV3",
	sum(coalesce(cmtdr.Measles1,0)) as "Measles1",
	sum(coalesce(cmtdr.Penta1,0)) as "Penta1",
	sum(coalesce(cmtdr.Penta2,0)) as "Penta2",
	sum(coalesce(cmtdr.Penta3,0)) as "Penta3",
	sum(coalesce(cmtdr.VitK,0)) as "VitK",
	sum(coalesce(cmtdr.BCG,0)) as "BCG",
	--sum(coalesce(cmtdr.IPV,0)) as "IPV",
	sum(coalesce(cmtdr.fully_immunized,0)) as "Fully_Immunized",
	sum(coalesce(cmtdr.mother_death,0)) as "Mother_Death",
	sum(coalesce(cmtdr.male_child,0)) as "Male_Child",
	sum(coalesce(cmtdr.female_child,0)) as "Female_Child",
	sum(coalesce(cmtdr.male_live_birth,0)) as "Male_Live_Birth",
	sum(coalesce(cmtdr.female_live_birth,0)) as "Female_Live_Birth",
	sum(coalesce(cmtdr.infant_death,0)) as "Infant_Death",
	sum(coalesce(cmtdr.TT2,0)) as "TT2",
	sum(coalesce(cmtdr.TT2_due,0)) as "TT2Due",
	sum(coalesce(cmtdr.TT_booster,0)) as "TTBooster",
	sum(coalesce(cmtdr.BCG_due,0)) as "BCG_Due",
	sum(coalesce(cmtdr.OPV0_due,0)) as "OPV0_Due",
	sum(coalesce(cmtdr.hepatitisB0_due,0)) as "HepatitisB0_Due",
	sum(coalesce(cmtdr.OPV1_due,0)) as "OPV1_Due",
	sum(coalesce(cmtdr.OPV2_due,0)) as "OPV2_Due",
	sum(coalesce(cmtdr.OPV3_due,0)) as "OPV3_Due",
	sum(coalesce(cmtdr.measles1_due,0)) as "Measles1_Due",
	sum(coalesce(cmtdr.pentavalent1_due,0)) as "Pentavalent1_Due",
	sum(coalesce(cmtdr.pentavalent2_due,0)) as "Pentavalent2_Due",
	sum(coalesce(cmtdr.pentavalent3_due,0)) as "Pentavalent3_Due",
	sum(coalesce(cmtdr.vitK_due,0)) as "VitK_Due",
	sum(coalesce(cmtdr.tothrm,0)) as "TOTHRM",
	to_char(date(cmtdr.date_on),''MM/dd/yyyy'') as "AsOnDt",
	sum(coalesce(cmtdr.ANC1_due,0)) as "ANC1_Due",
	sum(coalesce(cmtdr.ANC2_due,0)) as "ANC2_Due",
	sum(coalesce(cmtdr.fipv1,0)) as "f_ipv1",
	sum(coalesce(cmtdr.fipv2,0)) as "f_ipv2",
	sum(coalesce(cmtdr.concurrent_preg_woman,0)) as "concurrent_preg_woman",
	sum(coalesce(cmtdr.concurrent_high_risk_mother,0)) as "concurrent_high_risk_mother",
	sum(coalesce(cmtdr.total_child_weighted,0)) as "child_weighted",
	sum(coalesce(cmtdr.total_low_birth_weight,0)) as "lbw"
from 
	location_master lm1 
	inner join location_master lm2 on lm1.parent = lm2.id and lm2.state=''ACTIVE'' 
    inner join location_master lm3 on lm2.parent = lm3.id and lm3.state=''ACTIVE'' 
    --inner join location_hierchy_closer_det lhc on lhc.parent_id = lm1.id 
    left join cm_dashboard_daily_report cmtdr 
    on cmtdr.location_id = lm1.id  
    and cmtdr.date_on = cast(''#date#'' as date)
where
	lm1.type in(''P'',''U'')
	and lm1.state = ''ACTIVE''
        and lm1.name not ilike ''%delete%''
	and lm2.name not ilike ''%delete%''
	and lm3.name not ilike ''%delete%''
group by 
    cmtdr.date_on,
	lm2.english_name,
	lm3.english_name,
	lm1.english_name,
	cmtdr.AsOnDt,
	lm3.location_code,
	lm2.location_code
order by
	lm3.english_name',true,'ACTIVE','To get Techo Daily Report for CM Dashboard',true,'da802ebc-f7be-4580-a3e9-92b6289dfd82'),
	 (1,'2020-05-11 00:00:00',1,'2020-05-11 00:00:00','retrieve_lower_level_not_available_rch_locations','id,limit,offset,selectedTypes','
    select
    lm.id,
    lm.name,
    lm.english_name as "englishName",
    lm.type,
    lm.parent,
    lm.rch_code as "rchCode",
    alsm.id as "anmolId",
    ltm.level,
    get_location_hierarchy(lm.id) as "locationHierarchy",
    case
        when (alsm.id is not null and cast((select rch_code from location_master where id = lm.parent) as text) != alsm.parent_rch_code) then true
        else false
    end as "isParentRchCodeMismatch"
    from location_master lm
    inner join location_type_master ltm on ltm.type = lm.type
    left join anmol_location_master alsm on
        alsm.rch_code = cast(lm.rch_code as text)
        and (
            case
			    when lm.type in (''S'') and alsm.type in (''S'') then true
                when lm.type in (''D'', ''C'') and alsm.type in (''D'') then true
                when lm.type in (''B'', ''Z'') and alsm.type in (''T'') then true
                when lm.type in (''P'') and alsm.type in (''F'') then true
                when lm.type in (''U'') and alsm.type in (''FU'') then true
                when lm.type in (''SC'', ''ANM'') and alsm.type in (''SF'') then true
                when lm.type in (''V'', ''ANG'') and alsm.type in (''V'') then true
                else false
            end
        )
    where
        lm.id in (select child_id from location_hierchy_closer_det where parent_id = #id# and child_id != #id# and child_loc_type in (#selectedTypes#))
        and (alsm.id is null or (alsm.id is not null and cast((select rch_code from location_master where id = lm.parent) as text) != alsm.parent_rch_code))
    order by ltm.level
    limit #limit# offset #offset#
',true,'ACTIVE','Retrieve Lower Level Not Available RCH Locations',true,'d8ebc01c-a06a-4b7d-9583-56a1079baabc'),
	 (1,'2020-02-21 00:00:00',NULL,NULL,'retrieve_chronic_diseases_by_member_id','memberId','
    select
    string_agg(lfvd.value, '', '') as "chronicDiseases"
    from imt_member im
    left join imt_member_chronic_disease_rel imcdr on imcdr.member_id = im.id
    inner join listvalue_field_value_detail lfvd on lfvd.id = imcdr.chronic_disease_id
    where im.id = #memberId#
    group by im.id
',true,'ACTIVE','Retrieve Chronic Diseases by Member Id',true,'44aa0842-8880-4b4e-819d-886210356ffb'),
	 (60512,'2020-04-16 00:00:00',60512,'2020-04-16 00:00:00','lab_test_transfer_update','healthInfraTo,labTestId','update covid19_lab_test_detail
set sample_health_infra_send_to = #healthInfraTo#,
is_transferred = true
where id = #labTestId#;',false,'ACTIVE',NULL,true,'952ce16e-538d-477a-aecd-e12635bb4f52'),
	 (1,'2019-01-25 00:00:00',60512,'2019-03-08 17:17:01.818','pnc_retrieve_mother_list','userId','select *
from imt_member
where id in ( select member_id
from rch_pregnancy_registration_det
where delivery_date > now() - interval ''60 days''
and state = ''DELIVERY_DONE''
and location_id in ( select child_id
from location_hierchy_closer_det
where parent_id in ( select loc_id
from um_user_location
inner join location_master lm on
lm.id = um_user_location.loc_id
where um_user_location.user_id = #userId#
and um_user_location.state = ''ACTIVE''
and lm."type" not in (''S'', ''D'') ) ) )
and ((imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')) or (imt_member.state = ''com.argusoft.imtecho.member.state.temporary''))',true,'ACTIVE',NULL,true,'80fe94d7-3536-4928-9118-e540ba36c287'),
	 (1,'2019-02-15 19:25:58.170128',NULL,NULL,'health_infrastructure_cp_confirmation_count','id,locationid','
select h.name,count(is_cpconfirmationcenter) from health_infrastructure_details  h, location_hierchy_closer_det  l
where h.location_id=l.child_id and l.parent_id=(select lm.id from location_master lm,location_hierchy_closer_det lh
 where lh.parent_id=lm.id and lh.child_id=#locationid# and lm.type=''D'') and is_cpconfirmationcenter=true
and((#id# is  not null and h.id<>#id#) or (#id# is null))
group by h.name
',true,'ACTIVE','Count of cp confirmation center of given location',true,'ad4679db-4d58-4584-8f4a-08b1cb9dac34'),
	 (1,'2019-04-01 19:55:59.634',58981,'2019-05-21 11:38:23.415','migrated_in_members','offset,locationId,limit,userid','
with loc as (
	select child_id as loc from location_hierchy_closer_det  where parent_id in (
		case when #locationId# is null then (
			select loc_id from um_user_location where user_id = #userid# and state = ''ACTIVE''
		) else #locationId# end
	)
)
select mig.id, location_migrated_to, family_migrated_to, mig.state, (mobile_data),
u.id as fhwid, u.first_name || '' '' || u.last_name as fhwName, u.contact_number as fhwMobile, 
m.name || '' ('' || (
	case 
		when m.type = ''B'' then ''Block'' 
		when m.type = ''D'' then ''District'' 
		when m.type = ''Z'' then ''Zone'' 
		when m.type = ''C'' then ''Corporation'' 
	end
) || '')'' as dist_block
from  migration_master mig
inner join loc on loc.loc = mig.location_migrated_to
inner join um_user_location ul on mig.location_migrated_to = ul.loc_id and ul.state = ''ACTIVE''
inner join um_user u on ul.user_id = u.id and u.state=''ACTIVE'' and u.role_id = 30
left join location_master m on mig.nearest_loc_id = m.id
where (mig.out_of_state is null or mig.out_of_state = false)
and mig.type = ''IN'' and mig.state = ''REPORTED'' 
and mig.member_id is null
order by mig.created_on desc
limit #limit# offset #offset#
',true,'ACTIVE','Unresolved migrated in members retrieval',true,'7488022b-ede4-40e5-9ea3-6fb4158be833'),
	 (64189,'2019-04-09 20:43:52.963',409,'2019-05-28 15:18:11.284','cm_dashboard_imr_mmr_report','financialYear','-------cm_dashboard_imr_mmr_report----------
 select
	lm3.location_code as "DIST_CD",
	lm2.location_code as "Tcode",
	cast(''#financialYear#'' as text) as "Yr",
	lm3.english_name as "District",
	lm2.english_name as "Taluka",
	lm1.english_name as "PHC",
	coalesce(sum(cmdim.mother_death), 0) as "Mother_Death",
	coalesce(sum(cmdim.live_birth), 0) as "Live_Birth",
	coalesce(sum(cmdim.infant_death), 0) as "Infant_Death",
	cmdim.asondt as "AsOnDt"
from
	location_master lm1
inner join location_master lm2 on
	lm1.parent = lm2.id
	and lm2.state = ''ACTIVE''
inner join location_master lm3 on
	lm2.parent = lm3.id
	and lm3.state = ''ACTIVE''
inner join location_hierchy_closer_det lhc on
	lhc.parent_id = lm1.id
left join cm_dashboard_imr_mmr cmdim on
	cmdim.location_id = lhc.child_id
	and cmdim.financial_year = ''#financialYear#''
where
	lm1.type in(''P'',
	''U'')
	and lm1.state = ''ACTIVE''
	and lm1.name not ilike ''%delete%''
	and lm2.name not ilike ''%delete%''
	and lm3.name not ilike ''%delete%''
group by
	lm3.location_code,
	lm2.location_code,
	cmdim.financial_year,
	lm2.english_name,
	lm1.english_name,
	lm3.english_name,
	asondt
order by
	lm3.english_name',true,'ACTIVE','To get IMR MMR report data',true,'66a6e2fa-9908-4394-b793-0bdc28aac092'),
	 (1,'2019-05-31 00:00:00',NULL,NULL,'update_cmtc_archive_status','screeningId','
update child_cmtc_nrc_screening_detail
set is_archive = true where id = #screeningId#
',false,'ACTIVE',NULL,true,'bde6ebf8-4a7c-43b7-9a5e-1aed3e1b7317'),
	 (57698,'2019-11-15 20:42:40',409,'2019-11-16 13:22:13.806','insert_techo_interested_detail','full_name,designation,mobile_number,email','insert into techo_interested_detail(full_name, email, mobile_number, designation,created_on)
values (''#full_name#'',''#email#'', ''#mobile_number#'',''#designation#'',now());',false,'ACTIVE','Inserts into techo_interested_detail',true,'ef5479e5-ce84-423b-b6b4-3cdd8d3fcce1'),
	 (60512,'2019-12-12 11:04:41.5',60512,'2019-12-12 11:04:41.5','dr_techo_retrieve_by_family_id','familyId','select id as "memberId",
unique_health_id as "uniqueHealthId",
first_name as "firstName",
middle_name as "middleName",
last_name as "lastName",
gender,
dob,
mobile_number as "mobileNumber",
marital_status as "maritalStatus"
from imt_member where family_id = ''#familyId#''',true,'ACTIVE',NULL,true,'eb9121ec-8162-4051-a59d-a9d011fbd4ce'),
	 (1,'2019-11-14 17:39:02.655',409,'2019-12-12 15:29:05.987','mytecho_get_tip_ofthe_day','languagePreference,memberId','select mconf.tittle as title,mconf.description as description,mtip.card_config_id as "tipId",mtip.member_id as "memberId"
from mytecho_user_tip_of_the_day mtip 
inner join mytecho_timeline_language_wise_config_det mconf on mtip.card_config_id=mconf.mt_timeline_config_id
where is_shown =false  and cast (schedule_date as date)= current_date and mconf.language=''#languagePreference#'' 
and mtip.member_id=#memberId#',true,'ACTIVE','This query will return tip for the specified member',true,'ad581ec3-7f6b-4ff6-82ee-295a74b6f238'),
	 (1,'2019-11-14 17:39:02.655',NULL,NULL,'mytecho_mark_tip_as_read','memberId,tipId','update mytecho_user_tip_of_the_day set is_shown =true where card_config_id=#tipId# and member_id=#memberId#',false,'ACTIVE','This query will mark tip as read for the specified member',true,'4875713b-0b31-45e7-a90e-0f5747dbade4'),
	 (60512,'2019-12-12 11:05:03.746',60512,'2019-12-12 11:05:03.746','dr_techo_retrieve_by_aadhar_number','aadharNumber','select id as "memberId",
unique_health_id as "uniqueHealthId",
first_name as "firstName",
middle_name as "middleName",
last_name as "lastName",
gender,
dob,
mobile_number as "mobileNumber",
marital_status as "maritalStatus"
from imt_member where aadhar_number_encrypted = ''#aadharNumber#''',true,'ACTIVE',NULL,true,'07c7780b-abf5-4aae-a075-4845f4450422'),
	 (1,'2019-06-04 00:00:00',NULL,NULL,'move_to_production_npcb_form','userId','
select cast(''NPCB'' as text) as form_code, 
false as result
',true,'ACTIVE',NULL,true,'fcfbd110-3d24-4114-80b1-2032c88a080f'),
	 (60512,'2019-12-12 11:05:21.611',60512,'2019-12-12 11:05:21.611','dr_techo_retrieve_child_by_mother_id','motherId','select id as "memberId",
unique_health_id as "uniqueHealthId",
first_name as "firstName",
middle_name as "middleName",
last_name as "lastName",
gender,
dob
from imt_member where mother_id = #motherId#',true,'ACTIVE',NULL,true,'25c5b985-f9d0-4837-9173-e872cb67d28f'),
	 (60512,'2019-12-12 11:05:43.721',60512,'2019-12-12 11:05:43.721','dr_techo_retrieve_by_mobile_number','mobileNumber','select id as "memberId",
unique_health_id as "uniqueHealthId",
first_name as "firstName",
middle_name as "middleName",
last_name as "lastName",
gender,
dob,
mobile_number as "mobileNumber",
marital_status as "maritalStatus"
from imt_member where family_id in (select family_id from imt_member where mobile_number = ''#mobileNumber#'')',true,'ACTIVE',NULL,true,'88af961c-07b6-4234-92da-c5fa0a789b03'),
	 (1,'2019-02-12 00:00:00',NULL,NULL,'retrieve_location_hierarchy_by_location_id','locationId','
select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #locationId#
',true,'ACTIVE',NULL,true,'9bbf672d-64cc-4471-a3f9-6f2dfb9aa6d0'),
	 (1,'2019-02-12 00:00:00',NULL,NULL,'cerebral_palsy_module_check','locationId','
select cerebral_palsy_module from location_master where id in
(select parent_id from location_hierchy_closer_det where child_id = #locationId# and parent_loc_type = ''D'')
and state = ''ACTIVE''
',true,'ACTIVE',NULL,true,'9cf5ac0f-55f8-4a26-9173-dd3576a04071'),
	 (1,'2019-02-12 00:00:00',NULL,NULL,'cerebral_palsy_retrieve_by_id','id','
with member_details as
(select * from rch_child_cp_suspects where child_service_id = #id#)
select t1.id,t1.unique_health_id,t1.family_id,um.first_name as "FHWName",um.contact_number as "FHWNumber",t1.additional_info as "additionalInfo",
childService.service_date as "childServiceDate",
t3.area_id,member_details.location_id,
uma.first_name as "ashaName",
uma.contact_number as "ashaNumber",
t1.first_name as "childFirstName",
t1.last_name as "childLastName",
t1.middle_name as "childMiddleName",
t1.dob,
t2.first_name as "motherFirstName",
t2.middle_name as "motherMiddleName",
t2.last_name as "motherLastName",
t2.mobile_number
from member_details
inner join imt_member t1 on t1.id = member_details.member_id
inner join imt_member t2 on t1.mother_id = t2.id
inner join imt_family t3 on t1.family_id = t3.family_id
left join um_user_location ula on t3.area_id = ula.loc_id and ula.state=''ACTIVE''
left join um_user uma on ula.user_id = uma.id and uma.role_id = 24 and uma.state = ''ACTIVE''
inner join um_user_location ul on member_details.location_id = ul.loc_id and ul.state = ''ACTIVE''
inner join um_user um on ul.user_id = um.id and um.role_id = 30 and um.state = ''ACTIVE''
inner join rch_child_service_master childService on childService.id = member_details.child_service_id
',true,'ACTIVE',NULL,true,'567e4529-2174-4525-a3e1-2f8a33973541'),
	 (1,'2019-04-17 10:57:26.254',63746,'2019-05-14 15:20:54.197','mark_as_rollback','id,userid,memberid','
update migration_master 
set state = ''ROLLBACK'',
confirmed_by = #userid#, confirmed_on = now(), 
modified_by = #userid#, modified_on = now()
where id = #id#;

update techo_notification_master  
set modified_on = now(), modified_by = #userid#, 
state = case 
			when state = ''MARK_AS_MIGRATED_PENDING'' then ''PENDING''
			when state = ''MARK_AS_MIGRATED_RESCHEDULE'' then ''RESCHEDULE''
		end
where state in (''MARK_AS_MIGRATED_PENDING'', ''MARK_AS_MIGRATED_RESCHEDULED'') 
and member_id = #memberid#;

update event_mobile_notification_pending  
set state = ''PENDING'',
modified_on = now(), modified_by = #userid#
where state = ''MARK_AS_MIGRATED_PENDING'' 
and member_id = #memberid#;

update imt_member 
set state = imt_member_state_detail.from_state,
modified_on = now(), modified_by = #userid#
from imt_member_state_detail 
where imt_member.id = #memberid#
and imt_member.state=''com.argusoft.imtecho.member.state.migrated''
and imt_member.current_state = imt_member_state_detail.id;

insert into techo_notification_master (
	notification_type_id, member_id, location_id, schedule_date, 
	state, created_by, created_on, modified_by, modified_on, 
	migration_id, other_details, header
)
select (
	select id from notification_type_master  where code=''READ_ONLY''
), 
#memberid#,
f.location_id,
now(),
''PENDING'',
#userid#,
now(),
#userid#,
now(),
#id#,
concat(
	''Your request for Migration In has been Rejected.'',
	chr(10),
	'' Name : '',
	m.first_name,
	'' '',
	m.middle_name,
	'' '',
	m.last_name,
	chr(10),
	'' Member ID : '',
	m.unique_health_id,
	chr(10),
	'' Family Migrated to : '',
	m.family_id,
	chr(10),
	'' Location Migrated to : '',
	get_location_hierarchy(f.location_id)
),
concat(
	m.unique_health_id,
	'' - '',
	m.first_name,
	'' '',
	m.middle_name,
	'' '',
	m.last_name
) as header
from imt_member m 
inner join imt_family f on f.family_id = m.family_id
where m.id = #memberid#;
',false,'ACTIVE','Rollback to the location from where a member has been migrated from',true,'328a4d40-82c1-4467-bac8-7c958addb832'),
	 (1,'2019-11-25 00:00:00',NULL,NULL,'mytecho_get_all_category_type','NULL','
select * from listvalue_field_value_detail where field_key = ''my_techo_faq_category_type''
',true,'ACTIVE',NULL,true,'ea3191e0-4755-4c9f-98c5-4b13033ecc3b'),
	 (64189,'2019-04-09 20:45:06.781',409,'2019-06-29 17:48:25.338','cm_dashboard_high_risk_mother_report','limit_offset','-----------cm_dashboard_high_risk_mother_report--------
with highriskdata as (
select
	rpadetails.member_id,
	rpadetails.pregnancy_reg_id,
	rpadetails.member_current_location_id as locid,
	to_char(rpadetails.lmp_date, ''DD/MM/YYYY'') as "LMP_DATE",
	rpadetails.pregnancy_reg_id as "MTHR_REG_NO",
	to_char(rpadetails.reg_service_date, ''DD/MM/YYYY'') as "MTHR_REG_DATE",
	to_char(rpadetails.edd, ''DD/MM/YYYY'') as "EDD",
	to_char(rpadetails.anc1, ''DD/MM/YYYY'') as "FIRST_ANC",
	to_char(rpadetails.anc2, ''DD/MM/YYYY'') as "SECOND_ANC",
	to_char(rpadetails.anc3, ''DD/MM/YYYY'') as "THIRD_ANC",
	to_char(rpadetails.anc4, ''DD/MM/YYYY'') as "FORTH_ANC",
	to_char(rpadetails.date_of_delivery, ''DD/MM/YYYY'') as "MTHR_DELIVERY_DATE",
	to_char(rpadetails.death_date, ''DD/MM/YYYY'') as "DEATH_DATE"
from
	rch_pregnancy_analytics_details rpadetails
where
	rpadetails.high_risk_mother = true
	and rpadetails.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')
	and rpadetails.preg_reg_state in (''PENDING'',''PREGNANT'')
order by
	member_id 
#limit_offset# 
	),datawithloc as(
select
	distinct highriskdata.locid as locationid,
	highriskdata.*,
	lm6.english_name as "DIST_NAME",
	lm6.location_code as "DCode",
	lm5.location_code as "Tcode",
	lm5.english_name as "TALUKA_NAME",
	lm4.english_name as "PHC_NAME",
	lm3.english_name as "SUBPHC_NAME",
	lm2.english_name as "VILLAGE_NAME"
from
	highriskdata
join location_hierchy_closer_det lhcd2 on
	highriskdata.locid = lhcd2.child_id
	and lhcd2.parent_loc_type in(''V'',
	''UA'',
	''ANG'')
join location_master lm2 on
	lm2.id = lhcd2.parent_id
join location_master lm3 on
	lm3.id = lm2.parent
join location_master lm4 on
	lm4.id = lm3.parent
join location_master lm5 on
	lm5.id = lm4.parent
join location_master lm6 on
	lm6.id = lm5.parent 
where 
lm2.name not ilike ''%delete%''
and lm3.name not ilike ''%delete%''
and lm4.name not ilike ''%delete%''
and lm5.name not ilike ''%delete%''
and lm6.name not ilike ''%delete%''
),
uch_chc_det as(
select
	t.loc_id,
	health_infrastructure_details.name
from
	health_infrastructure_details,
	(
	select
		location_hierchy_closer_det.child_id as loc_id,
		max(health_infrastructure_details.id) as infrastructure_id
	from
		location_hierchy_closer_det,
		highriskdata,
		health_infrastructure_details
	where
		location_hierchy_closer_det.child_id = highriskdata.locid
		and health_infrastructure_details.type in (1063 /*UPHC*/
		,
		1009 /*CHC*/
		)
		and health_infrastructure_details.location_id = location_hierchy_closer_det.parent_id
	group by
		location_hierchy_closer_det.child_id ) as t
where
	t.infrastructure_id = health_infrastructure_details.id ) select
	datawithloc."DCode",
	datawithloc."Tcode",
	datawithloc."MTHR_REG_DATE",
	datawithloc."LMP_DATE",
	datawithloc."MTHR_REG_NO",
	imt_member.unique_health_id as "Health_ID",
	concat(imt_member.first_name, '' '', imt_member.middle_name, '' '', imt_member.last_name) as "MOTHER_NAME",
	datawithloc."EDD",
	datawithloc."DIST_NAME",
	datawithloc."TALUKA_NAME",
	datawithloc."PHC_NAME",
	datawithloc."SUBPHC_NAME",
	datawithloc."VILLAGE_NAME",
	uch_chc_det.name as "UHC_CHC_NAME",
	imt_member.mobile_number as "CONTACTNO",
	datawithloc."FIRST_ANC",
	datawithloc."SECOND_ANC",
	datawithloc."THIRD_ANC",
	datawithloc."FORTH_ANC",
	datawithloc."MTHR_DELIVERY_DATE",
	datawithloc."DEATH_DATE"
from
	datawithloc
join imt_member on
	datawithloc.member_id = imt_member.id
left join uch_chc_det on
	uch_chc_det.loc_id = datawithloc.locationid;',true,'ACTIVE','To get data for High risk mother report data',true,'5a1379e7-47c1-42b4-9e36-1c59e3f5be1c'),
	 (1,'2019-02-12 00:00:00',NULL,NULL,'retrieve_anc_vaccination_given','id,pregRegDetId','
select * from rch_immunisation_master where member_id = #id# and pregnancy_reg_det_id = #pregRegDetId#
',true,'ACTIVE',NULL,true,'5079e41e-c5bd-445e-a583-617ab06c46ef'),
	 (1,'2019-04-17 10:57:26.254',58981,'2020-05-08 16:42:00.021','mark_as_lfu','outOfState,id,userid','with mem as (
	update migration_master
	set confirmed_by = #userid#, confirmed_on = now(),
	modified_by = #userid#, modified_on = now(), 
	state = ''LFU'',
	out_of_state = #outOfState#
	where id = #id# returning member_id 
)
update imt_member set state = ''com.argusoft.imtecho.member.state.migrated.lfu'' where id = (select * from mem);',false,'ACTIVE','Mark a member as LFU from unresolved migrated out members',true,'02ddb673-8c85-46c7-85bd-3dd3aeabb031'),
	 (1,'2019-05-14 00:00:00',NULL,NULL,'cerebral_palsy_retrieve_immunisation_anc_danger_signs_by_id','id','
with preg_member_ids as (
	select pregnancy_reg_det_id, member_id
	from rch_wpd_mother_master 
	where id = (select wpd_mother_id from rch_wpd_child_master where member_id = #id#)
),anc_danger_signs as (
	select distinct listvalue_field_value_detail.value as dangerous_sign_id,preg_member_ids.member_id
	from preg_member_ids
	inner join rch_anc_master on preg_member_ids.pregnancy_reg_det_id = rch_anc_master.pregnancy_reg_det_id
	and rch_anc_master.member_id = preg_member_ids.member_id
	left join rch_anc_dangerous_sign_rel on rch_anc_master.id = rch_anc_dangerous_sign_rel.anc_id
	left join listvalue_field_value_detail on rch_anc_dangerous_sign_rel.dangerous_sign_id = listvalue_field_value_detail.id
),immunisation_details as (
	select concat(immunisation_given,'' ('',to_char(given_on,''DD-MM-YYYY''),'')'') as immunisation,
	preg_member_ids.member_id
	from rch_immunisation_master
	inner join preg_member_ids on rch_immunisation_master.pregnancy_reg_det_id = preg_member_ids.pregnancy_reg_det_id	
	and preg_member_ids.member_id = rch_immunisation_master.member_id
)
select
string_agg(immunisation,'', '') as immunisation ,string_agg(dangerous_sign_id,'', '') as ancDangerSigns
from preg_member_ids
left join immunisation_details on preg_member_ids.member_id = immunisation_details.member_id
left join anc_danger_signs on preg_member_ids.member_id = anc_danger_signs.member_id
group by preg_member_ids.member_id
',true,'ACTIVE',NULL,true,'296f2472-a05b-41b6-9f70-8591f0bda0f9'),
	 (1,'2019-02-12 00:00:00',NULL,NULL,'retrieve_worker_info_by_location_id','locationId','
select CAST(json_agg(json_build_object(''name'',CONCAT(u.first_name,'' '',u.last_name),''mobileNumber'',u.contact_number)) as text) as "workerDetails"
from um_user u, um_user_location ul where u.id = ul.user_id and ul.state = ''ACTIVE'' and u.state = ''ACTIVE'' and ul.loc_id = #locationId#;
',true,'ACTIVE',NULL,true,'fe6da6db-3a6b-4323-92c6-8d4b856e5fc0'),
	 (1,'2019-03-28 19:04:22.330131',NULL,NULL,'health_infra_retrival_by_type','type','select h.id as id , h.name as name from health_infrastructure_details h where h.type=#type#',true,'ACTIVE','Basic Health Infrastructure retrival list according to type',true,'6ecafcf4-a3dd-4972-8a56-a219b9f2edbb'),
	 (1,'2019-02-12 19:39:20.376',NULL,NULL,'retrieve_call_count_detail_of_highrisk_usr','user_id','with todaycount as 
(
select 
sum(case when is_fhw_called = ''t'' then 1 else 0 end) as fhwtod,
sum(case when is_asha_called = ''t'' then 1 else 0 end) as ashatod,
sum(case when is_beneficiary_called = ''t'' then 1 else 0 end) as beneficiarytod 
from gvk_high_risk_follow_up_responce where gvk_call_response_status = ''com.argusoft.imtecho.gvk.call.success''
and cast(created_on as date) = current_date and created_by = #user_id#
group by is_fhw_called, is_asha_called, is_beneficiary_called
), today_sum as (
select 
sum(todaycount.fhwtod) as fhwtodaycount, 
sum(todaycount.ashatod) as ashatodaycount, 
sum(todaycount.beneficiarytod) as beneficiarytodaycount,
(select count(id) from gvk_high_risk_follow_up_responce where gvk_call_response_status != ''com.argusoft.imtecho.gvk.call.success'' 
and created_by = #user_id# and cast(created_on as date) = current_date) as unsuccessfultodaycount
 from todaycount
), totalcount as (
select 
sum(case when is_fhw_called = ''t'' then 1 else 0 end) as fhwtot,
sum(case when is_asha_called = ''t'' then 1 else 0 end) as ashatot,
sum(case when is_beneficiary_called = ''t'' then 1 else 0 end) as beneficiarytot 
from gvk_high_risk_follow_up_responce where gvk_call_response_status = ''com.argusoft.imtecho.gvk.call.success''
and created_by = #user_id#
group by is_fhw_called, is_asha_called, is_beneficiary_called
), total_sum as (
select 
sum(totalcount.fhwtot) as fhwtotalcount, 
sum(totalcount.ashatot) as ashatotalcount, 
sum(totalcount.beneficiarytot) as beneficiarytotalcount,
(select count(id) from gvk_high_risk_follow_up_responce where gvk_call_response_status != ''com.argusoft.imtecho.gvk.call.success'' 
and created_by = #user_id# ) as unsuccessfultotalcount 
from totalcount
)
select * from today_sum, total_sum;',true,'ACTIVE','Retrieve call count information for highrisk usr',true,'fd9a32ca-d923-4b22-b431-2c0eb0b2ce53'),
	 (1,'2019-02-12 00:00:00',NULL,NULL,'cerebral_palsy_retrieve_delivery_place_by_id','id','
select delivery_place,type_of_delivery from rch_wpd_mother_master where id =
(select wpd_mother_id from rch_wpd_child_master where member_id = #id#)
',true,'ACTIVE',NULL,true,'bb07419d-1082-4177-9882-38182ecd8e8b'),
	 (409,'2019-08-02 16:03:51.328',409,'2019-08-02 16:05:56.511','crs_live_birth_details_between_dates','from_date,to_date','with dates as(
select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end,''MM-DD-YYYY'') as from_date
,to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds'' as to_date
),live_birth_detail as (
select 
rwm.pregnancy_reg_det_id as pregnancy_id
,child.unique_health_id as child_techo_id
,mother.unique_health_id as mother_techo_id
,case when child.gender = ''M'' then true else false end as is_male
,case when child.gender = ''F'' then true else false end as is_female
,case when child.gender not in(''M'',''F'') then true else false end as is_other
,child.family_id as family_id
, to_char(child.dob,''DD/MM/YYYY'') as dob
, child.first_name as child_name
, child.middle_name as father_name
, mother.first_name as mother_name
, rwc.birth_weight as birth_weight
, concat(f.address1,'' , '',f.address2) as address
, concat(f.address1,'' , '',f.address2) as permenant_address
, case when rwm.delivery_place = ''HOSP'' then true else false end as is_hospital_delivery
, case when rwm.delivery_place = ''HOME'' then true else false end as is_home_delivery
, case when rwm.delivery_place not in (''HOME'',''HOSP'') then true else false end as is_other_place_delivery
, hid."name" as hospital_name
,hid.address as hospital_address
,case when f.religion = ''621'' then true else false end as is_hindu_region
,case when f.religion = ''622'' then true else false end as is_muslim_region
,case when f.religion = ''623'' then true else false end as is_christian_region
,case when f.religion = ''640'' then true else false end as is_other_region
,case when mother.education_status = ''701'' then true else false end as is_mother_education_illiterate
,case when mother.education_status in (''702'',''703'') then true else false end as is_mother_education_till_7_class
,case when mother.education_status in (''704'',''705'') then true else false end as is_mother_education_till_12_class
,case when mother.education_status in (''706'') then true else false end as is_mother_education_less_then_graduate
,case when mother.education_status in (''707'',''708'') then true else false end as is_mother_education_graduate
,case when (mother.education_status is null or mother.education_status = ''737'') then true else false end as is_mother_education_not_applicable
,null as father_occupation
,null as mother_occupation
,mother.year_of_wedding - extract(year from mother.dob) as age_marriage
,cast(EXTRACT(year FROM age(child.dob,mother.dob)) as int) as age_at_a_time_of_delivery
,coalesce(rpa.registered_with_no_of_child,0) + 1 as total_child
,coalesce(rpa.registered_with_male_cnt,0) + (case when child.gender = ''M'' then 1 else 0 end) as male_child
,coalesce(rpa.registered_with_female_cnt,0) + (case when child.gender = ''F'' then 1 else 0 end) as female_child
,case when rwm.type_of_hospital in (''897'',''1062'',''899'',''1061'',''895'',''1009'',''890'',''1008'',''894'',''1063'',''892'',''891'',''1012'',''896'',''1007'',''1084'') then true else false end as is_govt_hospital_service
,case when rwm.type_of_hospital in (''893'',''898'',''1013'',''1010'') then true else false end as is_pvt_hospital_service
,case when rwm.delivery_done_by in (''DOCTOR'',''NURSE'',''STAFF_NURSE'',''CY-Doctor'',''ANM'') then true else false end as is_doctor_nurse_anm_service
,case when rwm.delivery_done_by in (''TBA'') then true else false end as is_dayan_service
,case when rwm.delivery_done_by in (''NON_TBA'',''NON-TBA'') then true else false end as is_other_service
,rwm.location_id 
,(child.dob - rpr.lmp_date) /7 as del_week 
,case when rwm.type_of_delivery = ''CAESAREAN'' then true else false end as is_cesarean
,case when rwm.type_of_delivery in (''ASSIT'',''ASSIST'') then true else false end as is_vacuum
,case when rwm.type_of_delivery in (''NORMAL'') then true else false end as is_normal

from 
(select * from rch_wpd_mother_master,dates where created_on between dates.from_date and dates.to_date) rwm
inner join rch_wpd_child_master rwc on rwm.pregnancy_outcome = ''LBIRTH'' and
rwc.wpd_mother_id = rwm.id   
left join rch_pregnancy_analytics_details rpa on rpa.pregnancy_reg_id = rwm.pregnancy_reg_det_id
inner join rch_pregnancy_registration_det rpr on rpr.id = rwm.pregnancy_reg_det_id
inner join imt_member child on child.id = rwc.member_id
inner join imt_member mother on rwm.member_id = mother.id
inner join imt_family f on f.family_id = mother.family_id
left join health_infrastructure_details hid on hid.id = rwm.health_infrastructure_id
),father_detail as (
select t.child_id,case when father.education_status = ''701'' then true else false end as is_father_education_illiterate
,case when father.education_status in (''702'',''703'') then true else false end as is_father_education_till_7_class
,case when father.education_status in (''704'',''705'') then true else false end as is_father_education_till_12_class
,case when father.education_status in (''706'') then true else false end as is_father_education_less_then_graduate
,case when father.education_status in (''707'',''708'') then true else false end as is_father_education_graduate 
,case when (father.education_status is null or father.education_status = ''737'') then true else false end as is_father_education_not_applicable
from (
select lbd.child_techo_id as child_id,max(m.id) as id from imt_member m,live_birth_detail lbd where m.family_id = lbd.family_id and m.first_name = lbd.father_name
group by lbd.child_techo_id ) as t,imt_member father where father.id = t.id
),location_detail as (
select t.location_id,t.district_name,t.taluka_name,t.village_name,t.district_lgd_code,t.taluka_lgd_code,t.village_lgd_code
,case  when t.is_village = 1 then true else false end as is_village
,case  when t.is_urban = 1 then true else false end as is_urban
,hi.nin as sub_center_code
from (
select lh.child_id as location_id
,max(case when lh.parent_loc_type in (''C'',''D'') then lm.name else null end) as district_name
,max(case when lh.parent_loc_type in (''B'',''Z'') then lm.name else null end) as taluka_name
,max(case when lh.parent_loc_type in (''V'',''ANG'') then lm.name else null end) as village_name
,max(case when lh.parent_loc_type in (''C'',''D'') then lm.lgd_code else null end) as district_lgd_code
,max(case when lh.parent_loc_type in (''B'',''Z'') then lm.lgd_code else null end) as taluka_lgd_code
,max(case when lh.parent_loc_type in (''V'',''ANG'') then lm.lgd_code else null end) as village_lgd_code
,max(case when lh.parent_loc_type in (''V'') then 1 else 0 end) as is_village
,max(case when lh.parent_loc_type in (''ANG'') then 1 else 0 end) as is_urban
,max(case when lh.parent_loc_type in (''SC'') then lm.id else null end) as sub_centre_id
from live_birth_detail lbd 
inner join location_hierchy_closer_det lh on lh.child_id = lbd.location_id
inner join location_master lm on lh.parent_id = lm.id
group by  lh.child_id
) as t 
left join health_infrastructure_details hi on hi.location_id = t.sub_centre_id
)
select 
pregnancy_id as "pregnancyId"
,child_techo_id as "childTechoId"
,mother_techo_id as "motherTechoId"
,is_male as "isMale"
,is_female as "isFemale"
,is_other as "isOther"
,dob as "dob"
,child_name as "childName"
,father_name as "fatherName"
,mother_name as "motherName"
,birth_weight as "birthWeight"
,address as "address"
,permenant_address as "permenantAddress"
,is_hospital_delivery as "isHospitalDelivery"
,is_home_delivery as "isHomeDelivery"
,is_other_place_delivery as "isOtherPlaceDelivery"
,hospital_name as "hospitalName"
,hospital_address as "hospitalAddress"
,is_hindu_region as "isHinduRegion"
,is_muslim_region as "isMuslimRegion"
,is_christian_region as "isChristianRegion"
,is_other_region as "isOtherRegion"
,is_mother_education_illiterate as "isMotherEducationIlliterate"
,is_mother_education_till_7_class as "isMotherEducationTill7Class"
,is_mother_education_till_12_class as "isMotherEducationTill12Class"
,is_mother_education_less_then_graduate as "isMotherEducationLessThenGraduate"
,is_mother_education_graduate as "isMotherEducationGraduate"
,is_mother_education_not_applicable  as "isMotherEducationNotApplicable"
/*,father_occupation as "fatherOccupation"
,mother_occupation as "motherOccupation"*/
,age_marriage as "ageAtTimeOfMarriage"
,age_at_a_time_of_delivery as "ageAtTimeOfDelivery"
,total_child as "totalChild"
,male_child as "maleChild"
,female_child as "femaleChild"
,is_govt_hospital_service as "isGovtHospitalService"
,is_pvt_hospital_service as "isPvtHospitalService"
,is_doctor_nurse_anm_service as "isDoctorNurseAnmService"
,is_dayan_service as "isDayanService"
,is_other_service as "isOtherService"
,del_week as "deliveryWeek"
,is_cesarean as "isCesareanDelivey"
,is_normal as "isNoramlDelivey"
,is_vacuum as "isVacuum"

,is_father_education_illiterate as "isFatherEducationIlliterate"
,is_father_education_till_7_class as "isFatherEducationTill7Class"
,is_father_education_till_12_class as "isFatherEducationTill12Class"
,is_father_education_less_then_graduate as "isFatherEducationLessThenGraduate"
,is_father_education_graduate as "isFatherEducationGraduate"
,is_father_education_not_applicable as "isFatherEducationNotApplicable"

,district_name as "districtName"
,taluka_name as "talukaName"
,village_name as "villageName"
,district_lgd_code as "districtLgdCode"
,taluka_lgd_code as "talukaLgdCode"
,village_lgd_code as "villageLgdCode"
,is_village as "isVillage"
,is_urban as "isUrban"
,sub_center_code as "subCenterCode"

from 
live_birth_detail lbd
left join father_detail fd on fd.child_id = lbd.child_techo_id
left join location_detail ld on ld.location_id = lbd.location_id;',true,'ACTIVE',NULL,true,'297e8768-4d2a-4f80-986c-ee0a65638b08'),
	 (60512,'2020-04-13 00:00:00',60512,'2020-11-24 14:44:10.402','emo_dashboard_retrieve_approved_lab_test','searchText,offset,limit,loggedInUserId','with idsp_screening as (
	select
	clt.id as "id",
        clt.source as "source",
	(case when f.area_id is not null then f.area_id else f.location_id end)   as loc_id,
	m.family_id,
	m.id as member_id,
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name || '' ('' || m.unique_health_id || '')'' || ''<br>'' || m.family_id as member_det,
	concat(to_char(m.dob, ''DD/MM/YYYY''),''('',EXTRACT(YEAR FROM age(m.dob)),'')'') as dob,
	(case when ref_by.id is null then ''N/A'' 
		else concat(concat_ws('' '',ref_by.first_name,ref_by.middle_name,ref_by.last_name),'' ('',ref_by.contact_number,'')'',''<BR>('',ref_by.user_name,'') ('',urm.name,'')'') end) as reffer_by,
	
	(case when idsp.is_cough = 1 then true else false end) as is_cough,
	(case when idsp.is_any_illness_or_discomfort = 1 then true else false end) as is_any_illness_or_discomfort,
	(case when idsp.is_breathlessness = 1 then true else false end) as breathlessness,
	(case when idsp.is_fever = 1 then true else false end) as is_fever,
	(case when idsp.has_travel = 1 then ''Local'' 
		when idsp.has_travel=2 then concat(''International'',(case when idsp.country is not null then concat('' ('',idsp.country,'')'') end))
		else ''No'' end) as travel,
	concat_ws('','', address1, address2) as address,
	m.mobile_number as contact_person,
	clt.lab_test_status
	from covid19_lab_test_recommendation clt
	inner join imt_member m on clt.member_id = m.id
	inner join imt_family f on f.family_id = m.family_id
	left join um_user ref_by on ref_by.id = clt.reffer_by
       left join um_role_master urm on urm.id = ref_by.role_id
	left join idsp_screening_analytics idsp on clt.member_id = idsp.member_id
	where clt.lab_test_status in (''APPROVE'',''SYSTEM_APPROVE'')
        and (''#searchText#'' = ''null'' OR clt.search_text ilike ''%#searchText#%'')
	and clt.refer_health_infra_id is null
	and clt.location_id in (select child_id from location_hierchy_closer_det lhc where parent_id in (select loc_id from um_user_location ul where ul.state = ''ACTIVE'' and ul.user_id = ''#loggedInUserId#''))
	order by idsp.member_id
	limit #limit# offset #offset#
),contact_person as (
	select distinct on(a.member_id) a.member_id as id,
	 concat( contact_person.first_name, '' '', contact_person.middle_name, '' '', contact_person.last_name,
		'' ('', case when contact_person.mobile_number is null then ''N/A'' else contact_person.mobile_number end, '')'' ) as contactPersonMobileNo
	from imt_member contact_person
	inner join idsp_screening a on a.family_id = contact_person.family_id
	where contact_person.basic_state in (''NEW'',''IDSP'',''VERIFIED'') and contact_person.id != a.member_id and a.contact_person is null
	order by a.member_id,contact_person.dob
),
loc as (
	select distinct loc_id from idsp_screening
),
loc_det as (
	select loc.loc_id, get_location_hierarchy_from_ditrict(loc.loc_id) as aoi
	from loc
)/*, fhw_det as (
	select loc.loc_id,
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>''
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id in (select id from um_role_master where name in (''MO UPHC'', ''MO PHC''))
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)*/
select 
ROW_NUMBER() over () + #offset# as "srNo",
idsp_screening.id as "id",
idsp_screening.source as "source",
idsp_screening.member_det as "memberDetails",
loc_det.aoi as "location",
(case when idsp_screening.contact_person is not null then idsp_screening.contact_person else contact_person.contactPersonMobileNo end) as "contactPersonMobileNo",
idsp_screening.dob as "dob",
idsp_screening.address as "address",
idsp_screening.is_cough as "hasCough",
idsp_screening.is_fever as "hasFever",
idsp_screening.breathlessness as "hasBreathlessness",
idsp_screening.travel as "hasTravelHistory",
idsp_screening.reffer_by as "refferBy",
idsp_screening.lab_test_status as "labTestStatus"
/*fhw_det.fhw as "moDetails"*/
from idsp_screening
left join contact_person on contact_person.id = idsp_screening.id
inner join loc_det on idsp_screening.loc_id = loc_det.loc_id;',true,'ACTIVE',NULL,true,'ad79001b-1b7b-4418-88f4-8b1e725eebba'),
	 (1,'2020-05-11 00:00:00',1,'2020-05-11 00:00:00','retrieve_rch_location_hierarchy','anmolLocationMasterId','
    with recursive parent_rch_locations as (
        select
            alsm."type",
            alsm."name",
            alsm.english_name,
            alsm.rch_code,
            alsm.parent_type,
            alsm.parent_rch_code,
            case
                when alsm.type = ''V'' then 7
                when alsm.type = ''SF'' then 6
                when alsm.type in (''F'', ''FU'') then 5
                when alsm.type = ''T'' then 4
                when alsm.type = ''D'' then 3
                when alsm.type = ''S'' then 1
            end as level
        from
            anmol_location_master alsm
        where
            alsm.id = #anmolLocationMasterId#
        union
        select
            alsm2."type",
            alsm2."name",
            alsm2.english_name,
            alsm2.rch_code,
            alsm2.parent_type,
            alsm2.parent_rch_code,
            case
                when alsm2.type = ''V'' then 7
                when alsm2.type = ''SF'' then 6
                when alsm2.type in (''F'', ''FU'') then 5
                when alsm2.type = ''T'' then 4
                when alsm2.type = ''D'' then 3
                when alsm2.type = ''S'' then 1
            end as level
        from
            anmol_location_master alsm2
        inner join parent_rch_locations pl on
            alsm2.rch_code = pl.parent_rch_code
            and
            case
                when pl.type = ''V'' then alsm2.type = ''SF''
                when pl.type = ''SF'' then alsm2.type in (''F'', ''FU'')
                when pl.type in (''F'', ''FU'') then alsm2.type = ''T''
                when pl.type = ''T'' then alsm2.type = ''D''
                when pl.type = ''D'' then alsm2.type = ''S''
                when pl.type = ''S'' then false
                else false
            end
    )
    select
        string_agg(prl.name,'' > '' order by prl.level) as "rchLocationHierarchy"
    from
        parent_rch_locations prl;
',true,'ACTIVE','Retrieve RCH Location Hierarchy',true,'8bfb66dd-a414-4519-833f-dfaa9ab4f429'),
	 (1,'2019-11-25 00:00:00',NULL,NULL,'mytecho_delete_faq_category','is_active,is_archive,id','
update listvalue_field_value_detail set last_modified_on = now(), is_active = #is_active# , is_archive = #is_archive# where id = #id# and not exists(
select id from mytecho_faq_details where category = ''#id#'')
',false,'ACTIVE',NULL,true,'70237d6d-18eb-42cf-a98c-ef07bf37cf90'),
	 (409,'2019-05-07 18:07:27.717',66522,'2019-09-05 18:52:20.832','state_of_health_get_imr_detail','limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
rcad.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
to_char(rcad.last_child_service_date,''dd-MM-yyyy'') as "LastServiceData",
rcad.loc_id
from rch_child_analytics_details rcad,imt_member m
where rcad.loc_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and rcad.death_date >= current_date - interval ''30 days''
and rcad.is_infant_death
and m.id = rcad.member_id 
limit #limit#),
family_head as (
	select a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
	where family_head = true
),
contact_person as (
	select a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from user_location_detail uld 
	inner join anmLocation a on  uld.location = a.location_id
	inner join um_user uu on uu.id = uld.user_id 
	group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
	select max(service_date) as service_date,services.member_id from rch_member_services services
	inner join analytics a on a.member_id = services.member_id
	group by services.member_id 
),
lastServiceUnique as(
	select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
	where service.member_id = last.member_id
	group by service.member_id, last.service_date
),
lastServiceDetails as (
	select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
	service.location_id,
	location.name as locationName,
	case when service.service_type =''FHW_LMP'' then ''LMP Visit''
		when  service.service_type =''FHW_ANC'' then ''ANC Visit''
		  when service.service_type = ''FHW_PNC'' then ''PNC Visit''
		  when service.service_type = ''FHW_CS'' then ''Child Service''
		  when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
	end as service_type,
	service.member_id 
	from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id
	
	inner join location_master location on service.location_id = location.id
	
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName"
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id',true,'ACTIVE',NULL,true,'26a9c003-d196-4f0f-b564-faa99fbad875'),
	 (58981,'2019-09-02 14:24:40.615',58981,'2019-09-02 14:25:00.322','mob_asha_work_register_detail_lmp','visitId','with const as (
	select cast(''HOME'' as text) as const, cast(''Home'' as text) as name
	union
	select cast(''ON_THE_WAY'' as text) as const, cast(''On The Way'' as text) as name
	union
	select cast(''HOSP'' as text) as const, cast(''Hospital'' as text) as name
	union
	select cast(''FMLSTR'' as text) as const, cast(''FEMALE STERILIZATION'' as text) as name
	union
	select cast(''MLSTR'' as text) as const, cast(''MALE STERILIZATION'' as text) as name
	union
	select cast(''IUCD5'' as text) as const, cast(''IUCD- 5 YEARS'' as text) as name
	union
	select cast(''IUCD10'' as text) as const, cast(''IUCD- 10 YEARS'' as text) as name
	union
	select cast(''CONDOM'' as text) as const, cast(''CONDOM'' as text) as name
	union
	select cast(''ORALPILLS'' as text) as const, cast(''ORAL PILLS'' as text) as name
	union
	select cast(''CHHAYA'' as text) as const, cast(''CHHAYA'' as text) as name
	union
	select cast(''ANTARA'' as text) as const, cast(''ANTARA'' as text) as name
	union
	select cast(''CONTRA'' as text) as const, cast(''EMERGENCY CONTRACEPTIVE PILLS'' as text) as name
	union
	select cast(''PPIUCD'' as text) as const, cast(''PPIUCD'' as text) as name
	union
	select cast(''PAIUCD'' as text) as const, cast(''PAIUCD'' as text) as name
	union
	select cast(''NONE'' as text) as const, cast(''NONE'' as text) as name	
)
select 
concat(m.first_name, '' '', m.middle_name, '' '', m.last_name) as "Member name",
m.unique_health_id as "Health Id",
m.family_id as "Family Id",
cast(age(m.dob) as text) as "Age",
cast(l.year as text) as "Marriage Year",
to_char(l.service_date, ''DD/MM/YYYY'') as "Service date",
to_char(l.lmp, ''DD/MM/YYYY'') as "LMP date",
l.phone_number as "Phone Number",
case when l.is_pregnant = true then ''Yes'' when l.is_pregnant = false then ''No'' else null end as "Is pregnant",
case when l.pregnancy_test_done = true then ''Yes'' when l.pregnancy_test_done = false then ''No'' else null end as "Pregnancy test done",
fp.name as "Family planning method",
case when l.fp_insert_operate_date != null then to_char(l.fp_insert_operate_date, ''DD/MM/YYYY'') else null end as "Family planing method insert/operate date",
to_char(l.death_date, ''DD/MM/YYYY'') as "Death date",
dp.name as "Death Place",
l.death_reason as "Death Reason"
from rch_asha_lmp_follow_up l
inner join imt_member m on l.member_id = m.id
left join const fp on fp.const = l.family_planning_method
left join const dp on dp.const = l.place_of_death
where l.id = #visitId#',true,'ACTIVE',NULL,true,'2c1d6279-5ae0-4d4b-91e9-514b94e1f7fd'),
	 (409,'2019-08-02 16:21:26.704',409,'2019-08-02 16:56:50.422','crs_still_birth_details_by_techo_health_id','techo_health_id','with still_birth_detail as (
select 
rwm.pregnancy_reg_det_id as pregnancy_id
,mother.unique_health_id as mother_techo_id
,case when rwc.gender = ''M'' then true else false end as is_male
,case when rwc.gender = ''F'' then true else false end as is_female
,case when rwc.gender not in(''M'',''F'') then true else false end as is_other
,mother.family_id as family_id
, to_char(rwc.date_of_delivery,''DD/MM/YYYY'') as dob
, mother.middle_name as father_name
, mother.first_name as mother_name
, rwc.birth_weight as birth_weight
, concat(f.address1,'' , '',f.address2) as address
, concat(f.address1,'' , '',f.address2) as permenant_address
, case when rwm.delivery_place = ''HOSP'' then true else false end as is_hospital_delivery
, case when rwm.delivery_place = ''HOME'' then true else false end as is_home_delivery
, case when rwm.delivery_place not in (''HOME'',''HOSP'') then true else false end as is_other_place_delivery
, hid."name" as hospital_name
,hid.address as hospital_address
,case when f.religion = ''621'' then true else false end as is_hindu_region
,case when f.religion = ''622'' then true else false end as is_muslim_region
,case when f.religion = ''623'' then true else false end as is_christian_region
,case when f.religion = ''640'' then true else false end as is_other_region
,case when mother.education_status = ''701'' then true else false end as is_mother_education_illiterate
,case when mother.education_status in (''702'',''703'') then true else false end as is_mother_education_till_7_class
,case when mother.education_status in (''704'',''705'') then true else false end as is_mother_education_till_12_class
,case when mother.education_status in (''706'') then true else false end as is_mother_education_less_then_graduate
,case when mother.education_status in (''707'',''708'') then true else false end as is_mother_education_graduate
,case when (mother.education_status is null or mother.education_status = ''737'') then true else false end as is_mother_education_not_applicable
,null as father_occupation
,null as mother_occupation
,mother.year_of_wedding - extract(year from mother.dob) as age_marriage
,cast(EXTRACT(year FROM age(rwc.date_of_delivery,mother.dob)) as int) as age_at_a_time_of_delivery
,coalesce(rpa.registered_with_no_of_child,0) + 0 as total_child
,coalesce(rpa.registered_with_male_cnt,0) as male_child
,coalesce(rpa.registered_with_female_cnt,0)  as female_child
,case when rwm.type_of_hospital in (''897'',''1062'',''899'',''1061'',''895'',''1009'',''890'',''1008'',''894'',''1063'',''892'',''891'',''1012'',''896'',''1007'',''1084'') then true else false end as is_govt_hospital_service
,case when rwm.type_of_hospital in (''893'',''898'',''1013'',''1010'') then true else false end as is_pvt_hospital_service
,case when rwm.delivery_done_by in (''DOCTOR'',''NURSE'',''STAFF_NURSE'',''CY-Doctor'',''ANM'') then true else false end as is_doctor_nurse_anm_service
,case when rwm.delivery_done_by in (''TBA'') then true else false end as is_dayan_service
,case when rwm.delivery_done_by in (''NON_TBA'',''NON-TBA'') then true else false end as is_other_service
,rwm.location_id 
,(cast(rwc.date_of_delivery as date) - rpr.lmp_date)/7 as del_week 
from 
(select * from rch_wpd_mother_master where member_id = (select id from imt_member where unique_health_id = ''#techo_health_id#'') and pregnancy_outcome = ''SBIRTH'' order by id desc limit 1) rwm
inner join rch_wpd_child_master rwc on rwm.pregnancy_outcome = ''SBIRTH'' and
rwc.wpd_mother_id = rwm.id 
left join rch_pregnancy_analytics_details rpa on rpa.pregnancy_reg_id = rwm.pregnancy_reg_det_id
inner join rch_pregnancy_registration_det rpr on rpr.id = rwm.pregnancy_reg_det_id
inner join imt_member mother on rwm.member_id = mother.id
inner join imt_family f on f.family_id = mother.family_id
left join health_infrastructure_details hid on hid.id = rwm.health_infrastructure_id
),location_detail as (
select t.location_id,t.district_name,t.taluka_name,t.village_name,t.district_lgd_code,t.taluka_lgd_code,t.village_lgd_code
,case  when t.is_village = 1 then true else false end as is_village
,case  when t.is_urban = 1 then true else false end as is_urban
,hi.nin as sub_center_code
from (
select lh.child_id as location_id
,max(case when lh.parent_loc_type in (''C'',''D'') then lm.name else null end) as district_name
,max(case when lh.parent_loc_type in (''B'',''Z'') then lm.name else null end) as taluka_name
,max(case when lh.parent_loc_type in (''V'',''ANG'') then lm.name else null end) as village_name
,max(case when lh.parent_loc_type in (''C'',''D'') then lm.lgd_code else null end) as district_lgd_code
,max(case when lh.parent_loc_type in (''B'',''Z'') then lm.lgd_code else null end) as taluka_lgd_code
,max(case when lh.parent_loc_type in (''V'',''ANG'') then lm.lgd_code else null end) as village_lgd_code
,max(case when lh.parent_loc_type in (''V'') then 1 else 0 end) as is_village
,max(case when lh.parent_loc_type in (''ANG'') then 1 else 0 end) as is_urban
,max(case when lh.parent_loc_type in (''SC'') then lm.id else null end) as sub_centre_id
from still_birth_detail lbd 
inner join location_hierchy_closer_det lh on lh.child_id = lbd.location_id
inner join location_master lm on lh.parent_id = lm.id
group by  lh.child_id
) as t 
left join health_infrastructure_details hi on hi.location_id = t.sub_centre_id
)
select 
pregnancy_id as "pregnancyId"
,mother_techo_id as "motherTechoId"
,is_male as "isMale"
,is_female as "isFemale"
,is_other as "isOther"
,dob as "dob"
,father_name as "fatherName"
,mother_name as "motherName"
,is_hospital_delivery as "isHospitalDelivery"
,is_home_delivery as "isHomeDelivery"
,is_other_place_delivery as "isOtherPlaceDelivery"
,hospital_name as "hospitalName"
,hospital_address as "hospitalAddress"
,is_mother_education_illiterate  as "isMotherEducationIlliterate"
,is_mother_education_till_7_class as "isMotherEducationTill7Class"
,is_mother_education_till_12_class as "isMotherEducationTill12Class"
,is_mother_education_less_then_graduate as "isMotherEducationLessThenGraduate"
,is_mother_education_graduate  "isMotherEducationGraduate"
,is_mother_education_not_applicable as "isMotherEducationNotApplicable"
,age_at_a_time_of_delivery as "ageAtTimeOfDelivery"
,is_govt_hospital_service as "isGovtHospitalService"
,is_pvt_hospital_service as "isPvtHospitalService"
,is_doctor_nurse_anm_service as "isDoctorNurseAnmService"
,is_dayan_service as "isDayanService"
,is_other_service as "isOtherService"
,del_week as "deliveryWeek"

,district_name as "districtName"
,taluka_name as "talukaName"
,village_name as "villageName"
,district_lgd_code as "districtLgdCode"
,taluka_lgd_code as "talukaLgdCode"
,village_lgd_code as "villageLgdCode"
,is_village as "isVillage"
,is_urban as "isUrban"
,sub_center_code as "subCenterCode"

from 
still_birth_detail lbd
left join location_detail ld on ld.location_id = lbd.location_id;',true,'ACTIVE',NULL,true,'69776d22-97b1-49b4-a6d5-b69e439538fd'),
	 (64189,'2019-04-09 20:44:22.097',64189,'2019-04-09 20:45:38.592','cm_dashboard_arogya_setu_report',NULL,'select 7 as "DIST_CODE",cast(''AHMEDABAD'' as text) as "Location",cast(''Bavla'' as text) as "TAL_NAME",10 as 
"Total_Subcenter",cast(''03/18/2019'' as timestamp) as "FromDt";',true,'ACTIVE','To get data for Arogya Setu report',true,'e73c5be2-7706-4925-a6a3-0cd4be9e8e84'),
	 (409,'2019-05-07 18:07:08.496',66522,'2020-01-03 19:17:11.855','state_of_health_get_mmr_detail','limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
preg.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
preg.member_current_location_id as loc_id
from rch_pregnancy_analytics_details preg,imt_member m
where preg.member_current_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and preg.death_date >= current_date - interval ''30 days''
and preg.maternal_detah
and m.id = preg.member_id 
limit #limit#),
family_head as (
	select a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
	where family_head = true
),
contact_person as (
	select a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
inner join anmLocation a on  uld.loc_id = a.location_id
inner join um_user uu on uu.id = uld.user_id 
where 
uld.state = ''ACTIVE'' and uu.state=''ACTIVE'' and
uu.role_id in (select id from um_role_master where code =''FHW'' )
group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
	select max(service_date) as service_date,services.member_id from rch_member_services services
	inner join analytics a on a.member_id = services.member_id
	group by services.member_id 
),
lastServiceUnique as(
	select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
	where service.member_id = last.member_id
	group by service.member_id, last.service_date
),
lastServiceDetails as (
	select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
	service.location_id,
	location.name as locationName,
	case when service.service_type =''FHW_LMP'' then ''LMP Visit''
		when  service.service_type =''FHW_ANC'' then ''ANC Visit''
		  when service.service_type = ''FHW_PNC'' then ''PNC Visit''
		  when service.service_type = ''FHW_CS'' then ''Child Service''
		  when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
	end as service_type,
	service.member_id 
	from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id
	
	inner join location_master location on service.location_id = location.id
	
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName"
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id',true,'ACTIVE',NULL,true,'b316e63f-c9ee-443e-a0e6-7013ac4da725'),
	 (74909,'2020-04-30 00:00:00',74909,'2020-04-30 00:00:00','delete_soh_element_permissions_detail','ref_id','delete
from
	soh_element_permissions
where
	id = #ref_id#',false,'ACTIVE',NULL,true,'b325b212-f79e-4692-8180-8566456a76a5'),
	 (74909,'2020-04-30 00:00:00',74909,'2020-04-30 00:00:00','insert_default_permission_in_soh_element',NULL,'insert
	into
		soh_element_permissions( element_id, permission_type )
		select id, ''ALL'' from soh_element_configuration where element_name != ''COVID_STATUS_REPORT''',false,'ACTIVE',NULL,true,'f17f1063-859b-41de-ac13-3a7ce7581978'),
	 (1,'2020-05-11 00:00:00',1,'2020-05-11 00:00:00','opd_search_mytecho_referred_patients_by_location_id','offSet,limit,locationId','
    with top_filtered_members as (
        select
        mytecho_dump.mt_member_id,
        max(mytecho_dump.id) as id
        from mytecho_covid_symptom_checker_dump mytecho_dump
        left join rch_opd_member_registration romr on mytecho_dump.member_id = romr.member_id and romr.reference_type = ''MYTECHO_REF''
        where
        mytecho_dump.member_id is not null
        and romr.id is null
        and (
            cast(cast(mytecho_dump.data as json) -> ''fever'' as text) = ''true''
            or cast(cast(mytecho_dump.data as json) -> ''cough'' as text) = ''true''
            or cast(cast(mytecho_dump.data as json) -> ''shortOfBreath'' as text) = ''true''
        )
        and mytecho_dump.location_id in (select child_id from location_hierchy_closer_det where parent_id = #locationId#)
        group by mytecho_dump.mt_member_id
        order by mytecho_dump.mt_member_id
        limit #limit# offset #offSet#
    )
    select
    mytecho_dump.id as "mtCovidSymptomCheckerId",
    mytecho_dump.member_id as "memberId",
    mytecho_dump.mt_member_id as "mtMemberId",
    mytecho_dump.name as "name",
    mytecho_dump.mobile_number as "mobileNumber",
    mytecho_dump.location_id as "locationId",
    get_location_hierarchy(mytecho_dump.location_id) as "locationHierarchy",
    imt_member.unique_health_id as "uniqueHealthId",
    imt_member.family_id as "familyId",
    imt_member.dob as "dob",
    cast(age(imt_member.dob) as text) as "age"
    from top_filtered_members
    inner join mytecho_covid_symptom_checker_dump mytecho_dump on top_filtered_members.id = mytecho_dump.id
    inner join imt_member on imt_member.id = mytecho_dump.member_id
    inner join imt_family on imt_member.family_id = imt_family.family_id;
',true,'ACTIVE','OPD Search MyTeCHO Referred Patients By Location ID',true,'0b54654c-6ace-48e5-9776-edbade53d1af'),
	 (-1,'2018-07-17 16:04:57.481',66522,'2019-06-14 11:03:54.493','family_move_location_by_familyids','user_id,family_ids,location_id','update public.imt_family set location_id=#location_id# ,modified_by =#user_id#,modified_on=now(), area_id=null
where family_id in(#family_ids#);',false,'ACTIVE','It will call User move family list to another location.',true,'cd365b0f-6037-4730-991a-743a19ab0e5c'),
	 (1,'2019-06-25 00:00:00',NULL,NULL,'mark_as_chiranjeevi','wpdId','
update rch_wpd_mother_master
set type_of_hospital = 892
where id = #wpdId#
',false,'ACTIVE',NULL,true,'adfacafa-bce3-48e5-b976-f1a32edc7195'),
	 (75398,'2020-04-18 00:00:00',75398,'2020-04-18 00:00:00','covid19_admin_transfer_hospital','admissionId,healthInfaId','update covid19_admission_detail
set health_infra_id = #healthInfaId#
where id=#admissionId#',false,'ACTIVE',NULL,true,'bfe9c138-037d-4790-81df-979860b94713'),
	 (58981,'2019-09-02 14:24:19.533',58981,'2019-09-02 14:24:24.812','mob_asha_work_register_detail','from_date,to_date,offset,limit,location_id','with loc as (
	select child_id as loc_id from location_hierchy_closer_det where parent_id = #location_id#
), dates as (
	select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_date
), service_type as (
	select ''ASHA_LMP'' as type, ''LMP Follow Up'' as name
	union
	select ''ASHA_ANC'', ''ANC''
	union
	select ''ASHA_WPD'', ''WPD''
	union
	select ''ASHA_PNC'', ''PNC''
	union
	select ''ASHA_CS'', ''Child Services''
	union
	select ''NCD_CBAC'', ''CBAC Entry''
	union
	select ''ASHA_NPCB'', ''NPCB Screening''
), det as (
	select * from rch_asha_member_services
	inner join loc on rch_asha_member_services.location_id = loc.loc_id
	inner join dates on rch_asha_member_services.service_date between dates.from_date and dates.to_date
	order by service_date desc
	limit #limit# offset #offset#
)
select 
to_char(det.service_date, ''DD/MM/YYYY'') as "Service Date",
service_type.name as "Service Provided",
concat(m.first_name, '' '', m.middle_name, '' '', m.last_name) as "Member Name",
m.unique_health_id as "Health Id",
m.family_id as "Family Id",
det.service_type as "hiddenServiceType",
det.visit_id as "hiddenVisitId"
from det
inner join imt_member m on m.id = det.member_id
inner join service_type on det.service_type = service_type.type',true,'ACTIVE',NULL,true,'48480eba-fc45-4969-a788-3b508266fa47'),
	 (409,'2019-08-02 16:15:58.665',409,'2019-08-02 16:52:19.07','crs_death_details_by_techo_health_id','techo_health_id','with death_detail as (
select 
member_det.unique_health_id as member_techo_id
,f.location_id
,case when member_det.gender = ''M'' then true else false end as is_male
,case when member_det.gender = ''F'' then true else false end as is_female
,case when member_det.gender not in(''M'',''F'') then true else false end as is_other
,member_det.family_id as family_id
, to_char(rmdd.dod,''DD/MM/YYYY'') as dod
, concat_ws('' '',member_det.first_name,member_det.middle_name,member_det.last_name) as full_name
, member_det.middle_name as father_husband_name
, mother.first_name as mother_name
,cast(EXTRACT(year FROM age(rmdd.dod,member_det.dob)) as int) as age_time_of_death
, concat(f.address1,'' , '',f.address2) as address
, concat(f.address1,'' , '',f.address2) as permenant_address
, case when rmdd.place_of_death = ''HOSP'' then true else false end as is_hospital_death
, case when rmdd.place_of_death = ''HOME'' then true else false end as is_home_death
, case when rmdd.place_of_death not in (''HOME'',''HOSP'') then true else false end as is_other_place_death
,case when f.religion = ''621'' then true else false end as is_hindu_region
,case when f.religion = ''622'' then true else false end as is_muslim_region
,case when f.religion = ''623'' then true else false end as is_christian_region
,case when f.religion = ''640'' then true else false end as is_other_region
,case when member_det.education_status = ''701'' then true else false end as is_beneficary_education_illiterate
,case when member_det.education_status in (''702'',''703'') then true else false end as is_beneficary_education_till_7_class
,case when member_det.education_status in (''704'',''705'') then true else false end as is_beneficary_education_till_12_class
,case when member_det.education_status in (''706'') then true else false end as is_beneficary_education_less_then_graduate
,case when member_det.education_status in (''707'',''708'') then true else false end as is_beneficary_education_graduate
,case when (mother.education_status is null or mother.education_status = ''737'') then true else false end as is_beneficary_education_not_applicable
,case when (member_det.is_pregnant = true or (cast(rmdd.dod as date) - cast(member_det.last_delivery_date as date) <= 42)) then true else false end as maternal_death
,lov.value as death_reason

from 
rch_member_death_deatil as rmdd
inner join imt_member member_det on member_det.id = rmdd.member_id and member_det.unique_health_id = ''#techo_health_id#''
left join imt_member mother on member_det.mother_id = mother.id
inner join imt_family f on f.family_id = member_det.family_id
left join listvalue_field_value_detail lov on lov.id = cast(rmdd.death_reason as int)

),location_detail as (

select t.location_id,t.district_name,t.taluka_name,t.village_name,t.district_lgd_code,t.taluka_lgd_code,t.village_lgd_code
,case  when t.is_village = 1 then true else false end as is_village
,case  when t.is_urban = 1 then true else false end as is_urban
,hi.nin as sub_center_code
from (
select lh.child_id as location_id
,max(case when lh.parent_loc_type in (''C'',''D'') then lm.name else null end) as district_name
,max(case when lh.parent_loc_type in (''B'',''Z'') then lm.name else null end) as taluka_name
,max(case when lh.parent_loc_type in (''V'',''ANG'') then lm.name else null end) as village_name
,max(case when lh.parent_loc_type in (''C'',''D'') then lm.lgd_code else null end) as district_lgd_code
,max(case when lh.parent_loc_type in (''B'',''Z'') then lm.lgd_code else null end) as taluka_lgd_code
,max(case when lh.parent_loc_type in (''V'',''ANG'') then lm.lgd_code else null end) as village_lgd_code
,max(case when lh.parent_loc_type in (''V'') then 1 else 0 end) as is_village
,max(case when lh.parent_loc_type in (''ANG'') then 1 else 0 end) as is_urban
,max(case when lh.parent_loc_type in (''SC'') then lm.id else null end) as sub_centre_id
from death_detail lbd 
inner join location_hierchy_closer_det lh on lh.child_id = lbd.location_id
inner join location_master lm on lh.parent_id = lm.id
group by  lh.child_id
) as t 
left join health_infrastructure_details hi on hi.location_id = t.sub_centre_id
)
select 
member_techo_id as "memberTechoId"
,is_male as  "isMale"
,is_female as "isFemale"
,is_other as "isOther"
,dod as "dateOfDeath"
,full_name as "fullName"
,father_husband_name as "fatherOrHusbandName"
,mother_name as "motherName"
,age_time_of_death as "ageAtTimeOfDeath"
,address as "currentAddress"
,permenant_address as "permenantAddress"
,is_hospital_death as "isHospitalDeath"
,is_home_death as "isHomeDeath"
,is_other_place_death as "isOtherPlaceDeath"
,is_hindu_region as "isHinduRegion"
,is_muslim_region as "isMuslimRegion"
,is_christian_region as "isChristianRegion"
,is_other_region as "isOtherRegion"
,is_beneficary_education_illiterate as "isBeneficaryEducationIlliterate"
,is_beneficary_education_till_7_class as "isBeneficaryEducationTill7Class"
,is_beneficary_education_till_12_class as "isBeneficaryEducationTill12Class"
,is_beneficary_education_less_then_graduate as "isBeneficaryEducationLessThenGraduate"
,is_beneficary_education_graduate as "isBeneficaryEducationGraduate"
,is_beneficary_education_not_applicable as "isBeneficaryEducationNotApplicable"
,maternal_death as "isMaternalDeath"
,death_reason as "deathReason"

,district_name as "districtName"
,taluka_name as "talukaName"
,village_name as "villageName"
,district_lgd_code as "districtLgdCode"
,taluka_lgd_code as "talukaLgdCode"
,village_lgd_code as "villageLgdCode"
,is_village as "isVillage"
,is_urban as "isUrban"

from 
death_detail lbd
left join location_detail ld on ld.location_id = lbd.location_id limit 1;',true,'ACTIVE',NULL,true,'7a445765-bd8e-47eb-97a7-1351b0ba3eaa'),
	 (58981,'2019-09-02 14:24:54.473',58981,'2019-09-02 14:25:04.39','mob_asha_work_register_detail_anc','visitId','with const as (
	select cast(''SUBCENTER'' as text) as const, cast(''Subcenter'' as text) as name
	union
	select cast(''PHC'' as text) as const, cast(''PHC'' as text) as name
	union
	select cast(''UPHC'' as text) as const, cast(''UPHC'' as text) as name
	union
	select cast(''CHC'' as text) as const, cast(''CHC'' as text) as name
	union
	select cast(''SUBDISTRICTHOSP'' as text) as const, cast(''Sub-District Hospital'' as text) as name
	union
	select cast(''DISTRICTHOSP'' as text) as const, cast(''District Hospital'' as text) as name
	union
	select cast(''TRUSTHOSP'' as text) as const, cast(''Trust Hospital'' as text) as name
	union
	select cast(''CHIRANJEEVIHOSP'' as text) as const, cast(''Private (Chiranjeevi)'' as text) as name
	union
	select cast(''PRIVATEHOSP'' as text) as const, cast(''Private Hospital'' as text) as name
	union
	select cast(''OTHER'' as text) as const, cast(''Other'' as text) as name
	union
	select cast(''PIYAR'' as text) as const, cast(''Piyar'' as text) as name
	union
	select cast(''SASRU'' as text) as const, cast(''Sasru'' as text) as name
	union
	select cast(''ND'' as text) as const, cast(''Not Decided'' as text) as name
	union
	select cast(''NCOU'' as text) as const, cast(''No cough'' as text) as name
	union
	select cast(''LT15D'' as text) as const, cast(''Less than 15 days'' as text) as name
	union
	select cast(''GT15D'' as text) as const, cast(''More than 15 days'' as text) as name
	union
	select cast(''HOME'' as text) as const, cast(''Home'' as text) as name
	union
	select cast(''ON_THE_WAY'' as text) as const, cast(''On The Way'' as text) as name
	union
	select cast(''HOSP'' as text) as const, cast(''Hospital'' as text) as name
)
select 
concat(mem.first_name,'' '',mem.middle_name,'' '',mem.last_name,'' ('',mem.unique_health_id,'')'') as "Member Name",
mem.family_id as "Family Id",
cast(age(mem.dob) as text) as "Age",
mem.mobile_number as "Mobile Number",
mem.account_number as "Bank Account Number",
mem.ifsc as "IFSC Code",
fam.address1 || '' '' || fam.address2 as "Address",
religion.value as "Religion",
caste.value as "Caste",
case when fam.bpl_flag = true then ''Yes'' when fam.bpl_flag = false then ''No'' else null end as "Is BPL",
to_char(reg.reg_date, ''DD/MM/YYYY'') as "Prgenancy Registration Date",
to_char(anc.service_date, ''DD/MM/YYYY'') as "Service Date",
case when anc.family_understands = true then ''Yes'' when anc.family_understands = false then ''No'' else null end as "Family understands",
case when anc.trained_dai_introduced = true then ''Yes'' when anc.trained_dai_introduced = false then ''No'' else null end as "Trained dai introduced",
case when planned_delivery_at.name is not null then planned_delivery_at.name else null end as "Planned Delivery at",
case when expected_delivery_place.name is not null then expected_delivery_place.name else null end as "Expected delivery place",
case when anc.family_understands_danger_signs = true then ''Yes'' when anc.family_understands_danger_signs = false then ''No'' else null end as "Family understands danger signs",
case when anc.money_arrangements = true then ''Yes'' when anc.money_arrangements = false then ''No'' else null end as "Money arrangements in case of complication",
case when anc.accompany_identified = true then ''Yes'' when anc.accompany_identified = false then ''No'' else null end as "Accompany identified",
case when anc.headache = true then ''Yes'' when anc.headache = false then ''No'' else null end as "Headache",
case when anc.visual_disturbances = true then ''Yes'' when anc.visual_disturbances = false then ''No'' else null end as "Visual Disturbances",
case when anc.convulsions = true then ''Yes'' when anc.convulsions = false then ''No'' else null end as "Convulsions",
case when cough.name is not null then cough.name else null end as "Cough",
case when anc.fever = true then ''Yes'' when anc.fever = false then ''No'' else null end as "Fever",
case when anc.chills_rigors = true then ''Yes'' when anc.chills_rigors = false then ''No'' else null end as "Chills Rigors",
case when anc.jaundice = true then ''Yes'' when anc.jaundice = false then ''No'' else null end as "Jaundice",
case when anc.vomitting = true then ''Yes'' when anc.vomitting = false then ''No'' else null end as "Vomitting",
case when anc.vaginal_bleeding = true then ''Yes'' when anc.vaginal_bleeding = false then ''No'' else null end as "Vaginal Bleeding",
case when anc.burning_urination = true then ''Yes'' when anc.burning_urination = false then ''No'' else null end as "Burning Urination",
case when anc.severe_joint_pain = true then ''Yes'' when anc.severe_joint_pain = false then ''No'' else null end as "Severe Joint Pain",
case when vaginal_discharge.name is not null then vaginal_discharge.name else null end as "Vaginal Discharge",
case when anc.leaking_per_vaginally = true then ''Yes'' when anc.leaking_per_vaginally = false then ''No'' else null end as "Leaking per vaginally",
case when anc.easily_tired = true then ''Yes'' when anc.easily_tired = false then ''No'' else null end as "Easily Tired",
case when anc.short_of_breath = true then ''Yes'' when anc.short_of_breath = false then ''No'' else null end as "Short of breath",
case when anc.swelling_feet_hands_face = true then ''Yes'' when anc.swelling_feet_hands_face = false then ''No'' else null end as "Swelling Feet Hands Face",
case when anc.visited_doctor_since_last_visit = true then ''Yes'' when anc.visited_doctor_since_last_visit = false then ''No'' else null end as "Visited Doctor since last visit",
to_char(anc.doctor_visit_date, ''DD/MM/YYYY'') as "Doctor visit date",
case when anc.ifa_tablets_taken is not null then cast(anc.ifa_tablets_taken as text) else null end as "Ifa Tablets taken",
case when anc.conjuctiva_and_palms_pale = true then ''Yes'' when anc.conjuctiva_and_palms_pale = false then ''No'' else null end as "Conjuctiva and Palms pale",
case when anc.death_date is not null then to_char(anc.death_date, ''DD/MM/YYYY'') else null end as "Death Date",
place_of_death.name as "Place Of Death",
death_reason.value as "Death Reason",
anc.other_death_reason as "Other Death Reason"
from rch_asha_anc_master anc 
inner join imt_member mem on anc.member_id = mem.id
inner join imt_family fam on fam.family_id = mem.family_id
left join rch_pregnancy_registration_det reg on anc.pregnancy_reg_det_id = reg.id 
left join listvalue_field_value_detail caste on cast(fam.caste as bigint) = caste.id
left join listvalue_field_value_detail religion on cast(fam.religion as bigint) = religion.id
left join const planned_delivery_at on planned_delivery_at.const = anc.planned_delivery_at
left join const expected_delivery_place on expected_delivery_place.const = anc.expected_delivery_place
left join const cough on cough.const = anc.cough
left join const vaginal_discharge on vaginal_discharge.const = anc.vaginal_discharge
left join const place_of_death on place_of_death.const = anc.death_place
left join listvalue_field_value_detail death_reason on cast(anc.death_reason as bigint) = death_reason.id
where anc.id = #visitId#',true,'ACTIVE',NULL,true,'330c53dc-164a-4abf-bce8-d4e4795896ae'),
	 (60512,'2020-04-22 16:01:05.101',60512,'2020-04-22 16:01:05.101','insert_covid_lab_test_case_history','master_id,member_id,address,gender,person_name,mobile_number,created_by,member_age,location_id','insert into covid_case_contact_history 
(cases_id,member_id,person_name,gender,contact_no,address,age,location_id,state,test_result,created_by,created_on,modified_by,modified_on)
values 
(#master_id#,#member_id#,''#person_name#'',''#gender#'',''#mobile_number#'',''#address#'',#member_age#,#location_id#,''PENDING'',''PENDING'',#created_by#,now(),#created_by#,now());',false,'ACTIVE',NULL,NULL,'c3ecb195-9722-4948-aca0-ed80bbaa3dbf'),
	 (66522,'2019-11-06 15:52:22.796',66522,'2020-03-17 15:39:19.397','state_of_health_get_diabetes_confirm_detail_2','fromDate,toDate,limit,location_id','with analytics_unique as (
	select max(id) as id from ncd_member_diseases_diagnosis dia
	where dia.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and dia.diagnosed_on between ''#fromDate#'' and ''#toDate#''
	and dia.disease_code in (''D'')
        and dia.status in (''CONFIRMED'',''TREATMENT_STARTED'',''REFERRED'')
	group by dia.member_id
),
analytics as(
select m.unique_health_id as "uniqueHealthId",
dia.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
dia.location_id as loc_id,
dia.disease_code,
to_char(dia.diagnosed_on,''dd-MM-yyyy'') as diagnosed_on
from ncd_member_diseases_diagnosis dia,imt_member m, analytics_unique analytics
where dia.id = analytics.id
and m.id = dia.member_id 
and dia.status in (''CONFIRMED'',''TREATMENT_STARTED'',''REFERRED'') limit #limit#
),

family_head_single as (
select max(m2.id) as head_id,imt_member.id as member_id
from analytics
inner join imt_member on analytics.member_id = imt_member.id
inner join imt_family on imt_member.family_id = imt_family.family_id
inner join imt_member m2 on imt_family.family_id = m2.family_id and 
m2.id = imt_family.hof_id
where m2.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'',''TEMPORARY'')
group by imt_member.id
),
family_head as (
	select 
	head.member_id as member_id,
	concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as FamilyHead,
	m2.mobile_number as FamilyHeadMobileNo
	from family_head_single head inner join imt_member m2 on m2.id = head.head_id

),
contact_person as (
	select a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
 	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from user_location_detail uld 
	inner join anmLocation a on  uld.location = a.location_id
	inner join um_user uu on uu.id = uld.user_id 
where uu.role_id in (select id from um_role_master where code =''FHW'' )
	group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
	select max(service_date) as service_date,services.member_id from rch_member_services services
	inner join analytics a on a.member_id = services.member_id
	group by services.member_id 
),
lastServiceUnique as(
	select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
	where service.member_id = last.member_id
	group by service.member_id, last.service_date
),
lastServiceDetails as (
	select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
	service.location_id,
	location.name as locationName,
	case when service.service_type =''FHW_LMP'' then ''LMP Visit''
		when  service.service_type =''FHW_ANC'' then ''ANC Visit''
		  when service.service_type = ''FHW_PNC'' then ''PNC Visit''
		  when service.service_type = ''FHW_CS'' then ''Child Service''
		  when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
	end as service_type,
	service.member_id 
	from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id
	
	inner join location_master location on service.location_id = location.id
	
)
select a.*,
fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName",
case when a.disease_code = ''D'' then ''Diabetes''
     when a.disease_code = ''HT'' then ''Hypertension''
     else ''Other'' end as "diagnosisType",
a.diagnosed_on as "diagnosedOn"    
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id',true,'ACTIVE',NULL,true,'4bf70a8d-b047-41ca-9f19-3ca5bb9f2800'),
	 (78434,'2021-06-10 00:00:00',78434,'2021-06-10 00:00:00','create_sms_blacklist_number','mobileNumber,memberId,status,activeRemark,inactiveRemark,loggedInUserId','
INSERT INTO sms_block_master
(mobile_number, created_by, created_on, modified_by, modified_on, member_id, status, active_remark, inactive_remark)
VALUES
(#mobileNumber#, #loggedInUserId#, now(), #loggedInUserId#, now(), #memberId#, #status#, #activeRemark#, #inactiveRemark#);
',false,'ACTIVE',NULL,true,'fbdaaece-2313-442d-bc6d-eb7c2c92005a'),
	 (57698,'2019-05-23 19:30:31.008',66522,'2019-09-05 18:56:02.415','state_of_health_get_sex_ratio_detail','limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
case when m.gender = ''M'' then ''Male'' when m.gender = ''F'' then ''Female'' end as gender,
preg.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
preg.loc_id as loc_id
from rch_child_analytics_details preg,rch_wpd_child_master wpd,imt_member m
where  preg.member_id = wpd.member_id and preg.loc_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and preg.dob >= current_date - interval ''30 days'' and pregnancy_outcome = ''LBIRTH''


and m.id = preg.member_id 
limit #limit#),
family_head as (
select a.member_id as member_id,
concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
im.mobile_number as FamilyHeadMobileNo
from imt_member im inner join analytics a on a.family_id = im.family_id
where family_head = true
),
contact_person as (
select a.member_id, 
concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
im.mobile_number as contactPersonMobileNo  
from imt_member im 
inner join analytics a on a.family_id = im.family_id 
inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id

),

asha as (
select t.member_id
,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
u.contact_number as ashaMobileNo
from (
select member_id,max(uld.user_id) as user_id
from um_user_location uld 
inner join analytics a on  uld.loc_id = a.loc_id
inner join um_user uu on uu.id = uld.user_id 
where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
group by member_id) as t,um_user u
where t.user_id = u.id

),
anmLocation as (
select parent_id as location_id,a.member_id from location_hierchy_closer_det 
lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
select max(uu.id) as anm_member_id, a.member_id,a.location_id from user_location_detail uld 
inner join anmLocation a on  uld.location = a.location_id
inner join um_user uu on uu.id = uld.user_id 
group by a.location_id,a.member_id
),
anmName as (
select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
uu.contact_number as ANMMobileNo

FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
	select max(service_date) as service_date,services.member_id from rch_member_services services
	inner join analytics a on a.member_id = services.member_id
	group by services.member_id 
),
lastServiceUnique as(
	select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
	where service.member_id = last.member_id
	group by service.member_id, last.service_date
),
lastServiceDetails as (
	select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
	service.location_id,
	location.name as locationName,
	case when service.service_type =''FHW_LMP'' then ''LMP Visit''
		when  service.service_type =''FHW_ANC'' then ''ANC Visit''
		  when service.service_type = ''FHW_PNC'' then ''PNC Visit''
		  when service.service_type = ''FHW_CS'' then ''Child Service''
		  when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
	end as service_type,
	service.member_id 
	from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id
	
	inner join location_master location on service.location_id = location.id
	
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName"

from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id',true,'ACTIVE',NULL,true,'9eb6ce15-0b5e-4b4a-b11b-94985ee1e39e'),
	 (1,'2020-05-11 00:00:00',1,'2020-05-11 00:00:00','opd_search_referred_patients_counts_by_location_id','locationId','
    with idsp_referred_patients_count as (
        select
        count(1) as count
        from idsp_member_screening_details imsd
        left join rch_opd_member_registration romr on imsd.id = romr.reference_id and romr.reference_type = ''IDSP_REF''
        where
        romr.id is null
        and imsd.member_id is not null
        and imsd.location_id in (select child_id from location_hierchy_closer_det where parent_id = #locationId#)
        and (imsd.travel_detail is not null and imsd.travel_detail not in (''NO_TRAVEL''))
        and (imsd.is_cough or imsd.is_fever or imsd.covid_symptoms ilike ''%breathlessness%'')
    ),
    latest_opd_registration as (
        select
        romr.member_id,
        max(romr.created_on) as max_created_on
        from rch_opd_member_registration romr
        inner join idsp_2_member_screening_details imsd on imsd.member_id = romr.member_id
        where romr.reference_type = ''IDSP_REF_2''
        and imsd.member_id is not null
        and imsd.location_id in (select child_id from location_hierchy_closer_det where parent_id = #locationId#)
        and imsd.treatment_started = 0
        group by romr.member_id
    ),
    latest_idsp_screening as (
        select
        imsd.member_id,
        max(imsd.id) as max_id
        from idsp_2_member_screening_details imsd
        where imsd.member_id is not null
        and imsd.location_id in (select child_id from location_hierchy_closer_det where parent_id = #locationId#)
        and imsd.treatment_started = 0
        group by imsd.member_id
    ),
    idsp_2_referred_patients_count as (
        select
        count(1) as count
        from latest_idsp_screening lis
        inner join idsp_2_member_screening_details imsd on imsd.id = lis.max_id
        left join latest_opd_registration lor on lor.member_id = imsd.member_id and lor.max_created_on >= imsd.created_on
        where lor.member_id is null
    ),
    mytecho_referred_patients_count as (
        select
        count(distinct mytecho_dump.mt_member_id) as count
        from mytecho_covid_symptom_checker_dump mytecho_dump
        left join rch_opd_member_registration romr on mytecho_dump.member_id = romr.member_id and romr.reference_type = ''MYTECHO_REF''
        where
        mytecho_dump.member_id is not null
        and romr.id is null
        and (
            cast(cast(mytecho_dump.data as json) -> ''fever'' as text) = ''true''
            or cast(cast(mytecho_dump.data as json) -> ''cough'' as text) = ''true''
            or cast(cast(mytecho_dump.data as json) -> ''shortOfBreath'' as text) = ''true''
        )
        and mytecho_dump.location_id in (select child_id from location_hierchy_closer_det where parent_id = #locationId#)
    ),
    covid_19_referred_travellers_max_screening_id as (
        select
        max(ctsi.id) as id,
        ctsi.covid_info_id as "covidInfoId"
        from covid_travellers_info cti
        inner join covid_travellers_screening_info ctsi on ctsi.covid_info_id = cti.id
        where ctsi.any_symptoms and ctsi.referral_required
        and cti.location_id in (select child_id from location_hierchy_closer_det where parent_id = #locationId#)
        group by covid_info_id
    ),
    covid_19_referred_travellers_count as (
        select
        count(1) as count
        from covid_travellers_info cti
        inner join covid_travellers_screening_info ctsi on ctsi.id = (select id from covid_19_referred_travellers_max_screening_id msi where msi."covidInfoId" = cti.id)
        left join rch_opd_member_registration romr on ctsi.id = romr.reference_id and romr.reference_type = ''COVID_TRAVELLERS_SCREENING''
        where romr.id is null
    )
    select
    (select count from idsp_referred_patients_count) as "idspReferredPatientsCount",
    (select count from idsp_2_referred_patients_count) as "idsp2ReferredPatientsCount",
    (select count from mytecho_referred_patients_count) as "mytechoReferredPatientsCount",
    (select count from covid_19_referred_travellers_count) as "covid19ReferredTravellersCount";
',true,'ACTIVE','OPD Search Referred Patients Counts By Location ID',true,'07f35b68-b4c4-4d95-b962-256bad446975'),
	 (1,'2019-06-20 00:00:00',NULL,NULL,'get_rch_service_register_detail_wpd_child','visitId','
select 
concat(mem.first_name,'' '',mem.middle_name,'' '',mem.last_name,'' ('',mem.unique_health_id,'')'') as "Member Name",mem.family_id as "Family Id",
pregnancy_outcome as "Pregnancy Outcome", child.gender as "Gender", child.birth_weight as "Birth Weight", 
child.member_status as "Child Status",
child.baby_cried_at_birth  as "Is Baby Cried At Birth", 
child.death_date as "Death Date", child.death_reason as "Death Reason", child.place_of_death  as "Place Of Death",
child.type_of_delivery as "Type Of Delivery", 
child.breast_feeding_in_one_hour as "Is Breast Feeding In One Hour" , child.other_congential_deformity as "Other Congential Deformity" ,
child.is_high_risk_case as "Is High Risk Case", child.was_premature as "Was Premature" , child.breast_crawl as "Breast Crawl" , 
child.kangaroo_care as "Kangaroo Care", child.other_danger_sign as "Other Danger Sign"
from rch_wpd_child_master child
inner join imt_member mem on child.member_id = mem.id 
where child.wpd_mother_id = #visitId#
',true,'ACTIVE',NULL,true,'4e2a64f7-61d5-49cd-9c23-86924f79ed87'),
	 (409,'2019-05-07 18:07:44.922',66522,'2020-01-03 20:27:48.658','state_of_health_get_sam_detail','limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
rcad.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
rcad.loc_id
from rch_child_analytics_details rcad,imt_member m
where rcad.loc_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and rcad.sam_child_date >= current_date - interval ''7 days''
and m.id = rcad.member_id 
limit #limit#),
family_head as (
	select a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
	where family_head = true
),
contact_person as (
	select a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
	inner join anmLocation a on  uld.loc_id = a.location_id
	inner join um_user uu on uu.id = uld.user_id 
	group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
	select max(service_date) as service_date,services.member_id from rch_member_services services
	inner join analytics a on a.member_id = services.member_id
	group by services.member_id 
),
lastServiceUnique as(
	select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
	where service.member_id = last.member_id
	group by service.member_id, last.service_date
),
lastServiceDetails as (
	select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
	service.location_id,
	location.name as locationName,
	case when service.service_type =''FHW_LMP'' then ''LMP Visit''
		when  service.service_type =''FHW_ANC'' then ''ANC Visit''
		  when service.service_type = ''FHW_PNC'' then ''PNC Visit''
		  when service.service_type = ''FHW_CS'' then ''Child Service''
		  when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
	end as service_type,
	service.member_id 
	from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id
	
	inner join location_master location on service.location_id = location.id
	
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName"

from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id',true,'ACTIVE',NULL,true,'186d5aee-737d-4723-b0f6-7f0c6775e55b'),
	 (1,'2019-11-20 15:51:19.35289',NULL,NULL,'mytecho_create_user_timeline','member_id,timeline_config_id,event_code,service_date,response_json,loggedInUserId','/*Create User Time Line*/
INSERT INTO mytecho_user_timeline_response_det
(member_id,event_code,mt_timeline_config_id, response_json, created_by, created_on,service_date, status)
VALUES(#member_id#
,case when ''#event_code#'' = ''null'' then null else ''#event_code#'' end
,cast(case when ''#timeline_config_id#'' = ''null'' then null else ''#timeline_config_id#'' end as smallint)
,case when ''#response_json#'' = ''null'' then null else ''#response_json#'' end 
,#loggedInUserId#
,now()
,''#service_date#''
,''ACTIVE'');',false,'ACTIVE',NULL,true,'5622fb8f-ae1c-4d83-840d-5af526e148b9'),
	 (1,'2019-11-20 15:51:19.35289',NULL,NULL,'mytecho_update_user_timeline','service_date,response_json,loggedInUserId,id','update mytecho_user_timeline_response_det
set response_json = case when ''#response_json#'' = ''null'' then null else ''#response_json#'' end 
,modified_by = #loggedInUserId#
,modified_on = now()
,service_date = ''#service_date#''
where id = #id#;',false,'ACTIVE',NULL,true,'cf851a8e-ce13-42f9-ac1b-656c94bb4847'),
	 (1,'2019-04-15 15:33:47.921878',NULL,NULL,'108_pickup_highrisk','from_date,to_date','with highriskusr as (
select id , member_id, gvk_call_state, schedule_date, call_attempt, diseases,
call_response_message,pickup_schedule_date,gvk_call_previous_state,treatment_performed_info 
from gvk_high_risk_follow_up_usr_info where gvk_call_state in 
(''com.argusoft.imtecho.gvk.call.beneficiary-not-visited-phc-pickedup-schedule'',
''com.argusoft.imtecho.gvk.call.pickedup-schedule'',
''com.argusoft.imtecho.gvk.call.beneficiary-not-pickedup-by-108-pickedup-schedule'',
''com.argusoft.imtecho.gvk.call.pickedup-schedule-for-next-visit'')
and pickup_schedule_date between 
	cast(case when #from_date# is null then ''01/10/1970'' else ''#from_date#'' end as date)
	and 
	cast(case when #to_date# is null then ''01/10/1970'' else ''#to_date#'' end as date)
order by pickup_schedule_date desc
)
,display_det as(
select row_number() over() as "Sr no.", 
mem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')'' as "Name of Beneficiary (Member ID)",
case when mem.mobile_number != null then mem.mobile_number else (case when coninfo.mobile_number is null then ''N/A'' else coninfo.mobile_number end) end as "Phone number of Beneficiary",
string_agg(lm.name,''> '' order by lhcd.depth desc) as "Location",
concat(fam.house_number, '','', fam.address1, '','', fam.address2) as "Address",
(case when hrisk.diseases like ''%SAM%'' then hid_sncu.name || ''('' || hid_sncu.address || '')''  
	when hrisk.diseases like ''%Very Low Birth Weight%'' then hid_cmtc.name || ''('' || hid_cmtc.address || '')''
	else '''' end) as "Health Infrastructure" ,
case when fhwnam.first_name is null then ''N/A'' else concat(fhwnam.first_name, '' '', fhwnam.middle_name, '' '', fhwnam.last_name, '' ('', fhwnam.contact_number , '')'') end as "FHW Name",
case when ashanam.first_name is null then ''N/A'' else concat(ashanam.first_name, '' '', ashanam.middle_name, '' '', ashanam.last_name, '' ('', ashanam.contact_number , '')'') end as "Asha Name",
hrisk.diseases as "High Risk", 
to_char(hrisk.pickup_schedule_date, ''DD/MM/YYYY HH:MI:SS AM'') as "Schedule (Date and Time)"
from highriskusr hrisk 
inner join imt_member mem on hrisk.member_id = mem.id 
inner join imt_family fam on mem.family_id = fam.family_id
left join imt_member hof on fam.hof_id = hof.id 
left join imt_member coninfo on fam.contact_person_id = coninfo.id 
left join um_user_location fhw on fam.location_id = fhw.loc_id  and fhw.state = ''ACTIVE'' 
left join um_user fhwnam on fhw.user_id = fhwnam.id and fhwnam.role_id = 30 and fhwnam.state = ''ACTIVE'' 
left join um_user_location ashaLoc on fam.area_id = ashaLoc.loc_id  and ashaLoc.state = ''ACTIVE'' 
left join um_user ashanam on ashaLoc.user_id = ashanam.id and ashanam.role_id = 24 and ashanam.state = ''ACTIVE''
left join location_hierchy_closer_det lhcd on (case when fam.area_id is null then fam.location_id else cast(fam.area_id as bigint) end) = lhcd.child_id 
left join location_master lm on lm.id = lhcd.parent_id 
left join location_type_master loc_name on lm.type = loc_name.type 
left join location_hierchy_closer_det loc_hel on (case when fam.area_id is null then fam.location_id else cast(fam.area_id as bigint) end) = loc_hel.child_id  and loc_hel.parent_loc_type in (''B'',''Z'') 
left join health_infrastructure_details hid_sncu on loc_hel.parent_id = hid_sncu.location_id and ( hid_sncu.is_sncu = true) 
left join health_infrastructure_details hid_cmtc on loc_hel.parent_id = hid_cmtc.location_id and ( hid_cmtc.is_cmtc = true ) 
where mem.basic_state = ''VERIFIED'' 
group by mem.unique_health_id,mem.first_name ,mem.middle_name,mem.last_name,mem.mobile_number,
coninfo.first_name,coninfo.middle_name,coninfo.last_name,coninfo.mobile_number,fam.house_number,fam.address1,fam.address2,
fhwnam.contact_number,fhwnam.first_name,fhwnam.middle_name,fhwnam.last_name,hid_sncu.name,hid_sncu.address,hid_cmtc.name,hid_cmtc.address,
ashanam.contact_number,ashanam.first_name,ashanam.middle_name,ashanam.last_name,hrisk.diseases,hrisk.pickup_schedule_date,hrisk.schedule_date
) select * from display_det;',true,'ACTIVE','It will give the list of beneficiary which will be picked up by 108 on selected date',true,'6fd84126-06e2-4835-a095-257dc3c7c1fb'),
	 (66522,'2019-09-13 10:38:39.593',66522,'2019-09-19 11:34:33.5','state_of_health_data_retrieval_5','timelineType,locationId','with  location_type as(select  level,string_agg(name,''/'') as location_type from location_type_master where 
level=(case when ''#locationId#'' = ''null'' then 1 else (select level+1 from location_type_master t 
inner join location_master m on t.type=m.type where id=2) end)group by level )

select lt.level,lt.type,l.id as "locationId",location_type.location_type as "locationType",
case when l.english_name is not null then l.english_name else l.name end as english_name,element_name as "elementName",
sum(value) as value,target,sum(male) as male,sum(female) as female,
sum(chart1) as chart1,sum(chart2) as chart2,sum(chart3) as chart3,sum(chart4) as chart4, max(days) as days from 
location_type,location_type_master lt,soh_timeline_analytics sh,location_master l where sh.location_id =#locationId# and sh.location_id = l.id 
and l.type = lt.type 
and sh.timeline_type = ''#timelineType#''
group by lt.level, lt.type,
location_type.location_type, sh.target,l.id,l.english_name,sh.element_name order by english_name;',true,'ACTIVE',NULL,true,'e144b7d4-6b84-45d7-8009-650520842dba'),
	 (1,'2019-09-20 00:00:00',NULL,NULL,'mytecho_faq_add','title,created_by,question,content,tags,category,language_code','
INSERT INTO public.mytecho_faq_master(title, created_on, created_by) select ''#title#'', NOW(),#created_by# 
WHERE NOT EXISTS(SELECT id FROM mytecho_faq_master t2 WHERE t2.title = ''#title#'');

INSERT INTO public.mytecho_faq_details(created_by, created_on,  question, content, tags, category, language_code, faq_master_id) 
select  #created_by#, NOW(), ''#question#'', ''#content#'', ''#tags#'', ''#category#'', ''#language_code#'', 
 ms.id from mytecho_faq_master as ms where ms.title = ''#title#'';
',false,'ACTIVE',NULL,true,'476eaf97-1df4-497c-8dec-d09395f08c47'),
	 (60512,'2020-04-17 00:00:00',60512,'2020-04-17 00:00:00','covid19_lab_test_mark_sample_collection_archive','id','update covid19_lab_test_detail
set collection_archive = true
where id = #id#;',false,'ACTIVE',NULL,true,'6fb02b91-ec10-47dc-b2fd-614bf10546e5'),
	 (1,'2019-04-17 10:57:26.254',58981,'2019-05-15 19:12:58.734','mark_migrated_location','locationid,id,userid,memberid','
update public.migration_master
set location_migrated_to = #locationid#, 
migrated_location_not_known = false, confirmed_by = #userid#, 
confirmed_on = now(), status=''PENDING'', 
modified_on = now(), modified_by = #userid#
where id = #id#;

with member_details as(
	select id as "memberId", first_name as "firstName", middle_name as "middleName", last_name as "lastName", 
	family_id as "familyId", unique_health_id as "healthId"
	from imt_member where id = #memberid#
), loc as (
	select location_master.name as "locationDetails" 
	from migration_master, location_master 
	where location_master.id = migration_master.location_migrated_from
	and migration_master.id = #id#
), fhw as (
	select first_name || '' '' || middle_name || '' '' || last_name as "fhwName", 
	contact_number as "fhwPhoneNumber"
	from migration_master mm
	inner join um_user_location ul on mm.location_migrated_from = ul.loc_id and ul.state = ''ACTIVE''
	inner join um_user u on ul.user_id = u.id and u.state = ''ACTIVE'' and u.role_id = 30
	where mm.id = #id#
)
INSERT INTO public.techo_notification_master(
	notification_type_id,  location_id, other_details,schedule_date,state,migration_id,member_id,created_by,created_on,modified_by,modified_on
)
select id, #locationid#, row_to_json(t), now(), ''PENDING'', #id#, #memberid#, #userid#, now(), #userid#, now()
from notification_type_master, (select * from member_details,loc, fhw) t where code = ''MI''
',false,'ACTIVE','Update the location of a member where he/she has been migrated to',true,'416d80cb-39d7-45e2-9d3a-b08183351bef'),
	 (58981,'2019-09-13 18:17:34.71',58981,'2019-09-13 18:17:34.71','generate_asha_lmpfu_notification','member_id,family_id,schedule_date,member_location_id,created_by','INSERT INTO public.techo_notification_master(
	notification_type_id, notification_code, location_id,
	family_id, member_id, schedule_date, due_on, expiry_date, 
	state, created_by, created_on, modified_by, modified_on
)
select (select id from notification_type_master where code = ''ASHA_LMPFU''),
0, #member_location_id#, #family_id#, #member_id#, ''#schedule_date#'',
to_timestamp(''#schedule_date#'', ''MM/DD/YYYY'') + interval ''1'' day * 3, null, 
''PENDING'', #created_by#, now(), #created_by#, now()
from imt_member where id = #member_id# 
and dob between (current_date - interval ''45 year'') and (current_date  - interval ''18 year'') ;',false,'ACTIVE','It will generate the notification for LMP Follow Up Alerts for ASHA',true,'4888c55f-106e-40d8-8886-6f46185ed5ac'),
	 (1,'2020-04-24 00:00:00',1,'2020-04-24 00:00:00','insert_um_user_app_access_details','deviceType,appVersion,appName,imei,userId','insert
	into
		um_user_app_access_details( user_id, app_name, app_version, device_type, created_on, imei_number )
	values(#userId#, ''#appName#'', ''#appVersion#'', ''#deviceType#'', now(),
(case when ''#imei#''  = ''null'' then null else  ''#imei#''  end)
)',false,'ACTIVE',NULL,true,'38f71089-6f14-4d08-910d-265e2b3d1bde'),
	 (1,'2019-04-17 10:57:26.254',58981,'2019-05-21 11:32:55.199','lfu_migrated_membbers_retrival','offset,locationId,limit,userId','
with counts as (
	select member_id, max(id) as id, count(*)
	from migration_master
	group by member_id
), loc as (
	select child_id as loc from location_hierchy_closer_det  where parent_id in (
		case when #locationId# is null then (
			select loc_id from um_user_location where user_id = #userId# and state = ''ACTIVE''
		) else #locationId# end
	)
), migration as (
	select mig.*, counts.count
	from migration_master mig
	inner join counts on mig.member_id = counts.member_id and mig.id = counts.id
	inner join loc on loc.loc = mig.location_migrated_from
	where (mig.out_of_state is null or mig.out_of_state = false) 
	and mig.type = ''OUT'' 
	and mig.migrated_location_not_known = true 
	and mig.state = ''REPORTED''
	order by mig.created_on desc
	limit #limit# offset #offset#
), member_migration as (
	select m.id as memberid, 
	migration.id as migrationid, 
	m.first_name || '' '' || m.last_name as fullname,
	m.mobile_number as contactnumber, 
	migration.location_migrated_from as locationmigratedfrom ,
	migration.location_migrated_to as locationmigratedto,
	migration.migrated_location_not_known as migratedlocationnotknown,
	migration.created_by as createdBy, migration.created_on as createdOn,
	migration.modified_by as modifiedBy, migration.modified_on as modifiedOn,
	migration.family_migrated_from as familyMigratedFrom,
	migration.family_migrated_to as familyMigratedTo,
	m.unique_health_id as uniqueHealthId, count
	from migration, imt_member m
	where m.id=migration.member_id
)
select memberid, migrationid, fullname, contactnumber, uniqueHealthId, count,
locationmigratedto, locationmigratedFrom, familyMigratedTo, familyMigratedFrom,
migratedlocationnotknown, createdBy, createdOn, modifiedOn, modifiedBy, 
get_location_hierarchy(locationmigratedfrom) as locationfromName
from member_migration
',true,'ACTIVE','Unresolved migrated out members retrieval',true,'4378d196-e312-425a-b04f-f65d6afaae6c'),
	 (1,'2019-02-12 14:50:40.893561',NULL,NULL,'member_marked_lfu_retrival','userid,offset,limit,locationId','
with loc as (
	select child_id as loc from location_hierchy_closer_det  where parent_id in (
		case when #locationId# is null then (
			select loc_id from um_user_location where user_id = #userid# and state = ''ACTIVE''
		) else #locationId# end
	)
), migration as (
	select * from migration_master mig
	inner join loc on loc.loc = mig.location_migrated_from
	where type = ''OUT'' and migrated_location_not_known = true and mig.state = ''LFU''
	order by mig.created_on desc
	limit #limit# offset #offset#
), member_migration as(
	select m.mobile_number as contactnumber, m.id as memberid, 
	m.first_name || '' '' || m.last_name as fullname, 
	m.unique_health_id as uniqueHealthId, migration.id as migrationid, 
	migration.location_migrated_from as locationmigratedfrom,
	migration.location_migrated_to as locationmigratedto ,
	migration.migrated_location_not_known as migratedlocationnotknown,
	migration.created_by as createdBy, migration.created_on as createdOn ,
	migration.modified_by as modifiedBy, migration.modified_on as modifiedOn,
	migration.family_migrated_from as familyMigratedFrom,
	migration.family_migrated_from as familyMigratedTo
	from migration, imt_member m
	where m.id = migration.member_id
)
select memberid, fullname, migrationid, locationmigratedto, migratedlocationnotknown,
createdBy, createdOn, modifiedOn, modifiedBy, uniqueHealthId, familyMigratedTo, familyMigratedFrom,
get_location_hierarchy(locationmigratedfrom) as locationfromName 
from member_migration
',true,'ACTIVE','LFU marked member retrieval',true,'ec22f761-f933-47d0-ab7b-37e94e5ec26a'),
	 (1,'2019-09-20 00:00:00',NULL,NULL,'get_faq_list_by_language','language','
select details.* from mytecho_faq_details as details LEFT JOIN mytecho_faq_master as master on details.faq_master_id = master.id where language_code = ''#language#'';
',true,'ACTIVE',NULL,true,'41306dd9-b5fb-45c5-98b7-898dfe2ab032'),
	 (1,'2019-09-20 00:00:00',NULL,NULL,'get_internationalization_language','NULL','
select * from internationalization_language_master;
',true,'ACTIVE',NULL,true,'56e3b9a1-c079-498c-8e38-2ed044ef230c'),
	 (1,'2019-09-20 00:00:00',NULL,NULL,'mytecho_search_doctor_directory','latitude,longitude,limit,pageno','
WITH distanceData AS (
SELECT *, (6371 * acos(cos(radians(#latitude#) ) * cos(radians(latitude)) * 
cos( radians(longitude) - radians(#longitude#) ) + sin( radians(#latitude#)) * 
sin( radians(latitude)))) AS distance FROM mytecho_doctor_directory 
)
select * from distanceData ORDER BY distance LIMIT #limit# OFFSET ( #limit# *( #pageno# - 1 ))
',true,'ACTIVE',NULL,true,'e3832c6f-cc1c-42b7-b0a3-fc12237c0929'),
	 (1,'2019-09-20 00:00:00',63746,'2019-09-21 15:42:38.53','update_mytecho_faq_details','language_code,question,modified_by,id,content,tags','UPDATE mytecho_faq_details 
SET modified_by= #modified_by#, modified_on=NOW(),question=''#question#'', content=''#content#'', tags=''#tags#'', language_code=''#language_code#'' WHERE id=#id# ;',false,'ACTIVE',NULL,true,'5db6d963-8511-464d-9b25-791be46250fc'),
	 (66522,'2019-10-08 10:41:58.981',66522,'2019-10-08 10:41:58.981','faq_get_title_from_master','id','select title from mytecho_faq_master where id = #id#',true,'ACTIVE',NULL,true,'2b8c1d0c-1bb5-4786-b6fd-f9f0e36c0ae7'),
	 (75398,'2020-05-05 00:00:00',75398,'2020-05-05 00:00:00','covid19_dashboard_testing_status_table',NULL,'with admission_wise_counts as (
select covid_admission_detail_id,
count(*) as total_entries,
count(*) filter (where lab_collection_status in (''SAMPLE_COLLECTED'',''SAMPLE_ACCEPTED'',''POSITIVE'',''NEGATIVE'',''INDETERMINATE'')) as samples_collected,
count(*) filter (where lab_collection_status = ''SAMPLE_COLLECTED'') as sample_in_transit,
count(*) filter (where lab_collection_status = ''POSITIVE'') as positive,
count(*) filter (where lab_collection_status = ''NEGATIVE'') as negative,
count(*) filter (where lab_collection_status in (''SAMPLE_ACCEPTED'',''INDETERMINATE'')) as result_pending
from covid19_lab_test_detail
group by covid_admission_detail_id
)select count(*) filter (where samples_collected > 0) as "samplesCollected",
count(*) filter (where sample_in_transit > 0) as "samplesInTransit",
count(*) filter (where positive > 0) as "positive",
count(*) filter (where total_entries = negative) as "negative",
count(*) filter (where result_pending > 0) as "resultPending"
from admission_wise_counts',true,'ACTIVE',NULL,true,'96dd972a-18c2-4b0c-99e5-bb2ffa2acbe1'),
	 (1,'2020-04-30 00:00:00',NULL,NULL,'retrieve_screening_centers_cmtc','userId','
select * from health_infrastructure_details
where id in (select health_infrastrucutre_id from user_health_infrastructure where user_id = #userId# and state = ''ACTIVE'')
and (is_cmtc = true or is_nrc = true or is_sncu = true)
',true,'ACTIVE',NULL,true,'a22a6176-686d-484a-a1a7-ff3a66a8ee3d'),
	 (1,'2019-04-17 10:57:26.254',58981,'2019-05-16 19:57:37.859','migration_resolved_tasks','offset,locationId,limit,userid','
with loc as (
	select child_id as loc from location_hierchy_closer_det  where parent_id in (
		case when #locationId# is null then (
			select loc_id from um_user_location where user_id = #userid# and state = ''ACTIVE''
		) else #locationId# end
	)
), migration as (
	select * from migration_master mig
	inner join loc on loc.loc = mig.location_migrated_from
	where (
		mig.state in (''LFU'',''CONFIRMED'',''ROLLBACK'') 
		or mig.status=''PENDING''
	) 
	and modified_by = #userid# 
	order by mig.created_on desc
	limit #limit# offset #offset#
), member_migration as(
	select  m.mobile_number as contactnumber,migration.state as mig_state,status,
	m.id as memberid, m.first_name || '' '' || m.last_name as fullname, 
	migration.id as migrationid, migration.location_migrated_from as locationmigratedfrom,
	migration.location_migrated_to as locationmigratedto ,
	migration.migrated_location_not_known as migratedlocationnotknown,
	migration.type as migrationtype,
	migration.created_by as createdBy, migration.created_on as createdOn ,
	migration.modified_by as modifiedBy, migration.modified_on as modifiedOn,
	migration.family_migrated_from as familyMigratedFrom,
	migration.family_migrated_from as familyMigratedTo,
	m.unique_health_id as uniqueHealthId
	from migration , imt_member m
	where m.id = migration.member_id
)
select memberid, fullname,
migrationid,locationmigratedto,locationmigratedfrom,migratedlocationnotknown,migrationtype,
createdBy,createdOn,modifiedOn,modifiedBy,uniqueHealthId,familyMigratedTo,familyMigratedFrom,
case when member_migration.status is not null then member_migration.status else member_migration.mig_state end as status ,
get_location_hierarchy(locationmigratedfrom) as locationfromName,
get_location_hierarchy(locationmigratedto) as locationtoname
from member_migration
',true,'ACTIVE','Resolved migration tasks that are done by user',true,'01887ed7-4a6f-4f75-971d-aa450df30c04'),
	 (1,'2019-08-26 00:00:00',409,'2019-08-28 17:19:30.609','get_rch_register_eligible_couple_service_basic_info','from_date,to_date,offset,limit,location_id','
with dates as (
select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'')+interval ''1 day'' - interval ''1 millisecond'' as to_date
),lmp_followup_det as (
select lfu.member_id
,cast(json_agg(json_build_object(''date'',cast(lfu.service_date as date),''contraception_method'',lfu.family_planning_method)) as text) as lmp_visit_info
from rch_lmp_follow_up lfu
inner join dates on lfu.created_on between dates.from_date and dates.to_date
inner join location_hierchy_closer_det lh on lfu.location_id = lh.child_id and lh.parent_id = #location_id#
where
lfu.member_status = ''AVAILABLE''
group by lfu.member_id
),eligible_couple_det as (
select
m.id as member_id
,sum(case when fam_mem.mother_id = m.id then 1 else 0 end) as total_child
,sum(case when fam_mem.mother_id = m.id and fam_mem.gender = ''M''  then 1 else 0 end) as total_male_child
,sum(case when fam_mem.mother_id = m.id and fam_mem.gender = ''F''  then 1 else 0 end) as total_female_child
,sum(case when fam_mem.mother_id = m.id and fam_mem.gender = ''M''
 and fam_mem.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'')  then 1 else 0 end) as total_live_male_child
,sum(case when fam_mem.mother_id = m.id and fam_mem.gender = ''F''
and fam_mem.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'')  then 1 else 0 end) as total_live_female_child
,max(case when similarity(fam_mem.first_name,m.middle_name) > 0.8 then fam_mem.id else null end) as husband_id
,min(case when fam_mem.mother_id = m.id and fam_mem.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'')  then m.dob else null end) as last_child_dob
from lmp_followup_det as eligible_couple
inner join imt_member m on m.id = eligible_couple.member_id
left join imt_member fam_mem on fam_mem.family_id = m.family_id
group by m.id
)
select
m.id as member_id,
m.unique_health_id as unique_health_id,
cast (m.created_on as date)  as registration_date,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name,'' ('',m.unique_health_id,'')'') as  member_name,
EXTRACT(YEAR FROM age(cast(m.dob as date))) as member_current_age,
case when m.year_of_wedding is null then null else m.year_of_wedding - date_part(''year'', m.dob)  end as  member_marriage_age,
m.middle_name as husband_name,
EXTRACT(YEAR FROM age(cast(husband.dob as date))) as husband_current_age,
case when m.year_of_wedding is null then null else m.year_of_wedding - date_part(''year'', husband.dob)  end as  husband_marriage_age,
case
    when (f.address1 is null and f.address2 is null) then ''N/A''
    else
        case
            when f.address1 is null then f.address2
            when f.address2 is null then f.address1
            else concat(f.address1, '','', f.address2)
        end
end as address,
case
	when religion.value = ''HINDU'' then ''Hindu''
	when religion.value = ''CHRISTIAN'' then ''Christian''
	when religion.value = ''MUSLIM'' then ''Muslim''
	when religion.value = ''OTHERS'' then ''Others''
	else religion.value
end as religion,
case
	when caste.value = ''GENERAL'' then ''General''
	else caste.value
end as cast,
case when f.bpl_flag then ''BPL'' end as bpl_apl,
ec.total_male_child as total_given_male_birth,
ec.total_female_child as total_given_female_birth,
ec.total_live_male_child as live_male_birth,
ec.total_live_female_child as live_female_birth,
EXTRACT(YEAR FROM age(cast(ec.last_child_dob as date))) as smallest_child_age,
cast(''Male'' as text) as smallest_child_gender,
lmp_followup_det.lmp_visit_info as lmp_visit_info,
m.date_of_wedding as date_of_wedding
from lmp_followup_det
inner join imt_member m on m.id = lmp_followup_det.member_id
inner join eligible_couple_det ec on lmp_followup_det.member_id = ec.member_id
inner join imt_family f on f.family_id=m.family_id
left join imt_member husband on husband.id =ec.husband_id
left join listvalue_field_value_detail religion on religion.id = cast(f.religion as int)
left join listvalue_field_value_detail caste on caste.id = cast(f.caste as int)
order by m.date_of_wedding
limit #limit# offset #offset#;
',true,'ACTIVE',NULL,true,'bf5cff67-126f-4add-89dc-54da5137d349'),
	 (1,'2019-12-17 17:12:44.442376',NULL,NULL,'mytecho_doctors_near_me_retrieval','pincode','with um_doctor_user as (
 	select um_user.id, um_user.pincode,um_user.first_name,  um_user.last_name , um_user.gender  from public.um_user um_user where um_user.role_id = 203 and um_user.pincode >= (#pincode# - 2) and um_user.pincode <= (#pincode# + 2)
 )
 select
 um_doctor_user.id as id,
 um_doctor_user.pincode as pincode,
 um_doctor_user.first_name as "firstName" ,
 um_doctor_user.last_name as "lastName",
 um_doctor_user.gender as gender,
 hi_detail.address as address,
 hi_detail.mobile_number as "mobileNumber",
 hi_detail.landline_number as "landLineNumber",
 hi_detail.email as email,
 hi_detail.latitude as latitude,
 hi_detail.longitude as longitude
 from  um_doctor_user
 inner join user_health_infrastructure health_infrastructure on health_infrastructure.user_id = um_doctor_user.id
 inner join health_infrastructure_details hi_detail on hi_detail.id = health_infrastructure.health_infrastrucutre_id;',true,'ACTIVE',NULL,true,'985c76cb-4c9e-471d-8988-5f4f040b56ad'),
	 (74841,'2019-07-16 12:05:52.2',74841,'2020-11-10 13:44:55.377','cm_dashboard_pmsma_report','monthyear','--PMSMA Report
with loc_det as (
select lm.id as loc_id,lm.english_name as taluka_name,lm.cm_dashboard_code as taluka_code
,dist.location_code as district_code,dist.english_name as district_name
from location_master lm,location_master dist
where lm.type in (''B'') and lm.parent = dist.id
),dates as (
select to_date(case when ''#monthyear#'' = ''null'' then null else ''#monthyear#'' end,''MM-DD-YYYY'') as from_date 
,to_date(case when ''#monthyear#'' = ''null'' then null else ''#monthyear#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 milliseconds'' as to_date
),pmsma_report_det as (
select lh.parent_id as loc_id
,sum(high_risk_mother_2nd_trimester) as high_risk_mother_2nd_and_3rd_trimester
,sum(total_anc_under_pmsma) as total_anc_received_under_pmsma
,sum(total_beneficiary_under_pmsma_at_least_once) as high_risk_mother_get_anc_under_pmsma_atleast_once
,sum(eligible_high_risk_mother_for_pmsma) as eligible_high_risk_mother_for_pmsma
from rch_pmsma_service_statatics as pmsma , location_hierchy_closer_det lh,dates
where pmsma.month_year between dates.from_date and to_date
and pmsma.location_id = lh.child_id and lh.parent_id in (select loc_id from loc_det)
group by lh.parent_id 
)
select loc_det.district_code ,loc_det.district_name
,loc_det.taluka_code,loc_det.taluka_name
,EXTRACT(YEAR FROM dates.from_date) as year
,EXTRACT(MONTH FROM dates.from_date) as month
,pmsma_report_det.high_risk_mother_2nd_and_3rd_trimester as high_risk_mother_2nd_and_3rd_trimester
,pmsma_report_det.eligible_high_risk_mother_for_pmsma
,pmsma_report_det.total_anc_received_under_pmsma
,pmsma_report_det.high_risk_mother_get_anc_under_pmsma_atleast_once
,pmsma_report_det.high_risk_mother_get_anc_under_pmsma_atleast_once as high_risk_mother_2nd_and_3rd_trimester_given_services_under_pmsma
,0 as "total_volunteer"
from loc_det
inner join dates on true
left join pmsma_report_det on loc_det.loc_id = pmsma_report_det.loc_id
order by district_name;',true,'ACTIVE',NULL,true,'18d16639-d38c-4225-977e-17b1e3a761c8'),
	 (60512,'2020-04-15 00:00:00',409,'2020-04-15 15:49:59.433','covid19_lab_test_dashboard_distinct_health_infra','loggedInUserId','with ids as (
	select
	Distinct ltd.sample_health_infra as id
	from covid19_lab_test_detail ltd
	where
	(((select role_id from um_user where id = #loggedInUserId#) in (59,25,96)) 
	or ltd.sample_health_infra_send_to = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = ''#loggedInUserId#'' and uhi.state = ''ACTIVE'')
	) and ltd.lab_collection_status = ''SAMPLE_COLLECTED''
)
select name_in_english from health_infrastructure_details where id in (select id from ids)',true,'ACTIVE',NULL,true,'1ab28434-7531-4d1d-ab03-46be59ab8b4c'),
	 (409,'2019-05-07 18:08:23.626',66522,'2019-09-05 18:56:14.756','state_of_health_get_lbw_detail','limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
rcad.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
rcad.loc_id
from rch_child_analytics_details rcad,imt_member m
where rcad.loc_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and rcad.dob >= current_date - interval ''30 days''
and rcad.birth_weight <= 2.5 and m.id = rcad.member_id limit #limit#
),
family_head as (
	select a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
	where family_head = true
),
contact_person as (
	select a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
	inner join anmLocation a on  uld.loc_id = a.location_id
	inner join um_user uu on uu.id = uld.user_id 
	group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
	select max(service_date) as service_date,services.member_id from rch_member_services services
	inner join analytics a on a.member_id = services.member_id
	group by services.member_id 
),
lastServiceUnique as(
	select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
	where service.member_id = last.member_id
	group by service.member_id, last.service_date
),
lastServiceDetails as (
	select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
	service.location_id,
	location.name as locationName,
	case when service.service_type =''FHW_LMP'' then ''LMP Visit''
		when  service.service_type =''FHW_ANC'' then ''ANC Visit''
		  when service.service_type = ''FHW_PNC'' then ''PNC Visit''
		  when service.service_type = ''FHW_CS'' then ''Child Service''
		  when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
	end as service_type,
	service.member_id 
	from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id
	
	inner join location_master location on service.location_id = location.id
	
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName"
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id',true,'ACTIVE',NULL,true,'a53175f9-f791-4ba4-b9cf-687bcb9e92a5'),
	 (1,'2019-07-01 00:00:00',NULL,NULL,'mob_pnc_services_provided','memberId','
select to_char(rch.service_date, ''DD/MM/YYYY'') as "Service Date",
rch.delivery_place as "PNC Visit Place",
rch.id as "hiddenVisitId",
cast(''FHW_PNC'' as text) as "hiddenServiceType"
from rch_pnc_master rch
inner join imt_member mem on rch.member_id = mem.id
where member_id = #memberId#
order by rch.service_date desc;

',true,'ACTIVE',NULL,true,'27b0751e-236d-4858-bfb7-fa628cd77f3b'),
	 (1,'2019-11-13 19:26:24.531373',NULL,NULL,'mytecho_get_timeline_config',NULL,'with context_details as (
select cast(json_agg(t.* ) as text) as "contextType", mt_timeline_config_id as id from mytecho_timeline_context_det t
	group by mt_timeline_config_id
),
timeline_language as(
	select cast(json_agg(json_build_object(''language'',t.language, ''buttonText'',t.button_text,
''description'',t.description,''mediaName'',t.media_name,''originalMediaName'', COALESCE(t.original_media_name, ''''), ''tittle'', t.tittle 
)) as text) as "languageWiseTimeline"
, mt_timeline_config_id  as id from mytecho_timeline_language_wise_config_det t
	group by mt_timeline_config_id
),
event_details as (
select cast(json_agg(json_build_object(''eventType'',m.event)) as text) as "eventType", mt_timeline_config_id as id
from mytecho_timeline_event_det t
left join mytecho_timeline_event_master m on m.code=t.event_type
	group by mt_timeline_config_id
)
select  timeline.id as "id", timeline.name as "name", timeline.base_date_type as "baseDate",
timeline.schedule_after_number_of_days  as "scheduleAfterNumberOfDays",
timeline.expier_after_number_of_days  as "expireAfterNumberOfDays",
timeline.component_type as "componentType",
timeline.is_active as "isActive", 
timeline_lang."languageWiseTimeline" as "languageWiseTimeline",
context."contextType" as "context",
event."eventType" as "timelineEventType"
from mytecho_timeline_config_det timeline
left join context_details context on timeline.id  = context.id
left join timeline_language timeline_lang on timeline.id  = timeline_lang.id
left join event_details event on timeline.id  = event.id',true,'ACTIVE','mytecho_get_timeline_config',true,'ee84ca86-322c-4e4f-bec6-118ae450cb7c'),
	 (1,'2019-11-13 19:26:24.531373',NULL,NULL,'mytecho_get_timeline_master_event',NULL,'select  event as "event", description as "description", code as "code",input_type  as "inputType"  
from mytecho_timeline_event_master',true,'ACTIVE',NULL,true,'4f2badd0-ea9b-40eb-b623-63a66256f705'),
	 (58981,'2019-09-02 14:23:41.145',58981,'2019-09-02 14:23:41.145','mob_asha_pnc_services_provided','memberId','select to_char(rch.service_date, ''DD/MM/YYYY'') as "Service Date",
cast(''Home'' as text)  as "PNC Visit Place",
rch.id as "hiddenVisitId",
cast(''ASHA_PNC'' as text) as "hiddenServiceType"
from rch_asha_pnc_master rch
inner join imt_member mem on rch.member_id = mem.id
where member_id = #memberId#
order by rch.service_date desc;',true,'ACTIVE',NULL,true,'ae1d7e18-4d27-48bd-bb1d-f08400185a02'),
	 (1,'2019-11-13 19:26:24.531373',NULL,NULL,'mytecho_retrive_timeline_config_by_id','id','with timeline_language as(
	select cast(json_agg(json_build_object(''language'',t.language, ''buttonText'',t.button_text,
''description'',t.description,''mediaName'',t.media_name,''originalMediaName'', COALESCE(t.original_media_name, ''''), ''tittle'', t.tittle, ''url'', COALESCE(t.url, ''''), ''shortDescription'', COALESCE(t.short_descr, '''') 
)) as text) as "languageWiseTimeline"
, mt_timeline_config_id  as id from mytecho_timeline_language_wise_config_det t
	where mt_timeline_config_id = #id# group by mt_timeline_config_id
),
audience_details as (
select cast(json_agg(t.* ) as text) as "audienceType", mt_timeline_config_id as id from mytecho_timeline_audience_det t
	where mt_timeline_config_id = #id# group by mt_timeline_config_id
),
context_details as (
select cast(json_agg(t.* ) as text) as "contextType", mt_timeline_config_id as id from mytecho_timeline_context_det t
	where mt_timeline_config_id = #id# group by mt_timeline_config_id
),
event_details as (
select cast(json_agg(t.* ) as text) as "eventType", mt_timeline_config_id as id from mytecho_timeline_event_det t
	where mt_timeline_config_id = #id# group by mt_timeline_config_id
)
select timeline.id as "id", timeline.name as "timelineName", component_type as "componentType", timeline.base_date_type as "baseDateType", 
timeline.expier_after_number_of_days as "expireAfterNoOfDays",
timeline.schedule_after_number_of_days as "scheduleAfterNoOfDays",
timeline.is_active as "isActive",
timeline.category_id as "categoryId",
audience."audienceType" as "audienceType",
timeline_lan."languageWiseTimeline" as "languageWiseTimeline",
context."contextType" as "context",
event."eventType" as "timelineEventType"
from mytecho_timeline_config_det timeline
left join timeline_language timeline_lan on timeline.id = timeline_lan.id
left join audience_details audience on timeline.id  = audience.id
left join context_details context on timeline.id  = context.id
left join event_details event on timeline.id  = event.id
where timeline.id = #id#',true,'ACTIVE',NULL,true,'bd7afb22-4913-4fec-a6cc-7e6112ea66a6'),
	 (58981,'2019-09-02 14:26:37.086',58981,'2019-09-02 14:26:37.086','mob_asha_work_register_detail_npcb','visitId','select
concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'') as "Member Name",
m.family_id as "Family Id",
to_char(npcb.service_date, ''DD/MM/YYYY'') as "Service Date",
case when npcb.vision_faded = true then ''Yes'' when npcb.vision_faded = false then ''No'' else null end as "Vision faded",
case when npcb.object_visible_multi_times = true then ''Yes'' when npcb.object_visible_multi_times = false then ''No'' else null end as "Object visible multi times",
case when npcb.blackboard_vision_faded = true then ''Yes'' when npcb.blackboard_vision_faded = false then ''No'' else null end as "Blackboard vision faded",
case when npcb.glare_in_vision = true then ''Yes'' when npcb.glare_in_vision = false then ''No'' else null end as "Glare in vision",
case when npcb.difficulty_night_driving = true then ''Yes'' when npcb.difficulty_night_driving = false then ''No'' else null end as "Difficulty night driving",
case when npcb.frequent_power_change_specs = true then ''Yes'' when npcb.frequent_power_change_specs = false then ''No'' else null end as "Frequent power change specs",
case when npcb.other_issue = true then ''Yes'' when npcb.other_issue = false then ''No'' else null end as "Other issue",
case when npcb.current_treatment = true then ''Yes'' when npcb.current_treatment = false then ''No'' else null end as "Current treatment",
case when npcb.lines_able_to_see is not null then cast(npcb.lines_able_to_see as text) else null end as "Lines able to see",
case when npcb.observe_flashes_of_light = true then ''Yes'' when npcb.observe_flashes_of_light = false then ''No'' else null end as "Observe flashes of light",
case when npcb.vision_lt_6_18 = true then ''Yes'' when npcb.vision_lt_6_18 = false then ''No'' else null end as "Vision less than 6/18",
case when npcb.referral_done = true then ''Yes'' when npcb.referral_done = false then ''No'' else null end as "Referral done",
infra.name as "Referral Place"
from npcb_member_screening_master npcb
inner join imt_member m on npcb.member_id = m.id
left join health_infrastructure_details infra on npcb.health_infrastructure_id = infra.id
where npcb.id = #visitId#',true,'ACTIVE',NULL,true,'1a5dbc3f-19bc-4928-963e-349dbf0af9c6'),
	 (1,'2019-11-13 19:26:24.531373',NULL,NULL,'mytecho_timeline_update_isactive','id,isActive','UPDATE public.mytecho_timeline_config_det 
   SET is_active=#isActive#
 WHERE id=#id#;',false,'ACTIVE',NULL,true,'b37ac026-db71-4ad7-9122-f0ce4ec71fba'),
	 (60512,'2020-04-16 00:00:00',60512,'2020-04-16 00:00:00','covid19_lab_test_dashboard_distinct_ward_name_result','healthInfra,loggedInUserId','select id,ward_name
from health_infrastructure_ward_details
where case when ''#healthInfra#'' != ''null'' then health_infra_id = (select id from health_infrastructure_details where name_in_english = ''#healthInfra#'')
	else health_infra_id in (select
	Distinct ltd.sample_health_infra as id
	from covid19_lab_test_detail ltd
	where
	(((select role_id from um_user where id = #loggedInUserId#) in (59,25,96))
	or ltd.sample_health_infra_send_to = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = ''#loggedInUserId#'' and uhi.state = ''ACTIVE'')
	) and ltd.lab_collection_status = ''SAMPLE_ACCEPTED'') end
and status = ''ACTIVE''',true,'ACTIVE',NULL,true,'396e725b-2471-44ff-9610-9af7b6755713'),
	 (-1,'2021-07-16 00:00:00',-1,'2021-07-16 00:00:00','translation_label_check_1','appName,label','
select
    *
from
    internationalization_label_master
where
    key = REPLACE(#label#,'' '','''')
    and app_name = #appName#
    and country = ''IN''
',true,'ACTIVE',NULL,true,'57a1db17-cae4-4749-9890-a8c0be1b5f35'),
	 (84954,'2021-12-06 00:00:00',84954,'2021-12-06 00:00:00','insert_into_tr_question_bank_configuration','questionSetId,configJson,loggedInUserId','delete from tr_question_bank_configuration where question_set_id = #questionSetId#;
INSERT INTO tr_question_bank_configuration
(question_set_id, config_json, created_by, created_on, modified_by, modified_on)
VALUES
(#questionSetId#, #configJson#, #loggedInUserId#, now(), #loggedInUserId#, now());',false,'ACTIVE',NULL,true,'263be7c4-1b08-4629-9455-c11c2fadde4a'),
	 (1,'2019-06-25 00:00:00',NULL,NULL,'get_rch_service_register_detail','location_id,to_date,from_date,limit,offset,serviceType','
with location_det as(
select child_id as loc_id from location_hierchy_closer_det where parent_id = #location_id#
),dates as(
select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'')+interval ''1 day'' - interval ''1 millisecond'' as to_date
)
, record_detail as (
select * from rch_member_services,location_det,dates
where service_date between dates.from_date and dates.to_date
and location_id = location_det.loc_id
and service_type = ''#serviceType#''
order by  service_date desc
limit #limit# offset #offset#
)
select 
concat(mem.first_name,'' '',mem.middle_name,'' '',mem.last_name,'' ('',mem.unique_health_id,'')'') as "Member Name",
to_char(rec.service_date, ''DD/MM/YYYY'') as "Service Date", rec.loc_id as "hiddenlocation", rec.visit_id as "hiddenVisitId", mem.family_id as "Family Id", 
get_location_hierarchy(rec.loc_id) as "Location"
,concat(usr.first_name,'' '',usr.middle_name,'' '',usr.last_name,'' ('',usr.contact_number,'')'') as "ASHA/ANM Name"
from record_detail rec
inner join imt_member mem on mem.id = rec.member_id 
inner join location_master loc on loc_id = loc.id
inner join um_user usr on usr.id = rec.user_id
',true,'ACTIVE',NULL,true,'a72fdf8f-e787-440e-95d9-aaf1557d3965'),
	 (1,'2019-01-25 00:00:00',60512,'2019-10-01 15:25:46.727','pnc_retrieve_childs_by_member_id','memberId','select * from imt_member where id in 
(select member_id from rch_wpd_child_master where wpd_mother_id in 
(select id from rch_wpd_mother_master where pregnancy_reg_det_id in 
(select id from rch_pregnancy_registration_det where member_id = #memberId# and delivery_date > now() - interval ''60 days''
and state=''DELIVERY_DONE'')))
and basic_state in (''NEW'',''VERIFIED'')',true,'ACTIVE',NULL,true,'a859662e-4ebe-497e-936c-b3df870610d8'),
	 (57698,'2019-10-03 20:41:43.797',57698,'2019-10-03 20:42:09.051','mytecho_phone_fhw_mo_retrieval','locationId','select case when u.role_id in (86,66) then cast(''MO'' as text)
when u.role_id = 30 then cast (''FHW'' as text) end as  "role",
initcap(u.first_name || '' '' || u.last_name) as "fullName",u.contact_number as "mobileNumber"
from um_user_location ul,um_user u where u.id = ul.user_id and u.role_id in (30,86,66)
and loc_id in (select parent_id from location_hierchy_closer_det  where child_id  = #locationId# )
and u.state = ''ACTIVE'' and ul.state = ''ACTIVE'';',true,'ACTIVE','Retrieves phone number of MO and FHW when provided a location id.',true,'582a2b89-819c-4f54-8ae3-925478da8690'),
	 (1,'2019-06-25 00:00:00',NULL,NULL,'get_rch_service_register_detail_anc','visitId','
with dangsign as ( select rel.anc_id,string_agg(det.value ,'', '') as dangeroussign from rch_anc_dangerous_sign_rel rel
inner join listvalue_field_value_detail det on rel.dangerous_sign_id = det.id group by rel.anc_id )
select 
concat(mem.first_name,'' '',mem.middle_name,'' '',mem.last_name,'' ('',mem.unique_health_id,'')'') as "Member Name",
	mem.family_id as "Family Id",
case when anc.lmp is not null then to_char(anc.lmp, ''DD/MM/YYYY'') \:\:text  else ''Not Available'' end as "LMP Date", 
case when anc.weight is not null then anc.weight \:\:text  else ''Not Available'' end as "Weight",
case when anc.jsy_beneficiary is not null then case when anc.jsy_beneficiary = ''true'' then ''Yes'' else ''No'' end \:\:text  else ''Not Available'' end as "JSY Beneficiary",
case when anc.kpsy_beneficiary is not null then case when anc.kpsy_beneficiary then ''Yes'' else ''No'' end \:\:text  else ''Not Available'' end as "KPSY Beneficiary", 
case when anc.iay_beneficiary is not null then case when anc.iay_beneficiary then ''Yes'' else ''No'' end \:\:text  else ''Not Available'' end as "IAY Beneficiary", 
case when anc.chiranjeevi_yojna_beneficiary is not null then case when anc.chiranjeevi_yojna_beneficiary then ''Yes'' else ''No'' end \:\:text  else ''Not Available'' end as "Chiranjeevi Yojna Beneficiary",
case when anc.anc_place is not null then anc.anc_place \:\:text  else ''Not Available'' end as "ANC Place",
case when anc.systolic_bp is not null then anc.systolic_bp \:\:text  else ''Not Available'' end as "Systolic BP",
case when anc.diastolic_bp is not null then anc.diastolic_bp \:\:text  else ''Not Available'' end as "Diastolic BP",
case when anc.member_height is not null then anc.member_height \:\:text  else ''Not Available'' end as "Member Height",
case when anc.foetal_height is not null then anc.foetal_height \:\:text  else ''Not Available'' end as "Foetal Height",
case when anc.foetal_heart_sound is not null then case when  anc.foetal_heart_sound  then ''Yes'' else ''No'' end  \:\:text  else ''Not Available'' end as "Foetal Heart Sound",
case when anc.ifa_tablets_given is not null then anc.ifa_tablets_given \:\:text  else ''Not Available'' end as "Ifa Tablets Given",
case when anc.fa_tablets_given is not null then anc.fa_tablets_given  \:\:text  else ''Not Available'' end as "Fa Tablets Given",
case when anc.calcium_tablets_given is not null then anc.calcium_tablets_given  \:\:text  else ''Not Available'' end as "Calcium Tablets Given",
case when anc.hbsag_test is not null then anc.hbsag_test \:\:text  else ''Not Available'' end as "HBSAG Test",
case when anc.blood_sugar_test is not null then anc.blood_sugar_test \:\:text  else ''Not Available'' end as "Blood Sugar Test",
case when anc.urine_test_done is not null then case when  anc.urine_test_done  then ''Yes'' else ''No'' end \:\:text  else ''Not Available'' end as "Urine Test Done",
case when anc.albendazole_given is not null then case when  anc.albendazole_given  then ''Yes'' else ''No'' end \:\:text  else ''Not Available'' end as "Albendazole Given",
case when anc.dead_flag is not null then case when  anc.dead_flag  then ''Yes'' else ''No'' end \:\:text  else ''Not Available'' end as "Is the Member Dead",
case when anc.other_dangerous_sign is not null then anc.other_dangerous_sign \:\:text  else ''Not Available'' end as "Other Dangerous Sign",
case when anc.member_status is not null then anc.member_status \:\:text  else ''Not Available'' end as "Member Satus",
case when anc.death_date is not null then to_char(anc.death_date, ''DD/MM/YYYY'') \:\:text  else ''Not Available'' end as "Death Date",
case when anc.vdrl_test is not null then anc.vdrl_test \:\:text  else ''Not Available'' end as "VDRL Test",
case when anc.hiv_test is not null then anc.hiv_test  \:\:text  else ''Not Available'' end as "HIV Test",
case when anc.place_of_death is not null then anc.place_of_death \:\:text  else ''Not Available'' end as "Place Of Death",
case when anc.haemoglobin_count is not null then anc.haemoglobin_count end as "Haemoglobin Count",
case when anc.death_reason is not null then anc.death_reason \:\:text  else ''Not Available'' end as "Death Reason",
case when anc.jsy_payment_done is not null then case when  anc.jsy_payment_done then ''Yes'' else ''No'' end  \:\:text  else ''Not Available'' end as "JSY Payment Done",
case when anc.last_delivery_outcome is not null then anc.last_delivery_outcome \:\:text  else ''Not Available'' end as "Last Delivery Outcome",
case when anc.expected_delivery_place is not null then anc.expected_delivery_place \:\:text  else ''Not Available'' end as "Expected Delivery Place",
case when anc.family_planning_method is not null then anc.family_planning_method \:\:text  else ''Not Available'' end as "Family Planning Method",
case when anc.foetal_position is not null then anc.foetal_position \:\:text  else ''Not Available'' end as "Foetal Position",
case when anc.other_previous_pregnancy_complication is not null then anc.other_previous_pregnancy_complication \:\:text  else ''Not Available'' end as "Other Previous Pregnancy Complication",
case when anc.foetal_movement is not null then anc.foetal_movement \:\:text  else ''Not Available'' end as "Foetal Movement",
case when anc.urine_albumin is not null then anc.urine_albumin \:\:text  else ''Not Available'' end as "Urine Albumin",
case when anc.urine_sugar is not null then anc.urine_sugar \:\:text  else ''Not Available'' end as "Urine Sugar",
case when anc.is_high_risk_case is not null then case when  anc.is_high_risk_case  then ''Yes'' else ''No'' end  \:\:text  else ''Not Available'' end as "Is High Risk Case",
case when anc.blood_group is not null then anc.blood_group \:\:text  else ''Not Available'' end as "Blood Group",
case when anc.sugar_test_after_food_val is not null then anc.sugar_test_after_food_val \:\:text  else ''Not Available'' end as "Sugar Test After Food Val",
case when anc.sugar_test_before_food_val is not null then anc.sugar_test_before_food_val \:\:text  else ''Not Available'' end as "Sugar Test Before Food Val",
case when anc.service_date is not null then to_char(anc.service_date, ''DD/MM/YYYY'')  \:\:text  else ''Not Available'' end as "Service Date",
case when anc.sickle_cell_test is not null then anc.sickle_cell_test \:\:text  else ''Not Available'' end as "Sickle Cell Test", 
case when dan.dangeroussign is not null then dan.dangeroussign \:\:text  else ''Not Available'' end as "Dangerous Sign", 
case when ancplace.value is not null then ancplace.value \:\:text  else ''Not Available'' end as "ANC place name", 
case when referralplace.value is not null then referralplace.value \:\:text  else ''Not Available'' end as "Referral place Name"
from rch_anc_master anc 
inner join imt_member mem on anc.member_id = mem.id
left join dangsign dan on anc.id = dan.anc_id
left join listvalue_field_value_detail ancplace on anc.anc_place = ancplace.id
left join listvalue_field_value_detail referralplace on anc.referral_place = referralplace.id
where anc.id = #visitId#
',true,'ACTIVE',NULL,true,'d8086b83-5e5a-4f6d-bc89-3352d88bb996'),
	 (1,'2019-06-25 00:00:00',NULL,NULL,'get_rch_service_register_detail_lmp','visitId','
select 
concat(mem.first_name,'' '',mem.middle_name,'' '',mem.last_name,'' ('',mem.unique_health_id,'')'') as "Member Name",
mem.family_id as "Family Id",
case when lmp.is_pregnant is not null then case when lmp.is_pregnant = ''true'' then ''Yes'' else ''No'' end \:\:text else ''Not Available'' end as "Is Pregnant", 
case when lmp.pregnancy_test_done is not null then case when lmp.pregnancy_test_done = ''true'' then ''Yes'' else ''No'' end \:\:text else ''Not Available'' end as "Is Pregnancy Test Done",
case when lmp.family_planning_method is not null then lmp.family_planning_method \:\:text else ''Not Available'' end as "Family Planning Method", 
case when lmp.fp_insert_operate_date is not null then to_char(lmp.fp_insert_operate_date, ''DD/MM/YYYY'') \:\:text else ''Not Available'' end as "Fp Insert Operate Date", 
case when lmp.place_of_death is not null then lmp.place_of_death \:\:text else ''Not Available'' end as "Place Of Death", 
case when lmp.member_status is not null then lmp.member_status \:\:text else ''Not Available'' end as "Member Satus",
case when lmp.death_date is not null then to_char(lmp.death_date, ''DD/MM/YYYY'') \:\:text else ''Not Available'' end as "Death Date",
case when lmp.death_reason is not null then lmp.death_reason \:\:text else ''Not Available'' end as "Death Reason", 
case when lmp.service_date is not null then to_char(lmp.service_date, ''DD/MM/YYYY'')  \:\:text else ''Not Available'' end as "Service Date"
from rch_lmp_follow_up lmp
inner join imt_member mem on lmp.member_id = mem.id
where lmp.id = #visitId#
',true,'ACTIVE',NULL,true,'a781018d-02ed-43ee-82d4-7976fe52d156'),
	 (1,'2019-06-25 00:00:00',NULL,NULL,'get_rch_service_register_detail_cs','visitId','
select  
concat(mem.first_name,'' '',mem.middle_name,'' '',mem.last_name,'' ('',mem.unique_health_id,'')'') as "Member Name",
	mem.family_id as "Family Id",
case when csm.is_alive is not null then case when csm.is_alive = ''true'' then ''Yes'' else ''No'' end \:\:text else ''Not Available'' end as  "Is Alive", 
case when csm.weight is not null then csm.weight \:\:text else ''Not Available'' end as "Weight", 
case when csm.ifa_syrup_given is not null then case when csm.ifa_syrup_given = ''true'' then ''Yes'' else ''No'' end \:\:text else ''Not Available'' end as "Ifa Syrup Given", 
case when csm.complementary_feeding_started is not null then case when csm.complementary_feeding_started = ''true'' then ''Yes'' else ''No'' end \:\:text else ''Not Available'' end as "Is Complementary Feeding Started",
case when csm.is_treatement_done is not null then csm.is_treatement_done \:\:text else ''Not Available'' end as "Is Treatement Done",
case when csm.death_date is not null then to_char(csm.death_date, ''DD/MM/YYYY'') \:\:text else ''Not Available'' end as "Death Date",
case when csm.place_of_death is not null then csm.place_of_death \:\:text else ''Not Available'' end as "Place Of Death",
case when csm.member_status is not null then csm.member_status \:\:text else ''Not Available'' end as "Member Status", 
case when csm.death_reason is not null then csm.death_reason \:\:text else ''Not Available'' end as "Death Reason", 
case when csm.other_death_reason is not null then csm.other_death_reason \:\:text else ''Not Available'' end as "Other Death Reason",
case when csm.complementary_feeding_start_period is not null then csm.complementary_feeding_start_period \:\:text else ''Not Available'' end as "Complementary Feeding Start Period",
case when csm.other_diseases is not null then csm.other_diseases \:\:text else ''Not Available'' end as "Other Diseases",
case when csm.mid_arm_circumference is not null then csm.mid_arm_circumference \:\:text else ''Not Available'' end as "Mid Arm Circumference",
case when csm.height is not null then csm.height \:\:text else ''Not Available'' end as "Height", 
case when csm.have_pedal_edema is not null then case when csm.have_pedal_edema = ''true'' then ''Yes'' else ''No'' end \:\:text else ''Not Available'' end as "Have Pedal Edema",
case when csm.exclusively_breastfeded is not null then case when csm.exclusively_breastfeded = ''true'' then ''Yes'' else ''No'' end \:\:text else ''Not Available'' end as "Exclusively Breastfeded",
case when csm.any_vaccination_pending is not null then case when csm.any_vaccination_pending = ''true'' then ''Yes'' else ''No'' end \:\:text else ''Not Available'' end as "Any Vaccination Pending",
case when csm.service_date is not null then to_char(csm.service_date, ''DD/MM/YYYY'') \:\:text else ''Not Available'' end as "Service Date",
case when csm.sd_score is not null then csm.sd_score \:\:text else ''Not Available'' end as "SD Score"
from rch_child_service_master csm 
inner join imt_member mem on csm.member_id = mem.id
where csm.id = #visitId#
',true,'ACTIVE',NULL,true,'de043258-1a9f-4136-89d5-3c485c65e9a7'),
	 (78434,'2021-06-10 00:00:00',78434,'2021-06-10 00:00:00','get_course_module_lesson_hierarchy_by_ref_id_and_type','refId,refType','
SELECT
case
    when #refType# = ''COURSE'' then #refId#
    when #refType# = ''MODULE'' then (select course_id from tr_course_topic_rel where topic_id = #refId#)
    when #refType# = ''LESSON'' then (select course_id from tr_course_topic_rel where topic_id = (select topic_id from tr_topic_media_master where id = #refId#))
    else null
end as "courseId",
case
    when #refType# = ''MODULE'' then #refId#
    when #refType# = ''LESSON'' then (select topic_id from tr_topic_media_master where id = #refId#)
    else null
end as "topicId",
case
    when #refType# = ''LESSON'' then #refId#
    else null
end as "mediaId"
',true,'ACTIVE',NULL,true,'fb5039e6-7d4f-42d8-ba94-9d0ff772ad69'),
	 (1,'2019-06-25 00:00:00',NULL,NULL,'get_rch_service_register_detail_pnc_mother','visitId','
select 
concat(mem.first_name,'' '',mem.middle_name,'' '',mem.last_name,'' ('',mem.unique_health_id,'')'') as "Mother Name",
mem.family_id as "Family Id", 
case when pm.service_date is not null then to_char(pm.service_date , ''DD/MM/YYYY'') \:\:text  else ''Not Available'' end as "Service Date", 
case when pm.delivery_place is not null then pm.delivery_place \:\:text  else ''Not Available'' end as "Delivery Place", 
case when hos_type.value is not null then hos_type.value \:\:text  else ''Not Available'' end as "Hostpital Type", 
case when helth_infra.value is not null then helth_infra.value \:\:text  else ''Not Available'' end as "Health Infrastructure", 
case when pm.delivery_done_by is not null then  pm.delivery_done_by \:\:text  else ''Not Available'' end as "Delivery Done By", 
case when pm.delivery_person is not null then  pm.delivery_person \:\:text  else ''Not Available'' end as "Delivery Person", 
case when pm.delivery_person_name is not null then  pm.delivery_person_name \:\:text  else ''Not Available'' end as "Delivery Person Name",

case when pmm.date_of_delivery is not null then  to_char(pmm.date_of_delivery, ''DD/MM/YYYY'') \:\:text  else ''Not Available'' end as "Delivery Date", 
case when pmm.is_alive is not null then case when pmm.is_alive then ''Yes'' else ''No'' end  \:\:text  else ''Not Available'' end as "Is Alive", 
case when pmm.ifa_tablets_given is not null then pmm.ifa_tablets_given \:\:text  else ''Not Available'' end as "IFA Tablets Given", 
case when pmm.other_danger_sign is not null then pmm.other_danger_sign \:\:text  else ''Not Available'' end as "Other Danger Sign", 
case when pmm.is_high_risk_case is not null then case when pmm.is_high_risk_case then ''Yes'' else ''No'' end \:\:text  else ''Not Available'' end as "Is HighRisk Case", 
case when pmm.death_date is not null then to_char(pmm.death_date, ''DD/MM/YYYY'') \:\:text  else ''Not Available'' end as "Death Date", 
case when pmm.death_reason is not null then pmm.death_reason \:\:text  else ''Not Available'' end as "Death Reason", 
case when pmm.place_of_death is not null then pmm.place_of_death \:\:text  else ''Not Available'' end as "Place Of Death",
case when pmm.other_death_reason is not null then pmm.other_death_reason \:\:text  else ''Not Available'' end as "Other Death Reason", 
case when pmm.fp_insert_operate_date is not null then to_char( pmm.fp_insert_operate_date, ''DD/MM/YYYY'') \:\:text  else ''Not Available'' end as "FP Insert Oprate Date", 
case when pmm.family_planning_method is not null then pmm.family_planning_method \:\:text  else ''Not Available'' end as "Family Planning Method", 
case when pmm.member_status is not null then pmm.member_status \:\:text  else ''Not Available'' end as "Mother Status"
from rch_pnc_master pm
inner join rch_pnc_mother_master pmm on pm.id = pmm.pnc_master_id
inner join imt_member mem on pmm.mother_id = mem.id
left join listvalue_field_value_detail hos_type on pm.type_of_hospital = hos_type.id
left join listvalue_field_value_detail helth_infra on pm.health_infrastructure_id = helth_infra.id
where pm.id = #visitId#
',true,'ACTIVE',NULL,true,'901c61f3-480f-4bc1-960d-be7186579797'),
	 (1,'2019-07-01 00:00:00',NULL,NULL,'mob_wpd_services_provided','memberId','
select to_char(rch.date_of_delivery, ''DD/MM/YYYY'') as "Service Date",
rch.delivery_place as "Delivery Place",
rch.id as "hiddenVisitId",
cast(''FHW_MOTHER_WPD'' as text) as "hiddenServiceType"
from rch_wpd_mother_master rch
inner join imt_member mem on rch.member_id = mem.id
where member_id = #memberId#
order by rch.date_of_delivery desc;
',true,'ACTIVE',NULL,true,'2605a1f7-fd25-4157-8d48-1271a1d436c4'),
	 (1,'2019-07-01 00:00:00',NULL,NULL,'mob_work_register_detail_hypertension','visitId','
with const as (
	select cast(''PHC'' as text) as const, cast(''PHC'' as text) as name
	union
	select cast(''CHC'' as text) as const, cast(''CHC'' as text) as name
	union
	select cast(''DIST_HOSP'' as text) as const, cast(''District Hospital'' as text) as name
	union
	select cast(''OTHER'' as text) as const, cast(''Other'' as text) as name
)
select
concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'') as "Member Name",
m.family_id as "Family Id",
to_char(hyp.screening_date, ''DD/MM/YYYY'') as "Screening Date",
case when hyp.systolic_bp is not null then cast(hyp.systolic_bp as text) else null end as "Systolic BP",
case when hyp.diastolic_bp is not null then cast(hyp.diastolic_bp as text) else null end as "Diastolic BP",
case when hyp.pulse_rate is not null then cast(hyp.pulse_rate as text) else null end as "Pulse Rate",
case when hyp.diagnosed_earlier = true then ''Yes'' when hyp.diagnosed_earlier = false then ''No'' else null end as "Diagoned for Hypertension earlier",
case when hyp.currently_under_treatement = true then ''Yes'' when hyp.currently_under_treatement = false then ''No'' else null end as "Currently under treatement",
case when hyp.refferal_done = true then ''Yes'' when hyp.refferal_done = false then ''No'' else null end as "Referral done",
const.name as "Referral Place",
hyp.remarks as "Remarks"
from ncd_member_hypertension_detail hyp
inner join imt_member m on hyp.member_id = m.id
left join const on const.const = hyp.refferal_place
where hyp.id = #visitId#
',true,'ACTIVE',NULL,true,'49031158-2bee-4351-a76b-e88f8bed9129'),
	 (1,'2019-07-01 00:00:00',NULL,NULL,'mob_work_register_detail_diabetes','visitId','
with const as (
	select cast(''PHC'' as text) as const, cast(''PHC'' as text) as name
	union
	select cast(''CHC'' as text) as const, cast(''CHC'' as text) as name
	union
	select cast(''DIST_HOSP'' as text) as const, cast(''District Hospital'' as text) as name
	union
	select cast(''OTHER'' as text) as const, cast(''Other'' as text) as name
)
select
concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'') as "Member Name",
m.family_id as "Family Id",
to_char(ncd.screening_date, ''DD/MM/YYYY'') as "Screening Date",
case when ncd.blood_sugar is not null then cast(ncd.blood_sugar as text) else null end as "Blood Sugar",
case when ncd.earlier_diabetes_diagnosis = true then ''Yes'' when ncd.earlier_diabetes_diagnosis = false then ''No'' else null end as "Diagoned for Diabetes earlier",
case when ncd.currently_under_treatment = true then ''Yes'' when ncd.currently_under_treatment = false then ''No'' else null end as "Currently under treatement",
case when ncd.refferal_done = true then ''Yes'' when ncd.refferal_done = false then ''No'' else null end as "Referral done",
const.name as "Referral Place",
ncd.remarks as "Remarks"
from ncd_member_diabetes_detail ncd
inner join imt_member m on ncd.member_id = m.id
left join const on const.const = ncd.refferal_place
where ncd.id = #visitId#
',true,'ACTIVE',NULL,true,'a19b1404-237a-4a13-94a8-1b0a8881f5d9'),
	 (1,'2019-07-01 00:00:00',NULL,NULL,'mob_work_register_detail_breast','visitId','
with const as (
	select cast(''PHC'' as text) as const, cast(''PHC'' as text) as name
	union
	select cast(''CHC'' as text) as const, cast(''CHC'' as text) as name
	union
	select cast(''DIST_HOSP'' as text) as const, cast(''District Hospital'' as text) as name
	union
	select cast(''OTHER'' as text) as const, cast(''Other'' as text) as name
)
select
concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'') as "Member Name",
m.family_id as "Family Id",
to_char(ncd.screening_date, ''DD/MM/YYYY'') as "Screening Date",
case when ncd.any_breast_related_symptoms = true then ''Yes'' when ncd.any_breast_related_symptoms = false then ''No'' else null end as "Any breast related symptoms",
case when ncd.lump_in_breast = true then ''Yes'' when ncd.lump_in_breast = false then ''No'' else null end as "Lump / Thickness in breast",
case when ncd.size_change = true then ''Yes'' when ncd.size_change = false then ''No'' else null end as "Change in size",
case when ncd.nipple_shape_and_position_change = true then ''Yes'' when ncd.nipple_shape_and_position_change = false then ''No'' else null end as "Change in shape and position of Nipple",
case when ncd.any_retraction_of_nipple = true then ''Yes'' when ncd.any_retraction_of_nipple = false then ''No'' else null end as "Any Retraction of Nipple",
case when ncd.discharge_from_nipple = true then ''Yes'' when ncd.discharge_from_nipple = false then ''No'' else null end as "Discharge from one / both Nipple",
case when ncd.redness_of_skin_over_nipple = true then ''Yes'' when ncd.redness_of_skin_over_nipple = false then ''No'' else null end as "Redness of skin over breast / any ulcer",
case when ncd.erosions_of_nipple = true then ''Yes'' when ncd.erosions_of_nipple = false then ''No'' else null end as "Erosions of Nipple",
case when ncd.agreed_for_self_breast_exam = true then ''Yes'' when ncd.agreed_for_self_breast_exam = false then ''No'' else null end as "Patient agreed for Clinical Breast Examination",
ncd.visual_swelling_in_armpit as "Swelling in armpit (Left/Right)",
case when ncd.visual_discharge_from_nipple = true then ''Yes'' when ncd.visual_discharge_from_nipple = false then ''No'' else null end as "Discharge from Nipple in Examination",
case when ncd.refferal_done = true then ''Yes'' when ncd.refferal_done = false then ''No'' else null end as "Referral done",
const.name as "Referral Place",
ncd.remarks as "Remarks"
from ncd_member_breast_detail ncd
inner join imt_member m on ncd.member_id = m.id
left join const on const.const = ncd.refferal_place
where ncd.id = #visitId#
',true,'ACTIVE',NULL,true,'8f7582f8-cd30-430f-a476-0a1944a3bd42'),
	 (1,'2019-07-01 00:00:00',NULL,NULL,'mob_work_register_detail_cervical','visitId','
with const as (
	select cast(''PHC'' as text) as const, cast(''PHC'' as text) as name
	union
	select cast(''CHC'' as text) as const, cast(''CHC'' as text) as name
	union
	select cast(''DIST_HOSP'' as text) as const, cast(''District Hospital'' as text) as name
	union
	select cast(''OTHER'' as text) as const, cast(''Other'' as text) as name
)
select
concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'') as "Member Name",
m.family_id as "Family Id",
to_char(ncd.screening_date, ''DD/MM/YYYY'') as "Screening Date",
case when ncd.cervical_related_symptoms = true then ''Yes'' when ncd.cervical_related_symptoms = false then ''No'' else null end as "Any cervical related symptoms",
case when ncd.excessive_bleeding_during_periods = true then ''Yes'' when ncd.excessive_bleeding_during_periods = false then ''No'' else null end as "Excessive bleeding during periods",
case when ncd.bleeding_between_periods = true then ''Yes'' when ncd.bleeding_between_periods = false then ''No'' else null end as "Bleeding between periods",
case when ncd.bleeding_after_intercourse = true then ''Yes'' when ncd.bleeding_after_intercourse = false then ''No'' else null end as "Bleeding after intercourse",
case when ncd.excessive_smelling_vaginal_discharge = true then ''Yes'' when ncd.excessive_smelling_vaginal_discharge = false then ''No'' else null end as "Excessive foul smelling vaginal discharge",
case when ncd.postmenopausal_bleeding = true then ''Yes'' when ncd.postmenopausal_bleeding = false then ''No'' else null end as "Postmenopausal bleeding",
case when ncd.refferal_done = true then ''Yes'' when ncd.refferal_done = false then ''No'' else null end as "Referral done",
const.name as "Referral Place",
ncd.remarks as "Remarks"
from ncd_member_cervical_detail ncd
inner join imt_member m on ncd.member_id = m.id
left join const on const.const = ncd.refferal_place
where ncd.id = #visitId#
',true,'ACTIVE',NULL,true,'053f76d4-6e86-4a58-8686-ccec049de290'),
	 (1,'2019-07-01 00:00:00',NULL,NULL,'mark_as_chiranjeevi_list','locationId,limit,offSet','
with ids as (
	select id,member_id,date_of_delivery from rch_wpd_mother_master where type_of_hospital = 1013
)
select imt_member.unique_health_id as "uniqueHealthId",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "memberName",
concat(um_user.first_name,'' '',um_user.last_name,'' ('',um_user.contact_number,'')'') as "ashaDetail",
ids.date_of_delivery as "deliveryDate",
ids.id as "wpdId",
listvalue_field_value_detail.value as "caste",
imt_family.bpl_flag as "bplFlag",
get_location_hierarchy(imt_family.location_id) as "locationHierarchy"
from imt_member
inner join ids on imt_member.id = ids.member_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join um_user_location on imt_family.area_id = um_user_location.loc_id and um_user_location.state = ''ACTIVE''
left join um_user on um_user_location.user_id = um_user.id and role_id = 24 and um_user.state = ''ACTIVE''
inner join listvalue_field_value_detail on imt_family.caste = cast(listvalue_field_value_detail.id as text)
where imt_family.location_id in (select child_id from location_hierchy_closer_det where parent_id = #locationId#)
and (imt_family.caste = ''625'' or imt_family.bpl_flag)
order by ids.date_of_delivery desc
limit #limit# offset #offSet#
',true,'ACTIVE',NULL,true,'43611212-1d5f-4c8b-8381-a2d0adc3b887'),
	 (1,'2019-07-01 00:00:00',58981,'2019-07-01 17:32:47.149','mob_work_register_detail_oral','visitId','with const as (
	select cast(''PHC'' as text) as const, cast(''PHC'' as text) as name
	union
	select cast(''CHC'' as text) as const, cast(''CHC'' as text) as name
	union
	select cast(''DIST_HOSP'' as text) as const, cast(''District Hospital'' as text) as name
	union
	select cast(''OTHER'' as text) as const, cast(''Other'' as text) as name
)
select
concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'') as "Member Name",
m.family_id as "Family Id",
to_char(ncd.screening_date, ''DD/MM/YYYY'') as "Screening Date",
case when ncd.any_issues_in_mouth = true then ''Yes'' when ncd.any_issues_in_mouth = false then ''No'' else null end as "Any issues in mouth",
case when ncd.white_red_patch_oral_cavity = true then ''Yes'' when ncd.white_red_patch_oral_cavity = false then ''No'' else null end as "White or Red patch in oral cavity",
case when ncd.three_weeks_mouth_ulcer = true then ''Yes'' when ncd.three_weeks_mouth_ulcer = false then ''No'' else null end as "Ulceration or Roughend areas in mouth for more than 3 weeks",
case when ncd.voice_change = true then ''Yes'' when ncd.voice_change = false then ''No'' else null end as "Change in voice or hoarseness",
case when ncd.difficulty_in_spicy_food = true then ''Yes'' when ncd.difficulty_in_spicy_food = false then ''No'' else null end as "Difficulty in tolerating spicy food",
case when ncd.difficulty_in_opening_mouth = true then ''Yes'' when ncd.difficulty_in_opening_mouth = false then ''No'' else null end as "Difficulty in opening mouth",
case when ncd.refferal_done = true then ''Yes'' when ncd.refferal_done = false then ''No'' else null end as "Referral done",
const.name as "Referral Place",
ncd.remarks as "Remarks"
from ncd_member_oral_detail ncd
inner join imt_member m on ncd.member_id = m.id
left join const on const.const = ncd.refferal_place
where ncd.id = #visitId#',true,'ACTIVE',NULL,true,'35c78286-d5ba-473f-8f92-4bb70305a22a'),
	 (60512,'2020-04-02 00:00:00',60512,'2020-04-02 00:00:00','emo_dashboard_save_referral_details','healthInfraId,id,userId','update covid19_lab_test_recommendation
set refer_health_infra_id = #healthInfraId#,
refer_health_infra_entry_by = #userId#,
refer_health_infra_entry_on = now()
where id = #id#;',false,'ACTIVE',NULL,true,'edc00128-4453-4e83-898a-44961ce87071'),
	 (1,'2020-04-03 00:00:00',1,'2020-04-03 00:00:00','retrieve_all_gvk_covid_104_calls_response','limit,offSet','
select id as "id",
date_of_calling as "dateOfCalling",
person_name as "name",
age as "age",
gender as "gender",
contact_no as "mobileNumber",
address as "address",
get_location_hierarchy(village) as "locationHierarchy"
from gvk_covid_104_calls_response
limit #limit# offset #offSet#
',true,'ACTIVE',NULL,true,'55cee97e-136e-45cb-974a-f43b613902a4'),
	 (1,'2020-03-11 00:00:00',NULL,NULL,'loaction_ward_retrieval','limit,offset,locationId','
    SELECT
    lw.id,
	lw.ward_name as "wardName",
	lw.ward_name_english as "wardNameEnglish",
	lw.lgd_code as "lgdCode",
	lw.location_id as "locationId",
	get_location_hierarchy(lw.location_id) as "locationHierarchy",
	cast(json_agg(lwm.location_id) as text) as "assignedUPHCIds",
	cast(json_agg(lm.name) as text) as "assignedUPHCs"
 	from public.location_wards lw
 	left join location_wards_mapping lwm on lwm.ward_id = lw.id
 	left join location_master lm on lm.id = lwm.location_id
 	WHERE lw.location_id in (select child_id from location_hierchy_closer_det lhcd where lhcd.parent_id = #locationId#) or ''#locationId#'' = ''null'' or ''#locationId#'' = ''''
 	group by lw.id
  	limit #limit# offset #offset#
',true,'ACTIVE','Location Ward Retrieval',true,'bbfafa46-61c6-4f04-9741-e49002cf70a9'),
	 (78434,'2021-06-10 00:00:00',78434,'2021-06-10 00:00:00','update_sms_blacklist_number','id,mobileNumber,memberId,status,activeRemark,inactiveRemark,loggedInUserId','
UPDATE sms_block_master
SET mobile_number=#mobileNumber#, modified_by=#loggedInUserId#, modified_on=now(), member_id=#memberId#, status=#status#, active_remark=#activeRemark#, inactive_remark=#inactiveRemark#
WHERE id = #id#;
',false,'ACTIVE',NULL,true,'8b0f21ff-cd1a-4db7-8e0d-8a7c484a99c2'),
	 (78434,'2021-06-10 00:00:00',78434,'2021-06-10 00:00:00','get_member_by_unique_health_id','uniqueHealthId','
select
    *
from
    imt_member
where
    unique_health_id = #uniqueHealthId#;
',true,'ACTIVE',NULL,true,'fd68fd19-3ad0-4bb8-a3db-34e533ff40a6'),
	 (-1,'2019-11-21 19:43:14.51',-1,'2019-11-21 19:43:14.51','mark_family_as_rollback','familyid,id,userid','update imt_family_migration_master 
set state = ''ROLLBACK'',
confirmed_by = #userid#, confirmed_on = now(), 
modified_by = #userid#, modified_on = now()
where id = #id#;

update imt_family 
set state = imt_family_state_detail.from_state,
modified_on = now(), modified_by = #userid#
from imt_family_state_detail 
where imt_family.id = #familyid#
and imt_family.state=''com.argusoft.imtecho.family.state.migrated''
and imt_family.current_state = imt_family_state_detail.id;


with family_details as(

select id as "familyId"  , family_id as "familyIdString"
from imt_family  where id = #familyid# 

),

member_details as(

select ARRAY(
select row_to_json(tm.*) from (
select  unique_health_id as "healthId" , first_name as "firstName", middle_name as "middleName", last_name as "lastName"
from imt_member where family_id=(select family_id from imt_family where id = #familyid#) ) tm
) as "memberDetails"),

fhw as (

	select first_name || '' '' || middle_name || '' '' || last_name as "fhwName", 
	contact_number as "fhwPhoneNumber"
	from imt_family_migration_master fm
	inner join um_user_location ul on fm.location_migrated_from = ul.loc_id and ul.state = ''ACTIVE''
	inner join um_user u on ul.user_id = u.id and u.state = ''ACTIVE'' and u.role_id = (select id from um_role_master where name = ''FHW'')
	where fm.id = #id#

) ,

otherInfo as (

	select other_information as "otherInfo" from imt_family_migration_master where id = #id#

)
 
insert into techo_notification_master (
	notification_type_id, family_id, location_id, schedule_date, 
	state, created_by, created_on, modified_by, modified_on, 
	migration_id, other_details, header
)
select (
	select id from notification_type_master  where code=''READ_ONLY''
), 
#familyid#,
f.location_id,
now(),
''PENDING'',
#userid#,
now(),
#userid#,
now(),
#id#,

concat(
	''Your request for Family Migration Out has been Rejected.'',
	chr(10),
	'' Details : '',
	row_to_json(t),
	'' Location Migrated to : '',
	get_location_hierarchy(f.location_id)
),
concat(
	''Family Migration  - '',
	chr(10),
	f.family_id
) as header
from imt_family f , ( select * from   family_details , member_details  , fhw , otherInfo ) t
where f.id = #familyid#;',false,'ACTIVE','Rollback Family Migration',true,'eff46e14-359e-44ce-b1f0-20b70a03ed17'),
	 (409,'2019-05-07 18:54:06.595',66522,'2020-01-03 20:27:20.41','state_of_health_get_anemia_detail','limit,location_id','select m.unique_health_id as "uniqueHealthId",
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "name",
m.mobile_number as "contactNumber"
from rch_pregnancy_analytics_details preg,imt_member m
where preg.member_current_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and haemoglobin_count <= 7
and preg_reg_state in (''PENDING'',''PREGNANT'')
and anc.created_on >= current_date - interval ''7 days''
and m.id = preg.member_id
limit #limit#',true,'ACTIVE',NULL,true,'fc395980-bb50-453d-b61e-794e52e0a0ad'),
	 (60512,'2021-06-10 00:00:00',60512,'2021-06-10 00:00:00','insert_lab_test_provisional_mapping','provisionalIds,labTestId','delete from rch_opd_lab_test_provisional_diagnosis_mapping where lab_test_id = #labTestId#;

insert into rch_opd_lab_test_provisional_diagnosis_mapping
select #labTestId#,unnest(cast(#provisionalIds# as int[]));',false,'ACTIVE',NULL,true,'36751f49-61e0-4aa2-80df-3e97214032bd'),
	 (1,'2019-11-20 15:51:19.227',409,'2019-11-25 13:17:38.914','mytecho_get_my_timeline','member_id,loggedInUserId','with user_det as(
select language_preference,false as is_gujarat_user 
from mytecho_user 
where id = #loggedInUserId#
),member_det as (
select mtm.id as member_id
,case when mtm.is_pregnant = true then ''PREGNANT'' 
	when mtm.dob >= current_date - interval ''2 year'' then ''CHILD''
	else null end
 as audiance_type
,mtm.lmp_date as base_date
,mtm.dob as dob
,mtm.created_on as registration_date
,user_det.language_preference
from user_det 
left join mytecho_member mtm on mtm.id = #member_id#
)
,user_time_line_detail as (
select 
utr.*,utr.service_date - mem.base_date as number_of_days
from 
member_det mem,mytecho_user_timeline_response_det utr
where utr.member_id = mem.member_id
and utr.status != ''ARCHIVED''
),timeline_detail as (
select tmd."name" as milestone_name
,cast(base_date + interval ''1 day''*tmd.start_day as date)  as start_day
,user_det.*
from 
member_det mem
inner join mytecho_timeline_milestone_det tmd 
	on tmd.audiance_type = mem.audiance_type
inner join
(select 
utr.id
,mem.audiance_type
,mt_config.id as mt_timeline_config_id
,case when utr.event_code is null then mt_event.event_type else utr.event_code end as event_code
,case when utr.service_date is not null then utr.service_date else mem.base_date + interval ''1 day''*mt_config.schedule_after_number_of_days end as service_date
,utr.response_json
,case when mt_config.schedule_after_number_of_days is not null then mt_config.schedule_after_number_of_days else  utr.number_of_days end as number_of_days
from 
member_det mem
inner join mytecho_timeline_audience_det aud 
	on mem.audiance_type = aud.audience_type 
left join mytecho_timeline_config_det mt_config
on mt_config.id = aud.mt_timeline_config_id and mt_config.is_active = true
left join mytecho_timeline_context_det mt_context
	on  mt_context.context_type = ''TIMELINE''
	and mt_config.id = mt_context.mt_timeline_config_id
left join mytecho_timeline_event_det mt_event on mt_event.mt_timeline_config_id = mt_config.id
FULL OUTER JOIN user_time_line_detail utr 
	on utr.mt_timeline_config_id = mt_config.id) as user_det
	on user_det.number_of_days between tmd.start_day and tmd.end_day
order by service_date
)
select timeline_detail.milestone_name as "milestoneName",
timeline_detail.start_day as "milestoneDate",
cast(jsonb_agg(json_build_object(''id'', id, ''timelineConfigId'', mt_timeline_config_id,''eventCode'',event_code,''serviceDate'',service_date,''responseJson'',response_json)) as text) as "timeLineDetails"
from timeline_detail
group by timeline_detail.start_day,timeline_detail.milestone_name
order by timeline_detail.start_day,timeline_detail.milestone_name',true,'ACTIVE',NULL,true,'8b8460e7-8741-4fc1-a51b-243e0615c66a'),
	 (66522,'2019-09-19 14:29:26.206',66522,'2019-09-19 14:44:51.301','soh_get_app_version_ios',NULL,'select key_value as "iosVersion" from system_configuration where system_key =''SOH_IOS_VERSION''',true,'ACTIVE',NULL,true,'c0438bd6-a067-40db-9469-03bbe6127629'),
	 (1,'2019-09-19 00:00:00',NULL,NULL,'retrieve_hospitals_by_infra_type','infraType','
select * from health_infrastructure_details where type = #infraType#
',true,'ACTIVE',NULL,true,'ad04e517-6907-4427-adbf-5737fcd98956'),
	 (-1,'2019-11-14 17:44:04.129935',NULL,NULL,'techo_plus_user_count',NULL,'WITH
 web_active_user_query AS 
    (select count(1) as webActiveUser from um_user where state = ''ACTIVE''),
 mobile_active_user_query AS 
    (select count(1) as mobileActiveUser from um_user where role_id in (select id from um_role_master where "name" in (''FHW'',''MPHW'',''Asha'',''CHO-HWC'') and state = ''ACTIVE'') and state = ''ACTIVE''),
 digital_form_query AS 
    (select count(1) as digitalFormCount from system_sync_status where action_date > now() - interval ''7 days''),
 population_empanlled_query AS 
    ( select cast(sum(total_members)/10000000 as decimal(10,2)) as populationEmpanlledCount from location_wise_analytics)
SELECT
  (SELECT webActiveUser FROM web_active_user_query) AS "webActiveUser",
  (SELECT mobileActiveUser FROM mobile_active_user_query) AS "mobileActiveUser",
  (SELECT digitalFormCount FROM digital_form_query) AS "digitalFormCount",
  (SELECT populationEmpanlledCount FROM population_empanlled_query) AS "populationEmpanlledCount";',true,'ACTIVE','techo_plus_user_count',true,'43507062-833f-481b-b5bd-f258e6b2b5a7'),
	 (-1,'2019-11-28 11:51:56.618234',-1,'2019-11-28 11:51:56.618234','mark_migrated_family_location','familyid,areaid,locationid,id,userid','update imt_family_migration_master set location_migrated_to = #locationid# , area_migrated_to = #areaid# ,migrated_location_not_known = false , confirmed_on = now() , confirmed_by = #userid# , modified_on = now() , modified_by = #userid# where  id=#id#;

with family_details as(

select id as "familyId"  , family_id as "familyIdString"
from imt_family  where id = #familyid# 
),

member_details as(

select ARRAY(
select row_to_json(tm.*) from (
select  unique_health_id as "healthId" , first_name as "firstName", middle_name as "middleName", last_name as "lastName"
from imt_member where family_id=(select family_id from imt_family where id = #familyid#) ) tm
) as "memberDetails"
	
),

location_details as(

                 select string_agg(l.name,''>'' order by ld.depth desc) as  "locationDetails" from location_hierchy_closer_det ld,
                 location_master l  where child_id  = #locationid# and ld.parent_id = l.id
),

area_details as(

                select string_agg(l.name,''>'' order by ld.depth desc)  as "areaDetails" from location_hierchy_closer_det ld,
                location_master l  where child_id  = #areaid# and ld.parent_id = l.id
),


fhw as (

	select first_name || '' '' || middle_name || '' '' || last_name as "fhwName", 
	contact_number as "fhwPhoneNumber"
	from imt_family_migration_master fm
	inner join um_user_location ul on fm.location_migrated_from = ul.loc_id and ul.state = ''ACTIVE''
	inner join um_user u on ul.user_id = u.id and u.state = ''ACTIVE'' and u.role_id = (select id from um_role_master where name = ''FHW'')
	where fm.id = #id#

) ,
otherInfo as (

	select other_information as "otherInfo" from imt_family_migration_master where id = #id#

)
 									  
INSERT INTO public.techo_notification_master(
	notification_type_id,  location_id, other_details,schedule_date,state,migration_id,family_id,created_by,created_on,modified_by,modified_on
)
select id, #locationid#, row_to_json(t), now(), ''PENDING'', #id#, #familyid#, #userid#, now(), #userid#, now()
from notification_type_master, ( select * from   family_details , member_details, location_details , area_details , fhw , otherInfo ) t where code = ''FMI'';',false,'ACTIVE','Mark Migrated Location Of Family',true,'b3e27b1f-aef1-4ff3-b17f-c66f2c810b6c'),
	 (60512,'2020-04-10 00:00:00',60512,'2020-04-10 00:00:00','covid19_get_location_clusters',NULL,'select location_cluster_master.id,
location_cluster_master.name,
location_cluster_master.population,
location_cluster_master.state,
string_agg(get_location_hierarchy(location_cluster_mapping_detail.location_id),'',<br>'') as "locations"
from location_cluster_master
inner join location_cluster_mapping_detail on location_cluster_master.id = location_cluster_mapping_detail.cluster_id
group by location_cluster_master.id,
location_cluster_master.name,
location_cluster_master.population,
location_cluster_master.state',true,'ACTIVE',NULL,true,'dced1fc1-e4f3-4f12-ae46-92f97ec91a8e'),
	 (60512,'2021-03-17 00:00:00',60512,'2021-03-17 00:00:00','toggle_location_type_status','id','update location_type_master
set is_active = not is_active
where id = #id#',false,'ACTIVE',NULL,true,'e2db2cf7-280d-43c6-a513-ad29d98c25fd'),
	 (1,'2018-07-25 18:10:36.543',58981,'2019-12-17 19:04:55.588','mark_as_wrongly_pregnancy_mark','member_id,action_by,family_id,normal_cycle_days,last_lmp_date,pregnancy_reg_det_id,member_location_id','update techo_notification_master set state = ''MARK_AS_WRONGLY_PREGNANT'', 
modified_on = now(), modified_by = #action_by# 
where member_id = #member_id# and state in (''PENDING'',''RESCHEDULE'') 
and notification_type_id in (5/*FHW WPD*/,2/*ANC*/);
		
update event_mobile_notification_pending set is_completed = true, state = ''MARK_AS_WRONGLY_PREGNANT'', 
modified_by = #action_by#, modified_on = now()
where member_id = #member_id# and state = ''PENDING'' 
and notification_configuration_type_id in (''5d1131bc-f5bc-4a4a-8d7d-6dfd3f512f0a'',''faedb8e7-3e46-40a2-a9ac-ea7d5de944fa'');

update imt_member set is_pregnant = false, cur_preg_reg_det_id=null
,lmp = (case when ''#last_lmp_date#'' = ''null'' then imt_member.lmp else cast((case when ''#last_lmp_date#'' = ''null'' then null else ''#last_lmp_date#'' end) as date) end)
,current_gravida = case when current_gravida is not null then current_gravida - 1 else null end
,current_para = case when current_para is not null then current_para - 1 else null end
,modified_by = #action_by#, modified_on = now() where id = #member_id#;

update rch_pregnancy_registration_det set state = ''MARK_AS_WRONGLY_PREGNANT'' where id = #pregnancy_reg_det_id#;

with lmp_date as(
select cast(''#last_lmp_date#'' as date) + interval ''1'' day * #normal_cycle_days#  as next_lmp
)
INSERT INTO public.techo_notification_master(
        notification_type_id, notification_code, location_id, 
        family_id, member_id, schedule_date, due_on, expiry_date, 
        state, created_by, created_on, modified_by, modified_on
)
VALUES(
    1, 0, #member_location_id#, #family_id#, #member_id#,
	case when (select next_lmp from lmp_date) < now() then (select next_lmp from lmp_date) else now() end, 
    case when (select next_lmp from lmp_date) < now() then (select next_lmp from lmp_date) else now() end + interval ''1'' day * 3, null
	,''PENDING'', #action_by# , now(), #action_by# , now()
);',false,'ACTIVE','It will mark the mobile notification as WRONGLY_PREGNANT',true,'a8daf793-fe97-44f4-9050-f4b084057bc7'),
	 (1,'2019-04-17 10:57:26.254',58981,'2019-09-24 14:55:14.465','retrieve_member_details_for_mig','memberId','with member as(
	select m.*, f.hof_id, f.location_id, 
	head.first_name || '' '' || head.middle_name || '' '' || head.last_name as headName,
	head.mobile_number as headContactNumber from imt_member m 
	inner join imt_family f on m.family_id = f.family_id
	left join imt_member head on head.id = f.hof_id
	where m.id = #memberId#
        limit 1
), children as (
	select concat(first_name, '' '', middle_name, '' '', last_name) as fullname, 
	dob, mother_id, id, weight, unique_health_id as uniquehealthid 
	from imt_member 
	where mother_id = #memberId#
), asha as (
	select member.*, 
	um_user.first_name || '' ''  || um_user.middle_name || '' '' || um_user.last_name as fhwName , 
   	um_user.contact_number as fhwContactNumber
    from member, um_user, um_user_location l 
    where l.state = ''ACTIVE''
    and um_user.id = l.user_id
    and um_user.state = ''ACTIVE''
   	and l.loc_id= member.location_id
)
select asha.mobile_number as contactnumber, asha.id,asha.unique_health_id as uniquehealthid, concat(asha.first_name, '' '', asha.middle_name, '' '', asha.last_name) fullname,
asha.fhwName, asha.fhwContactNumber,
get_location_hierarchy(asha.location_id) as locationfromName,
asha.family_id as familyid,
asha.headname, asha.headcontactnumber,
case when count(children.*) > 0 then cast(array_to_json(array_agg(row_to_json(children.*)))as text) end as child
from asha 
left join children on asha.id = children.mother_id
group by asha.id,asha.unique_health_id,asha.first_name,asha.middle_name,asha.last_name,asha.headcontactnumber,asha.headname,asha.family_id,
asha.fhwName,asha.fhwContactNumber,asha.mobile_number,locationfromName',true,'ACTIVE','Retrieve details of unresolved migrated out members',true,'1af820ff-95a9-4506-8da7-9e6316b16c0a'),
	 (409,'2019-07-16 21:35:58.211',409,'2019-10-18 16:45:42.856','cm_dashboard_cy_report','monthyear','--CY Report
with loc_det as (
select lm.id as loc_id,lm.english_name as taluka_name,lm.cm_dashboard_code as taluka_code
,dist.location_code as district_code,dist.english_name as district_name
from location_master lm,location_master dist
where lm.type in (''B'',''Z'') and lm.parent = dist.id
),dates as (
select to_date(case when ''#monthyear#'' = ''null'' then null else ''#monthyear#'' end,''MM-DD-YYYY'') as from_date 
,to_date(case when ''#monthyear#'' = ''null'' then null else ''#monthyear#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 milliseconds'' as to_date
),register as (
	select parent_id, sum(cm_dashboard_chirnajivi) count 
	from rch_delivery_date_base_location_wise_data_point rwmm 
	inner join location_hierchy_closer_det lhcd on lhcd.child_id = rwmm.location_id 
	inner join dates on true    
	where 
        lhcd.parent_id in (select loc_id from loc_det)
        and rwmm.location_id = lhcd.child_id
	and month_year between dates.from_date and dates.to_date 
	group by lhcd.parent_id 
),
health_infa as (
	select count(1) as healthCount,location.parent_id as loc_id
	from health_infrastructure_details health, location_hierchy_closer_det location
	where location.child_id =  health.location_id 
	and is_chiranjeevi_scheme = true
	and location.parent_id in (select loc_id from loc_det)
	group by location.parent_id
),cy_report_det as (
select 
	loc_det.loc_id,health.healthCount as enrolled_doc,high.count as cy_delivery
from loc_det 
left join register high on loc_det.loc_id = high.parent_id
left join health_infa health on health.loc_id = high.parent_id
order by loc_det.loc_id
)
select loc_det.district_code ,loc_det.district_name
,loc_det.taluka_code,loc_det.taluka_name
,EXTRACT(YEAR FROM dates.from_date) as year
,EXTRACT(MONTH FROM dates.from_date) as month
,cy_report_det.enrolled_doc
,cy_report_det.cy_delivery
from loc_det
inner join dates on true
left join cy_report_det on loc_det.loc_id = cy_report_det.loc_id;',true,'ACTIVE',NULL,true,'b2137950-1610-417b-962b-bd4e5f458920'),
	 (1,'2019-05-14 00:00:00',60512,'2019-11-27 12:35:53.017','retrieve_anc_member_details','id','with loc_area_ids as (
	select location_id,area_id
	from imt_family,imt_member
	where imt_member.family_id = imt_family.family_id
	and imt_member.id = #id#
),fhw_details as (
	select loc_area_ids.location_id,concat(u.first_name,'' '',u.last_name,'' ('',contact_number,'')'') as anmInfo
	from um_user u, um_user_location ul,loc_area_ids
	where u.id = ul.user_id and ul.state = ''ACTIVE'' and u.state = ''ACTIVE'' and u.role_id = 30 and ul.loc_id = loc_area_ids.location_id
),asha_details as (
	select loc_area_ids.area_id, concat(u.first_name,'' '',u.last_name,'' ('',contact_number,'')'') as ashaInfo
	from um_user u, um_user_location ul,loc_area_ids
	where u.id = ul.user_id and ul.state = ''ACTIVE'' and u.state = ''ACTIVE'' and u.role_id = 24 and ul.loc_id = loc_area_ids.area_id
), gravida as (
	select #id# as mother_id, count(*) as gravida from (
		select mother_id
		from imt_member where mother_id = #id#
		group by mother_id, dob
	) as t
)
select
aadhar_number_encrypted as "aadharNumber",
unique_health_id as "uniqueHealthId",
imt_member.family_id as "familyId",
account_number as "accountNumber",
ifsc as "ifsc",
imt_member.additional_info as "additionalInfo",
anc_visit_dates as "ancVisitDates",
imt_family.area_id as "areaId",
blood_group as "bloodGroup",
imt_family.bpl_flag as "bplFlag",
listvalue_field_value_detail.value as "caste",
cur_preg_reg_date as "curPregRegDate",
cur_preg_reg_det_id as "curPregRegDetId",
dob as "dob",
edd as "edd",
family_planning_method as "familyPlanningMethod",
imt_family.id as "fid",
first_name as "firstName",
middle_name as "middleName",
last_name as "lastName",
gender as "gender",
haemoglobin as "haemoglobin",
imt_member.id as "id",
immunisation_given as "immunisationGiven",
early_registration as "isEarlyRegistration",
iay_beneficiary as "isIayBeneficiary",
jsy_beneficiary as "isJsyBeneficiary",
jsy_payment_given as "isJsyPaymentDone",
kpsy_beneficiary as "isKpsyBeneficiary",
chiranjeevi_yojna_beneficiary as "isChiranjeeviYojnaBeneficiary",
is_mobile_verified as "isMobileNumberVerified",
is_native as "isNativeFlag",
is_pregnant as "isPregnantFlag",
imt_member.is_report as "isReport",
last_delivery_date as "lastDeliveryDate",
last_delivery_outcome as "lastDeliveryOutcome",
lmp as "lmpDate",
get_location_hierarchy(imt_family.location_id) as "locationHierarchy",
imt_family.location_id as "locationId",
imt_family.maa_vatsalya_number as "maaVatsalyaCardNumber",
marital_status as "maritalStatus",
mobile_number as "mobileNumber",
imt_member.state as "state",
weight as "weight",
year_of_wedding as "yearOfWedding",
fhw_details.anmInfo as "anmInfo",
asha_details.ashaInfo as "ashaInfo",
gravida.gravida as "gravida",
current_gravida as "currentGravida"
from imt_member
inner join imt_family on imt_member.family_id = imt_family.family_id
left join listvalue_field_value_detail on imt_family.caste = cast(listvalue_field_value_detail.id as text)
left join fhw_details on imt_family.location_id = fhw_details.location_id
left join asha_details on imt_family.area_id = asha_details.area_id
left join gravida on imt_member.id = gravida.mother_id
where imt_member.id = #id#',true,'ACTIVE',NULL,true,'eed9134b-6929-480e-b29e-911811a0258a'),
	 (409,'2019-07-16 21:40:06.778',409,'2019-10-18 00:19:03.049','cm_dashboard_jssk_report','monthyear','--JSSK
with loc_det as (
select lm.id as loc_id,lm.english_name as taluka_name,lm.cm_dashboard_code as taluka_code
,dist.location_code as district_code,dist.english_name as district_name
from location_master lm,location_master dist
where lm.type in (''B'',''Z'') and lm.parent = dist.id
),dates as (
select to_date(case when ''#monthyear#'' = ''null'' then null else ''#monthyear#'' end,''MM-DD-YYYY'') as from_date 
,to_date(case when ''#monthyear#'' = ''null'' then null else ''#monthyear#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 milliseconds'' as to_date
),anc_registration_detail as (
select
	lh.parent_id as location_id,
	sum(anc.anc_reg) as anc_reg
from
	rch_service_provided_during_year anc ,
	location_hierchy_closer_det lh,dates
where
	lh.parent_id in (
		select loc_id
	from
		loc_det)
	and anc.location_id = lh.child_id
	and anc.month_year between dates.from_date and dates.to_date
group by
	lh.parent_id 
),phi_delivery as (
select
	lh.parent_id as location_id,
	sum(del.chc + del.chiranjivi + del.dh + del.phc + del.sc + del.sdh + del.uhc) as phi_del
from
	rch_delivery_date_base_location_wise_data_point del ,
	location_hierchy_closer_det lh ,
	dates
where
	lh.parent_id in (
		select loc_id
	from
		loc_det)
	and del.location_id = lh.child_id
	and del.month_year between dates.from_date and dates.to_date
group by
	lh.parent_id 
),wpd_free_det as (
select
	lh.parent_id as location_id ,
	sum(case when free_diet then 1 else 0 end) as free_diet ,
	sum(case when free_medicines then 1 else 0 end) as free_medicines ,
	sum(case when free_drop_transport then 1 else 0 end) as free_drop_transport ,
	sum(case when free_blood_transfusion then 1 else 0 end) as free_blood_transfusion ,
	sum(case when free_lab_test then 1 else 0 end) as free_lab_test
from
	rch_wpd_mother_master as wpd ,
	dates ,
	location_hierchy_closer_det lh
where
	wpd.date_of_delivery between dates.from_date and dates.to_date
	and wpd.location_id = lh.child_id
	and lh.parent_id in (
		select loc_id
	from
		loc_det)
group by
	lh.parent_id 
),anc_free_det as (
select
	lh.parent_id as location_id ,
	sum(case when anc_ser.calcium_tablets_given > 0 or anc_ser.ifa_tablets_given > 0 or anc_ser.fa_tablets_given > 0 then 1 else 0 end) as free_medicines ,
	sum(case when anc_ser.haemoglobin_count > 0 or anc_ser.sickle_cell_test != ''NOT_DONE'' or anc_ser.vdrl_test != ''NOT_DONE'' or anc_ser.hiv_test != ''NOT_DONE'' or anc_ser.hbsag_test != ''NOT_DONE'' then 1 else 0 end) as free_lab_test
from
	rch_anc_master as anc_ser ,
	dates ,
	location_hierchy_closer_det lh
where
	anc_ser.service_date between dates.from_date and dates.to_date
	and anc_ser.location_id = lh.child_id
	and anc_ser.is_from_web = true
	and lh.parent_id in (
		select loc_id
	from
		loc_det) 
group by lh.parent_id
),jssk_report_det as (
select
	loc_det.loc_id as loc_id
	,sum(anc_registration_detail.anc_reg) as anc_reg
	,sum(phi_delivery.phi_del) as govt_del
	,sum(wpd_free_det.free_medicines + anc_free_det.free_medicines) as free_drug
	,sum(wpd_free_det.free_diet) as free_diet
	,sum(wpd_free_det.free_lab_test + anc_free_det.free_lab_test) as free_diagnostic
	,sum(wpd_free_det.free_blood_transfusion) as free_blood_transfusion
	,sum(wpd_free_det.free_drop_transport) as free_referral_transport	
from
	loc_det 
	left join anc_registration_detail on anc_registration_detail.location_id = loc_det.loc_id
	left join phi_delivery on  phi_delivery.location_id = loc_det.loc_id
	left join wpd_free_det on  wpd_free_det.location_id = loc_det.loc_id
	left join anc_free_det on  anc_free_det.location_id = loc_det.loc_id
group by loc_det.loc_id
order by loc_det.loc_id
)
select  loc_det.district_code ,loc_det.district_name
,loc_det.taluka_code,loc_det.taluka_name
,EXTRACT(YEAR FROM dates.from_date) as year
,EXTRACT(MONTH FROM dates.from_date) as month
,jssk_report_det.anc_reg
,jssk_report_det.govt_del
,jssk_report_det.free_drug
,jssk_report_det.free_diet
,jssk_report_det.free_diagnostic
,jssk_report_det.free_blood_transfusion
,jssk_report_det.free_referral_transport
from loc_det
inner join dates on true
left join jssk_report_det on loc_det.loc_id = jssk_report_det.loc_id;',true,'ACTIVE',NULL,true,'7e652809-9ea5-49d6-98bd-4b728e9cac01'),
	 (66522,'2019-09-13 11:26:54.017',66522,'2019-10-18 16:51:10.875','state_of_health_data_retrieval_6','locationId,timeline_type','with  location_type as(select  level,string_agg(name,''/'') as location_type from location_type_master where 
level=(case when ''#locationId#'' = ''null'' then 1 else (select level+1 from location_type_master t 
inner join location_master m on t.type=m.type where id=2) end)group by level )

select lt.level,lt.type,l.id as "locationId",
case when lt.type =''C'' or lt.type =''D'' then ''Districts/Corporation'' else lt.name end as "locationType",
case when l.english_name is not null then l.english_name else l.name end as english_name,element_name as "elementName",
sum(value) as value,target,sum(male) as male,sum(female) as female,
sum(chart1) as chart1,sum(chart2) as chart2,sum(chart3) as chart3,sum(chart4) as chart4,
max(days) as days 
from 
location_type,location_type_master lt,soh_timeline_analytics  sh,location_master l where sh.location_id in 
(select id from location_master  where id in (select child_id 
							from location_hierchy_closer_det 
							where parent_id =#locationId#  and depth=case when #locationId# = 2 then 2 else 1 end))
							and sh.location_id = l.id 
and l.type = lt.type 
and timeline_type = ''#timeline_type#''
group by lt.level, lt.type,
location_type.location_type, sh.target,l.id,l.english_name,sh.element_name order by english_name;',true,'ACTIVE',NULL,true,'ebfd714a-1abf-4937-8f86-b6f9a684105f'),
	 (60512,'2019-11-27 11:51:23.056',60512,'2019-11-27 11:51:23.056','health_infra_retrival_by_type_for_ncd','locationId,type','select h.id as id,
h.name as name
from health_infrastructure_details h
where h.type=#type# and location_id in (select child_id from location_hierchy_closer_det where parent_id = #locationId#)',true,'ACTIVE',NULL,true,'f90f252b-2a5d-4441-9e62-4c59e596d9c3'),
	 (1,'2019-12-03 15:34:39.775516',NULL,NULL,'mytecho_delete_starred_card','loggedInUserId,languageCode,cardConfigId','delete from mytecho_user_starred_card_master where user_id=#loggedInUserId# 
and mt_timeline_config_id=#cardConfigId# and language=''#languageCode#'' ',false,'ACTIVE','mytecho_delete_starred_card',true,'bca3dd75-0417-4c95-b187-f0330fb54540'),
	 (66522,'2020-01-09 17:21:20.93',74841,'2020-01-24 18:51:23.922','state_of_health_get_lbw_detail_3','fromDate,toDate,limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
rcad.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
rcad.delivery_location_id as loc_id,
left(cast(rcad.birth_weight as text), 4) as birth_weight
from rch_child_analytics_details rcad,imt_member m
where rcad.delivery_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and rcad.dob between ''#fromDate#'' and ''#toDate#''
and rcad.birth_weight < 2.5 and m.id = rcad.member_id 
order by birth_weight
limit #limit#
),
family_head as (
	select a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
	inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id
	where family_head = true and im.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'',''TEMPORARY'')
),
contact_person as (
	select a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
	group by member_id) as t,um_user u
	where t.user_id = u.id
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
	inner join anmLocation a on  uld.loc_id = a.location_id
	inner join um_user uu on uu.id = uld.user_id 
where 
uld.state = ''ACTIVE'' and uu.state=''ACTIVE'' and
uu.role_id in (select id from um_role_master where code =''FHW'' )
	group by a.location_id,a.member_id

),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
	select max(service_date) as service_date,services.member_id from rch_member_services services
	inner join analytics a on a.member_id = services.member_id
	group by services.member_id 
),
lastServiceUnique as(
	select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
	where service.member_id = last.member_id
	group by service.member_id, last.service_date
),
lastServiceDetails as (
	select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
	service.location_id,
	location.name as locationName,
	case when service.service_type =''FHW_LMP'' then ''LMP Visit''
		when  service.service_type =''FHW_ANC'' then ''ANC Visit''
		  when service.service_type = ''FHW_PNC'' then ''PNC Visit''
		  when service.service_type = ''FHW_CS'' then ''Child Service''
		  when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
	end as service_type,
	service.member_id 
	from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id
	
	inner join location_master location on service.location_id = location.id
	
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName",
birth_weight as "birthWeight"
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id',true,'ACTIVE',NULL,true,'3d9dd4f0-3ec7-4c3d-b59c-4e916dd14d61'),
	 (66522,'2019-09-13 10:37:26.798',66522,'2019-12-27 18:03:17.457','state_of_health_immunized_detail_2','limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
rcad.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
to_char(m.dob ,''DD-MM-YYYY'') as "dob",
TO_CHAR(age(current_date,m.dob),''YY "Years" mm "Months" DD "Days"'') as "age",
case when current_date - m.dob >= 310 and current_date - m.dob < 365 then ''10 to 11 Months''
 when current_date - m.dob >= 365 then ''Greater than 1 year'' end as "AgeGroup",
m.immunisation_given as "immunisationGiven",
m.mobile_number as "contactNumber",
to_char(rcad.last_child_service_date,''dd-MM-yyyy'') as "LastServiceData",
rcad.loc_id
from rch_child_analytics_details rcad,imt_member m
where rcad.loc_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and ((current_date - rcad.dob between ''310'' and ''365''
and rcad.full_immunization_date is null) or (current_date - rcad.dob between ''365'' and ''780'' and 
case when rcad.opv1 is not null
		and rcad.opv2 is not null
		and rcad.opv3 is not null
		and (rcad.dpt1 is not null or rcad.penta1 is not null)
		and (rcad.dpt2 is not null or rcad.penta2 is not null)
		and (rcad.dpt3 is not null or rcad.penta3 is not null)
		and (rcad.measles is not null 
		or rcad.measles_rubella is not null) then false else true end 
))
and death_date is null and member_id is not null
and m.id = rcad.member_id 
limit #limit#),
family_head as (
select a.member_id as member_id,
concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
im.mobile_number as FamilyHeadMobileNo
from imt_member im inner join analytics a on a.family_id = im.family_id
where family_head = true
),
contact_person as (
select a.member_id, 
concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
im.mobile_number as contactPersonMobileNo  
from imt_member im 
inner join analytics a on a.family_id = im.family_id 
inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id

),

asha as (
select t.member_id
,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
u.contact_number as ashaMobileNo
from (
select member_id,max(uld.user_id) as user_id
from um_user_location uld 
inner join analytics a on  uld.loc_id = a.loc_id
inner join um_user uu on uu.id = uld.user_id 
where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
group by member_id) as t,um_user u
where t.user_id = u.id

),
anmLocation as (
select parent_id as location_id,a.member_id from location_hierchy_closer_det 
lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
select max(uu.id) as anm_member_id, a.member_id,a.location_id from user_location_detail uld 
inner join anmLocation a on  uld.location = a.location_id
inner join um_user uu on uu.id = uld.user_id 
where uu.role_id in (select id from um_role_master where code =''FHW'' )
group by a.location_id,a.member_id
),
anmName as (
select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
uu.contact_number as ANMMobileNo

FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
select max(service_date) as service_date,services.member_id from rch_member_services services
inner join analytics a on a.member_id = services.member_id
group by services.member_id 
),
lastServiceUnique as(
select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
where service.member_id = last.member_id
group by service.member_id, last.service_date
),
lastServiceDetails as (
select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
service.location_id,
location.name as locationName,
case when service.service_type =''FHW_LMP'' then ''LMP Visit''
when  service.service_type =''FHW_ANC'' then ''ANC Visit''
 when service.service_type = ''FHW_PNC'' then ''PNC Visit''
 when service.service_type = ''FHW_CS'' then ''Child Service''
 when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
end as service_type,
service.member_id 
from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id

inner join location_master location on service.location_id = location.id

)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName"
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id',true,'ACTIVE',NULL,true,'00da63bf-5d9a-455c-9e2a-dd3cabc5e3a8'),
	 (1,'2019-12-23 00:00:00',NULL,NULL,'sickle_cell_search_by_location_id','locationId,limit,offSet','
select imt_member.unique_health_id as "uniqueHealthId",
imt_member.id as "memberId",
imt_member.family_id as "familyId",
imt_family.location_id as "locationId",
get_location_hierarchy(imt_family.location_id) as "locationHierarchy",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "name",
imt_member.gender as "gender",
rel.value as "religion",
cas.value as "caste",
imt_member.dob as "dob",
cast(age(imt_member.dob)as text) as "age"
from imt_member
inner join imt_family on imt_member.family_id = imt_family.family_id
inner join location_hierchy_closer_det on imt_family.location_id = location_hierchy_closer_det.child_id
left join listvalue_field_value_detail rel on cast(imt_family.religion as bigint) = rel.id
left join listvalue_field_value_detail cas on cast(imt_family.caste as bigint) = cas.id
where location_hierchy_closer_det.parent_id = #locationId#
and ((imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')) or (imt_member.state = ''com.argusoft.imtecho.member.state.temporary''))
limit #limit# offset #offSet#
',true,'ACTIVE',NULL,true,'dad6e0ab-bb1f-4e8a-b9a1-38903f67279b'),
	 (60512,'2019-08-02 16:44:00.783',66522,'2020-01-28 19:00:22.67','cmtc_child_screening_analytics_details_insertion',NULL,'begin;
with det as (
   select
   imt_member.id as member_id,
   rch_child_service_master.location_id,
   imt_member.dob,
   rch_child_service_master.id as child_service_id,
   rch_child_service_master.service_date,
   rch_child_service_master.mid_arm_circumference,
   rch_child_service_master.have_pedal_edema,
   rch_child_service_master.sd_score,
   rch_child_service_master.created_by,
   rch_child_service_diseases_rel.child_service_id as disease_id,
   child_cmtc_nrc_screening_detail.id as screening_id,
   child_cmtc_nrc_admission_detail.id as admission_id,
   child_cmtc_nrc_admission_detail.apetite_test
   from imt_member
   inner join rch_child_service_master on imt_member.id = rch_child_service_master.member_id
   left join rch_child_service_diseases_rel on rch_child_service_master.id = rch_child_service_diseases_rel.child_service_id
   left join child_cmtc_nrc_screening_detail on imt_member.id = child_cmtc_nrc_screening_detail.child_id
   left join child_cmtc_nrc_admission_detail on child_cmtc_nrc_screening_detail.admission_id = child_cmtc_nrc_admission_detail.id
   where imt_member.dob between (rch_child_service_master.service_date - interval ''60 months'') and (rch_child_service_master.service_date - interval ''6 months'')
   and rch_child_service_master.modified_on > (select key_value::timestamp from system_configuration where system_key = ''cmtc_child_screening_analytics_details_last_insertion_date'')
),existing_deletion as (
delete from cmtc_child_screening_analytics_details
where cmtc_child_screening_analytics_details.rch_child_service_master_id in (select child_service_id from det)
returning cmtc_child_screening_analytics_details.rch_child_service_master_id
)
insert into cmtc_child_screening_analytics_details
(member_id,location_id,dob,rch_child_service_master_id,rch_child_service_date,muac,have_pedal_edema,
sd_score,created_by,disease_id,screening_id,admission_id,apetite_test)
select det.member_id,det.location_id,det.dob,det.child_service_id,det.service_date,det.mid_arm_circumference,
det.have_pedal_edema,det.sd_score,det.created_by,det.disease_id,det.screening_id,det.admission_id,det.apetite_test
from det;

update system_configuration
set key_value = cast(now() as text)
where system_key = ''cmtc_child_screening_analytics_details_last_insertion_date'';

update timer_event SET completed_on = clock_timestamp(),status = ''COMPLETED''
where event_config_id = 75 and status = ''PROCESSED'';

commit;',false,'ACTIVE',NULL,true,'f970c384-7dd6-41a1-a366-03f38ad8e59d'),
	 (1,'2019-07-01 00:00:00',1027,'2020-02-13 18:19:59.989','mob_anc_services_provided','memberId','with const as (
	select cast(''HOME'' as text) as const, cast(''Home'' as text) as name
	union
	select cast(''HOSP'' as text) as const, cast(''Hospital'' as text) as name
	union
	select cast(''THISHOSP'' as text) as const, cast(''Hospital'' as text) as name
	union
	select cast(''MAMTA_DAY'' as text) as const, cast(''Mamta Day'' as text) as name
	union
	select cast(''OUT_OF_STATE_GOVT'' as text) as const, cast(''Out of State - Govt. Hospital'' as text) as name
	union
	select cast(''OUT_OF_STATE_PVT'' as text) as const, cast(''Out of State - Private Hospital'' as text) as name
)
select to_char(rch.service_date, ''DD/MM/YYYY'') as "Service Date",
case when ancplace.value is not null then ancplace.value 
	when const.const is not null then const.name
	when rch.delivery_place is not null then rch.delivery_place 
	else null end as "ANC Visit Place",
rch.id as "hiddenVisitId",
cast(''FHW_ANC'' as text) as "hiddenServiceType"
from rch_anc_master rch
inner join imt_member mem on rch.member_id = mem.id
left join listvalue_field_value_detail ancplace on ancplace.id = rch.anc_place
left join const on const.const = rch.delivery_place
where member_id = #memberId#
order by rch.service_date desc;',true,'ACTIVE',NULL,true,'e8901fec-20a8-4194-b67d-5e472f5d9259'),
	 (66522,'2020-02-25 18:58:58.479',66522,'2020-04-06 15:56:56.012','state_of_health_get_timeline_data','locationId','select 
case when timeline_sub_type = ''DAY'' then to_char(cast (timeline_type as date),''DD,''''Mon'') 
else
to_char(cast (timeline_type as date),''Mon,''''YY'')  end
as timeline,*
from soh_timeline_analytics where 
timeline_sub_type in (''DATE'',''DAY'')  and location_id=''#locationId#''
order by cast (timeline_type as date) desc',true,'ACTIVE',NULL,true,'64377f21-31d7-48d0-8ac1-262fb0c2905e'),
	 (66522,'2019-09-13 10:35:27.498',74841,'2020-01-24 12:10:38.674','state_of_health_get_lbw_detail_2','fromDate,toDate,limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
rcad.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
rcad.delivery_location_id as loc_id,
left(cast(rcad.birth_weight as text), 4) as birth_weight
from rch_child_analytics_details rcad,imt_member m
where rcad.delivery_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and rcad.dob between ''#fromDate#'' and ''#toDate#''
and rcad.birth_weight < 1.8 and m.id = rcad.member_id 
order by birth_weight
limit #limit#
),
family_head as (
	select a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
	where family_head = true
),
contact_person as (
	select a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
	group by member_id) as t,um_user u
	where t.user_id = u.id
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
	inner join anmLocation a on  uld.loc_id = a.location_id
	inner join um_user uu on uu.id = uld.user_id 
where 
uld.state = ''ACTIVE'' and uu.state=''ACTIVE'' and
uu.role_id in (select id from um_role_master where code =''FHW'' )
	group by a.location_id,a.member_id

),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
	select max(service_date) as service_date,services.member_id from rch_member_services services
	inner join analytics a on a.member_id = services.member_id
	group by services.member_id 
),
lastServiceUnique as(
	select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
	where service.member_id = last.member_id
	group by service.member_id, last.service_date
),
lastServiceDetails as (
	select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
	service.location_id,
	location.name as locationName,
	case when service.service_type =''FHW_LMP'' then ''LMP Visit''
		when  service.service_type =''FHW_ANC'' then ''ANC Visit''
		  when service.service_type = ''FHW_PNC'' then ''PNC Visit''
		  when service.service_type = ''FHW_CS'' then ''Child Service''
		  when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
	end as service_type,
	service.member_id 
	from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id
	
	inner join location_master location on service.location_id = location.id
	
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName",
birth_weight as "birthWeight"
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id',true,'ACTIVE',NULL,true,'fede26e0-4e63-4b33-a4e1-303d66f5eb9c'),
	 (1,'2020-02-19 13:16:15.080771',NULL,NULL,'team_all_types_for_roles',NULL,'select id ,type from team_type_master where state =''ACTIVE'';',true,'ACTIVE',NULL,true,'fa02b370-f2e8-4de1-9b70-9d5e321274b3'),
	 (66522,'2019-12-27 17:02:37.521',74841,'2020-01-31 12:38:26.561','state_of_health_immunized_detail_3','fromDate,toDate,limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
rcad.member_id as member_id,
rcad.overdue_immunisation as "overdueImmunisation",
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
to_char(m.dob ,''DD-MM-YYYY'') as "dob",
fully_immunization_in_number_of_month >= 12 as "isFiAfter1Year",
INITCAP(REPLACE (cast(age(current_date,m.dob) as text), ''mon'', ''month'') )as "age",
case when current_date - m.dob >= 310 and current_date - m.dob < 365 then ''10 to 11 Months''
 when current_date - m.dob >= 365 then ''Greater than 1 year'' end as "AgeGroup",
m.immunisation_given as "immunisationGiven_OLD",
m.mobile_number as "contactNumber",
to_char(rcad.last_child_service_date,''dd-MM-yyyy'') as "LastServiceData",
rcad.loc_id
from rch_child_analytics_details rcad,imt_member m
where rcad.native_loc_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and (full_immunization_date is null or fully_immunization_in_number_of_month >= 12)


and current_date - rcad.dob between #fromDate# and #toDate#
and death_date is null and member_id is not null
and m.id = rcad.member_id 
limit #limit#),
analytics_run_date as (
	select TO_DATE(key_value,''MM-DD-YYYY'') as last_run_date from system_configuration where  system_key  =''rch_child_analytics_last_schedule_date''
),
immunisationsTemp as (
  select * from rch_immunisation_master,analytics_run_date
   where member_id in (select member_id from analytics )
  and created_on < analytics_run_date.last_run_date
  order by given_on
),
immunisations as (
  select member_id, string_agg( CONCAT(immunisation_given,''#'',to_char(given_on,''DD/MM/YYYY'')),'','') as immunisation_given from immunisationsTemp
  group by member_id
),
family_head as (
select a.member_id as member_id,
concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
im.mobile_number as FamilyHeadMobileNo
from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id
where family_head = true and 
        im.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'',''TEMPORARY'')
),
contact_person as (
select a.member_id, 
concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
im.mobile_number as contactPersonMobileNo  
from imt_member im 
inner join analytics a on a.family_id = im.family_id 
inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id

),

asha as (
select t.member_id
,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
u.contact_number as ashaMobileNo
from (
select member_id,max(uld.user_id) as user_id
from um_user_location uld 
inner join analytics a on  uld.loc_id = a.loc_id
inner join um_user uu on uu.id = uld.user_id 
where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
group by member_id) as t,um_user u
where t.user_id = u.id

),
anmLocation as (
select parent_id as location_id,a.member_id from location_hierchy_closer_det 
lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
inner join anmLocation a on  uld.loc_id = a.location_id
inner join um_user uu on uu.id = uld.user_id 
where 
uld.state = ''ACTIVE'' and uu.state=''ACTIVE'' and
uu.role_id in (select id from um_role_master where code =''FHW'' )
group by a.location_id,a.member_id
),
anmName as (
select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
uu.contact_number as ANMMobileNo

FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
select max(service_date) as service_date,services.member_id from rch_member_services services
inner join analytics a on a.member_id = services.member_id
group by services.member_id 
),
lastServiceUnique as(
select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
where service.member_id = last.member_id
group by service.member_id, last.service_date
),
lastServiceDetails as (
select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
service.location_id,
location.name as locationName,
case when service.service_type =''FHW_LMP'' then ''LMP Visit''
when  service.service_type =''FHW_ANC'' then ''ANC Visit''
 when service.service_type = ''FHW_PNC'' then ''PNC Visit''
 when service.service_type = ''FHW_CS'' then ''Child Service''
 when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
end as service_type,
service.member_id 
from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id

inner join location_master location on service.location_id = location.id

)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName",
immu.immunisation_given as "immunisationGiven"
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id
left join immunisations immu on immu.member_id = service.member_id',true,'ACTIVE',NULL,true,'46d05a52-62a3-4ad0-944b-81a4bc5d709e'),
	 (1,'2019-12-03 15:34:39.775',409,'2020-01-26 22:06:55.539','mytecho_cards_conf_retrieval','loggedInUserId','with user_det as(
select language_preference,mytecho_member_id as member_id
from mytecho_user 
where id = #loggedInUserId#
),member_det as (
select mtm.id as member_id
,case when mtm.is_pregnant = true then ''PREGNANT''
when cast(mtm.last_delivery_date as date) >= current_date - interval ''60 day'' then ''MOTHER''
when mtm.dob >= current_date - interval ''5 year'' then ''CHILD''
when mtm.gender = ''F'' and mtm.dob >= current_date - interval ''18 year'' then ''ELIGIBLE_COUPLE''
else null end as audiance_type
,case when mtm.is_pregnant = true then mtm.lmp_date 
when mtm.dob >= current_date - interval ''5 year'' then mtm.dob
when mtm.gender = ''F'' and mtm.dob >= current_date - interval ''18 year'' then cast(mtm.created_on as date)
else null end as base_date
,user_det.language_preference
from user_det 
left join mytecho_member mtm on mtm.id = user_det.member_id
),user_tip_of_day as (
select 
mt_config.category_id
,mt_config.id
,0 as catagory_order
,mt_language_config.language as language
,mt_language_config.tittle as title
,mt_language_config.description as "description"
,mt_config.component_type as "componentType"
,mt_language_config.button_text as "buttonText"
,case when (mt_language_config.url is null or mt_language_config.url = ''null'')
	then cast (mt_language_config.media_name as text)  else mt_language_config.url end as "mediaUrl"
,case when (mt_language_config.url is null or mt_language_config.url = ''null'')
	then ''SYSTEM'' else ''URL'' end as "mediaType"
,cast (null as timestamp without time zone) as "scheduleDate"
,cast (null as timestamp without time zone) as "expiryDate"
, CAST(''thumbnail.jpg'' as text) as thumbnail,
case when mt_user_starred.user_id is not null
	then true
	else false
	end as "isCardStarred"
from 
member_det mem 
inner join mytecho_user_tip_of_the_day mt_tod on mt_tod.member_id = mem.member_id
inner join mytecho_timeline_config_det mt_config 
on mt_tod.card_config_id = mt_config.id and mt_config.is_active = true
inner join mytecho_timeline_language_wise_config_det mt_language_config
	on mt_config.id = mt_language_config.mt_timeline_config_id 
	and mt_language_config.language = mem.language_preference
left join mytecho_user_starred_card_master mt_user_starred
	on mt_user_starred.mt_timeline_config_id = mt_language_config.mt_timeline_config_id 
	and mt_language_config.language = mt_language_config.language and mt_user_starred.user_id=#loggedInUserId#
	
where  cast(schedule_date as date) = current_date
limit 1
)
select * from user_tip_of_day
union all
select * from (
select DISTINCT ON (category_id,catagory_order)*
from
(
select 
mt_config.category_id
,mt_config.id
,cast(lv.code as int) as catagory_order
,mt_language_config.language as language
,mt_language_config.tittle as title
,mt_language_config.description as "description"
,mt_config.component_type as "componentType"
,mt_language_config.button_text as "buttonText"
,case when (mt_language_config.url is null or mt_language_config.url = ''null'')
	then cast (mt_language_config.media_name as text)  else mt_language_config.url end as "mediaUrl"
,case when (mt_language_config.url is null or mt_language_config.url = ''null'')
	then ''SYSTEM'' else ''URL'' end as "mediaType"
,mem.base_date + schedule_after_number_of_days* interval ''1 day'' as "scheduleDate"
,case 
	when mt_config.expier_after_number_of_days is not null 
		then mem.base_date + mt_config.expier_after_number_of_days * interval ''1 day'' 
	when mem.base_date + schedule_after_number_of_days* interval ''1 day'' > current_date 
		then mem.base_date + schedule_after_number_of_days* interval ''1 day''
	else
		current_date
end as "expiryDate"
, CAST(''thumbnail.jpg'' as text) as thumbnail,
case when mt_user_starred.user_id is not null
	then true
	else false
	end as "isCardStarred"
from 
member_det mem
inner join mytecho_timeline_audience_det aud 
	on mem.audiance_type = aud.audience_type 
inner join mytecho_timeline_config_det mt_config 
	on mt_config.id = aud.mt_timeline_config_id  and mt_config.is_active = true
inner join mytecho_timeline_context_det context_det 
	on mt_config.id = context_det.mt_timeline_config_id
	and context_det.context_type = ''CARD''
left join listvalue_field_value_detail lv 
	on lv.id = mt_config.category_id
inner join mytecho_timeline_language_wise_config_det mt_language_config
	on mt_config.id = mt_language_config.mt_timeline_config_id 
	and mt_language_config.language = mem.language_preference
left join mytecho_user_starred_card_master mt_user_starred
	on mt_user_starred.mt_timeline_config_id = mt_language_config.mt_timeline_config_id 
	and mt_language_config.language = mt_language_config.language and mt_user_starred.user_id=#loggedInUserId#

) as t where current_date between t."scheduleDate" and t."expiryDate"
order by category_id,catagory_order,random()) as t order by catagory_order;',true,'ACTIVE',NULL,true,'07721adb-b0a2-4055-8707-5a63ea2d1ddb'),
	 (66522,'2020-01-31 11:14:42.508',66522,'2020-02-10 16:25:53.782','state_of_health_data_retrieval_8','locationId,timeline_type','with  location_type as(
        select  level,string_agg(name,''/'') as location_type from location_type_master where
        level=(case when ''#locationId#'' = ''null'' then 1 else (select level+1 from location_type_master t
        inner join location_master m on t.type=m.type where id=2) end)group by level ),
elements_details as (
        select lt.level,lt.type,l.id as "locationId",
        case when lt.type =''C'' or lt.type =''D'' then ''Districts/Corporation'' else lt.name end as "locationType",
        case when l.english_name is not null then l.english_name else l.name end as english_name,element_name as "elementName",
        sum(value) as value,target,sum(male) as male,sum(female) as female,
        sum(chart1) as chart1,sum(chart2) as chart2,sum(chart3) as chart3,sum(chart4) as chart4,
        max(days) as days,
        max(reporting) as reporting,
        max(calculatedTarget) as calculatedTarget,
        max(color) as color,
        max(percentage) as percentage,
        max(displayValue) as displayValue,
        max(sortPriority) as "sortPriority"

        from
        location_type,location_type_master lt,soh_timeline_analytics_temp  sh,location_master l where sh.location_id in
        (select id from location_master  where id in (select child_id
                                    from location_hierchy_closer_det
                                    where parent_id =#locationId#  and depth=case when #locationId# = 2 then 2 else 1 end))
                                    and sh.location_id = l.id
        and l.type = lt.type
        and timeline_type = ''#timeline_type#''
        group by lt.level, lt.type,
        location_type.location_type, sh.target,l.id,l.english_name,sh.element_name order by english_name),
unique_locations as (
        select distinct "locationId" from elements_details
        ),
user_details_ids as (
        select uul.loc_id as location_id, max(user_id) as user_id
        from unique_locations elements
        inner join um_user_location uul on elements."locationId" = uul.loc_id
        inner join um_user uu on uu.id = uul.user_id
        inner join location_master lm on lm.id =  uul.loc_id
        where uul.state=''ACTIVE''
        and uu.state=''ACTIVE''
        and uu.role_id = (select id from um_role_master where id =
        case when lm.type in (''D'',''C'') then 39
        when lm.type in (''B'',''Z'') then 41
        else -1 end
        )
       group by uul.loc_id, uu.role_id
),
user_details as (
select concat(uu.first_name,'' '',uu.middle_name,'' '', uu.last_name, 
				case when uu.role_id = 39 then ''(CDHO)'' 
				when uu.role_id = 41 then ''(THO)'' 
				else ''(Other)'' end) as user_name,
       uu.contact_number,
       ud.location_id
       from um_user uu inner join user_details_ids ud on uu.id = ud.user_id
)
select elements.*,
case when users.user_name is null then ''-'' else users.user_name end as  "userDetail",
case when users.contact_number is null then ''-'' else users.contact_number end as "contactNumber"
from elements_details elements left join user_details users
on elements."locationId" = users.location_id',true,'ACTIVE',NULL,true,'a0d41817-9c89-4cd8-9a79-a557dfe2e5b4'),
	 (66522,'2019-09-16 21:18:58.47',74841,'2020-01-30 12:31:56.137','state_of_health_service_verification_2','fromDate,toDate,location_id','with dates as(
select
to_date(case when ''#fromDate#'' = ''null'' then null else ''#fromDate#'' end, ''YYYY-MM-DD'') as from_date ,
to_date(case when ''#toDate#'' = ''null'' then null else ''#toDate#'' end, ''YYYY-MM-DD'') + interval ''1 day'' - interval ''1 millisecond'' as to_date 
),
gvk_details as (
select 
gvk_anm_verification_response.member_id,gvk_anm_verification_response.service_type,gvk_anm_verification_response.is_verified,
gvk_anm_verification_response.tt_injection_received_status,
gvk_anm_verification_response.is_delivery_happened,
gvk_anm_verification_response.delivery_place_verification,
gvk_anm_verification_response.child_service_vaccination_status,
gvk_anm_verification_response.no_of_child_gender_verification
from gvk_anm_verification_response
inner join gvk_anm_verification_info on gvk_anm_verification_response.request_id = gvk_anm_verification_info.id
inner join dates on gvk_anm_verification_info.service_date between dates.from_date and dates.to_date
where gvk_anm_verification_response.location_id = #location_id#
and gvk_anm_verification_response.is_verified is not null
),
family_head_single as (
select m2.id as head_id,imt_member.id as member_id
from gvk_details
inner join imt_member on gvk_details.member_id = imt_member.id
inner join imt_family on imt_member.family_id = imt_family.family_id
inner join imt_member m2 on imt_family.family_id = m2.family_id and 
m2.id = imt_family.hof_id
group by imt_member.id, m2.id
),
family_head as (
	select 
	head.member_id as member_id,
	concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as family_head_name,
	
	m2.mobile_number as family_head_number
	from family_head_single head inner join imt_member m2 on m2.id = head.head_id

),
contact_person as (
select gvk_details.member_id,
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as contact_person_name,
m2.mobile_number as contact_person_number
from gvk_details
inner join imt_member on gvk_details.member_id = imt_member.id
inner join imt_family on imt_member.family_id = imt_family.family_id
inner join imt_member m2 on imt_family.family_id = m2.family_id and imt_family.contact_person_id = m2.id
),member_location_area_ids as (
select gvk_details.member_id,imt_family.location_id,imt_family.area_id
from gvk_details
inner join imt_member on imt_member.id = gvk_details.member_id
inner join imt_family on imt_family.family_id = imt_member.family_id
),asha as (
select member_location_area_ids.member_id,asha.id
from member_location_area_ids
inner join um_user_location asha_location on member_location_area_ids.area_id = asha_location.loc_id and asha_location.state = ''ACTIVE''
inner join um_user asha on asha_location.user_id = asha.id and asha.role_id = 24 and asha.state = ''ACTIVE''
),asha_unique as (
select asha.member_id,max(asha.id)
from asha
group by asha.member_id
),fhw as (
select member_location_area_ids.member_id,fhw.id
from member_location_area_ids
inner join um_user_location fhw_location on member_location_area_ids.location_id = fhw_location.loc_id and fhw_location.state = ''ACTIVE''
inner join um_user fhw on fhw_location.user_id = fhw.id and fhw.role_id = 30 and fhw.state = ''ACTIVE''
),fhw_unique as (
select fhw.member_id,max(fhw.id)
from fhw
group by fhw.member_id
)
select 
imt_member.unique_health_id as "uniqueHealthId",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "memberName",
family_head.family_head_name as "familyHead",
family_head.family_head_number as "familyHeadMobileNo",
contact_person.contact_person_name as "contactPersonName",
contact_person.contact_person_number as "contactPersonMobileNo",
case when asha_user.id is not null then concat(asha_user.first_name,'' '',asha_user.middle_name,'' '',asha_user.last_name) 
else null end as "ashaName",
asha_user.contact_number as "AshaMobileNo",
concat(fhw_user.first_name,'' '',fhw_user.middle_name,'' '',fhw_user.last_name) as "ANMName",
fhw_user.contact_number as "ANMMobileNo",
case when gvk_details.service_type = ''FHW_TT_VERI'' then ''TT Verification''
when gvk_details.service_type = ''FHW_DEL_VERI'' then ''Delivery Verification''
when gvk_details.service_type = ''FHW_CH_SER_VERI'' then ''Child Service Verification''
when gvk_details.service_type = ''FHW_CH_SER_PREG_VERI'' then ''Delivery and Child Service Verification''
else ''-'' end as "serviceType",
case when gvk_details.is_verified then ''Success''
when gvk_details.is_verified is false then ''Fail''
else ''-'' end as "Is Verified",
case when gvk_details.tt_injection_received_status in (''YES'', ''CANNOT_DETERMINE'') then ''Success'' when gvk_details.tt_injection_received_status in (''NO'') then ''Fail'' else ''-'' end  as "TTStatus",
case when gvk_details.is_delivery_happened then ''Success'' when gvk_details.is_delivery_happened is false then ''Fail'' else ''-'' end as "deliveryStatus",
case when gvk_details.delivery_place_verification then ''Success'' when gvk_details.delivery_place_verification is false then ''Fail'' else ''-'' end as "deliveryPlaceStatus",
case when gvk_details.child_service_vaccination_status then ''Success'' when gvk_details.child_service_vaccination_status is false then ''Fail'' else ''-'' end as "childVaccinationStatus",
case when gvk_details.no_of_child_gender_verification then ''Success'' when gvk_details.no_of_child_gender_verification is false then ''Fail'' else ''-'' end as "noOfChildGenderVerification Status"
from gvk_details inner join imt_member on gvk_details.member_id = imt_member.id
left join family_head on gvk_details.member_id = family_head.member_id
left join contact_person on gvk_details.member_id = contact_person.member_id
left join asha_unique on gvk_details.member_id = asha_unique.member_id
left join fhw_unique on gvk_details.member_id = fhw_unique.member_id
left join um_user asha_user on asha_unique.max = asha_user.id
left join um_user fhw_user on fhw_unique.max = fhw_user.id',true,'ACTIVE',NULL,true,'2012d690-509c-4d47-829e-277e46cb5e12'),
	 (80240,'2020-05-14 00:00:00',80240,'2020-05-14 00:00:00','gvk_call_center_verification_dashboard_total_calls','userId','with today_date as (
	select cast(now() as date) today_date
)
,all_dates as (
	select
	cast(today_date as date) as from_date,
	cast (today_date as date) as to_date,
	''TODAY'' as type
	from today_date
	union all
	SELECT today_date - cast(extract(dow from today_date) as int) as from_date,
	today_date - cast(extract(dow from today_date) as int) + 6 as to_date,
	''WEEK'' as type

	from today_date
	union all
	select cast( date_trunc(''month'', today_date) as date) as from_date,
	cast(date_trunc(''month'', today_date) + interval ''1 month'' - interval ''1 day'' as date) as to_date,
	''MONTH'' as type

	from today_date
)
select
sum (  case when type=''TODAY'' then 1 else 0 end ) as day_call,
sum (  case when type=''WEEK'' then 1 else 0 end ) as week_call,
sum (  case when type=''MONTH'' then 1 else 0 end ) as month_call

from gvk_manage_call_master master inner join all_dates on true
where cast(master.created_on as date) between all_dates.from_date and all_dates.to_date and master.created_by = #userId#',true,'ACTIVE',NULL,true,'1f286567-c555-49c2-9d4b-163a55223713'),
	 (78434,'2021-06-10 00:00:00',78434,'2021-06-10 00:00:00','get_sms_blacklist_number_by_mobile_number','mobileNumber,id','
select
    *
from
    sms_block_master
where
    mobile_number = #mobileNumber#
    and id != #id#
',true,'ACTIVE',NULL,true,'c124543e-bd41-443a-88ce-d2badf18ee8b'),
	 (58981,'2021-06-10 00:00:00',58981,'2021-06-10 00:00:00','retrieve_member_info_by_health_id','healthid','with member_migration_det as (
	select distinct on (member_id) location_migrated_from , location_migrated_to, reported_by,reported_on, member_id, state from migration_master mm
	where mm.member_id = (select id from imt_member im where im.unique_health_id = #healthid#)
	order by member_id, id desc
	limit 1
), family_migration_det as (
	select distinct on (family_id ) family_id, location_migrated_from , location_migrated_to , reported_by , reported_on, state from  imt_family_migration_master ifmm
	where ifmm.family_id = (select id from imt_family imf where imf.family_id in (select family_id from imt_member im where im.unique_health_id = #healthid#))
	order by family_id , id desc
	limit 1
)
select m.unique_health_id as "uniqueHealthId",m.id as "memberId", concat( m.first_name, '' '' ,m.middle_name ,'' '',m.last_name) as "memberName",
                    m.family_id as "familyId", m.dob as "dob",
                    case when m.aadhar_number_encrypted is not null then ''Yes'' else ''No'' end as "aadharAvailable",
                    m.mobile_number as "mobileNumber", m.is_pregnant as "isPregnantFlag", m.gender,
                    m.basic_state as "memberState", m.ifsc, m.account_number as "accountNumber",
					date(mdd.dod) as "dateOfDeath", lvd.value as "deathReason" ,
                    m.family_head as "familyHeadFlag", m.immunisation_given as "immunisationGiven",
                    case when (m.dob > now() - interval ''5 years'') then ''Yes'' else ''No'' end as "isChild",
                    case when (
				(m.fp_insert_operate_date is null or  ( now() - m.fp_insert_operate_date < interval ''3 month''))
				and (m.last_method_of_contraception is null or m.last_method_of_contraception not in (''FMLSTR'',''MLSTR''))
				and (m.hysterectomy_done is null or m.hysterectomy_done = false)
				and (m.menopause_arrived is null or  m.menopause_arrived = false)
				and (m.is_pregnant is null or m.is_pregnant = false)
				and (m.dob < now() - interval ''18 years'' and m.dob > now() - interval ''45 years'')
				and m.marital_status = 629
				and m.gender = ''F''
			)  then ''Yes'' else ''No'' end as "isEligibleCouple",
			case when m.last_method_of_contraception in (''FMLSTR'',''MLSTR'') then true else false end as "isFemaleSterilizationFlag",
		    concat(case
			  when (now() - m.fp_insert_operate_date > interval ''3 month'') then (
			   case
			    when m.last_method_of_contraception in (''IUCD5'',''IUCD10'') then '' Last contraception method is IUCD.''
			    when m.last_method_of_contraception = ''CHHAYA'' then '' Last contraception method is CHHAYA.''
			    when m.last_method_of_contraception = ''ANTARA'' then '' Last contraception method is ANTARA.''
			   end
			  )end,
			 case when m.last_method_of_contraception = ''FMLSTR'' then '' Last contraception method is FEMALE STERILIZATION.'' end,
			 case when m.last_method_of_contraception = ''MLSTR'' then ''Last contraception method is MALE STERILIZATION.'' end,
			 case when m.menopause_arrived = true then ''Menopause is arrived.'' end,
			 case when m.marital_status != 629 then ''Merital status is not married.'' end,
			 case when m.is_pregnant = true then ''Member is pregnant.'' end,
			 case when m.hysterectomy_done = true then ''Hysterectomy is done.'' end,
			 case when (m.dob > now() - interval ''18 years'' and m.dob < now() - interval ''45 years'') then ''Age is not between 18 to 45 year.'' end,
			 case when m.gender = ''M'' then ''Member is Male.'' end
			) as "reasonForNotEligibleCouple",
                    (select string_agg(to_char(service_date, ''dd/mm/yyyy''),'','' order by created_on desc)
                    from rch_child_service_master  where member_id  = m.id group by member_id) as "childServiceVisitDatesList",
                    m.weight as weight, m.haemoglobin,
                    concat( usr.first_name , '' '' , usr.middle_name , '' '' , usr.last_name)  as "fhwName",
                    concat(ashaName.first_name , '' '' , ashaName.middle_name , '' '' , ashaName.last_name)  as "ashaName",
                    usr.user_name as fhwUserName, usr.contact_number as "fhwMobileNumber",
                    (select concat(first_name , '' '' , middle_name , '' '' , last_name) from imt_member where id = m.mother_id) as "motherName" ,
                    (select string_agg(to_char(service_date , ''dd/mm/yyyy''),'','' order by service_date  desc)
                    from rch_anc_master where member_id  = m.id group by member_id) as "ancVisitDatesList",
                    f.basic_state as "familyState",
                    string_agg(lm.name,''> '' order by lhcd.depth desc) as "memberLocation",
                    case when f.area_id is not null then get_location_hierarchy(f.area_id) else null end as "areaHierarchy",
                    to_char(m.created_on, ''dd/mm/yyyy'') as "createdOn" ,
                    to_char(m.modified_on , ''dd/mm/yyyy'') as "modifiedOn",
                    get_location_hierarchy(mmd.location_migrated_from) as "memberMigratedFrom",
                    get_location_hierarchy(mmd.location_migrated_to) as "memberMigratedTo",
                    (select concat( uu.first_name , '' '' , uu.middle_name , '' '' , uu.last_name, ''( UserName: '', usr.user_name , '', Mobile Number: '', usr.contact_number, '')'') from um_user uu  where uu.id = mmd.reported_by)as "memberReportedBy",
                    to_char(mmd.reported_on, ''dd/mm/yyyy'') as "memberReportedOn",
                    get_location_hierarchy(fmd.location_migrated_from) as "familyMigratedFrom",
                    get_location_hierarchy(fmd.location_migrated_to) as "familyMigratedTo",
                    (select concat( uu.first_name , '' '' , uu.middle_name , '' '' , uu.last_name, ''( UserName: '', usr.user_name , '', Mobile Number: '', usr.contact_number, '')'') from um_user uu  where uu.id = fmd.reported_by)  as "familyReportedBy",
                    to_char(fmd.reported_on, ''dd/mm/yyyy'') as "familyReportedOn"
                    from imt_member m
                    left join imt_family f on f.family_id = m.family_id
                    left join member_migration_det mmd on mmd.member_id = m.id and mmd.state = ''REPORTED''
                    left join family_migration_det fmd on fmd.family_id = f.id and fmd.state = ''REPORTED''
                    left join um_user_location ul on f.location_id = ul.loc_id  and ul.state = ''ACTIVE''
                    left join um_user usr on ul.user_id = usr.id and usr.role_id = 30 and usr.state = ''ACTIVE''
                    left join um_user_location ashaLoc on f.area_id = ashaLoc.loc_id  and ashaLoc.state = ''ACTIVE''
                    left join um_user ashaName on ashaLoc.user_id = ashaname.id and ashaName.role_id = 24 and ashaName.state = ''ACTIVE''
                    left join location_hierchy_closer_det lhcd on f.location_id = lhcd.child_id
                    left join location_master lm on lm.id = lhcd.parent_id
                    left join location_type_master loc_name on lm.type = loc_name.type
 					left join rch_member_death_deatil mdd on mdd.member_id = m.id
 					left join listvalue_field_value_detail lvd on lvd.id = CAST (mdd.death_reason AS INTEGER)
                    where unique_health_id = #healthid#
                    group by m.id,usr.first_name,usr.middle_name,usr.last_name,usr.user_name,usr.contact_number,f.state,ashaName.first_name,
                    ashaName.middle_name,ashaName.last_name,m.unique_health_id,f.basic_state,f.area_id,mmd.location_migrated_from, mmd.location_migrated_to,
                    mmd.reported_by, mmd.reported_on, fmd.location_migrated_from, fmd.location_migrated_to, fmd.reported_by, fmd.reported_on ,mdd.dod , lvd.value
                    limit 1',true,'ACTIVE','',true,'9ac89158-c675-4c52-b423-9de8294675c7'),
	 (1,'2020-01-30 00:00:00',NULL,NULL,'dr_techo_rbsk_child_search_by_mobile_number','uniqueHealthId','
with mother_details as ( select
	id, unique_health_id, mobile_number, concat( first_name, '' '', middle_name, '' '', last_name ) as mother_name
from
	imt_member
where
	mobile_number in ( ''#mobileNumber#'' ) ) select
	child.id as "memberId",
	child.unique_health_id as "uniqueHealthId",
	child.first_name as "firstName",
	child.middle_name as "middleName",
	child.last_name as "lastName",
	child.family_id as "familyId",
	child.gender,
	child.dob,
	child.birth_weight as "weight",
	mother.unique_health_id as "motherId",
	mother.mobile_number as "motherPhoneNumber",
	mother.mother_name as "motherName"
from
	imt_member child
inner join mother_details mother on
	child.mother_id = mother.id
where
	child.mother_id in ( select
		id
	from
		mother_details )
',true,'ACTIVE',NULL,true,'1bdfc258-a116-4790-b4c6-6c43c873fbd0'),
	 (66522,'2020-01-31 10:22:25.137',66522,'2020-01-31 10:22:25.137','state_of_health_get_element_data_2','locationId,timeLine,elementName','select * from soh_timeline_analytics_temp where location_id =#locationId# and element_name =''#elementName#'' and timeline_type=''#timeLine#''',true,'ACTIVE',NULL,true,'72ea6992-4c1e-46ab-ba4b-0cdc265ee413'),
	 (78434,'2021-07-20 00:00:00',78434,'2021-07-20 00:00:00','insert_up_upload_location_errors','fileName,errorMsg,errorStack,loggedInUserId','
INSERT INTO up_upload_location_errors
(file_name, error_msg, error_stack, created_by, created_on, modified_by, modified_on)
VALUES
(''#fileName#'', ''#errorMsg#'', ''#errorStack#'', #loggedInUserId#, now(), #loggedInUserId#, now());
',false,'ACTIVE',NULL,true,'f8a611a1-f27f-40ac-8d7e-3c34f11820b4'),
	 (58981,'2020-01-31 13:30:41.918',1027,'2020-02-05 19:59:30.021','mob_rbsk_child_search_by_member_id','health_id,userId','with l as (
	select child_id from location_hierchy_closer_det where parent_id in (
		select ul.loc_id from um_user u 
		inner join um_user_location ul on u.id = ul.user_id	
		where u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
		and u.id = #userId#
	)
)
select 
    child.id as child_id,
	child.unique_health_id,
	concat(child.first_name, '' '', child.last_name) as child_name,
	to_char(child.dob, ''DD/MM/YYYY'') as date_of_birth,
	child.gender,
	concat(mother.first_name, '' '', mother.last_name) as mother_name,
	mother.mobile_number,
	child.family_id as family_health_id,
    f.id as family_id,
    f.location_id,
	mother.unique_health_id as mother_id,
	child.birth_weight
from imt_member child
inner join imt_family f on child.family_id = f.family_id
inner join l on l.child_id = f.location_id
inner join imt_member mother on child.mother_id = mother.id
where child.dob > current_date - interval ''5 years'' and child.unique_health_id = ''#health_id#''',true,'ACTIVE',NULL,true,'87276073-d5e8-4d39-9352-cc79e80907ba'),
	 (58981,'2020-01-31 13:31:24.67',58981,'2020-01-31 13:31:24.67','mob_rbsk_defect_stabilization_info','defectIds','select distinct rdsi.code, rdsi.description
	from rbsk_defect_configuration rdc
	inner join rbsk_defect_configuration_stabilization_info_rel rdcsir on rdc.id = rdcsir.defect_id
	inner join rbsk_defect_stabilization_info rdsi on rdcsir.stabilization_info_code = rdsi.code
		where rdc.id in #defectIds#',true,'ACTIVE',NULL,true,'55b40e87-0f47-4451-a7c0-45b603f3f8e4'),
	 (58981,'2020-01-31 13:31:02.289',1027,'2020-02-05 19:59:40.433','mob_rbsk_child_search_by_family_id','family_id,userId','with l as (
	select child_id from location_hierchy_closer_det where parent_id in (
		select ul.loc_id from um_user u 
		inner join um_user_location ul on u.id = ul.user_id	
		where u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
		and u.id = #userId#
	)
)
select 
        child.id as child_id,
	child.unique_health_id,
	concat(child.first_name, '' '', child.last_name) as child_name,
	to_char(child.dob, ''DD/MM/YYYY'') as date_of_birth,
	child.gender,
	concat(mother.first_name, '' '', mother.last_name) as mother_name,
	mother.mobile_number,
	child.family_id as family_helth_id,
        f.id as family_id,
        f.location_id,
	mother.unique_health_id as mother_id,
	child.birth_weight
from imt_member child
inner join imt_family f on child.family_id = f.family_id
inner join l on l.child_id = f.location_id
inner join imt_member mother on child.mother_id = mother.id
	where child.dob > current_date - interval ''5 years'' and child.family_id = ''#family_id#''',true,'ACTIVE',NULL,true,'1f38138a-a2da-48f2-b395-a65ed36d6dd1'),
	 (58981,'2020-01-31 13:31:13.118',1027,'2020-02-05 20:00:41.103','mob_rbsk_defect_list_by_body_part','bodyPart','select * from rbsk_defect_configuration where body_part in (''#bodyPart#'') and state = ''ACTIVE''',true,'ACTIVE',NULL,true,'6cad960b-9913-4442-a095-86ef30abc508'),
	 (409,'2019-10-25 16:51:42.358',409,'2020-01-31 14:57:17.34','gvk_call_center_dashboard_call_in_queue_databy_period','main_catogry,location_id','with date_period as(
select 1 as order ,''Yesterday'' as series_label

union all 

select 2 as order,''7 Days'' as series_label

union all 

select 3 as order,''30 Days'' as series_label

union all 

select 4 as order,''>30 Days'' as series_label
),selected_sub_category as(
select d.series_label,Cast(''(Day-Month)'' as text) as x_axis_label
,gccdwa.sub_sub_type as labels,sum(gccdwa.cnt) as total
from date_period d
inner join gvk_call_center_date_wise_analytics gccdwa on d.series_label = gccdwa.sub_type and gccdwa.main_type = ''Call in queue''
and gccdwa.location_id = (case when #location_id# is null then 2 else #location_id# end) 
group by d.series_label,gccdwa.sub_sub_type
)
select  STRING_AGG(CAST(dp.series_label as text),'','' order by dp.order) labels ,
sc.labels as "subCatogary"
,STRING_AGG(CAST(COALESCE(dc.total,0) as text),'','' order by dp.order) as "countData",mc.operation_type as "operationType",
case when mc.operation_type=''sum'' then sum(dc.total)
	else case when mc.operation_type=''avg'' then round(avg(coalesce(dc.total, 0)), 2) else 0 end 
	end as total, dc.x_axis_label as "xAxisLabel"
from 
date_period dp
inner join (select distinct labels from selected_sub_category) as sc on true = true
left join selected_sub_category dc on dp.series_label = dc.series_label and dc.labels = sc.labels
left join gvk_call_center_main_category_types mc on mc.main_type =  ''#main_catogry#''
group by sc.labels, dc.x_axis_label,  mc.operation_type',true,'ACTIVE',NULL,true,'956de9ed-78b1-45fb-98e0-81479fb3859b'),
	 (74841,'2020-04-04 16:35:46.909',74841,'2020-04-04 16:49:54.983','cm_dashboard_member_contact_det','offset','select
districtname as "districtName"
, blockname as "block"
,phcname as "phc"
,subcentername as "subCentre"
,villagename as "village"
,memberdet as "name"
,mobile_number as "mobileNumber"
,family_id as "familyId"
,unique_health_id as "techoID"
,gender as "gender"
,ancstatus as "ancStatus"
from zzz_member_with_contact where length(mobile_number) = 10
order by districtname,blockname,phcname,subcentername,villagename
limit 100000 offset #offset#;',true,'ACTIVE',NULL,true,'c359e257-0e0c-4ba5-b63a-28225bec276d'),
	 (1,'2019-07-01 00:00:00',1027,'2020-02-13 18:02:40.03','mob_child_services_provided','memberId','with const as (
	select cast(''HOME'' as text) as const, cast(''Home'' as text) as name
	union
	select cast(''HOSP'' as text) as const, cast(''Hospital'' as text) as name
	union
	select cast(''THISHOSP'' as text) as const, cast(''Hospital'' as text) as name
	union
	select cast(''MAMTA_DAY'' as text) as const, cast(''Mamta Day'' as text) as name
	union
	select cast(''OUT_OF_STATE_GOVT'' as text) as const, cast(''Out of State - Govt. Hospital'' as text) as name
	union
	select cast(''OUT_OF_STATE_PVT'' as text) as const, cast(''Out of State - Private Hospital'' as text) as name
)
select to_char(rch.service_date, ''DD/MM/YYYY'') as "Service Date",
case when const.const is not null then const.name else rch.delivery_place end as "Child Service Visit Place",
rch.id as "hiddenVisitId",
cast(''FHW_CS'' as text) as "hiddenServiceType"
from rch_child_service_master rch
inner join imt_member mem on rch.member_id = mem.id
left join const on const.const = rch.delivery_place
where member_id = #memberId#
order by rch.service_date desc;',true,'ACTIVE',NULL,true,'a35c866f-2280-4c11-beaa-d140c66b0110'),
	 (60512,'2021-09-21 00:00:00',60512,'2021-09-21 00:00:00','retrieve_updated_batch_details','batchId','select child_name as "childName",
child_gender as "childGender",
dob as "childDob",
concat(age_years,'' years '',age_months,'' months'') as "childAge",
mother_name as "motherName",
father_name as "fatherName",
address as "address",
family_mobile_number as "familyMobileNumber",
je1_given_date as "je1Date",
je2_given_date as "je2Date"
from rch_je_vaccine_service
where batch_id = #batchId#
and state = ''ACTIVE''',true,'ACTIVE',NULL,true,'b123c56d-09a9-41d9-be12-dcb0c4e85244'),
	 (66522,'2020-02-06 11:22:44.35',66522,'2020-02-06 11:22:44.35','state_of_health_service_verification_3','fromDate,toDate,location_id','with dates as(
select
to_date(case when ''#fromDate#'' = ''null'' then null else ''#fromDate#'' end, ''YYYY-MM-DD'') as from_date ,
to_date(case when ''#toDate#'' = ''null'' then null else ''#toDate#'' end, ''YYYY-MM-DD'') + interval ''1 day'' - interval ''1 millisecond'' as to_date 
),
gvk_details as (
select 
response.member_id,
response.service_type,
response.is_verified,
response.tt_injection_received_status,
response.is_delivery_happened,
response.delivery_place_verification,
response.child_service_vaccination_status,
response.no_of_child_gender_verification
from rch_data_quality_analytics analytics 
inner join gvk_anm_verification_response response on analytics.reference_id = response.id
inner join gvk_anm_verification_info on response.request_id = gvk_anm_verification_info.id
inner join dates on analytics.verified_on between dates.from_date and dates.to_date
where analytics.location_id = #location_id#
and verification_type = ''ANM_VERIFICATION_SERVICE''
and response.is_verified is not null
limit 10
),
family_head_single as (
select m2.id as head_id,imt_member.id as member_id
from gvk_details
inner join imt_member on gvk_details.member_id = imt_member.id
inner join imt_family on imt_member.family_id = imt_family.family_id
inner join imt_member m2 on imt_family.family_id = m2.family_id and 
m2.id = imt_family.hof_id
group by imt_member.id, m2.id
),
family_head as (
	select 
	head.member_id as member_id,
	concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as family_head_name,
	
	m2.mobile_number as family_head_number
	from family_head_single head inner join imt_member m2 on m2.id = head.head_id

),
contact_person as (
select gvk_details.member_id,
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as contact_person_name,
m2.mobile_number as contact_person_number
from gvk_details
inner join imt_member on gvk_details.member_id = imt_member.id
inner join imt_family on imt_member.family_id = imt_family.family_id
inner join imt_member m2 on imt_family.family_id = m2.family_id and imt_family.contact_person_id = m2.id
),member_location_area_ids as (
select gvk_details.member_id,imt_family.location_id,imt_family.area_id
from gvk_details
inner join imt_member on imt_member.id = gvk_details.member_id
inner join imt_family on imt_family.family_id = imt_member.family_id
),asha as (
select member_location_area_ids.member_id,asha.id
from member_location_area_ids
inner join um_user_location asha_location on member_location_area_ids.area_id = asha_location.loc_id and asha_location.state = ''ACTIVE''
inner join um_user asha on asha_location.user_id = asha.id and asha.role_id = 24 and asha.state = ''ACTIVE''
),asha_unique as (
select asha.member_id,max(asha.id)
from asha
group by asha.member_id
),fhw as (
select member_location_area_ids.member_id,fhw.id
from member_location_area_ids
inner join um_user_location fhw_location on member_location_area_ids.location_id = fhw_location.loc_id and fhw_location.state = ''ACTIVE''
inner join um_user fhw on fhw_location.user_id = fhw.id and fhw.role_id = 30 and fhw.state = ''ACTIVE''
),fhw_unique as (
select fhw.member_id,max(fhw.id)
from fhw
group by fhw.member_id
)
select 
imt_member.unique_health_id as "uniqueHealthId",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "memberName",
family_head.family_head_name as "familyHead",
family_head.family_head_number as "familyHeadMobileNo",
contact_person.contact_person_name as "contactPersonName",
contact_person.contact_person_number as "contactPersonMobileNo",
case when asha_user.id is not null then concat(asha_user.first_name,'' '',asha_user.middle_name,'' '',asha_user.last_name) 
else null end as "ashaName",
asha_user.contact_number as "AshaMobileNo",
concat(fhw_user.first_name,'' '',fhw_user.middle_name,'' '',fhw_user.last_name) as "ANMName",
fhw_user.contact_number as "ANMMobileNo",
case when gvk_details.service_type = ''FHW_TT_VERI'' then ''TT Verification''
when gvk_details.service_type = ''FHW_DEL_VERI'' then ''Delivery Verification''
when gvk_details.service_type = ''FHW_CH_SER_VERI'' then ''Child Service Verification''
when gvk_details.service_type = ''FHW_CH_SER_PREG_VERI'' then ''Delivery and Child Service Verification''
else ''-'' end as "serviceType",
case when gvk_details.is_verified then ''Success''
when gvk_details.is_verified is false then ''Fail''
else ''-'' end as "Is Verified",
case when gvk_details.tt_injection_received_status in (''YES'', ''CANNOT_DETERMINE'') then ''Success'' when gvk_details.tt_injection_received_status in (''NO'') then ''Fail'' else ''-'' end  as "TTStatus",
case when gvk_details.is_delivery_happened then ''Success'' when gvk_details.is_delivery_happened is false then ''Fail'' else ''-'' end as "deliveryStatus",
case when gvk_details.delivery_place_verification then ''Success'' when gvk_details.delivery_place_verification is false then ''Fail'' else ''-'' end as "deliveryPlaceStatus",
case when gvk_details.child_service_vaccination_status then ''Success'' when gvk_details.child_service_vaccination_status is false then ''Fail'' else ''-'' end as "childVaccinationStatus",
case when gvk_details.no_of_child_gender_verification then ''Success'' when gvk_details.no_of_child_gender_verification is false then ''Fail'' else ''-'' end as "noOfChildGenderVerification Status"
from gvk_details inner join imt_member on gvk_details.member_id = imt_member.id
left join family_head on gvk_details.member_id = family_head.member_id
left join contact_person on gvk_details.member_id = contact_person.member_id
left join asha_unique on gvk_details.member_id = asha_unique.member_id
left join fhw_unique on gvk_details.member_id = fhw_unique.member_id
left join um_user asha_user on asha_unique.max = asha_user.id
left join um_user fhw_user on fhw_unique.max = fhw_user.id',true,'ACTIVE',NULL,true,'6c55282f-aa1f-4453-9c90-e2c537b93af8'),
	 (1,'2020-02-07 00:00:00',NULL,NULL,'cm_dashboard_antenatal_corticosteroid','finacial_year','
with dates as (
select to_date(case when ''#finacial_year#'' = ''null'' then null else concat(''03-31-'',substr(''#finacial_year#'',1,4)) end,''MM-DD-YYYY'') from_date
,to_date(case when ''#finacial_year#'' = ''null'' then null else concat(''04-01-'',substr(''#finacial_year#'',6,10)) end,''MM-DD-YYYY'') to_date
),ldp as(
  select location_hierchy_closer_det.parent_id as loc_id,
    coalesce(sum(del_reg_still_live_birth),0) as preg_reg,
    coalesce(sum(del_less_eq_34),0) as del_less_eq_34,
    coalesce(sum(del_bet_35_37),0) as del_bet_35_37,
    coalesce(sum(del_greater_37),0) as del_greater_37,
    coalesce(sum(cortico_steroid),0) as cortico_steroid
  from rch_delivery_date_base_location_wise_data_point,location_hierchy_closer_det,dates
  where rch_delivery_date_base_location_wise_data_point.location_id = location_hierchy_closer_det.child_id 
  and location_hierchy_closer_det.parent_id in (select id from location_master where type in(''P'', ''U''))
  and month_year between dates.from_date and dates.to_date
  group by location_hierchy_closer_det.parent_id
 ),
loc as (
	select distinct loc_id from ldp
),
loc_det as (
   select
        case 
            when lm.type in (''D'', ''C'') then ''D''
            when lm.type in (''T'', ''B'', ''Z'') then ''T''
            when lm.type in (''P'', ''U'') then ''P''
            when lm.type in (''V'', ''AA'') then ''V''
            when lm.type in (''A'') then ''A''
            else lm.type end,
        lm.id as loc_id,
        lh.location_id,
        s.english_name as stateName,
        s.location_code as stateCode,
        d.english_name as districtName,
        case when lm.type = ''S'' then 0 else d.location_code end as districtCode,
        b.english_name as talukaName,
        b.cm_dashboard_code as talukaCode,
        p.english_name as facilityName,
        case when p.type = ''P'' then 1 when p.type = ''U'' then 3 else null end as facilityCode,
        sc.english_name as subCenterName,
        v.english_name as villageName,
        a.english_name as areaName
    from loc 
    inner join location_master lm
    on lm.id = loc.loc_id
    left join location_master s
    on lh.level1 = s.id and s.state = ''ACTIVE'' and s.name not ilike ''%delete%''
    left join location_master d
    on lh.level3 = d.id and d.state = ''ACTIVE'' and d.name not ilike ''%delete%''
    left join location_master b
    on lh.level4 = b.id and b.state = ''ACTIVE'' and b.name not ilike ''%delete%''
    left join location_master p
    on lh.level5 = p.id and p.state = ''ACTIVE'' and p.name not ilike ''%delete%''
    left join location_master sc
    on lh.level6 = sc.id and sc.state = ''ACTIVE'' and sc.name not ilike ''%delete%''
    left join location_master v
    on lh.level7 = v.id and v.state = ''ACTIVE'' and v.name not ilike ''%delete%''
    left join location_master a
    on lh.level8 = a.id and a.state = ''ACTIVE'' and a.name not ilike ''%delete%''
    where lm.state = ''ACTIVE'' and lm.name not ilike ''%delete%'' 

),
 antenatal_corticosteroid as (
select
    cast(''#finacial_year#'' as text) as financialYear,
    loc_det.type as "locationLevel",
    loc_det.districtCode as "districtCode",
    loc_det.districtName as "districtName",
    loc_det.talukaCode as "talukaCode",
    loc_det.talukaName as "talukaName",
    loc_det.facilityName as "facilityName",
    loc_det.facilityCode as "facilityCode",
    loc_det.subCenterName as "subCenterName",
    loc_det.villageName as "villageName",
    loc_det.areaName as "areaName",
	coalesce(preg_reg,0) as "totalDeliveryRegdDuringTheYear",
    coalesce(del_less_eq_34,0) as "deliveryBefore34Weeks", 
	round(case when preg_reg = 0 then 0 else del_less_eq_34*100.0/preg_reg end,2) as "perDeliveryBefore34Weeks",
    coalesce(del_bet_35_37,0) as "deliveryBetween34-37Weeks", 
	round(case when preg_reg = 0 then 0 else del_bet_35_37*100.0/preg_reg end,2) as "perDeliveryBetween34-37Weeks",
    coalesce(del_greater_37,0) as "deliveryAfter37Weeks", 
    round(case when preg_reg = 0 then 0 else del_greater_37*100.0/preg_reg end,2) as "perDeliveryAfter37Weeks",
    coalesce(cortico_steroid,0) as "noOfAntenatalCorticosteroidGivenToDeliveryBefore34Weeks",
	round(case when del_less_eq_34 = 0 then 0 else cortico_steroid*100.0/del_less_eq_34 end,2) as "perNoOfAntenatalCorticosteroidGivenBefore34Weeks",
	current_date as "asOnDate"
from ldp
inner join loc_det on ldp.loc_id = loc_det.loc_id 
)

select * from antenatal_corticosteroid;
',true,'ACTIVE',NULL,true,'9ac97a22-c1f3-4b5e-9217-c32245750178'),
	 (58981,'2020-01-06 18:30:16.271',58981,'2020-11-12 16:16:21.28','mobile_data_quality_verification_data_beans','modified_on,user_id','select anm_id as "userId",
member_id as "memberId",
service_type as "serviceType",is_delivery_happened as "isDeliveryHappened",delivery_place_verification as "deliveryPlaceVerification",
no_of_child_gender_verification as "noOfChildGenderVerification", 
child_service_vaccination_status as "childServiceVaccinationStatus", null as "isPregnant", tt_injection_received_status as "ttInjectionReceivedStatus"
from gvk_anm_verification_response where gvk_call_response_status = ''com.argusoft.imtecho.gvk.call.success'' 
and service_type in (''FHW_CH_SER_VERI'',''FHW_CH_SER_PREG_VERI'',''FHW_DEL_VERI'',''FHW_TT_VERI'') and anm_id = #user_id# and
(case when ''#modified_on#'' != ''null'' then modified_on > to_date(''#modified_on#'', ''YYYY-MM-DD'') else true end)
union
select user_id as "userId",member_id as "memberId",''PREG_REGI_VERI'' as "serviceType",null as "isDeliveryHappened",
null as "deliveryPlaceVerification", null as "noOfChildGenderVerification", 
null as "childServiceVaccinationStatus",is_pregnant as "isPregnant",
null as "ttInjectionReceivedStatus"
from gvk_emri_pregnant_member_responce  where gvk_call_response_status = ''com.argusoft.imtecho.gvk.call.success''
and user_id = #user_id# and role_id = (select id from um_role_master  where name  = ''FHW'' and state = ''ACTIVE'') and
(case when ''#modified_on#'' != ''null'' then modified_on > to_date(''#modified_on#'', ''YYYY-MM-DD'') else true end)',true,'ACTIVE','Retrieves data quality and verification flags for particular fhw',true,'f69748c6-e9e2-48b8-a274-c2a63cf0093b'),
	 (1,'2020-02-07 00:00:00',74841,'2020-02-17 17:01:21.658','cm_dashboard_hr_pregnancy_complication','finacial_year','with dates as (
select to_date(case when ''#finacial_year#'' = ''null'' then null else concat(''03-31-'',substr(''#finacial_year#'',1,4)) end,''MM-DD-YYYY'') from_date
,to_date(case when ''#finacial_year#'' = ''null'' then null else concat(''04-01-'',substr(''#finacial_year#'',6,10)) end,''MM-DD-YYYY'') to_date
),w as(
	select
	lm.id as loc_id,
    coalesce(sum(anc_reg),0) as reg_preg_women,
    coalesce(sum(high_risk),0) as high_risk,
    coalesce(sum(severe_anemia),0) as severe_anemia,
    coalesce(sum(blood_pressure),0) as blood_pressure,
    coalesce(sum(diabetes),0) as diabetes,
    coalesce(sum(cur_mal_presentation_issue),0) as cur_mal_presentation_issue,
    coalesce(sum(cur_malaria_issue),0) as cur_malaria_issue,
    coalesce(sum(multipara),0) as multipara,
    coalesce(sum(extreme_age),0) as extreme_age,
    coalesce(sum(interval_bet_preg_less_18_months),0) as interval_bet_preg_less_18_months,
    coalesce(sum(height),0) as height,
    coalesce(sum(weight),0) as weight,
    coalesce(sum(urine_albumin),0) as urine_albumin
	from 
	location_master lm 
	inner join location_hierchy_closer_det on lm."type" in (''P'', ''U'') and lm.id = location_hierchy_closer_det.parent_id 
	cross join dates
	left join rch_service_provided_during_year lwrra on lwrra.location_id = location_hierchy_closer_det.child_id and lwrra.month_year between dates.from_date and dates.to_date
	group by lm.id
	order by lm.name
),
loc as (
	select distinct loc_id from w
),
loc_det as (
   select
        case 
            when lm.type in (''D'', ''C'') then ''D''
            when lm.type in (''T'', ''B'', ''Z'') then ''T''
            when lm.type in (''P'', ''U'') then ''P''
            when lm.type in (''V'', ''AA'') then ''V''
            when lm.type in (''A'') then ''A''
            else lm.type end,
        lm.id as loc_id,
        lh.location_id,
        s.english_name as stateName,
        s.location_code as stateCode,
        d.english_name as districtName,
        case when lm.type = ''S'' then 0 else d.location_code end as districtCode,
        b.english_name as talukaName,
        b.cm_dashboard_code as talukaCode,
        p.english_name as facilityName,
        case when p.type = ''P'' then 1 when p.type = ''U'' then 3 else null end as facilityCode,
        sc.english_name as subCenterName,
        v.english_name as villageName,
        a.english_name as areaName
    from loc 
    inner join location_master lm
    on lm.id = loc.loc_id
    left join location_master s
    on lh.level1 = s.id and s.state = ''ACTIVE'' and s.name not ilike ''%delete%''
    left join location_master d
    on lh.level3 = d.id and d.state = ''ACTIVE'' and d.name not ilike ''%delete%''
    left join location_master b
    on lh.level4 = b.id and b.state = ''ACTIVE'' and b.name not ilike ''%delete%''
    left join location_master p
    on lh.level5 = p.id and p.state = ''ACTIVE'' and p.name not ilike ''%delete%''
    left join location_master sc
    on lh.level6 = sc.id and sc.state = ''ACTIVE'' and sc.name not ilike ''%delete%''
    left join location_master v
    on lh.level7 = v.id and v.state = ''ACTIVE'' and v.name not ilike ''%delete%''
    left join location_master a
    on lh.level8 = a.id and a.state = ''ACTIVE'' and a.name not ilike ''%delete%''
    where lm.state = ''ACTIVE'' and lm.name not ilike ''%delete%''
),
 high_risk_mother as (
select
   cast(''#finacial_year#'' as text) as financialYear,
    loc_det.type as "locationLevel",
    loc_det.districtCode as "districtCode",
    loc_det.districtName as "districtName",
    loc_det.talukaCode as "talukaCode",
    loc_det.talukaName as "talukaName",
    loc_det.facilityName as "facilityName",
    loc_det.facilityCode as "facilityCode",
    loc_det.subCenterName as "subCenterName",
    loc_det.villageName as "villageName",
    loc_det.areaName as "areaName",
reg_preg_women as "totalNumberOfPwRegisteredDuringSelectedPeriod",
high_risk as "totalNoOfHighRiskMothers",
round(case when reg_preg_women = 0 then 0 else high_risk*100.0/reg_preg_women end,2) as "perHighRiskMother",
severe_anemia  as "severeAnemiaHavingHbLessThan7gmPer",
round(case when high_risk = 0 then 0 else severe_anemia*100.0/high_risk end,2) as "perSevereAnemiaHbLessThan7gmPer",
blood_pressure  as "bloodPressureMoreThan140_90EitherOrBoth",
round(case when high_risk = 0 then 0 else blood_pressure*100.0/high_risk end,2) as "perBloodPressureMoreThan140_90EitherOrBoth",
diabetes  as "gestationalDiabetesMellitus",
round(case when high_risk = 0 then 0 else diabetes*100.0/high_risk end,2) as "perGestationalDiabetesMellitus",
cur_malaria_issue  as "malaria",
round(case when high_risk = 0 then 0 else cur_malaria_issue*100.0/high_risk end,2) as "perMalaria",
multipara  as "grandMultipara",
round(case when high_risk = 0 then 0 else multipara*100.0/high_risk end,2) as "perGrandMultipara",
cur_mal_presentation_issue  as "malPresentation",
round(case when high_risk = 0 then 0 else cur_mal_presentation_issue*100.0/high_risk end,2) as "perMalPresentation",
extreme_age  as "extremeAgeLessThan18AndMoreThan35Years",
round(case when high_risk = 0 then 0 else extreme_age*100.0/high_risk end,2) as "perExtremeAgeLessThan18AndMoreThan35Years",
interval_bet_preg_less_18_months  as "intervalLessThan18MonthsBetweenLastAndPresentPregnancy",
round(case when high_risk = 0 then 0 else interval_bet_preg_less_18_months*100.0/high_risk end,2) as "perIntervalLessThan18MonthsFromLastPregnancy", 
height  as "heightLessThan140Cm",
round(case when high_risk = 0 then 0 else height*100.0/high_risk end,2) as "perHeightLessThan140Cm",
weight  as "weightLessThan45kg",
round(case when high_risk = 0 then 0 else weight*100.0/high_risk end,2) as "perWeightLessThan45kg",
urine_albumin  as "urineAlbuminPresent",
round(case when high_risk = 0 then 0 else urine_albumin*100.0/high_risk end,2) as "perUrineAlbuminPresent",
current_date as "asOnDate"
from w
inner join loc_det on w.loc_id = loc_det.loc_id 
)

select * from high_risk_mother;',true,'ACTIVE',NULL,true,'0cc4a6d5-2599-4f55-83a2-520262b86af5'),
	 (1,'2020-03-20 20:59:37.271455',NULL,NULL,'retrieve_health_infra_for_opd_lab_test','userId','select hm.id, case when u.prefered_language = ''GU'' then hm.name else hm.name_in_english end as "healthInfraName"
        from health_infrastructure_details hm ,user_health_infrastructure uh, um_user u
        where hm.id = uh.health_infrastrucutre_id and uh.user_id = u.id and uh.state = ''ACTIVE'' and u.id = #userId#',true,'ACTIVE','This will fetch health infra assigned to user for mobile',true,'fdcc4881-ccab-49fe-bcac-dc7374e5ab2f'),
	 (66522,'2020-01-31 10:20:35.229',66522,'2020-02-10 16:26:04.195','state_of_health_data_retrieval_7','timelineType,locationId','with  location_type as(select  level,string_agg(name,''/'') as location_type from location_type_master where
                                level=(case when ''#locationId#'' = ''null'' then 1 else (select level+1 from location_type_master t
                                inner join location_master m on t.type=m.type where id=2) end)group by level ),

                elements_details as (

                    select lt.level,lt.type,l.id as "locationId",location_type.location_type as "locationType",
                    case when l.english_name is not null then l.english_name else l.name end as english_name,element_name as "elementName",
                    sum(value) as value,target,sum(male) as male,sum(female) as female,
                    sum(chart1) as chart1,sum(chart2) as chart2,sum(chart3) as chart3,sum(chart4) as chart4, max(days) as days,
                    max(reporting) as reporting,
                    max(calculatedTarget) as calculatedTarget,
                    max(color) as color,
                    max(percentage) as percentage,
                    max(displayValue) as displayValue,
                    max(sortPriority) as "sortPriority"
                     from
                    location_type,location_type_master lt,soh_timeline_analytics_temp sh,location_master l where sh.location_id =#locationId# and sh.location_id = l.id
                    and l.type = lt.type
                    and sh.timeline_type = ''#timelineType#''
                    group by lt.level, lt.type,
                    location_type.location_type, sh.target,l.id,l.english_name,sh.element_name order by english_name),
                    unique_locations as (
                        select distinct "locationId" from elements_details
                    ),
                    user_details_ids as (
                        select uul.loc_id as location_id, max(user_id) as user_id
                        from unique_locations elements
                        inner join um_user_location uul on elements."locationId" = uul.loc_id
                        inner join um_user uu on uu.id = uul.user_id
                        inner join location_master lm on lm.id =  uul.loc_id
                        where uul.state=''ACTIVE''
                        and uu.state=''ACTIVE''
                        and uu.role_id = (select id from um_role_master where id =
                        case when lm.type in (''D'',''C'') then 39
                        when lm.type in (''B'',''Z'') then 41
                        else -1 end
                        )
                        group by uul.loc_id, uu.role_id
                    ),
                    user_details as (
select concat(uu.first_name,'' '',uu.middle_name,'' '', uu.last_name, 
				case when uu.role_id = 39 then ''(CDHO)'' 
				when uu.role_id = 41 then ''(THO)'' 
				else ''(Other)'' end) as user_name,
                        uu.contact_number,
                        ud.location_id
                        from um_user uu inner join user_details_ids ud on uu.id = ud.user_id
                    )
                    select elements.*,
                    case when users.user_name is null then ''-'' else users.user_name end as "userDetail",
                    case when users.contact_number is null then ''-'' else users.contact_number end as "contactNumber"
                    from elements_details elements left join user_details users
                     on elements."locationId" = users.location_id',true,'ACTIVE',NULL,true,'6accf6d2-3ee5-48a6-b3a2-01707756b9b3'),
	 (1,'2020-02-10 19:43:42.917768',NULL,NULL,'retrieve_all_staff_sms',NULL,'with staff_sms as(
select id, jsonb_array_elements(cast(user_list as jsonb))->> ''mobileNumber'' as elem from sms_staff_sms_master
)
select sm.id, sm.name, sm.sms_template as "smsTemplate", sm.trigger_type as "triggerType", sm.schedule_date_time as "dateTime", 
sm.state, sm.status, sm.config_type as "configType",
(select CONCAT(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'')as "createdUserName" from um_user u where id = sm.created_by and state = ''ACTIVE'') ,
 sm.created_on, count(sc.elem) as "userCount"
from sms_staff_sms_master sm 
left join staff_sms sc on sc.id = sm.id 
group by sm.id,sm.created_on, sm.sms_template, sm.trigger_type, sm.schedule_date_time, "createdUserName", sm.config_type,
sm.state, sm.status, sm.name
order by created_on desc',true,'ACTIVE',NULL,true,'1c63ad26-0ad7-4640-af9d-b529ca2ad37d'),
	 (1,'2020-04-04 00:00:00',1,'2020-04-04 00:00:00','opd_search_referred_travellers_covid_19_by_location_id','offSet,locationId,limit','
    with maxScreeningId as (
        select
        max(ctsi.id) as id,
        ctsi.covid_info_id as "covidInfoId"
        from covid_travellers_info cti
        inner join covid_travellers_screening_info ctsi on ctsi.covid_info_id = cti.id
        where ctsi.any_symptoms and ctsi.referral_required
        and cti.location_id in (select child_id from location_hierchy_closer_det where parent_id = #locationId#)
        group by covid_info_id
    )
    select
    cti.id as "travellersInfoId",
    ctsi.id as "travellersScreeningInfoId",
    cti.name,
    cti.address,
    cti.pincode,
    cti.location_id as "locationId",
    get_location_hierarchy(cti.location_id) as "locationHierarchy",
    cti.mobile_number as "mobileNumber",
    ctsi.symptoms,
    ctsi.other_symptoms as "otherSymptoms",
    imt_member.id as "memberId",
    imt_member.unique_health_id as "uniqueHealthId",
    imt_member.family_id as "familyId",
    imt_member.dob as "dob",
    cast(age(imt_member.dob) as text) as "age",
    concat(uu1.first_name, '' '', uu1.middle_name, '' '', uu1.last_name) as "ashaName",
    uu1.contact_number as "ashaContactNumber",
    uu1.techo_phone_number as "ashaTechoContactNumber",
    concat(uu2.first_name, '' '', uu2.middle_name, '' '', uu2.last_name) as "anmName",
    uu2.contact_number as "anmContactNumber",
    uu2.techo_phone_number as "anmTechoContactNumber"
    from covid_travellers_info cti
    inner join covid_travellers_screening_info ctsi on ctsi.id = (select id from maxScreeningId msi where msi."covidInfoId" = cti.id)
    left join imt_member on imt_member.id = cti.member_id
    left join imt_family on imt_member.family_id = imt_family.family_id
    left join um_user_location uul1 on uul1.loc_id = imt_family.area_id and uul1.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul1.user_id and state = ''ACTIVE'') = 24
    left join um_user uu1 on uu1.id = uul1.user_id
    left join um_user_location uul2 on uul2.loc_id = imt_family.location_id and uul2.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul2.user_id and state = ''ACTIVE'') = 30
    left join um_user uu2 on uu2.id = uul2.user_id
    left join rch_opd_member_registration romr on ctsi.id = romr.reference_id and romr.reference_type = ''COVID_TRAVELLERS_SCREENING''
    where romr.id is null
    and cti.location_id in (select child_id from location_hierchy_closer_det where parent_id = #locationId#)
    limit #limit# offset #offSet#;
',true,'ACTIVE','OPD Search IDSP Referred Patients By Location ID',true,'82056625-aa64-4e2b-9dac-df3f09e6bde4'),
	 (1,'2020-02-18 00:00:00',NULL,NULL,'loaction_ward_retrieval_by_id','id','
    SELECT
    lw.id,
	lw.ward_name as "wardName",
	lw.ward_name_english as "wardNameEnglish",
	lw.lgd_code as "lgdCode",
	lw.location_id as "locationId",
	get_location_hierarchy(lw.location_id) as "locationHierarchy",
	cast(json_agg(lwm.location_id) as text) as "assignedUPHCIds",
	cast(json_agg(lm.name) as text) as "assignedUPHCs"
 	from public.location_wards lw
 	left join location_wards_mapping lwm on lwm.ward_id = lw.id
 	left join location_master lm on lm.id = lwm.location_id
    where lw.id = #id#
 	group by lw.id
',true,'ACTIVE','Location Ward Retrieval By Id',true,'db43334c-249f-44b9-a426-c179b4a23a78'),
	 (1,'2020-03-03 00:00:00',NULL,NULL,'get_soh_maintenance_mode','systemKey','
select
	is_active,
	key_value
from
	system_configuration
where
	system_key = ''#systemKey#''
',true,'ACTIVE',NULL,true,'f5f3aadd-4e14-459c-8a6c-b86f914fa8da'),
	 (1,'2020-03-17 00:00:00',NULL,NULL,'delete_lab_test_mapping_by_type','labTestId,categoryId','
delete
from
	health_infrastructure_lab_test_mapping
where
    health_infra_id is null and
	ref_id = #labTestId#
	or ref_id = #categoryId#
',false,'ACTIVE',NULL,true,'230f820b-882e-4f3a-9d0a-f59e76556a05'),
	 (1,'2020-03-17 00:00:00',NULL,NULL,'fetch_health_infra_lab_test_mapping','healthInfraId,healthInfraType','
select
	*
from
	health_infrastructure_lab_test_mapping
where
	(case when (SELECT COUNT(*) FROM health_infrastructure_lab_test_mapping WHERE health_infra_id = #healthInfraId#) > 0 THEN health_infra_id = #healthInfraId#
	else health_infra_type = #healthInfraType#
	end)
',true,'ACTIVE',NULL,true,'fd20e98e-64b5-41e8-9968-87885b4da12e'),
	 (1,'2019-07-01 00:00:00',58981,'2020-06-22 18:28:11.277884','mob_work_register_detail_wpd_child','visitId','
with const as (
	select cast(''M'' as text) as const, cast(''Male'' as text) as name
	union
	select cast(''F'' as text) as const, cast(''Female'' as text) as name
	union
	select cast(''T'' as text) as const, cast(''Transgender'' as text) as name
	union
	select cast(''LBIRTH'' as text) as const, cast(''Live Birth'' as text) as name
	union
	select cast(''SBIRTH'' as text) as const, cast(''Still Birth'' as text) as name
	union
	select cast(''YES'' as text) as const, cast(''Yes'' as text) as name
	union
	select cast(''NO'' as text) as const, cast(''No'' as text) as name
	union
	select cast(''NOT_REQUIRED'' as text) as const, cast(''Not Required'' as text) as name
), wpd_child_id as (
	select id from rch_wpd_child_master where wpd_mother_id = #visitId#
), cong_def as (
	select rel.wpd_id, string_agg(det.value ,'', '') as cong_def
	from rch_wpd_child_congential_deformity_rel rel
	inner join listvalue_field_value_detail det on rel.congential_deformity = det.id
	where rel.wpd_id in (select * from wpd_child_id) group by rel.wpd_id
), immu as (
	select imm.visit_id, string_agg(concat(
		case when scm.constant is null then imm.immunisation_given else scm.value end,
		'' - '',
		to_char(imm.given_on, ''dd/MM/yyyy'')), chr(10))
	as immu_given
	from rch_immunisation_master imm
	left join system_constant_master scm on scm.constant = imm.immunisation_given
	where visit_id in (select * from wpd_child_id)
	and visit_type = ''FHW_WPD''
	group by visit_id
)
select
concat(mem.first_name, '' '', mem.middle_name, '' '', mem.last_name, '' ('', mem.unique_health_id, '')'') as "Member Name",
outcome.name as "Pregnancy Outcome",
case when gender.name is not null then gender.name else child.gender end as "Infant Gender",
case when child.birth_weight is not null then concat(child.birth_weight, '' Kgs'') else null end as "Birth Weight",
case when child.baby_cried_at_birth = true then ''Yes'' when child.baby_cried_at_birth = false then ''No'' else null end as "Infant Cried At Birth",
case when mother.breast_feeding_in_one_hour = true then ''Yes'' when mother.breast_feeding_in_one_hour = false then ''No'' else null end as "Infant Breastfeeding started in 1 hour of birth",
child.other_congential_deformity as "Other Congential Deformity",
case when child.is_high_risk_case = true then ''Yes'' when child.is_high_risk_case = false then ''No'' else null end as "Is High Risk Case",
immu.immu_given as "Immunisations Given",
referral_done.name as "Referral done"
from rch_wpd_child_master child
inner join rch_wpd_mother_master mother on child.wpd_mother_id = mother.id and mother.id = #visitId#
inner join imt_member mem on child.member_id = mem.id
left join cong_def on cong_def.wpd_id = child.id
left join immu on immu.visit_id = child.id
left join const outcome on outcome.const = child.pregnancy_outcome
left join const gender on gender.const = child.gender
left join const referral_done on referral_done.const = child.referral_done
',true,'ACTIVE',NULL,true,'1fc210dd-8d0a-4da9-a6ab-c6f4cb151ae1'),
	 (1,'2020-04-10 00:00:00',1,'2020-04-10 00:00:00','retrieve_covid_19_travellers','retrieveNonContactable,offset,locationId,limit,retrievePending,isFromImmigration','with "filteredTravellers" as (
        select
        cti.*
        from covid_travellers_info cti
        where
        (case
            when #retrievePending# is true then cti.location_id is null
            when #retrieveNonContactable# is true then cti.is_update_location is true
            else cti.location_id is not null
        end)
        and cti.district_id in (select lhcd.child_id from location_hierchy_closer_det lhcd where lhcd.parent_id = #locationId#)
        and (cti.is_from_immigration = #isFromImmigration# or false = #isFromImmigration#)
        and (cti.input_type = ''Travel'' or cti.is_from_immigration is true)
        order by
            case
                when (cti.health_status is null or TRIM(BOTH FROM cti.health_status) = '''' or TRIM(BOTH FROM cti.health_status) = ''-'') then 3
                when (TRIM(BOTH FROM cti.health_status) ilike ''normal'') then 2
                else 1
            end asc
        limit #limit# offset #offset#
    ),
    "lastScreeningDates" as (
        select
        ctsi.covid_info_id as id,
        max(ctsi.created_on) as "lastScreeningDate"
        from "filteredTravellers" ft
        inner join covid_travellers_screening_info ctsi on ctsi.covid_info_id = ft.id
        group by ctsi.covid_info_id
    )
    select
    ft.*,
    concat(im.first_name, '' '', im.middle_name, '' '', im.last_name) as "fullName",
    im.unique_health_id as "uniqueHealthId",
    im.family_id as "familyId",
    im.mobile_number as "mobileNumber",
    get_location_hierarchy(if.location_id) as "locationHierarchy",
    get_location_hierarchy(ft.district_id) as "districtHierarchy",
    lsd."lastScreeningDate"
    from "filteredTravellers" ft
    left join imt_member im on im.id = ft.member_id
    left join imt_family if on im.family_id = if.family_id
    left join "lastScreeningDates" lsd on lsd.id = ft.id
    order by
        case
            when (ft.health_status is null or TRIM(BOTH FROM ft.health_status) = '''' or TRIM(BOTH FROM ft.health_status) = ''-'') then 3
            when (TRIM(BOTH FROM ft.health_status) ilike ''normal'') then 2
            else 1
        end asc',true,'ACTIVE','Retrieve COVID 19 Travellers',true,'8d1acb69-d57d-4c72-b7eb-bafe02302e4e'),
	 (60512,'2020-04-10 00:00:00',60512,'2020-04-10 00:00:00','covid19_retrieve_lab_infrastructure_component_details','healthInfraId','select receipt_date as "receiptDate",
rna_extraction as "rnaExtraction",
eg_available as "eg",
confirmatory_assay as "confirmatoryAssay",
ag_path as "agPath",
test_capacity as "testCapacity"
from covid19_lab_infrastructure_component_history
where health_infra_id = #healthInfraId#;',true,'ACTIVE',NULL,true,'03425a1b-ad5a-491a-bd3d-4b7773628a1d'),
	 (1,'2020-02-18 00:00:00',80208,'2020-03-14 10:00:28.215991','team_filter_teams_by_location_id','locationId,loggedInUserId','with 
allowed_team_types as(
	select ttrm.team_type_id from um_user uu inner join team_type_role_master ttrm on ttrm.role_id =uu.role_id and ttrm.state =''ACTIVE'' where uu.id = #loggedInUserId#
	
),
loggedin_user_location as ( 
	select uul.loc_id as location_id from um_user_location uul where uul.user_id = #loggedInUserId#
),
locations as (
	select lm.name , lm.id from location_master lm 
	inner join location_hierchy_closer_det lhcd  on lhcd.child_id = lm.id 
	where (#locationId# is not null or  lhcd.parent_id in (select location_id 
	from loggedin_user_location)  ) and (#locationId# is null or lhcd.parent_id = #locationId# ) and lm.state =''ACTIVE''
),
teams as(
	select distinct tm.* from locations inner join  team_location_master tlm on tlm.location_id = locations.id  and tlm.state =''ACTIVE''
	inner join team_master tm on tm.id = tlm.team_id where tm.team_type_id in (select team_type_id from allowed_team_types)
)
,
team_locations as (
	select * from teams inner join team_location_master tlm on tlm.team_id =teams.id and tlm.state =''ACTIVE''
)
,
parent_locations as(
	select distinct lhcd.parent_id , lhcd.child_id, lhcd.depth from team_locations inner join location_hierchy_closer_det lhcd on lhcd.child_id = team_locations.location_id order by lhcd.depth desc
),
location_full_name as (
	select distinct parent_locations.child_id as location_id, string_agg(lm.name, ''>'' ) as "locationFullName" 
	from parent_locations inner join location_master lm on lm.id = parent_locations.parent_id group by parent_locations.child_id 
)
,
team_locations_dto as(
select t.id,
cast(json_agg(json_build_object(''locationId'',lfn.location_id, ''locationFullName'',lfn."locationFullName" )) as text ) as locations
from teams t left join team_location_master tlm on tlm.team_id = t.id and tlm.state= ''ACTIVE''
left join location_full_name lfn on lfn.location_id = tlm.location_id group by t.id
)
,
team_users_dto as(
select t.id,
cast(json_agg(json_build_object(''userId'',uu.id,''firstName'',uu.first_name ,''lastName'',uu.last_name ,''userName'',uu.user_name ,''roleId'', uu.role_id ,''roleName'',urm.name )) as text) as users
from teams t  
left join team_member_det tmd on tmd.team_id = t.id and tmd.state = ''ACTIVE''
inner join um_user uu on uu.id = tmd.user_id 
inner join um_role_master urm on urm.id = uu.role_id
 group by t.id
)
select t.id,t.team_type_id as "teamTypeId",t.name ,ttm.type as "teamType",ttm.state as "teamTypeState" ,t.state,tld.locations, tud.users from teams t left join  team_locations_dto tld on t.id = tld.id
left join team_users_dto tud on t.id = tud.id
left join team_type_master ttm on t.team_type_id = ttm.id ;',true,'ACTIVE',NULL,true,'b7df7b8c-cda9-4900-9ffd-6b909723a2ba'),
	 (97051,'2021-08-19 00:00:00',97051,'2021-08-19 00:00:00','mobile_feature_details','feature','--- mobile_feature_details
with beans as (
	select feature as mobile_constant, array_agg(mbfr.bean) as bean
	from mobile_beans_feature_rel mbfr
	group by feature
), forms as (
	select mobile_constant, array_agg(mffr.form_id) as form
	from mobile_form_feature_rel mffr
	group by mobile_constant
)
select mfm.mobile_constant, mfm.feature_name, mfm.mobile_display_name, cast(b.bean as text), cast(f.form as text)
from beans b
right join mobile_feature_master mfm on mfm.mobile_constant = b.mobile_constant
left join forms f on mfm.mobile_constant = f.mobile_constant
where mfm.mobile_constant = #feature#;',true,'ACTIVE',NULL,true,'7b43cf49-fb47-42a5-baa4-9d5507612310'),
	 (-1,'2020-04-30 00:00:00',-1,'2020-04-30 00:00:00','retrieve_families_to_update_area','locationId,limit,offset','
    with pending_count as (
        select
            count(*) as "count"
        from
            imt_family if
        where
            if.location_id in (select lhcd.child_id from location_hierchy_closer_det lhcd where lhcd.parent_id = #locationId#)
            and if.area_id is null
    )
    select
        if.*,
        get_location_hierarchy(if.location_id) as "locationHierarchy",
        concat(im1.first_name, '' '', im1.middle_name, '' '', im1.last_name) as "contactPersonName",
        im1.unique_health_id as "contactPersonUniqueHealthId",
        concat(im2.first_name, '' '', im2.middle_name, '' '', im2.last_name) as "hofName",
        im2.unique_health_id as "hofUniqueHealthId",
        (select count from pending_count) as "pendingCount",
        get_location_hierarchy(#locationId#) as "currentLocationHierarchy"
    from
        imt_family if
    left join
        imt_member im1 on im1.id = if.contact_person_id
    left join
        imt_member im2 on im2.id = if.hof_id
    where
        if.location_id in (select lhcd.child_id from location_hierchy_closer_det lhcd where lhcd.parent_id = #locationId#)
        and if.area_id is null
    limit #limit# offset #offset#;
',true,'ACTIVE','Retrieve families to update the area',true,'4e28f805-0dcf-4a78-a8b2-19d5e63e977c'),
	 (60512,'2019-09-13 12:51:39.425',79677,'2020-03-04 19:13:00.464','state_of_health_preg_reg_detail_2','fromDate,toDate,limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
preg.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
to_char(preg.lmp_date,''DD-MM-YYYY'') as "lmpDate", 
to_char(preg.reg_service_date,''DD-MM-YYYY'') as "pregRegDate",
preg.pregnancy_reg_location_id as loc_id
from rch_pregnancy_analytics_details preg,imt_member m
where preg.pregnancy_reg_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and preg.reg_service_date between ''#fromDate#'' and ''#toDate#''
and preg.early_anc
--and preg.maternal_detah
and m.id = preg.member_id 
limit #limit#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id
	where family_head = true
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
inner join anmLocation a on  uld.loc_id = a.location_id
inner join um_user uu on uu.id = uld.user_id 
where 
uld.state = ''ACTIVE'' and uu.state=''ACTIVE'' and
uu.role_id in (select id from um_role_master where code =''FHW'' )
group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
	select max(service_date) as service_date,services.member_id from rch_member_services services
	inner join analytics a on a.member_id = services.member_id
	group by services.member_id 
),
lastServiceUnique as(
	select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
	where service.member_id = last.member_id
	group by service.member_id, last.service_date
),
lastServiceDetails as (
	select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
	service.location_id,
	location.name as locationName,
	case when service.service_type =''FHW_LMP'' then ''LMP Visit''
		when  service.service_type =''FHW_ANC'' then ''ANC Visit''
		  when service.service_type = ''FHW_PNC'' then ''PNC Visit''
		  when service.service_type = ''FHW_CS'' then ''Child Service''
		  when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
	end as service_type,
	service.member_id 
	from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id
	
	inner join location_master location on service.location_id = location.id
	
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName"
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = a.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id',true,'ACTIVE',NULL,true,'09079e33-6f48-4c24-ba6e-29c77c2604f8'),
	 (57698,'2020-04-01 00:00:00',57698,'2020-04-01 00:00:00','idsp_heat_map_all_travellers',NULL,'select latitude,longitude,
count(*) as weight from idsp_screening_heat_map_analytics
where latitude is not null and longitude is not null
group by latitude,longitude',true,'ACTIVE',NULL,true,'d50b29e9-37d9-4f84-8b87-c12be50b28d4'),
	 (75398,'2020-04-30 00:00:00',75398,'2020-04-30 00:00:00','covid_19_get_opd_lab_test_for_edit','admissionId','select
admission.member_id,
admission.id,
first_name as "firstname",
middle_name as "middlename",
last_name as "lastname",
admission.address as "address",
loc.english_name as "loc_name", 
loc.id as "districtLocationId",
case when pincode is null or pincode = ''null'' or pincode = ''\"null\"'' then null else cast(pincode as integer) end as "pinCode",
occupation as "occupation",
travel_history as "travelHistory",
travelled_place as "travelledPlace",
flight_no as "flightno",
is_abroad_in_contact as "is_abroad_in_contact",
in_contact_with_covid19_paitent as "inContactWithCovid19Paitent",
abroad_contact_details as "abroad_contact_details",
case_no as "case_number",
opd_case_no as "opdCaseNo",
cast(contact_number as numeric) as "contact_no",
admission.gender as "gender",
pregnancy_status as "pregnancy_status",
age as "age",
age_month as "ageMonth",
is_fever as "hasFever",
is_cough as "hasCough",
is_breathlessness as "hasShortnessBreath",
is_sari as "isSari",
is_hiv as "isHIV",
is_heart_patient as "isHeartPatient",
is_diabetes as "isDiabetes",
is_copd as "isCOPD",
is_hypertension as "isHypertension",
is_renal_condition as "isRenalCondition",
is_immunocompromized as "isImmunocompromized",
is_malignancy as "isMalignancy",
is_other_co_mobidity as "isOtherCoMobidity",
other_co_mobidity as "otherCoMobidity",
indications as "indications",
date_of_onset_symptom as "date_of_onset_symptom",
refer_from_hospital as "referFromHosital",
ward.id as "ward_id",
ward.ward_name as "ward_name",
current_bed_no as "bedno",
unit_no as "unitno",
health_status as "healthstatus",
emergency_contact_name as "emergencyContactName",
case when emergency_contact_no is null or emergency_contact_no = ''null'' or emergency_contact_no = ''\"null\"'' then null else cast(emergency_contact_no as bigint) end as "emergencyContactNo",
is_migrant as "isMigrant",
indication_other as "otherIndications",
cltd.sample_health_infra as "health_infra_id",
cltd.sample_health_infra_send_to as "labHealthInfraId",
cltd.lab_collection_on as "collectionDate",
suggested_health_infra as "suggestedHealthInfra"
from covid19_admission_detail admission left join covid19_admitted_case_daily_status daily on admission.id  = daily.admission_id
inner join covid19_lab_test_detail cltd on cltd.id = admission.last_lab_test_id
left join location_master loc on loc.id = daily.location_id and type in (''D'',''C'')
left join health_infrastructure_ward_details ward on ward.id  = admission.current_ward_id
where
admission.id = #admissionId#',true,'ACTIVE',NULL,true,'cae99e9b-2c66-4146-8bca-8b4eacaa0eb2'),
	 (60512,'2020-04-10 00:00:00',60512,'2020-04-10 00:00:00','covid19_update_lab_infrastructure_component_details','eg,confirmatoryAssay,testCapacity,id,agPath,userId,rnaExtraction','update covid19_lab_infrastructure_component_history
set rna_extraction = #rnaExtraction#,
eg_available = #eg#,
confirmatory_assay = #confirmatoryAssay#,
ag_path = #agPath#,
test_capacity = #testCapacity#,
modified_by = #userId#,
modified_on = now()
where id = #id#',false,'ACTIVE',NULL,true,'3f0892e8-5032-470c-be6a-72b179e23fd4'),
	 (1,'2020-03-20 20:59:37.271455',NULL,NULL,'retrieve_lab_test_form_opd_lab_test','formCode','
with max_ver as (
    select sfc.form_id, max(sfc.version) from system_form_configuration sfc
    inner join system_form_master sfm on sfm.id = sfc.form_id and sfm.form_code = ''#formCode#'' group by sfc.form_id
)
select sfc.form_config_json as "formConfigJson", sfc.version from system_form_configuration sfc
inner join max_ver m on m.form_id = sfc.form_id and m.max = sfc.version
',true,'ACTIVE','This will fetch health infra assigned to user for mobile',true,'c1eb9d0e-29bb-4071-9515-ffefbc6d2b64'),
	 (60512,'2020-04-10 00:00:00',60512,'2020-04-10 00:00:00','covid19_get_location_cluster_by_id','id','select location_cluster_master.id as "clusterId",
location_cluster_master.name as "clusterName",
location_cluster_master.population,
location_cluster_mapping_detail.location_id as "locationId",
location_master.type as "locationType",
location_master.name as "locationName",
location_type_master.level as "locationLevel",
replace(get_location_hierarchy(location_master.id),'' > '','','') as "locationFullName"
from location_cluster_master
inner join location_cluster_mapping_detail on location_cluster_master.id = location_cluster_mapping_detail.cluster_id
inner join location_master on location_cluster_mapping_detail.location_id = location_master.id
inner join location_type_master on location_master.type = location_type_master.type
where location_cluster_master.id = #id#',true,'ACTIVE',NULL,true,'abac1963-d6b8-45e1-aa1a-eb3b71993b39'),
	 (1,'2020-03-20 20:59:37.271',58981,'2020-03-29 14:15:52.186','retrieve_member_details_for_opd_lab_test','healthInfraId','select m.unique_health_id as "healthId",
        m.family_id as "familyId",
        m.first_name as "firstName",
        m.middle_name as "middleName",
        m.last_name as "lastName",
        l.name as "villageName",
        ltm.name as "testName",
        sfm.form_code as "formCode",
        omm.health_infra_id as "healthInfraId",
        ltd.id as "labTestDetId"
        from rch_opd_member_master omm
        inner join rch_opd_lab_test_details ltd on omm.id = ltd.opd_member_master_id
        inner join rch_opd_lab_test_master ltm on ltd.lab_test_id = ltm.id
        inner join system_form_master sfm on ltm.form_id = sfm.id
        inner join imt_member m on ltd.member_id = m.id
        inner join imt_family f on m.family_id = f.family_id
        inner join location_master l on f.location_id = l.id
        where ltd.status = ''PENDING'' 
        and omm.health_infra_id = #healthInfraId#;',true,'ACTIVE','This will fetch health infra assigned to user for mobile',true,'2ca3eb74-396b-48cd-8a91-6e30b0c5a559'),
	 (66522,'2019-11-06 15:06:46.007',66522,'2020-03-17 15:39:36.066','state_of_health_get_hypertension_confirm_detail_2','fromDate,toDate,limit,location_id','with analytics_unique as (
	select max(id) as id from ncd_member_diseases_diagnosis dia
	where dia.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and dia.diagnosed_on between ''#fromDate#'' and ''#toDate#''
	and dia.disease_code in (''HT'')
	and dia.status in (''CONFIRMED'',''TREATMENT_STARTED'',''REFERRED'')
	group by dia.member_id
),
analytics as(
select m.unique_health_id as "uniqueHealthId",
dia.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
dia.location_id as loc_id,
dia.disease_code,
to_char(dia.diagnosed_on,''dd-MM-yyyy'') as diagnosed_on
from ncd_member_diseases_diagnosis dia,imt_member m, analytics_unique analytics
where dia.id = analytics.id
and m.id = dia.member_id 
and dia.status in (''CONFIRMED'',''TREATMENT_STARTED'',''REFERRED'') limit #limit#
),

family_head_single as (
select m2.id as head_id,imt_member.id as member_id
from analytics
inner join imt_member on analytics.member_id = imt_member.id
inner join imt_family on imt_member.family_id = imt_family.family_id
inner join imt_member m2 on imt_family.family_id = m2.family_id and 
m2.id = imt_family.hof_id
group by imt_member.id, m2.id
),
family_head as (
	select 
	head.member_id as member_id,
	concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as FamilyHead,
	m2.mobile_number as FamilyHeadMobileNo
	from family_head_single head inner join imt_member m2 on m2.id = head.head_id

),
contact_person as (
	select a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from user_location_detail uld 
	inner join anmLocation a on  uld.location = a.location_id
	inner join um_user uu on uu.id = uld.user_id 
where uu.role_id in (select id from um_role_master where code =''FHW'' )
	group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
),
lastService as (
	select max(service_date) as service_date,services.member_id from rch_member_services services
	inner join analytics a on a.member_id = services.member_id
	group by services.member_id 
),
lastServiceUnique as(
	select max(id) as id from rch_member_services service inner join lastService last on service.service_date = last.service_date
	where service.member_id = last.member_id
	group by service.member_id, last.service_date
),
lastServiceDetails as (
	select to_char(service.service_date,''dd-MM-yyyy'') as service_date, 
	service.location_id,
	location.name as locationName,
	case when service.service_type =''FHW_LMP'' then ''LMP Visit''
		when  service.service_type =''FHW_ANC'' then ''ANC Visit''
		  when service.service_type = ''FHW_PNC'' then ''PNC Visit''
		  when service.service_type = ''FHW_CS'' then ''Child Service''
		  when service.service_type = ''FHW_MOTHER_WPD'' then ''Mother WPD''
	end as service_type,
	service.member_id 
	from rch_member_services service inner join lastServiceUnique lasts on service.id = lasts.id
	
	inner join location_master location on service.location_id = location.id
	
)
select a.*,
fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo",
service.service_date as "LastServiceDate",
service.service_type as "LastServiceType",
service.locationName as "LastServiceLocationName",
case when a.disease_code = ''D'' then ''Diabetes''
     when a.disease_code = ''HT'' then ''Hypertension''
     else ''Other'' end as "diagnosisType",
a.diagnosed_on as "diagnosedOn"    
from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id
left join lastServiceDetails service on a.member_id = service.member_id',true,'ACTIVE',NULL,true,'08dae49c-381e-432f-b5c6-233e8d0971c4'),
	 (1,'2020-03-21 21:30:33.795542',NULL,NULL,'idsp_from_s_other_detail','location_id','select max((case when lm."type" = ''S'' then lm.name end)) as state
,max((case when lm."type" in (''D'',''C'') then lm.name end)) as district
,max((case when lm."type" in (''B'',''Z'') then lm.name end)) as block
,max(ru.name) as reporting_unit
from location_hierchy_closer_det lhc,location_master lm,location_master as ru
where lhc.child_id = #location_id# and lhc.parent_id = lm.id
and ru.id = #location_id#
group by lhc.child_id',true,'ACTIVE',NULL,true,'56d1bbb4-3fe8-4c40-814c-232dac9757b1'),
	 (1,'2020-03-19 00:00:00',66522,'2020-04-23 17:59:23.75','state_of_health_data_retrieval_11','locationId,timeline_type','with elements_details as (
       select lt.level,lt.type,closer.child_id as "locationId",
        case when lt.type =''C'' or lt.type =''D'' then ''Districts/Corporation'' else lt.name end as "locationType",
        case when l.english_name is not null then l.english_name else l.name end as english_name,
config.element_name as "elementName",
        value as value,sh.target,male as male,female as female,
        chart1 as chart1,chart2 as chart2,chart3 as chart3,chart4 as chart4,
chart5 as chart5,
chart6 as chart6,
chart7 as chart7,
chart8 as chart8,
chart9 as chart9,
chart10 as chart10,
chart11 as chart11,
chart12 as chart12,
chart13 as chart13,
chart14 as chart14,
chart15 as chart15,
        cast(''#timeline_type#'' as text) as timeline_type,
        days as days,
        reporting as reporting,
        calculatedTarget as calculatedTarget,
        color as color,
        percentage as percentage,
        case when sortPriority is null then 0 else sortPriority end as "sortPriority",
        displayValue as displayValue
        from location_hierchy_closer_det closer
        inner join location_master l on closer.child_id = l.id
        inner join location_type_master lt on l.type = lt.type
        left join soh_element_configuration config on TRUE
        left join soh_timeline_analytics_temp sh on sh.location_id = closer.parent_id and config.element_name = sh.element_name
        --inner join location_hierchy_closer_det closer on closer.parent_id = 2 and depth=case when 2 = 2 then 2 else 1 end and timeline_type = ''#timeline_type#''
	and timeline_type = ''#timeline_type#''
        where closer.parent_id = ''#locationId#'' and depth=0
	--and timeline_sub_type=''PERIOD''
        order by english_name),
unique_locations as (
        select distinct "locationId" from elements_details
        ),
user_details_ids as (
        select uul.loc_id as location_id, concat(uu.first_name,'' '',uu.middle_name,'' '', uu.last_name)
				 as "userName",
				 case when uu.role_id = 39 then ''CDHO''
				when uu.role_id = 41 then ''THO''
				when uu.role_id = 66 then ''MO PHC''
when uu.role_id = 86 then ''MO UPHC''

				when uu.role_id = 67 then ''MO AYUSH''
				when uu.role_id = 63 then ''RCHO''
                                when uu.role_id = 85 then ''MOH Co.''
				when uu.role_id = 99 then ''RCHO Co.''
				when uu.role_id = 204 then ''MPHW''
				when uu.role_id = 30 then ''FHW''
				when uu.role_id = 24 then ''ASHA''
				when uu.role_id = 108 then ''DHO''
                                when uu.role_id = 179 then ''CHO-HWC''
				else ''(Other)'' end as "roleName",
				uu.contact_number as "contactNumber",
				uu.id as user_id
        from unique_locations elements
        inner join um_user_location uul on elements."locationId" = uul.loc_id
        inner join um_user uu on uu.id = uul.user_id
        inner join location_master lm on lm.id =  uul.loc_id
        where uul.state=''ACTIVE''
        and uu.state=''ACTIVE''
	and uu.role_id in (39,41,67,66,63,85,99,204,24,108,30,86,179)
),
remaining_user_data as (
	select "locationId" as location_id,
	cast(''-'' as text) as "userName",
	t.roleName,
	cast(''-'' as text) as "contactNumber",
	cast(0 as numeric) as "user_id"

	from unique_locations
	inner join location_master lm on lm.id = "locationId"
	inner join (
	select ''C'' as type_id, unnest(array[''MOH Co.'', ''RCHO Co.'']) as roleName
	union all
	select ''D'' as type_id, unnest(array[''CDHO'', ''RCHO'']) as roleName
	union all
	select ''B'' as type_id, ''THO'' as roleName
	union all
	select ''Z'' as type_id, ''DHO'' as roleName
	union all
	select ''P'' as type_id, unnest(array[''MO PHC'', ''MO AYUSH'']) as roleName
	union all
	select ''U'' as type_id, unnest(array[''MO UPHC'', ''MO AYUSH'']) as roleName
	union all
	select ''V'' as type_id, unnest(array[''FHW'',''MPHW'']) as roleName
	union all
	select ''ANG'' as type_id, unnest(array[''FHW'',''MPHW'']) as roleName
	union all
	select ''SC'' as type_id, unnest(array[''CHO-HWC'']) as roleName
	union all
--select ''ANM'' as type_id, unnest(array[''CHO-HWC'']) as roleName
	--union all
	select ''A'' as type_id, unnest(array[''ASHA'']) as roleName
	union all
	select ''AA'' as type_id, unnest(array[''ASHA'']) as roleName
	) as t on t.type_id = lm."type"
),
remaining_user_data_1 as (
	select users.*
	from remaining_user_data remains
	left join user_details_ids users  on users.location_id = remains.location_id
	and users."roleName"  = remains.roleName
	where users.user_id is not null
	union
	select remains.*
        from remaining_user_data remains
	left join user_details_ids users  on users.location_id = remains.location_id
	and users."roleName"  = remains.roleName
	where users.user_id is null
),
user_details as (
	       select
	       cast(array_to_json(array_agg(row_to_json(ud.*))) as text) as user_name,ud.location_id
	       from remaining_user_data_1 ud
	       group by ud.location_id
)
select elements.*,
case when users.user_name is null then null else users.user_name end as  "userDetail"
from elements_details elements
--inner join calculations cal on cal."locationId" = elements."locationId"
left join user_details users
on elements."locationId" = users.location_id',true,'ACTIVE',NULL,true,'bcf1e3bf-7614-4dd8-8560-6687d75c32fd'),
	 (1027,'2020-04-30 00:00:00',1027,'2020-04-30 00:00:00','retrieve_all_tables',NULL,'select iss.schemaname,iss.tablename,
 pg_size_pretty(pg_relation_size(''"'' || iss.schemaname || ''"."'' || iss.tablename || ''"'')) as "size_pretty",
 pg_relation_size(''"'' || iss.schemaname || ''"."'' || iss.tablename || ''"'') as "size"
 from pg_catalog.pg_tables iss where iss.schemaname != ''pg_catalog'' AND iss.schemaname != ''information_schema'' order by iss.tablename;',true,'ACTIVE','Fire postgres query to get all the tables from database',true,'d7bf94cf-794d-4fe4-af50-10adc3bd58d0'),
	 (57698,'2020-04-01 00:00:00',57698,'2020-04-01 00:00:00','idsp_heat_map_domestic_trav',NULL,'select latitude,longitude,
count(*) as weight from idsp_screening_heat_map_analytics
where type = ''DOMESTIC'' and latitude is not null and longitude is not null
group by latitude,longitude',true,'ACTIVE',NULL,true,'0f35c6cc-e864-40e8-9853-eef54b021ac1'),
	 (1,'2020-03-17 00:00:00',NULL,NULL,'retrieve_opd_lab_tests_by_health_infrastructure','healthInfrastructureId,healthInfrastructureType,categories,type','
    select
    case when ''#type#'' = ''OPD_CATEGORY'' then listvalue_field_value_detail.id else null end as "categoryId",
    case when ''#type#'' = ''OPD_CATEGORY'' then listvalue_field_value_detail.value else null end as "categoryName",
    case when ''#type#'' = ''OPD_LAB_TEST'' then rch_opd_lab_test_master.id else null end as "labTestId",
    case when ''#type#'' = ''OPD_LAB_TEST'' then rch_opd_lab_test_master.name else null end as "labTestName"
    from health_infrastructure_lab_test_mapping
    left join listvalue_field_value_detail on ''#type#'' = ''OPD_CATEGORY''
    and health_infrastructure_lab_test_mapping.ref_id = listvalue_field_value_detail.id
    left join rch_opd_lab_test_master on ''#type#'' = ''OPD_LAB_TEST''
    and health_infrastructure_lab_test_mapping.ref_id = rch_opd_lab_test_master.id
    where
    case
        when (select count(*) from health_infrastructure_lab_test_mapping where health_infra_id = #healthInfrastructureId#) > 0 then health_infra_id = #healthInfrastructureId#
        else health_infra_type = #healthInfrastructureType#
    end
    and permission_type = ''#type#''
    and case
            when ''#type#'' = ''OPD_LAB_TEST'' then ref_id in (select id from rch_opd_lab_test_master where category in (#categories#) and is_active)
            else true
         end;
',true,'ACTIVE','Retrieve OPD Lab Tests By Health Infrastructure',true,'8a62778e-b3d4-48e5-9df8-c13361fbd2ac'),
	 (1,'2020-03-17 00:00:00',NULL,NULL,'get_lab_test','','
select
	lab_test.id,
	lab_test.name,
	lab_test.category,
	field_value.value as "categoryName",
	lab_test.is_active as "isActive",
	lab_test.form_id as "formId",
	form_master.form_name as "formName"
from
	rch_opd_lab_test_master as "lab_test"
inner join listvalue_field_value_detail as "field_value" on
	lab_test.category = field_value.id
inner join system_form_master as "form_master" on
	lab_test.form_id = form_master.id
where
	lab_test.is_active = true
',true,'ACTIVE',NULL,true,'da8926a6-46de-404b-b70c-6ed9488b11f7'),
	 (1,'2020-03-17 16:12:09.06822',1,'2020-03-17 16:12:09.06822','dynamic_form_select_all',NULL,'select * from system_form_master;',true,'ACTIVE',NULL,NULL,'d0a3993c-e877-40f8-8a7e-007d6348bb5b'),
	 (84954,'2021-09-21 00:00:00',84954,'2021-09-21 00:00:00','insert_je_vaccine_batch_file_details','fileIds,batchId','insert into rch_je_vaccine_batch_file_details
(batch_id,file_id)
select #batchId#,unnest(cast(#fileIds# as text[]));',false,'ACTIVE',NULL,true,'5481a65f-a75f-40af-8f17-4e0a2e372a48'),
	 (1,'2019-07-01 00:00:00',58981,'2020-05-01 21:02:19.513','mob_work_register_detail_wpd_mother','visitId','--mob_work_register_detail_wpd_mother
with const as (
	select cast(''MTP'' as text) as const, cast(''MTP'' as text) as name
	union
	select cast(''ABORTION'' as text) as const, cast(''Abortion'' as text) as name
	union
	select cast(''SPONT_ABORTION'' as text) as const, cast(''Spontaneous Abortion'' as text) as name
	union
	select cast(''LBIRTH'' as text) as const, cast(''Live Birth'' as text) as name
	union
	select cast(''SBIRTH'' as text) as const, cast(''Still Birth'' as text) as name
	union
	select cast(''HOME'' as text) as const, cast(''Home'' as text) as name
	union
	select cast(''ON_THE_WAY'' as text) as const, cast(''On the way'' as text) as name
	union
	select cast(''HOSP'' as text) as const, cast(''Hospital'' as text) as name
	union
	select cast(''108_AMBULANCE'' as text) as const, cast(''108 Ambulance'' as text) as name
	union
	select cast(''DOCTOR'' as text) as const, cast(''Doctor'' as text) as name
	union
	select cast(''ANM'' as text) as const, cast(''ANM'' as text) as name
	union
	select cast(''STAFF_NURSE'' as text) as const, cast(''Staff Nurse'' as text) as name
	union
	select cast(''TBA'' as text) as const, cast(''TBA'' as text) as name
	union
	select cast(''NON_TBA'' as text) as const, cast(''Non-TBA'' as text) as name
)
select 
concat(mem.first_name,'' '',mem.middle_name,'' '',mem.last_name,'' ('',mem.unique_health_id,'')'') as "Member Name",
mem.family_id as "Family Id", 
case when mother.has_delivery_happened = true then ''Yes'' when mother.has_delivery_happened = false then ''No'' else null end as "Has delivery happened",
case when mother.date_of_delivery is not null then to_char(mother.date_of_delivery, ''DD/MM/YYYY HH:mm:ss'') else null end as "Date and time of delivery",
mother.type_of_delivery as "Type Of Delivery",
delivery_place.name as "Delivery Place",
delivery_done_by.name as "Delivery conducted By",
mother.delivery_person_name as "Delivery Person Name",
health_infra."name" as "Health Infrastructure", 
pregnancy_outcome.name as "Pregnancy Outcome",
case when mother.mother_alive = true then ''Yes'' when mother.mother_alive = false then ''No'' else null end as "Is Mother Alive",
case when mother.death_date is not null then to_char(mother.death_date, ''DD/MM/YYYY'') else null end as "Death Date", 
place_of_death.name as "Place Of Death",
death_reason.value as "Death Reason", 
mother.other_death_reason as "Other Death Reason",
case when mother.is_preterm_birth = true then ''Yes'' when mother.is_preterm_birth = false then ''No'' else null end as "Is Preterm Birth",
case when mother.cortico_steroid_given = true then ''Yes'' when  mother.cortico_steroid_given = false then ''No'' else null end as "Cortico Steroid Given",
case when mother.misoprostol_given = true then ''Yes'' when mother.misoprostol_given = false then ''No'' else null end as "Misoprostol Given",
case when mother.is_discharged = true then ''Yes'' when mother.is_discharged = false then ''No'' else null end as "Is Discharged",
case when mother.discharge_date is not null then to_char(mother.discharge_date, ''DD/MM/YYYY'') else null end as "Discharge Date",
case when mother.is_high_risk_case = true then ''Yes'' when mother.is_high_risk_case = false then ''No'' else null end as "Is High Risk Case", 
mother.mtp_done_at as "Mtp Done At",
mother.mtp_performed_by as "Mtp Performed By"
from rch_wpd_mother_master mother
inner join imt_member mem on mother.member_id = mem.id
left join health_infrastructure_details health_infra on mother.health_infrastructure_id = health_infra.id
left join const delivery_place on delivery_place.const = mother.delivery_place
left join const delivery_done_by on delivery_done_by.const = mother.delivery_done_by
left join const pregnancy_outcome on pregnancy_outcome.const = mother.pregnancy_outcome
left join const place_of_death on place_of_death.const = mother.place_of_death
left join listvalue_field_value_detail death_reason on cast(mother.death_reason as bigint) = death_reason.id
where mother.id = #visitId#',true,'ACTIVE',NULL,true,'8fb851ad-c951-488a-b5de-ef70352c70ef'),
	 (74841,'2020-03-24 12:33:29.039',409,'2020-03-25 21:23:53.275','covid19_dashboard_population_coverage_with_colors',NULL,'with location_ids as(
	select child_id from location_hierchy_closer_det where parent_id = 2 and depth = 2
),
result_set as (
    select 
	lch.parent_id as loc_id,
	sum(total_member) as memebr
    from idsp_location_wise_analytics idsp
	inner join location_hierchy_closer_det lch
	on lch.child_id = idsp.location_id
	and lch.parent_id in (select distinct child_id from location_ids)
	group by lch.parent_id
),
total_member as (
	select 
	SUM(fhs_total_member) as total_memebr, lch.parent_id as loc_id
	from location_wise_analytics lwa
	inner join location_hierchy_closer_det lch
	on lch.child_id = lwa.loc_id
	and lch.parent_id in (select distinct child_id from location_ids)
	group by lch.parent_id
), analytics as (
select 
	cast(location_master.english_name as text) as x_axis_label,
	coalesce(round(((memebr * 100.0) / NULLIF(total_member.total_memebr, 0)), 2), 0) as series_label
from location_ids 
inner join location_master on location_master.id = location_ids.child_id
left join total_member on total_member.loc_id = location_ids.child_id
left join result_set rs on rs.loc_id = location_ids.child_id
)

select x_axis_label,series_label,
case when series_label < 90 then ''Red'' when series_label between 90 and 95 then ''Yellow'' when series_label > 95 then ''Green'' end as color
 from analytics',true,'ACTIVE',NULL,NULL,'92d4fd42-a48d-4fed-a271-bbcc37ac6675'),
	 (74841,'2020-04-17 00:00:00',66522,'2020-04-20 12:29:46.631','state_of_health_covid_mild','offset,limit,location_id,health_infra_id,search_text','with analytics as(
select 
concat_ws(''/'', member_det, (case when caad.gender = ''F'' then ''F'' else ''M'' end), age, 
SUBSTRING(case when hid.name_in_english is null then hid.name else hid.name_in_english end from 1 for 10), 
case when mobidity != '''' then mobidity else  ''-'' end) as "primaryVal_Member Details",
m.unique_health_id as "uniqueHealthId",
caad.member_id as member_id,
m.family_id as family_id,
caad.contact_number as "primaryVal_mobile_Contact Number",
caad.address as "primaryVal_Address",
case when admission_date is not null then to_char(caad.admission_date,''DD/MM/YYYY'') else ''-'' end as "primaryVal_Admission Date",
case when last_lab_result_entry_on is not null then to_char(caad.last_lab_result_entry_on,''DD/MM/YYYY'') else ''-'' end as "Last Lab Test date",
health_state as "val_Current Status",
-- discharge_date as "val_Discharge Date",
case when death_date is not null then to_char(caad.death_date,''DD/MM/YYYY'') else null end as "val_Death Date",
case_no as  "val_Case No",
caad.location_id as loc_id
from covid19_admission_analytics_details caad
left join imt_member m on m.id = caad.member_id
left join health_infrastructure_details hid on hid.id = caad.health_infra_id
where case when ''#health_infra_id#'' != ''null'' then caad.health_infra_id = #health_infra_id# else 
caad.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#) end
and positive_member = 1 and cad_status not in (''DISCHARGE'',''DEATH'')   and health_state in (''Mild'',''Stable-Mild'')
and case when ''#search_text#'' = ''null'' then true else case when caad.search_text ilike ''%#search_text#%'' then true else false end end
order by caad.admission_id desc
limit #limit# offset #offset#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id 
	where family_head = true and 
        im.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'',''TEMPORARY'')
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName"
--case when a.is_any_illness_or_discomfort then ''Yes'' when a.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort"

from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join contact_person cp on cp.member_id = a.member_id',true,'ACTIVE',NULL,true,'097ffa36-37b1-453e-b568-b430adcac00c'),
	 (1,'2020-05-05 00:00:00',NULL,NULL,'insert_rch_location_hierarchy','locationId,rchCode,parentRchCode,ashaId,anmId,healthFacilityType,loggedInUserId','

    -- insert location hierarchy in anmol_location_mapping

    -- 1) get location hierarchy from anmol_location_master by recursive query

    with anmol_location_mapping_hierarchy as (
        select
        s.rch_code as state_code,
        d.rch_code as district_code,
        t.rch_code as taluka_code,
        hb.rch_code as health_block_code,
        f.rch_code as health_facility_code,
        sf.rch_code as health_subfacility_code,
        village.rch_code as village_code
        from anmol_location_master village
        left join anmol_location_master sf on village.parent_rch_code = sf.rch_code and sf.type = ''SF''
        left join anmol_location_master f on sf.parent_rch_code = f.rch_code and f.type in (''F'', ''FU'')
        left join anmol_location_master t on f.parent_rch_code = t.rch_code and t.type = ''T''
        left join anmol_location_master d on t.parent_rch_code = d.rch_code and d.type = ''D''
        left join anmol_location_master s on d.parent_rch_code = s.rch_code and s.type = ''S''
        left join anmol_location_master hb on hb.parent_rch_code = t.rch_code and hb.type = ''HB''
        where village.rch_code = ''#rchCode#'' and village.type = ''V''
    )

    -- 2) insert records with the given location hierarchy

    INSERT
    into
    anmol_location_mapping
    (district_code, taluka_code, village_code, health_facility_code, health_subfacility_code, health_block_code, health_facility_type, asha_id, anm_id, state_code, location_id, created_by, created_on, modified_by, modified_on)
    select
        (select district_code from anmol_location_mapping_hierarchy) as district_code,
        (select taluka_code from anmol_location_mapping_hierarchy) as taluka_code,
        (select village_code from anmol_location_mapping_hierarchy) as village_code,
        (cast((select health_facility_code from anmol_location_mapping_hierarchy) as numeric)) as health_facility_code,
        (cast((select health_subfacility_code from anmol_location_mapping_hierarchy) as numeric)) as health_subfacility_code,
        (cast((select health_block_code from anmol_location_mapping_hierarchy) as numeric)) as health_block_code,
        #healthFacilityType#,
        #ashaId#,
        #anmId#,
        (cast((select state_code from anmol_location_mapping_hierarchy) as numeric)) as state_code,
        lm.id,
        #loggedInUserId#,
        now(),
        #loggedInUserId#,
        now()
    from
        location_master lm where parent = #locationId# or id = #locationId#;

',false,'ACTIVE','Insert RCH Location Hierarchy',true,'9dec52d0-13cb-4aa5-8ab3-2ce454a1b5e8'),
	 (1,'2020-05-05 00:00:00',NULL,NULL,'retrieve_lower_level_not_available_rch_locations_count','id','
    select
    count(*) as "totalCount",
	count(case when lm.type = ''S'' then 1 else null end) as "stateCount",
	count(case when lm.type = ''D'' then 1 else null end) as "districtCount",
	count(case when lm.type = ''C'' then 1 else null end) as "corporationCount",
	count(case when lm.type = ''B'' then 1 else null end) as "blockCount",
	count(case when lm.type = ''Z'' then 1 else null end) as "zoneCount",
	count(case when lm.type = ''P'' then 1 else null end) as "phcCount",
	count(case when lm.type = ''U'' then 1 else null end) as "uphcCount",
	count(case when lm.type = ''SC'' then 1 else null end) as "subCenterCount",
	count(case when lm.type = ''ANM'' then 1 else null end) as "anmAreaCount",
	count(case when lm.type = ''V'' then 1 else null end) as "villageCount",
	count(case when lm.type = ''ANG'' then 1 else null end) as "anganwadiAreaCount",
	get_location_hierarchy(#id#) as "locationHierarchy"
    from location_master lm
    inner join location_type_master ltm on ltm.type = lm.type
    left join anmol_location_master alsm on
        alsm.rch_code = cast(lm.rch_code as text)
        and (
            case
			    when lm.type in (''S'') and alsm.type in (''S'') then true
                when lm.type in (''D'', ''C'') and alsm.type in (''D'') then true
                when lm.type in (''B'', ''Z'') and alsm.type in (''T'') then true
                when lm.type in (''P'') and alsm.type in (''F'') then true
                when lm.type in (''U'') and alsm.type in (''FU'') then true
                when lm.type in (''SC'', ''ANM'') and alsm.type in (''SF'') then true
                when lm.type in (''V'', ''ANG'') and alsm.type in (''V'') then true
                else false
            end
        )
    where
        lm.id in (select child_id from location_hierchy_closer_det where parent_id = #id# and child_id != #id# and child_loc_type in (''S'', ''D'', ''C'', ''B'', ''Z'', ''P'', ''U'', ''SC'', ''ANM'', ''V'', ''ANG''))
        and (alsm.id is null or (alsm.id is not null and cast((select rch_code from location_master where id = lm.parent) as text) != alsm.parent_rch_code))
',true,'ACTIVE','Retrieve Lower Level Not Available RCH Locations Count',true,'a2ff7ced-cba3-406c-8a2a-63518055731e'),
	 (69973,'2020-04-16 00:00:00',69973,'2020-04-16 00:00:00','covid19_lab_test_dashboard_distinct_ward_name','healthInfra,loggedInUserId','select id,ward_name
from health_infrastructure_ward_details
where case when ''#healthInfra#'' != ''null'' then health_infra_id = (select id from health_infrastructure_details where name_in_english = ''#healthInfra#'')
	else health_infra_id in (select health_infrastrucutre_id from user_health_infrastructure where user_id = ''#loggedInUserId#'' and state = ''ACTIVE'') end
and status = ''ACTIVE''',true,'ACTIVE',NULL,true,'9b32c2cc-264b-4934-888b-3a54ac3fbfaa'),
	 (74841,'2020-03-29 22:02:56.371',74841,'2020-03-29 22:33:08.31','insert_covid19_admitted_case_daily_status','member_id,loggedIn_user,ward_no,bed_no,health_status,admission_id,location_id','insert into covid19_admitted_case_daily_status(
member_id, 
location_id, 
admission_id,
service_date,
ward_id,
bed_no,
health_status,
on_ventilator,
ventilator_type1,
ventilator_type2,
on_o2,
remarks,
created_by,
created_on
)
values (
	#member_id#,
	#location_id#,
	#admission_id#,
	null,
	#ward_no#,
	#bed_no#,
	''#health_status#'',
        null,
	null,
	null,
	null,
	null,
	#loggedIn_user#,now()	
)
returning id;',true,'ACTIVE',NULL,NULL,'83f05a33-9f9a-403b-8558-f9a0369b284a'),
	 (1,'2020-03-22 00:00:00',NULL,NULL,'opd_search_by_location_id','offSet,locationId,limit','
   select
   imt_member.unique_health_id as "uniqueHealthId",
   imt_member.id as "memberId",
   imt_family.family_id as "familyId",
   imt_family.location_id as "locationId",
   imt_member.mobile_number as "mobileNumber",
   get_location_hierarchy(imt_family.location_id) as "locationHierarchy",
   concat(imt_member.first_name, '' '', imt_member.middle_name, '' '', imt_member.last_name) as "name",
   imt_member.dob as "dob",
   cast(age(imt_member.dob) as text) as "age",
   concat(uu1.first_name, '' '', uu1.middle_name, '' '', uu1.last_name) as "ashaName",
   uu1.contact_number as "ashaContactNumber",
   uu1.techo_phone_number as "ashaTechoContactNumber",
   concat(uu2.first_name, '' '', uu2.middle_name, '' '', uu2.last_name) as "anmName",
   uu2.contact_number as "anmContactNumber",
   uu2.techo_phone_number as "anmTechoContactNumber"
   from imt_member
   inner join imt_family on imt_member.family_id = imt_family.family_id
   left join um_user_location uul1 on uul1.loc_id = imt_family.area_id and uul1.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul1.user_id and state = ''ACTIVE'') = 24
   left join um_user uu1 on uu1.id = uul1.user_id
   left join um_user_location uul2 on uul2.loc_id = imt_family.location_id and uul2.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul2.user_id and state = ''ACTIVE'') = 30
   left join um_user uu2 on uu2.id = uul2.user_id
   where imt_family.location_id in (select child_id from location_hierchy_closer_det where parent_id = #locationId#)
   and imt_member.basic_state in (''NEW'', ''VERIFIED'', ''REVERIFICATION'', ''TEMPORARY'')
   limit #limit# offset #offSet#
',true,'ACTIVE','OPD Search By Location ID',true,'08479551-7777-4319-98d2-cbbbe5df8c94'),
	 (74909,'2020-03-22 21:47:14.684',74909,'2020-03-22 21:50:34.893','delete_travel_history_by_id','travelId','delete from covid_case_travel_history where id = #travelId#',false,'ACTIVE',NULL,NULL,'b308ab32-3335-4836-9770-765dba7d7683'),
	 (74841,'2020-04-17 00:00:00',66522,'2020-04-20 12:30:35.426','state_of_health_covid_asymptomatic','offset,limit,location_id,health_infra_id,search_text','with analytics as(
select 
concat_ws(''/'', member_det, (case when caad.gender = ''F'' then ''F'' else ''M'' end), age, 
SUBSTRING(case when hid.name_in_english is null then hid.name else hid.name_in_english end from 1 for 10), 
case when mobidity != '''' then mobidity else  ''-'' end) as "primaryVal_Member Details",
m.unique_health_id as "uniqueHealthId",
caad.member_id as member_id,
m.family_id as family_id,
caad.contact_number as "primaryVal_mobile_Contact Number",
caad.address as "primaryVal_Address",
case when admission_date is not null then to_char(caad.admission_date,''DD/MM/YYYY'') else ''-'' end as "primaryVal_Admission Date",
case when last_lab_result_entry_on is not null then to_char(caad.last_lab_result_entry_on,''DD/MM/YYYY'') else ''-'' end as "Last Lab Test date",
health_state as "val_Current Status",
-- discharge_date as "val_Discharge Date",
-- case when death_date is not null then to_char(caad.death_date,''DD/MM/YYYY'') else null end as "val_Death Date"
case_no as  "val_Case No",
caad.location_id as loc_id
from covid19_admission_analytics_details caad
left join imt_member m on m.id = caad.member_id
left join health_infrastructure_details hid on hid.id = caad.health_infra_id
where case when ''#health_infra_id#'' != ''null'' then caad.health_infra_id = #health_infra_id# else 
caad.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#) end 
and positive_member = 1 and cad_status not in (''DISCHARGE'',''DEATH'')   and health_state = ''Asymptomatic''
and case when ''#search_text#'' = ''null'' then true else case when caad.search_text ilike ''%#search_text#%'' then true else false end end
order by caad.admission_id desc
limit #limit# offset #offset#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id 
	where family_head = true and 
        im.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'',''TEMPORARY'')
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName"
--case when a.is_any_illness_or_discomfort then ''Yes'' when a.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort"

from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join contact_person cp on cp.member_id = a.member_id',true,'ACTIVE',NULL,true,'aef32f26-9f50-4ebf-bda8-52535a9568a0'),
	 (409,'2020-03-22 12:09:29.659',409,'2020-03-22 21:53:56.843','covid19_get_pending_contact_tracing_detail','loggedInUserId','select cch.id,cch.person_name as name,cch.age,cch.gender,cch.contact_no,cch.address,cch.health_state as state,cch.level
,cch.location_id as "locationId",get_location_hierarchy(cch.location_id) as "location"
from covid_case_contact_history cch,location_hierchy_closer_det llh
where state = ''PENDING'' 
and cch.location_id = llh.child_id 
and llh.parent_id in (select loc_id from um_user_location where user_id = #loggedInUserId# and state = ''ACTIVE'')
order by state desc,level',true,'ACTIVE',NULL,NULL,'034f4b71-ffde-4907-90b7-e86cf968b162'),
	 (1,'2020-03-31 13:00:12.622',57698,'2020-04-10 17:00:57.092','covid_heat_map_data',NULL,'--select lat as "latitude",long as "longitude",
--count(*) as weight from covid_positive_case_info 
--where lat is not null and long is not null
--group by lat,long

select address_lat as "latitude", address_lng as "longitude",count(*) as weight from covid19_admission_detail cad,	
covid19_admission_analytics_details caa where cad.id = caa.admission_id and caa.positive_member = 1 
group by cad.address_lat,cad.address_lng',true,'ACTIVE',NULL,true,'1dee0971-a98a-47b1-b67a-af5a4aabd2ab'),
	 (57698,'2020-04-01 00:00:00',57698,'2020-04-01 00:00:00','idsp_heat_map_int_trav',NULL,'select latitude,longitude,
count(*) as weight from idsp_screening_heat_map_analytics
where type = ''INTERNATIONAL'' and latitude is not null and longitude is not null
group by latitude,longitude',true,'ACTIVE',NULL,true,'bfee09e9-7db4-4878-a289-cf397240456e'),
	 (57698,'2020-04-01 00:00:00',57698,'2020-04-01 00:00:00','idsp_heat_map_no_trav',NULL,'select latitude,longitude,
count(*) as weight from idsp_screening_heat_map_analytics
where type = ''NO_TRAVEL'' and latitude is not null and longitude is not null
group by latitude,longitude',true,'ACTIVE',NULL,true,'b63da17f-a0b3-47f8-be79-90ad25150042'),
	 (74841,'2020-04-07 17:32:49.598',74841,'2020-04-08 14:48:49.04','soh_covid19_marker_data',NULL,'with marker_date as (
	select TO_TIMESTAMP(sc.key_value, ''YYYY-MM-DD HH24:MI:SS'') as last_marker_date from system_configuration sc where sc.system_key = ''COVID19_LAST_MARKET_DATE''
), total_test as (
 select 
 count(1) filter (where cltd.result_server_date <= marker_date.last_marker_date) as marker_tested,
 count(1) filter (where cltd.result_server_date > marker_date.last_marker_date) as new_tested
 from covid19_lab_test_detail cltd 
 inner join marker_date on true
), filter_data as (
select 
count(1) filter (where positive_member = 1 and system_postive_date <= marker_date.last_marker_date) as marker_positive,
count(1) filter (where positive_member = 1 and system_postive_date > marker_date.last_marker_date) as new_positive,
count(1) filter (where positive_member = 1 and cad_status = ''DEATH'' and system_discharge_date <= marker_date.last_marker_date) as marker_dead,
count(1) filter (where positive_member = 1 and cad_status = ''DEATH'' and system_discharge_date > marker_date.last_marker_date) as new_dead,
count(1) filter (where positive_member = 1 and cad_status = ''DISCHARGE'' and system_discharge_date <= marker_date.last_marker_date ) as marker_discharge,
count(1) filter (where positive_member = 1 and cad_status = ''DISCHARGE'' and system_discharge_date > marker_date.last_marker_date ) as new_discharge
from 
covid19_admission_analytics_details 
inner join marker_date on true)
select total_test.*,filter_data.* from total_test inner join filter_data on true',true,'ACTIVE',NULL,NULL,'5d4c23c0-189b-4c20-8124-13895e7c5424'),
	 (60512,'2020-04-16 00:00:00',60512,'2020-04-16 00:00:00','covid19_lab_test_dashboard_distinct_health_infra_result','loggedInUserId','with ids as (
	select
	Distinct ltd.sample_health_infra as id
	from covid19_lab_test_detail ltd
	where
	(((select role_id from um_user where id = #loggedInUserId#) in (59,25,96))
	or ltd.sample_health_infra_send_to = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = ''#loggedInUserId#'' and uhi.state = ''ACTIVE'')
	) and ltd.lab_collection_status = ''SAMPLE_ACCEPTED''
)
select name_in_english from health_infrastructure_details where id in (select id from ids)',true,'ACTIVE',NULL,true,'50f75248-5ddf-461a-b5a9-9e3f32fdfd81'),
	 (60512,'2020-03-25 00:00:00',60512,'2020-05-26 20:01:28.583','retrieve_locations_by_type','type','select * from location_master where type in (#type#) order by name',true,'ACTIVE',NULL,true,'5fe37cfd-36df-4e16-932d-db1c44b7fdc1'),
	 (74841,'2020-03-24 12:23:06.212',74841,'2020-03-24 12:23:06.212','covid19_dashboard_person_wiith_ho_symptoms_travel',NULL,'with location_ids as(
	select child_id from location_hierchy_closer_det where parent_id = 2 and depth = 0
),
result_set as (
    select 
	lch.parent_id as loc_id,
    sum(member_having_illness_or_discomfart) as illness,
    sum(member_having_cough) as cough,
    sum(member_haivng_fever) as fever,
    sum(member_with_traveled) as is_traveled,
    sum(member_haivng_breathlessness) as breathlessness,
    sum(member_haivng_all_three) as all_three,
    sum(member_with_travel_and_symptoms_local) as member_with_travel_and_symptoms_local,
	sum(member_with_travel_and_symptoms_out_of_country) as member_with_travel_and_symptoms_out_of_country
    from idsp_location_wise_analytics idsp
	inner join location_hierchy_closer_det lch
	on lch.child_id = idsp.location_id
	and lch.parent_id in (select distinct child_id from location_ids)
	group by lch.parent_id
)
select 
	coalesce(fever, 0) as "Person with Fever",
	coalesce(cough, 0) as "Person with Cough",
	coalesce(breathlessness, 0) as "Person with Breathlessness",
	coalesce(all_three, 0) as "Person with all symptoms",
	coalesce(is_traveled, 0) as "Person with positive travel history",
	coalesce(member_with_travel_and_symptoms_local, 0) as "Person with Local positive travel history + symptoms",
	coalesce(member_with_travel_and_symptoms_out_of_country, 0) as "Person with International positive travel history + symptoms"
from location_ids
inner join location_master on location_master.id = location_ids.child_id
left join result_set rs on rs.loc_id = location_ids.child_id',true,'ACTIVE',NULL,NULL,'b37fe2ef-e6ae-4a63-a53e-9875e0702ce3'),
	 (74841,'2020-04-11 00:00:00',74841,'2020-04-12 17:57:39.424','soh_covid19_death_member_list',NULL,'with marker_date as (
	select TO_TIMESTAMP(sc.key_value, ''YYYY-MM-DD HH24:MI:SS'') as last_marker_date from system_configuration sc where sc.system_key = ''COVID19_LAST_MARKET_DATE''
)
select
member_det as "name",
age as "age",
case when gender = ''F'' then ''Female'' else ''Male'' end as "gender",
case when hid.name_in_english is null then hid.name else hid.name_in_english end as "facility",
im.english_name as "area",
case when dob is null then ''-'' else to_char(dob,''DD-MM-YYYY'') end as "dob",
caad.address as address ,
case when caad.discharge_date is not null then to_char(caad.discharge_date,''DD/MM/YYYY'') else ''-'' end as "dod",
caad.mobidity as "morbidities"
from covid19_admission_analytics_details caad
left join location_master im on im.id = caad.location_id
left join health_infrastructure_details hid on hid.id = caad.health_infra_id
where positive_member = 1 and cad_status = ''DEATH''
and system_discharge_date > (select last_marker_date from marker_date)',true,'ACTIVE',NULL,true,'886571da-1a91-4e42-85bc-f9b370b69e76'),
	 (74841,'2020-03-24 12:17:44.411',74841,'2020-03-24 13:06:45.875','covid19_dashboard_population_coverage_per',NULL,'with location_ids as(
select child_id from location_hierchy_closer_det where parent_id = 2 and depth = 2
),
result_set as (
   select
lch.parent_id as loc_id,
sum(total_member) as memebr
   from idsp_location_wise_analytics idsp
inner join location_hierchy_closer_det lch
on lch.child_id = idsp.location_id
and lch.parent_id in (select distinct child_id from location_ids)
group by lch.parent_id
),
total_member as (
select
SUM(fhs_total_member) as total_memebr, lch.parent_id as loc_id
from location_wise_analytics lwa
inner join location_hierchy_closer_det lch
on lch.child_id = lwa.loc_id
and lch.parent_id in (select distinct child_id from location_ids)
group by lch.parent_id
)
select
cast(''% of population cover'' as text) as x_axis_label,
cast(location_master.english_name as text) as label,
coalesce(round(((memebr * 100.0) / NULLIF(total_member.total_memebr, 0)), 2), 0) as series_label
from location_ids
inner join location_master on location_master.id = location_ids.child_id
left join total_member on total_member.loc_id = location_ids.child_id
left join result_set rs on rs.loc_id = location_ids.child_id
order by location_master.english_name',true,'ACTIVE',NULL,NULL,'9f9f837f-d9e5-4ca1-9a0b-0d312c413273'),
	 (1,'2020-03-26 00:00:00',NULL,NULL,'fetch_listvalue_detail_by_ids','ids','
    select
    *
    from listvalue_field_value_detail lvfvd
    where id in (#ids#);
',true,'ACTIVE','Fetch List Value Details by IDs',true,'b46425c1-69b5-44d9-9654-416156a9e196'),
	 (1,'2020-03-31 00:00:00',NULL,NULL,'get_health_infrastructure_ward_details','healthInfraId','
    select
    id as "id",
    health_infra_id as "healthInfraId",
    ward_name as "wardName",
    ward_type as "wardType",
    number_of_beds as "numberOfBeds",
    number_of_ventilators_type1 as "numberOfVentilatorsType1",
    number_of_vantilators_type2 as "numberOfVentilatorsType2",
    number_of_o2 as "numberOfO2",
    status as "status",
    created_by as "createdBy",
    created_on as "createdOn",
    modified_by as "modifiedBy",
    modified_on as "modifiedOn"
    from
    health_infrastructure_ward_details
    WHERE health_infra_id = #healthInfraId#
',true,'ACTIVE','Fetch Health Infrastructure Ward Details',true,'3030b453-a64d-4be6-a259-c7bfb7e7b2be'),
	 (66522,'2020-03-26 14:55:33.942',74841,'2020-03-27 11:56:04.515','state_of_health_idsp_travel_all_sym','fromDate,toDate,limit,location_id','with analytics as(
select m.unique_health_id as "uniqueHealthId",
idsp.member_id as member_id,
--case when idsp.is_any_illness_or_discomfort then ''Yes'' when idsp.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort",
case when idsp.is_fever = 1 then ''Yes'' when idsp.is_fever = 0 then ''No'' else ''-'' end as "val_Has Fever",
case when idsp.is_cough = 1 then ''Yes'' when idsp.is_cough = 0 then ''No'' else ''-'' end as "val_Has Cough",
case when idsp.is_breathlessness = 1 then ''Yes'' when idsp.is_breathlessness = 0 then ''No'' else ''-'' end as "val_Has Breathing Difficulty",

m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
--to_char(idsp.service_date, ''DD-MM-YYYY'')as service_date,
idsp.location_id as loc_id
from idsp_screening_analytics idsp,imt_member m
where idsp.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
--and idsp.service_date between ''#fromDate#'' and ''#toDate#''
and (idsp.is_fever + idsp.is_cough + idsp.is_breathlessness ) = 3
and (idsp.has_travel >= 1)
and m.id = idsp.member_id 
limit #limit#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id 
	where family_head = true and 
        im.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'',''TEMPORARY'')
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select distinct t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
	inner join anmLocation a on  uld.loc_id = a.location_id
	inner join um_user uu on uu.id = uld.user_id 
where 
uld.state = ''ACTIVE'' and uu.state=''ACTIVE'' and
uu.role_id in (select id from um_role_master where code =''FHW'' )
	group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo"
--case when a.is_any_illness_or_discomfort then ''Yes'' when a.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort"

from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id',true,'ACTIVE',NULL,NULL,'450fac92-abc8-4f66-8661-438c8b87c3e7'),
	 (66522,'2020-04-13 00:00:00',66522,'2020-04-13 00:00:00','soh_covid19_recover_member_list',NULL,'with marker_date as (
	select TO_TIMESTAMP(sc.key_value, ''YYYY-MM-DD HH24:MI:SS'') as last_marker_date from system_configuration sc where sc.system_key = ''COVID19_LAST_MARKET_DATE''
)
select
member_det as "name",
age as "age",
case when gender = ''F'' then ''Female'' else ''Male'' end as "gender",
case when hid.name_in_english is null then hid.name else hid.name_in_english end as "facility",
im.english_name as "area",
case when dob is null then ''-'' else to_char(dob,''DD-MM-YYYY'') end as "dob",
caad.address as address ,
case when caad.discharge_date is not null then to_char(caad.discharge_date,''DD/MM/YYYY'') else ''-'' end as "dod",
caad.mobidity as "morbidities"
from covid19_admission_analytics_details caad
left join location_master im on im.id = caad.location_id
left join health_infrastructure_details hid on hid.id = caad.health_infra_id
where positive_member = 1 and cad_status = ''DISCHARGE''
and system_discharge_date > (select last_marker_date from marker_date)',true,'ACTIVE',NULL,true,'2519c1d4-3b5c-42df-a75c-4697d6c41c68'),
	 (66522,'2020-03-26 15:23:23.299',74841,'2020-03-27 11:59:01.294','state_of_health_idsp_travel_any_sym','fromDate,toDate,limit,location_id','with analytics as(
select m.unique_health_id as "uniqueHealthId",
idsp.member_id as member_id,
--case when idsp.is_any_illness_or_discomfort then ''Yes'' when idsp.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort",
case when idsp.is_fever = 1 then ''Yes'' when idsp.is_fever = 0 then ''No'' else ''-'' end as "val_Has Fever",
case when idsp.is_cough = 1 then ''Yes'' when idsp.is_cough = 0 then ''No'' else ''-'' end as "val_Has Cough",
case when idsp.is_breathlessness = 1 then ''Yes'' when idsp.is_breathlessness = 0 then ''No'' else ''-'' end as "val_Has Breathing Difficulty",

m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
--to_char(idsp.service_date, ''DD-MM-YYYY'')as service_date,
idsp.location_id as loc_id
from idsp_screening_analytics idsp,imt_member m
where idsp.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
--and idsp.service_date between ''#fromDate#'' and ''#toDate#''
and (idsp.is_fever + idsp.is_cough + idsp.is_breathlessness ) >= 2
and (idsp.has_travel >= 1)
and m.id = idsp.member_id 
limit #limit#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id 
	where family_head = true and 
        im.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'',''TEMPORARY'')
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select distinct t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
	inner join anmLocation a on  uld.loc_id = a.location_id
	inner join um_user uu on uu.id = uld.user_id 
where 
uld.state = ''ACTIVE'' and uu.state=''ACTIVE'' and
uu.role_id in (select id from um_role_master where code =''FHW'' )
	group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo"
--case when a.is_any_illness_or_discomfort then ''Yes'' when a.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort"

from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id',true,'ACTIVE',NULL,NULL,'02f40095-8a20-4cc9-8305-f3cf234ef599'),
	 (66522,'2020-04-15 19:04:04.626',66522,'2020-04-15 19:04:04.626','soh_idsp2_member_line_list','offset,limit,location_id','with analytics as(
select m.unique_health_id as "uniqueHealthId",
idsp.member_id as member_id,
case when idsp.symptoms ilike ''%FEVER%'' then ''Yes'' else ''No''  end as "val_Has Fever",
case when idsp.symptoms ilike ''%COUGH%'' then ''Yes'' else ''No'' end as "val_Has Cough",
case when idsp.symptoms ilike ''%BREATHING_DIFFICULTY%'' then ''Yes'' else ''No'' end as "val_Has Breathing Difficulty",
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
case when idsp.country = 0 then ''Domestic'' 
when idsp.country > 0 then ''International''
else ''-'' end as "val_Travel Type",
--to_char(idsp.service_date, ''DD-MM-YYYY'')as service_date,
idsp.location_id as loc_id
from idsp_2_member_screening_details idsp
inner join imt_member m on m.id = idsp.member_id
where idsp.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and idsp.service_date = current_date
and (idsp.symptoms ilike ''%FEVER%'' OR idsp.symptoms ilike ''%COUGH%'' or idsp.symptoms ilike ''%BREATHING_DIFFICULTY%'')
order by idsp.member_id
limit #limit# offset #offset#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id 
	where family_head = true and 
        im.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'',''TEMPORARY'')
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select distinct t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
	inner join anmLocation a on  uld.loc_id = a.location_id
	inner join um_user uu on uu.id = uld.user_id 
where 
uld.state = ''ACTIVE'' and uu.state=''ACTIVE'' and
uu.role_id in (select id from um_role_master where code =''FHW'' )
	group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo"
--case when a.is_any_illness_or_discomfort then ''Yes'' when a.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort"

from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id',true,'ACTIVE',NULL,NULL,'a63ce224-0fe6-425f-a115-5e54c6ed87f3'),
	 (80208,'2020-03-26 11:20:23.898',80208,'2020-03-27 00:24:20.1254','dr_techo_get_location_by_parent_id_and_type','types,parent_id','select lm.english_name as "name" , lm.id as "locationId"
from location_hierchy_closer_det lhcd 
inner join location_master lm on lm.id = lhcd.child_id 
where  lm."type" in (#types#) and lm.state = ''ACTIVE'' and (#parent_id# is null or parent_id = #parent_id# ) group by lm.id ;',true,'ACTIVE',NULL,true,'afdb89bd-cc87-4bca-9626-1e3a2e5b1cf9'),
	 (66522,'2020-03-26 17:03:25.089',74841,'2020-03-27 12:02:17.964','state_of_health_idsp_non_travel_any_sym','fromDate,toDate,limit,location_id','with analytics as(
select m.unique_health_id as "uniqueHealthId",
idsp.member_id as member_id,
--case when idsp.is_any_illness_or_discomfort then ''Yes'' when idsp.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort",
case when idsp.is_fever = 1 then ''Yes'' when idsp.is_fever = 0 then ''No'' else ''-'' end as "val_Has Fever",
case when idsp.is_cough = 1 then ''Yes'' when idsp.is_cough = 0 then ''No'' else ''-'' end as "val_Has Cough",
case when idsp.is_breathlessness = 1 then ''Yes'' when idsp.is_breathlessness = 0 then ''No'' else ''-'' end as "val_Has Breathing Difficulty",

m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
--to_char(idsp.service_date, ''DD-MM-YYYY'')as service_date,
idsp.location_id as loc_id
from idsp_screening_analytics idsp,imt_member m
where idsp.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
--and idsp.service_date between ''#fromDate#'' and ''#toDate#''
and (idsp.is_fever + idsp.is_cough + idsp.is_breathlessness ) >= 2
and (idsp.has_travel = 0)
and m.id = idsp.member_id 
limit #limit#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id 
	where family_head = true and 
        im.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'',''TEMPORARY'')
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select distinct t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
	inner join anmLocation a on  uld.loc_id = a.location_id
	inner join um_user uu on uu.id = uld.user_id 
where 
uld.state = ''ACTIVE'' and uu.state=''ACTIVE'' and
uu.role_id in (select id from um_role_master where code =''FHW'' )
	group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo"
--case when a.is_any_illness_or_discomfort then ''Yes'' when a.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort"

from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id',true,'ACTIVE',NULL,NULL,'c0b36fa4-6948-4d21-b238-ab66b7443b39'),
	 (66522,'2020-03-26 17:02:52.942',74841,'2020-03-27 12:00:33.347','state_of_health_idsp_non_travel_all_sym','fromDate,toDate,limit,location_id','with analytics as(
select m.unique_health_id as "uniqueHealthId",
idsp.member_id as member_id,
--case when idsp.is_any_illness_or_discomfort then ''Yes'' when idsp.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort",
case when idsp.is_fever = 1 then ''Yes'' when idsp.is_fever = 0 then ''No'' else ''-'' end as "val_Has Fever",
case when idsp.is_cough = 1 then ''Yes'' when idsp.is_cough = 0 then ''No'' else ''-'' end as "val_Has Cough",
case when idsp.is_breathlessness = 1 then ''Yes'' when idsp.is_breathlessness = 0 then ''No'' else ''-'' end as "val_Has Breathing Difficulty",

m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
--to_char(idsp.service_date, ''DD-MM-YYYY'')as service_date,
idsp.location_id as loc_id
from idsp_screening_analytics idsp,imt_member m
where idsp.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
--and idsp.service_date between ''#fromDate#'' and ''#toDate#''
and (idsp.is_fever + idsp.is_cough + idsp.is_breathlessness ) = 3
and (idsp.has_travel = 0)
and m.id = idsp.member_id 
limit #limit#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id 
	where family_head = true and 
        im.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'',''TEMPORARY'')
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select distinct t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
	inner join anmLocation a on  uld.loc_id = a.location_id
	inner join um_user uu on uu.id = uld.user_id 
where 
uld.state = ''ACTIVE'' and uu.state=''ACTIVE'' and
uu.role_id in (select id from um_role_master where code =''FHW'' )
	group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo"
--case when a.is_any_illness_or_discomfort then ''Yes'' when a.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort"

from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id',true,'ACTIVE',NULL,NULL,'c78bb4b9-5f60-4286-a14a-55324ae49f0a'),
	 (60512,'2021-06-10 00:00:00',60512,'2021-06-10 00:00:00','retrieve_all_lab_test_by_health_infra','healthInfrastructureId,healthInfrastructureType','select id as "labTestId",
name as "labTestName"
from rch_opd_lab_test_master
where (
	id in (
		select ref_id
		from health_infrastructure_lab_test_mapping
		where (
			(health_infra_id = #healthInfrastructureId# or health_infra_type = #healthInfrastructureType#)
			and permission_type = ''OPD_LAB_TEST''
		)
	)
	or
	category in (
		select ref_id
		from health_infrastructure_lab_test_mapping
		where (
			(health_infra_id = #healthInfrastructureId# or health_infra_type = #healthInfrastructureType#)
			and permission_type = ''OPD_CATEGORY''
		)
	)
)
and is_active',true,'ACTIVE',NULL,true,'2dd2ac5b-abc4-4e0b-8433-da2537482c65'),
	 (74841,'2020-03-28 17:08:18.847',74841,'2020-03-28 20:18:36.798','state_of_health_idsp_travel_any_sym_new','fromDate,toDate,limit,location_id','with analytics as(
select m.unique_health_id as "uniqueHealthId",
idsp.member_id as member_id,
--case when idsp.is_any_illness_or_discomfort then ''Yes'' when idsp.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort",
case when idsp.is_fever = 1 then ''Yes'' when idsp.is_fever = 0 then ''No'' else ''-'' end as "val_Has Fever",
case when idsp.is_cough = 1 then ''Yes'' when idsp.is_cough = 0 then ''No'' else ''-'' end as "val_Has Cough",
case when idsp.is_breathlessness = 1 then ''Yes'' when idsp.is_breathlessness = 0 then ''No'' else ''-'' end as "val_Has Breathing Difficulty",

m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
case when idsp.has_travel = 1 then ''Domestic'' 
when idsp.has_travel = 2 then ''International''
else ''-'' end as "val_Travel Type", 
case when idsp.has_travel >= 1 and cti.id is not null 
then cti.country else ''-'' end as "val_Place Of Travel Origin",
case when idsp.has_travel >= 1 and cti.id is not null
and cti.date_of_departure is not null 
 then concat(to_char(date_of_departure, ''DD/MM/YYYY''),'' ('', extract(day from (now() - date_of_departure)), '' days)'') else ''-'' end as "val_Date Of Travel",
case when idsp.has_travel >= 1 and cti.tracking_start_date is not null then ''Yes'' else ''No'' end as "val_Daily Tracking Started",
--to_char(idsp.service_date, ''DD-MM-YYYY'')as service_date,
idsp.location_id as loc_id
from idsp_screening_analytics idsp
inner join imt_member m on m.id = idsp.member_id 
left join covid_travellers_info cti on cti.id = idsp.covid_traveller_info_id
where idsp.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
--and idsp.service_date between ''#fromDate#'' and ''#toDate#''
and (idsp.is_fever + idsp.is_cough + idsp.is_breathlessness ) >=1
limit #limit#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id 
	where family_head = true and 
        im.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'',''TEMPORARY'')
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
	
),

asha as (
	select distinct t.member_id
	,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
	u.contact_number as ashaMobileNo
	from (
	select member_id,max(uld.user_id) as user_id
	from um_user_location uld 
	inner join analytics a on  uld.loc_id = a.loc_id
	inner join um_user uu on uu.id = uld.user_id 
	where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
	and uu.role_id in (select id from um_role_master where code =''ASHA'' )
	group by member_id) as t,um_user u
	where t.user_id = u.id
	
),
anmLocation as (
	select parent_id as location_id,a.member_id from location_hierchy_closer_det 
	lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
	select max(uu.id) as anm_member_id, a.member_id,a.location_id from um_user_location uld 
	inner join anmLocation a on  uld.loc_id = a.location_id
	inner join um_user uu on uu.id = uld.user_id 
where 
uld.state = ''ACTIVE'' and uu.state=''ACTIVE'' and
uu.role_id in (select id from um_role_master where code =''FHW'' )
	group by a.location_id,a.member_id
),
anmName as (
	select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
	uu.contact_number as ANMMobileNo

	FROM um_user uu inner join anm a on a.anm_member_id=uu.id
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo"
--case when a.is_any_illness_or_discomfort then ''Yes'' when a.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort"

from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id',true,'ACTIVE',NULL,NULL,'a609f4d6-fd2e-4215-97dd-05b424fa58aa'),
	 (60512,'2020-04-16 00:00:00',60512,'2020-04-16 00:00:00','covid19_lab_test_pending_sample_receive_all','searchText,healthInfra,loggedInUserId,wardId,collectionDate','with idsp_screening as (
select
	clt.id as "id",
	ltd.id as lab_id,
	ltd.lab_collection_on as collection_date,
	ltd.sample_health_infra_send_to as health_infra_to,
	ltd.is_transferred as is_transferred,
	clt.location_id as loc_id,
	imt_member.id as member_id,
	case when clt.member_id is null
		then concat_ws('' '',clt.first_name,clt.middle_name,clt.last_name)
		else concat(concat_ws('' '',imt_member.first_name,imt_member.middle_name,imt_member.last_name)
			, '' ('' , imt_member.unique_health_id , '')'' , ''<br>'' , imt_member.family_id) end as member_det,
	concat(case when clt.member_id is null
		then cast(clt.age as text)
		else cast(EXTRACT(YEAR FROM age(imt_member.dob)) as text) end,'' Year'') as age,
	to_char(clt.admission_date,''DD/MM/YYYY'') as admission_date,
	hiwd.ward_name,
	sample_from."name" as sample_from_health_infra,
	sample_from.is_covid_lab,
	clt.current_ward_id as ward_id,
	cacd.on_ventilator as on_ventilator,
	cacd.ventilator_type1 as ventilator_type1,
	cacd.ventilator_type2 as ventilator_type2,
	cacd.on_o2 as on_o2,
	cacd.on_air as on_air,
	cacd.remarks as remarks,
	clt.is_hiv as hiv,
	clt.current_bed_no,
	cacd.health_status as health_status,
	cacd.service_date as last_check_up_time
	from covid19_lab_test_detail ltd
	inner join covid19_admission_detail clt on ltd.covid_admission_detail_id = clt.id
	left join health_infrastructure_ward_details hiwd on hiwd.id = clt.current_ward_id
	left join covid19_admitted_case_daily_status cacd on cacd.id = clt.last_check_up_detail_id
	left join health_infrastructure_details sample_from on sample_from.id = ltd.sample_health_infra
	left join imt_member on clt.member_id = imt_member.id
	left join imt_family on imt_member.family_id = imt_family.family_id
	where
	ltd.sample_health_infra_send_to = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = ''#loggedInUserId#'' and uhi.state = ''ACTIVE'')
	and clt.status not in (''DISCHARGED'',''DEAD'',''REFER'') and ltd.lab_collection_status = ''SAMPLE_COLLECTED''
	and case when ''#searchText#'' != ''null'' and ''#searchText#'' != '''' then ltd.search_text ilike ''%#searchText#%'' else true end
	and case when ''#healthInfra#'' != ''null'' and ''#healthInfra#'' != '''' then sample_from.name_in_english ilike ''%#healthInfra#%'' else true end
	and case when ''#collectionDate#'' != ''null'' and ''#collectionDate#'' != '''' then to_char(ltd.lab_collection_on,''DD/MM/YYYY'') ilike ''%#collectionDate#%'' else true end
    and case when ''#wardId#'' != ''null'' and ''#wardId#'' != '''' then hiwd.ward_name = ''#wardId#'' else true end
	order by ltd.lab_collection_on
)
select
id as "admissionId"
,lab_id as "labCollectionId"
,collection_date as "sampleCollectionDate"
,health_infra_to as "healthInfraTo"
,is_transferred as "isTransferred"
,member_id as "memberId"
,loc_id as "locationId"
,member_det as "memberDetail"
,age as "age"
,admission_date as "admissionDate"
,ward_name as "wardName"
,ward_id as "wardId"
,current_bed_no as "bedNumber"
,health_status as "healthStatus"
,to_char(last_check_up_time,''DD/MM/YYYY'') as "lastCheckUpTime"
,on_ventilator
,ventilator_type1
,ventilator_type2
,on_o2
,on_air
,remarks
,hiv
,sample_from_health_infra as "sampleFrom"
,is_covid_lab as "isSameHealthInfrastructure"
from idsp_screening;',true,'ACTIVE',NULL,true,'69cf03e3-d45b-4a85-93fc-830f2f6aa9f8'),
	 (60512,'2020-04-16 00:00:00',60512,'2020-04-16 00:00:00','covid19_lab_test_dashboard_distinct_health_infra_sample_receive','loggedInUserId','with ids as (
	select
	Distinct ltd.sample_health_infra as id
	from covid19_lab_test_detail ltd
	where
	(((select role_id from um_user where id = #loggedInUserId#) in (59,25,96))
	or ltd.sample_health_infra_send_to = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = ''#loggedInUserId#'' and uhi.state = ''ACTIVE'')
	) and ltd.lab_collection_status = ''SAMPLE_COLLECTED''
)
select name_in_english from health_infrastructure_details where id in (select id from ids)',true,'ACTIVE',NULL,true,'6c092ffe-4d6b-4f9b-8101-48e2fcbec2b6'),
	 (75398,'2020-03-31 15:58:52.716',409,'2020-04-01 05:23:06.375','covid19_wards_bed_detail','wardId','with health_infra_details as (
select generate_series(1,number_of_beds) as available from health_infrastructure_ward_details where id = #wardId#
), filled_bed as (
select cast(current_bed_no as text) from covid19_admission_detail where status not in (''DISCHARGE'',''DEAD'',''REFER'')
and current_ward_id = #wardId#
)
select available as id,available as bed_name from health_infra_details
where cast(available as text) not in (select distinct current_bed_no from filled_bed)',true,'ACTIVE',NULL,NULL,'e76fe713-7182-4c8d-87df-391702a2c666'),
	 (409,'2020-04-16 00:00:00',409,'2020-04-16 00:00:00','covid19_lab_test_pending_sample_result_all','searchText,healthInfra,loggedInUserId,wardId,collectionDate','with idsp_screening as (
select
	clt.id as "id",
	ltd.id as lab_id,
	ltd.lab_test_number as lab_test_number,
	ltd.lab_sample_received_on as receive_date,
	ltd.lab_test_id as lab_test_id,
	clt.location_id as loc_id,
	imt_member.id as member_id,
	case when clt.member_id is null
		then concat_ws('' '',clt.first_name,clt.middle_name,clt.last_name)
		else concat(concat_ws('' '',imt_member.first_name,imt_member.middle_name,imt_member.last_name)
			, '' ('' , imt_member.unique_health_id , '')'' , ''<br>'' , imt_member.family_id) end as member_det,
	concat(case when clt.member_id is null
		then cast(clt.age as text)
		else cast(EXTRACT(YEAR FROM age(imt_member.dob)) as text) end,'' Year'') as age,
	to_char(clt.admission_date,''DD/MM/YYYY'') as admission_date,
	hiwd.ward_name,
	sample_from.name_in_english as sample_from_health_infra,
	sample_from.is_covid_lab,
	clt.current_ward_id as ward_id,
	cacd.on_ventilator as on_ventilator,
	cacd.ventilator_type1 as ventilator_type1,
	cacd.ventilator_type2 as ventilator_type2,
	cacd.on_o2 as on_o2,
	cacd.on_air as on_air,
	cacd.remarks as remarks,
	clt.is_hiv as hiv,
	clt.current_bed_no,
	cacd.health_status as health_status,
	cacd.service_date as last_check_up_time
	from covid19_lab_test_detail ltd
	inner join covid19_admission_detail clt on ltd.covid_admission_detail_id = clt.id
	left join health_infrastructure_ward_details hiwd on hiwd.id = clt.current_ward_id
	left join covid19_admitted_case_daily_status cacd on cacd.id = clt.last_check_up_detail_id
	left join health_infrastructure_details sample_from on sample_from.id = ltd.sample_health_infra
	left join imt_member on clt.member_id = imt_member.id
	left join imt_family on imt_member.family_id = imt_family.family_id
	where
	(((select role_id from um_user where id = #loggedInUserId#) in (59,25,96))
	or ltd.sample_health_infra_send_to = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = ''#loggedInUserId#'' and uhi.state = ''ACTIVE'')
	)and clt.status not in (''DISCHARGED'',''DEAD'',''REFER'') and ltd.lab_collection_status = ''SAMPLE_ACCEPTED''
	and (case when ''#searchText#'' != ''null'' and ''#searchText#'' != '''' then ltd.search_text ilike ''%#searchText#%'' else true end)
	and (case when ''#healthInfra#'' != ''null'' and ''#healthInfra#'' != '''' then sample_from.name_in_english ilike ''%#healthInfra#%'' else true end)
	and (case when ''#collectionDate#'' != ''null'' and ''#collectionDate#'' != '''' then to_char(ltd.lab_sample_received_on,''DD/MM/YYYY'') ilike ''%#collectionDate#%'' else true end)
	and (case when ''#wardId#'' != ''null'' and ''#wardId#'' != '''' then hiwd.ward_name = ''#wardId#'' else true end)
	order by ltd.receive_server_date desc
)
select
id as "admissionId"
,lab_id as "labCollectionId"
,lab_test_number as "labTestNumber"
,receive_date as "sampleReceiveDate"
,lab_test_id as "labTestId"
,member_id as "memberId"
,loc_id as "locationId"
,member_det as "memberDetail"
,age as "age"
,admission_date as "admissionDate"
,ward_name as "wardName"
,ward_id as "wardId"
,current_bed_no as "bedNumber"
,health_status as "healthStatus"
,to_char(last_check_up_time,''DD/MM/YYYY'') as "lastCheckUpTime"
,on_ventilator
,ventilator_type1
,ventilator_type2
,on_o2
,on_air
,remarks
,hiv
,sample_from_health_infra as "sampleFrom"
,is_covid_lab as "isSameHealthInfrastructure"
,cast(''CONFIRMATION'' as text) as "resultStage"
from idsp_screening',true,'ACTIVE',NULL,true,'963ca8cf-1faa-44d3-a5c0-79b955f4654b'),
	 (74841,'2020-04-13 00:00:00',74841,'2020-04-13 00:00:00','soh_covid19_positive_member_list',NULL,'with marker_date as (
	select TO_TIMESTAMP(sc.key_value, ''YYYY-MM-DD HH24:MI:SS'') as last_marker_date from system_configuration sc where sc.system_key = ''COVID19_LAST_MARKET_DATE''
)
select 
member_det as "name",
age as "age",
case when gender = ''F'' then ''Female'' else ''Male'' end as "gender",	
hid.name_in_english as "facility",
im.english_name as "area",
im.id,
case when dob is null then ''-'' else to_char(dob,''DD-MM-YYYY'') end as "dob",
caad.address as address ,
case when caad.death_date is not null then to_char(caad.death_date,''DD/MM/YYYY'') else ''-'' end as "dod",
caad.mobidity as "morbidities"
from covid19_admission_analytics_details caad
left join health_infrastructure_details hid on hid.id = caad.health_infra_id
left join location_master im on im.id = caad.location_id
where  positive_member = 1
and system_postive_date > (select last_marker_date from marker_date)',true,'ACTIVE',NULL,true,'b91130e1-6832-43d4-8cec-bf83ff1a1eb6'),
	 (74841,'2020-03-29 21:09:01.746',409,'2020-03-31 02:51:18.97','insert_covid19_admission_detail','member_id,loggedIn_user,ward_no,bed_no,loggedInUserId,location_id,isHeartPatient,covid19_lab_test_recommendation_id,admission_date,isHIV,health_status,isDiabetes,isPregnant','with generated_id as (
select  nextval(''covid19_admission_detail_id_seq'') as id 
),insert_daily_admission_det as (
insert into covid19_admitted_case_daily_status(member_id,location_id,admission_id,service_date,ward_id,bed_no,health_status,created_by,created_on)
values(#member_id#,#location_id#,(select id from generated_id),''#admission_date#'',#ward_no#,''#bed_no#'',''#health_status#'',''#loggedInUserId#'',now())
returning id
),insert_lab_test as (
INSERT INTO public.covid19_lab_test_detail(
member_id, location_id, covid_admission_detail_id, lab_collection_status)
VALUES (#member_id#,
#location_id#, (select id from generated_id),''COLLECTION_PENDING'')
returning id
),update_lab_test_recommdation as (
update covid19_lab_test_recommendation set admission_id = (select id from generated_id)
where id = #covid19_lab_test_recommendation_id#
)
insert into covid19_admission_detail 
(id,
member_id,
location_id,
covid19_lab_test_recommendation_id,
last_lab_test_id,
last_check_up_detail_id,
health_infra_id,
current_ward_id,
current_bed_no,
admission_status_id,
admission_date,
admission_entry_by,
admission_entry_on,
is_hiv,
is_pregnant,
is_heart_patient,
is_diabetes,
admission_from,
status
)
values(
(select id from generated_id)
,#member_id#
,#location_id#
,#covid19_lab_test_recommendation_id#
,(select id from insert_lab_test)
,(select id from insert_daily_admission_det)
, (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = ''#loggedInUserId#'' and uhi.state = ''ACTIVE'')
,#ward_no#
,''#bed_no#''
,(select id from insert_daily_admission_det)
,''#admission_date#''
,#loggedIn_user#
,now()
,#isHIV#
,#isPregnant#
,#isHeartPatient#
,#isDiabetes#
,''LAB_RECOMMENDATION''
,''ADMITTED''
)
RETURNING id;',true,'ACTIVE',NULL,NULL,'62da43d0-ba9c-48f2-8ebc-9efe905f0901'),
	 (1,'2020-04-03 00:00:00',1,'2020-04-03 00:00:00','retrieve_gvk_covid_104_calls_response_by_id','id','
select id as "id",
date_of_calling as "dateOfCalling",
person_name as "name",
age as "age",
gender as "gender",
contact_no as "contact_no",
address as "address",
pin_code as "pinCode",
get_location_hierarchy(village) as "locationHierarchy",
district as "district_locationId",
block as "taluka_locationId",
village as "locationId",
is_information_call as "isInformationCall",
has_fever as "isHavingFever",
fever_days as "feverDays",
having_cough as "isHavingCough",
cough_days as "coughDays",
has_shortness_of_breath as "isHavingShortnessBreath",
has_travel_abroad_in_15_days as "isTravelAbroad",
country as "contactCountry",
arrival_date as "dateOfArrival",
in_touch_with_anyone_travelled_recently as "isInTouchWithRecentTraveller"
from gvk_covid_104_calls_response
where id = #id#
',true,'ACTIVE',NULL,true,'9d7c1692-9b45-4fd4-857c-53e72d8e8bd9'),
	 (66522,'2020-02-11 18:16:26.236',66522,'2020-04-15 19:21:09.162','state_of_health_data_retrieval_10','locationId,timeline_type','with elements_details as (
       select lt.level,lt.type,l.id as "locationId",
        case when lt.type =''C'' or lt.type =''D'' then ''Districts/Corporation'' else lt.name end as "locationType",
        case when l.english_name is not null then l.english_name else l.name end as english_name,element_name as "elementName",
        value as value,target,male as male,female as female,
        chart1 as chart1,chart2 as chart2,chart3 as chart3,chart4 as chart4,
chart5 as chart5,
chart6 as chart6,
chart7 as chart7,
chart8 as chart8 ,
chart9 as chart9 ,
chart10 as chart10 ,
chart11 as chart11 ,
chart12 as chart12 ,
chart13 as chart13 ,
chart14 as chart14 ,
chart15 as chart15 ,


        days as days,
        reporting as reporting,
        calculatedTarget as calculatedTarget,
        color as color,
        percentage as percentage,
        displayValue as displayValue,
        sortPriority as "sortPriority"
        from
        soh_timeline_analytics_temp sh inner join location_master l on sh.location_id = l.id
        inner join location_type_master lt on l.type = lt.type
        --inner join location_hierchy_closer_det closer on closer.parent_id = 2 and depth=case when 2 = 2 then 2 else 1 end
        inner join location_hierchy_closer_det closer on closer.parent_id = ''#locationId#'' and depth=case when #locationId# = 2 then 2 else 1 end
        where sh.location_id = closer.child_id 
        and timeline_type = ''#timeline_type#''
        --and timeline_type = ''LAST_365_DAYS''
        order by english_name),
unique_locations as (
        select distinct "locationId" from elements_details
        ),
user_details_ids as (
        select uul.loc_id as location_id, concat(uu.first_name,'' '',uu.middle_name,'' '', uu.last_name)
				 as "userName",
				 case when uu.role_id = 39 then ''CDHO''
				when uu.role_id = 41 then ''THO''
				when uu.role_id = 66 then ''MO PHC''
when uu.role_id = 86 then ''MO UPHC''

				when uu.role_id = 67 then ''MO AYUSH''
				when uu.role_id = 63 then ''RCHO''
                                when uu.role_id = 85 then ''MOH Co.''
				when uu.role_id = 99 then ''RCHO Co.''
				when uu.role_id = 204 then ''MPHW''
				when uu.role_id = 30 then ''FHW''
				when uu.role_id = 24 then ''ASHA''
				when uu.role_id = 108 then ''DHO''
                                when uu.role_id = 179 then ''CHO-HWC''
				else ''(Other)'' end as "roleName",
				uu.contact_number as "contactNumber",
				uu.id as user_id
        from unique_locations elements
        inner join um_user_location uul on elements."locationId" = uul.loc_id
        inner join um_user uu on uu.id = uul.user_id
        inner join location_master lm on lm.id =  uul.loc_id
        where uul.state=''ACTIVE''
        and uu.state=''ACTIVE''
	and uu.role_id in (39,41,67,66,63,85,99,204,24,108,30,86,179)
),
remaining_user_data as (
	select "locationId" as location_id,
	cast(''-'' as text) as "userName",
	t.roleName,
	cast(''-'' as text) as "contactNumber",
	cast(0 as numeric) as "user_id"

	from unique_locations
	inner join location_master lm on lm.id = "locationId"
	inner join (
	select ''C'' as type_id, unnest(array[''MOH Co.'', ''RCHO Co.'']) as roleName
	union all 
	select ''D'' as type_id, unnest(array[''CDHO'', ''RCHO'']) as roleName
	union all
	select ''B'' as type_id, ''THO'' as roleName
	union all 
	select ''Z'' as type_id, ''DHO'' as roleName	
	union all
	select ''P'' as type_id, unnest(array[''MO PHC'', ''MO AYUSH'']) as roleName
	union all
	select ''U'' as type_id, unnest(array[''MO UPHC'', ''MO AYUSH'']) as roleName
	union all
	select ''V'' as type_id, unnest(array[''FHW'',''MPHW'']) as roleName
	union all
	select ''ANG'' as type_id, unnest(array[''FHW'',''MPHW'']) as roleName
	union all
	select ''SC'' as type_id, unnest(array[''CHO-HWC'']) as roleName
	union all
--select ''ANM'' as type_id, unnest(array[''CHO-HWC'']) as roleName
	--union all
	select ''A'' as type_id, unnest(array[''ASHA'']) as roleName
	union all
	select ''AA'' as type_id, unnest(array[''ASHA'']) as roleName
	) as t on t.type_id = lm."type"
),
remaining_user_data_1 as (
	select users.*
	from remaining_user_data remains 
	left join user_details_ids users  on users.location_id = remains.location_id
	and users."roleName"  = remains.roleName
	where users.user_id is not null
	union 
	select remains.*
        from remaining_user_data remains 
	left join user_details_ids users  on users.location_id = remains.location_id
	and users."roleName"  = remains.roleName
	where users.user_id is null
),
user_details as (
	       select
	       cast(array_to_json(array_agg(row_to_json(ud.*))) as text) as user_name,ud.location_id
	       from remaining_user_data_1 ud
	       group by ud.location_id
)
select elements.*,
case when users.user_name is null then null else users.user_name end as  "userDetail" 
from elements_details elements 
left join user_details users
on elements."locationId" = users.location_id',true,'ACTIVE',NULL,true,'dc4ca212-ac15-4e88-a38a-5f7c49669ada'),
	 (74841,'2020-04-12 00:00:00',409,'2020-04-12 13:31:44.412','covid19_get_admitted_patients_det_for_editing','admissionId','select
admission.member_id,
admission.id,
first_name as "firstname",
middle_name as "middlename",
last_name as "lastname",
admission.address as "address",
loc.english_name as "loc_name", 
loc.id as "districtLocationId",
case when pincode is null or pincode = ''null'' or pincode = ''\"null\"'' then null else cast(pincode as integer) end as "pinCode",
occupation as "occupation",
travel_history as "travelHistory",
travelled_place as "travelledPlace",
flight_no as "flightno",
is_abroad_in_contact as "is_abroad_in_contact",
in_contact_with_covid19_paitent as "inContactWithCovid19Paitent",
abroad_contact_details as "abroad_contact_details",
admission_date as "admissionDate",
case_no as "case_number",
opd_case_no as "opdCaseNo",
cast(contact_number as numeric) as "contact_no",
admission.gender as "gender",
pregnancy_status as "pregnancy_status",
age as "age",
age_month as "ageMonth",
is_fever as "hasFever",
is_cough as "hasCough",
is_breathlessness as "hasShortnessBreath",
is_sari as "isSari",
is_hiv as "isHIV",
is_heart_patient as "isHeartPatient",
is_diabetes as "isDiabetes",
is_copd as "isCOPD",
is_hypertension as "isHypertension",
is_renal_condition as "isRenalCondition",
is_immunocompromized as "isImmunocompromized",
is_malignancy as "isMalignancy",
is_other_co_mobidity as "isOtherCoMobidity",
other_co_mobidity as "otherCoMobidity",
indications as "indications",
date_of_onset_symptom as "date_of_onset_symptom",
refer_from_hospital as "referFromHosital",
ward.id as "ward_id",
ward.ward_name as "ward_name",
current_bed_no as "bedno",
unit_no as "unitno",
health_status as "healthstatus",
emergency_contact_name as "emergencyContactName",
case when emergency_contact_no is null or emergency_contact_no = ''null'' or emergency_contact_no = ''\"null\"'' then null else cast(emergency_contact_no as bigint) end as "emergencyContactNo",
is_migrant as "isMigrant",
indication_other as "otherIndications"

from covid19_admission_detail admission left join covid19_admitted_case_daily_status daily on admission.id  = daily.admission_id
left join location_master loc on loc.id = daily.location_id and type in (''D'',''C'')
left join health_infrastructure_ward_details ward on ward.id  = admission.current_ward_id
where
admission.id = #admissionId#',true,'ACTIVE',NULL,true,'ab44d7f5-08aa-42a1-968e-cc8d1267daad'),
	 (1,'2020-04-09 00:00:00',78434,'2020-04-10 11:50:28.306','opd_search_idsp_referred_patients_by_location_id','offSet,locationId,limit','with idsp_det as(
        select
        imsd.*
        from idsp_member_screening_details imsd
        left join rch_opd_member_registration romr on imsd.id = romr.reference_id and romr.reference_type = ''IDSP_REF''
        where
        romr.id is null
        and imsd.member_id is not null
        and imsd.location_id in (select child_id from location_hierchy_closer_det where parent_id = #locationId#)
        and (imsd.travel_detail is not null and imsd.travel_detail not in (''NO_TRAVEL''))
        and (imsd.is_cough or imsd.is_fever or imsd.covid_symptoms ilike ''%breathlessness%'')
        limit #limit# offset #offSet#
    )
    select
    imsd.id as "idspMemberScreeningId",
    1 as "idspRound",
    imt_member.id as "memberId",
    imt_member.unique_health_id as "uniqueHealthId",
    imt_member.family_id as "familyId",
    imt_member.mobile_number as "mobileNumber",
    imt_family.location_id as "locationId",
    get_location_hierarchy(case when imt_family.area_id is not null then imt_family.area_id else imt_family.location_id end) as "locationHierarchy",
    concat(imt_member.first_name, '' '', imt_member.middle_name, '' '', imt_member.last_name) as "name",
    imt_member.dob as "dob",
    cast(age(imt_member.dob) as text) as "age",
    concat(uu1.first_name, '' '', uu1.middle_name, '' '', uu1.last_name) as "ashaName",
    uu1.contact_number as "ashaContactNumber",
    uu1.techo_phone_number as "ashaTechoContactNumber",
    concat(uu2.first_name, '' '', uu2.middle_name, '' '', uu2.last_name) as "anmName",
    uu2.contact_number as "anmContactNumber",
    uu2.techo_phone_number as "anmTechoContactNumber"
    from
    idsp_det imsd
    inner join imt_member on imt_member.id = imsd.member_id
    inner join imt_family on imt_member.family_id = imt_family.family_id
    left join um_user_location uul1 on uul1.loc_id = imt_family.area_id and uul1.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul1.user_id and state = ''ACTIVE'') = 24
    left join um_user uu1 on uu1.id = uul1.user_id
    left join um_user_location uul2 on uul2.loc_id = imt_family.location_id and uul2.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul2.user_id and state = ''ACTIVE'') = 30
    left join um_user uu2 on uu2.id = uul2.user_id;',true,'ACTIVE','OPD Search IDSP Referred Patients By Location ID',true,'ef4a2155-ce9b-4ef6-88f0-facf6f2b6168'),
	 (1,'2020-04-30 00:00:00',NULL,NULL,'retrieve_cmtc_centers_by_user_assigned_location','userId','
select * from health_infrastructure_details where location_id in
(select child_id from location_hierchy_closer_det where parent_id in
(select loc_id from um_user_location where user_id = #userId# and state = ''ACTIVE'')) and (is_cmtc = true or is_nrc = true or is_sncu = true)
',true,'ACTIVE',NULL,true,'7ba98904-ec0e-47ba-a4cd-aee26738cb50'),
	 (1,'2020-04-09 00:00:00',66522,'2020-04-14 02:13:53.827','get_soh_covid_ratio_data',NULL,'select 
round(sum( caad.no_of_test )/65,2)  "Tests per million",
round(cast(sum( case when caad.cad_status = ''DEATH'' and caad.positive_member = 1 then 1 else 0 end ) as numeric )/65,2)  "Deaths per million",
-- round( sum( case when caad.positive = 1 then 1 else 0 end)/65 ,2)  "Positives per million",
CONCAT ( cast(round(cast((sum(case when caad.cad_status = ''DEATH'' and caad.positive_member = 1 then 1 else 0 end ) * 100) as numeric) / cast(sum(  case when caad.positive_member = 1 then 1 else 0 end) as numeric),2) as text),''%'' ) "Deaths to Positives ratio",
CONCAT ( cast(round(cast((sum(case when caad.cad_status = ''DISCHARGE'' and caad.positive_member = 1 then 1 else 0 end ) * 100) as numeric) /cast(sum(  case when caad.positive_member = 1 then 1 else 0 end ) as numeric) ,2)   as text ), ''%'') "Discharged to Positives ratio",
CONCAT ( cast(round(cast((sum(case when caad.positive_member = 1 then 1 else 0 end ) * 100) as numeric) / cast(sum(  case when no_of_test >0 then 1 else 0 end) as numeric),2) as text),''%'' ) "Positive per total tests",
CONCAT (round(sum( case when caad.positive_member = 1 then 1 else 0 end)/ROUND(CAST((3 * POWER(CBRT(2), (cast(now() as date) - cast(''2020-03-19'' as date)))) AS NUMERIC), 2)*100,2),''%'') "Actual to doubling ratio - today",
CONCAT (round(sum( case when caad.positive_member = 1 and caad.postive_date < (now() -interval ''3 day'') then 1 else 0 end)/ROUND(CAST((3 * POWER(CBRT(2), (cast(cast(now() as date) - interval ''3 day'' as date) - cast(''2020-03-19'' as date)))) AS NUMERIC), 2)*100,2),''%'')	"Actual to doubling ratio - previous"
from covid19_admission_analytics_details caad ;',true,'ACTIVE',NULL,true,'ad41aff6-c7b7-4c32-9ba5-b3fb47ebc1dc'),
	 (74841,'2020-04-17 00:00:00',74841,'2020-04-17 14:39:58.969','state_of_health_covid_total_death_case','offset,limit,location_id,health_infra_id,search_text','with analytics as(
select 
concat_ws(''/'', member_det, (case when caad.gender = ''F'' then ''F'' else ''M'' end), age, 
SUBSTRING(case when hid.name_in_english is null then hid.name else hid.name_in_english end from 1 for 10), 
case when mobidity != '''' then mobidity else  ''-'' end) as "primaryVal_Member Details",
m.unique_health_id as "uniqueHealthId",
caad.member_id as member_id,
--case when idsp.is_any_illness_or_discomfort then ''Yes'' when idsp.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort",
m.family_id as family_id,
caad.contact_number as "primaryVal_mobile_Contact Number",
caad.address as "primaryVal_Address",
case when admission_date is not null then to_char(caad.admission_date,''DD/MM/YYYY'') else ''-'' end as "primaryVal_Admission Date",
case when last_lab_result_entry_on is not null then to_char(caad.last_lab_result_entry_on,''DD/MM/YYYY'') else ''-'' end as "Last Lab Test date",
case when discharge_date is not null then to_char(caad.discharge_date,''DD/MM/YYYY'') else null end as "val_Death Date",
case_no as  "val_Case No",
caad.location_id as loc_id
from covid19_admission_analytics_details caad
left join imt_member m on m.id = caad.member_id
left join health_infrastructure_details hid on hid.id = caad.health_infra_id
where case when ''#health_infra_id#'' != ''null'' then caad.health_infra_id = #health_infra_id# else 
caad.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#) end
and  positive_member = 1 and cad_status = ''DEATH''
and case when ''#search_text#'' = ''null'' then true else case when caad.search_text ilike ''%#search_text#%'' then true else false end end
order by caad.discharge_date desc
limit #limit# offset #offset#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id 
	where family_head = true and 
        im.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'',''TEMPORARY'')
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName"
--case when a.is_any_illness_or_discomfort then ''Yes'' when a.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort"

from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join contact_person cp on cp.member_id = a.member_id',true,'ACTIVE',NULL,true,'df33cf47-671a-45a0-8aec-a7cd2051aa4d'),
	 (74841,'2020-04-17 00:00:00',74841,'2020-04-17 14:29:50.536','state_of_health_covid_today_positive','offset,limit,location_id,search_text','with analytics as(
select 
concat_ws(''/'', member_det, (case when caad.gender = ''F'' then ''F'' else ''M'' end), age, 
SUBSTRING(case when hid.name_in_english is null then hid.name else hid.name_in_english end from 1 for 10), 
case when mobidity != '''' then mobidity else  ''-'' end) as "primaryVal_Member Details",
m.unique_health_id as "uniqueHealthId",
caad.member_id as member_id,
m.family_id as family_id,
caad.contact_number as "primaryVal_mobile_Contact Number",
caad.address as "primaryVal_Address",
case when admission_date is not null then to_char(caad.admission_date,''DD/MM/YYYY'') else ''-'' end as "primaryVal_Admission Date",
case when last_lab_result_entry_on is not null then to_char(caad.last_lab_result_entry_on,''DD/MM/YYYY'') else ''-'' end as "Last Lab Test date",
health_state as "val_Current Status",
discharge_date as "val_Discharge Date",
case when death_date is not null then to_char(caad.death_date,''DD/MM/YYYY'') else null end as "val_Death Date",
case_no as  "val_Case No",
caad.location_id as loc_id
from covid19_admission_analytics_details caad
left join imt_member m on m.id = caad.member_id
left join health_infrastructure_details hid on hid.id = caad.health_infra_id
where caad.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and positive_member = 1 and cast(postive_date as date) = cast(now() as date)
and case when ''#search_text#'' = ''null'' then true else case when caad.search_text ilike ''%#search_text#%'' then true else false end end
order by caad.admission_date desc
limit #limit# offset #offset#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id 
	where family_head = true and 
        im.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'',''TEMPORARY'')
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName"
--case when a.is_any_illness_or_discomfort then ''Yes'' when a.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort"

from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join contact_person cp on cp.member_id = a.member_id',true,'ACTIVE',NULL,true,'4febf188-5c72-4d5f-a557-bcac082254c2'),
	 (75398,'2020-04-20 00:00:00',75398,'2020-04-20 00:00:00','covid19_admin_revert_outcome','admissionId','with initial_lab_status as(
select DISTINCT on(cltd.covid_admission_detail_id)cltd.covid_admission_detail_id as admission_id,lab_collection_status as initial_result
from covid19_lab_test_detail cltd 
where cltd.covid_admission_detail_id = #admissionId#
order by cltd.covid_admission_detail_id,cltd.id
)
update covid19_admission_detail
set status = (case when ils.initial_result = ''POSITIVE'' then ''CONFORMED''
else ''SUSPECT'' end),
discharge_date = null,
discharge_remark = null,
discharge_status = null,
discharge_entry_by = null,
discharge_entry_on = null
from initial_lab_status ils
where id = #admissionId# and status in (''DEATH'',''DISCHARGE'', ''REFER'', ''DAMA/LAMA'');

delete from covid19_admission_refer_detail where id  in (select id from covid19_admission_refer_detail where  admission_id = #admissionId#
order by created_on desc limit 1);',false,'ACTIVE',NULL,true,'0083dbdc-a51a-4fbc-aeb3-6003d4ba050c'),
	 (74841,'2020-04-17 00:00:00',74841,'2020-04-17 14:49:48.22','state_of_health_covid_today_deaths','offset,limit,location_id,search_text','with analytics as(
select 
concat_ws(''/'', member_det, (case when caad.gender = ''F'' then ''F'' else ''M'' end), age, 
SUBSTRING(case when hid.name_in_english is null then hid.name else hid.name_in_english end from 1 for 10), 
case when mobidity != '''' then mobidity else  ''-'' end) as "primaryVal_Member Details",
m.unique_health_id as "uniqueHealthId",
caad.member_id as member_id,
--case when idsp.is_any_illness_or_discomfort then ''Yes'' when idsp.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort",
m.family_id as family_id,
caad.contact_number as "primaryVal_mobile_Contact Number",
caad.address as "primaryVal_Address",
case when admission_date is not null then to_char(caad.admission_date,''DD/MM/YYYY'') else ''-'' end as "primaryVal_Admission Date",
case when last_lab_result_entry_on is not null then to_char(caad.last_lab_result_entry_on,''DD/MM/YYYY'') else ''-'' end as "Last Lab Test date",
to_char(caad.discharge_date,''DD/MM/YYYY'')  as "val_Death Date",
case_no as  "val_Case No",
caad.location_id as loc_id
from covid19_admission_analytics_details caad
left join imt_member m on m.id = caad.member_id
left join health_infrastructure_details hid on hid.id = caad.health_infra_id
where caad.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and positive_member = 1 and cast( caad.discharge_date  as date) = cast(now() as date) and cad_status = ''DEATH''
and case when ''#search_text#'' = ''null'' then true else case when caad.search_text ilike ''%#search_text#%'' then true else false end end
order by caad.discharge_date desc
limit #limit# offset #offset#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id 
	where family_head = true and 
        im.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'',''TEMPORARY'')
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName"
--case when a.is_any_illness_or_discomfort then ''Yes'' when a.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort"

from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join contact_person cp on cp.member_id = a.member_id',true,'ACTIVE',NULL,true,'5f08585b-9d24-48de-a431-b87c36ef7cd9'),
	 (75398,'2020-04-20 00:00:00',75398,'2020-04-20 00:00:00','covid19_admin_update_suggested_hospital','admissionId,healthInfaId','update covid19_admission_detail
set suggested_health_infra = #healthInfaId#
where id=#admissionId#',false,'ACTIVE',NULL,true,'aad89103-510d-4d74-a2b8-f999ea72622b'),
	 (74841,'2020-04-17 00:00:00',66522,'2020-04-17 01:01:05.419','state_of_health_covid_treatment','offset,limit,location_id,search_text','with analytics as(
select 
concat_ws(''/'', member_det, (case when caad.gender = ''F'' then ''F'' else ''M'' end), age, 
SUBSTRING(case when hid.name_in_english is null then hid.name else hid.name_in_english end from 1 for 10), 
case when mobidity != '''' then mobidity else  ''-'' end) as "primaryVal_Member Details",
m.unique_health_id as "uniqueHealthId",
caad.member_id as member_id,
m.family_id as family_id,
caad.contact_number as "primaryVal_mobile_Contact Number",
caad.address as "primaryVal_Address",
case when admission_date is not null then to_char(caad.admission_date,''DD/MM/YYYY'') else ''-'' end as "primaryVal_Admission Date",
case when last_lab_result_entry_on is not null then to_char(caad.last_lab_result_entry_on,''DD/MM/YYYY'') else ''-'' end as "Last Lab Test date",
health_state as "val_Current Status",
discharge_date as "val_Discharge Date",
case when death_date is not null then to_char(caad.death_date,''DD/MM/YYYY'') else null end as "val_Death Date",
case_no as  "val_Case No",
caad.location_id as loc_id
from covid19_admission_analytics_details caad
left join imt_member m on m.id = caad.member_id
left join health_infrastructure_details hid on hid.id = caad.health_infra_id
where caad.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and positive_member = 1 and discharge_date is null
and case when ''#search_text#'' = ''null'' then true else case when caad.search_text ilike ''%#search_text#%'' then true else false end end
order by caad.admission_id desc
limit #limit# offset #offset#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id 
	where family_head = true and 
        im.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'',''TEMPORARY'')
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName"
--case when a.is_any_illness_or_discomfort then ''Yes'' when a.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort"

from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join contact_person cp on cp.member_id = a.member_id',true,'ACTIVE',NULL,true,'18f3defb-0cba-4286-abe8-6ff36770dadc'),
	 (66522,'2020-02-11 18:16:44.135',66522,'2020-04-15 19:19:42.516','state_of_health_data_retrieval_9','timelineType,locationId','with  location_type as(select  level,string_agg(name,''/'') as location_type from location_type_master where
                                level=(case when ''#locationId#'' = ''null'' then 1 else (select level+1 from location_type_master t
                                inner join location_master m on t.type=m.type where id=2) end)group by level ),

                elements_details as (

                    select lt.level,lt.type,l.id as "locationId",location_type.location_type as "locationType",
                    case when l.english_name is not null then l.english_name else l.name end as english_name,element_name as "elementName",
                    sum(value) as value,target,sum(male) as male,sum(female) as female,
                    sum(chart1) as chart1,sum(chart2) as chart2,sum(chart3) as chart3,sum(chart4) as chart4, 
sum(chart5) as chart5,
sum(chart6) as chart6,
sum(chart7) as chart7,
sum(chart8) as chart8,
sum(chart9) as chart9,
sum(chart10) as chart10,
sum(chart11) as chart11,
sum(chart12) as chart12,
sum(chart13) as chart13,
sum(chart14) as chart14,
sum(chart15) as chart15,

max(days) as days,
                    max(reporting) as reporting,
                    max(calculatedTarget) as calculatedTarget,
                    max(color) as color,
                    max(percentage) as percentage,
                    max(displayValue) as displayValue,
                    max(sortPriority) as "sortPriority"
                     from
                    location_type,location_type_master lt,soh_timeline_analytics_temp sh,location_master l where sh.location_id =#locationId# and sh.location_id = l.id
                    and l.type = lt.type
                    and sh.timeline_type = ''#timelineType#''
                    group by lt.level, lt.type,
                    location_type.location_type, sh.target,l.id,l.english_name,sh.element_name order by english_name),
                    unique_locations as (
                        select distinct "locationId" from elements_details
                    ),
                    user_details_ids as (
				select uul.loc_id as location_id, concat(uu.first_name,'' '',uu.middle_name,'' '', uu.last_name)
				 as "userName",
				 case when uu.role_id = 39 then ''CDHO''
				when uu.role_id = 41 then ''THO''
				when uu.role_id = 66 then ''MO PHC''
                                when uu.role_id = 86 then ''MO UPHC''
				when uu.role_id = 67 then ''MO AYUSH''
				when uu.role_id = 63 then ''RCHO''
                                when uu.role_id = 85 then ''MOH Co.''
				when uu.role_id = 99 then ''RCHO Co.''
				when uu.role_id = 204 then ''MPHW''
				when uu.role_id = 30 then ''FHW''
				when uu.role_id = 24 then ''ASHA''
				when uu.role_id = 108 then ''DHO''
                                when uu.role_id = 179 then ''CHO-HWC''

				else ''(Other)'' end as "roleName",
				uu.contact_number as "contactNumber",
				uu.id as user_id
        from unique_locations elements
        inner join um_user_location uul on elements."locationId" = uul.loc_id
        inner join um_user uu on uu.id = uul.user_id
        inner join location_master lm on lm.id =  uul.loc_id
        where uul.state=''ACTIVE''
        and uu.state=''ACTIVE''
	and uu.role_id in (39,41,67,66,63,85,99,204,24,108,30,86,179)
			),
                    remaining_user_data as (
	select "locationId" as location_id,
	cast(''-'' as text) as "userName",
	t.roleName,
	cast(''-'' as text) as "contactNumber",
	cast(0 as numeric) as "user_id"

	from unique_locations
	inner join location_master lm on lm.id = "locationId"
	inner join (
	select ''C'' as type_id, unnest(array[''MOH Co.'', ''RCHO Co.'']) as roleName
	union all 
	select ''D'' as type_id, unnest(array[''CDHO'', ''RCHO'']) as roleName
	union all
	select ''B'' as type_id, ''THO'' as roleName
	union all 
	select ''Z'' as type_id, ''DHO'' as roleName	
	union all
	select ''P'' as type_id, unnest(array[''MO PHC'', ''MO AYUSH'']) as roleName
	union all
	select ''U'' as type_id, unnest(array[''MO UPHC'', ''MO AYUSH'']) as roleName
	union all
	select ''V'' as type_id, unnest(array[''FHW'',''MPHW'']) as roleName
	union all
select ''ANG'' as type_id, unnest(array[''FHW'',''MPHW'']) as roleName
	union all
	select ''SC'' as type_id, unnest(array[''CHO-HWC'']) as roleName
	union all
--select ''ANM'' as type_id, unnest(array[''CHO-HWC'']) as roleName
	--union all
	select ''A'' as type_id, unnest(array[''ASHA'']) as roleName
	union all
	select ''AA'' as type_id, unnest(array[''ASHA'']) as roleName
	) as t on t.type_id = lm."type"
),
remaining_user_data_1 as (
	select users.*
	from remaining_user_data remains 
	left join user_details_ids users  on users.location_id = remains.location_id
	and users."roleName"  = remains.roleName
	where users.user_id is not null
	union 
	select remains.*
        from remaining_user_data remains 
	left join user_details_ids users  on users.location_id = remains.location_id
	and users."roleName"  = remains.roleName
	where users.user_id is null
),
user_details as (
	       select
	       cast(array_to_json(array_agg(row_to_json(ud.*))) as text) as user_name,ud.location_id
	       from remaining_user_data_1 ud
	       group by ud.location_id
)
                    select elements.*,
                    case when users.user_name is null then null else users.user_name end as  "userDetail"
                    from elements_details elements left join user_details users
                     on elements."locationId" = users.location_id',true,'ACTIVE',NULL,true,'53278fb1-1b82-4b8e-bb98-1926eebb6b4a'),
	 (1,'2019-07-01 00:00:00',58981,'2020-05-01 21:03:03.216','mob_work_register_detail_pnc_child','visitId','--mob_work_register_detail_pnc_child
with const as (
	select cast(''HOME'' as text) as const, cast(''Home'' as text) as name
	union
	select cast(''ON_THE_WAY'' as text) as const, cast(''On the way'' as text) as name
	union
	select cast(''HOSP'' as text) as const, cast(''Hospital'' as text) as name
), dang_sign as (
	select rel.child_pnc_id, string_agg(det.value ,'', '') as dang_sign 
	from rch_pnc_child_danger_signs_rel rel
	inner join listvalue_field_value_detail det on rel.child_danger_signs = det.id
	where rel.child_pnc_id in (select id from rch_pnc_child_master where pnc_master_id = #visitId#)
	group by rel.child_pnc_id 
)
select 	
concat(mem.first_name,'' '',mem.middle_name,'' '',mem.last_name,'' ('',mem.unique_health_id,'')'') as "Infant Name",
case when pcm.is_alive = true then ''Yes'' when pcm.is_alive = false then ''No'' else null end as "Infant alive",
pcm.child_weight as "Infant Weight", 
dang_sign.dang_sign as "Dangerous Signs",
pcm.other_danger_sign as "Other Danger Sign", 
case when pcm.child_referral_done = ''YES'' then ''Yes'' when pcm.child_referral_done = ''NO'' then ''No'' when pcm.child_referral_done = ''NOT_REQUIRED'' then ''Not required'' else null end as "Refer for Advanced Treatment", 
case when pcm.death_date is not null then to_char(pcm.death_date, ''DD/MM/YYYY'') else null end as "Death Date",
death_reason.value as "Death Reason", 
place_of_death.name as "Place Of Death",
pcm.other_death_reason as "Other Death Reason"
from rch_pnc_child_master pcm 
inner join imt_member mem on pcm.child_id = mem.id
left join dang_sign on dang_sign.child_pnc_id = pcm.id
left join listvalue_field_value_detail death_reason on cast(pcm.death_reason as bigint) = death_reason.id
left join const place_of_death on place_of_death.const = pcm.place_of_death
where pnc_master_id  = #visitId#',true,'ACTIVE',NULL,true,'0a4202c0-6fe6-4475-996e-ed1b840f5ad6'),
	 (84954,'2021-06-10 00:00:00',84954,'2021-06-10 00:00:00','dr_techo_retrieve_by_mobile_number_1','mobileNumber','select id as "memberId",
unique_health_id as "uniqueHealthId",
family_id as "familyId",
first_name as "firstName",
middle_name as "middleName",
last_name as "lastName",
gender,
dob,
mobile_number as "mobileNumber",
marital_status as "maritalStatus"
from imt_member where family_id in (select family_id from imt_member where mobile_number = #mobileNumber#)
and dob > now()-interval ''5 years''
and ((basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')) or (state = ''com.argusoft.imtecho.member.state.temporary''))',true,'ACTIVE',NULL,true,'56706199-6d4b-4ae5-a95f-0a9ffd823f98'),
	 (409,'2020-04-20 00:00:00',409,'2020-04-20 00:00:00','dr_techo_insert_covid_beneficary_detail','is_travel,gender,is_shortness_of_breath,travel_details,is_cough,is_fever,pincode,travel_to,address,is_sari,travel_date,created_by,other_symtoms,is_respiratory_issue,travel_mode,travel_from,contact_with_other_traveler,name,suggest_covid_test,is_travel_from_other_country,district_id,mobile_number,age,country_id,in_contact_with_covid19_paitent','INSERT INTO covid_travellers_info
("name", address, pincode, is_active, age, gender, country, mobile_number,
status, input_type, is_cough, is_fever,is_sari, is_shortness_of_breath, is_respiratory_issue,
other_symptoms, travel_date, is_travel_from_other_country, created_by, created_on, modified_by,
modified_on,travel_from,travel_to,travel_details,travel_mode,suggest_covid_test,contact_with_other_traveler,in_contact_with_covid19_paitent,is_travel,district_id)
VALUES(''#name#''
, (case when ''#address#'' = ''null'' then null else ''#address#'' end)
, (case when #pincode# = null then 0 else #pincode# end)
,true
,(case when ''#age#'' = ''null'' then null else #age# end)
,(case when ''#gender#'' = ''null'' then null else ''#gender#'' end)
,(select value from listvalue_field_value_detail where id = #country_id#)
,(case when ''#mobile_number#'' = ''null'' then null else ''#mobile_number#'' end)
,''ACTIVE''
,''DR_TECHO''
,(case when ''#is_cough#'' = ''null'' then cast(null as boolean) else #is_cough# end)
,(case when ''#is_fever#'' = ''null'' then cast(null as boolean) else #is_fever# end)
,(case when ''#is_sari#'' = ''null'' then cast(null as boolean) else #is_sari# end)
,(case when ''#is_shortness_of_breath#'' = ''null'' then cast(null as boolean) else #is_shortness_of_breath# end)
,(case when ''#is_respiratory_issue#'' = ''null'' then cast(null as boolean) else #is_respiratory_issue# end)
,(case when ''#other_symtoms#'' = ''null'' then null else ''#other_symtoms#'' end)
,(case when ''#travel_date#'' = ''null'' then null else cast(case when ''#travel_date#'' = ''null'' then null else ''#travel_date#'' end  as timestamp)  end)
,(case when ''#is_travel_from_other_country#'' = ''null'' then cast(null as boolean) else #is_travel_from_other_country# end)
,(case when ''#created_by#'' = ''null'' then null else #created_by# end)
,now()
,(case when ''#created_by#'' = ''null'' then null else #created_by# end)
,now()
,(case when ''#travel_from#'' = ''null'' then null else ''#travel_from#'' end)
,(case when ''#travel_to#'' = ''null'' then null else ''#travel_to#'' end)
,(case when ''#travel_details#'' = ''null'' then null else ''#travel_details#'' end)
,(case when ''#travel_mode#'' = ''null'' then null else ''#travel_mode#'' end)
,(case when ''#suggest_covid_test#'' = ''null'' then cast(null as boolean) else #suggest_covid_test# end)
,(case when ''#contact_with_other_traveler#'' = ''null'' then cast(null as boolean) else #contact_with_other_traveler# end)
,(case when ''#in_contact_with_covid19_paitent#'' = ''null'' then null else ''#in_contact_with_covid19_paitent#'' end)
,(case when ''#is_travel#'' = ''null'' then cast(null as boolean) else #is_travel# end)
,(case when ''#district_id#'' = ''null'' then null else #district_id# end)
);',false,'ACTIVE',NULL,true,'8a1cd793-e90d-4074-8124-4510ef7b39bd'),
	 (74841,'2020-04-17 00:00:00',74841,'2020-04-17 14:27:03.944','state_of_health_covid_today_test','offset,limit,location_id,search_text','with analytics as(
select 
concat_ws(''/'', member_det, (case when caad.gender = ''F'' then ''F'' else ''M'' end), age, 
SUBSTRING(case when hid.name_in_english is null then hid.name else hid.name_in_english end from 1 for 10), 
case when mobidity != '''' then mobidity else  ''-'' end) as "primaryVal_Member Details",
m.unique_health_id as "uniqueHealthId",
caad.member_id as member_id,
m.family_id as family_id,
caad.contact_number as "primaryVal_mobile_Contact Number",
caad.address as "primaryVal_Address",
case when admission_date is not null then to_char(caad.admission_date,''DD/MM/YYYY'') else ''-'' end as "primaryVal_Admission Date",
case when last_lab_result_entry_on is not null then to_char(caad.last_lab_result_entry_on,''DD/MM/YYYY'') else ''-'' end as "Last Lab Test date",
health_state as "val_Current Status",
case when death_date is not null then to_char(caad.death_date,''DD/MM/YYYY'') else null end as "val_Death Date",
case_no as  "val_Case No",
caad.location_id as loc_id
from covid19_admission_analytics_details caad
left join imt_member m on m.id = caad.member_id
left join health_infrastructure_details hid on hid.id = caad.health_infra_id
where caad.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and cast( last_test_before_admission  as date) = cast(now() as date)
and case when ''#search_text#'' = ''null'' then true else case when caad.search_text ilike ''%#search_text#%'' then true else false end end
order by caad.admission_id desc
limit #limit# offset #offset#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id 
	where family_head = true and 
        im.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'',''TEMPORARY'')
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName"
--case when a.is_any_illness_or_discomfort then ''Yes'' when a.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort"

from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join contact_person cp on cp.member_id = a.member_id',true,'ACTIVE',NULL,true,'b031807e-d875-4619-a8fb-6f08d5e5925a'),
	 (74841,'2020-04-17 00:00:00',66522,'2020-04-17 01:01:27.323','state_of_health_covid_total_test','offset,limit,location_id,search_text','with analytics as(
select 
concat_ws(''/'', member_det, (case when caad.gender = ''F'' then ''F'' else ''M'' end), age, 
SUBSTRING(case when hid.name_in_english is null then hid.name else hid.name_in_english end from 1 for 10), 
case when mobidity != '''' then mobidity else  ''-'' end) as "primaryVal_Member Details",
m.unique_health_id as "uniqueHealthId",
caad.member_id as member_id,
m.family_id as family_id,
caad.contact_number as "primaryVal_mobile_Contact Number",
caad.address as "primaryVal_Address",
case when admission_date is not null then to_char(caad.admission_date,''DD/MM/YYYY'') else ''-'' end as "primaryVal_Admission Date",
case when lab_result_entry_on is not null then to_char(lab_result_entry_on,''DD/MM/YYYY'') else ''-'' end as "Lab Test date",
health_state as "val_Current Status",
case when death_date is not null then to_char(caad.death_date,''DD/MM/YYYY'') else null end as "val_Death Date",
case_no as  "val_Case No",
caad.location_id as loc_id
from covid19_admission_analytics_details caad
inner join covid19_lab_test_detail cltd on cltd.covid_admission_detail_id = caad.admission_id
left join imt_member m on m.id = caad.member_id
left join health_infrastructure_details hid on hid.id = caad.health_infra_id
where caad.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#) and lab_result_entry_on is not null
and case when ''#search_text#'' = ''null'' then true else case when caad.search_text ilike ''%#search_text#%'' then true else false end end
order by caad.admission_id desc
limit #limit# offset #offset#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id 
	where family_head = true and 
        im.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'',''TEMPORARY'')
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName"
--case when a.is_any_illness_or_discomfort then ''Yes'' when a.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort"

from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join contact_person cp on cp.member_id = a.member_id',true,'ACTIVE',NULL,true,'7938f57f-558b-4c14-b91a-79928fb02869'),
	 (74841,'2020-04-17 00:00:00',66522,'2020-04-20 12:31:00.202','state_of_health_covid_stable','offset,limit,location_id,health_infra_id,search_text','with analytics as(
select 
concat_ws(''/'', member_det, (case when caad.gender = ''F'' then ''F'' else ''M'' end), age, 
SUBSTRING(case when hid.name_in_english is null then hid.name else hid.name_in_english end from 1 for 10), 
case when mobidity != '''' then mobidity else  ''-'' end) as "primaryVal_Member Details",
m.unique_health_id as "uniqueHealthId",
caad.member_id as member_id,
m.family_id as family_id,
caad.contact_number as "primaryVal_mobile_Contact Number",
caad.address as "primaryVal_Address",
case when last_lab_result_entry_on is not null then to_char(caad.last_lab_result_entry_on,''DD/MM/YYYY'') else ''-'' end as "Last Lab Test date",
health_state as "val_Current Status",
-- discharge_date as "val_Discharge Date",
-- case when death_date is not null then to_char(caad.death_date,''DD/MM/YYYY'') else null end as "val_Death Date"
case_no as  "val_Case No",
caad.location_id as loc_id
from covid19_admission_analytics_details caad
left join imt_member m on m.id = caad.member_id
left join health_infrastructure_details hid on hid.id = caad.health_infra_id
where case when ''#health_infra_id#'' != ''null'' then caad.health_infra_id = #health_infra_id# else 
caad.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#) end 
and positive_member = 1 and cad_status not in (''DISCHARGE'',''DEATH'')  and health_state in(''Stable'',''Stable-Moderate'')
and case when ''#search_text#'' = ''null'' then true else case when caad.search_text ilike ''%#search_text#%'' then true else false end end
order by caad.admission_id desc
limit #limit# offset #offset#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id 
	where family_head = true and 
        im.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'',''TEMPORARY'')
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName"
--case when a.is_any_illness_or_discomfort then ''Yes'' when a.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort"

from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join contact_person cp on cp.member_id = a.member_id',true,'ACTIVE',NULL,true,'923566a2-0f99-4840-9ea3-5409e2f23d0b'),
	 (74841,'2020-04-17 00:00:00',74841,'2020-04-17 14:35:05.7','state_of_health_covid_today_recovered','offset,limit,location_id,search_text','with analytics as(
select 
concat_ws(''/'', member_det, (case when caad.gender = ''F'' then ''F'' else ''M'' end), age, 
SUBSTRING(case when hid.name_in_english is null then hid.name else hid.name_in_english end from 1 for 10), 
case when mobidity != '''' then mobidity else  ''-'' end) as "primaryVal_Member Details",
m.unique_health_id as "uniqueHealthId",
caad.member_id as member_id,
m.family_id as family_id,
caad.contact_number as "primaryVal_mobile_Contact Number",
caad.address as "primaryVal_Address",
case when admission_date is not null then to_char(caad.admission_date,''DD/MM/YYYY'') else ''-'' end as "primaryVal_Admission Date",
case when last_lab_result_entry_on is not null then to_char(caad.last_lab_result_entry_on,''DD/MM/YYYY'') else ''-'' end as "Last Lab Test date",
health_state as "Current Status",
case when discharge_date is not null then to_char(caad.discharge_date,''DD/MM/YYYY'') else null end as "val_Discharge Date",
case when death_date is not null then to_char(caad.death_date,''DD/MM/YYYY'') else null end as "val_Death Date",
case_no as  "val_Case No",
caad.location_id as loc_id
from covid19_admission_analytics_details caad
left join imt_member m on m.id = caad.member_id
left join health_infrastructure_details hid on hid.id = caad.health_infra_id
where caad.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and positive_member = 1 and  cad_status = ''DISCHARGE'' and cast(discharge_date as date) = cast(now() as date)
and case when ''#search_text#'' = ''null'' then true else case when caad.search_text ilike ''%#search_text#%'' then true else false end end
order by caad.discharge_date desc
limit #limit# offset #offset#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id 
	where family_head = true and 
        im.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'',''TEMPORARY'')
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName"
--case when a.is_any_illness_or_discomfort then ''Yes'' when a.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort"

from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join contact_person cp on cp.member_id = a.member_id',true,'ACTIVE',NULL,true,'b301bdb5-4495-4e41-8935-0ae86d47c1cb'),
	 (60512,'2021-09-21 00:00:00',60512,'2021-09-21 00:00:00','update_je_vaccine_given_dates_in_batch','je1GivenDate,loggedInUserId,id,batchId','update rch_je_vaccine_service
set je1_given_date = case when #je1GivenDate# is not null then to_date(#je1GivenDate#,''DD/MM/YYYY'') else je1_given_date end,
batch_id = #batchId#,
modified_by = #loggedInUserId#,
modified_on = now()
where id = #id#;',false,'ACTIVE',NULL,true,'81ad7782-d547-4686-b176-5c1be13af0f3'),
	 (74909,'2020-04-17 00:00:00',74909,'2020-04-17 00:00:00','covid19_fetch_patients_admitted_more_than_15_days','days,to_days','select
member_det as "name",
caad.health_state as "healthState",
age as "age",
case when gender = ''F'' then ''Female'' else ''Male'' end as "gender",
case when hid.name_in_english is null then hid.name else hid.name_in_english end as "facility",
im.english_name as "area",
case when dob is null then ''-'' else to_char(dob,''DD-MM-YYYY'') end as "dob",
case when admission_date is null then ''-'' else to_char(admission_date,''DD-MM-YYYY'') end as "admission_date",
caad.address as address ,
caad.mobidity as "morbidities"
from covid19_admission_analytics_details caad
left join location_master im on im.id = caad.location_id
left join health_infrastructure_details hid on hid.id = caad.health_infra_id
where positive_member = 1
and cast(now() as date) - cast( admission_date as date) between #days# and #to_days# and cad_status not in (''DISCHARGE'',''DEATH'');',true,'ACTIVE',NULL,true,'ca246c17-1fb2-4db4-a460-8288a761dc32'),
	 (1,'2020-04-23 00:00:00',1,'2020-04-23 00:00:00','opd_search_by_opd_member_registration_id','opdMemberRegistrationId,userId','
    with maxDeliveryDateOfMember as (
		select
		rwmm.member_id,
		max(rwmm.date_of_delivery) as max_delivery_date
		from
		rch_wpd_mother_master rwmm
		where
		rwmm.member_id in (select member_id from rch_opd_member_registration where id = #opdMemberRegistrationId#)
		and rwmm.has_delivery_happened is true
		group by rwmm.member_id
	)
    select
    im.id as "memberId",
    im.unique_health_id as "uniqueHealthId",
    if.family_id as "familyId",
    im.mobile_number as "mobileNumber",
    concat(im.first_name, '' '', im.middle_name, '' '', im.last_name) as "name",
    im.dob as "dob",
    cast(age(im.dob) as text) as "age",
    get_location_hierarchy(if.location_id) as "locationHierarchy",
    concat(uu1.first_name, '' '', uu1.middle_name, '' '', uu1.last_name) as "ashaName",
    uu1.contact_number as "ashaContactNumber",
    uu1.techo_phone_number as "ashaTechoContactNumber",
    concat(uu2.first_name, '' '', uu2.middle_name, '' '', uu2.last_name) as "anmName",
    uu2.contact_number as "anmContactNumber",
    uu2.techo_phone_number as "anmTechoContactNumber",
    im.is_pregnant as "isPregnant",
    cast(mddom.max_delivery_date as date) as "lastDeliveryDate",
    case
		when mddom.max_delivery_date is null then false
		when current_date - cast(mddom.max_delivery_date as date) <= 45 then true
		else false
	end as "hasDeliveryHappenedInLast45Days",
	case
		when nmdd1.status = ''NO_ABNORMALITY'' then ''No Abnormality''
		when nmdd1.status = ''TREATMENT_STARTED'' then ''Positive and Treatment Started''
		when nmdd1.status in (''CONFIRMED'', ''REFERRED'') then ''Positive''
		else ''N/A''
	end as "hypertensionStatus",
	case
		when nmdd2.status = ''NO_ABNORMALITY'' then ''No Abnormality''
		when nmdd2.status = ''TREATMENT_STARTED'' then ''Positive and Treatment Started''
		when nmdd2.status in (''CONFIRMED'', ''REFERRED'') then ''Positive''
		else ''N/A''
	end as "diabetesStatus",
	romr.health_infra_id as "healthInfraId",
    romr.location_id as "locationId",
	hid.name as "healthInfraName",
	hid."type" as "healthInfraType"
	from rch_opd_member_registration romr
    inner join imt_member im on romr.member_id = im.id
    inner join imt_family if on im.family_id = if.family_id
    left join um_user_location uul1 on uul1.loc_id = if.area_id and uul1.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul1.user_id and state = ''ACTIVE'') = 24
    left join um_user uu1 on uu1.id = uul1.user_id
    left join um_user_location uul2 on uul2.loc_id = if.location_id and uul2.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul2.user_id and state = ''ACTIVE'') = 30
    left join um_user uu2 on uu2.id = uul2.user_id
    left join maxDeliveryDateOfMember mddom on mddom.member_id = im.id
    left join ncd_member_diseases_diagnosis nmdd1 on nmdd1.member_id = im.id and nmdd1.disease_code = ''HT''
    left join ncd_member_diseases_diagnosis nmdd2 on nmdd2.member_id = im.id and nmdd2.disease_code = ''D''
    left join health_infrastructure_details hid on hid.id = romr.health_infra_id
    where romr.id = #opdMemberRegistrationId#
    -- and cast(romr.registration_date as date) = current_date
    -- and im.basic_state in (''NEW'', ''VERIFIED'', ''REVERIFICATION'', ''TEMPORARY'', ''UNHANDLED'')
    and romr.health_infra_id in (select health_infrastrucutre_id from user_health_infrastructure uhi where user_id = #userId# and state = ''ACTIVE'')
',true,'ACTIVE','OPD Search By OPD Member Registration ID',true,'788d183c-7db9-417c-a217-6a8fad160857'),
	 (74841,'2020-04-17 00:00:00',66522,'2020-04-17 01:02:01.567','state_of_health_covid_total_positive_case','offset,limit,location_id,health_infra_id,search_text','with analytics as(
select 
concat_ws(''/'', member_det, (case when caad.gender = ''F'' then ''F'' else ''M'' end), age, 
SUBSTRING(case when hid.name_in_english is null then hid.name else hid.name_in_english end from 1 for 10), 
case when mobidity != '''' then mobidity else  ''-'' end) as "primaryVal_Member Details",
m.unique_health_id as "uniqueHealthId",
caad.member_id as member_id,
m.family_id as family_id,
caad.contact_number as "primaryVal_mobile_Contact Number",
caad.address as "primaryVal_Address",
case when admission_date is not null then to_char(caad.admission_date,''DD/MM/YYYY'') else ''-'' end as "primaryVal_Admission Date",
case when last_lab_result_entry_on is not null then to_char(caad.last_lab_result_entry_on,''DD/MM/YYYY'') else ''-'' end as "Last Lab Test date",
health_state as "val_Current Status",
case when discharge_date is not null then to_char(caad.discharge_date,''DD/MM/YYYY'') else null end as "val_Discharge Date",
case when death_date is not null then to_char(caad.death_date,''DD/MM/YYYY'') else null end as "val_Death Date",
case_no as  "val_Case No",
caad.location_id as loc_id
from covid19_admission_analytics_details caad
left join imt_member m on m.id = caad.member_id
left join health_infrastructure_details hid on hid.id = caad.health_infra_id
where case when ''#health_infra_id#'' != ''null'' then caad.health_infra_id = #health_infra_id# else 
caad.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#) end
and positive_member = 1
and case when ''#search_text#'' = ''null'' then true else case when caad.search_text ilike ''%#search_text#%'' then true else false end end
order by caad.admission_date desc
limit #limit# offset #offset#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id 
	where family_head = true and 
        im.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'',''TEMPORARY'')
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName"
--case when a.is_any_illness_or_discomfort then ''Yes'' when a.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort"

from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join contact_person cp on cp.member_id = a.member_id',true,'ACTIVE',NULL,true,'611c355a-8b62-4c5e-8b8f-abe91d8a3776'),
	 (1,'2020-03-19 00:00:00',66522,'2020-04-23 17:58:52.679','state_of_health_data_retrieval_12','locationId,element_name,timeline_type','with elements_details as (
       select lt.level,lt.type,closer.child_id as "locationId",
        case when lt.type =''C'' or lt.type =''D'' then ''Districts/Corporation'' else lt.name end as "locationType",
        case when l.english_name is not null then l.english_name else l.name end as english_name,
 cast(''#element_name#'' as  text) as "elementName",
        value as value,sh.target,male as male,female as female,
        chart1 as chart1,chart2 as chart2,chart3 as chart3,chart4 as chart4,
chart5 as chart5,
chart6 as chart6,
chart7 as chart7,
chart8 as chart8,
chart9 as chart9,
chart10 as chart10,
chart11 as chart11,
chart12 as chart12,
chart13 as chart13,
chart14 as chart14,
chart15 as chart15,
        cast(''#timeline_type#'' as text) as timeline_type,
        days as days,
        reporting as reporting,
        calculatedTarget as calculatedTarget,
        color as color,
        percentage as percentage,
        case when sortPriority is null then 0 else sortPriority end as "sortPriority",
        displayValue as displayValue
        from location_hierchy_closer_det closer
        inner join location_master l on closer.child_id = l.id
        inner join location_type_master lt on l.type = lt.type
        left join soh_element_configuration config on config.element_name = ''#element_name#''
        left join soh_timeline_analytics_temp sh on sh.location_id = closer.child_id and config.element_name = sh.element_name
        --inner join location_hierchy_closer_det closer on closer.parent_id = 2 and depth=case when 2 = 2 then 2 else 1 end and timeline_type = ''#timeline_type#''
	and timeline_type = ''#timeline_type#''
        where closer.parent_id = ''#locationId#'' and depth=case when #locationId# = 2 then 2 else 1 end
	--and timeline_sub_type=''PERIOD''
        order by english_name),
unique_locations as (
        select distinct "locationId" from elements_details
        ),
user_details_ids as (
        select uul.loc_id as location_id, concat(uu.first_name,'' '',uu.middle_name,'' '', uu.last_name)
				 as "userName",
				 case when uu.role_id = 39 then ''CDHO''
				when uu.role_id = 41 then ''THO''
				when uu.role_id = 66 then ''MO PHC''
when uu.role_id = 86 then ''MO UPHC''

				when uu.role_id = 67 then ''MO AYUSH''
				when uu.role_id = 63 then ''RCHO''
                                when uu.role_id = 85 then ''MOH Co.''
				when uu.role_id = 99 then ''RCHO Co.''
				when uu.role_id = 204 then ''MPHW''
				when uu.role_id = 30 then ''FHW''
				when uu.role_id = 24 then ''ASHA''
				when uu.role_id = 108 then ''DHO''
                                when uu.role_id = 179 then ''CHO-HWC''
				else ''(Other)'' end as "roleName",
				uu.contact_number as "contactNumber",
				uu.id as user_id
        from unique_locations elements
        inner join um_user_location uul on elements."locationId" = uul.loc_id
        inner join um_user uu on uu.id = uul.user_id
        inner join location_master lm on lm.id =  uul.loc_id
        where uul.state=''ACTIVE''
        and uu.state=''ACTIVE''
	and uu.role_id in (39,41,67,66,63,85,99,204,24,108,30,86,179)
),
remaining_user_data as (
	select "locationId" as location_id,
	cast(''-'' as text) as "userName",
	t.roleName,
	cast(''-'' as text) as "contactNumber",
	cast(0 as numeric) as "user_id"

	from unique_locations
	inner join location_master lm on lm.id = "locationId"
	inner join (
	select ''C'' as type_id, unnest(array[''MOH Co.'', ''RCHO Co.'']) as roleName
	union all
	select ''D'' as type_id, unnest(array[''CDHO'', ''RCHO'']) as roleName
	union all
	select ''B'' as type_id, ''THO'' as roleName
	union all
	select ''Z'' as type_id, ''DHO'' as roleName
	union all
	select ''P'' as type_id, unnest(array[''MO PHC'', ''MO AYUSH'']) as roleName
	union all
	select ''U'' as type_id, unnest(array[''MO UPHC'', ''MO AYUSH'']) as roleName
	union all
	select ''V'' as type_id, unnest(array[''FHW'',''MPHW'']) as roleName
	union all
	select ''ANG'' as type_id, unnest(array[''FHW'',''MPHW'']) as roleName
	union all
	select ''SC'' as type_id, unnest(array[''CHO-HWC'']) as roleName
	union all
--select ''ANM'' as type_id, unnest(array[''CHO-HWC'']) as roleName
	--union all
	select ''A'' as type_id, unnest(array[''ASHA'']) as roleName
	union all
	select ''AA'' as type_id, unnest(array[''ASHA'']) as roleName
	) as t on t.type_id = lm."type"
),
remaining_user_data_1 as (
	select users.*
	from remaining_user_data remains
	left join user_details_ids users  on users.location_id = remains.location_id
	and users."roleName"  = remains.roleName
	where users.user_id is not null
	union
	select remains.*
        from remaining_user_data remains
	left join user_details_ids users  on users.location_id = remains.location_id
	and users."roleName"  = remains.roleName
	where users.user_id is null
),
user_details as (
	       select
	       cast(array_to_json(array_agg(row_to_json(ud.*))) as text) as user_name,ud.location_id
	       from remaining_user_data_1 ud
	       group by ud.location_id
)
select elements.*,
case when users.user_name is null then null else users.user_name end as  "userDetail"
from elements_details elements
--inner join calculations cal on cal."locationId" = elements."locationId"
left join user_details users on elements."locationId" = users.location_id',true,'ACTIVE',NULL,true,'31cb836f-661b-452d-9924-7ec7b870b947'),
	 (1,'2020-02-17 18:49:00.084',80208,'2020-03-27 12:13:44.657','retrieve_team_with_members_by_id','teamId','with team as (
	select id , tm.team_type_id ,tm.name, tm.state from team_master tm where id = #teamId# and state=''ACTIVE''
) ,
teams_locations as (
select team.* , tlm.location_id from team inner join team_location_master tlm on team.id = tlm.team_id  and tlm.state =''ACTIVE''
)
,
location_subloc as (
	select lhcd.parent_id , lhcd.child_id  from location_hierchy_closer_det lhcd where lhcd.child_id in (select location_id from teams_locations)  order by lhcd.depth desc
)
,
location_fullname as(
	select ls.child_id as location_id ,string_agg(lm.name , ''>'')  as "locationFullName" from location_subloc ls inner join location_master lm on lm.id = ls.parent_id group by ls.child_id 
),
location_detail as (
	select lm.id , lm.name, lm.type from location_master lm inner join teams_locations on teams_locations.location_id = lm.id
)
,
team_location_dto as (
	select teams_locations.id ,
	cast (json_agg(json_build_object(''locationFullName'',location_fullname."locationFullName",''name'',location_detail.name, ''id'',location_detail.id ,''locationId'',location_detail.id)) as text ) as locations
	from teams_locations inner join location_fullname on location_fullname.location_id = teams_locations.location_id 
	inner join  location_detail on location_detail.id =  teams_locations.location_id group by teams_locations.id
)
,
team_members_dto as (
	select tm.id, tm.name ,cast(jsonb_build_object(''id'', ttm.id, ''type'',ttm.type,''state'',ttm.state ) as text) as "teamType",
	cast(json_agg(json_build_object(''id'',uu.id ,''firstName'', uu.first_name,''lastName''  ,
			uu.last_name,''userName'' ,uu.user_name ,''middleName'',uu.middle_name ,''roleId'',
			uu.role_id,''roleName'' ,urm.name )
			) as text) as users 
	from team_master tm  
	inner join team_type_master ttm on ttm.id = tm.team_type_id 
	inner join team_member_det tmd on tm.id = tmd.team_id 
	inner join um_user uu on uu.id = tmd.user_id 
	inner join um_role_master urm on urm.id = uu.role_id where tmd.state = ''ACTIVE'' and tm.id = #teamId# group by tm.id , ttm.id 
)
select team_members_dto.* , team_location_dto.locations from team_members_dto inner join team_location_dto on team_location_dto.id = team_members_dto.id;',true,'ACTIVE',NULL,true,'60490241-bb80-43a3-901f-8d7cfbeaa5a4'),
	 (74841,'2020-04-17 00:00:00',74841,'2020-04-17 14:39:10.966','state_of_health_covid_total_recover_case','offset,limit,location_id,health_infra_id,search_text','with analytics as(
select 
concat_ws(''/'', member_det, (case when caad.gender = ''F'' then ''F'' else ''M'' end), age, 
SUBSTRING(case when hid.name_in_english is null then hid.name else hid.name_in_english end from 1 for 10), 
case when mobidity != '''' then mobidity else  ''-'' end) as "primaryVal_Member Details",
m.unique_health_id as "uniqueHealthId",
caad.member_id as member_id,
m.family_id as family_id,
caad.contact_number as "primaryVal_mobile_Contact Number",
caad.address as "primaryVal_Address",
case when admission_date is not null then to_char(caad.admission_date,''DD/MM/YYYY'') else ''-'' end as "primaryVal_Admission Date",
case when last_lab_result_entry_on is not null then to_char(caad.last_lab_result_entry_on,''DD/MM/YYYY'') else ''-'' end as "Last Lab Test date",
health_state as "Current Status",
case when discharge_date is not null then to_char(caad.discharge_date,''DD/MM/YYYY'') else null end as "val_Discharge Date",
case when death_date is not null then to_char(caad.death_date,''DD/MM/YYYY'') else null end as "val_Death Date",
case_no as  "val_Case No",
caad.location_id as loc_id
from covid19_admission_analytics_details caad
left join imt_member m on m.id = caad.member_id
left join health_infrastructure_details hid on hid.id = caad.health_infra_id
where case when ''#health_infra_id#'' != ''null'' then caad.health_infra_id = #health_infra_id# else 
caad.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#) end
and positive_member = 1 and discharge_date is not null and caad.cad_status = ''DISCHARGE''
and case when ''#search_text#'' = ''null'' then true else case when caad.search_text ilike ''%#search_text#%'' then true else false end end
order by caad.discharge_date desc
limit #limit# offset #offset#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id 
	where family_head = true and 
        im.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'',''TEMPORARY'')
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName"
--case when a.is_any_illness_or_discomfort then ''Yes'' when a.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort"

from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join contact_person cp on cp.member_id = a.member_id',true,'ACTIVE',NULL,true,'bd1db288-55cf-4ebe-921a-ea9f96f5b811'),
	 (74841,'2020-04-17 00:00:00',66522,'2020-04-20 12:28:59.798','state_of_health_covid_critical','offset,limit,location_id,health_infra_id,search_text','with analytics as(
select
concat_ws(''/'', member_det, (case when caad.gender = ''F'' then ''F'' else ''M'' end), age,
SUBSTRING(case when hid.name_in_english is null then hid.name else hid.name_in_english end from 1 for 10),
case when mobidity != '''' then mobidity else  ''-'' end) as "primaryVal_Member Details",
m.unique_health_id as "uniqueHealthId",
caad.member_id as member_id,
m.family_id as family_id,
caad.contact_number as "primaryVal_mobile_Contact Number",
caad.address as "primaryVal_Address",
case when admission_date is not null then to_char(caad.admission_date,''DD/MM/YYYY'') else ''-'' end as "primaryVal_Admission Date",
case when last_lab_result_entry_on is not null then to_char(caad.last_lab_result_entry_on,''DD/MM/YYYY'') else ''-'' end as "Last Lab Test date",
health_state as "val_Current Status",
-- discharge_date as "val_Discharge Date",
case when death_date is not null then to_char(caad.death_date,''DD/MM/YYYY'') else null end as "val_Death Date",
case_no as  "val_Case No",
caad.location_id as loc_id
from covid19_admission_analytics_details caad
left join imt_member m on m.id = caad.member_id
left join health_infrastructure_details hid on hid.id = caad.health_infra_id
where case when ''#health_infra_id#'' != ''null'' then caad.health_infra_id = #health_infra_id# else
caad.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#) end
and positive_member = 1 and cad_status not in (''DISCHARGE'',''DEATH'')  and health_state = ''Critical''
and case when ''#search_text#'' = ''null'' then true else case when caad.search_text ilike ''%#search_text#%'' then true else false end end
order by caad.admission_id desc
limit #limit# offset #offset#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id
	where family_head = true and
        im.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'',''TEMPORARY'')
),
contact_person as (
	select distinct a.member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo
	from imt_member im
	inner join analytics a on a.family_id = im.family_id
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName"
--case when a.is_any_illness_or_discomfort then ''Yes'' when a.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort"

from analytics a
left join family_head fh on a.member_id = fh.member_id
left join contact_person cp on cp.member_id = a.member_id',true,'ACTIVE',NULL,true,'f83234e9-b530-4e9c-9037-c2334bd512ab'),
	 (1,'2020-04-30 00:00:00',NULL,NULL,'cmtc_nrc_organization_unit_search','locationId,limit,offSet','
with members as (
	select
	imt_member.id,
	imt_member.first_name,
	imt_member.middle_name,
	imt_member.last_name,
	imt_member.dob as dob,
	imt_family.location_id
	from imt_member
	inner join imt_family on imt_member.family_id = imt_family.family_id
	inner join location_hierchy_closer_det on location_hierchy_closer_det.child_id = imt_family.location_id
	and location_hierchy_closer_det.parent_id = #locationId#
	where imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')
	and imt_member.dob between (current_date - interval ''60 months'') and (current_date)
	limit #limit# offset #offSet#
)
select members.id,members.first_name as "firstName",members.middle_name as "middleName",members.last_name as "lastName",
string_agg(l.name,''>'' order by lhcd.depth desc) as "locationHierarchy"
from members inner join location_master dl on  members.location_id = dl.id
inner join location_hierchy_closer_det lhcd on lhcd.child_id = dl.id
inner join location_master l on l.id = lhcd.parent_id
group by dl.id, members.id, members.first_name,members.middle_name,members.last_name,members.dob,members.location_id
',true,'ACTIVE',NULL,true,'3d525f3c-86ce-446f-a07e-deb37f2d6933'),
	 (60512,'2020-11-23 00:00:00',60512,'2021-01-07 19:04:56.735','cm_dashboard_expected_delivery_target_report','financialYear','-----------cm_dashboard_expected_delivery_target_report------
select dist.location_code as "DCODE",
	block.location_code as "Tcode",
	dist.english_name as "District",
	block.english_name as "Taluka",
	phc.english_name as "Phc",
	coalesce(cmetd.expected_mother_reg, 0) as "Expected_Mthr_Reg",
	coalesce(cmetd.expected_delivery_reg, 0) as "Expected_Del_Reg",
	coalesce(cmetd.ela_dpt_opv_mes_vita_1dose, 0) as "ELA_DPT_OPV_Mes_VitA_1Dose",
	dist.type as "District_Corp"

from location_master as phc
inner join location_master as block
on phc.parent = block.id
inner join location_master as dist
on dist.id = block.parent
left join location_wise_expected_target cmetd on
cmetd.location_id = phc.id and cmetd.financial_year = ''#financialYear#''
where
 phc.type in (''P'',''U'')
and phc.name not ilike ''%delete%''
and block.name not ilike ''%delete%''
and dist.name not ilike ''%delete%''',true,'ACTIVE','To get data for CM dashboard expected delivery target report',true,'2a18be02-3dd5-46bb-ba27-5836b6922259'),
	 (60512,'2020-04-16 00:00:00',409,'2020-04-17 09:12:43.299','covid19_lab_test_retrieve_result_confirmed_list_all','searchText,loggedInUserId','with idsp_screening as (
select
	clt.id as "id",
	ltd.id as lab_id,
	ltd.lab_test_number as lab_test_number,
	ltd.indeterminate_marked_date as indeterminate_date,
	ltd.lab_test_id as lab_test_id,
	ltd.lab_result as lab_result,
	clt.location_id as loc_id,
	imt_member.id as member_id,
	case when clt.member_id is null
		then concat_ws('' '',clt.first_name,clt.middle_name,clt.last_name)
		else concat(concat_ws('' '',imt_member.first_name,imt_member.middle_name,imt_member.last_name)
			, '' ('' , imt_member.unique_health_id , '')'' , ''<br>'' , imt_member.family_id) end as member_det,
	concat(case when clt.member_id is null
		then cast(clt.age as text)
		else cast(EXTRACT(YEAR FROM age(imt_member.dob)) as text) end,'' Year'') as age,
	to_char(clt.admission_date,''DD/MM/YYYY'') as admission_date,
	hiwd.ward_name,
	sample_from.name_in_english as sample_from_health_infra,
	sample_from.is_covid_lab,
	clt.current_ward_id as ward_id,
	cacd.on_ventilator as on_ventilator,
	cacd.ventilator_type1 as ventilator_type1,
	cacd.ventilator_type2 as ventilator_type2,
	cacd.on_o2 as on_o2,
	cacd.on_air as on_air,
	cacd.remarks as remarks,
	clt.is_hiv as hiv,
	clt.current_bed_no,
	cacd.health_status as health_status,
	cacd.service_date as last_check_up_time
	from covid19_lab_test_detail ltd
	inner join covid19_admission_detail clt on ltd.covid_admission_detail_id = clt.id
	left join health_infrastructure_ward_details hiwd on hiwd.id = clt.current_ward_id
	inner join covid19_admitted_case_daily_status cacd on cacd.id = clt.last_check_up_detail_id
	left join health_infrastructure_details sample_from on sample_from.id = ltd.sample_health_infra
	left join imt_member on clt.member_id = imt_member.id
	left join imt_family on imt_member.family_id = imt_family.family_id
	where
	ltd.sample_health_infra_send_to = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = ''#loggedInUserId#'' and uhi.state = ''ACTIVE'')
	and clt.status not in (''DISCHARGED'',''DEAD'',''REFER'') and ltd.lab_collection_status in (''POSITIVE'',''NEGATIVE'')
	and lab_result not like ''%_temp''
	and case when ''#searchText#'' != ''null'' and ''#searchText#'' != '''' then ltd.search_text ilike ''%#searchText#%'' else true end
	and ltd.is_archive is not true
	order by ltd.result_server_date
)
select
id as "admissionId"
,lab_id as "labCollectionId"
,lab_test_number as "labTestNumber"
,indeterminate_date as "indeterminateDate"
,lab_test_id as "labTestId"
,lab_result as "labResult"
,member_id as "memberId"
,loc_id as "locationId"
,member_det as "memberDetail"
,age as "age"
,admission_date as "admissionDate"
,ward_name as "wardName"
,ward_id as "wardId"
,current_bed_no as "bedNumber"
,health_status as "healthStatus"
,to_char(last_check_up_time,''DD/MM/YYYY'') as "lastCheckUpTime"
,on_ventilator
,ventilator_type1
,ventilator_type2
,on_o2
,on_air
,remarks
,hiv
,sample_from_health_infra as "sampleFrom"
,is_covid_lab as "isSameHealthInfrastructure"
,cast(''CONFIRMATION'' as text) as "resultStage"
from idsp_screening',true,'ACTIVE',NULL,true,'075d8a01-2597-422c-a561-e9f22824f1f2'),
	 (60512,'2021-09-21 00:00:00',60512,'2021-09-21 00:00:00','insert_je_vaccine_batch_details','noOfPage,noOfChild,locationId,noOfNewChild,loggedInUserId','insert into rch_je_vaccine_batch_details
(location_id,no_of_child,no_of_page,no_of_new_child,created_by,created_on)
values (#locationId#,#noOfChild#,#noOfPage#,#noOfNewChild#,#loggedInUserId#,now())
returning id;',true,'ACTIVE',NULL,true,'44fd78a7-9f27-4d5d-a987-a7ae8a4406b4'),
	 (74841,'2020-04-08 17:01:13.514',66522,'2020-04-17 11:47:55.432','state_of_health_covid_today_death_case','limit,location_id','with analytics as(
select m.unique_health_id as "uniqueHealthId",
caad.member_id as member_id,
--case when idsp.is_any_illness_or_discomfort then ''Yes'' when idsp.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort",
m.family_id as family_id,
member_det as "memberName",
m.mobile_number as "contactNumber",
age as "val_Age",
case when caad.gender = ''F'' then ''Female'' else ''Male'' end as "val_Gender",
caad.address as "Address",
case when admission_date is not null then to_char(caad.admission_date,''DD/MM/YYYY'') else ''-'' end as "val_Admission Date",
case when last_lab_result_entry_on is not null then to_char(caad.last_lab_result_entry_on,''DD/MM/YYYY'') else ''-'' end as "val_Last Lab Test date",
health_state as "val_Current Status",
discharge_date as "val_Discharge Date",
case when death_date is not null then to_char(caad.death_date,''DD/MM/YYYY'') else null end as "val_Death Date",
case when hid.name_in_english is null then hid.name else hid.name_in_english end as "val_Facility Name",
caad.contact_number as "val_Contact Number",
case_no as  "val_Case No",
caad.location_id as loc_id
from covid19_admission_analytics_details caad
left join imt_member m on m.id = caad.member_id
left join health_infrastructure_details hid on hid.id = caad.health_infra_id
where caad.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and positive_member = 1 and cad_status = ''DEATH''
limit #limit#),
family_head as (
	select distinct a.member_id as member_id,
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
	im.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join analytics a on a.family_id = im.family_id
inner join imt_family imf on imf.family_id = a.family_id and imf.hof_id = im.id 
	where family_head = true and 
        im.basic_state in (''VERIFIED'',''NEW'',''REVERIFICATION'',''TEMPORARY'')
),
contact_person as (
	select distinct a.member_id, 
	concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
	im.mobile_number as contactPersonMobileNo  
	from imt_member im 
	inner join analytics a on a.family_id = im.family_id 
	inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id
)
select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName"
--case when a.is_any_illness_or_discomfort then ''Yes'' when a.is_any_illness_or_discomfort is false then ''No'' else ''-'' end as "val_Any illness or discomfort"

from analytics a 
left join family_head fh on a.member_id = fh.member_id
left join contact_person cp on cp.member_id = a.member_id',true,'ACTIVE',NULL,NULL,'64dd5501-9b70-4cae-9c90-b60c8a9eb3cb'),
	 (60512,'2021-11-26 00:00:00',60512,'2021-11-26 00:00:00','retrieve_users_for_infra_role','healthInfraId,code','select  u.first_name,u.user_name,u.last_name,u.id  from  um_user u,user_health_infrastructure uh, um_role_master r , um_role_category rc,
 listvalue_field_value_detail   l
 where uh.user_id=u.id and u.role_id = r.id and rc.role_id= r.id and  rc.category_id=l.id  and l.field_key=''role_catg'' and (case when #code#=null then l.code in (''DOCTOR'',''ANM'',''STAFF_NURSE'',''TBA'',''NON_TBA'') else l.code in (#code#) end) and uh.health_infrastrucutre_id=#healthInfraId# and uh.state=''ACTIVE''',true,'ACTIVE','Retrieve Users for the particular infra and role',true,'664f0e06-9f64-4e55-9e0e-a072c9b33be6'),
	 (1,'2020-04-17 00:00:00',1,'2020-04-17 00:00:00','soh_covid19_infrastructure_wise_results',NULL,'select 0 as health_infra_id,
sum(det.member_tested) "PeopleTested",
sum(det.total_member_tested) as "TotalMemberTested",
sum(det.tests) as "TestsFromFacility",
sum(det.total_sample_tested) "Tests",
sum(det.positive) "Positive",
max(det.member_with_no_infra) "PositiveWithNoHealthInfra",
sum(det.death) "Death",
sum(det.suspected) as "Suspected",
sum(det.discharge) "Discharge",
sum(det.stable_moderate) "Stable",
sum(det.mild) "Mild",
sum(det.critical) "Critical",
sum(det.asymptomatic) "Asymptomatic",
sum(det.active_cases) activecases,
sum(det.on_vantiltor_cases) onVantiltorCases,
sum(det.in_patinets) as "InPatinets",
''Total'' as "Name",
null as "IsCovid19Lab",
null as "IsCovid19Hospital",
sum(det.total_sample_tested) as "TotalSampleTested",
sum(det.total_sample_tested_today) as "TotalSampleTestedToday",
sum(det.total_beds) "TotalBeds",
case when sum(det.total_beds) = 0 then 0 else  round(cast(((sum(det.active_cases)*100/cast(sum(det.total_beds) as float))) as numeric),2) end as "BedsRatio",
sum(det.occupied_bed) "OccupiedBed",
sum(det.available_bed) "AvailableBed",
sum(det.new_added_bed) "NewAddedBed",
sum(det.total_ventilator) "TotalVentilator",
sum(det.new_added_ppe) "NewAddedPPE",
sum(det.new_ppe) "NewPPE",
sum(det.consumed_ppe) "ConsumedPPE",
case when sum(det.total_ventilator) = 0 then 0 else  round(cast(((sum(det.on_vantiltor_cases)*100/cast(sum(det.total_ventilator) as float))) as numeric),2) end as "VentilatorRatio",
sum(det.occupied_ventilator) "OccupiedVentilator",
sum(det.available_ventilator) "AvailableVentilator",
sum(det.new_added_ventilator) "NewAddedVentilator"
from covid19_healthinfra_wise_analytics_details det
union all

select
health_infra_id,
coalesce(hwad.member_tested,0) "PeopleTested",
coalesce(hwad.total_member_tested,0) as "TotalMemberTested",
coalesce(hwad.tests,0) "TestsFromFacility",
coalesce(hwad.total_sample_tested,0) "Tests",
coalesce(hwad.positive,0) "Positive",
coalesce(hwad.member_with_no_infra,0) "PositiveWithNoHealthInfra",
coalesce(hwad.death,0) "Death",
coalesce(hwad.suspected ,0)as "Suspected",
coalesce(hwad.discharge,0) "Discharge",
coalesce(hwad.stable_moderate,0) "Stable",
coalesce(hwad.mild,0) "Mild",
coalesce(hwad.critical,0) "Critical",
coalesce(hwad.asymptomatic,0) "Asymptomatic",
coalesce(hwad.active_cases,0) activecases,
coalesce(hwad.on_vantiltor_cases,0) onVantiltorCases,
coalesce(hwad.in_patinets,0) as "InPatinets",
name as "Name",
is_covid19_lab as "IsCovid19Lab",
is_covid19_hospital as "IsCovid19Hospital",
coalesce(hwad.total_sample_tested, 0) as "TotalSampleTested",
coalesce(hwad.total_sample_tested_today, 0) as "TotalSampleTestedToday",
hwad.total_beds "TotalBeds",
case when (hwad.total_beds) = 0 then 0 else  round(cast((((hwad.active_cases)*100/cast((hwad.total_beds) as float))) as numeric),2) end as "BedsRatio",
coalesce(hwad.occupied_bed,0) "OccupiedBed",
coalesce(hwad.available_bed,0) "AvailableBed",
coalesce(hwad.new_added_bed,0) "NewAddedBed",
coalesce(hwad.total_ventilator,0) "TotalVentilator",
coalesce(hwad.new_added_ppe,0) "NewAddedPPE",
coalesce(hwad.new_ppe,0) "NewPPE",
coalesce(hwad.consumed_ppe,0) "ConsumedPPE",
coalesce(case when hwad.total_ventilator = 0 then 0 else  round(cast((((hwad.on_vantiltor_cases)*100/cast((hwad.total_ventilator) as float))) as numeric),2) end,0) as "VentilatorRatio",
coalesce(hwad.occupied_ventilator,0) "OccupiedVentilator",
coalesce(hwad.available_ventilator,0) "AvailableVentilator",
coalesce(hwad.new_added_ventilator,0) "NewAddedVentilator"
from covid19_healthinfra_wise_analytics_details hwad',true,'ACTIVE',NULL,true,'89bab931-bb39-4935-af21-66a30ed94c57'),
	 (1,'2020-04-18 00:00:00',1,'2020-04-18 00:00:00','opd_search_idsp_2_referred_patients_by_location_id','offSet,locationId,limit','
    with latest_opd_registration as (
        select
        romr.member_id,
        max(romr.created_on) as max_created_on
        from rch_opd_member_registration romr
        inner join idsp_2_member_screening_details imsd on imsd.member_id = romr.member_id
        where romr.reference_type = ''IDSP_REF_2''
        and imsd.member_id is not null
        and imsd.location_id in (select child_id from location_hierchy_closer_det where parent_id = #locationId#)
        and imsd.treatment_started = 0
        group by romr.member_id
    ),
    latest_idsp_screening as (
        select
        imsd.member_id,
        max(imsd.id) as max_id
        from idsp_2_member_screening_details imsd
        where imsd.member_id is not null
        and imsd.location_id in (select child_id from location_hierchy_closer_det where parent_id = #locationId#)
        and imsd.treatment_started = 0
        group by imsd.member_id
    ),
    idsp_det as (
        select
        imsd.*
        from latest_idsp_screening lis
        inner join idsp_2_member_screening_details imsd on imsd.id = lis.max_id
        left join latest_opd_registration lor on lor.member_id = imsd.member_id and lor.max_created_on >= imsd.created_on
        where lor.member_id is null
        limit #limit# offset #offSet#
    )
    select
    imsd.id as "idspMemberScreeningId",
    2 as "idspRound",
    imt_member.id as "memberId",
    imt_member.unique_health_id as "uniqueHealthId",
    imt_member.family_id as "familyId",
    imt_member.mobile_number as "mobileNumber",
    imt_family.location_id as "locationId",
    get_location_hierarchy(case when imt_family.area_id is not null then imt_family.area_id else imt_family.location_id end) as "locationHierarchy",
    concat(imt_member.first_name, '' '', imt_member.middle_name, '' '', imt_member.last_name) as "name",
    imt_member.dob as "dob",
    cast(age(imt_member.dob) as text) as "age",
    concat(uu1.first_name, '' '', uu1.middle_name, '' '', uu1.last_name) as "ashaName",
    uu1.contact_number as "ashaContactNumber",
    uu1.techo_phone_number as "ashaTechoContactNumber",
    concat(uu2.first_name, '' '', uu2.middle_name, '' '', uu2.last_name) as "anmName",
    uu2.contact_number as "anmContactNumber",
    uu2.techo_phone_number as "anmTechoContactNumber"
    from
    idsp_det imsd
    inner join imt_member on imt_member.id = imsd.member_id
    inner join imt_family on imt_member.family_id = imt_family.family_id
    left join um_user_location uul1 on uul1.loc_id = imt_family.area_id and uul1.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul1.user_id and state = ''ACTIVE'') = 24
    left join um_user uu1 on uu1.id = uul1.user_id
    left join um_user_location uul2 on uul2.loc_id = imt_family.location_id and uul2.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul2.user_id and state = ''ACTIVE'') = 30
    left join um_user uu2 on uu2.id = uul2.user_id;
',true,'ACTIVE','OPD Search IDSP 2 Referred Patients By Location ID',true,'2229ab8c-4046-48c5-bd5e-16e0f2c1c22a'),
	 (60512,'2021-01-05 00:00:00',60512,'2021-01-05 00:00:00','covid19_lab_test_pending_sample_collection','searchText,offset,healthInfra,limit,loggedInUserId,wardId,collectionDate','with idsp_screening as (
select
	clt.id as "id",
	ltd.id as lab_id,
	ltd.lab_test_id as lab_test_id,
	ltd.lab_test_number as lab_test_number,
	ltd.lab_collection_status as lab_collection_status,
	clt.location_id as loc_id,
	imt_member.id as member_id,
	case when clt.member_id is null
		then concat_ws('' '',clt.first_name,clt.middle_name,clt.last_name)
		else concat(concat_ws('' '',imt_member.first_name,imt_member.middle_name,imt_member.last_name)
			, '' ('' , imt_member.unique_health_id , '')'' , ''<br>'' , imt_member.family_id) end as member_det,
	concat(case when clt.member_id is null
		then cast(clt.age as text)
		else cast(EXTRACT(YEAR FROM age(imt_member.dob)) as text) end,'' Years'') as age,
	to_char(clt.admission_date,''DD/MM/YYYY'') as admission_date,
	hiwd.ward_name,
	sample_from."name" as sample_from_health_infra,
	sample_from.is_covid_lab,
	clt.current_ward_id as ward_id,
	cacd.on_ventilator as on_ventilator,
	cacd.ventilator_type1 as ventilator_type1,
	cacd.ventilator_type2 as ventilator_type2,
	cacd.on_o2 as on_o2,
	cacd.on_air as on_air,
	cacd.remarks as remarks,
	clt.is_hiv as hiv,
	clt.current_bed_no,
	cacd.health_status as health_status,
	cacd.service_date as last_check_up_time
	from covid19_lab_test_detail ltd
	inner join covid19_admission_detail clt on ltd.covid_admission_detail_id = clt.id
	left join health_infrastructure_ward_details hiwd on hiwd.id = clt.current_ward_id
	left join covid19_admitted_case_daily_status cacd on cacd.id = clt.last_check_up_detail_id
	left join health_infrastructure_details sample_from on sample_from.id = ltd.sample_health_infra
	left join imt_member on clt.member_id = imt_member.id
	left join imt_family on imt_member.family_id = imt_family.family_id
	where
	(((select role_id from um_user where id = #loggedInUserId#) in (59,25,96))
	or ltd.sample_health_infra = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = #loggedInUserId# and uhi.state = ''ACTIVE'')
	)
	and clt.status not in (''DISCHARGED'',''DEAD'',''REFER'') and ltd.lab_collection_status in (''COLLECTION_PENDING'',''SAMPLE_COLLECTED'')
	and collection_archive is not true
	and (case when #searchText# != ''null'' and #searchText# != '''' then ltd.search_text ilike concat(''%'',#searchText#,''%'') else true end)
	and (case when #healthInfra# != ''null'' and #healthInfra# != '''' then sample_from.name_in_english ilike concat(''%'',#healthInfra#,''%'') else true end)
	and (case when #collectionDate# != ''null'' and #collectionDate# != '''' then to_char(ltd.lab_collection_on,''DD/MM/YYYY'') ilike ''%#collectionDate#%'' else true end)
	and (case when #wardId# != ''null'' and #wardId# != '''' then hiwd.ward_name = #wardId# else true end)
	order by ltd.created_on desc
	limit #limit# offset #offset#
)
select
id as "admissionId"
,lab_id as "labCollectionId"
,lab_test_id as "labTestId"
,lab_test_number as "labTestNumber"
,lab_collection_status as "labCollectionStatus"
,member_id as "memberId"
,loc_id as "locationId"
,member_det as "memberDetail"
,age as "age"
,admission_date as "admissionDate"
,ward_name as "wardName"
,ward_id as "wardId"
,current_bed_no as "bedNumber"
,health_status as "healthStatus"
,to_char(last_check_up_time,''DD/MM/YYYY'') as "lastCheckUpTime"
,on_ventilator
,ventilator_type1
,ventilator_type2
,on_o2
,on_air
,remarks
,hiv
,sample_from_health_infra as "sampleFrom"
,is_covid_lab as "isSameHealthInfrastructure"
from idsp_screening;',true,'ACTIVE',NULL,true,'f5d95f85-43be-4b91-b607-b2bd19d3036f'),
	 (84954,'2021-02-01 00:00:00',84954,'2021-02-01 00:00:00','get_soh_root_location',NULL,'select
	id,
	"name"
from
	location_master
where
	parent is null
	and state = ''ACTIVE''
order by
	id
limit 1',true,'ACTIVE',NULL,true,'559934e6-0480-47a8-b0c3-10334eaf9fea'),
	 (84954,'2021-06-10 00:00:00',84954,'2021-06-10 00:00:00','dr_techo_rbsk_child_search_by_member_id_1','uniqueHealthId','select
	child.id as "memberId",
	child.unique_health_id as "uniqueHealthId",
	child.first_name as "firstName",
	child.middle_name as "middleName",
	child.last_name as "lastName",
	child.family_id as "familyId",
	child.gender,
	child.dob,
	child.birth_weight as "weight",
	mother.unique_health_id as "motherId",
	mother.mobile_number as "motherPhoneNumber",
	concat( mother.first_name, '' '', mother.middle_name, '' '', mother.last_name ) as "motherName"
from
	imt_member child
inner join imt_member mother on
	child.mother_id = mother.id
where
	child.unique_health_id in ( #uniqueHealthId# )
    and child.dob > now()-interval ''5 years''
    and ((child.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')) or (child.state = ''com.argusoft.imtecho.member.state.temporary''))',true,'ACTIVE',NULL,true,'5d628790-7e89-43db-9a28-07a26f37c84e'),
	 (60512,'2021-09-21 00:00:00',60512,'2021-09-21 00:00:00','je_vaccine_check_max_batch_count','locationId','select get_location_hierarchy(location_master.id) as "locationHierarchy",
count(1) filter (where rch_je_vaccine_service.id is not null) as "maxBatchCount"
from location_master
left join rch_je_vaccine_service on location_master.id = rch_je_vaccine_service.location_id
and rch_je_vaccine_service.je1_given_date is null
and rch_je_vaccine_service.new_child_batch_id is null
and rch_je_vaccine_service.batch_id is null
and rch_je_vaccine_service.state = ''ACTIVE''
where location_master.id = #locationId#
group by get_location_hierarchy(location_master.id)',true,'ACTIVE',NULL,true,'7f7c976e-474b-41eb-97e2-845eb7ab7c1d'),
	 (60512,'2021-01-05 00:00:00',60512,'2021-01-05 00:00:00','covid19_lab_test_pending_sample_collection_all','searchText,healthInfra,loggedInUserId,wardId,collectionDate','with idsp_screening as (
select
	clt.id as "id",
	ltd.id as lab_id,
	ltd.lab_test_id as lab_test_id,
	ltd.lab_test_number as lab_test_number,
	clt.location_id as loc_id,
	imt_member.id as member_id,
	case when clt.member_id is null
		then concat_ws('' '',clt.first_name,clt.middle_name,clt.last_name)
		else concat(concat_ws('' '',imt_member.first_name,imt_member.middle_name,imt_member.last_name)
			, '' ('' , imt_member.unique_health_id , '')'' , ''<br>'' , imt_member.family_id) end as member_det,
	concat(case when clt.member_id is null
		then cast(clt.age as text)
		else cast(EXTRACT(YEAR FROM age(imt_member.dob)) as text) end,'' Years'') as age,
	to_char(clt.admission_date,''DD/MM/YYYY'') as admission_date,
	hiwd.ward_name,
	sample_from."name" as sample_from_health_infra,
	sample_from.is_covid_lab,
	clt.current_ward_id as ward_id,
	cacd.on_ventilator as on_ventilator,
	cacd.ventilator_type1 as ventilator_type1,
	cacd.ventilator_type2 as ventilator_type2,
	cacd.on_o2 as on_o2,
	cacd.on_air as on_air,
	cacd.remarks as remarks,
	clt.is_hiv as hiv,
	clt.current_bed_no,
	cacd.health_status as health_status,
	cacd.service_date as last_check_up_time
	from covid19_lab_test_detail ltd
	inner join covid19_admission_detail clt on ltd.covid_admission_detail_id = clt.id
	left join health_infrastructure_ward_details hiwd on hiwd.id = clt.current_ward_id
	left join covid19_admitted_case_daily_status cacd on cacd.id = clt.last_check_up_detail_id
	left join health_infrastructure_details sample_from on sample_from.id = ltd.sample_health_infra
	left join imt_member on clt.member_id = imt_member.id
	left join imt_family on imt_member.family_id = imt_family.family_id
	where
	(((select role_id from um_user where id = #loggedInUserId#) in (59,25,96))
	or ltd.sample_health_infra = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = ''#loggedInUserId#'' and uhi.state = ''ACTIVE'')
	)
	and clt.status not in (''DISCHARGED'',''DEAD'',''REFER'') and ltd.lab_collection_status = ''COLLECTION_PENDING''
	and case when ''#searchText#'' != ''null'' and ''#searchText#'' != '''' then ltd.search_text ilike ''%#searchText#%'' else true end
	and (case when ''#searchText#'' != ''null'' and ''#searchText#'' != '''' then ltd.search_text ilike ''%#searchText#%'' else true end)
	and (case when ''#healthInfra#'' != ''null'' and ''#healthInfra#'' != '''' then sample_from.name_in_english ilike ''%#healthInfra#%'' else true end)
	and (case when ''#collectionDate#'' != ''null'' and ''#collectionDate#'' != '''' then to_char(ltd.lab_collection_on,''DD/MM/YYYY'') ilike ''%#collectionDate#%'' else true end)
	and (case when ''#wardId#'' != ''null'' and ''#wardId#'' != '''' then hiwd.ward_name = ''#wardId#'' else true end)
	order by cacd.service_date desc
)
select
id as "admissionId"
,lab_id as "labCollectionId"
,lab_test_id as "labTestId"
,lab_test_number as "labTestNumber"
,member_id as "memberId"
,loc_id as "locationId"
,member_det as "memberDetail"
,age as "age"
,admission_date as "admissionDate"
,ward_name as "wardName"
,ward_id as "wardId"
,current_bed_no as "bedNumber"
,health_status as "healthStatus"
,to_char(last_check_up_time,''DD/MM/YYYY'') as "lastCheckUpTime"
,on_ventilator
,ventilator_type1
,ventilator_type2
,on_o2
,on_air
,remarks
,hiv
,sample_from_health_infra as "sampleFrom"
,is_covid_lab as "isSameHealthInfrastructure"
from idsp_screening;',true,'ACTIVE',NULL,true,'b0208bf1-c354-4758-bb05-7b44c3dc81e5'),
	 (80316,'2021-11-29 00:00:00',80316,'2021-11-29 00:00:00','get_wpd_id_by_member_id_and_delivery_date','memberId','select id from rch_wpd_mother_master where member_id = #memberId#  order by id desc limit 1',true,'ACTIVE',NULL,true,'b1115134-609e-400b-aa37-3debefb67c24'),
	 (60512,'2021-01-05 00:00:00',60512,'2021-01-05 00:00:00','covid19_retrieve_admission_details','admissionId','select get_location_hierarchy(covid19_admission_detail.location_id) as "location",
covid19_admission_detail.address as "address",
pincode as "pincode",
occupation as "occupation",
travel_history as "travelHistory",
is_abroad_in_contact as "abroadContact",
in_contact_with_covid19_paitent as "covidPositiveContact",
case_no as "caseNumber",
opd_case_no as "opdCaseNumber",
covid19_admission_detail.contact_number as "contactNumber",
gender as "gender",
is_fever as "fever",
is_cough as "cough",
is_breathlessness as "breathlessness",
is_sari as "sari",
is_hiv as "hiv",
is_heart_patient as "heartPatient",
is_diabetes as "diabetes",
is_copd as "copd",
is_hypertension as "hypertension",
is_renal_condition as "renalCondition",
is_immunocompromized as "immunocompromized",
is_malignancy as "maligancy",
date_of_onset_symptom as "onsetDate",
unit_no as "unitNumber",
emergency_contact_name as "emergencyContactName",
emergency_contact_no as "emergencyContactNumber",
health_infrastructure_details.name as "admittedHospital"
from covid19_admission_detail
left join health_infrastructure_details on covid19_admission_detail.health_infra_id = health_infrastructure_details.id
where covid19_admission_detail.id = #admissionId#',true,'ACTIVE',NULL,true,'b4d32480-36b4-4e8f-b7a0-e55e5895158c'),
	 (74841,'2021-01-05 00:00:00',74841,'2021-01-05 00:00:00','district_wise_rch_dashboard_analytics','financial_year,location_id','with financial_det as (
    select
cast(case when date_part(''month'', current_date) < 4 then
	concat(date_part(''year'', current_date) - 1, ''-'', date_part(''year'', current_date))
	else concat(date_part(''year'', current_date), ''-'', date_part(''year'', current_date) + 1) end as text)
as financialYear
)
select
location_id,
''district'' as type
, case when #financial_year# = (select financialYear from financial_det) then
(current_date - cast(concat(substr(#financial_year#,1,4),''-04-01'') as date)) + 1
else
(cast(concat(substr(#financial_year#,6,10),''-03-31'') as date) - cast(concat(substr(#financial_year#,1,4),''-04-01'') as date))  end  AS days
,financial_year
,COALESCE(expected_mother_reg, 0) as expected_mother_reg
,COALESCE(anc_reg, 0) as anc_reg
,COALESCE(per_anc_reg, 0) as per_anc_reg
,COALESCE(anc_reg_rank, 0) as anc_reg_rank
,COALESCE(expected_pw_reg, 0) as expected_pw_reg
,COALESCE(early_anc, 0) as early_anc
,COALESCE(per_early_anc, 0) as per_early_anc
,COALESCE(early_anc_rank, 0) as early_anc_rank
,COALESCE(expected_delivery_reg, 0) as expected_delivery_reg
,COALESCE(no_of_del, 0) as no_of_del
,COALESCE(per_no_of_del, 0) as per_no_of_del
,COALESCE(no_of_del_rank, 0) as no_of_del_rank
,COALESCE(expected_inst_del, 0) as expected_inst_del
,COALESCE(inst_del, 0) as inst_del
,COALESCE(per_inst_del, 0) as per_inst_del
,COALESCE(inst_del_rank, 0) as inst_del_rank
,COALESCE(expected_phi_del, 0) as expected_phi_del
,COALESCE(phi_del, 0) as phi_del
,COALESCE(per_phi_del, 0) as per_phi_del
,COALESCE(phi_del_rank, 0) as phi_del_rank
,COALESCE(no_of_del, 0) as expected_home_del
,COALESCE(home_del, 0 ) as home_del
,COALESCE(per_home_del, 0 ) as per_home_del
,COALESCE(home_del_rank, 0 ) as home_del_rank
,COALESCE(breast_feeding, 0 ) as breast_feeding
,COALESCE(per_breast_feeding, 0 ) as per_breast_feeding
,COALESCE(breast_feeding_rank, 0 ) as breast_feeding_rank
,COALESCE(maternal_death, 0 ) as maternal_death
,COALESCE(expected_mmr, 0 ) as expected_mmr
,COALESCE(expected_no_mmr, 0 ) as expected_no_mmr
,COALESCE(expected_maternal_death, 0 ) as expected_maternal_death
,COALESCE(expected_no_mmr_rank, 0 ) as expected_no_mmr_rank
,COALESCE(per_maternal_death, 0 ) as per_maternal_death
,COALESCE(maternal_death_rank, 0 ) as maternal_death_rank
,COALESCE(high_risk_mother_2nd_trimester, 0 ) as high_risk_mother_2nd_trimester
,COALESCE(total_beneficiary_under_pmsma, 0 ) as total_beneficiary_under_pmsma
,COALESCE(per_total_beneficiary_under_pmsma, 0 ) as per_total_beneficiary_under_pmsma
,COALESCE(pmsma_rank, 0 ) as pmsma_rank
,COALESCE(infant_death, 0 ) as infant_death
,COALESCE(expected_imr, 0 ) as expected_imr
,COALESCE(expected_infant_death, 0 ) as expected_infant_death
,COALESCE(expected_no_imr, 0 ) as expected_no_imr
,COALESCE(per_imr, 0 ) as per_imr
,COALESCE(imr_rank, 0 ) as imr_rank
,COALESCE(expected_imr_rank, 0 ) as expected_imr_rank
,COALESCE(del_less_eq_34, 0 ) as del_less_eq_34
,COALESCE(cortico_steroid, 0 ) as cortico_steroid
,COALESCE(expected_cortico_steroid, 0 ) as expected_cortico_steroid
,COALESCE(per_cortico_steroid, 0 ) as per_cortico_steroid
,COALESCE(cortico_steroid_rank, 0 ) as cortico_steroid_rank
,COALESCE(live_birth, 0 ) as live_birth
,COALESCE(expected_child_reg, 0 ) as expected_child_reg
,COALESCE(per_live_birth, 0 ) as per_live_birth
,COALESCE(live_birth_rank, 0 ) as live_birth_rank
,COALESCE(weighed, 0 ) as weighed
,COALESCE(weighed_less_than_2_5, 0 ) as weighed_less_than_2_5
,COALESCE(expected_weighed, 0 ) as expected_weighed
,COALESCE(per_weighed, 0 ) as per_weighed
,COALESCE(weighed_rank, 0 ) as weighed_rank
,COALESCE(weighed, 0) as expected_lbw
,COALESCE(per_lbw, 0) as per_lbw
,COALESCE(lbw_rank, 0) as lbw_rank
,COALESCE(expected_fully_immu, 0) as expected_fully_immu
,COALESCE(fully_immunized, 0) as fully_immunized
,COALESCE(per_fully_immu, 0) as per_fully_immu
,COALESCE(fully_immu_rank, 0) as fully_immu_rank
,COALESCE(rch_dashboard_analytics.total_male, 0) as total_male
,COALESCE(rch_dashboard_analytics.total_female, 0) as total_female
,COALESCE(per_sex_ratio, 0) as per_sex_ratio
,COALESCE(sex_ratio_rank, 0) as sex_ratio_rank
,COALESCE(ppiucd, 0) as ppiucd
,COALESCE(expected_ppiucd, 0) as expected_ppiucd
,COALESCE(per_ppiucd, 0) as per_ppiucd
,COALESCE(ppiucd_rank, 0) as ppiucd_rank
,COALESCE(total_0_to_5_child, 0) as total_0_to_5_child
,COALESCE(total_screened_for_malnutition, 0) as total_screened_for_malnutition
,COALESCE(per_total_anemic_malnutrition_treated, 0) as per_total_anemic_malnutrition_treated
,COALESCE(total_anemic_malnutrition_rank, 0) as total_anemic_malnutrition_rank
,COALESCE(total_sam_child, 0) as total_sam_child
,COALESCE(per_total_sam_malnutrition, 0) as per_total_sam_malnutrition
,COALESCE(per_total_sam_malnutrition_rank, 0) as per_total_sam_malnutrition_rank
,COALESCE(total_anemic, 0) as total_anemic
,COALESCE(per_total_anemic, 0) as per_total_anemic
,COALESCE(total_anemic_rank, 0) as total_anemic_rank
,COALESCE(total_anemic, 0) as expected_anemic_pw
,COALESCE(total_severe_anemic, 0) as total_severe_anemic
,COALESCE(per_total_sever_anemic, 0) as per_total_sever_anemic
,COALESCE(total_sever_anemic_rank, 0) as total_sever_anemic_rank
,COALESCE(total_severe_anemic_treated, 0) as total_severe_anemic_treated
,COALESCE(expected_severe_anemic_treated, 0) as expected_severe_anemic_treated
,COALESCE(per_total_anemic_treated, 0) as per_total_anemic_treated
,COALESCE(total_anemic_treated_rank, 0) as total_anemic_treated_rank
,COALESCE(expected_anc4, 0) as expected_anc4
,COALESCE(anc4, 0) as anc4
,COALESCE(per_anc4, 0) as per_anc4
,COALESCE(per_anc4_rank, 0) as per_anc4_rank
,COALESCE(c_section_delivery, 0) as c_section_delivery
,COALESCE(expected_c_section_delivery, 0) as expected_c_section_delivery
,COALESCE(per_c_section_delivery, 0) as per_c_section_delivery
,COALESCE(c_section_delivery_rank, 0) as c_section_delivery_rank
,COALESCE(expected_child_screening_for_malnutritition, 0) as expected_child_screening_for_malnutritition
,COALESCE(per_sam, 0) as per_sam
,COALESCE(total_sam_rank, 0) as total_sam_rank
,COALESCE(total_screened_for_malnutition, 0) as expected_sam
,COALESCE(anc_reg, 0) as expected_total_anemic
,(select COALESCE(sum(fhs_total_member), 0) from location_wise_analytics lwa inner join location_hierchy_closer_det lhcd on lhcd.child_id = lwa.loc_id and child_loc_type in (''A'', ''AA'') where lhcd.parent_id = lm.id) as fhs_total_member
,(select count(1) from location_master lm2 where (lm.type in (''D'', ''C'') and lm2.type in (''D'', ''C'')) or (lm.type not in (''D'', ''C'') and lm2.parent = lm.parent)) as total_number_of_locations
from rch_dashboard_analytics
inner join location_master lm on lm.id = rch_dashboard_analytics.location_id
where location_id in ( #location_id# ) and financial_year = #financial_year#
union
select
2,
''state'' as type
,case when substr(#financial_year#,1,4) = substr(cast(current_date as text),1,4) then
(current_date - cast(concat(substr(#financial_year#,1,4),''-04-01'') as date))
else
(cast(concat(substr(#financial_year#,6,10),''-03-31'') as date) - cast(concat(substr(#financial_year#,1,4),''-04-01'') as date)) end  AS days
,null
,COALESCE(sum(expected_mother_reg), 0) as expected_mother_reg
,COALESCE(sum(anc_reg), 0) as anc_reg
,COALESCE(case when sum(expected_mother_reg) = 0 then 0 else round(cast(sum(anc_reg)*100.0/sum(expected_mother_reg) as numeric),2) end, 0) as per_anc_reg
,null as anc_reg_rank
,COALESCE(sum(expected_pw_reg), 0) as expected_pw_reg
,COALESCE(sum(early_anc), 0) as early_anc
,COALESCE(case when sum(anc_reg) = 0 then 0 else round(sum(early_anc)*100.0/sum(anc_reg) ,2) end, 0) as per_early_anc
,null as early_anc_rank
,COALESCE(sum(expected_delivery_reg), 0) as expected_delivery_reg
,COALESCE(sum(no_of_del), 0) as no_of_del
,COALESCE(case when sum(expected_delivery_reg) = 0 then 0 else round(cast(sum(no_of_del)*100.0/sum(expected_delivery_reg) as numeric),2) end, 0) as per_no_of_del
,null as no_of_del_rank
,COALESCE(sum(expected_inst_del), 0) as expected_inst_del
,COALESCE(sum(inst_del), 0) as inst_del
,COALESCE(case when sum(no_of_del) = 0 then 0 else round(sum(inst_del)*100.0/sum(no_of_del),2) end, 0) as per_inst_del
,null as inst_del_rank
,COALESCE(sum(expected_phi_del), 0) as expected_phi_del
,COALESCE(sum(phi_del), 0) as phi_del
,COALESCE(case when sum(inst_del) = 0 then 0 else round(sum(phi_del)*100.0/sum(inst_del),2) end, 0) as per_phi_del
,null as phi_del_rank
,COALESCE(sum(no_of_del), 0) as expected_home_del
,COALESCE(sum(home_del), 0) as home_del
,COALESCE(case when sum(no_of_del) = 0 then 0 else round(sum(home_del)*100.0/sum(no_of_del),2) end, 0) as per_home_del
,null as home_del_rank
,COALESCE(sum(breast_feeding), 0) as breast_feeding
,COALESCE(case when sum(inst_del) = 0 then 0 else round(sum(breast_feeding)*100.0/sum(inst_del),2) end, 0) as per_breast_feeding
,null as breast_feeding_rank
,COALESCE(sum(maternal_death), 0) as maternal_death
,COALESCE(sum(expected_mmr), 0) as expected_mmr
,COALESCE(case when sum(live_birth) = 0 then 0 else round(sum(maternal_death)*100000.0/sum(live_birth),0) end, 0) as expected_no_mmr
,COALESCE(sum(expected_maternal_death), 0) as expected_maternal_death
,null as expected_no_mmr_rank
,COALESCE(case when sum(expected_mmr) = 0 then 0 else round(cast(sum(maternal_death)*100.0/sum(expected_mmr) as numeric ),2) end, 0) as per_maternal_death
,null as maternal_death_rank
,COALESCE(sum(high_risk_mother_2nd_trimester), 0) as high_risk_mother_2nd_trimester
,COALESCE(sum(total_beneficiary_under_pmsma), 0) as total_beneficiary_under_pmsma
,COALESCE(case when sum(high_risk_mother_2nd_trimester) = 0 then 0 else round(sum(total_beneficiary_under_pmsma)*100.0/sum(high_risk_mother_2nd_trimester) ,2) end, 0) as per_total_beneficiary_under_pmsma
,null as pmsma_rank
,COALESCE(sum(infant_death), 0) as infant_death
,COALESCE(sum(expected_imr), 0) as expected_imr
,COALESCE(sum(expected_infant_death), 0) as expected_infant_death
,COALESCE(case when sum(live_birth) = 0 then 0 else round(sum(infant_death)*1000.0/sum(live_birth),0) end, 0) as expected_no_imr
,COALESCE(case when sum(expected_imr) = 0 then 0 else round(cast(sum(infant_death)*100.0/sum(expected_imr) as numeric ),2) end, 0) as per_imr
,null as imr_rank
, null as expected_imr_rank
,COALESCE(sum(del_less_eq_34), 0) as del_less_eq_34
,COALESCE(sum(cortico_steroid), 0) as cortico_steroid
,COALESCE(sum(expected_cortico_steroid), 0) as expected_cortico_steroid
,COALESCE(case when sum(del_less_eq_34) = 0 then 0 else round(sum(cortico_steroid)*100.0/sum(del_less_eq_34) ,2) end, 0) as per_cortico_steroid
,null as cortico_steroid_rank
,COALESCE(sum(live_birth), 0) as live_birth
,COALESCE(sum(expected_child_reg), 0) as expected_child_reg
,COALESCE(case when sum(expected_delivery_reg) = 0 then 0 else round(cast(sum(live_birth)*100.0/sum(expected_delivery_reg) as numeric ),2) end, 0) as per_live_birth
,null as live_birth_rank
,COALESCE(sum(weighed), 0) as weighed
,COALESCE(sum(weighed_less_than_2_5), 0) as weighed_less_than_2_5
,COALESCE(sum(expected_weighed), 0) as expected_weighed
,COALESCE(case when sum(live_birth) = 0 then 0 else round(sum(weighed)*100.0/sum(live_birth) ,2) end, 0) as per_weighed
,null as weighed_rank
,COALESCE(sum(weighed), 0) as expected_lbw
,COALESCE(case when sum(weighed) = 0 then 0 else round(sum(weighed_less_than_2_5)*100.0/(sum(weighed)) ,2) end, 0) as per_lbw
,null as lbw_rank
,COALESCE(sum(expected_fully_immu), 0) as expected_fully_immu
,COALESCE(sum(fully_immunized), 0) as fully_immunized
,COALESCE(case when sum(expected_fully_immu) = 0 then 0 else round(cast(sum(fully_immunized)*100.0/sum(expected_fully_immu) as numeric ),2) end, 0) as per_fully_immu
,null as fully_immu_rank
,COALESCE(sum(rch_dashboard_analytics.total_male), 0) as total_male
,COALESCE(sum(rch_dashboard_analytics.total_female), 0) as total_female
,COALESCE(case when sum(rch_dashboard_analytics.total_male) = 0 then 0 else round(sum(rch_dashboard_analytics.total_female)*1000.0/sum(rch_dashboard_analytics.total_male) ,0) end, 0) as per_sex_ratio
,null as sex_ratio_rank
,COALESCE(sum(ppiucd), 0) as ppiucd
,COALESCE(sum(expected_ppiucd), 0) as expected_ppiucd
,COALESCE(case when sum(phi_del) = 0 then 0 else round(sum(ppiucd)*100.0/sum(phi_del) ,2) end, 0) as per_ppiucd
,null as ppiucd_rank
,COALESCE(sum(total_0_to_5_child), 0) as total_0_to_5_child
,COALESCE(sum(total_screened_for_malnutition), 0) as total_screened_for_malnutition
,COALESCE(case when sum(total_0_to_5_child) = 0 then 0 else round(sum(total_screened_for_malnutition)*100.0/sum(total_0_to_5_child) ,2) end, 0) as per_total_anemic_malnutrition_treated
,null as total_anemic_malnutrition_rank
,COALESCE(sum(total_sam_child), 0) as total_sam_child
,COALESCE(case when sum(total_0_to_5_child) = 0 then 0 else round(sum(total_screened_for_malnutition)*100.0/sum(total_0_to_5_child) ,2) end, 0) as per_total_sam_malnutrition
,null as per_total_sam_malnutrition_rank
,COALESCE(sum(total_anemic), 0) as total_anemic
,COALESCE(case when sum(anc_reg) = 0 then 0 else round(sum(total_anemic)*100.0/sum(anc_reg) ,2) end, 0) as per_total_anemic
,null as total_anemic_rank
,COALESCE(sum(total_anemic), 0) as expected_anemic_pw
,COALESCE(sum(total_severe_anemic), 0) as total_severe_anemic
,COALESCE(case when sum(total_anemic) = 0 then 0 else round(sum(total_severe_anemic)*100.0/(sum(total_anemic)) ,2) end, 0) as per_total_sever_anemic
, null as total_sever_anemic_rank
,COALESCE(sum(total_severe_anemic_treated), 0) as total_severe_anemic_treated
,COALESCE(sum(expected_severe_anemic_treated), 0) as expected_severe_anemic_treated
,COALESCE(case when sum(total_severe_anemic) = 0 then 0 else round(sum(total_severe_anemic_treated)*100.0/sum(total_severe_anemic) ,2) end, 0) as per_total_anemic_treated
,null as total_anemic_treated_rank
,COALESCE(sum(expected_anc4), 0) as expected_anc4
,COALESCE(sum(anc4), 0) as anc4
,COALESCE(case when sum(early_anc) = 0 then 0 else round(sum(anc4)*100.0/sum(early_anc) ,2) end, 0) as per_anc4
,null as per_anc4_rank
,COALESCE(sum(c_section_delivery), 0) as c_section_delivery
,COALESCE(sum(expected_c_section_delivery), 0) as expected_c_section_delivery
,COALESCE(case when sum(no_of_del) = 0 then 0 else round(sum(c_section_delivery)*100.0/sum(no_of_del) ,2) end, 0) as per_c_section_delivery
,null as c_section_delivery_rank
,COALESCE(sum(expected_child_screening_for_malnutritition), 0) as expected_child_screening_for_malnutritition
,COALESCE(case when sum(total_screened_for_malnutition) = 0 then 0 else round(sum(total_sam_child)*100.0/sum(total_screened_for_malnutition) ,2) end, 0) as per_sam
,null as total_sam_rank
,COALESCE(sum(total_screened_for_malnutition), 0) as expected_sam
,COALESCE(sum(anc_reg), 0) as expected_total_anemic
,null as fhs_total_member
,null as total_number_of_locations
from rch_dashboard_analytics
where
location_id in (select id from location_master where type in (''D'',''C''))
AND
financial_year = #financial_year#',true,'ACTIVE',NULL,true,'9e3ca727-5019-43da-89f2-58eebd903311'),
	 (58981,'2021-01-05 00:00:00',58981,'2021-01-05 00:00:00','mob_asha_work_register_detail_cs','visitId','with const as (
	select cast(''HOME'' as text) as const, cast(''Home'' as text) as name
	union
	select cast(''MAMTA_DAY'' as text) as const, cast(''Mamta Day'' as text) as name
	union
	select cast(''HOSP'' as text) as const, cast(''Hospital'' as text) as name
	union
	select cast(''SWLY'' as text) as const, cast(''Slowly'' as text) as name
	union
	select cast(''VSWLY'' as text) as const, cast(''Very slowly'' as text) as name
	union
	select cast(''NRMLY'' as text) as const, cast(''Normally'' as text) as name
	union
	select cast(''NABTDR'' as text) as const, cast(''Not able to drink'' as text) as name
	union
	select cast(''DRNKP'' as text) as const, cast(''Drinks poorly'' as text) as name
	union
	select cast(''DRNKE'' as text) as const, cast(''Drinks eagerly'' as text) as name
	union
	select cast(''THRSTY'' as text) as const, cast(''Thirsty'' as text) as name
	union
	select cast(''SEVR'' as text) as const, cast(''Severe'' as text) as name
	union
	select cast(''SMMLD'' as text) as const, cast(''Some/Mild'' as text) as name
	union
	select cast(''NONE'' as text) as const, cast(''None'' as text) as name
)
select
concat(mem.first_name,'' '',mem.middle_name,'' '',mem.last_name,'' ('',mem.unique_health_id,'')'') as "Member Name",
mem.family_id as "Family Id",
case when csm.service_date is not null then to_char(csm.service_date, ''DD/MM/YYYY'') else null end as "Service Date",
case when csm.death_date is not null then to_char(csm.death_date, ''DD/MM/YYYY'') else null end as "Death Date",
place_of_death.name as "Place Of Death",
death_reason.value as "Death Reason",
csm.other_death_reason as "Other Death Reason",
case when csm.unable_to_drink_breastfeed = true then ''Yes'' when csm.unable_to_drink_breastfeed = false then ''No'' else null end as "Unable to drink breastfeed",
case when csm.vomit_everything = true then ''Yes'' when csm.vomit_everything = false then ''No'' else null end as "Vomit everything",
case when csm.have_convulsions = true then ''Yes'' when csm.have_convulsions = false then ''No'' else null end as "Have convulsions",
case when csm.have_cough_or_fast_breathing = true then ''Yes'' when csm.have_cough_or_fast_breathing = false then ''No'' else null end as "Have cough or fast breathing",
case when csm.cough_days is not null then cast(csm.cough_days as text) else null end as "Cough days",
case when csm.breath_in_one_minute is not null then cast(csm.breath_in_one_minute as text) else null end as "Breath in one minute",
case when csm.have_chest_indrawing = true then ''Yes'' when csm.have_chest_indrawing = false then ''No'' else null end as "Have chest indrawing",
case when csm.have_more_stools_diarrhea = true then ''Yes'' when csm.have_more_stools_diarrhea = false then ''No'' else null end as "Have more stools or diarrhea",
case when csm.diarrhea_days is not null then cast(csm.diarrhea_days as text) else null end as "Diarrhea days",
case when csm.blood_in_stools = true then ''Yes'' when csm.blood_in_stools = false then ''No'' else null end as "Blood in stools",
case when csm.sunken_eyes = true then ''Yes'' when csm.sunken_eyes = false then ''No'' else null end as "Sunken eyes",
case when csm.irritable_or_restless = true then ''Yes'' when csm.irritable_or_restless = false then ''No'' else null end as "Irritable or restless",
case when csm.lethargic_or_unconsious = true then ''Yes'' when csm.lethargic_or_unconsious = false then ''No'' else null end as "Lethargic or unconsious",
skin_behaviour_after_pinching.name as "Skin behaviour after pinching",
drinking_behaviour.name as "Drinking behaviour",
case when csm.have_fever = true then ''Yes'' when csm.have_fever = false then ''No'' else null end as "Have fever",
case when csm.fever_days is not null then cast(csm.fever_days as text) else null end as "Fever days",
case when csm.fever_present_each_day = true then ''Yes'' when csm.fever_present_each_day = false then ''No'' else null end as "Fever present each day",
case when csm.is_neck_stiff = true then ''Yes'' when csm.is_neck_stiff = false then ''No'' else null end as "Is neck stiff",
case when csm.have_fever_on_service = true then ''Yes'' when csm.have_fever_on_service = false then ''No'' else null end as "Have fever on service",
have_palmer_poller.name as "Have palmer poller",
case when csm.have_severe_wasting = true then ''Yes'' when csm.have_severe_wasting = false then ''No'' else null end as "Have severe wasting",
case when csm.have_edema_both_feet = true then ''Yes'' when csm.have_edema_both_feet = false then ''No'' else null end as "Have edema both feet",
case when csm.weight is not null then concat(cast(csm.weight as text), '' Kgs'') else null end as "Weight",
case when csm.date_of_weight is not null then to_char(csm.date_of_weight, ''DD/MM/YYYY'') else null end as "Weight Date",
case when csm.mother_informed_about_grade = true then ''Yes'' when csm.mother_informed_about_grade = false then ''No'' else null end as "Mother informed about malnutrition grade"
from rch_asha_child_service_master csm
inner join imt_member mem on csm.member_id = mem.id
left join listvalue_field_value_detail death_reason on cast(csm.death_reason as bigint) = death_reason.id
left join const place_of_death on place_of_death.const = csm.death_place
left join const skin_behaviour_after_pinching on skin_behaviour_after_pinching.const = csm.skin_behaviour_after_pinching
left join const drinking_behaviour on drinking_behaviour.const = csm.drinking_behaviour
left join const have_palmer_poller on have_palmer_poller.const = csm.have_palmer_poller
where csm.id = #visitId#',true,'ACTIVE',NULL,true,'3c714c51-a228-49b4-a82b-06d5fcac3864'),
	 (58981,'2021-01-05 00:00:00',58981,'2021-01-05 00:00:00','mob_asha_work_register_detail_pnc_child','visitId','with const as (
	select cast(''HOME'' as text) as const, cast(''Home'' as text) as name
	union
	select cast(''ON_THE_WAY'' as text) as const, cast(''On the way'' as text) as name
	union
	select cast(''HOSP'' as text) as const, cast(''Hospital'' as text) as name
	union
	select cast(''OK'' as text) as const, cast(''Ok'' as text) as name
	union
	select cast(''WEAK'' as text) as const, cast(''Weak'' as text) as name
	union
	select cast(''STOP'' as text) as const, cast(''Stop'' as text) as name
	union
	select cast(''NRML'' as text) as const, cast(''Normal'' as text) as name
	union
	select cast(''LTUSL'' as text) as const, cast(''Less than usual'' as text) as name
	union
	select cast(''NSUCK'' as text) as const, cast(''No suckling'' as text) as name
	union
	select cast(''FRCFL'' as text) as const, cast(''Forceful'' as text) as name
	union
	select cast(''YLLW'' as text) as const, cast(''Yellow'' as text) as name
	union
	select cast(''PUS'' as text) as const, cast(''Pus'' as text) as name
	union
	select cast(''BLDNG'' as text) as const, cast(''Bleeding'' as text) as name
	union
	select cast(''NONE'' as text) as const, cast(''No pus'' as text) as name
	union
	select cast(''DSTND'' as text) as const, cast(''Distended'' as text) as name
	union
	select cast(''LIMP'' as text) as const, cast(''Limp'' as text) as name
	union
	select cast(''CNE'' as text) as const, cast(''Could not examine'' as text) as name
	union
	select cast(''PUSP'' as text) as const, cast(''Pus Present'' as text) as name
	union
	select cast(''SWLN'' as text) as const, cast(''Swollen'' as text) as name
)
select
concat(mem.first_name,'' '',mem.middle_name,'' '',mem.last_name,'' ('',mem.unique_health_id,'')'') as "Member Name",
case when pcm.death_date is not null then to_char(pcm.death_date, ''DD/MM/YYYY'') else null end as "Death Date",
death_reason.value as "Death Reason",
place_of_death.name as "Place Of Death",
pcm.other_death_reason as "Other Death Reason",
cry.name as "Baby''s cry",
fed_less_than_usual.name as "Fed less than usual",
sucking.name as "Sucking",
case when pcm.throws_milk = true then ''Yes'' when pcm.throws_milk = false then ''No'' else null end as "Throws milk",
case when pcm.hands_feets_cold = true then ''Yes'' when pcm.hands_feets_cold = false then ''No'' else null end as "Hands and feets are cold",
skin.name as "Skin",
case when pcm.skin_pustules = true then ''Yes'' when pcm.skin_pustules = false then ''No'' else null end as "Skin Pustules",
case when pcm.have_chest_indrawing = true then ''Yes'' when pcm.have_chest_indrawing = false then ''No'' else null end as "Have chest indrawing",
umbilicus.name as "Umbilicus",
abdomen.name as "Abdomen",
case when pcm.tempreature is not null then concat(cast(pcm.tempreature as text), '' '', chr(176), ''F'') else null end as "Temperature",
limbs_neck.name as "Limbs and neck",
eyes.name as "Eyes",
case when pcm.weight is not null then concat(cast(pcm.weight as text), '' Kgs'') else null end as "Weight"
from rch_asha_pnc_child_master pcm
inner join imt_member mem on pcm.child_id = mem.id
left join listvalue_field_value_detail death_reason on cast(pcm.death_reason as bigint) = death_reason.id
left join const place_of_death on place_of_death.const = pcm.death_place
left join const cry on cry.const = pcm.cry
left join const fed_less_than_usual on fed_less_than_usual.const = pcm.fed_less_than_usual
left join const skin on skin.const = pcm.skin
left join const sucking on sucking.const = pcm.sucking
left join const umbilicus on umbilicus.const = pcm.umbilicus
left join const abdomen on abdomen.const = pcm.abdomen
left join const limbs_neck on limbs_neck.const = pcm.limbs_neck
left join const eyes on eyes.const = pcm.eyes
where pnc_master_id = #visitId#',true,'ACTIVE',NULL,true,'d35ad954-0dab-4288-904e-7bea88f211f7'),
	 (1,'2021-01-05 00:00:00',1,'2021-01-05 00:00:00','mob_work_register_detail_cs','visitId','
--mob_work_register_detail_cs
with const as (
	select cast(''HOME'' as text) as const, cast(''Home'' as text) as name
	union
	select cast(''MAMTA_DAY'' as text) as const, cast(''Mamta Day'' as text) as name
	union
	select cast(''HOSP'' as text) as const, cast(''Hospital'' as text) as name
	union
	select cast(''BEFORE6'' as text) as const, cast(''Before 6 months'' as text) as name
	union
	select cast(''ENDOF6'' as text) as const, cast(''End of 6 months'' as text) as name
	union
	select cast(''AFTER6'' as text) as const, cast(''After 6 months'' as text) as name
), diseases as (
	select rel.child_service_id, string_agg(det.value ,'', '') as diseases
	from rch_child_service_diseases_rel rel
	inner join listvalue_field_value_detail det on rel.diseases = det.id
	where rel.child_service_id = #visitId#
	group by rel.child_service_id
), immu as (
	select imm.visit_id,
	string_agg(
		concat(
			case when scm.constant is null then imm.immunisation_given else scm.value end,
			'' - '',
			to_char(imm.given_on, ''dd/MM/yyyy'')
		), chr(10) order by imm.given_on
	) as immu_given
	from rch_immunisation_master imm
	left join system_constant_master scm on scm.constant = imm.immunisation_given
	where imm.visit_id = #visitId#
	and imm.visit_type = ''FHW_CS''
	group by imm.visit_id
)
select
concat(mem.first_name,'' '',mem.middle_name,'' '',mem.last_name,'' ('',mem.unique_health_id,'')'') as "Child Name",
mem.family_id as "Family Id",
case when csm.service_date is not null then to_char(csm.service_date, ''DD/MM/YYYY'') else null end as "Service Date",
case when csm.height is not null then cast(csm.height as text) else null end as "Height",
case when csm.weight is not null then concat(cast(csm.weight as text), '' Kgs'') else null end as "Weight",
case when csm.ifa_syrup_given = true then ''Yes'' when csm.ifa_syrup_given = false then ''No'' else null end as "Ifa Syrup Given",
case when csm.complementary_feeding_started = true then ''Yes'' when csm.complementary_feeding_started = false then ''No'' else null end as "Complementary Feeding Started",
comp_feeding_start_period.name as "Complementary Feeding Start Period",
case when csm.exclusively_breastfeded = true then ''Yes'' when csm.exclusively_breastfeded = false then ''No'' else null end as "Exclusively Breastfeded",
case when csm.mid_arm_circumference is not null then cast(csm.mid_arm_circumference as text) else null end as "Mid Upper Arm Circumference",
case when csm.have_pedal_edema = true then ''Yes'' when csm.have_pedal_edema = false then ''No'' else null end as "Have Pedal Edema",
diseases.diseases as "Diseases",
csm.other_diseases as "Other Diseases",
immu.immu_given as "Immunisation Provided",
case when csm.death_date is not null then to_char(csm.death_date, ''DD/MM/YYYY'') else null end as "Death Date",
place_of_death.name as "Place Of Death",
death_reason.value as "Death Reason",
csm.other_death_reason as "Other Death Reason"
from rch_child_service_master csm
inner join imt_member mem on csm.member_id = mem.id
left join const comp_feeding_start_period on comp_feeding_start_period.const = csm.complementary_feeding_start_period
left join diseases on diseases.child_service_id = csm.id
left join listvalue_field_value_detail death_reason on cast(csm.death_reason as bigint) = death_reason.id
left join const place_of_death on place_of_death.const = csm.place_of_death
left join immu on csm.id = immu.visit_id
where csm.id = #visitId#
',true,'ACTIVE',NULL,true,'d3d2865a-b87d-4af7-9f2f-099830e64d60'),
	 (84954,'2021-06-10 00:00:00',84954,'2021-06-10 00:00:00','dr_techo_rbsk_child_search_by_family_id_1','familyId','select
	child.id as "memberId",
	child.unique_health_id as "uniqueHealthId",
	child.first_name as "firstName",
	child.middle_name as "middleName",
	child.last_name as "lastName",
	child.family_id as "familyId",
	child.gender,
	child.dob,
	child.birth_weight as "weight",
	mother.unique_health_id as "motherId",
	mother.mobile_number as "motherPhoneNumber",
	concat( mother.first_name, '' '', mother.middle_name, '' '', mother.last_name ) as "motherName"
from
	imt_member child
inner join imt_member mother on
	child.mother_id = mother.id
where
	child.family_id in ( #familyId# )
    and child.dob > now()-interval ''5 years''
    and ((child.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')) or (child.state = ''com.argusoft.imtecho.member.state.temporary''))',true,'ACTIVE',NULL,true,'d3ed8454-3e10-4837-be3f-498389248d25'),
	 (97051,'2021-08-19 00:00:00',97051,'2021-08-19 00:00:00','insert_update_mobile_feature','mobileDisplayName,featureName,beans,userId,mobileConstant,forms','-- insert_update_mobile_feature

update mobile_feature_master
set feature_name = #featureName#, mobile_display_name = #mobileDisplayName#, modified_by = #userId#, modified_on =now()
where mobile_constant = #mobileConstant#;

insert into mobile_feature_master (mobile_constant, feature_name, mobile_display_name, state, created_by, created_on, modified_by, modified_on)
select #mobileConstant#, #featureName#, #mobileDisplayName#, ''ACTIVE'', #userId#, now(), #userId#, now()
where not exists (select 1 from mobile_feature_master where mobile_constant = #mobileConstant#);

delete from mobile_beans_feature_rel
where feature = #mobileConstant#;

insert into mobile_beans_feature_rel(feature, bean)
select #mobileConstant#, unnest(string_to_array(#beans#, '',''))
where #beans# is not null;

delete from mobile_form_feature_rel
where mobile_constant = #mobileConstant#;

insert into mobile_form_feature_rel (mobile_constant, form_id)
select #mobileConstant#, cast(unnest(string_to_array(#forms#, '','')) as integer)
where #forms# is not null;

with features_of_menu as (
	select jsonb_array_elements(CAST(config_json AS jsonb))->>''mobile_constant'' as menu_constant, id
	from mobile_menu_master mmm
	inner join mobile_menu_role_relation mmrr on mmrr.menu_id = mmm.id
)
update mobile_menu_master
set modified_on = now(), modified_by = #userId#
where id in (
	select id from features_of_menu where menu_constant = #mobileConstant#
);',false,'ACTIVE',NULL,true,'e572ac55-d377-4ce2-9aea-6d6e6062b1a9'),
	 (84954,'2021-06-10 00:00:00',84954,'2021-06-10 00:00:00','dr_techo_retrieve_by_unique_health_id_1','uniqueHealthId','select id as "memberId",
unique_health_id as "uniqueHealthId",
family_id as "familyId",
first_name as "firstName",
middle_name as "middleName",
last_name as "lastName",
gender,
dob,
mobile_number as "mobileNumber",
marital_status as "maritalStatus"
from imt_member
where unique_health_id in (#uniqueHealthId#) and dob > now()-interval ''5 years'' and ((basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')) or (state = ''com.argusoft.imtecho.member.state.temporary''))',true,'ACTIVE',NULL,true,'710df376-5f55-4745-8121-aa46cafc3cab'),
	 (84954,'2021-06-10 00:00:00',84954,'2021-06-10 00:00:00','dr_techo_retrieve_by_family_id_1','familyId','select id as "memberId",
unique_health_id as "uniqueHealthId",
family_id as "familyId",
first_name as "firstName",
middle_name as "middleName",
last_name as "lastName",
gender,
dob,
mobile_number as "mobileNumber",
marital_status as "maritalStatus"
from imt_member where family_id = #familyId#
and dob > now()-interval ''5 years''
and ((basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')) or (state = ''com.argusoft.imtecho.member.state.temporary''))',true,'ACTIVE',NULL,true,'d0469b82-8f98-4402-9c84-9c10ed5fb5f2'),
	 (80222,'2021-08-19 00:00:00',80222,'2021-08-19 00:00:00','update_mobile_feature_state','feature,state','--- update_mobile_feature_state

update mobile_feature_master
set state = ''#state#'', modified_on = now()
where mobile_constant = ''#feature#'';


with features_of_menu as (
	select jsonb_array_elements(CAST(config_json AS jsonb))->>''mobile_constant'' as menu_constant, id
	from mobile_menu_master mmm
	inner join mobile_menu_role_relation mmrr on mmrr.menu_id = mmm.id
)
update mobile_menu_master
set modified_on = now()
where id in (
	select id from features_of_menu where menu_constant = ''#feature#''
);',false,'ACTIVE',NULL,true,'da0f4b07-fd63-470c-9b38-10d02599b7da'),
	 (84954,'2021-06-10 00:00:00',84954,'2021-06-10 00:00:00','dr_techo_rbsk_child_search_by_mobile_number_1','mobileNumber','with mother_details as ( select
	id, unique_health_id, mobile_number, concat( first_name, '' '', middle_name, '' '', last_name ) as mother_name
from
	imt_member
where
	mobile_number in ( #mobileNumber# ) ) select
	child.id as "memberId",
	child.unique_health_id as "uniqueHealthId",
	child.first_name as "firstName",
	child.middle_name as "middleName",
	child.last_name as "lastName",
	child.family_id as "familyId",
	child.gender,
	child.dob,
	child.birth_weight as "weight",
	mother.unique_health_id as "motherId",
	mother.mobile_number as "motherPhoneNumber",
	mother.mother_name as "motherName"
from
	imt_member child
inner join mother_details mother on
	child.mother_id = mother.id
where
	child.mother_id in ( select
		id
	from
		mother_details )
and child.dob > now()-interval ''5 years''
    and ((child.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')) or (child.state = ''com.argusoft.imtecho.member.state.temporary''))',true,'ACTIVE',NULL,true,'48ccc861-381b-42f6-b654-992c3eac7317'),
	 (60512,'2021-06-10 00:00:00',60512,'2021-06-10 00:00:00','health_infra_search_for_web','infraName','select health_infrastructure_details.id,
health_infrastructure_details.name
from health_infrastructure_details
where health_infrastructure_details.name ilike concat(''%'',#infraName#,''%'')
or health_infrastructure_details.name_in_english ilike concat(''%'',#infraName#,''%'')
limit 50',true,'ACTIVE',NULL,true,'43efc396-afde-4abc-b7a4-67866e66dfae'),
	 (60512,'2021-06-10 00:00:00',60512,'2021-06-10 00:00:00','get_lab_test_details_by_id','id','with infra_details as (
	select rch_opd_lab_test_master.id as lab_test_id,
	string_agg(cast(health_infrastructure_lab_test_mapping.health_infra_type as text),'','') as infra_type
	from rch_opd_lab_test_master
	left join health_infrastructure_lab_test_mapping on rch_opd_lab_test_master.id = health_infrastructure_lab_test_mapping.ref_id
	group by rch_opd_lab_test_master.id
),provisional_details as (
	select rch_opd_lab_test_master.id as lab_test_id,
	string_agg(cast(rch_opd_lab_test_provisional_diagnosis_mapping.provisional_id as text),'','') as provisional_ids
	from rch_opd_lab_test_master
	left join rch_opd_lab_test_provisional_diagnosis_mapping on rch_opd_lab_test_master.id = rch_opd_lab_test_provisional_diagnosis_mapping.lab_test_id
	group by rch_opd_lab_test_master.id
)select
rch_opd_lab_test_master.name,
rch_opd_lab_test_master.category,
rch_opd_lab_test_master.is_active,
rch_opd_lab_test_master.form_id as "formId",
infra_details.infra_type as "infraType",
provisional_details.provisional_ids as "provisionalIds"
from rch_opd_lab_test_master
left join infra_details on rch_opd_lab_test_master.id = infra_details.lab_test_id
left join provisional_details on rch_opd_lab_test_master.id = provisional_details.lab_test_id
where rch_opd_lab_test_master.id = #id#',true,'ACTIVE',NULL,true,'4d1e2f9c-9b35-4a48-a59b-01d15d1304e6'),
	 (60512,'2021-06-10 00:00:00',60512,'2021-06-10 00:00:00','retrieve_lab_test_by_provisional_diagnosis','healthInfrastructureId,provisionalIds,healthInfrastructureType','with lab_ids as (
	select distinct lab_test_id as lab_test_ids
	from rch_opd_lab_test_provisional_diagnosis_mapping
	where provisional_id in (#provisionalIds#)
	and (
		lab_test_id in (
			select id from rch_opd_lab_test_master
			where id in (
				select ref_id
				from health_infrastructure_lab_test_mapping
				where (
					(health_infra_id = #healthInfrastructureId# or health_infra_type = #healthInfrastructureType#)
					and permission_type = ''OPD_LAB_TEST''
				)
			)
			and is_active
		)
		or
		lab_test_id in (
			select id
			from rch_opd_lab_test_master
			where category in (
				select ref_id
				from health_infrastructure_lab_test_mapping
				where (
					(health_infra_id = #healthInfrastructureId# or health_infra_type = #healthInfrastructureType#)
					and permission_type = ''OPD_CATEGORY''
				)
			)
			and is_active
		)
	)
)select rch_opd_lab_test_master.id as "labTestId",
rch_opd_lab_test_master.name as "labTestName"
from rch_opd_lab_test_master
where id in (select lab_test_ids from lab_ids)',true,'ACTIVE',NULL,true,'88ea248f-ece5-4cfe-8383-c77152bc666c'),
	 (80314,'2021-08-03 10:59:35.152',80314,'2021-08-03 10:59:35.152','get_anc_id_by_member_id_and_delivery_date','memberId','select id from rch_anc_master where member_id = #memberId#  order by id desc limit 1',true,'ACTIVE',NULL,NULL,'ecfa70e4-d3a7-4915-a589-0ce9b00f4c51'),
	 (74841,'2021-06-10 00:00:00',74841,'2021-06-10 00:00:00','get_jssk_report_data_for_cm_dashboard','date,offset,limit','with report_data as (
    select
    d.location_code as district_code,
    d.english_name as district_name,
    b.location_code as taluka_code,
    b.english_name as taluka_name,
    p.location_code as facility_code,
    p.english_name as facility_name,
    sc.location_code as sub_center_code,
    sc.english_name as sub_center_name,
    jssk.address,
    jssk.name,
    jssk.mobile_number,
    jssk.unique_health_id,
    cast(EXTRACT(YEAR FROM age(jssk.dob)) as text) as age_in_years,
    to_char(jssk.admission_date, ''DD/MM/YYYY'') as admission_date,
    to_char(jssk.discharge_date, ''DD/MM/YYYY'') as discharge_date,
    concat(
        case when jssk.free_drug is true then ''Free Drug, '' else '''' end,
        case when jssk.free_diagnostic is true then ''Free Daignostic, '' else '''' end,
        case when jssk.free_bt is true then ''Free BT, '' else '''' end,
        case when jssk.free_trasport is true then ''Free Transport, '' else '''' end,
        case when jssk.free_diet is true then ''Free Diet'' else '''' end
    ) as service_availed,
    jssk.service_availed_count,
    to_char(jssk.service_date, ''DD/MM/YYYY'') as service_date,
    case    	 
    	 when place_of_service = ''HOSP'' then ''Hostpital''
	     when place_of_service = ''HOME'' then ''Home''	
	     when place_of_service = ''MAMTA_DAY'' then ''Mamta Day''	
	     when place_of_service = ''ON_THE_WAY'' then ''On The Way''
	     when place_of_service = ''108_AMBULANCE'' then ''108 Ambulance''
	     when place_of_service = ''OUT_OF_STATE_GOVT'' then ''Out Of State Government Hospital''
	end as 	place_of_service,
	jssk.service_type 
    from cm_dashboard_daily_jssk_detail jssk
    inner join location_master lm on lm.id = jssk.location_id
        left join location_master d on lh.level3 = d.id and d.state = ''ACTIVE'' and d.name not ilike ''%delete%''
        left join location_master b on lh.level4 = b.id and b.state = ''ACTIVE'' and b.name not ilike ''%delete%''
        left join location_master p on lh.level5 = p.id and p.state = ''ACTIVE'' and p.name not ilike ''%delete%''
        left join location_master sc on lh.level6 = sc.id and sc.state = ''ACTIVE'' and sc.name not ilike ''%delete%''
    where
    jssk.service_date = cast(''#date#'' as date)
    order by
    jssk.service_availed_count desc
    limit #limit# offset #offset#
)
select
ROW_NUMBER() over () + cast(#offset# as int) as sr_no,
report_data.*
from
report_data;',true,'ACTIVE',NULL,true,'8614a347-3692-4be9-9204-5db95be6e9c0'),
	 (78434,'2021-06-10 00:00:00',78434,'2021-06-10 00:00:00','get_all_sms_blacklist_numbers','limit,offset','
select
    sbm.id as "id",
    sbm.mobile_number as "mobileNumber",
    sbm.member_id as "memberId",
    sbm.status as "status",
    sbm.active_remark as "activeRemark",
    sbm.inactive_remark as "inactiveRemark",
    im.unique_health_id as "uniqueHealthId"
from
    sms_block_master sbm
inner join
    imt_member im on im.id = sbm.member_id
limit #limit# offset #offset#
',true,'ACTIVE',NULL,true,'9c0af4a5-5894-4c2c-aea2-d96d0c438265'),
	 (60512,'2021-09-21 00:00:00',60512,'2021-09-21 00:00:00','retrieve_je_vaccine_batch_details','locationId','with batch_service_count as (
	select rch_je_vaccine_batch_details.id as batch_id,
	count(1) filter (where rch_je_vaccine_service.id is not null) as service_given_count
	from rch_je_vaccine_batch_details
	left join rch_je_vaccine_service on rch_je_vaccine_batch_details.id = rch_je_vaccine_service.batch_id
	and rch_je_vaccine_service.new_child_batch_id is null
	and rch_je_vaccine_service.state = ''ACTIVE''
	where rch_je_vaccine_batch_details.location_id = #locationId#
	group by rch_je_vaccine_batch_details.id
),batch_service_new_count as (
	select rch_je_vaccine_batch_details.id as batch_id,
	count(1) filter (where rch_je_vaccine_service.id is not null) as service_given_count
	from rch_je_vaccine_batch_details
	left join rch_je_vaccine_service on rch_je_vaccine_batch_details.id = rch_je_vaccine_service.batch_id
	and rch_je_vaccine_service.new_child_batch_id is not null
	and rch_je_vaccine_service.state = ''ACTIVE''
	where rch_je_vaccine_batch_details.location_id = #locationId#
	group by rch_je_vaccine_batch_details.id
),file_details as (
	select rch_je_vaccine_batch_details.id as batch_id,
	string_agg(concat(rch_je_vaccine_batch_file_details.file_id,'':'',document_master.actual_file_name),'', '') as file_details
	from rch_je_vaccine_batch_details
	inner join rch_je_vaccine_batch_file_details on rch_je_vaccine_batch_details.id = rch_je_vaccine_batch_file_details.batch_id
	inner join document_master on rch_je_vaccine_batch_file_details.file_id = cast(document_master.id as text)
	group by rch_je_vaccine_batch_details.id
)select rch_je_vaccine_batch_details.id as "batchId",
file_details.file_details as "fileDetails",
rch_je_vaccine_batch_details.created_by as "createdBy",
rch_je_vaccine_batch_details.created_on as "createdOn",
rch_je_vaccine_batch_details.no_of_page as "totalPageCount",
rch_je_vaccine_batch_details.no_of_child as "totalBatchCount",
rch_je_vaccine_batch_details.no_of_new_child as "totalBatchNewCount",
rch_je_vaccine_batch_details.no_of_child - batch_service_count.service_given_count as "pendingCount",
rch_je_vaccine_batch_details.no_of_new_child - batch_service_new_count.service_given_count as "pendingNewCount"
from rch_je_vaccine_batch_details
inner join batch_service_count on rch_je_vaccine_batch_details.id = batch_service_count.batch_id
inner join batch_service_new_count on rch_je_vaccine_batch_details.id = batch_service_new_count.batch_id
inner join file_details on rch_je_vaccine_batch_details.id = file_details.batch_id
order by rch_je_vaccine_batch_details.created_on desc',true,'ACTIVE',NULL,true,'b4380a71-5dce-4991-bf77-d6f82cf361dd'),
	 (74840,'2021-06-10 00:00:00',74840,'2021-06-10 00:00:00','translation_label_update_1','oldKey,appName,isTranslationPending,language,loggedInUserId,text','INSERT INTO internationalization_label_master as a (country, key, language, created_by, created_on, app_name, text, translation_pending)
VALUES (''IN'',#oldKey#, #language#, #loggedInUserId# , now(), #appName# , #text# ,false)
ON CONFLICT ON CONSTRAINT internationalization_label_master_pkey
DO
UPDATE
SET app_name=#appName#,text = #text#,translation_pending=#isTranslationPending#,modified_on=now()
WHERE a.key = #oldKey# and a.language=#language#;',false,'ACTIVE',NULL,true,'a8dbf62c-788b-449e-8ae5-589daacb8398'),
	 (60512,'2021-06-10 00:00:00',60512,'2021-06-10 00:00:00','check_health_infra_assignable_location','locationId,healthInfraType','with type_mapping as (
	select health_infra_type_id, string_agg(ltm.name, '','') as loc_value, string_agg(ltm."type", '','') as loc_types from health_infrastructure_type_location hitl
	left join location_type_master ltm on ltm.type = hitl.location_type
	where hitl.health_infra_type_id = #healthInfraType#
	group by health_infra_type_id
)

select lm.type,ltm.level, type_mapping.*  from location_master lm
left join location_type_master ltm on ltm."type" = lm.type
left join type_mapping on true
where lm.id = #locationId#',true,'ACTIVE',NULL,true,'99b2a541-cebe-4872-9980-ee3bd19cdde8'),
	 (60512,'2021-06-10 00:00:00',60512,'2021-06-10 00:00:00','fp_search_by_member_id','offSet,limit,uniqueHealthId','with member_detail as (
	select imt_member.is_pregnant, imt_member.id as "memberId",
	imt_member.unique_health_id as "uniqueHealthId",
	concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "memberName",
	cast(age(imt_member.dob) as text) as "memberAge",
	case when imt_member.year_of_wedding is not null then concat(date_part(''year'',current_date) - imt_member.year_of_wedding,''years'') else null end as "memberWedding",
	imt_member.last_method_of_contraception as "memberCurrentFp",
	imt_member.fp_insert_operate_date as "memberFpOperateDate",
	imt_member.lmp as "lmpDate", imt_member.last_delivery_date as "lastDeliveryDate",
	get_location_hierarchy(imt_family.location_id) as "location",
	imt_family.location_id as "locationId",
	imt_family.area_id as "areaId"
	from imt_member
	inner join imt_family on imt_member.family_id = imt_family.family_id
	where imt_member.unique_health_id = #uniqueHealthId# and imt_member.marital_status = 629 and imt_member.gender = ''F''
		and imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'',''TEMPORARY'')
	    and date_part(''years'',current_date) - date_part(''years'',imt_member.dob) between 18 and 45
	    and (imt_member.is_pregnant is null or imt_member.is_pregnant = false)
	    and (imt_member.menopause_arrived is null or imt_member.menopause_arrived = false)
	    and (imt_member.hysterectomy_done is null or imt_member.hysterectomy_done = false)
	    and (imt_member.last_method_of_contraception is null
	    		or (imt_member.last_method_of_contraception != ''FMLSTR'' and imt_member.last_method_of_contraception != ''MLSTR'')
	    		or (imt_member.fp_insert_operate_date is null)
	    		or (extract(year from age(current_date, imt_member.fp_insert_operate_date)) * 12 + extract(month from age(current_date, imt_member.fp_insert_operate_date)) <=3)
	    	)
	order by imt_member.id
	limit #limit# offset #offSet#
),child_details as (
	select member_detail."memberId",
	count(child.id) as "liveChildren",
	SUM(case when child.gender = ''M'' then 1 else 0 end) as "liveChildrenBoys",
	SUM(case when child.gender = ''F'' then 1 else 0 end) as "liveChildrenGirls",
	cast(age(max(child.dob)) as text) as "lastChildAge"
	from member_detail
	left join imt_member child on member_detail."memberId" = child.mother_id
	group by member_detail."memberId"
),fhw_details as (
	select member_detail."memberId",
	concat(fhw.first_name,'' '',fhw.middle_name,'' '',fhw.last_name) as "fhwName",
	fhw.contact_number as "fhwNumber"
	from member_detail
	inner join um_user_location fhw_location on member_detail."locationId" = fhw_location.loc_id and fhw_location.state = ''ACTIVE''
	inner join um_user fhw on fhw_location.user_id = fhw.id and fhw.role_id = 30 and fhw.state = ''ACTIVE''
),asha_details as (
	select member_detail."memberId",
	string_agg(concat(asha.first_name,'' '',asha.middle_name,'' '',asha.last_name,'' ('',asha.contact_number,'')''),'', '') as asha_details
	from member_detail
	inner join um_user_location asha_location on member_detail."areaId" = asha_location.loc_id and asha_location.state = ''ACTIVE''
	inner join um_user asha on asha_location.user_id = asha.id and asha.role_id = 24 and asha.state = ''ACTIVE''
	group by member_detail."memberId"
)select member_detail.*,
child_details."liveChildren",
child_details."liveChildrenBoys",
child_details."liveChildrenGirls",
child_details."lastChildAge",
fhw_details."fhwName",
fhw_details."fhwNumber",
asha_details.asha_details as "ashaDetails"
from member_detail
left join child_details on member_detail."memberId" = child_details."memberId"
left join fhw_details on member_detail."memberId" = fhw_details."memberId"
left join asha_details on member_detail."memberId" = asha_details."memberId"',true,'ACTIVE',NULL,true,'6513f497-2b84-4774-88f8-3a99f4fb3f08'),
	 (60512,'2021-07-30 00:00:00',60512,'2021-07-30 00:00:00','retrieve_system_constraint_field_masters','form_uuid','select cast(uuid as text) as uuid,
cast(form_master_uuid as text) as form_master_uuid,
field_key,field_name,field_type,ng_model,app_name,
cast(standard_field_master_uuid as text) as standard_field_master_uuid,
created_by,modified_by
from system_constraint_field_master
where form_master_uuid = cast(#form_uuid# as uuid)',true,'ACTIVE',NULL,true,'0c87c87a-3611-4ade-806a-29b24b444027'),
	 (60512,'2021-07-30 00:00:00',60512,'2021-07-30 00:00:00','retrieve_system_constraint_field_value_masters','form_uuid','select cast(system_constraint_field_value_master.uuid as text) as uuid,
cast(system_constraint_field_value_master.field_master_uuid as text) as field_master_uuid,
system_constraint_field_value_master.value_type,
system_constraint_field_value_master.key,
system_constraint_field_value_master.value,
system_constraint_field_value_master.default_value,
system_constraint_field_value_master.created_by,
system_constraint_field_value_master.modified_by
from system_constraint_field_value_master
inner join system_constraint_field_master on system_constraint_field_value_master.field_master_uuid = system_constraint_field_master.uuid
where system_constraint_field_master.form_master_uuid = cast(#form_uuid# as uuid)',true,'ACTIVE',NULL,true,'4aa13957-5131-45af-9bbb-87fab686c0ba'),
	 (60512,'2021-07-30 11:47:25.46',60512,'2021-07-30 11:47:25.46','retrieve_system_constraint_translation_labels','fieldKeys','select *
from internationalization_label_master
where key in (#fieldKeys#)',true,'ACTIVE',NULL,NULL,'a900bd68-4af0-4ff9-9d3f-3660ded9105a'),
	 (80222,'2021-08-19 00:00:00',80222,'2021-08-19 00:00:00','mobile_features','search,offset,limit','---- mobile_features
select mobile_constant , mobile_display_name, feature_name, state from mobile_feature_master mfm
where case when ''#search#'' = ''null'' or mfm.mobile_display_name ilike ''%#search#%'' then
true else false end
order by mfm.feature_name
limit #limit# offset #offset#;',true,'ACTIVE',NULL,true,'77c2809a-1024-435a-b965-f0c149b23267'),
	 (97051,'2021-08-19 00:00:00',97051,'2021-08-19 00:00:00','mobile_form_list',NULL,'--- mobile_form_list
select id, form_name, file_name from mobile_form_details mfd;',true,'ACTIVE',NULL,true,'4d10a891-146a-4096-bbd9-e716e6627410'),
	 (97051,'2021-08-19 00:00:00',97051,'2021-08-19 00:00:00','mobile_bean_list',NULL,'--- mobile_bean_list
select bean from mobile_beans_master mbm;',true,'ACTIVE',NULL,true,'0a9f4981-1d3c-4cb8-9ae0-4be5024d83ec'),
	 (60512,'2021-06-10 00:00:00',60512,'2021-06-10 00:00:00','fp_search_by_family_id','familyId,offSet,limit','with member_detail as (
	select imt_member.is_pregnant, imt_member.id as "memberId",
	imt_member.unique_health_id as "uniqueHealthId",
	concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "memberName",
	cast(age(imt_member.dob) as text) as "memberAge",
	case when imt_member.year_of_wedding is not null then concat(date_part(''year'',current_date) - imt_member.year_of_wedding,''years'') else null end as "memberWedding",
	imt_member.last_method_of_contraception as "memberCurrentFp",
	imt_member.fp_insert_operate_date as "memberFpOperateDate",
	imt_member.lmp as "lmpDate", imt_member.last_delivery_date as "lastDeliveryDate",
	get_location_hierarchy(imt_family.location_id) as "location",
	imt_family.location_id as "locationId",
	imt_family.area_id as "areaId"
	from imt_member
	inner join imt_family on imt_member.family_id = imt_family.family_id
	where imt_member.family_id = #familyId# and imt_member.marital_status = 629 and imt_member.gender = ''F''
		and imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'',''TEMPORARY'')
	    and date_part(''years'',current_date) - date_part(''years'',imt_member.dob) between 18 and 45
	    and (imt_member.is_pregnant is null or imt_member.is_pregnant = false)
	    and (imt_member.menopause_arrived is null or imt_member.menopause_arrived = false)
	    and (imt_member.hysterectomy_done is null or imt_member.hysterectomy_done = false)
	    and (imt_member.last_method_of_contraception is null
	    		or (imt_member.last_method_of_contraception != ''FMLSTR'' and imt_member.last_method_of_contraception != ''MLSTR'')
	    		or (imt_member.fp_insert_operate_date is null)
	    		or (extract(year from age(current_date, imt_member.fp_insert_operate_date)) * 12 + extract(month from age(current_date, imt_member.fp_insert_operate_date)) <=3)
	    	)
	order by imt_member.id
	limit #limit# offset #offSet#
),child_details as (
	select member_detail."memberId",
	count(child.id) as "liveChildren",
	SUM(case when child.gender = ''M'' then 1 else 0 end) as "liveChildrenBoys",
	SUM(case when child.gender = ''F'' then 1 else 0 end) as "liveChildrenGirls",
	cast(age(max(child.dob)) as text) as "lastChildAge"
	from member_detail
	left join imt_member child on member_detail."memberId" = child.mother_id
	group by member_detail."memberId"
),fhw_details as (
	select member_detail."memberId",
	concat(fhw.first_name,'' '',fhw.middle_name,'' '',fhw.last_name) as "fhwName",
	fhw.contact_number as "fhwNumber"
	from member_detail
	inner join um_user_location fhw_location on member_detail."locationId" = fhw_location.loc_id and fhw_location.state = ''ACTIVE''
	inner join um_user fhw on fhw_location.user_id = fhw.id and fhw.role_id = 30 and fhw.state = ''ACTIVE''
),asha_details as (
	select member_detail."memberId",
	string_agg(concat(asha.first_name,'' '',asha.middle_name,'' '',asha.last_name,'' ('',asha.contact_number,'')''),'', '') as asha_details
	from member_detail
	inner join um_user_location asha_location on member_detail."areaId" = asha_location.loc_id and asha_location.state = ''ACTIVE''
	inner join um_user asha on asha_location.user_id = asha.id and asha.role_id = 24 and asha.state = ''ACTIVE''
	group by member_detail."memberId"
)select member_detail.*,
child_details."liveChildren",
child_details."liveChildrenBoys",
child_details."liveChildrenGirls",
child_details."lastChildAge",
fhw_details."fhwName",
fhw_details."fhwNumber",
asha_details.asha_details as "ashaDetails"
from member_detail
left join child_details on member_detail."memberId" = child_details."memberId"
left join fhw_details on member_detail."memberId" = fhw_details."memberId"
left join asha_details on member_detail."memberId" = asha_details."memberId"',true,'ACTIVE',NULL,true,'64f2fa65-3610-4fa3-998c-1ac7038bcadd'),
	 (60512,'2021-09-21 00:00:00',60512,'2021-09-21 00:00:00','retrieve_username_by_location','offset,locationId,limit','select um_user.user_name as "userName",
um_user.first_time_password_changed as "passwordChanged"
from um_user_location
inner join um_user on um_user_location.user_id = um_user.id
where um_user_location.loc_id = #locationId#
and um_user_location.state = ''ACTIVE''
order by um_user.created_on desc
limit #limit# offset #offset#',true,'ACTIVE',NULL,true,'2cb4671b-72d0-48f3-8d0c-b4ef9836e352'),
	 (60512,'2021-06-10 00:00:00',60512,'2021-06-10 00:00:00','fp_search_by_location_id','offSet,locationId,limit','with member_detail as (
	select imt_member.is_pregnant, imt_member.id as "memberId",
	imt_member.unique_health_id as "uniqueHealthId",
	concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "memberName",
	cast(age(imt_member.dob) as text) as "memberAge",
	case when imt_member.year_of_wedding is not null then concat(date_part(''year'',current_date) - imt_member.year_of_wedding,''years'') else null end as "memberWedding",
	imt_member.last_method_of_contraception as "memberCurrentFp",
	imt_member.fp_insert_operate_date as "memberFpOperateDate",
	imt_member.lmp as "lmpDate", imt_member.last_delivery_date as "lastDeliveryDate",
	get_location_hierarchy(imt_family.location_id) as "location",
	imt_family.location_id as "locationId",
	imt_family.area_id as "areaId"
	from imt_member
	inner join imt_family on imt_member.family_id = imt_family.family_id
	where case when imt_family.area_id is not null then imt_family.area_id else imt_family.location_id end in
		(select child_id from location_hierchy_closer_det where parent_id = #locationId#) and imt_member.marital_status = 629 and imt_member.gender = ''F''
		and imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'',''TEMPORARY'')
	    and date_part(''years'',current_date) - date_part(''years'',imt_member.dob) between 18 and 45
	    and (imt_member.is_pregnant is null or imt_member.is_pregnant = false)
	    and (imt_member.menopause_arrived is null or imt_member.menopause_arrived = false)
	    and (imt_member.hysterectomy_done is null or imt_member.hysterectomy_done = false)
	    and (imt_member.last_method_of_contraception is null
	    		or (imt_member.last_method_of_contraception != ''FMLSTR'' and imt_member.last_method_of_contraception != ''MLSTR'')
	    		or (imt_member.fp_insert_operate_date is null)
	    		or (extract(year from age(current_date, imt_member.fp_insert_operate_date)) * 12 + extract(month from age(current_date, imt_member.fp_insert_operate_date)) <=3)
	    	)
	order by imt_member.id
	limit #limit# offset #offSet#
),child_details as (
	select member_detail."memberId",
	count(child.id) as "liveChildren",
	SUM(case when child.gender = ''M'' then 1 else 0 end) as "liveChildrenBoys",
	SUM(case when child.gender = ''F'' then 1 else 0 end) as "liveChildrenGirls",
	cast(age(max(child.dob)) as text) as "lastChildAge"
	from member_detail
	left join imt_member child on member_detail."memberId" = child.mother_id
	group by member_detail."memberId"
),fhw_details as (
	select member_detail."memberId",
	concat(fhw.first_name,'' '',fhw.middle_name,'' '',fhw.last_name) as "fhwName",
	fhw.contact_number as "fhwNumber"
	from member_detail
	inner join um_user_location fhw_location on member_detail."locationId" = fhw_location.loc_id and fhw_location.state = ''ACTIVE''
	inner join um_user fhw on fhw_location.user_id = fhw.id and fhw.role_id = 30 and fhw.state = ''ACTIVE''
),asha_details as (
	select member_detail."memberId",
	string_agg(concat(asha.first_name,'' '',asha.middle_name,'' '',asha.last_name,'' ('',asha.contact_number,'')''),'', '') as asha_details
	from member_detail
	inner join um_user_location asha_location on member_detail."areaId" = asha_location.loc_id and asha_location.state = ''ACTIVE''
	inner join um_user asha on asha_location.user_id = asha.id and asha.role_id = 24 and asha.state = ''ACTIVE''
	group by member_detail."memberId"
)select member_detail.*,
child_details."liveChildren",
child_details."liveChildrenBoys",
child_details."liveChildrenGirls",
child_details."lastChildAge",
fhw_details."fhwName",
fhw_details."fhwNumber",
asha_details.asha_details as "ashaDetails"
from member_detail
left join child_details on member_detail."memberId" = child_details."memberId"
left join fhw_details on member_detail."memberId" = fhw_details."memberId"
left join asha_details on member_detail."memberId" = asha_details."memberId"',true,'ACTIVE',NULL,true,'a3fbe299-83ed-4522-a6c6-5b8a4e5f6677'),
	 (60512,'2021-06-10 00:00:00',60512,'2021-06-10 00:00:00','fp_search_by_family_mobile_number','offSet,mobileNumber,limit','with member_detail as (
	select imt_member.is_pregnant, imt_member.id as "memberId",
	imt_member.unique_health_id as "uniqueHealthId",
	concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "memberName",
	cast(age(imt_member.dob) as text) as "memberAge",
	case when imt_member.year_of_wedding is not null then concat(date_part(''year'',current_date) - imt_member.year_of_wedding,''years'') else null end as "memberWedding",
	imt_member.last_method_of_contraception as "memberCurrentFp",
	imt_member.fp_insert_operate_date as "memberFpOperateDate",
	imt_member.lmp as "lmpDate", imt_member.last_delivery_date as "lastDeliveryDate",
	get_location_hierarchy(imt_family.location_id) as "location",
	imt_family.location_id as "locationId",
	imt_family.area_id as "areaId"
	from imt_member
	inner join imt_family on imt_member.family_id = imt_family.family_id
	where imt_member.family_id in (select family_id from imt_member where mobile_number = #mobileNumber#) and imt_member.marital_status = 629 and imt_member.gender = ''F''
		and imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'',''TEMPORARY'')
	    and date_part(''years'',current_date) - date_part(''years'',imt_member.dob) between 18 and 45
	    and (imt_member.is_pregnant is null or imt_member.is_pregnant = false)
	    and (imt_member.menopause_arrived is null or imt_member.menopause_arrived = false)
	    and (imt_member.hysterectomy_done is null or imt_member.hysterectomy_done = false)
	    and (imt_member.last_method_of_contraception is null
	    		or (imt_member.last_method_of_contraception != ''FMLSTR'' and imt_member.last_method_of_contraception != ''MLSTR'')
	    		or (imt_member.fp_insert_operate_date is null)
	    		or (extract(year from age(current_date, imt_member.fp_insert_operate_date)) * 12 + extract(month from age(current_date, imt_member.fp_insert_operate_date)) <=3)
	    	)
	order by imt_member.id
	limit #limit# offset #offSet#
),child_details as (
	select member_detail."memberId",
	count(child.id) as "liveChildren",
	SUM(case when child.gender = ''M'' then 1 else 0 end) as "liveChildrenBoys",
	SUM(case when child.gender = ''F'' then 1 else 0 end) as "liveChildrenGirls",
	cast(age(max(child.dob)) as text) as "lastChildAge"
	from member_detail
	left join imt_member child on member_detail."memberId" = child.mother_id
	group by member_detail."memberId"
),fhw_details as (
	select member_detail."memberId",
	concat(fhw.first_name,'' '',fhw.middle_name,'' '',fhw.last_name) as "fhwName",
	fhw.contact_number as "fhwNumber"
	from member_detail
	inner join um_user_location fhw_location on member_detail."locationId" = fhw_location.loc_id and fhw_location.state = ''ACTIVE''
	inner join um_user fhw on fhw_location.user_id = fhw.id and fhw.role_id = 30 and fhw.state = ''ACTIVE''
),asha_details as (
	select member_detail."memberId",
	string_agg(concat(asha.first_name,'' '',asha.middle_name,'' '',asha.last_name,'' ('',asha.contact_number,'')''),'', '') as asha_details
	from member_detail
	inner join um_user_location asha_location on member_detail."areaId" = asha_location.loc_id and asha_location.state = ''ACTIVE''
	inner join um_user asha on asha_location.user_id = asha.id and asha.role_id = 24 and asha.state = ''ACTIVE''
	group by member_detail."memberId"
)select member_detail.*,
child_details."liveChildren",
child_details."liveChildrenBoys",
child_details."liveChildrenGirls",
child_details."lastChildAge",
fhw_details."fhwName",
fhw_details."fhwNumber",
asha_details.asha_details as "ashaDetails"
from member_detail
left join child_details on member_detail."memberId" = child_details."memberId"
left join fhw_details on member_detail."memberId" = fhw_details."memberId"
left join asha_details on member_detail."memberId" = asha_details."memberId"',true,'ACTIVE',NULL,true,'d0efc905-1f84-4666-8a76-c3e4c218d28f'),
	 (60512,'2021-06-10 00:00:00',60512,'2021-06-10 00:00:00','fp_search_by_mobile_number','offSet,mobileNumber,limit','with member_detail as (
	select imt_member.is_pregnant, imt_member.id as "memberId",
	imt_member.unique_health_id as "uniqueHealthId",
	concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "memberName",
	cast(age(imt_member.dob) as text) as "memberAge",
	case when imt_member.year_of_wedding is not null then concat(date_part(''year'',current_date) - imt_member.year_of_wedding,''years'') else null end as "memberWedding",
	imt_member.last_method_of_contraception as "memberCurrentFp",
	imt_member.fp_insert_operate_date as "memberFpOperateDate",
	imt_member.lmp as "lmpDate", imt_member.last_delivery_date as "lastDeliveryDate",
	get_location_hierarchy(imt_family.location_id) as "location",
	imt_family.location_id as "locationId",
	imt_family.area_id as "areaId"
	from imt_member
	inner join imt_family on imt_member.family_id = imt_family.family_id
	where imt_member.mobile_number = #mobileNumber# and imt_member.marital_status = 629 and imt_member.gender = ''F''
		and imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'',''TEMPORARY'')
	    and date_part(''years'',current_date) - date_part(''years'',imt_member.dob) between 18 and 45
	    and (imt_member.is_pregnant is null or imt_member.is_pregnant = false)
	    and (imt_member.menopause_arrived is null or imt_member.menopause_arrived = false)
	    and (imt_member.hysterectomy_done is null or imt_member.hysterectomy_done = false)
	    and (imt_member.last_method_of_contraception is null
	    		or (imt_member.last_method_of_contraception != ''FMLSTR'' and imt_member.last_method_of_contraception != ''MLSTR'')
	    		or (imt_member.fp_insert_operate_date is null)
	    		or (extract(year from age(current_date, imt_member.fp_insert_operate_date)) * 12 + extract(month from age(current_date, imt_member.fp_insert_operate_date)) <=3)
	    	)
	order by imt_member.id
	limit #limit# offset #offSet#
),child_details as (
	select member_detail."memberId",
	count(child.id) as "liveChildren",
	SUM(case when child.gender = ''M'' then 1 else 0 end) as "liveChildrenBoys",
	SUM(case when child.gender = ''F'' then 1 else 0 end) as "liveChildrenGirls",
	cast(age(max(child.dob)) as text) as "lastChildAge"
	from member_detail
	left join imt_member child on member_detail."memberId" = child.mother_id
	group by member_detail."memberId"
),fhw_details as (
	select member_detail."memberId",
	concat(fhw.first_name,'' '',fhw.middle_name,'' '',fhw.last_name) as "fhwName",
	fhw.contact_number as "fhwNumber"
	from member_detail
	inner join um_user_location fhw_location on member_detail."locationId" = fhw_location.loc_id and fhw_location.state = ''ACTIVE''
	inner join um_user fhw on fhw_location.user_id = fhw.id and fhw.role_id = 30 and fhw.state = ''ACTIVE''
),asha_details as (
	select member_detail."memberId",
	string_agg(concat(asha.first_name,'' '',asha.middle_name,'' '',asha.last_name,'' ('',asha.contact_number,'')''),'', '') as asha_details
	from member_detail
	inner join um_user_location asha_location on member_detail."areaId" = asha_location.loc_id and asha_location.state = ''ACTIVE''
	inner join um_user asha on asha_location.user_id = asha.id and asha.role_id = 24 and asha.state = ''ACTIVE''
	group by member_detail."memberId"
)select member_detail.*,
child_details."liveChildren",
child_details."liveChildrenBoys",
child_details."liveChildrenGirls",
child_details."lastChildAge",
fhw_details."fhwName",
fhw_details."fhwNumber",
asha_details.asha_details as "ashaDetails"
from member_detail
left join child_details on member_detail."memberId" = child_details."memberId"
left join fhw_details on member_detail."memberId" = fhw_details."memberId"
left join asha_details on member_detail."memberId" = asha_details."memberId"',true,'ACTIVE',NULL,true,'b1869fb7-0b81-4116-8ba3-dd84ddff371d'),
	 (58981,'2021-09-21 00:00:00',58981,'2021-09-21 00:00:00','mob_work_register_detail_cowin_appointment','visitId','select
concat(cmm.first_name, '' '', cmm.middle_name, '' '', cmm.last_name) as "Member Name",
case when cmm.mobile_number is null then ''Not Available'' else cmm.mobile_number end as "Mobile Number",
csm.vaccine as "Vaccine Name",
concat(csm.name, '' ,'', csm.block_name,'' ,'',csm.district_name) as "Vaccination Center",
cmm.latest_scheduled_date as "Appointment Date",
css.slot as "Slot time"
from cowin_member_appointment_detail cma
inner join cowin_member_master cmm on cmm.id = cma.member_master_id
inner join cowin_session_master csm on csm.id = cma.session_master_id
inner join cowin_session_slot css on css.id = cma.session_slot_id
where cma.id = #visitId#',true,'ACTIVE',NULL,true,'66442521-785f-45ca-9b76-72bf842664bb'),
	 (78434,'2021-09-21 00:00:00',78434,'2021-09-21 00:00:00','update_cowin_on_spot_slot','id,total_on_spot_capacity','
update
cowin_session_master
set
total_on_spot_capacity = #total_on_spot_capacity#
where
id = #id#;
',false,'ACTIVE',NULL,true,'b38f4ef1-c8c7-4f6b-a5aa-2aa5b0bb79b6'),
	 (60512,'2021-06-10 00:00:00',60512,'2021-06-10 00:00:00','fp_search_by_name','firstName,lastName,offSet,locationId,limit,middleName','with member_detail as (
	select imt_member.is_pregnant, imt_member.id as "memberId",
	imt_member.unique_health_id as "uniqueHealthId",
	concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "memberName",
	cast(age(imt_member.dob) as text) as "memberAge",
	case when imt_member.year_of_wedding is not null then concat(date_part(''year'',current_date) - imt_member.year_of_wedding,''years'') else null end as "memberWedding",
	imt_member.last_method_of_contraception as "memberCurrentFp",
	imt_member.fp_insert_operate_date as "memberFpOperateDate",
	imt_member.lmp as "lmpDate", imt_member.last_delivery_date as "lastDeliveryDate",
	get_location_hierarchy(imt_family.location_id) as "location",
	imt_family.location_id as "locationId",
	imt_family.area_id as "areaId"
	from imt_member
	inner join imt_family on imt_member.family_id = imt_family.family_id
	where imt_family.location_id in (select child_id from location_hierchy_closer_det where parent_id = #locationId#)
	and similarity(#firstName#,imt_member.first_name)>=0.50
	and similarity(#lastName#,imt_member.last_name)>=0.60
	and case when #middleName# != ''null'' and #middleName# !='''' then similarity(#middleName#,imt_member.middle_name)>=0.50 else 1=1 end
	and imt_member.marital_status = 629 and imt_member.gender = ''F''
	and imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'',''TEMPORARY'')
	    and date_part(''years'',current_date) - date_part(''years'',imt_member.dob) between 18 and 45
	    and (imt_member.is_pregnant is null or imt_member.is_pregnant = false)
	    and (imt_member.menopause_arrived is null or imt_member.menopause_arrived = false)
	    and (imt_member.hysterectomy_done is null or imt_member.hysterectomy_done = false)
	    and (imt_member.last_method_of_contraception is null
	    		or (imt_member.last_method_of_contraception != ''FMLSTR'' and imt_member.last_method_of_contraception != ''MLSTR'')
	    		or (imt_member.fp_insert_operate_date is null)
	    		or (extract(year from age(current_date, imt_member.fp_insert_operate_date)) * 12 + extract(month from age(current_date, imt_member.fp_insert_operate_date)) <=3)
	    	)
	order by imt_member.id
	limit #limit# offset #offSet#
),child_details as (
	select member_detail."memberId",
	count(child.id) as "liveChildren",
	SUM(case when child.gender = ''M'' then 1 else 0 end) as "liveChildrenBoys",
	SUM(case when child.gender = ''F'' then 1 else 0 end) as "liveChildrenGirls",
	cast(age(max(child.dob)) as text) as "lastChildAge"
	from member_detail
	left join imt_member child on member_detail."memberId" = child.mother_id
	group by member_detail."memberId"
),fhw_details as (
	select member_detail."memberId",
	concat(fhw.first_name,'' '',fhw.middle_name,'' '',fhw.last_name) as "fhwName",
	fhw.contact_number as "fhwNumber"
	from member_detail
	inner join um_user_location fhw_location on member_detail."locationId" = fhw_location.loc_id and fhw_location.state = ''ACTIVE''
	inner join um_user fhw on fhw_location.user_id = fhw.id and fhw.role_id = 30 and fhw.state = ''ACTIVE''
),asha_details as (
	select member_detail."memberId",
	string_agg(concat(asha.first_name,'' '',asha.middle_name,'' '',asha.last_name,'' ('',asha.contact_number,'')''),'', '') as asha_details
	from member_detail
	inner join um_user_location asha_location on member_detail."areaId" = asha_location.loc_id and asha_location.state = ''ACTIVE''
	inner join um_user asha on asha_location.user_id = asha.id and asha.role_id = 24 and asha.state = ''ACTIVE''
	group by member_detail."memberId"
)select member_detail.*,
child_details."liveChildren",
child_details."liveChildrenBoys",
child_details."liveChildrenGirls",
child_details."lastChildAge",
fhw_details."fhwName",
fhw_details."fhwNumber",
asha_details.asha_details as "ashaDetails"
from member_detail
left join child_details on member_detail."memberId" = child_details."memberId"
left join fhw_details on member_detail."memberId" = fhw_details."memberId"
left join asha_details on member_detail."memberId" = asha_details."memberId"',true,'ACTIVE',NULL,true,'b9b30470-daff-4df0-99ae-36b0bfd8fe43'),
	 (60512,'2019-08-27 00:00:00',60512,'2021-07-26 11:47:33.819','get_rch_register_eligible_couple_service_detailed_info','member_id,from_date,to_date','with dates as (
	select
	to_date(case when #from_date# = null then null else #from_date# end,''MM/DD/YYYY'') as from_date,
	to_date(case when #to_date# = null then null else #to_date# end,''MM/DD/YYYY'')+ interval ''1 day'' - interval ''1 millisecond'' as to_date
),
lmp_followup_det as (
	select
	lfu.member_id,
	cast(
	    json_agg(
	        json_build_object(
	            ''date'',
	            to_char(lfu.service_date, ''dd-MM-yyyy''),
	            ''contraception_method'',
	            case
	                when lfu.family_planning_method = ''NONE'' then ''None''
	                when lfu.family_planning_method = ''ANTARA'' then ''Antara''
	                when lfu.family_planning_method = ''IUCD5'' then ''IUCD 5 Years''
	                when lfu.family_planning_method = ''IUCD10'' then ''IUCD 10 Years''
	                when lfu.family_planning_method = ''CONDOM'' then ''Condom''
	                when lfu.family_planning_method = ''ORALPILLS'' then ''Oral Pills''
	                when lfu.family_planning_method = ''CHHAYA'' then ''Chhaya''
	                when lfu.family_planning_method = ''ANTARA'' then ''Antara''
	                when lfu.family_planning_method = ''CONTRA'' then ''Emergency Contraceptive Pills''
	                when lfu.family_planning_method = ''FMLSTR'' then ''Female Sterilization''
	                when lfu.family_planning_method = ''MLSTR'' then ''Male Sterilization''
			        when lfu.family_planning_method = ''OTHER'' then ''Other''
			        when lfu.family_planning_method = ''CHHANT'' then ''Chhant''
	                else lfu.family_planning_method
                end,
                ''is_pregnant'',
                case
                    when lfu.is_pregnant is true then ''Yes''
                    else ''No''
                end
            )
        ) as text) as lmp_visit_info
	from rch_lmp_follow_up lfu
	inner join dates on lfu.created_on
		between dates.from_date and dates.to_date
	where lfu.member_status = ''AVAILABLE''
		and lfu.member_id = #member_id#
	group by lfu.member_id
),
last_child_dob as (
    select
    m.id as member_id,
    min(
        case
			when fam_mem.mother_id = m.id and fam_mem.basic_state in (''VERIFIED'', ''NEW'', ''REVERIFICATION'') then fam_mem.dob
			else null
		end) as last_child_dob
	from lmp_followup_det as eligible_couple
	inner join imt_member m on m.id = eligible_couple.member_id
	left join imt_member fam_mem on fam_mem.family_id = m.family_id
	group by m.id
),
eligible_couple_det as (
	select
	m.id as member_id,
	sum(case
			when fam_mem.mother_id = m.id then 1
			else 0
		end) as total_child,
	sum(case
			when fam_mem.mother_id = m.id and fam_mem.gender = ''M'' then 1
			else 0
		end) as total_male_child,
	sum(case
			when fam_mem.mother_id = m.id and fam_mem.gender = ''F'' then 1
			else 0
		end) as total_female_child,
	sum(case
			when fam_mem.mother_id = m.id and fam_mem.gender = ''M'' and fam_mem.basic_state in (''VERIFIED'', ''NEW'', ''REVERIFICATION'') then 1
			else 0
		end) as total_live_male_child,
	sum(case
			when fam_mem.mother_id = m.id and fam_mem.gender = ''F'' and fam_mem.basic_state in (''VERIFIED'', ''NEW'', ''REVERIFICATION'') then 1
			else 0
		end) as total_live_female_child,
	max(case
			when similarity(fam_mem.first_name,m.middle_name) > 0.8 then fam_mem.id
			else null
		end) as husband_id,
	min(
        case
			when fam_mem.mother_id = m.id and fam_mem.basic_state in (''VERIFIED'', ''NEW'', ''REVERIFICATION'') then fam_mem.dob
			else null
		end) as last_child_dob,
	max(
	    case
	        when last_child.gender is null then null
	        when last_child.gender = ''F'' then ''Female''
	        else ''Male''
	     end) as last_child_gender
	from lmp_followup_det as eligible_couple
	inner join imt_member m on m.id = eligible_couple.member_id
	left join imt_member fam_mem on fam_mem.family_id = m.family_id
	left join last_child_dob lcd on lcd.member_id = eligible_couple.member_id
	left join imt_member last_child on last_child.mother_id = m.id
	    and last_child.basic_state in (''VERIFIED'', ''NEW'', ''REVERIFICATION'')
	    and last_child.dob in (select last_child_dob from last_child_dob)
	group by m.id
)
select
m.id as member_id,
m.unique_health_id as unique_health_id,
to_char(m.created_on, ''dd-MM-yyyy'') as registration_date,
concat_ws('' '', m.first_name, m.middle_name, m.last_name) as member_name,
case
    when m.aadhar_number_available is true then ''Yes''
    else ''No''
end as member_aadhar_number_available,
case
	when m.account_number is null then ''No''
	else ''Yes''
end as member_bank_account_number_available,
EXTRACT(YEAR FROM age(cast(m.dob as date))) as member_current_age,
case
	when m.year_of_wedding is null then null
	else m.year_of_wedding - date_part(''year'', m.dob)
end as member_marriage_age,
case
    when m.husband_name is null then concat_ws('' '', m.middle_name, m.last_name)
    else m.husband_name
end as husband_name,
EXTRACT(YEAR FROM age(cast(husband.dob as date))) as husband_current_age,
case
	when m.year_of_wedding is null then null
	else m.year_of_wedding - date_part(''year'', husband.dob)
end as husband_marriage_age,
case
	when (f.address1 is null and f.address2 is null) then ''N/A''
	else
		case
			when f.address1 is null then f.address2
			when f.address2 is null then f.address1
			else concat(f.address1, '','', f.address2)
		end
end as address,
case
	when religion.value = ''HINDU'' then ''Hindu''
	when religion.value = ''CHRISTIAN'' then ''Christian''
	when religion.value = ''MUSLIM'' then ''Muslim''
	when religion.value = ''OTHERS'' then ''Others''
	else religion.value
end as religion,
case
	when caste.value = ''GENERAL'' then ''General''
	else caste.value
end as cast,
case
	when f.bpl_flag then ''BPL''
end as bpl_apl,
m.eligible_couple_date,
ec.total_male_child as total_given_male_birth,
ec.total_female_child as total_given_female_birth,
ec.total_live_male_child as live_male_birth,
ec.total_live_female_child as live_female_birth,
EXTRACT(YEAR FROM age(cast(ec.last_child_dob as date))) as smallest_child_age,
ec.last_child_gender as smallest_child_gender,
lmp_followup_det.lmp_visit_info as lmp_visit_info
from lmp_followup_det
inner join imt_member m on m.id = lmp_followup_det.member_id
inner join eligible_couple_det ec on lmp_followup_det.member_id = ec.member_id
inner join imt_family f on f.family_id=m.family_id
left join imt_member husband on husband.id =ec.husband_id
left join listvalue_field_value_detail religion on religion.id = cast(f.religion as int)
left join listvalue_field_value_detail caste on caste.id = cast(f.caste as int);',true,'ACTIVE',NULL,true,'b490ba1c-a43d-452a-bcb7-d1b50ffce94e'),
	 (58981,'2021-08-26 00:00:00',58981,'2021-08-26 19:36:43.461','retrival_listvalues_mobile','roleId,lastUpdatedOn','with features as (
	select cast(CAST(jsonb_array_elements(CAST(config_json AS jsonb)) as jsonb)->>''mobile_constant'' as text) as const
	from mobile_menu_master mmm
	inner join mobile_menu_role_relation mmrr on mmm.id = mmrr.menu_id 
	inner join um_role_master urm on mmrr.role_id  = urm.id 
	where urm.id = #roleId#
), field_list as ( 
	select distinct lffr.field
	from features f
	inner join mobile_feature_master mfm on mfm.mobile_constant = f.const
	inner join mobile_form_feature_rel mffr on f.const = mffr.mobile_constant
	inner join mobile_form_details mfd on mfd.id = mffr.form_id
	inner join listvalue_field_form_relation lffr on lffr.form_id = mfd.id
	where mfm.state = ''ACTIVE''
)
select values.id as "idOfValue", fields.form as "formCode", 
	fields.field as "field", fields.field_type as "fieldType", values.value as value, 
    values.last_modified_on as "lastUpdateOfFieldValue", values.is_active as "isActive"
from listvalue_field_value_detail values 
join listvalue_field_master fields on fields.field_key = values.field_key 
where fields.field in (select * from field_list)
	and values.last_modified_on >= cast((case when ''#lastUpdatedOn#'' = ''null'' then ''1970-01-01 05:30:00.0'' else ''#lastUpdatedOn#'' end) as timestamp);',true,'ACTIVE',NULL,true,'789c459f-dabd-4c09-8327-44323becd39f'),
	 (60512,'2021-09-21 00:00:00',60512,'2021-09-21 00:00:00','retrieve_je_vaccine_details_for_batch_update_new_child','locationId,batchId','select id as "id",
rch_id as "rchId",
child_name as "childName",
child_gender as "childGender",
dob as "childDob",
concat(age_years,'' years '',age_months,'' months'') as "childAge",
mother_name as "motherName",
father_name as "fatherName",
address as "address",
family_mobile_number as "familyMobileNumber"
from rch_je_vaccine_service
where location_id = #locationId#
and new_child_batch_id = #batchId#
and je1_given_date is null
and (je1_given is not true and je2_given is not true)
and batch_id is null
and new_child_batch_id is not null
and state = ''ACTIVE''
order by created_on desc',true,'ACTIVE',NULL,true,'330c30e8-32bb-47f5-af3a-b4831bcc7b26'),
	 (60512,'2021-09-21 00:00:00',60512,'2021-09-21 00:00:00','je_vaccine_get_added_child_offline_count','locationId,batchId','select  new_child_batch_id as "batchId",
count(1) as "addedChildren"
from rch_je_vaccine_service
where location_id = #locationId#
and new_child_batch_id = #batchId#
and je1_given is not true
and je2_given is not true
and new_child_batch_id is not null
and state = ''ACTIVE''
group by new_child_batch_id',true,'ACTIVE',NULL,true,'57c3f9c9-4cf1-49ee-8daf-328da2d5301a'),
	 (78434,'2021-09-21 00:00:00',78434,'2021-09-21 00:00:00','retrieve_je_vaccine_details_for_batch_update','locationId','select id as "id",
rch_id as "rchId",
child_name as "childName",
child_gender as "childGender",
dob as "childDob",
concat(age_years,'' years '',age_months,'' months'') as "childAge",
mother_name as "motherName",
father_name as "fatherName",
address as "address",
family_mobile_number as "familyMobileNumber"
from rch_je_vaccine_service
where location_id = #locationId#
and je1_given_date is null
and (je1_given is not true or je2_given is not true)
and batch_id is null
and new_child_batch_id is null
and state = ''ACTIVE''
order by created_on desc',true,'ACTIVE',NULL,true,'c33ece6b-5d6e-4f20-b86f-758bcd4c7080'),
	 (78434,'2021-09-21 00:00:00',78434,'2021-09-21 00:00:00','rch_je_vaccine_service_details_by_loc_id','locId','
select
rjvs.*,
lm.name as location_name,
get_location_hierarchy(rjvs.location_id) as location_hierarchy,
case when rjvs.dob is not null then to_char(rjvs.dob ,''dd-MM-yyyy'') else null end as formatted_dob
from rch_je_vaccine_service rjvs
inner join location_master lm on lm.id = rjvs.location_id
where rjvs.location_id in (select child_id from location_hierchy_closer_det where parent_id = #locId# and child_loc_type in (''V'', ''ANG''))
and rjvs.je1_given_date is null
and (rjvs.je1_given is not true or rjvs.je2_given is not true)
and rjvs.batch_id is null
and rjvs.new_child_batch_id is null
and rjvs.state = ''ACTIVE''
order by rjvs.created_on desc;
',true,'ACTIVE',NULL,true,'73d3f8cb-392c-4952-960d-9f9fc4ceb193'),
	 (84954,'2021-09-21 00:00:00',84954,'2021-09-21 00:00:00','covid19_retrieve_kit_sender_list',NULL,'select id, value from listvalue_field_value_detail where field_key = ''testing_kit_supplier'' and is_active = true;',true,'ACTIVE',NULL,true,'415a3a4d-e93b-43b2-9cec-26cf977508d3'),
	 (58981,'2021-09-21 00:00:00',58981,'2021-09-21 00:00:00','mob_work_register_detail_cowin_registration','visitId','with const as (
	select cast(''SCHOOL_ID'' as text) as const, cast(''School Id'' as text) as name
	union
	select cast(''PAN_CARD'' as text) as const, cast(''PAN Card'' as text) as name
	union
	select cast(''BIRTH_CERTIFICATE'' as text) as const, cast(''Birth Certificate'' as text) as name
	union
	select cast(''PASSPORT'' as text) as const, cast(''Passport'' as text) as name
	union
	select cast(''AADHAAR_CARD'' as text) as const, cast(''Aadhaar Card'' as text) as name
)
select
concat(cowin.first_name, '' '', cowin.middle_name, '' '', cowin.last_name) as "Member Name",
cg.gender as "Gender",
cast(cowin.year_of_birth as text) as "Year of Birth",
ct.type as "Photo Id Proof",
cowin.photo_id_number as "Photo Id Number",
case when cowin.mobile_number is null then ''Not Available'' else cowin.mobile_number end as "Mobile Number",
case when cowin.comorbidity_ind = ''Y'' then ''Yes'' when cowin.comorbidity_ind = ''N'' then ''No'' else null end as "Comorbidity",
cast(cowin.pincode as text) as "Pincode",
cowin.child_name as "Child name",
cast(cowin.year_of_birth_of_child as text) as "Child Birth Year",
fp.name as "Child Photo Id Proof",
cowin.child_photo_id_number as "Child Photo Id Number"
from cowin_member_master cowin
left join cowin_gender_master cg on cg.id = CAST(cowin.gender AS int)
left join cowin_id_type_master ct on ct.id = CAST(cowin.photo_id_type AS int)
left join const fp on fp.const = cowin.child_photo_id_type
where cowin.id = #visitId#',true,'ACTIVE',NULL,true,'3dd7c8e0-4645-4357-b665-b415001ca138'),
	 (101809,'2021-09-21 00:00:00',101809,'2021-09-21 00:00:00','state_of_health_nutrition_enrolment_status_details','fromDate,offset,toDate,limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
case when m.gender = ''M'' then ''Male'' when m.gender = ''F'' then ''Female'' end as gender,
cnssm.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
cnssm.location_id as loc_id
from child_nutrition_sam_screening_master cnssm, imt_member m
where  cnssm.member_id = m.id
and cnssm.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and cnssm.done_from = ''NUTR_ENROLL''
and cnssm.service_date between ''#fromDate#'' and ''#toDate#''
limit #limit# offset #offset#),

family_head as (
select a.member_id as member_id,
concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
im.mobile_number as FamilyHeadMobileNo
from imt_member im inner join analytics a on a.family_id = im.family_id
where family_head = true
),
contact_person as (
select a.member_id,
concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
im.mobile_number as contactPersonMobileNo
from imt_member im
inner join analytics a on a.family_id = im.family_id
inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id

),

asha as (
select t.member_id
,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
u.contact_number as ashaMobileNo
from (
select member_id,max(uld.user_id) as user_id
from um_user_location uld
inner join analytics a on  uld.loc_id = a.loc_id
inner join um_user uu on uu.id = uld.user_id
where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
group by member_id) as t,um_user u
where t.user_id = u.id

),
anmLocation as (
select parent_id as location_id,a.member_id from location_hierchy_closer_det
lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
select max(uu.id) as anm_member_id, a.member_id,a.location_id from user_location_detail uld
inner join anmLocation a on  uld.location = a.location_id
inner join um_user uu on uu.id = uld.user_id
group by a.location_id,a.member_id
),
anmName as (
select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
uu.contact_number as ANMMobileNo

FROM um_user uu inner join anm a on a.anm_member_id=uu.id
)

select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo"

from analytics a
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id',true,'ACTIVE',NULL,true,'0f508d53-6e02-427b-bf0a-8c4cc98d8a9e'),
	 (101809,'2021-09-21 00:00:00',101809,'2021-09-21 00:00:00','state_of_health_nutrition_enrolment_status_details_for_female','fromDate,offset,toDate,limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
case when m.gender = ''M'' then ''Male'' when m.gender = ''F'' then ''Female'' end as gender,
cnssm.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
cnssm.location_id as loc_id
from child_nutrition_sam_screening_master cnssm, imt_member m
where  cnssm.member_id = m.id
and cnssm.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and cnssm.done_from = ''NUTR_ENROLL''
and m.gender = ''F''
and cnssm.service_date between ''#fromDate#'' and ''#toDate#''
limit #limit# offset #offset#),

family_head as (
select a.member_id as member_id,
concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
im.mobile_number as FamilyHeadMobileNo
from imt_member im inner join analytics a on a.family_id = im.family_id
where family_head = true
),
contact_person as (
select a.member_id,
concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
im.mobile_number as contactPersonMobileNo
from imt_member im
inner join analytics a on a.family_id = im.family_id
inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id

),

asha as (
select t.member_id
,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
u.contact_number as ashaMobileNo
from (
select member_id,max(uld.user_id) as user_id
from um_user_location uld
inner join analytics a on  uld.loc_id = a.loc_id
inner join um_user uu on uu.id = uld.user_id
where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
group by member_id) as t,um_user u
where t.user_id = u.id

),
anmLocation as (
select parent_id as location_id,a.member_id from location_hierchy_closer_det
lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
select max(uu.id) as anm_member_id, a.member_id,a.location_id from user_location_detail uld
inner join anmLocation a on  uld.location = a.location_id
inner join um_user uu on uu.id = uld.user_id
group by a.location_id,a.member_id
),
anmName as (
select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
uu.contact_number as ANMMobileNo

FROM um_user uu inner join anm a on a.anm_member_id=uu.id
)

select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo"

from analytics a
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id',true,'ACTIVE',NULL,true,'5fdb72e5-0131-4871-a93f-80fe87bd0001'),
	 (101809,'2021-09-21 00:00:00',101809,'2021-09-21 00:00:00','state_of_health_nutrition_enrolment_status_details_for_male','fromDate,offset,toDate,limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
case when m.gender = ''M'' then ''Male'' when m.gender = ''F'' then ''Female'' end as gender,
cnssm.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
cnssm.location_id as loc_id
from child_nutrition_sam_screening_master cnssm, imt_member m
where  cnssm.member_id = m.id
and cnssm.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and cnssm.done_from = ''NUTR_ENROLL''
and m.gender = ''M''
and cnssm.service_date between ''#fromDate#'' and ''#toDate#''
limit #limit# offset #offset#),

family_head as (
select a.member_id as member_id,
concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
im.mobile_number as FamilyHeadMobileNo
from imt_member im inner join analytics a on a.family_id = im.family_id
where family_head = true
),
contact_person as (
select a.member_id,
concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
im.mobile_number as contactPersonMobileNo
from imt_member im
inner join analytics a on a.family_id = im.family_id
inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id

),

asha as (
select t.member_id
,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
u.contact_number as ashaMobileNo
from (
select member_id,max(uld.user_id) as user_id
from um_user_location uld
inner join analytics a on  uld.loc_id = a.loc_id
inner join um_user uu on uu.id = uld.user_id
where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
group by member_id) as t,um_user u
where t.user_id = u.id

),
anmLocation as (
select parent_id as location_id,a.member_id from location_hierchy_closer_det
lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
select max(uu.id) as anm_member_id, a.member_id,a.location_id from user_location_detail uld
inner join anmLocation a on  uld.location = a.location_id
inner join um_user uu on uu.id = uld.user_id
group by a.location_id,a.member_id
),
anmName as (
select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
uu.contact_number as ANMMobileNo

FROM um_user uu inner join anm a on a.anm_member_id=uu.id
)

select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo"

from analytics a
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id',true,'ACTIVE',NULL,true,'079bf164-1aa0-45ff-9dae-65c9f2a32fde'),
	 (101809,'2021-09-21 00:00:00',101809,'2021-09-21 00:00:00','state_of_health_nutrition_enrolment_status_details_for_referral_done','fromDate,offset,toDate,limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
case when m.gender = ''M'' then ''Male'' when m.gender = ''F'' then ''Female'' end as gender,
cnssm.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
cnssm.location_id as loc_id
from child_nutrition_sam_screening_master cnssm, imt_member m
where  cnssm.member_id = m.id
and cnssm.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and cnssm.done_from = ''NUTR_ENROLL''
and cnssm.referral_done
and cnssm.service_date between ''#fromDate#'' and ''#toDate#''
limit #limit# offset #offset#),

family_head as (
select a.member_id as member_id,
concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
im.mobile_number as FamilyHeadMobileNo
from imt_member im inner join analytics a on a.family_id = im.family_id
where family_head = true
),
contact_person as (
select a.member_id,
concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
im.mobile_number as contactPersonMobileNo
from imt_member im
inner join analytics a on a.family_id = im.family_id
inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id

),

asha as (
select t.member_id
,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
u.contact_number as ashaMobileNo
from (
select member_id,max(uld.user_id) as user_id
from um_user_location uld
inner join analytics a on  uld.loc_id = a.loc_id
inner join um_user uu on uu.id = uld.user_id
where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
group by member_id) as t,um_user u
where t.user_id = u.id

),
anmLocation as (
select parent_id as location_id,a.member_id from location_hierchy_closer_det
lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
select max(uu.id) as anm_member_id, a.member_id,a.location_id from user_location_detail uld
inner join anmLocation a on  uld.location = a.location_id
inner join um_user uu on uu.id = uld.user_id
group by a.location_id,a.member_id
),
anmName as (
select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
uu.contact_number as ANMMobileNo

FROM um_user uu inner join anm a on a.anm_member_id=uu.id
)

select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo"

from analytics a
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id',true,'ACTIVE',NULL,true,'bc9a4bc5-2b08-49ee-a18c-062ff463c109'),
	 (101809,'2021-09-21 00:00:00',101809,'2021-09-21 00:00:00','state_of_health_nutrition_enrolment_status_details_for_medical_management_provided','fromDate,offset,toDate,limit,location_id','with  analytics as(
select m.unique_health_id as "uniqueHealthId",
case when m.gender = ''M'' then ''Male'' when m.gender = ''F'' then ''Female'' end as gender,
cnssm.member_id as member_id,
m.family_id as family_id,
concat(m.first_name,'' '',m.middle_name,'' '',m.last_name) as "memberName",
m.mobile_number as "contactNumber",
cnssm.location_id as loc_id
from child_nutrition_sam_screening_master cnssm, imt_member m
where  cnssm.member_id = m.id
and cnssm.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and cnssm.done_from = ''NUTR_ENROLL''
and cnssm.medical_management_provided
and cnssm.service_date between ''#fromDate#'' and ''#toDate#''
limit #limit# offset #offset#),

family_head as (
select a.member_id as member_id,
concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as FamilyHead,
im.mobile_number as FamilyHeadMobileNo
from imt_member im inner join analytics a on a.family_id = im.family_id
where family_head = true
),
contact_person as (
select a.member_id,
concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) as contactPersonName,
im.mobile_number as contactPersonMobileNo
from imt_member im
inner join analytics a on a.family_id = im.family_id
inner join imt_family ifm on ifm.family_id = im.family_id and ifm.contact_person_id = im.id

),

asha as (
select t.member_id
,concat(u.first_name,'' '',u.middle_name,'' '',u.last_name) as AshaName,
u.contact_number as ashaMobileNo
from (
select member_id,max(uld.user_id) as user_id
from um_user_location uld
inner join analytics a on  uld.loc_id = a.loc_id
inner join um_user uu on uu.id = uld.user_id
where uld.state = ''ACTIVE'' and uu.state=''ACTIVE''
group by member_id) as t,um_user u
where t.user_id = u.id

),
anmLocation as (
select parent_id as location_id,a.member_id from location_hierchy_closer_det
lhcd inner join analytics a on a.loc_id = lhcd.child_id and lhcd.parent_loc_type in (''V'',''ANG'')
),
anm as (
select max(uu.id) as anm_member_id, a.member_id,a.location_id from user_location_detail uld
inner join anmLocation a on  uld.location = a.location_id
inner join um_user uu on uu.id = uld.user_id
group by a.location_id,a.member_id
),
anmName as (
select concat(uu.first_name,'' '',uu.middle_name,'' '',uu.last_name) as ANMName,a.member_id,
uu.contact_number as ANMMobileNo

FROM um_user uu inner join anm a on a.anm_member_id=uu.id
)

select a.*,fh.FamilyHead as "familyHead",
fh.FamilyHeadMobileNo as "familyHeadMobileNo",
cp.contactPersonMobileNo as "contactPersonMobileNo",
cp.contactPersonName as "contactPersonName",
ah.AshaName as "ashaName",
ah.AshaMobileNo as "AshaMobileNo",
am.ANMName as "ANMName",
am.ANMMobileNo as "ANMMobileNo"

from analytics a
left join family_head fh on a.member_id = fh.member_id
left join asha ah on ah.member_id = fh.member_id
left join anmName am on am.member_id = a.member_id
left join contact_person cp on cp.member_id = a.member_id',true,'ACTIVE',NULL,true,'16ac1b68-45f6-4f90-afe2-935a095e34f2'),
	 (74841,'2021-09-21 00:00:00',74841,'2021-09-21 00:00:00','fhs_dashboard_data_update',NULL,'begin;
with family_details as (
	select distinct on(family_id)family_id,created_by as user_id
	from imt_family_state_detail
	where to_state in (''CFHC_FV'', ''CFHC_FN'', ''CFHC_FIR'')
	order by family_id,id desc
)
insert into imt_family_cfhc_done_by_details(family_id,user_id, role_id,created_by,created_on,modified_by,modified_on )
select fm.family_id, fm.user_id,u.role_id,fm.user_id,now(),fm.user_id,now()
from family_details fm
left join um_user u
on u.id = fm.user_id
on conflict ON CONSTRAINT imt_family_cfhc_done_by_details_pkey
do nothing;


WITH family_wise_details AS (
select fam.family_id,case when fam.area_id is null then fam.location_id else fam.area_id end as location_id1
				,count(mem.id) filter (where fam.created_by is null and mem.created_by is null)
				as imported_from_emamta_mem

				,count(mem.id) filter (where fam.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')) as total_member
				,count(mem.id) filter (where fam.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.gender = ''M'') as total_male
				,count(mem.id) filter (where fam.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.gender = ''F'') as total_female

				,count(mem.id) filter (where fam.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and date_part(''year'',age(mem.dob)) >= 30) as total_member_over_thirty

				,count(mem.id) filter (where fam.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and date_part(''year'',age(mem.dob)) >= 30 and mem.gender = ''M'') as total_male_over_thirty

				,count(mem.id) filter (where fam.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and date_part(''year'',age(mem.dob)) >= 30 and mem.gender = ''F'') as total_female_over_thirty

				,count(mem.id) filter (where fam.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.marital_status = ''629'' and mem.gender = ''F''
					and date_part(''year'',age(mem.dob)) >= 20 and date_part(''year'',age(mem.dob)) <= 40) as total_eligible_couple

				,count(mem.id) filter (where fam.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.marital_status = ''630'' and mem.gender = ''F''
					and date_part(''year'',age(mem.dob)) between 10 and 14) as total_10_to_14_unmarried_female
		,count(mem.id) filter (where fam.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.gender = ''F''
					and date_part(''year'',age(mem.dob)) between 10 and 14) as total_10_to_14_female

				,count(mem.id) filter (where fam.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.marital_status = ''630'' and mem.gender = ''M''
					and date_part(''year'',age(mem.dob)) between 10 and 14) as total_10_to_14_unmarried_male
		,count(mem.id) filter (where fam.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.gender = ''M''
					and date_part(''year'',age(mem.dob)) between 10 and 14) as total_10_to_14_male

				,count(mem.id) filter (where fam.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.marital_status = ''630'' and mem.gender = ''F''
					and date_part(''year'',age(mem.dob)) between 15 and 18) as total_15_to_18_unmarried_female
				,count(mem.id) filter (where fam.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.gender = ''F''
					and date_part(''year'',age(mem.dob)) between 15 and 18) as total_15_to_18_female

				,count(mem.id) filter (where fam.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.marital_status = ''630'' and mem.gender = ''M''
					and date_part(''year'',age(mem.dob)) between 15 and 18) as total_15_to_18_unmarried_male

				,count(mem.id) filter (where fam.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.gender = ''M''
					and date_part(''year'',age(mem.dob)) between 15 and 18) as total_15_to_18_male
				,count(mem.id) filter (where fam.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and date_part(''year'',age(mem.dob)) between 0 and 18) as total_population_0_to_18

				,count(mem.id) filter (where fam.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and date_part(''year'',age(mem.dob)) between 19 and 40) as total_population_19_to_40

				,count(mem.id) filter (where fam.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and date_part(''year'',age(mem.dob)) > 40) as total_population_more_than_40
				,count(mem.id) filter (where fam.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.is_pregnant = true) as total_pregnant_woman

		,count(mem.id) filter (where fam.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.dob > CURRENT_DATE - INTERVAL ''5 year'') as child_less_then_5_year
		,count(mem.id) filter (where fam.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'',''TEMPORARY'',''IDSP'')
					and mem.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'',''TEMPORARY'',''IDSP'')
					and mem.dob < CURRENT_DATE - INTERVAL ''60 year'') as member_60_plus_age

		,count(mem.id) filter (where fam.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.aadhar_number_encrypted is not null) as member_with_adhar

		,count(mem.id) filter (where fam.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.mobile_number is not null) as member_with_mobile_num

		,count(mem.id) filter (where fam.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.dob > CURRENT_DATE - INTERVAL ''1 year'') as total_0to1_children

		,count(mem.id) filter (where fam.basic_state in (''VERIFIED'',''REVERIFICATION'',''NEW'')
					and mem.basic_state in (''DEAD'')
					and dob > rch_member_death_deatil.dod - interval ''1 year'') as total_infant_deaths

		,count(distinct mem.family_id) filter (where fam.created_by is null) as imported

		,count(distinct mem.family_id) filter (where fam.basic_state in (''UNVERIFIED'',''ORPHAN'')) as toBeProcessed

		,count(distinct mem.family_id) filter (where fam.basic_state in (''VERIFIED'')) as Verified

		,count(distinct mem.family_id) filter (where fam.basic_state in (''VERIFIED'')
			and  fam.modified_on > CURRENT_DATE - INTERVAL ''3 day'' ) as verified_last_3days

		,count(distinct mem.family_id) filter (where fam.basic_state in (''VERIFIED'')
			and  fam.migratory_flag) as seasonal_migrant_family

				,count(distinct mem.family_id) filter (where fam.basic_state in (''ARCHIVED'')) as Archived

		,count(distinct mem.family_id) filter (where fam.basic_state in (''REVERIFICATION'')) as inReverification

		,count(distinct mem.family_id) filter (where fam.basic_state in (''NEW'')) as newFamily
		,count(mem.id) filter (where mem.state in (''CFHC_MV'') and um.code = ''FHW'') as chfc_member_verified_by_fhw
		,count(mem.id) filter (where mem.state in (''CFHC_MV'') and um.code = ''ASHA'') as chfc_member_verified_by_asha
		,count(mem.id) filter (where mem.state in (''CFHC_MV'') and um.code = ''MPHW'') as chfc_member_verified_by_mphw
		,count(distinct mem.family_id) filter (where fam.state in (''CFHC_FV'',''CFHC_GVK_FRVP'',''CFHC_MO_FRVP'') and um.code = ''FHW'') as chfc_family_verified_by_fhw
		,count(distinct mem.family_id) filter (where fam.state in (''CFHC_FV'',''CFHC_GVK_FRVP'',''CFHC_MO_FRVP'') and um.code = ''MPHW'') as chfc_family_verified_by_mphw
		,count(mem.id) filter (where mem.state in (''CFHC_MN'') and um.code = ''FHW'') as chfc_new_member_by_fhw
		,count(mem.id) filter (where mem.state in (''CFHC_MN'') and um.code = ''ASHA'') as chfc_new_member_by_asha
		,count(mem.id) filter (where mem.state in (''CFHC_MN'') and um.code = ''MPHW'') as chfc_new_member_by_mphw
		,count(distinct mem.family_id) filter (where fam.state in (''CFHC_FN'') and um.code = ''FHW'') as chfc_new_family_by_fhw
		,count(distinct mem.family_id) filter (where fam.state in (''CFHC_FN'') and um.code = ''ASHA'') as chfc_new_family_by_asha
		,count(distinct mem.family_id) filter (where fam.state in (''CFHC_FN'') and um.code = ''MPHW'') as chfc_new_family_by_mphw
		,count(mem.id) filter (where mem.state in (''CFHC_MIR'') and um.code = ''FHW'') as chfc_member_in_reverification_by_fhw
		,count(mem.id) filter (where mem.state in (''CFHC_MIR'') and um.code = ''MPHW'') as chfc_member_in_reverification_by_mphw
		,count(distinct mem.family_id) filter (where fam.state in (''CFHC_FIR'') and um.code = ''FHW'') as chfc_family_in_reverification_by_fhw
		,count(distinct mem.family_id) filter (where fam.state in (''CFHC_FIR'') and um.code = ''MPHW'') as chfc_family_in_reverification_by_mphw
        ,case when count(mem.id) filter (where fam.basic_state  in (''UNVERIFIED'', ''NEW'', ''VERIFIED'') and
         mem.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'',''TEMPORARY'')) >= 1 then 1 else 0 end as chfc_remaining_family
		,case when count(mem.id) filter (where fam.state in (''CFHC_FV'') and mem.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'',''TEMPORARY'')) = 1 then 1 else 0 end as chfc_single_member_existing_families
		,case when count(mem.id) filter (where fam.state in (''CFHC_FN'') and mem.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'',''TEMPORARY'')) = 1 then 1 else 0 end as chfc_single_member_newly_added_families
		,case when count(mem.id) filter (where fam.state in (''CFHC_FV'') and mem.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'',''TEMPORARY'')) = 2 then 1 else 0 end as chfc_two_member_existing_families
		,case when count(mem.id) filter (where fam.state in (''CFHC_FN'') and mem.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'',''TEMPORARY'')) = 2 then 1 else 0 end as chfc_two_member_newly_added_families
		,case when count(mem.id) filter (where fam.state in (''CFHC_FV'') and mem.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'',''TEMPORARY'')) = 3 then 1 else 0 end as chfc_three_member_existing_families
		,case when count(mem.id) filter (where fam.state in (''CFHC_FN'') and mem.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'',''TEMPORARY'')) = 3 then 1 else 0 end as chfc_three_member_newly_added_families
		,case when count(mem.id) filter (where fam.state in (''CFHC_FV'') and mem.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'',''TEMPORARY'')) > 3 then 1 else 0 end as chfc_more_then_three_member_existing_families
		,case when count(mem.id) filter (where fam.state in (''CFHC_FN'') and mem.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'',''TEMPORARY'')) > 3 then 1 else 0 end as chfc_more_then_three_member_newly_added_families

		from imt_family fam
		inner join imt_member mem on fam.family_id = mem.family_id
		left join rch_member_death_deatil on mem.death_detail_id = rch_member_death_deatil.id
		left join imt_family_cfhc_done_by_details chfc on chfc.family_id = fam.family_id
		left join um_role_master um on um.id = chfc.role_id
		group by fam.family_id,location_id1
),
location_wise_details as (
select location_id1 as location_id
,sum(imported) as imported
,sum(imported_from_emamta_mem) as imported_from_emamta_mem
,sum(toBeProcessed) as toBeProcessed
,sum(Verified) as Verified
,sum(Archived) as Archived
,sum(newFamily) as newFamily
,sum(total_member) as total_member
,sum(total_male) as total_male
,sum(total_female) as total_female
,sum(total_member_over_thirty) as total_member_over_thirty
,sum(total_male_over_thirty) as total_male_over_thirty
,sum(total_female_over_thirty) as total_female_over_thirty
,sum(inReverification ) as inReverification
,sum(verified_last_3days ) as verified_last_3days
,sum(seasonal_migrant_family) as seasonal_migrant_family
,sum(total_infant_deaths) as total_infant_deaths
,sum(total_eligible_couple ) as total_eligible_couple
,sum(total_pregnant_woman ) as total_pregnant_woman
,sum(child_less_then_5_year ) as child_less_then_5_year
,sum(member_60_plus_age ) as member_60_plus_age
,sum(member_with_adhar ) as member_with_adhar
,sum(member_with_mobile_num) as member_with_mobile_num
,sum(total_0to1_children) as total_0to1_children
,sum(total_10_to_14_unmarried_female) as total_10_to_14_unmarried_female
,sum(total_10_to_14_unmarried_male) as total_10_to_14_unmarried_male
,sum(total_15_to_18_unmarried_female) as total_15_to_18_unmarried_female
,sum(total_15_to_18_unmarried_male) as total_15_to_18_unmarried_male
,sum(total_10_to_14_male) as total_10_to_14_male
,sum(total_10_to_14_female) as total_10_to_14_female
,sum(total_15_to_18_male) as total_15_to_18_male
,sum(total_15_to_18_female) as total_15_to_18_female
,sum(total_population_0_to_18) as total_population_0_to_18
,sum(total_population_19_to_40) as total_population_19_to_40
,sum(total_population_more_than_40) as total_population_more_than_40
,sum(chfc_member_verified_by_fhw) as chfc_member_verified_by_fhw
,sum(chfc_member_verified_by_asha) as chfc_member_verified_by_asha
,sum(chfc_member_verified_by_mphw) as chfc_member_verified_by_mphw
,sum(chfc_family_verified_by_fhw) as chfc_family_verified_by_fhw
,sum(chfc_family_verified_by_mphw) as chfc_family_verified_by_mphw
,sum(chfc_new_member_by_fhw) as chfc_new_member_by_fhw
,sum(chfc_new_member_by_asha) as chfc_new_member_by_asha
,sum(chfc_new_member_by_mphw) as chfc_new_member_by_mphw
,sum(chfc_new_family_by_fhw) as chfc_new_family_by_fhw
,sum(chfc_new_family_by_asha) as chfc_new_family_by_asha
,sum(chfc_new_family_by_mphw) as chfc_new_family_by_mphw
,sum(chfc_member_in_reverification_by_fhw) as chfc_member_in_reverification_by_fhw
,sum(chfc_member_in_reverification_by_mphw) as chfc_member_in_reverification_by_mphw
,sum(chfc_family_in_reverification_by_fhw) as chfc_family_in_reverification_by_fhw
,sum(chfc_family_in_reverification_by_mphw) as chfc_family_in_reverification_by_mphw
,sum(case when chfc_remaining_family = 1 then total_member else 0 end) as chfc_remaining_family
,sum(chfc_single_member_existing_families) as chfc_single_member_existing_families
,sum(chfc_single_member_newly_added_families) as chfc_single_member_newly_added_families
,sum(chfc_two_member_existing_families) as chfc_two_member_existing_families
,sum(chfc_two_member_newly_added_families) as chfc_two_member_newly_added_families
,sum(chfc_three_member_existing_families) as chfc_three_member_existing_families
,sum(chfc_three_member_newly_added_families) as chfc_three_member_newly_added_families
,sum(chfc_more_then_three_member_existing_families) as chfc_more_then_three_member_existing_families
,sum(chfc_more_then_three_member_newly_added_families) as chfc_more_then_three_member_newly_added_families
from family_wise_details fwd
group by location_id
)

update location_wise_analytics
		set fhs_imported_from_emamta_family = fhs_det.imported
		,fhs_imported_from_emamta_member = fhs_det.imported_from_emamta_mem
		,fhs_to_be_processed_family = fhs_det.toBeProcessed
		,fhs_verified_family = fhs_det.Verified
		,fhs_archived_family = fhs_det.Archived
		,fhs_new_family = fhs_det.newFamily
		,fhs_total_member = fhs_det.total_member
		,total_male = fhs_det.total_male
		,total_female = fhs_det.total_female
		,total_member_over_thirty = fhs_det.total_member_over_thirty
		,total_male_over_thirty = fhs_det.total_male_over_thirty
		,total_female_over_thirty = fhs_det.total_female_over_thirty
				,fhs_inreverification_family = fhs_det.inReverification
		,family_varified_last_3_days = fhs_det.verified_last_3days
		,seasonal_migrant_families  = fhs_det.seasonal_migrant_family
		,eligible_couples_in_techo  = fhs_det.total_eligible_couple
		,pregnant_woman_techo  = fhs_det.total_pregnant_woman
		,child_under_5_year  = fhs_det.child_less_then_5_year
		,member_60_plus_age  = fhs_det.member_60_plus_age
		,member_with_adhar_number  = fhs_det.member_with_adhar
		,member_with_mobile_number  = fhs_det.member_with_mobile_num
		,total_0to1_children = fhs_det.total_0to1_children
		,total_0to5_children = fhs_det.child_less_then_5_year
		,total_10_to_14_unmarried_female = fhs_det.total_10_to_14_unmarried_female
		,total_10_to_14_unmarried_male = fhs_det.total_10_to_14_unmarried_male
		,total_15_to_18_unmarried_female = fhs_det.total_15_to_18_unmarried_female
		,total_15_to_18_unmarried_male = fhs_det.total_15_to_18_unmarried_male
		,total_infant_deaths = fhs_det.total_infant_deaths
	,total_10_to_14_male = fhs_det.total_10_to_14_male
	,total_10_to_14_female = fhs_det.total_10_to_14_female
	,total_15_to_18_male = fhs_det.total_15_to_18_male
		,total_15_to_18_female = fhs_det.total_15_to_18_female
		,total_population_0_to_18 = fhs_det.total_population_0_to_18
		,total_population_19_to_40 = fhs_det.total_population_19_to_40
		,total_population_more_than_40 = fhs_det.total_population_more_than_40
		,chfc_member_verified_by_fhw = fhs_det.chfc_member_verified_by_fhw
		,chfc_member_verified_by_asha = fhs_det.chfc_member_verified_by_asha
,chfc_member_verified_by_mphw = fhs_det.chfc_member_verified_by_mphw
,chfc_family_verified_by_fhw = fhs_det.chfc_family_verified_by_fhw
,chfc_family_verified_by_mphw = fhs_det.chfc_family_verified_by_mphw
,chfc_new_member_by_fhw = fhs_det.chfc_new_member_by_fhw
,chfc_new_member_by_asha = fhs_det.chfc_new_member_by_asha
,chfc_new_member_by_mphw = fhs_det.chfc_new_member_by_mphw
,chfc_new_family_by_fhw = fhs_det.chfc_new_family_by_fhw
,chfc_new_family_by_asha = fhs_det.chfc_new_family_by_asha
,chfc_new_family_by_mphw = fhs_det.chfc_new_family_by_mphw
,chfc_member_in_reverification_by_fhw = fhs_det.chfc_member_in_reverification_by_fhw
,chfc_member_in_reverification_by_mphw = fhs_det.chfc_member_in_reverification_by_mphw
,chfc_family_in_reverification_by_fhw = fhs_det.chfc_family_in_reverification_by_fhw
,chfc_family_in_reverification_by_mphw = fhs_det.chfc_family_in_reverification_by_mphw
,chfc_remaining_family = fhs_det.chfc_remaining_family
,chfc_single_member_existing_families = fhs_det.chfc_single_member_existing_families
,chfc_single_member_newly_added_families = fhs_det.chfc_single_member_newly_added_families
,chfc_two_member_existing_families = fhs_det.chfc_two_member_existing_families
,chfc_two_member_newly_added_families = fhs_det.chfc_two_member_newly_added_families
,chfc_three_member_existing_families = fhs_det.chfc_three_member_existing_families
,chfc_three_member_newly_added_families = fhs_det.chfc_three_member_newly_added_families
,chfc_more_then_three_member_existing_families = fhs_det.chfc_more_then_three_member_existing_families
,chfc_more_then_three_member_newly_added_families = fhs_det.chfc_more_then_three_member_newly_added_families
		from (
		select loc.id, mem_det.imported,mem_det.imported_from_emamta_mem
		,mem_det.toBeProcessed,mem_det.Verified ,mem_det.Archived ,mem_det.newFamily
		,mem_det.total_member ,mem_det.total_male, mem_det.total_female ,mem_det.total_member_over_thirty
		,mem_det.total_male_over_thirty, mem_det.total_female_over_thirty
		,mem_det.inReverification ,verified_last_3days ,seasonal_migrant_family
		,total_infant_deaths
		,total_eligible_couple ,total_pregnant_woman ,child_less_then_5_year
		,member_60_plus_age
		,member_with_adhar ,member_with_mobile_num,total_0to1_children
		,total_10_to_14_unmarried_female,total_10_to_14_unmarried_male
		,total_15_to_18_unmarried_female,total_15_to_18_unmarried_male
	,total_10_to_14_male
	,total_10_to_14_female
	,total_15_to_18_male
		,total_15_to_18_female
		,total_population_0_to_18
		,total_population_19_to_40
		,total_population_more_than_40
		,chfc_member_verified_by_fhw
		,chfc_member_verified_by_asha
		,chfc_member_verified_by_mphw
,chfc_family_verified_by_fhw
,chfc_family_verified_by_mphw
,chfc_new_member_by_fhw
,chfc_new_member_by_asha
,chfc_new_member_by_mphw
,chfc_new_family_by_fhw
,chfc_new_family_by_asha
,chfc_new_family_by_mphw
,chfc_member_in_reverification_by_fhw
,chfc_member_in_reverification_by_mphw
,chfc_family_in_reverification_by_fhw
,chfc_family_in_reverification_by_mphw
,chfc_remaining_family
,chfc_single_member_existing_families
,chfc_single_member_newly_added_families
,chfc_two_member_existing_families
,chfc_two_member_newly_added_families
,chfc_three_member_existing_families
,chfc_three_member_newly_added_families
,chfc_more_then_three_member_existing_families
,chfc_more_then_three_member_newly_added_families
		from location_master loc
			left join location_wise_details as mem_det
			on loc.id = mem_det.location_id
		) as fhs_det
		where fhs_det.id = location_wise_analytics.loc_id;



update system_configuration  set key_value = cast(cast(EXTRACT(EPOCH FROM clock_timestamp()) * 1000 as bigint)as text) where system_key = ''FHS_LAST_UPDATE_TIME'';
update timer_event SET completed_on = clock_timestamp(),status = ''COMPLETED''
where event_config_id in (7,8) and status = ''PROCESSED'';
commit;',false,'ACTIVE','This will update fhs dashboard data',true,'7dced090-bd73-4620-82a6-9694626ecfed'),
	 (84954,'2021-09-21 00:00:00',84954,'2021-09-21 00:00:00','soh_je_total_vaccinated_line_list','fromDate,offset,toDate,limit,location_id','with dates AS (
    SELECT
        to_date(
            CASE WHEN ''#fromDate#'' = ''null'' THEN
                NULL
            ELSE
                ''#fromDate#''
            END, ''YYYY-MM-DD'') AS from_date,
        to_date(case when ''#toDate#'' = ''null'' then null else ''#toDate#'' end,''YYYY-MM-DD'') + interval ''1 day'' - interval ''1 millisecond'' as to_date
),loc_det as (
select
	lh.child_id as parent_id
from
	location_hierchy_closer_det lh
where
	lh.parent_id =
	(case
		when #location_id# is null then 554888
		else #location_id#
	end)
),
 t1 as (
select
	distinct  je.*
from
	rch_je_vaccine_service je
inner join dates on true
inner join location_hierchy_closer_det lh on
	je.location_id = lh.child_id
where
((state is distinct from ''NEW'' and ((je1_given = false or je1_given is null) OR (je2_given = false or je2_given is null))) or
((state = ''NEW'' or is_added_from_offline) and (je1_given or je2_given))) and
	lh.parent_id in (
	select
		parent_id
	from
		loc_det)
    and ((je.je1_given_date between dates.from_date and dates.to_date) or (je.je2_given_date between dates.from_date and dates.to_date))
order by je.id
limit #limit# offset #offset#
)
select
child_name as "primaryVal_Child Name",
case when child_gender = ''F'' then ''Female'' else ''Male'' end as "primaryVal_Gender",
case when dob is not null  then to_char(dob, ''DD/MM/YYYY'') else ''-'' end as "val_Date Of Birth",
concat(case when age_years = 0 then '''' else concat(age_years, '' Years'') end ,
case when age_months = 0 then '''' else concat('' '', age_months ,  '' Months'') end) as "val_Age",
case when address is not null then address else ''-''  end as "val_Address",
case when family_mobile_number is not null then family_mobile_number else ''-'' end as "primaryVal_Family Mobile NUmber",
case when t1.je1_given_date is not null then to_char(t1.je1_given_date, ''DD/MM/YYYY'')
when t1.je2_given_date is not null then to_char(t1.je2_given_date, ''DD/MM/YYYY'') else ''-'' end as "val_JE Given Date"
from t1',true,'ACTIVE',NULL,true,'52edc641-9676-4498-8a22-238c14d72295'),
	 (84954,'2021-09-21 00:00:00',84954,'2021-09-21 00:00:00','soh_je_new_identified_line_list','fromDate,offset,toDate,limit,location_id','with dates AS (
    SELECT
        to_date(
            CASE WHEN ''#fromDate#'' = ''null'' THEN
                NULL
            ELSE
                ''#fromDate#''
            END, ''YYYY-MM-DD'') AS from_date,
        to_date(case when ''#toDate#'' = ''null'' then null else ''#toDate#'' end,''YYYY-MM-DD'') + interval ''1 day'' - interval ''1 millisecond'' as to_date
),loc_det as (
select
	lh.child_id as parent_id
from
	location_hierchy_closer_det lh
where
	lh.parent_id =
	(case
		when #location_id# is null then 554888
		else #location_id#
	end)
),
 t1 as (
select
	distinct  je.*
from
	rch_je_vaccine_service je
inner join dates on true
inner join location_hierchy_closer_det lh on
	je.location_id = lh.child_id
where
(state = ''NEW'' or is_added_from_offline) and (je1_given or je2_given) and
	lh.parent_id in (
	select
		parent_id
	from
		loc_det)
    and ((je.je1_given_date between dates.from_date and dates.to_date) or (je.je2_given_date between dates.from_date and dates.to_date))
order by je.id
limit #limit# offset #offset#
)
select
child_name as "primaryVal_Child Name",
case when child_gender = ''F'' then ''Female'' else ''Male'' end as "primaryVal_Gender",
case when dob is not null  then to_char(dob, ''DD/MM/YYYY'') else ''-'' end as "val_Date Of Birth",
concat(case when age_years = 0 then '''' else concat(age_years, '' Years'') end ,
case when age_months = 0 then '''' else concat('' '', age_months ,  '' Months'') end) as "val_Age",
case when address is not null then address else ''-''  end as "val_Address",
case when family_mobile_number is not null then family_mobile_number else ''-'' end as "primaryVal_Family Mobile NUmber",
case when t1.je1_given_date is not null then to_char(t1.je1_given_date, ''DD/MM/YYYY'')
when t1.je2_given_date is not null then to_char(t1.je2_given_date, ''DD/MM/YYYY'') else ''-'' end as "val_JE Given Date"
from t1',true,'ACTIVE',NULL,true,'2dab7468-81af-4c5c-8922-5f9b02cc6c66'),
	 (84954,'2021-09-21 00:00:00',84954,'2021-09-21 00:00:00','soh_je_pending_vaccine_line_list','offset,limit,location_id','with loc_det as (
select
	lh.child_id as parent_id
from
	location_hierchy_closer_det lh
where
	lh.parent_id =
	(case
		when #location_id# is null then 554888
		else #location_id#
	end)
),
 t1 as (
select
	distinct  je.*
from
	rch_je_vaccine_service je
inner join location_hierchy_closer_det lh on
	je.location_id = lh.child_id
where
state is distinct from ''NEW'' and ((je1_given = false or je1_given is null) OR (je2_given = false or je2_given is null)) AND ((je.je1_given_date IS NULL) AND (je.je2_given_date IS NULL)) and
	lh.parent_id in (
	select
		parent_id
	from
		loc_det)
order by je.id
limit #limit# offset #offset#
)
select
child_name as "primaryVal_Child Name",
case when child_gender = ''F'' then ''Female'' else ''Male'' end as "primaryVal_Gender",
case when dob is not null  then to_char(dob, ''DD/MM/YYYY'') else ''-'' end as "val_Date Of Birth",
concat(case when age_years = 0 then '''' else concat(age_years, '' Years'') end ,
case when age_months = 0 then '''' else concat('' '', age_months ,  '' Months'') end) as "val_Age",
case when address is not null then address else ''-''  end as "val_Address",
case when family_mobile_number is not null then family_mobile_number else ''-'' end as "primaryVal_Family Mobile NUmber",
case when t1.je1_given_date is not null then to_char(t1.je1_given_date, ''DD/MM/YYYY'')
when t1.je2_given_date is not null then to_char(t1.je2_given_date, ''DD/MM/YYYY'') else ''-'' end as "val_JE Given Date"
from t1',true,'ACTIVE',NULL,true,'376ee37f-6cb7-42b0-992c-8a458195adc5'),
	 (84954,'2021-09-21 00:00:00',84954,'2021-09-21 00:00:00','soh_je_vaccine_due_line_list','offset,limit,location_id','with loc_det as (
select
	lh.child_id as parent_id
from
	location_hierchy_closer_det lh
where
	lh.parent_id =
	(case
		when #location_id# is null then 554888
		else #location_id#
	end)
),
 t1 as (
select
	distinct  je.*
from
	rch_je_vaccine_service je
inner join location_hierchy_closer_det lh on
	je.location_id = lh.child_id
where
state is distinct from ''NEW'' and not (je1_given and je2_given) and
	lh.parent_id in (
	select
		parent_id
	from
		loc_det)
order by je.id
limit #limit# offset #offset#
)
select
child_name as "primaryVal_Child Name",
case when child_gender = ''F'' then ''Female'' else ''Male'' end as "primaryVal_Gender",
case when dob is not null  then to_char(dob, ''DD/MM/YYYY'') else ''-'' end as "val_Date Of Birth",
concat(case when age_years = 0 then '''' else concat(age_years, '' Years'') end ,
case when age_months = 0 then '''' else concat('' '', age_months ,  '' Months'') end) as "val_Age",
case when address is not null then address else ''-''  end as "val_Address",
case when family_mobile_number is not null then family_mobile_number else ''-'' end as "primaryVal_Family Mobile NUmber",
case when t1.je1_given_date is not null then to_char(t1.je1_given_date, ''DD/MM/YYYY'')
when t1.je2_given_date is not null then to_char(t1.je2_given_date, ''DD/MM/YYYY'') else ''-'' end as "val_JE Given Date"
from t1',true,'ACTIVE',NULL,true,'7a2ba6fc-ff05-40e4-90ac-cd5a19825b6f'),
	 (60512,'2020-06-18 00:00:00',60512,'2021-09-22 10:55:10.613','retrieve_previous_anc_information','healthid,curPregRegDetId','with dangsign as ( select rel.anc_id,string_agg(det.value ,'', '') as dangeroussign from rch_anc_dangerous_sign_rel rel
inner join listvalue_field_value_detail det on rel.dangerous_sign_id = det.id group by rel.anc_id )
select anc.id,anc.member_id,anc.family_id as ancfamilyid,anc.latitude,anc.longitude,anc.mobile_start_date,anc.mobile_end_date,anc.location_id,
anc.lmp,anc.weight,anc.jsy_beneficiary,anc.kpsy_beneficiary,anc.iay_beneficiary,anc.chiranjeevi_yojna_beneficiary,anc.anc_place,anc.delivery_place,anc.systolic_bp,
anc.diastolic_bp,anc.member_height,anc.foetal_height,anc.foetal_heart_sound,anc.ifa_tablets_given,anc.fa_tablets_given,anc.calcium_tablets_given,
anc.hbsag_test,anc.blood_sugar_test,anc.urine_test_done,anc.albendazole_given,anc.referral_place,anc.dead_flag,anc.other_dangerous_sign,anc.created_by,
anc.created_on,anc.modified_by,anc.modified_on,anc.member_status,anc.edd,anc.notification_id,anc.death_date,anc.vdrl_test,
anc.hiv_test,anc.place_of_death,anc.haemoglobin_count,anc.death_reason,anc.jsy_payment_done,anc.last_delivery_outcome,anc.expected_delivery_place,
anc.family_planning_method,anc.foetal_position,anc.dangerous_sign_id,anc.other_previous_pregnancy_complication,anc.foetal_movement,anc.referral_done,
anc.urine_albumin,anc.urine_sugar,anc.is_high_risk_case,anc.blood_group,anc.sugar_test_after_food_val,anc.sugar_test_before_food_val,anc.pregnancy_reg_det_id,
anc.service_date,anc.sickle_cell_test, 
usr.first_name || '' '' || usr.middle_name || '' '' || usr.last_name as usrfullname,usr.user_name as username,fam.family_id as familyid,
dan.dangeroussign, ancplace.value as ancplacename, referralplace.value as referralplacename, loc.name as locationname
from rch_anc_master anc 
left join imt_family fam on anc.family_id = fam.id
left join um_user usr on anc.created_by = usr.id
left join location_master loc on anc.location_id = loc.id
left join dangsign dan on anc.id = dan.anc_id
left join listvalue_field_value_detail ancplace on anc.anc_place = ancplace.id
left join listvalue_field_value_detail referralplace on anc.referral_place = referralplace.id
where anc.member_id = (select id from imt_member where unique_health_id = #healthid# limit 1) and anc.pregnancy_reg_det_id = #curPregRegDetId# order by anc.created_on desc limit 5',true,'ACTIVE',NULL,true,'79d055e3-176c-449a-bedc-ccc2527bbec4'),
	 (60512,'2020-11-06 00:00:00',60512,'2021-10-04 11:41:48.839','child_cmtc_nrc_defaulter_list','offset,limit,userId','with child_ids as (
	select child_cmtc_nrc_screening_detail.id,child_cmtc_nrc_screening_detail.child_id
	from child_cmtc_nrc_screening_detail
	inner join user_health_infrastructure on child_cmtc_nrc_screening_detail.screening_center = user_health_infrastructure.health_infrastrucutre_id
	and user_health_infrastructure.state = ''ACTIVE''
	inner join health_infrastructure_details on user_health_infrastructure.health_infrastrucutre_id = health_infrastructure_details.id
	and (health_infrastructure_details.is_cmtc or health_infrastructure_details.is_nrc or health_infrastructure_details.is_sncu)
	inner join imt_member on child_cmtc_nrc_screening_detail.child_id = imt_member.id
	where user_health_infrastructure.user_id = #userId#
	and child_cmtc_nrc_screening_detail.state = ''DEFAULTER''
	and child_cmtc_nrc_screening_detail.is_case_completed is null
	limit #limit# offset #offset#
),asha_detail as (
	select child_ids.id,
	string_agg(concat(asha.first_name,'' '',asha.middle_name,'' '',asha.last_name,'' ('',asha.contact_number,'')''),'','') as asha
	from child_ids
	inner join imt_member on child_ids.child_id = imt_member.id
	inner join imt_family on imt_member.family_id = imt_family.family_id
	inner join um_user_location asha_location on imt_family.area_id = asha_location.loc_id and asha_location.state = ''ACTIVE''
	inner join um_user asha on asha_location.user_id = asha.id and asha.state = ''ACTIVE'' and asha.role_id = 24
	group by child_ids.id
)
select child_cmtc_nrc_screening_detail.id,
child_cmtc_nrc_screening_detail.screening_center as "screeningCenter",
child_cmtc_nrc_screening_detail.child_id as "memberId",
child_cmtc_nrc_screening_detail.screened_on as "screenedOn",
child_cmtc_nrc_screening_detail.state as "state",
child_cmtc_nrc_screening_detail.admission_id as "admissionId",
child_cmtc_nrc_screening_detail.discharge_id as "dischargeId",
child_cmtc_nrc_screening_detail.created_by as "createdBy",
child_cmtc_nrc_screening_detail.identified_from as "identifiedFrom",
health_infrastructure_details.name as "healthInfrastructureName",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "memberName",
imt_member.unique_health_id as "uniqueHealthId",
imt_member.family_id as "familyId",
imt_member.dob as "dob",
imt_member.gender as "gender",
imt_family.bpl_flag as "bplFlag",
listvalue_field_value_detail.value as "caste",
concat(mother.first_name,'' '',mother.middle_name,'' '',mother.last_name) as "motherName",
mother.mobile_number as "motherContactNumber",
concat(um_user.first_name,'' '',um_user.middle_name,'' '',um_user.last_name) as "referredByName",
um_user.contact_number as "referredByContactNumber",
asha_detail.asha as "ashaDetails",
location.name as "villageName",
area.name as "areaName"
from child_ids
inner join child_cmtc_nrc_screening_detail on child_ids.id = child_cmtc_nrc_screening_detail.id
inner join health_infrastructure_details on child_cmtc_nrc_screening_detail.screening_center = health_infrastructure_details.id
inner join imt_member on child_cmtc_nrc_screening_detail.child_id = imt_member.id
left join imt_member mother on imt_member.mother_id = mother.id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join location_master location on imt_family.location_id = location.id
left join location_master area on imt_family.area_id = area.id
left join listvalue_field_value_detail on imt_family.caste = cast(listvalue_field_value_detail.id as character varying)
left join um_user on child_cmtc_nrc_screening_detail.created_by = um_user.id
left join asha_detail on child_cmtc_nrc_screening_detail.id = asha_detail.id
order by child_cmtc_nrc_screening_detail.id desc',true,'ACTIVE',NULL,true,'4d586f48-4c39-4232-ba82-e24f6f9b30ad'),
	 (60512,'2021-11-15 00:00:00',60512,'2021-11-15 00:00:00','retrieve_je_vaccine_summary_records_count','locationId','select location_master.id,
get_location_hierarchy(location_master.id) as "locationHierarchy",
count(1) filter (where rch_je_vaccine_service.id is not null) as "totalRecords"
from location_master
left join rch_je_vaccine_service on location_master.id = rch_je_vaccine_service.location_id
and rch_je_vaccine_service.state = ''ACTIVE''
and rch_je_vaccine_service.for_immunisation
where location_master.id = #locationId#
group by location_master.id,get_location_hierarchy(location_master.id)',true,'ACTIVE',NULL,true,'e166a604-303a-4119-ae26-dde276c34c9d'),
	 (60512,'2021-11-15 00:00:00',60512,'2021-11-15 00:00:00','retrieve_je_vaccine_summary_by_location_id','offset,locationId,limit','select id as id,
rch_id as "rchId",
member_type as "memberType",
child_name as "childName",
pregnant_woman_name as "pregnantWomanName",
mother_name as "motherName",
husband_name as "husbandName",
father_name as "fatherName",
child_gender as "childGender",
family_mobile_number as "familyMobileNumber",
dob as dob,
age_years as "years",
age_months as "months",
concat(age_years,'' years '',age_months,'' months'') as "age",
address as "address",
je1_given as "je1Given",
je2_given as "je2Given",
remarks as "remarks",
tt1_due as "tt1Due",
tt2_due as "tt2Due",
tt_booster_due as "ttBoosterDue"
from rch_je_vaccine_service
where location_id = #locationId#
and state = ''ACTIVE''
and for_immunisation
order by id desc
limit #limit# offset #offset#',true,'ACTIVE',NULL,true,'86dd226e-13b6-432a-bf1b-fa7e6caac6f9'),
	 (60512,'2021-11-15 00:00:00',60512,'2021-11-15 00:00:00','insert_je_vaccine_summary','familyMobileNumber,fatherName,ageMonths,address,husbandName,newChildBatchId,ttBoosterDue,rchId,motherName,loggedInUserId,childGender,je1Given,tt2Due,forImmunisation,tt1Due,pregnantWomanName,isAddedFromOffline,ageYears,locationId,dob,childName,je2Given,memberType,remarks','insert into rch_je_vaccine_service
(
	location_id,rch_id,member_type,child_name,pregnant_woman_name,mother_name,husband_name,
	father_name,child_gender,family_mobile_number,dob,age_years,age_months,address,je1_given,
	je2_given,created_by,created_on,modified_by,modified_on,is_added_from_offline,new_child_batch_id,
	for_immunisation,remarks,tt1_due,tt2_due,tt_booster_due
)
values
(
	#locationId#,#rchId#,#memberType#,#childName#,#pregnantWomanName#,#motherName#,#husbandName#,
	#fatherName#,#childGender#,#familyMobileNumber#,to_date(#dob#,''DD/MM/YYYY''),#ageYears#,#ageMonths#,#address#,
	#je1Given#,#je2Given#,#loggedInUserId#,now(),#loggedInUserId#,now(),#isAddedFromOffline#,#newChildBatchId#,
	#forImmunisation#,#remarks#,#tt1Due#,#tt2Due#,#ttBoosterDue#
);',false,'ACTIVE',NULL,true,'1c15f9ea-2f4d-479b-ba04-64555abeddfc'),
	 (60512,'2021-11-15 00:00:00',60512,'2021-11-15 00:00:00','update_je_vaccine_summary','familyMobileNumber,fatherName,ageMonths,address,husbandName,ttBoosterDue,rchId,motherName,loggedInUserId,childGender,je1Given,tt2Due,forImmunisation,tt1Due,pregnantWomanName,ageYears,locationId,dob,childName,je2Given,memberType,id,remarks','update rch_je_vaccine_service
set location_id = #locationId#,
rch_id = #rchId#,
member_type = #memberType#,
child_name = #childName#,
pregnant_woman_name = #pregnantWomanName#,
mother_name = #motherName#,
husband_name = #husbandName#,
father_name = #fatherName#,
child_gender = #childGender#,
family_mobile_number = #familyMobileNumber#,
dob = to_date(#dob#,''DD/MM/YYYY''),
age_years = #ageYears#,
age_months = #ageMonths#,
address = #address#,
je1_given = #je1Given#,
je2_given = #je2Given#,
modified_by = #loggedInUserId#,
modified_on = now(),
for_immunisation = #forImmunisation#,
remarks = #remarks#,
tt1_due = #tt1Due#,
tt2_due = #tt2Due#,
tt_booster_due = #ttBoosterDue#
where id = #id#;',false,'ACTIVE',NULL,true,'1ee9498b-2fb8-419b-8bb1-ae53fd81013d'),
	 (84954,'2021-12-06 00:00:00',84954,'2021-12-06 00:00:00','get_tr_question_bank_configuration_by_id','id','select * from tr_question_bank_configuration where question_set_id = #id#',true,'ACTIVE',NULL,true,'9bc7d1dc-19a3-457d-b49b-90f432f12fb2'),
	 (1,'2019-07-02 00:00:00',NULL,NULL,'npcb_spectacles_list_retrieve','healthInfrastructureId,offSet,limit','
with member_ids as (
	select id,member_id,service_date,re_axis,re_cyl,le_axis,le_cyl from npcb_member_examination_detail
	where spectacles_given and spectacles_given_date is null
	and health_infrastructure_id = #healthInfrastructureId#
	order by service_date desc
	limit #limit# offset #offSet#
)
select
member_ids.id as "id",
imt_member.id as "memberId",
imt_member.unique_health_id as "uniqueHealthId",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "memberName",
imt_member.family_id as "familyId",
member_ids.re_axis as "re_axis",
member_ids.re_cyl as "re_cyl",
member_ids.le_axis as "le_axis",
member_ids.le_cyl as "le_cyl",
get_location_hierarchy(imt_family.area_id) as "locationHierarchy",
member_ids.service_date as "serviceDate"
from member_ids
inner join imt_member on imt_member.id = member_ids.member_id
inner join imt_family on imt_member.family_id = imt_family.family_id
',true,'ACTIVE',NULL,true,'cc1455ff-7b34-4bbd-af0b-3932d1efc01b'),
	 (78434,'2021-12-06 00:00:00',78434,'2021-12-06 00:00:00','get_tr_question_set_configuration_by_name','id,questionSetName,refId,refType','
SELECT
tqsc.*
FROM
tr_question_set_configuration tqsc
where
tqsc.question_set_name = #questionSetName#
and (''#id#'' = ''null'' or tqsc.id != #id#)
and tqsc.ref_id = #refId# and tqsc.ref_type = #refType#;
',true,'ACTIVE',NULL,true,'da4612e0-a00f-4ce4-931c-9925e9c7161f'),
	 (78434,'2021-12-06 00:00:00',78434,'2021-12-06 00:00:00','update_total_marks_tr_question_set_configuration','id,totalMarks,loggedInUserId','
UPDATE tr_question_set_configuration
SET
total_marks=#totalMarks#,
modified_by=#loggedInUserId#,
modified_on=now()
WHERE id=#id#;
',false,'ACTIVE',NULL,true,'5606b03f-7f05-4752-a911-e32eac5cfa12'),
	 (78434,'2021-12-06 00:00:00',78434,'2021-12-06 00:00:00','get_all_tr_question_set_configuration','refId,refType','
SELECT
tqsc.id,
tqsc.ref_id as "refId",
tqsc.ref_type as "refType",
tqsc.question_set_name as "questionSetName",
tqsc.status,
tqsc.minimum_marks as "minimumMarks",
tqsc.total_marks as "totalMarks",
tqsc.question_set_type as "questionSetType",
list.value as "questionSetTypeName",
tcm.course_id as "courseId",
tcm.course_name as "courseName",
ttm.topic_id as "topicId",
ttm.topic_name as "topicName",
ttvm.id as "mediaId",
ttvm.title as "mediaName"
FROM
tr_question_set_configuration tqsc
left join tr_course_master tcm on
    case
        when tqsc.ref_type = ''COURSE'' then tqsc.ref_id = tcm.course_id
        when tqsc.ref_type = ''MODULE'' then (select course_id from tr_course_topic_rel where topic_id = tqsc.ref_id) = tcm.course_id
        when tqsc.ref_type = ''LESSON'' then (select course_id from tr_course_topic_rel where topic_id = (select topic_id from tr_topic_media_master where id = tqsc.ref_id)) = tcm.course_id
        else false
    end
left join tr_topic_master ttm on
    case
        when tqsc.ref_type = ''MODULE'' then tqsc.ref_id = ttm.topic_id
        when tqsc.ref_type = ''LESSON'' then (select topic_id from tr_topic_media_master where id = tqsc.ref_id) = ttm.topic_id
        else false
    end
left join tr_topic_media_master ttvm on
    case
        when tqsc.ref_type = ''LESSON'' then tqsc.ref_id = ttvm.id
        else false
    end
left join listvalue_field_value_detail list on list.id = tqsc.question_set_type
where tqsc.ref_id = #refId# and tqsc.ref_type = #refType#
',true,'ACTIVE',NULL,true,'ced166c6-c5cd-422b-aa66-781798dc794d'),
	 (78434,'2021-12-06 00:00:00',78434,'2021-12-06 00:00:00','get_tr_question_set_configuration_by_id','id','
SELECT
tqsc.id,
tqsc.ref_id as "refId",
tqsc.ref_type as "refType",
tqsc.question_set_name as "questionSetName",
tqsc.question_set_type as "questionSetType",
list.value as "questionSetTypeName",
tqsc.status,
tqsc.minimum_marks as "minimumMarks",
tqsc.total_marks as "totalMarks",
tqsc.quiz_at_second as "quizAtSecond",
tcm.course_id as "courseId",
tcm.course_name as "courseName",
ttm.topic_id as "topicId",
ttm.topic_name as "topicName",
ttvm.id as "mediaId",
ttvm.title as "mediaName"
FROM
tr_question_set_configuration tqsc
left join tr_course_master tcm on
    case
        when tqsc.ref_type = ''COURSE'' then tqsc.ref_id = tcm.course_id
        when tqsc.ref_type = ''MODULE'' then (select course_id from tr_course_topic_rel where topic_id = tqsc.ref_id) = tcm.course_id
        when tqsc.ref_type = ''LESSON'' then (select course_id from tr_course_topic_rel where topic_id = (select topic_id from tr_topic_media_master where id = tqsc.ref_id)) = tcm.course_id
        else false
    end
left join tr_topic_master ttm on
    case
        when tqsc.ref_type = ''MODULE'' then tqsc.ref_id = ttm.topic_id
        when tqsc.ref_type = ''LESSON'' then (select topic_id from tr_topic_media_master where id = tqsc.ref_id) = ttm.topic_id
        else false
    end
left join tr_topic_media_master ttvm on
    case
        when tqsc.ref_type = ''LESSON'' then tqsc.ref_id = ttvm.id
        else false
    end
left join listvalue_field_value_detail list on list.id = tqsc.question_set_type
where tqsc.id = #id#;
',true,'ACTIVE',NULL,true,'8334fcd3-34d9-4caa-8f67-198e646d5b52'),
	 (78434,'2021-12-06 00:00:00',78434,'2021-12-06 00:00:00','insert_into_tr_question_set_configuration','refId,refType,questionSetName,questionSetType,status,minimumMarks,quizAtSecond,loggedInUserId,courseId','
INSERT INTO tr_question_set_configuration
(ref_id, ref_type, question_set_name, question_set_type, status, minimum_marks, course_id, quiz_at_second, created_by, created_on, modified_by, modified_on)
VALUES
(#refId#, #refType#, #questionSetName#, #questionSetType#, #status#, #minimumMarks#, #courseId#, #quizAtSecond#, #loggedInUserId#, now(), #loggedInUserId#, now());
',false,'ACTIVE',NULL,true,'b5fd4d27-97be-42c1-8644-b3165f470cfc'),
	 (78434,'2021-12-06 00:00:00',78434,'2021-12-06 00:00:00','get_question_sets_by_second','refId,refType,quizAtSecond,id','
select
    *
from
    tr_question_set_configuration
where
    ref_id = #refId#
    and ref_type = #refType#
    and quiz_at_second = #quizAtSecond#
    and id != #id#;
',true,'ACTIVE',NULL,true,'59208411-4989-45ae-8d28-60dc68f01690'),
	 (58981,'2021-12-06 00:00:00',58981,'2021-12-06 00:00:00','retrieve_lms_course_list',NULL,'select course_id as "courseId",
course_name as "courseName"
from tr_course_master
where course_state = ''ACTIVE''
and course_type = ''ONLINE''',true,'ACTIVE',NULL,true,'625a6086-ed54-4a65-a6f8-8209e70a98a0'),
	 (97091,'2022-11-02 00:00:00',97091,'2022-11-02 00:00:00','lms_dashboard_retrieve_comprehension_effectiveness','quizId,locationId,courseId','with location_user as(
    select user_id
    from location_hierchy_closer_det
        left join um_user_location on um_user_location.loc_id = location_hierchy_closer_det.child_id
    where parent_id = #locationId#
), practice_quizzes as (
	select course_id,
	cast(quiz_config.key as integer) as question_set_type,
	cast(quiz_config.value ->> ''doYouWantAQuizToBeMarked'' as boolean) as is_quiz
	from tr_course_master,
	jsonb_each(cast(tr_course_master.test_config_json as jsonb)) as quiz_config
	where tr_course_master.course_id = #courseId#
),data as (
	select case when #quizId# = ''-1'' then null else cast(split_part(#quizId#,''_'',1) as integer) end as reference_id,
	case when #quizId# = ''-1'' then null else split_part(#quizId#,''_'',2) end as reference_type,
	case when #quizId# = ''-1'' then null else cast(split_part(#quizId#,''_'',3) as integer) end as set_type
),questions as (
	select tr_question_set_configuration.id,
	tr_question_set_configuration.ref_id,
	tr_question_set_configuration.ref_type,
	tr_question_set_configuration.question_set_type,
	tr_question_set_configuration.total_marks
	from tr_question_set_configuration
	inner join practice_quizzes on tr_question_set_configuration.question_set_type = practice_quizzes.question_set_type
	and practice_quizzes.is_quiz
	where (
		#quizId# = ''-1''
		or (
			tr_question_set_configuration.ref_id in (select reference_id from data)
			and tr_question_set_configuration.ref_type in (select reference_type from data)
			and tr_question_set_configuration.question_set_type in (select set_type from data)
		)
	)
	and tr_question_set_configuration.status = ''ACTIVE''
	and tr_question_set_configuration.course_id = #courseId#
),marks_scored as (
	select questions.ref_id,
	questions.ref_type,
	questions.question_set_type,
	tr_question_set_answer.user_id,
	max(cast(tr_question_set_answer.marks_scored * 100 / questions.total_marks as integer)) as score
	from tr_question_set_answer
    inner join location_user on location_user.user_id=tr_question_set_answer.user_id
	inner join questions on tr_question_set_answer.question_set_id = questions.id
	group by questions.ref_id,
	questions.ref_type,
	questions.question_set_type,
	tr_question_set_answer.user_id
),average_score as (
	select user_id,
	avg(score) as score
	from marks_scored
	group by user_id
)
select count(1) filter (where score > 80) as "greaterThan80",
count(1) filter (where score between 40 and 80) as "between40_80",
count(1) filter (where score < 40) as "lesserThan40"
from average_score',true,'ACTIVE',NULL,true,'69dec614-b24a-4e52-8b94-b806c921ec25'),
	 (97091,'2022-11-02 00:00:00',97091,'2022-11-02 00:00:00','lms_dashboard_retrieve_course_completors','locationId,courseId','with location_user as(
    select user_id
    from location_hierchy_closer_det
        left join um_user_location on um_user_location.loc_id = location_hierchy_closer_det.child_id
    where parent_id = #locationId#
), course_completion as (
	select tr_lesson_analytics.user_id as user_id,
	sum(spent_time) as spent_time,
	min(tr_lesson_analytics.started_on) as course_started_on,
	max(tr_lesson_analytics.ended_on) as course_ended_on
	from tr_lesson_analytics
    inner join location_user on location_user.user_id=tr_lesson_analytics.user_id
	inner join tr_user_meta_data on tr_lesson_analytics.user_id = tr_user_meta_data.user_id
	and tr_lesson_analytics.course_id = tr_user_meta_data.course_id
	where tr_lesson_analytics.course_id = #courseId#
	and tr_user_meta_data.is_course_completed
	group by tr_lesson_analytics.user_id
)select um_user.id as "userId",
concat_ws('' '',um_user.first_name,um_user.middle_name,um_user.last_name) as "userName",
concat(
	case when (extract(day from spent_time) * 24 + extract(hour from spent_time)) <= 0
		 then ''''
		 else concat(extract(day from spent_time) * 24 + extract(hour from spent_time),'' hr '')
		 end,
	case when extract(minute from spent_time) <= 0
		 then ''''
		 else concat(extract(minute from spent_time),'' min '')
		 end,
	case when extract(second from spent_time) <= 0
		 then ''''
		 else concat(extract(second from spent_time),'' sec'')
		 end
) as "spentTime",
concat(
	case when (extract(day from (course_ended_on - course_started_on)) * 24 + extract(hour from (course_ended_on - course_started_on))) <= 0
		 then ''''
		 else concat(extract(day from (course_ended_on - course_started_on)) * 24 + extract(hour from (course_ended_on - course_started_on)),'' hr '')
		 end,
	case when extract(minute from (course_ended_on - course_started_on)) <= 0
		 then ''''
		 else concat(extract(minute from (course_ended_on - course_started_on)),'' min '')
		 end,
	case when extract(second from (course_ended_on - course_started_on)) <= 0
		 then ''''
		 else concat(extract(second from (course_ended_on - course_started_on)),'' sec'')
		 end
) as "finishedIn"
from course_completion
inner join um_user on course_completion.user_id = um_user.id
and um_user.state = ''ACTIVE''
order by (course_ended_on - course_started_on);',true,'ACTIVE',NULL,true,'fe74a3c5-5c52-4d64-bb15-2bb52d774a85'),
	 (97091,'2022-11-02 00:00:00',97091,'2022-11-02 00:00:00','lms_dashboard_retrieve_daywise_engagement_by_lesson','locationId,lessonId,time','with location_user as(
    select user_id as id
    from location_hierchy_closer_det
        left join um_user_location on um_user_location.loc_id = location_hierchy_closer_det.child_id
    where parent_id = #locationId#
), data as (
    select user_id,
        cast(started_on as date)
    from tr_session_analytics
        inner join location_user on tr_session_analytics.user_id = location_user.id
    where lesson_id = #lessonId#
)
select to_char(started_on, ''DD/MM/YYYY'') as "startedOn",
    count(1) as "noOfUsers"
from data
where case
        when #time# = ''Last 7 Days'' then started_on >= current_date - interval ''7 days''
        when #time# = ''Last 30 Days'' then started_on >= current_date - interval ''30 days''
        else true
    end
group by started_on
order by started_on',true,'ACTIVE',NULL,true,'484b52a2-9d80-4192-8171-07f808dfb45b'),
	 (97063,'2022-11-02 00:00:00',97063,'2022-11-02 00:00:00','training_dashboard_pending_list','courseType,trainingId,locationId,loggedInUserId','with location_det as(
	select distinct child_id as loc_id
	from location_hierchy_closer_det
	where case when #locationId# is not null
			   then parent_id in (#locationId#)
		   	   else parent_id in (select distinct loc_id from um_user_location where user_id = #loggedInUserId# and state = ''ACTIVE'') end
),users AS (
SELECT tcrr.role_id, tcrr.course_id, uu.id,tr_course_master.module_id FROM
	tr_course_master
	inner join tr_course_role_rel tcrr on tcrr.course_id = tr_course_master.course_id and tr_course_master.course_state = ''ACTIVE''
	INNER JOIN um_user uu ON uu.role_id = tcrr.role_id and uu.state = ''ACTIVE''
	inner join um_user_location ul on ul.state = ''ACTIVE'' and ul.user_id = uu.id
       	inner join location_det ld on ld.loc_id = ul.loc_id
    where tr_course_master.course_type = #courseType#
    and case when #trainingId# is not null then tr_course_master.course_id in (
    	select course_id
    	from tr_training_course_rel
    	where training_id = #trainingId#
    ) else true end

),totalUser as
(select u.course_id,u.role_id,COALESCE(count(distinct u.id),0) total from users u GROUP BY u.course_id,u.role_id)
, course_completion_time as (
	select users.course_id,
	users.id as user_id,
	min(tr_lesson_analytics.started_on) as course_started_on,
	max(tr_lesson_analytics.ended_on) as course_ended_on
	from users
	inner join tr_lesson_analytics on users.course_id = tr_lesson_analytics.course_id
	and users.id = tr_lesson_analytics.user_id
	group by users.course_id,
	users.id
),scheduled as (
		select count(distinct us.id) as scheduled,us.course_id,us.role_id,
		count(distinct tr_user_meta_data.user_id) filter (where tr_user_meta_data.is_course_completed is null or tr_user_meta_data.is_course_completed is false) as in_progress,
		count(distinct tr_user_meta_data.user_id) filter (where tr_user_meta_data.is_course_completed) as completed,
		count(distinct tr_user_meta_data.user_id) filter (where tr_user_meta_data.is_course_completed and cast(imt_family.created_on as date) >= cast(course_completion_time.course_ended_on as date)) as online_practicing_users
		from tr_training_master tr
		inner join tr_training_course_rel tcr on tr.training_id = tcr.training_id
                 inner join (select * from tr_training_attendee_rel union select * from tr_training_additional_attendee_rel) r
                 on tr.training_id = r.training_id
	         right join users us on us.id = r.attendee_id and us.course_id = tcr.course_id
	         left join tr_user_meta_data on us.id = tr_user_meta_data.user_id
	         and us.course_id = tr_user_meta_data.course_id
	         left join imt_family on tr_user_meta_data.user_id = imt_family.created_by
	         and case when #locationId# is null then true else imt_family.location_id in (select distinct child_id from location_hierchy_closer_det where parent_id in (#locationId#)) end
	         and tr_user_meta_data.is_course_completed
	         left join course_completion_time on tr_user_meta_data.user_id = course_completion_time.user_id
	         and tr_user_meta_data.course_id = course_completion_time.course_id
	         and tr_user_meta_data.is_course_completed
                 where (case when #courseType# = ''ONLINE'' then true else tr.expiration_date >= current_date end) and tr.training_state = ''DRAFT''
                 and case when #trainingId# is not null then tr.training_id = #trainingId# else true end
                 --where tr.training_state = ''DRAFT''
                 group by us.course_id,us.role_id
),
practiced as (
	SELECT us.role_id, us.course_id, COALESCE(count(distinct us.id),0) as practiced from tr_certificate_master tcm
	INNER JOIN users us on us.id = tcm.user_id and tcm.course_id = us.course_id
	inner join listvalue_field_value_detail fvm on fvm.id = us.module_id
	left join user_form_access ufa on ufa.form_code = fvm.value and ufa.user_id = us.id
	INNER JOIN tr_training_master ttm ON tcm.training_id = ttm.training_id
    and case when #trainingId# is not null then ttm.training_id = #trainingId# else true end
	--INNER JOIN tr_course_master cm on cm.course_id = tcm.course_id
	where tcm.certificate_type = ''COURSECOMPLETION'' and us.course_id in (1,7,10,11,26)
	and ufa.form_code is null
	--ttm.training_state = ''SUBMITTED'' and tcm.certificate_type = ''COURSECOMPLETION''
	--and us.state = ''ACTIVE'' and cm.course_state=''ACTIVE''
	group by us.course_id,us.role_id
),production as (
	SELECT us.role_id, us.course_id, count(distinct us.id) as production from tr_certificate_master tcm
	INNER JOIN users us on us.id = tcm.user_id and tcm.course_id = us.course_id
	--inner join listvalue_field_value_detail fvm on fvm.id = us.module_id
	--left join user_form_access ufa on ufa.form_code = fvm.value
	INNER JOIN tr_training_master ttm ON tcm.training_id = ttm.training_id
    and case when #trainingId# is not null then ttm.training_id = #trainingId# else true end
	--INNER JOIN tr_course_master cm on cm.course_id = tcm.course_id
	where tcm.certificate_type = ''COURSECOMPLETION'' and us.course_id not in (1,7,10,11,26)
	--and ufa.form_code is null
	--ttm.training_state = ''SUBMITTED'' and tcm.certificate_type = ''COURSECOMPLETION''
	--and us.state = ''ACTIVE'' and cm.course_state=''ACTIVE''
	group by us.course_id,us.role_id
	union all
	SELECT us.role_id, us.course_id, count(distinct us.id) as production from tr_certificate_master tcm
	INNER JOIN users us on us.id = tcm.user_id and tcm.course_id = us.course_id
	inner join listvalue_field_value_detail fvm on fvm.id = us.module_id
	inner join user_form_access ufa on ufa.form_code = fvm.value and ufa.user_id = us.id
	INNER JOIN tr_training_master ttm ON tcm.training_id = ttm.training_id
    and case when #trainingId# is not null then ttm.training_id = #trainingId# else true end
	--INNER JOIN tr_course_master cm on cm.course_id = tcm.course_id
	where tcm.certificate_type = ''COURSECOMPLETION'' and us.course_id in (1,7,10,11,26) and ufa.state=''MOVE_TO_PRODUCTION''
	--and ufa.form_code is not null
	--ttm.training_state = ''SUBMITTED'' and tcm.certificate_type = ''COURSECOMPLETION''
	--and us.state = ''ACTIVE'' and cm.course_state=''ACTIVE''
	group by us.course_id,us.role_id
),
pending as (
	SELECT totalUser.total - (COALESCE(scheduled,0)+ COALESCE(practiced,0)+COALESCE(production,0)) as pending,totalUser.course_id ,totalUser.role_id from totalUser

	LEFT JOIN scheduled ON totalUser.course_id = scheduled.course_id AND totalUser.role_id = scheduled.role_id
	LEFT JOIN practiced ON totalUser.course_id = practiced.course_id AND totalUser.role_id = practiced.role_id
LEFT JOIN production ON totalUser.course_id = production.course_id AND totalUser.role_id = production.role_id
	INNER JOIN tr_course_master tcm ON totalUser.course_id = tcm.course_id
	INNER JOIN um_role_master urm ON totalUser.role_id = urm.id
)
SELECT  totalUser.course_id as "id",
	tcm.course_name as "courseName",
	urm.name as role,
	totalUser.role_id as "roleId",
	totalUser.total,
	COALESCE(scheduled.scheduled,0) as scheduled,
	COALESCE(scheduled.in_progress,0) as in_progress,
	COALESCE(scheduled.completed,0) as completed,
	COALESCE(scheduled.online_practicing_users,0) as online_practicing_users,
	COALESCE(practiced,0) as practicing,
	COALESCE(production,0) as production ,
        pending
	FROM totalUser

	LEFT JOIN production ON totalUser.course_id = production.course_id AND totalUser.role_id = production.role_id
	LEFT JOIN scheduled ON totalUser.course_id = scheduled.course_id AND totalUser.role_id = scheduled.role_id
	LEFT JOIN practiced ON totalUser.course_id = practiced.course_id AND totalUser.role_id = practiced.role_id
	LEFT JOIN pending ON totalUser.course_id = pending.course_id AND totalUser.role_id = pending.role_id
	INNER JOIN tr_course_master tcm ON totalUser.course_id = tcm.course_id
	INNER JOIN um_role_master urm ON totalUser.role_id = urm.id;',true,'ACTIVE',NULL,true,'eaf13434-a4e9-49c8-8c5f-9d05c76cf9c9'),
	 (60512,'2022-11-02 00:00:00',60512,'2022-11-02 00:00:00','check_if_user_login_first_time','userId','select first_time_password_changed as "firstTimePasswordChanged" from um_user where id = #userId#',true,'ACTIVE',NULL,true,'332d6d22-5109-4446-8303-13e46381db36'),
	 (97091,'2022-11-02 00:00:00',97091,'2022-11-02 00:00:00','lms_dashboard_retrieve_daywise_engagement_by_module','topicId,locationId,time','with location_user as(
    select user_id
    from location_hierchy_closer_det
        left join um_user_location on um_user_location.loc_id = location_hierchy_closer_det.child_id
    where parent_id = #locationId#
),
        data as (
            select tr_session_analytics.user_id,
                tr_session_analytics.lesson_id,
                cast(tr_session_analytics.started_on as date)
            from tr_session_analytics
                inner join tr_topic_media_master on tr_session_analytics.lesson_id = tr_topic_media_master.id
                     inner join location_user on tr_session_analytics.user_id = location_user.user_id
            where  tr_topic_media_master.topic_id = #topicId#
        )
    select to_char(started_on, ''DD/MM/YYYY'') as "startedOn",
        count(1) as "noOfUsers"
    from data
    where case
            when #time# = ''Last 7 Days'' then started_on >= current_date - interval ''7 days''
            when #time# = ''Last 30 Days'' then started_on >= current_date - interval ''30 days''
            else true
        end
    group by started_on
    order by started_on',true,'ACTIVE',NULL,true,'67ce718e-b267-4013-96da-005186b96914'),
	 (97070,'2023-01-04 00:00:00',97070,'2023-01-04 00:00:00','register_opd_patient','healthInfrastructureId,registrationDate,referenceType,loggedInUserId,referenceId,memberId','with get_location_id as (
        select
        case
            when if.area_id is not null then if.area_id
            else if.location_id
        end as location_id
        from imt_family if
        inner join imt_member im on im.family_id = if.family_id
        where im.id = #memberId#
    )
    INSERT
    INTO
    rch_opd_member_registration
    (member_id, registration_date, health_infra_id, created_by, created_on, modified_by, modified_on, reference_id, reference_type, location_id)
    VALUES
    (#memberId#, #registrationDate#, #healthInfrastructureId#, #loggedInUserId#, now(), #loggedInUserId#, now(), #referenceId#, #referenceType#,
        (select location_id from get_location_id)
    ) returning id;',true,'ACTIVE','Register OPD Patient',true,'8bfe0bfa-48fa-4f16-9f13-12e94b90569a'),
	 (97091,'2022-11-02 00:00:00',97091,'2022-11-02 00:00:00','lms_dashboard_retrieve_not_accessed_7_days','locationId,courseId','with location_user as(
    select user_id
    from location_hierchy_closer_det
        left join um_user_location on um_user_location.loc_id = location_hierchy_closer_det.child_id
    where parent_id = #locationId#
)

select um_user.id as "userId",
concat_ws('' '',um_user.first_name,um_user.middle_name,um_user.last_name) as "userName",
um_role_master.name as "roleName",
case when tr_user_meta_data.last_accessed_lesson_on > tr_user_meta_data.last_accessed_quiz_on
	 then concat(
	 	to_char(tr_user_meta_data.last_accessed_lesson_on,''DD/MM/YYYY HH24:MI:SS''),
	 	'' (-'',
	 	cast(extract(day from (current_date - last_accessed_lesson_on)) as text),
	 	'' days)''
	 )
	 else concat(
	 	to_char(tr_user_meta_data.last_accessed_quiz_on,''DD/MM/YYYY HH24:MI:SS''),
	 	'' (-'',
	 	cast(extract(day from (current_date - last_accessed_quiz_on)) as text),
	 	'' days)''
	 )
	 end as "lastAccessedOn",
concat(tr_course_wise_count_analytics.course_progress,''%'') as "courseProgress"
from tr_user_meta_data
inner join location_user on location_user.user_id=tr_user_meta_data.user_id
inner join um_user on tr_user_meta_data.user_id = um_user.id
and um_user.state = ''ACTIVE''
inner join um_role_master on um_user.role_id = um_role_master.id
and um_role_master.state = ''ACTIVE''
left join tr_course_wise_count_analytics on tr_user_meta_data.user_id = tr_course_wise_count_analytics.user_id
and tr_user_meta_data.course_id = tr_course_wise_count_analytics.course_id
where tr_user_meta_data.course_id = #courseId#
and (is_course_completed is null or is_course_completed is false)
and coalesce(extract(day from (current_date - last_accessed_lesson_on)),0) > 7
and coalesce(extract(day from (current_date - last_accessed_quiz_on)),0) > 7',true,'ACTIVE',NULL,true,'e03078ac-3c80-4426-a44b-04948b89d733'),
	 (97091,'2022-11-02 00:00:00',97091,'2022-11-02 00:00:00','lms_dashboard_retrieve_quizzes_by_course_id','locationId,courseId','with location_user as(
    select user_id
    from location_hierchy_closer_det
        left join um_user_location on um_user_location.loc_id = location_hierchy_closer_det.child_id
    where parent_id = #locationId#
), practice_quizzes as (
	select course_id,
	cast(quiz_config.key as integer) as question_set_type,
	cast(quiz_config.value ->> ''doYouWantAQuizToBeMarked'' as boolean) as is_quiz
	from tr_course_master,
	jsonb_each(cast(tr_course_master.test_config_json as jsonb)) as quiz_config
	where tr_course_master.course_id = #courseId#
),quiz_data as (
	select tr_question_set_configuration.ref_id as reference_id,
	tr_question_set_configuration.ref_type as reference_type,
	tr_question_set_configuration.question_set_type as set_type,
	concat(
		case when tr_question_set_configuration.ref_type = ''LESSON''
			 then tr_topic_media_master.title
			 when tr_question_set_configuration.ref_type = ''MODULE''
			 then tr_topic_master.topic_name
			 when tr_question_set_configuration.ref_type = ''COURSE''
			 then tr_course_master.course_name
			 end,
		'' ('',
		listvalue_field_value_detail.value,
		'')''
	) as name
	from tr_question_set_configuration
	left join tr_topic_media_master on tr_question_set_configuration.ref_id = tr_topic_media_master.id
	and tr_question_set_configuration.ref_type = ''LESSON''
	and tr_topic_media_master.media_state = ''ACTIVE''
	left join tr_topic_master on tr_question_set_configuration.ref_id = tr_topic_master.topic_id
	and tr_question_set_configuration.ref_type = ''MODULE''
	and tr_topic_master.topic_state = ''ACTIVE''
	left join tr_course_master on tr_question_set_configuration.ref_id = tr_course_master.course_id
	and tr_question_set_configuration.ref_type = ''COURSE''
	inner join practice_quizzes on tr_question_set_configuration.course_id = practice_quizzes.course_id
	and practice_quizzes.is_quiz
	inner join listvalue_field_value_detail on tr_question_set_configuration.question_set_type = listvalue_field_value_detail.id
	where tr_question_set_configuration.course_id = #courseId#
	and tr_question_set_configuration.status = ''ACTIVE''
),quizzes as (
	select max(name) as quiz_name,
	concat(reference_id,''_'',reference_type,''_'',set_type) as quiz_id
	from quiz_data
	group by reference_id,reference_type,set_type
),json_data as (
	select tr_user_meta_data.user_id,
	cast(quiz_meta_data as jsonb) as quiz_meta_data
	from tr_user_meta_data
    inner join location_user on location_user.user_id=tr_user_meta_data.user_id
	where course_id = #courseId#
),quiz_details as (
	select user_id,
	cast(jsonb_array_elements(quiz_meta_data) ->> ''quizRefId'' as integer) as reference_id,
	jsonb_array_elements(quiz_meta_data) ->> ''quizRefType'' as reference_type,
	cast(jsonb_array_elements(quiz_meta_data) ->> ''quizTypeId'' as integer) as set_type,
	cast(jsonb_array_elements(quiz_meta_data) ->> ''quizAttempts'' as integer) as quiz_attempts,
	cast(jsonb_array_elements(quiz_meta_data) ->> ''quizAttemptsToPass'' as integer) as quiz_attempts_to_pass,
	to_timestamp(cast(jsonb_array_elements(quiz_meta_data) ->> ''lastQuizDate'' as bigint)/1000) as last_given_on,
	cast(jsonb_array_elements(quiz_meta_data) ->> ''scoreWhenPassed'' as integer) as pass_score,
	cast(jsonb_array_elements(quiz_meta_data) ->> ''latestScore'' as integer) as latest_score
	from json_data
),frequency as (
	select concat(reference_id,''_'',reference_type,''_'',set_type) as quiz_id,
	sum(quiz_attempts) as frequency
	from quiz_details
	inner join practice_quizzes on quiz_details.set_type = practice_quizzes.question_set_type
	and practice_quizzes.is_quiz
	group by reference_id,
	reference_type,
	set_type
),first_attempt_scores as (
	select distinct on (
		reference_id,
		reference_type,
		set_type,
		tr_question_set_answer.user_id
	)
	concat(reference_id,''_'',reference_type,''_'',set_type) as quiz_id,
	tr_question_set_answer.user_id,
	tr_question_set_answer.marks_scored * 100 / tr_question_set_configuration.total_marks as avg_score,
	tr_question_set_answer.is_passed
	from quiz_details
	inner join tr_question_set_configuration on quiz_details.reference_id = tr_question_set_configuration.ref_id
	and quiz_details.reference_type = tr_question_set_configuration.ref_type
	and quiz_details.set_type = tr_question_set_configuration.question_set_type
	and tr_question_set_configuration.status = ''ACTIVE''
	inner join tr_question_set_answer on tr_question_set_configuration.id = tr_question_set_answer.question_set_id
	order by reference_id,
	reference_type,
	set_type,
	tr_question_set_answer.user_id,
	tr_question_set_answer.created_on
),avg_score as (
	select quiz_id,
	cast(avg(avg_score) as integer) as avg_score
	from first_attempt_scores
	group by quiz_id
),user_data as (
	select quiz_id,
	count(1) as users_attempted,
	count(1) filter (where is_passed) as users_passed,
	count(1) filter (where is_passed is null or is_passed is false) as users_failed
	from first_attempt_scores
	group by quiz_id
)
select quizzes.quiz_id as "quizId",
quizzes.quiz_name as "quizName",
coalesce(frequency.frequency,0) as "frequency",
coalesce(avg_score.avg_score,0) as "firstAttemptAvgScore",
coalesce(user_data.users_attempted,0) as "totalUsersAttempted",
coalesce(user_data.users_passed,0) as "usersPassed",
coalesce(user_data.users_failed,0) as "usersFailed"
from quizzes
left join frequency on quizzes.quiz_id = frequency.quiz_id
left join avg_score on quizzes.quiz_id = avg_score.quiz_id
left join user_data on quizzes.quiz_id = user_data.quiz_id
order by "frequency" desc',true,'ACTIVE',NULL,true,'60eb2f3d-375c-4db0-ae79-504f37863f3b'),
	 (97091,'2022-11-02 00:00:00',97091,'2022-11-02 00:00:00','lms_dashboard_retrieve_top_scorers','locationId,courseId','with location_user as(
    select user_id
    from location_hierchy_closer_det
        left join um_user_location on um_user_location.loc_id = location_hierchy_closer_det.child_id
    where parent_id = #locationId#
), practice_quizzes as (
	select course_id,
	cast(quiz_config.key as integer) as question_set_type,
	cast(quiz_config.value ->> ''doYouWantAQuizToBeMarked'' as boolean) as is_quiz
	from tr_course_master,
	jsonb_each(cast(tr_course_master.test_config_json as jsonb)) as quiz_config
	where tr_course_master.course_id = #courseId#
),marks as (
	select tr_question_set_configuration.ref_id,
	tr_question_set_configuration.ref_type,
	tr_question_set_configuration.question_set_type,
	tr_question_set_answer.user_id,
	coalesce(tr_question_set_answer.marks_scored * 100 / tr_question_set_configuration.total_marks,0) as per_scored
	from tr_question_set_answer
	inner join tr_question_set_configuration on tr_question_set_answer.question_set_id = tr_question_set_configuration.id
	inner join practice_quizzes on tr_question_set_configuration.question_set_type = practice_quizzes.question_set_type
	and practice_quizzes.is_quiz
	where tr_question_set_configuration.course_id = #courseId#
	and tr_question_set_configuration.status = ''ACTIVE''
)select um_user.id as "userId",
concat_ws('' '',um_user.first_name,um_user.middle_name,um_user.last_name) as "userName",
coalesce(cast(avg(per_scored) as integer),0) as score
from marks
inner join location_user on location_user.user_id=marks.user_id
inner join um_user on marks.user_id = um_user.id
and um_user.state = ''ACTIVE''
group by um_user.id
order by score desc',true,'ACTIVE',NULL,true,'60b8b838-b241-4892-8b52-c77f0e362a72'),
	 (97091,'2022-11-02 00:00:00',97091,'2022-11-02 00:00:00','lms_dashboard_retrieve_userwise_quiz_trend_by_quiz_id','quizId,locationId,time','with location_user as(
    select user_id
    from location_hierchy_closer_det
        left join um_user_location on um_user_location.loc_id = location_hierchy_closer_det.child_id
    where parent_id = #locationId#
), data as (
	select cast(split_part(#quizId#,''_'',1) as integer) as reference_id,
	split_part(#quizId#,''_'',2) as reference_type,
	cast(split_part(#quizId#,''_'',3) as integer) as set_type
),first_attempts as (
	select distinct on (tr_question_set_answer.user_id)
	tr_question_set_answer.user_id,
	cast(tr_question_set_answer.created_on as date),
	tr_question_set_answer.is_passed
	from data
	inner join tr_question_set_configuration on data.reference_id = tr_question_set_configuration.ref_id
	and data.reference_type = tr_question_set_configuration.ref_type
	and data.set_type = tr_question_set_configuration.question_set_type
	and tr_question_set_configuration.status = ''ACTIVE''
	inner join tr_question_set_answer on tr_question_set_configuration.id = tr_question_set_answer.question_set_id
     inner join location_user on location_user.user_id=tr_question_set_answer.user_id
	order by tr_question_set_answer.user_id,
	tr_question_set_answer.created_on
)select to_char(created_on,''DD/MM/YYYY'') as "attemptedOn",
count(1) as "totalUsersAttempted",
count(1) filter (where is_passed) as "totalUsersPassed",
count(1) filter (where is_passed is null or is_passed is false) as "totalUsersFailed"
from first_attempts
where case when #time# = ''Last 7 Days'' then created_on >= current_date - interval ''7 days''
		   when #time# = ''Last 30 Days'' then created_on >= current_date - interval ''30 days''
		   else true end
group by created_on',true,'ACTIVE',NULL,true,'77ec6a25-67d9-488f-b578-ff557216f9e2'),
	 (60512,'2022-11-02 00:00:00',60512,'2022-11-02 00:00:00','pnc_retrieve_mother_list_by_name','offSet,locationId,name,limit','select imt_member.*
from rch_pregnancy_registration_det
inner join imt_member on rch_pregnancy_registration_det.member_id = imt_member.id
where rch_pregnancy_registration_det.delivery_date > now() - interval ''60 days''
and rch_pregnancy_registration_det.state = ''DELIVERY_DONE''
and rch_pregnancy_registration_det.current_location_id in (
	select child_id from location_hierchy_closer_det where parent_id = #locationId#
)
and concat_ws('' '',imt_member.first_name,imt_member.middle_name,imt_member.last_name) ilike #name#
and imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'',''TEMPORARY'')
order by rch_pregnancy_registration_det.delivery_date desc
limit #limit# offset #offSet#',true,'ACTIVE',NULL,true,'a182a2aa-c705-4c5a-9224-b2df50219ae0'),
	 (97070,'2022-11-02 00:00:00',97070,'2022-11-02 00:00:00','feature_usage_analytics','end_date,rids,from_date','select menu_config.menu_name,endData.navigation_state,avg_time,max_time,page_count,user_count,finaltotal,percentValue from (select data001.navigation_state,avg_time,max_time,page_count,user_count,finaltotal,(user_count/finaltotal)*100 as percentValue from (select sum(sum+count) as finalTotal,menu_config.navigation_state from (select data1.sum,data2.count,data2.menu_config_id from (select sum(count),menu_config_id from (SELECT * FROM 
   (select count(id),role_id from um_user group by role_id) a
INNER JOIN 
   (select * from user_menu_item ) b
ON a.role_id = b.role_id) rawData group by menu_config_id) data1
JOIN
(select count(user_id),menu_config_id from user_menu_item group by menu_config_id) data2
on data1.menu_config_id=data2.menu_config_id 
) finalData join menu_config on finalData.menu_config_id=menu_config.id group by menu_config.navigation_state order by finalTotal DESC) data001
join
(select request_response_navigation_state_mapping.navigation_state,avg(avg_active_time) as avg_time,max(max_active_time) as max_time,sum(userAna.no_of_times) as page_count, count(distinct(user_id)) as user_count from analytics.user_wise_feature_time_taken_detail_analytics userAna join request_response_navigation_state_mapping on userAna.page_title_id=request_response_navigation_state_mapping.id where on_date between #from_date# and #end_date# and role_id in (#rids#) group by request_response_navigation_state_mapping.navigation_state) data002 on data001.navigation_state=data002.navigation_state) endData
join menu_config on endData.navigation_state=menu_config.navigation_state
order by page_count DESC;',true,'ACTIVE',NULL,true,'244931a0-eebc-4ee8-a953-2e072a28dfd0'),
	 (97070,'2022-11-02 00:00:00',97070,'2022-11-02 00:00:00','system_config_add','value,key','insert into system_configuration(key_value,system_key,is_active) values (#value#,#key#,false)',false,'ACTIVE','Add system configuration',true,'aead829e-f8e5-4f31-989e-61c1fec8a875'),
	 (97070,'2022-11-02 00:00:00',97070,'2022-11-02 00:00:00','check_if_system_configuration_exists','key','SELECT COUNT(*) FROM SYSTEM_CONFIGURATION
           WHERE system_key = #key#',true,'ACTIVE','Checks whether the system configuration exists or not',true,'c14ded9a-1657-4d84-9a57-455f865e5c44'),
	 (97070,'2022-11-02 00:00:00',97070,'2022-11-02 00:00:00','retrieve_all_information_of_user','username','select
um.contact_number as mobilenumber,
um.email_id as emailid, CONCAT(um.first_name, '' '', um.middle_name, '' '',um.last_name) as fullname,
um.gender, to_char(um.date_of_birth, ''dd/mm/yyyy'') as dateofbirth, um.user_name as username, um.state, um.title, um.techo_phone_number as techophonenumber,
loc.level as locationlevel, loc.state as areaofinterventionstate,
rol.name as rolename, rol.state as rolestate,
string_agg(lm.name,''> '' order by lhcd.depth desc) as locationname, locname.state as locationstate
from um_user um
left join um_user_location loc on loc.user_id = um.id and loc.state = ''ACTIVE''
left join location_hierchy_closer_det lhcd on loc.loc_id = lhcd.child_id
left join location_master lm on lm.id = lhcd.parent_id
left join um_role_master rol on um.role_id = rol.id
left join location_master locname on loc.loc_id = locname.id and locName.state = ''ACTIVE''
where um.user_name = #username#
group by um.aadhar_number, um.contact_number, um.email_id, um.first_name, um.middle_name, um.last_name,
um.gender, um.date_of_birth, um.user_name, um.state, um.title, um.techo_phone_number,
loc.level, loc.state,rol.name, rol.state, locname.state , lhcd.child_id limit 1',true,'ACTIVE','Retrieve User Information using userName',true,'b5228870-2951-4c98-9d62-0bad36a3f1d2'),
	 (97070,'2022-11-29 00:00:00',97070,'2022-11-29 00:00:00','translation_label_retrival_1','searchText,offset,appName,limit,startsWith','select
	labelMaster1.key as key,
	labelMaster1.language as language ,
	labelMaster2.text as label ,
	labelMaster1.text ,
	case
		when labelMaster1.language = ''EN'' then ''English''
		else ''Gujarati''
	end as languageToDisplay,
	labelMaster1.translation_pending as "isTranslationPending",
	labelMaster1.app_name as "appName"
from
	internationalization_label_master as labelMaster1
join internationalization_label_master as labelMaster2 on
	labelMaster2.key = labelMaster1.key
where
         (#startsWith# = null
	or labelMaster2.text ilike concat(#startsWith# , ''%'' ))
	and (#searchText# = null
	or labelMaster2.text ilike concat( ''%'',#searchText# , ''%'' ))
      and (#appName# is null
        or labelMaster2.app_name = #appName#)
order by
	labelMaster1.key
limit #limit# offset #offset#',true,'ACTIVE',NULL,true,'ce779c6c-4927-4103-b694-c403149360cb'),
	 (97067,'2022-11-29 00:00:00',97067,'2022-11-29 00:00:00','ncd_treatment_history_by_member_id','limit,doneBy,memberId','with hypertension as (
    select
        ht.created_by,
        ht.screening_date,
        case
            when ht.status is null then case
                when ht.is_suspected is true then ''SUSPECTED''
                else ''NORMAL''
            end
            else replace(ht.status, ''_'', '' '')
        end as status,
        ''HT'' as disease_code,
        CONCAT(ht.systolic_bp, ''/'', ht.diastolic_bp) as readings
    from
        ncd_member_hypertension_detail ht
    where
        ht.member_id = #memberId# and (#doneBy# is null or done_by =#doneBy#)
    order by
        screening_date desc
    limit
        #limit#
), diabetes as (
    select
        dd.created_by,
        dd.screening_date,
        case
            when dd.status is null then case
                when dd.is_suspected is true then ''SUSPECTED''
                else ''NORMAL''
            end
            else replace(dd.status, ''_'', '' '')
        end as status,
        ''D'' as disease_code,
        CONCAT('''', dd.blood_sugar) as readings
    from
        ncd_member_diabetes_detail dd
    where
        dd.member_id = #memberId# and (#doneBy# is null or done_by =#doneBy#)
    order by
        screening_date desc
    limit
        #limit#
), mental_health as (
    select
        mh.created_by,
        mh.screening_date,
        case
            when mh.status is null then case
                when mh.is_suffering is true then ''SUSPECTED''
                else ''NORMAL''
            end
            else replace(mh.status, ''_'', '' '')
        end as status,
        ''MH'' as disease_code,
        CONCAT(
            '''',
            mh.talk,
            ''/'',
            mh.own_daily_work,
            ''/'',
            mh.social_work,
            ''/'',
            mh.understanding
        ) as readings
    from
        ncd_member_mental_health_detail mh
    where
        mh.member_id = #memberId# and (#doneBy# is null or done_by =#doneBy#)
    order by
        screening_date desc
    limit
        #limit#
), initial_assessment as (
    select
        ia.created_by,
        ia.screening_date,
        null as status,
        ''IA'' as disease_code,
        CONCAT(
            '''',
            ia.weight,
            '' cm /'',
            ia.weight,
            '' kg /'',
            ia.bmi
        ) as readings
    from
        ncd_member_initial_assessment_detail ia
    where
        ia.member_id = #memberId# and (#doneBy# is null or done_by =#doneBy#)
    order by
        screening_date desc
    limit
        #limit#
), oral as (
    select
        od.created_by,
        od.screening_date,
        replace(od.status, ''_'', '' '') as status,
        ''O'' as disease_code,
        array_to_string(
            array [
        case
            when od.ulcer is not null then ''Ulcer''
            else null
        end,
         case
            when od.growth_of_recent_origins is not null then ''Growth''
            else null
        end,
          case
            when od.lichen_planus is not null then ''Lichen Planus''
            else null
        end,
          case
            when od.smokers_palate is not null then ''Smokers palate''
            else null
        end,
          case
            when od.submucous_fibrosis is not null then ''Submucous fibrosis''
            else null
        end,
          case
            when od.red_patches is not null then ''Red Patches (Erythroplakia)''
            else null
        end,
          case
            when od.white_patches is not null then ''White Patches (Leukoplakia)''
            else null
        end,
          case
            when od.restricted_mouth_opening is not null then ''Restricted Mouth Opening (Locked Jaw)''
            else null
        end
   ],
            '',''
        ) as readings
    from
        ncd_member_oral_detail od
    where
        od.member_id = #memberId# and (#doneBy# is null or done_by =#doneBy#)
    order by
        screening_date desc
    limit
        #limit#
), breast as (
    select
        bd.created_by,
        bd.screening_date,
        replace(bd.status, ''_'', '' '') as status,
        ''B'' as disease_code,
        array_to_string(
            array [
        case
            when bd.visual_ulceration is not null then ''Ulcer''
            else null
        end,
         case
            when bd.visual_lump_in_breast is not null then ''Lump in breasts''
            else null
        end,
          case
            when bd.visual_discharge_from_nipple is not null then ''Nipple Discharge''
            else null
        end,
          case
            when bd.visual_skin_retraction is not null then ''Retraction of skin''
            else null
        end,
          case
            when bd.visual_nipple_retraction_distortion is not null then ''Retraction of nipple''
            else null
        end,
          case
            when bd.visual_skin_dimpling_retraction is not null then ''Skin Dimpling/Puckering''
            else null
        end
   ],
            '',''
        ) as readings
    from
        ncd_member_breast_detail bd
    where
        bd.member_id = #memberId# and (#doneBy# is null or done_by =#doneBy#)
    order by
        screening_date desc
    limit
        #limit#
), cervical as (
    select
        cd.created_by,
        cd.screening_date,
        replace(cd.status, ''_'', '' '') as status,
        ''C'' as disease_code,
        CONCAT(
            ''Bimanual Examination:- '',
            cd.bimanual_examination
        ) as readings
    from
        ncd_member_cervical_detail cd
    where
        cd.member_id = #memberId# and (#doneBy# is null or done_by =#doneBy#)
    order by
        screening_date desc
    limit
        #limit#
), details as (
    select
        *
    from
        hypertension
    union
    select
        *
    from
        diabetes
    union
    select
        *
    from
        mental_health
    union
    select
        *
    from
        initial_assessment
    union
    select
        *
    from
        oral
    union
    select
        *
    from
        breast
    union
    select
        *
    from
        cervical
    order by
        screening_date
)
select
    concat(
        um_user.first_name,
        '' '',
        um_user.middle_name,
        '' '',
        um_user.last_name
    ) as "diagnosedBy",
    details.screening_date as "diagnosedOn",
    details.readings,
    details.disease_code as "diseaseCode",
    details.status as "diagnosis"
from
    details
    inner join um_user on details.created_by = um_user.id
order by
    "diagnosedOn" desc',true,'ACTIVE','To retrieve all disease treatment history',true,'e2cbb249-6232-4156-b02c-f9e1dd0f3b6a'),
	 (97070,'2022-11-02 00:00:00',97070,'2022-11-02 00:00:00','mob_ncd_personal_history_details_by_member_id','memberId','with max_record as (
	select max(id) as ncd_id from ncd_personal_history where member_id = #memberId#
)select imt_member.unique_health_id as "uniqueHealthId",
cast(imt_member.id as text) as "memberId",
imt_member.family_id as "familyId",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "memberName",
imt_member.dob,
cast(age(imt_member.dob) as text) as "age",
imt_member.gender as "gender",
concat(imt_family.address1,'' '',imt_family.address2) as "address",
cast(imt_family.id as text) as "fid",
imt_member.mobile_number as "mobileNumber",
imt_member.health_insurance as "healthInsurance",
imt_member.scheme_detail as "schemeDetail",
(select value from listvalue_field_value_detail where id = imt_member.education_status) as "educationStatusValue",
ncd_personal_history.* from ncd_personal_history
inner join imt_member on ncd_personal_history.member_id = imt_member.id
inner join imt_family on imt_member.family_id = imt_family.family_id
where ncd_personal_history.id in (select ncd_id from max_record)',true,'ACTIVE','Personal History Online Viewing Data Query',true,'6836b1b5-cd9c-42f3-bac2-839d631962fb'),
	 (97072,'2022-11-02 00:00:00',97072,'2022-11-02 00:00:00','mob_ncd_cbac_details_by_member_id','memberId','with max_record as (
	select max(id) as ncd_id from ncd_member_cbac_detail where member_id = #memberId#
)select imt_member.unique_health_id as "uniqueHealthId",
cast(imt_member.id as text) as "memberId",
imt_member.family_id as "familyId",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "memberName",
imt_member.dob,
cast(age(imt_member.dob) as text) as "age",
imt_member.gender as "gender",
concat(imt_family.address1,'' '',imt_family.address2) as "address",
imt_family.type_of_house as "typeOfHouse",
imt_family.type_of_toilet as "typeOfToilet",
imt_family.electricity_availability as "electricityAvailability",
imt_family.drinking_water_source as "drinkingWaterSource",
imt_family.fuel_for_cooking as "fuelForCooking",
imt_family.house_ownership_status as "houseOwnershipStatus",
imt_family.annual_income as "annualIncome",
cast(imt_family.id as text) as "fid",
imt_member.mobile_number as "mobileNumber",
ncd_member_cbac_detail.* from ncd_member_cbac_detail
inner join imt_member on ncd_member_cbac_detail.member_id = imt_member.id
inner join imt_family on imt_member.family_id = imt_family.family_id
where ncd_member_cbac_detail.id in (select ncd_id from max_record)',true,'ACTIVE','CBAC Online Viewing Data Query',true,'35ffa425-7273-4130-8e27-c5f2df8f7415'),
	 (97067,'2022-11-29 00:00:00',97067,'2022-11-29 00:00:00','ncd_cervical_treatment_history','memberId','select
    cast(
        ncd_member_cervical_detail.screening_date as date
    ) as "diagnosedOn",
    concat(
        um_user.first_name,
        '' '',
        um_user.middle_name,
        '' '',
        um_user.last_name
    ) as "diagnosedBy",
    ncd_member_cervical_detail.done_by as "doneBy",
    CONCAT(
        ''Bimanual Examination:- '',
        ncd_member_cervical_detail.bimanual_examination
    ) as readings,
    replace(ncd_member_cervical_detail.status, ''_'', '' '') as "currentStatus"
from
    ncd_member_cervical_detail
    inner join ncd_master on ncd_member_cervical_detail.master_id = ncd_master.id
    inner join um_user on ncd_member_cervical_detail.created_by = um_user.id
where
    ncd_member_cervical_detail.member_id = #memberId#
group by
    ncd_member_cervical_detail.screening_date,
    "diagnosedBy",
    "doneBy",
    "currentStatus",
    readings
order by
    ncd_member_cervical_detail.screening_date desc',true,'ACTIVE','To retrieve cervical disease treatment history of patient.',true,'797fe3f5-6c77-40ab-bc27-a95df3376f07'),
	 (97067,'2022-11-29 00:00:00',97067,'2022-11-29 00:00:00','ncd_oral_treatment_history','memberId','select
    cast(ncd_member_oral_detail.screening_date as date) as "diagnosedOn",
    concat(
        um_user.first_name,
        '' '',
        um_user.middle_name,
        '' '',
        um_user.last_name
    ) as "diagnosedBy",
    ncd_member_oral_detail.done_by as "doneBy",
    array_to_string(
        array [
        case
            when ncd_member_oral_detail.ulcer is not null then ''Ulcer''
            else null
        end,
         case
            when ncd_member_oral_detail.growth_of_recent_origins is not null then ''Growth''
            else null
        end,
          case
            when ncd_member_oral_detail.lichen_planus is not null then ''Lichen Planus''
            else null
        end,
          case
            when ncd_member_oral_detail.smokers_palate is not null then ''Smokers palate''
            else null
        end,
          case
            when ncd_member_oral_detail.submucous_fibrosis is not null then ''Submucous fibrosis''
            else null
        end,
          case
            when ncd_member_oral_detail.red_patches is not null then ''Red Patches (Erythroplakia)''
            else null
        end,
          case
            when ncd_member_oral_detail.white_patches is not null then ''White Patches (Leukoplakia)''
            else null
        end,
          case
            when ncd_member_oral_detail.restricted_mouth_opening is not null then ''Restricted Mouth Opening (Locked Jaw)''
            else null
        end
   ],
        '',''
    ) as readings,
    replace(ncd_member_oral_detail.status, ''_'', '' '') as "currentStatus"
from
    ncd_member_oral_detail
    inner join ncd_master on ncd_member_oral_detail.master_id = ncd_master.id
    inner join um_user on ncd_member_oral_detail.created_by = um_user.id
where
    ncd_member_oral_detail.member_id = #memberId#
group by
    ncd_member_oral_detail.screening_date,
    "diagnosedBy",
    "doneBy",
    "currentStatus",
    readings
order by
    ncd_member_oral_detail.screening_date desc',true,'ACTIVE','To retrieve oral disease treatment history of patient.',true,'79603a16-cdd4-4ff4-84e8-2a57aa318145'),
	 (97067,'2022-11-29 00:00:00',97067,'2022-11-29 00:00:00','ncd_breast_treatment_history','memberId','select
    cast(ncd_member_breast_detail.screening_date as date) as "diagnosedOn",
    concat(
        um_user.first_name,
        '' '',
        um_user.middle_name,
        '' '',
        um_user.last_name
    ) as "diagnosedBy",
    ncd_member_breast_detail.done_by as "doneBy",
    array_to_string(
        array [
        case
            when ncd_member_breast_detail.visual_ulceration is not null then ''Ulcer''
            else null
        end,
         case
            when ncd_member_breast_detail.visual_lump_in_breast is not null then ''Lump in breasts''
            else null
        end,
          case
            when ncd_member_breast_detail.visual_discharge_from_nipple is not null then ''Nipple Discharge''
            else null
        end,
          case
            when ncd_member_breast_detail.visual_skin_retraction is not null then ''Retraction of skin''
            else null
        end,
          case
            when ncd_member_breast_detail.visual_nipple_retraction_distortion is not null then ''Retraction of nipple''
            else null
        end,
          case
            when ncd_member_breast_detail.visual_skin_dimpling_retraction is not null then ''Skin Dimpling/Puckering''
            else null
        end
   ],
        '',''
    ) as readings,
    replace(ncd_member_breast_detail.status, ''_'', '' '') as "currentStatus"
from
    ncd_member_breast_detail
    inner join ncd_master on ncd_member_breast_detail.master_id = ncd_master.id
    inner join um_user on ncd_member_breast_detail.created_by = um_user.id
where
    ncd_member_breast_detail.member_id = #memberId#
group by
    ncd_member_breast_detail.screening_date,
    "diagnosedBy",
    "doneBy",
    "currentStatus",
    readings
order by
    ncd_member_breast_detail.screening_date desc',true,'ACTIVE','To retrieve breast disease treatment history of patient.',true,'9baf3293-0f79-48cb-932d-6559dade8b18'),
	 (97070,'2022-12-01 00:00:00',97070,'2022-12-01 00:00:00','child_service_retrieve_child_list_by_abha_address','offSet,limit,abhaAddress','select imt_member.id,
imt_member.unique_health_id,
imt_member.family_id,
imt_member.first_name,imt_member.middle_name,imt_member.last_name,
imt_member.dob,m2.mobile_number from imt_member
left join imt_member m2 on imt_member.mother_id = m2.id
inner join imt_family on imt_member.family_id = imt_family.family_id
where imt_member.dob > now()-interval ''5 years''
and imt_member.health_id = #abhaAddress#
and ((imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')) or (imt_member.state = ''com.argusoft.imtecho.member.state.temporary''))
limit #limit# offset #offSet#',true,'ACTIVE',NULL,true,'a3efb0ff-46cf-4b83-b751-70800b8a27f8'),
	 (97091,'2022-11-02 00:00:00',97091,'2022-11-02 00:00:00','lms_dashboard_retrieve_enrolled_count_by_course_id','locationId,courseId','with location_user as(
    select distinct(user_id)
    from location_hierchy_closer_det
        left join um_user_location on um_user_location.loc_id = location_hierchy_closer_det.child_id
    where parent_id = #locationId#
), users as (
	select distinct attendee_id as enrolled_user_id
	from tr_training_attendee_rel
	where training_id in (select distinct training_id from tr_topic_coverage_master where course_id = #courseId#)
	union
	select distinct additional_attendee_id as enrolled_user_id
	from tr_training_additional_attendee_rel
	where training_id in (select distinct training_id from tr_topic_coverage_master where course_id = #courseId#)
)select count(1) as "totalEnrolled" from users
     inner join location_user on users.enrolled_user_id = location_user.user_id',true,'ACTIVE',NULL,true,'2c8c0445-6fa7-4e0b-8171-3eb8346d82ea'),
	 (97072,'2022-11-07 00:00:00',97072,'2022-11-07 00:00:00','mob_work_register_detail','from_date,to_date,offset,limit,location_id','with loc as (
	select child_id as loc_id from location_hierchy_closer_det where parent_id = #location_id#
), dates as (
	select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_date
), service_type as (
	select ''FHW_LMP'' as type, ''LMP Follow Up'' as name
	union
	select ''FHW_ANC'', ''ANC''
	union
	select ''FHW_MOTHER_WPD'', ''WPD''
	union
	select ''FHW_PNC'', ''PNC''
	union
	select ''FHW_CS'', ''Child Service''
	union
	select ''NCD_HYPERTENSION'', ''Hypertension Screening''
	union
	select ''NCD_DIABETES'', ''Diabetes Screening''
	union
	select ''NCD_ORAL'', ''Oral Screening''
	union
	select ''NCD_BREAST'', ''Breast Screening''
	union
	select ''NCD_CERVICAL'', ''Cervical Screening''
	union
	select ''COWIN_REGISTRATION'', ''CoWIN Registration''
	union
	select ''COWIN_APPOINTMENT'', ''CoWIN Appointment''
	union
	select ''NCD_CBAC'', ''CBAC Entry''
), det as (
	select * from rch_member_services
	inner join loc on rch_member_services.location_id = loc.loc_id
	inner join dates on rch_member_services.service_date between dates.from_date and dates.to_date
	order by service_date desc
	limit #limit# offset #offset#
)
select
to_char(det.service_date, ''DD/MM/YYYY'') as "Service Date",
service_type.name as "Service Provided",
case when service_type.type in (''COWIN_REGISTRATION'', ''COWIN_APPOINTMENT'') then
concat(cmm.first_name, '' '', cmm.middle_name, '' '', cmm.last_name)
else concat(m.first_name, '' '', m.middle_name, '' '', m.last_name) end as "Member Name",
case when service_type.type in (''COWIN_REGISTRATION'', ''COWIN_APPOINTMENT'') then
''N/A'' else m.unique_health_id end as "Health Id",
case when service_type.type in (''COWIN_REGISTRATION'', ''COWIN_APPOINTMENT'') then
''N/A'' else m.family_id end as "Family Id",
det.service_type as "hiddenServiceType",
det.visit_id as "hiddenVisitId"
from det
left join imt_member m on m.id = det.member_id
left join cowin_member_master cmm on cmm.id = det.member_id
inner join service_type on det.service_type = service_type.type',true,'ACTIVE',NULL,true,'0b0c0b87-4e79-4791-ba46-6fef54f4ba86'),
	 (1,'2022-11-29 00:00:00',1,'2022-11-29 00:00:00','ncd_initialAssessment_treatment_history','memberId','
select cast(ncd_member_initial_assessment_detail.screening_date as date) as "diagnosedOn",
concat(um_user.first_name, '' '', um_user.middle_name, '' '', um_user.last_name) as "diagnosedBy",
case when ncd_member_referral.status = ''MOBILE_REFERRED'' then ''Referred from mobile''
    when ncd_member_referral.status = ''SUSPECTED'' then ''Suspected''
	when ncd_member_referral.status = ''CONFIRMED'' then ''Confirmed''
	when ncd_member_referral.status = ''TREATMENT_STARTED'' then ''Treatment started''
	when ncd_member_referral.status = ''REFERRED'' then ''Referred to other facility''
	when ncd_member_referral.status = ''NO_ABNORMALITY'' then ''No abnormality'' end as status,
string_agg(medicine_master.name,'', '') as "medicines"
from ncd_member_initial_assessment_detail
inner join ncd_member_referral on ncd_member_initial_assessment_detail.referral_id = ncd_member_referral.id
inner join um_user on ncd_member_initial_assessment_detail.created_by = um_user.id
left join ncd_member_disesase_medicine on ncd_member_initial_assessment_detail.id = ncd_member_disesase_medicine.reference_id
left join medicine_master on ncd_member_disesase_medicine.medicine_id = medicine_master.id
where ncd_member_initial_assessment_detail.member_id = #memberId#
group by ncd_member_initial_assessment_detail.screening_date,
um_user.first_name,um_user.middle_name,um_user.last_name,ncd_member_referral.status
order by ncd_member_initial_assessment_detail.screening_date desc
',true,'ACTIVE','To retrieve initialAssessment history of patient.',true,'c9b7b206-230d-494f-881a-468a392f56a8'),
	 (1,'2022-11-29 00:00:00',1,'2022-11-29 00:00:00','ncd_general_treatment_history','memberId','select cast(ncd_member_general_detail.screening_date as date) as "diagnosedOn",
concat(um_user.first_name, '' '', um_user.middle_name, '' '', um_user.last_name) as "diagnosedBy",
case when ncd_member_referral.status = ''MOBILE_REFERRED'' then ''Referred from mobile''
    when ncd_member_referral.status = ''SUSPECTED'' then ''Suspected''
	when ncd_member_referral.status = ''CONFIRMED'' then ''Confirmed''
	when ncd_member_referral.status = ''REFER_NO_VISIT'' then ''Referred No visit''
	when ncd_member_referral.status = ''TREATMENT_STARTED'' then ''Treatment started''
	when ncd_member_referral.status = ''REFERRED'' then ''Referred to other facility''
	when ncd_member_referral.status = ''NO_ABNORMALITY'' then ''No abnormality'' end as status,
string_agg(medicine_master.name,'', '') as "medicines"
from ncd_member_general_detail
inner join ncd_member_referral on ncd_member_general_detail.referral_id = ncd_member_referral.id
inner join um_user on ncd_member_general_detail.created_by = um_user.id
left join ncd_member_disesase_medicine on ncd_member_general_detail.id = ncd_member_disesase_medicine.reference_id
left join medicine_master on ncd_member_disesase_medicine.medicine_id = medicine_master.id
where ncd_member_general_detail.member_id = #memberId#
group by ncd_member_general_detail.screening_date,
um_user.first_name,um_user.middle_name,um_user.last_name,ncd_member_referral.status
order by ncd_member_general_detail.screening_date desc',true,'ACTIVE','To retrieve general detail history of patient.',true,'c9b7b206-230d-494f-881a-468a392f56a9'),
	 (97632,'2022-11-29 00:00:00',97632,'2022-11-29 00:00:00','get_min_marks_by_question_config','refType,refId,questionSetType,courseId','select minimum_marks from tr_question_set_configuration
where ref_id = #refId# and ref_type = #refType# and course_id = #courseId# and question_set_type = #questionSetType# and status = ''ACTIVE''',true,'ACTIVE',NULL,true,'199dafc1-b0fc-4ef2-b5de-3eb1f06efbb4'),
	 (97070,'2022-12-01 00:00:00',97070,'2022-12-01 00:00:00','opd_search_by_abha_number','offSet,limit,abhaNumber','select
   imt_member.unique_health_id as "uniqueHealthId",
   imt_member.id as "memberId",
   imt_family.family_id as "familyId",
   imt_family.location_id as "locationId",
   imt_member.mobile_number as "mobileNumber",
   imt_family.area_id as "areaId",
   get_location_hierarchy(imt_family.location_id) as "locationHierarchy",
   concat(imt_member.first_name, '' '', imt_member.middle_name, '' '', imt_member.last_name) as "name",
   imt_member.dob as "dob",
   cast(age(imt_member.dob) as text) as "age",
   concat(uu1.first_name, '' '', uu1.middle_name, '' '', uu1.last_name) as "ashaName",
   uu1.contact_number as "ashaContactNumber",
   uu1.techo_phone_number as "ashaTechoContactNumber",
   concat(uu2.first_name, '' '', uu2.middle_name, '' '', uu2.last_name) as "anmName",
   uu2.contact_number as "anmContactNumber",
   uu2.techo_phone_number as "anmTechoContactNumber"
   from imt_member
   inner join imt_family on imt_member.family_id = imt_family.family_id
   left join um_user_location uul1 on uul1.loc_id = imt_family.area_id and uul1.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul1.user_id and state = ''ACTIVE'') = 24
   left join um_user uu1 on uu1.id = uul1.user_id
   left join um_user_location uul2 on uul2.loc_id = imt_family.location_id and uul2.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul2.user_id and state = ''ACTIVE'') = 30
   left join um_user uu2 on uu2.id = uul2.user_id
   where imt_member.health_id_number in (#abhaNumber#)
   and imt_member.basic_state in (''NEW'', ''VERIFIED'', ''REVERIFICATION'', ''TEMPORARY'')
   limit #limit# offset #offSet#',true,'ACTIVE','OPD Search By Abha Number',true,'e0c2297c-76c2-4320-9f93-ef933b9bfc70'),
	 (97070,'2023-01-23 00:00:00',97070,'2023-01-23 00:00:00','lms_dashboard_retrieve_course_engagement','locationId,courseId','with training_ids as (
	select distinct training_id
	from tr_training_course_rel where course_id = #courseId#
), enrolled_users as (
	select distinct attendee_id as enrolled_user_id
	from tr_training_attendee_rel
	inner join training_ids on training_ids.training_id = tr_training_attendee_rel.training_id
	union
	select distinct additional_attendee_id as enrolled_user_id
	from tr_training_additional_attendee_rel
	inner join training_ids on training_ids.training_id = tr_training_additional_attendee_rel.training_id
), location_users as (
	select distinct user_id
    from location_hierchy_closer_det
        inner join um_user_location on um_user_location.loc_id = location_hierchy_closer_det.child_id
		inner join enrolled_users on enrolled_users.enrolled_user_id = um_user_location.user_id
    where parent_id = #locationId#
), enrolled_data as (
	select
		location_users.user_id, um_user.role_id as role_id
	from location_users
	inner join um_user on location_users.user_id = um_user.id
	and um_user.state = ''ACTIVE''
), roles as (
	select distinct role_id
	from enrolled_data
), enrolled as (
	select enrolled_data.role_id as role_id,
	count(1) as enrolled
	from enrolled_data
	group by enrolled_data.role_id
), course_status as (
	select enrolled_data.role_id as role_id,
	count(1) filter (where (is_course_completed is null or is_course_completed is false)) as in_progress,
	count(1) filter (where is_course_completed) as completed
	from enrolled_data
	inner join tr_user_meta_data on enrolled_data.user_id = tr_user_meta_data.user_id
	and tr_user_meta_data.course_id = #courseId#
	group by enrolled_data.role_id
), not_started as (
	select enrolled_data.role_id,
	count(1) filter (where tr_user_meta_data.user_id is null) as not_started
	from enrolled_data
	left join tr_user_meta_data on enrolled_data.user_id = tr_user_meta_data.user_id
	and tr_user_meta_data.course_id = #courseId#
	group by enrolled_data.role_id
)
select
	um_role_master.id as "roleId",
	um_role_master.name as "roleName",
	coalesce(enrolled.enrolled,0) as "enrolled",
	coalesce(not_started.not_started,0) as "notStarted",
	coalesce(course_status.in_progress,0) as "inProgress",
	coalesce(course_status.completed,0) as "completed"
from roles
left join enrolled on roles.role_id = enrolled.role_id
left join course_status on roles.role_id = course_status.role_id
left join not_started on roles.role_id = not_started.role_id
inner join um_role_master on roles.role_id = um_role_master.id
	and um_role_master.state = ''ACTIVE''',true,'ACTIVE',NULL,true,'45bc05a7-726c-41cf-a18c-c39f6cca6f76'),
	 (97070,'2022-12-01 00:00:00',97070,'2022-12-01 00:00:00','opd_search_by_abha_address','offSet,limit,abhaAddress','select
   imt_member.unique_health_id as "uniqueHealthId",
   imt_member.id as "memberId",
   imt_family.family_id as "familyId",
   imt_family.location_id as "locationId",
   imt_member.mobile_number as "mobileNumber",
   imt_family.area_id as "areaId",
   get_location_hierarchy(imt_family.location_id) as "locationHierarchy",
   concat(imt_member.first_name, '' '', imt_member.middle_name, '' '', imt_member.last_name) as "name",
   imt_member.dob as "dob",
   cast(age(imt_member.dob) as text) as "age",
   concat(uu1.first_name, '' '', uu1.middle_name, '' '', uu1.last_name) as "ashaName",
   uu1.contact_number as "ashaContactNumber",
   uu1.techo_phone_number as "ashaTechoContactNumber",
   concat(uu2.first_name, '' '', uu2.middle_name, '' '', uu2.last_name) as "anmName",
   uu2.contact_number as "anmContactNumber",
   uu2.techo_phone_number as "anmTechoContactNumber"
   from imt_member
   inner join imt_family on imt_member.family_id = imt_family.family_id
   left join um_user_location uul1 on uul1.loc_id = imt_family.area_id and uul1.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul1.user_id and state = ''ACTIVE'') = 24
   left join um_user uu1 on uu1.id = uul1.user_id
   left join um_user_location uul2 on uul2.loc_id = imt_family.location_id and uul2.state = ''ACTIVE'' and (select uu.role_id from um_user uu where uu.id = uul2.user_id and state = ''ACTIVE'') = 30
   left join um_user uu2 on uu2.id = uul2.user_id
   where imt_member.health_id in (#abhaAddress#)
   and imt_member.basic_state in (''NEW'', ''VERIFIED'', ''REVERIFICATION'', ''TEMPORARY'')
   limit #limit# offset #offSet#',true,'ACTIVE','OPD Search By Abha Address',true,'453f6d81-97ba-4b9e-9ed9-0ecc52ac9313'),
	 (97070,'2022-12-08 00:00:00',97070,'2022-12-08 00:00:00','retrieve_all_sub_centers','userId','select get_location_hierarchy(id) as name,id from location_master where type=''SC'' and is_active is true and id in (select child_id
    from location_hierchy_closer_det
    where parent_id in (select uul.loc_id
	from um_user_location uul where uul.user_id = #userId# and state=''ACTIVE'')) order by name',true,'ACTIVE',NULL,true,'2eb64314-c413-44e9-83da-0a34463ea64f'),
	 (97070,'2022-12-21 00:00:00',97070,'2022-12-21 00:00:00','ncd_current_count',NULL,'select
count(distinct member_id) filter (
            where disease_code = ''HT''
        ) as "Hypertension",
count(distinct member_id) filter (
            where disease_code = ''D''
        ) as "Diabetes",
count(distinct member_id) filter (
            where disease_code = ''MH''
        ) as "Mental_Health",
count(distinct member_id) filter (
            where disease_code = ''O''
        ) as "Oral_Cancer",
count(distinct member_id) filter (
            where disease_code = ''B''
        ) as "Breast_Cancer",
count(distinct member_id) filter (
            where disease_code = ''C''
        ) as "Cervical_Cancer",
count(distinct member_id) as "Total_Count"
from ncd_master where status=''SCREENED''',true,'ACTIVE',NULL,true,'6ac14ae8-4ccf-4dc4-8106-474f1162557f'),
	 (97070,'2022-12-26 00:00:00',97070,'2022-12-26 00:00:00','ncd_patient_visit_history_by_member_id','memberId','select member_id,visit_date,disease_code "diseaseCode",status,reading,case when visit_by is not null then concat(visit_by,'': '',um_user.first_name,'' '',um_user.last_name) else concat(um_user.first_name,'' '',um_user.last_name) end "DiagnosedBy" from ncd_visit_history
inner join um_user on ncd_visit_history.created_by = um_user.id
where member_id= #memberId#',true,'ACTIVE',NULL,true,'c6b8bc7e-ba12-49bf-aa4c-e121e59f75d0'),
	 (97070,'2023-01-23 00:00:00',97070,'2023-01-23 00:00:00','lms_dashboard_retrieve_enrolled_by_course_id','offSet,locationId,limit,courseId','with training_ids as (
	select distinct training_id
	from tr_training_course_rel where course_id = #courseId#
), enrolled_users as (
	select distinct attendee_id as enrolled_user_id
	from tr_training_attendee_rel
	inner join training_ids on training_ids.training_id = tr_training_attendee_rel.training_id
	union
	select distinct additional_attendee_id as enrolled_user_id
	from tr_training_additional_attendee_rel
	inner join training_ids on training_ids.training_id = tr_training_additional_attendee_rel.training_id
), location_users as (
	select distinct user_id
    from location_hierchy_closer_det
        inner join um_user_location on um_user_location.loc_id = location_hierchy_closer_det.child_id
		inner join enrolled_users on enrolled_users.enrolled_user_id = um_user_location.user_id
    where parent_id = #locationId#
),course_status as (
	select distinct location_users.user_id as enrolled_user_id,
	tr_user_meta_data.user_id as user_id,
	tr_user_meta_data.is_course_completed
	from location_users
	left join tr_user_meta_data on location_users.user_id = tr_user_meta_data.user_id
	and tr_user_meta_data.course_id = #courseId#
),course_time as (
	select distinct user_id,
	min(started_on) as course_started_on,
	max(ended_on) as course_ended_on
	from tr_lesson_analytics
	where course_id = #courseId#
	group by user_id
)
select um_user.id as "userId",
concat_ws('' '',um_user.first_name,um_user.middle_name,um_user.last_name) as "userName",
um_role_master.name as "roleName",
case when course_status.user_id is null then ''NOT_YET_STARTED''
	 when course_status.user_id is not null and (course_status.is_course_completed is null or course_status.is_course_completed is false) then ''IN_PROGRESS''
	 when course_status.user_id is not null and course_status.is_course_completed is true then ''COMPLETED''
	 end as "courseStatus",
to_char(course_time.course_started_on,''DD/MM/YYYY HH24:MI:SS'') as "courseStartedOn",
to_char(course_time.course_ended_on,''DD/MM/YYYY HH24:MI:SS'') as "courseEndedOn"
from location_users
inner join um_user on location_users.user_id = um_user.id
and um_user.state = ''ACTIVE''
inner join um_role_master on um_user.role_id = um_role_master.id
and um_role_master.state = ''ACTIVE''
left join course_status on location_users.user_id = course_status.enrolled_user_id
left join course_time on location_users.user_id = course_time.user_id
order by um_role_master.name
limit #limit# offset #offSet#',true,'ACTIVE',NULL,true,'33b040e5-cd17-4765-acf5-5179a8302654'),
	 (97070,'2023-01-23 00:00:00',97070,'2023-01-23 00:00:00','mark_member_as_death','member_id,family_id,reference_id,%,member_death_mark_state,death_reason,other_death_reason,location_id,death_date,health_infra_id,action_by,service_type,place_of_death','update techo_notification_master set state = ''MARK_AS_DEATH'',
        modified_on = now(), modified_by = #action_by#
        where member_id = #member_id# and state in (''PENDING'',''RESCHEDULE'');
    update event_mobile_notification_pending set is_completed = true, state = ''MARK_AS_DEATH'',
        modified_by = #action_by#, modified_on = now() from event_mobile_configuration
        where event_mobile_notification_pending.notification_configuration_type_id = event_mobile_configuration.id
        and member_id = #member_id# and state = ''PENDING'';

with death_det as(
INSERT INTO public.rch_member_death_deatil(
	member_id, family_id, location_id, dod, death_reason, other_death_reason, place_of_death, created_on, created_by, modified_on,modified_by,service_type, reference_id,health_infrastructure_id
)
VALUES(
	#member_id#, #family_id#, #location_id#,
case when ''#death_date#'' != ''null'' then to_timestamp(''#death_date#'', ''YYYY/MM/DD HH24:MI:SS'') else null end,
    case when ''#death_reason#'' != ''null'' then ''#death_reason#'' else null end,
	case when ''#other_death_reason#'' != ''null'' then ''#other_death_reason#'' else null end,
	''#place_of_death#'', now(), #action_by#,now(), #action_by#, ''#service_type#'', #reference_id#, #health_infra_id#
)
returning id,member_id,family_id,dod,location_id
),member_det as(
select imt_member.id,death_det.location_id as location_id
,imt_family.contact_person_id
,imt_member.state
,case when is_pregnant = true then true else false end as is_pregnant
,case when last_delivery_date + interval ''42 days'' > death_det.dod then true else false end as is_del_done_in_42_days
,case when dob + interval ''5 years'' > death_det.dod then true else false end as child_less_than_5_year
from imt_member,death_det,imt_family where imt_member.id = death_det.member_id
and imt_member.family_id = imt_family.family_id
),user_det as(
select um_user.id as user_id from um_user,um_user_location,member_det where um_user.id = um_user_location.user_id
and um_user_location.state = ''ACTIVE'' and um_user.state = ''ACTIVE''
and um_user_location.loc_id in (select parent_id from location_hierchy_closer_det where child_id = member_det.location_id)
and um_user.role_id in (select id from um_role_master where code in (''mo_uphc'',''mo_phc''))
limit 1
),insert_anm_death_ttc as(
INSERT INTO public.techo_web_notification_master(
            notification_type_id, location_id,
            user_id,member_id, escalation_level_id, schedule_date,
            state, created_by, created_on,
            modified_by, modified_on, ref_code, notification_type_escalation_id
            )
select notification_type_id,member_det.location_id,(select user_id from user_det)
			,member_det.id,notification_type.id,now(),
			''PENDING'',#action_by#,now(),#action_by#,now(),death_det.id,escalation_id
			from death_det,member_det,
			(select id,notification_type_id,notification_type_id||''_''||id as escalation_id from escalation_level_master where name = ''Default''
and notification_type_id = (select id from notification_type_master where code = ''maternal_death_verification_ttc'')) as notification_type
where (member_det.is_pregnant or is_del_done_in_42_days)
returning id
),insert_anm_death_mo as(
INSERT INTO public.techo_web_notification_master(
            notification_type_id, location_id,
            member_id, escalation_level_id, schedule_date,
            state, created_by, created_on,
            modified_by, modified_on, ref_code,related_notification_id, notification_type_escalation_id
            )
select notification_type_id,member_det.location_id,
			member_det.id,notification_type.id,now(),
			''PENDING'',#action_by#,now(),#action_by#,now(),death_det.id,insert_anm_death_ttc.id,escalation_id
			from death_det,member_det,
			(select id,notification_type_id,notification_type_id||''_''||id as escalation_id from escalation_level_master where name = ''Default''
and notification_type_id = (select id from notification_type_master where code = ''maternal_death_verification_mo'')) as notification_type
,insert_anm_death_ttc
where (member_det.is_pregnant or is_del_done_in_42_days)
returning id
),insert_child_death_ttc as(
INSERT INTO public.techo_web_notification_master(
            notification_type_id, location_id,
            user_id,member_id, escalation_level_id, schedule_date,
            state, created_by, created_on,
            modified_by, modified_on, ref_code, notification_type_escalation_id
            )
select notification_type_id,member_det.location_id,(select user_id from user_det)
			,member_det.id,notification_type.id,now(),
			''PENDING'',#action_by#,now(),#action_by#,now(),death_det.id,escalation_id
			from death_det,member_det,
			(select id,notification_type_id,notification_type_id||''_''||id as escalation_id from escalation_level_master where name = ''Default''
and notification_type_id = (select id from notification_type_master where code = ''child_death_veriffication_ttc'')) as notification_type
where member_det.child_less_than_5_year
returning id
), mo_death_verification_cfhc as (
INSERT INTO public.techo_web_notification_master(
            notification_type_id, location_id,
            member_id, escalation_level_id, schedule_date,
            state, created_by, created_on,
            modified_by, modified_on, ref_code, notification_type_escalation_id
            )
select notification_type_id,member_det.location_id,
            member_det.id,notification_type.id,now(),
            ''PENDING'',#action_by#,now(),#action_by#,now(),death_det.id,escalation_id
            from death_det,member_det,
            (select id,notification_type_id,notification_type_id||''_''||id as escalation_id from escalation_level_master where name = ''Default''
and notification_type_id = (select id from notification_type_master where code = ''cfhc_death_verification_mo'')) as notification_type
where member_det.state in (''CFHC_MD'')
returning id
),insert_child_death_mo as(
INSERT INTO public.techo_web_notification_master(
            notification_type_id, location_id,
            member_id, escalation_level_id, schedule_date,
            state, created_by, created_on,
            modified_by, modified_on, ref_code,related_notification_id, notification_type_escalation_id
            )
select notification_type_id,member_det.location_id
			,member_det.id,notification_type.id,now(),
			''PENDING'',#action_by#,now(),#action_by#,now(),death_det.id,insert_child_death_ttc.id,escalation_id
			from death_det,member_det,
			(select id,notification_type_id,notification_type_id||''_''||id as escalation_id from escalation_level_master where name = ''Default''
and notification_type_id = (select id from notification_type_master where code = ''child_death_veriffication_mo'')) as notification_type
,insert_child_death_ttc
where member_det.child_less_than_5_year
returning id
)
update imt_member set death_detail_id = death_det.id,
	state = case when ''#member_death_mark_state#'' is not null
		and ''#member_death_mark_state#'' not like ''#%#''
		and ''#member_death_mark_state#'' != ''null''
		then ''#member_death_mark_state#''
		else ''com.argusoft.imtecho.member.state.dead'' end,
    modified_on = now(), modified_by = #action_by# from death_det where imt_member.id = #member_id#;',false,'ACTIVE','It will mark the member as DEAD',true,'05a95b2b-c62d-4e4d-9ecc-94539136470e'),
	 (97070,'2023-01-30 00:00:00',97070,'2023-01-30 00:00:00','fhs_report_family_search','is_less_then_five_req,offset,is_pregnant_req,limit,location_id','with family_ids as (
	select imt_family.family_id
	from imt_family
	inner join location_hierchy_closer_det on case when imt_family.area_id is not null then imt_family.area_id else imt_family.location_id end = location_hierchy_closer_det.child_id
	inner join imt_member on imt_family.family_id = imt_member.family_id
		and imt_member.basic_state in (''NEW'',''VERIFIED'')
	where location_hierchy_closer_det.parent_id = #location_id#
	and imt_family.basic_state in (''NEW'',''VERIFIED'')
	group by imt_family.family_id
	having case when #is_pregnant_req# = true and #is_less_then_five_req# = true then count(1) filter (where imt_member.is_pregnant) > 0 and count(1) filter (where imt_member.dob > now() - interval ''5 years'') > 0
				when #is_pregnant_req# = true then count(1) filter (where imt_member.is_pregnant) > 0
				when #is_less_then_five_req# = true then count(1) filter (where imt_member.dob > now() - interval ''5 years'') > 0
			else true end
	limit #limit# offset #offset#
),family_head_details as (
	select family_ids.family_id,
	imt_member.id,
	concat(imt_member.first_name,'' '',imt_member.last_name) as member_name
	from family_ids
	inner join imt_member on family_ids.family_id = imt_member.family_id
	and imt_member.family_head
),details as (
	select family_ids.family_id,
	string_agg(concat(imt_member.first_name,'' '',imt_member.last_name),'','') as member_name
	from family_ids
	inner join imt_member on family_ids.family_id = imt_member.family_id
    and imt_member.basic_state in (''NEW'',''VERIFIED'')
	group by family_ids.family_id
)
select details.family_id,
details.member_name,
family_head_details.member_name as contact_person
from details
left join family_head_details on details.family_id = family_head_details.family_id',true,'ACTIVE','retrieve family report from location',true,'006f60bc-026b-48cf-84b1-0afafe3d2c5d'),
	 (97070,'2023-01-30 00:00:00',97070,'2023-01-30 00:00:00','ncd_hypertension_treatment_history','memberId','select
    cast(
        ncd_member_hypertension_detail.screening_date as date
    ) as "diagnosedOn",
    concat(
        um_user.first_name,
        '' '',
        um_user.middle_name,
        '' '',
        um_user.last_name
    ) as "diagnosedBy",
    ncd_member_hypertension_detail.done_by as "doneBy",
    CONCAT(
        ncd_member_hypertension_detail.systolic_bp,
        ''/'',
        ncd_member_hypertension_detail.diastolic_bp
    ) as readings,
        case
        when ncd_member_hypertension_detail.status is null then case
            when ncd_member_hypertension_detail.is_suspected is true then ''SUSPECTED''
            else ''NORMAL''
        end
        else ncd_member_hypertension_detail.status
    end as "currentStatus",
	ncd_member_hypertension_detail.diagnosed_earlier as "diagnosedEarlier"
from
    ncd_member_hypertension_detail
    inner join ncd_master on ncd_member_hypertension_detail.master_id = ncd_master.id
    inner join um_user on ncd_member_hypertension_detail.created_by = um_user.id
where
    ncd_member_hypertension_detail.member_id = #memberId#
group by
    ncd_member_hypertension_detail.screening_date,
  	"diagnosedBy",
  	"doneBy",
    "currentStatus",
    readings,
	"diagnosedEarlier"
order by
    ncd_member_hypertension_detail.screening_date desc',true,'ACTIVE','To retrieve hypertension disease treatment history of patient.',true,'6f2b3599-4c25-4eec-9df9-ddd899e7eb87'),
	 (97070,'2023-02-01 00:00:00',97070,'2023-02-01 00:00:00','update_tr_question_set_configuration','quizAtSecond,refType,refId,questionSetType,loggedInUserId,id,minimumMarks,courseId,questionSetName,status','UPDATE tr_question_set_configuration
SET ref_id=#refId#,
ref_type=#refType#,
question_set_name=#questionSetName#,
question_set_type=#questionSetType#,
status=#status#,
minimum_marks=#minimumMarks#,
course_id=#courseId#,
quiz_at_second=#quizAtSecond#,
modified_by=#loggedInUserId#,
modified_on=now()
WHERE id=#id#;

UPDATE tr_question_set_configuration set minimum_marks = #minimumMarks#, modified_by=#loggedInUserId#, modified_on = now()
WHERE ref_id = #refId# and ref_type = #refType# and course_id = #courseId# and question_set_type = #questionSetType#;',false,'ACTIVE',NULL,true,'3c7e1c6d-1382-4d97-bc02-c7a973dc1fd3'),
	 (97070,'2023-02-17 00:00:00',97070,'2023-02-17 00:00:00','get_course_media_size_by_id','courseId','select sum(tm.size) as "size"
from tr_topic_media_master tm
inner join tr_course_topic_rel rel on rel.topic_id = tm.topic_id
inner join tr_course_master course on rel.course_id = course.course_id
where course.course_id = #courseId#',true,'ACTIVE','Returns total media size of course in bytes',true,'0c24b46c-2f64-4dcd-8b35-97522e2fdac5'),
	 (97070,'2023-02-17 00:00:00',97070,'2023-02-17 00:00:00','verify_course_name','courseName,courseId','select course_id from tr_course_master
where course_name = #courseName#
and case
		when #courseId# is not null
		then course_id != #courseId#
		else true
	end',true,'ACTIVE','To validate duplicate course name',true,'f3fe124f-638f-435a-96ad-8e19ee836b16'),
	 (97070,'2023-02-17 00:00:00',97070,'2023-02-17 00:00:00','get_training_states','courseType','select distinct training_state
from tr_training_master
inner join tr_training_course_rel on
    tr_training_master.training_id = tr_training_course_rel.training_id
inner join tr_course_master on
    tr_training_course_rel.course_id = tr_course_master.course_id
where case
	when #courseType# is not null then tr_course_master.course_type = #courseType#
	else true
end',true,'ACTIVE','Distinct training states',true,'020a2414-a027-404a-88ad-6a450627b3fb'),
	 (97070,'2023-02-17 00:00:00',97070,'2023-02-17 00:00:00','tr_scheduled_trainings','courseType,offSet,locationId,dateTo,limit,isShowPast,trainingState,moduleId,dateFrom,userId,courseId','select
	r1."location" as "location",
	r1."trainingId",
	r1."trainerId",
	r1."courseName",
	r1."trainer",
	r1."effectiveDate",
	r1."expirationDate",
	r1."module",
	r1."total",
	r1."trainingState",
	r1."completed",
	r1."pending",
	r1."courseType"
from
	(
        select
            get_location_hierarchy(res.org_unit_id) as "location",
            res.training_id "trainingId",
            res.primary_trainer_id "trainerId",
            res.course_name as "courseName",
            concat(us.first_name, '' '', us.last_name) as "trainer",
            fvm.value as "module",
            total.total as "total",
            res.effective_date as "effectiveDate",
            res.expiration_date as "expirationDate",
            res.training_state as "trainingState",
            cert."completed",
            tcm.state as "pending",
            res.course_type as "courseType"
        from (
                select
                    tm.training_id, ptr.primary_trainer_id, cm.course_id, cm.course_name, cm.module_id, torg.org_unit_id, tm.effective_date, tm.expiration_date, tm.training_state, cm.course_type
                from
                    tr_training_master tm
                inner join tr_training_course_rel tcr on
                    tm.training_id = tcr.training_id
                inner join tr_training_org_unit_rel torg on
                    tm.training_id = torg.training_id
                left join tr_training_primary_trainer_rel ptr on
                    ptr.training_id = tm.training_id
                inner join tr_course_master cm on
                    tcr.course_id = cm.course_id
                where
                    torg.org_unit_id in (
                    select
                        child_id
                    from
                        location_hierchy_closer_det
                    where
                        ((#locationId# is null
                        and parent_id in (
                        select
                            loc_id
                        from
                            um_user_location
                        where
                            user_id = #userId#
                            and state = ''ACTIVE''))
                        or #locationId# is not null
                        and parent_id = #locationId#))
                    -- and
                    -- (case
                    --     when #moduleId# is not null then cm.module_id = #moduleId#
                    --     else true
                    -- end)
                    and
                    (case
                        when #courseId# is not null then tcr.course_id = #courseId#
                        else true
                    end)
                    -- and
                    -- (case
                    --     when #isShowPast# = true then true
                    --     when cm.course_type = ''ONLINE'' then true
                    --     else cast(tm.expiration_date as date) >= current_date
                    -- end)
                    and
                    (case
                        when #courseType# = ''ONLINE'' then cm.course_type = ''ONLINE''
                        when #courseType# = ''OFFLINE'' then cm.course_type = ''OFFLINE''
                        else true
                    end)
                    and tm.effective_date between cast(#dateFrom# as timestamp) and cast(#dateTo# as timestamp)
                    and
                    (case
                        when #trainingState# is not null then
                            case
                                when #trainingState# = ''NOT_DRAFT'' then tm.training_state != ''DRAFT''
                                when #trainingState# = ''DRAFT_SAVED'' then tm.training_state in (''DRAFT'', ''SAVED'')
                                else tm.training_state = #trainingState#
                            end
                        else true
                    end)
        ) res
        inner join (
            select
                count(*) as "total", training_id
            from
                (
                    select attendee_id  as attendee_id,training_id
                    from tr_training_attendee_rel
                    inner join um_user on tr_training_attendee_rel.attendee_id = um_user.id
                    where um_user.state =''ACTIVE''
                    union
                    select additional_attendee_id as attendee_id ,training_id
                    from tr_training_additional_attendee_rel
                    inner join um_user on tr_training_additional_attendee_rel.additional_attendee_id = um_user.id
                    where um_user.state =''ACTIVE''
                ) r
            group by r.training_id
        ) total on res.training_id = total.training_id
        left join (
            with tr_topic_coverage_master_temp as (
                select
                    ttm."day",
                    ttcm.*
                from
                    tr_topic_master ttm
                inner join tr_topic_coverage_master ttcm on
                    ttm.topic_id = ttcm.topic_id
            ),
            days_details as(
                select
                    max(ttcmp.day),
                    ttcmp.training_id
                from
                    tr_topic_coverage_master_temp ttcmp
                group by
                    ttcmp.training_id
            ),
            training_details as (
                select
                    max(ttcmp.topic_id) as max_topic,
                    ttcmp.training_id
                from
                    tr_topic_coverage_master_temp ttcmp
                inner join days_details on
                    ttcmp."day" = days_details.max
                    and ttcmp.training_id = days_details.training_id
                group by
                    ttcmp.training_id
            )
            select
                td.max_topic, ttcm.topic_id, ttcm.state, ttcm.expiration_date, ttcm.training_id
            from
                tr_topic_coverage_master ttcm, training_details td
            where
                ttcm.training_id = td.training_id
                and ttcm.topic_id = td.max_topic
        ) tcm on res.training_id = tcm.training_id
        left join (
            select
                count(*) as "completed", training_id
            from
                tr_certificate_master
            where
                certificate_type = ''COURSECOMPLETION''
            group by
                training_id
        ) cert on res.training_id = cert.training_id
        left join um_user us on us.id = res.primary_trainer_id
        left join listvalue_field_value_detail fvm on fvm.id = res.module_id
    ) r1
order by r1."effectiveDate" desc
limit #limit# offset #offSet#',true,'ACTIVE',NULL,true,'40a243ce-5253-4a6d-ae6e-45c0a93f1d74'),
	 (97070,'2023-02-17 00:00:00',97070,'2023-02-17 00:00:00','get_course_by_type','courseType,locationId,userId','select distinct cm.course_id, cm.course_name
from
    tr_training_course_rel tcr
inner join tr_training_org_unit_rel torg on
    tcr.training_id = torg.training_id
inner join tr_course_master cm on
    tcr.course_id = cm.course_id
where torg.org_unit_id in (
	    select
	        child_id
	    from
	        location_hierchy_closer_det
	    where
	        ((#locationId# is null
	        and parent_id in (
	        select
	            loc_id
	        from
	            um_user_location
	        where
	            user_id = #userId#
	            and state = ''ACTIVE''))
	    or #locationId# is not null
	    and parent_id = #locationId#)
	)
	and (case
		when #courseType# = ''ONLINE'' then cm.course_type = ''ONLINE''
		when #courseType# = ''OFFLINE'' then cm.course_type = ''OFFLINE''
		else true
	end)
	and cm.course_state = ''ACTIVE'';',true,'ACTIVE','Get active courses by course_type',true,'e98418aa-0a59-4a11-8de3-07674de0fa55'),
	 (60512,'2023-03-23 00:00:00',60512,'2023-03-23 00:00:00','health_infrastructure_retrieve_by_id','id','with hd as (
    select
    health_infrastructure_details.id as id,
    health_infrastructure_details.type as type,
    health_infrastructure_details.name as name,
    location_id as locationid,
    health_infrastructure_details.address as address,
    health_infrastructure_details.funded_by as "fundedBy",
    no_of_beds as "noOfBeds",
    no_of_ppe as "noOfPpe",
    (case when postal_code=''null'' then '''' else postal_code end)  as postalcode,
    (case when landline_number=''null'' then '''' else landline_number end) as landlinenumber,
    (case when mobile_number=''null'' then '''' else mobile_number end) as mobilenumber,
    (case when email=''null'' then '''' else email end) as email,
    case when contact_person_name=''null'' then '''' else contact_person_name end as "contactPersonName",
    case when contact_number=''null'' then '''' else contact_number end as "contactNumber",
    (case when name_in_english=''null'' then '''' else name_in_english end) as nameinenglish,
    (case when latitude=''null'' then '''' else latitude end) as latitude,
    (case when longitude=''null'' then '''' else longitude end) as longitude,
    emamta_id as emamtaid,
    (case when nin=''null'' then '''' else nin end) as nin,
    location_master.type as locationtype,
    health_infrastructure_details.created_by,
    health_infrastructure_details.created_on,
    listvalue_field_value_detail.value as "typeOfHospitalName",
    abhay_parimiti_id as "abhayParimitiId"
    from  health_infrastructure_details, location_master,listvalue_field_value_detail
    where health_infrastructure_details.location_id = location_master.id
    and health_infrastructure_details.type = listvalue_field_value_detail.id
    and health_infrastructure_details.id = #id#
)
select
*
from hd h, (
    select
    child_id,
    string_agg(location_master.name,'' > '' order by depth desc) as locationname
    from location_hierchy_closer_det, location_master, hd
    where child_id = hd.locationid
    and location_master.id = location_hierchy_closer_det.parent_id
    group by child_id
) as t1',true,'ACTIVE','Retrieve Health Infrastructure by Id',true,'ca2b8c66-29c6-4025-80b4-24107991f260'),
	 (97070,'2023-05-15 00:00:00',97070,'2023-05-15 00:00:00','lms_dashboard_learning_app_usage_active_users','locationId,roleId,courseId','select count(distinct tcwca.user_id) as total,count(distinct tcwca.user_id) filter (where course_progress = 100) as "100%completed",
count(distinct tcwca.user_id) filter (where course_progress < 100 and course_progress >=75 ) as "75%completed",
count(distinct tcwca.user_id) filter (where course_progress < 75 and course_progress >=50 ) as "50%completed",
count(distinct tcwca.user_id) filter (where course_progress < 50 and course_progress >=25 ) as "25%complete",
count(distinct tcwca.user_id) filter (where course_progress < 25) as "lessthan25%completed" from tr_course_wise_count_analytics tcwca
inner join um_user_location uul on tcwca.user_id = uul.user_id and uul.state = ''ACTIVE''
inner join location_hierchy_closer_det lhcd on uul.loc_id = lhcd.child_id
inner join um_user uu on uu.id = uul.user_id and uu.state = ''ACTIVE''
where course_id = #courseId# and lhcd.parent_id = #locationId#
and case when #roleId# is not null then uu.role_id = cast(#roleId# as integer) else true end',true,'ACTIVE',NULL,true,'125e16e7-d675-498c-9118-d9769b8ee8df'),
	 (97070,'2023-02-17 00:00:00',97070,'2023-02-17 00:00:00','ncd_mentalHealth_treatment_history','memberId','select
    cast(
        ncd_member_mental_health_detail.screening_date as date
    ) as "diagnosedOn",
    concat(
        um_user.first_name,
        '' '',
        um_user.middle_name,
        '' '',
        um_user.last_name
    ) as "diagnosedBy",
    ncd_member_mental_health_detail.done_by as "doneBy",
    case when ncd_member_mental_health_detail.talk is not null then CONCAT(
        '''',
        ncd_member_mental_health_detail.talk,
        ''/'',
        ncd_member_mental_health_detail.own_daily_work,
        ''/'',
        ncd_member_mental_health_detail.social_work,
        ''/'',
        ncd_member_mental_health_detail.understanding
    ) else ''N.A'' end as readings,
    case
        when ncd_member_mental_health_detail.status is null then case
            when ncd_member_mental_health_detail.is_suffering is true then ''SUSPECTED''
            else ''NORMAL''
        end
        else replace(ncd_member_mental_health_detail.status, ''_'', '' '')
    end as "currentStatus",
	ncd_member_mental_health_detail.suffering_earlier as "diagnosedEarlier"
from
    ncd_member_mental_health_detail
    inner join ncd_master on ncd_member_mental_health_detail.master_id = ncd_master.id
    inner join um_user on ncd_member_mental_health_detail.created_by = um_user.id
where
    ncd_member_mental_health_detail.member_id = #memberId#
group by
    ncd_member_mental_health_detail.screening_date,
    "diagnosedBy",
    "doneBy",
    "currentStatus",
    readings,
	"diagnosedEarlier"
order by
    ncd_member_mental_health_detail.screening_date desc',true,'ACTIVE','To retrieve mental health disease treatment history of patient.',true,'c9b7b206-230d-494f-881a-468a392f56a0'),
	 (60512,'2023-03-15 00:00:00',60512,'2023-03-15 00:00:00','insert_health_infra_type','code,allowedFacilities,userId,value,location_type','with insert_listvalue as (
INSERT INTO listvalue_field_value_detail
(is_active, is_archive, last_modified_by, last_modified_on, value, field_key, file_size, multimedia_type, code)
VALUES(true, false, #userId#, now(), #value#, ''infra_type'', 0, NULL, #code#)
returning id),
json_config as (
	select json_array_elements(cast(#location_type# as json)) as data
),insert_location as (
	INSERT INTO health_infrastructure_type_location
	(health_infra_type_id, location_type, location_level)
	select (select id from insert_listvalue), data ->> ''type'' as location_type,
	cast(data ->> ''level'' as integer) as location_level from json_config
	returning id
)insert into health_infrastructure_type_allowed_facilities
(health_infra_type_id,allowed_facilities)
values((select id from insert_listvalue),#allowedFacilities#)',false,'ACTIVE',NULL,true,'2e24c30e-d846-4fd2-af52-6513c89217cc'),
	 (60512,'2023-03-15 00:00:00',60512,'2023-03-15 00:00:00','update_health_infra_mapping','id,allowedFacilities,userId,value,location_type','with insert_listvalue as (
	 UPDATE listvalue_field_value_detail
	SET last_modified_by= #userId#,
	last_modified_on= now(),
	value= #value#,
	field_key=''infra_type''
	WHERE id=#id#
	returning id
),json_config as (
	select json_array_elements(cast(#location_type# as json)) as data
), remove_mapping as (
	delete from health_infrastructure_type_location
	where health_infra_type_id = #id#
	returning id
),insert_location as (
	INSERT INTO health_infrastructure_type_location
	(health_infra_type_id, location_type, location_level)
	select (select id from insert_listvalue), data ->> ''type'' as location_type,
	cast(data ->> ''level'' as integer) as location_level from json_config
	returning id
),remove_allowed_facilities as (
	delete from health_infrastructure_type_allowed_facilities
	where health_infra_type_id = #id#
	returning id
)insert into health_infrastructure_type_allowed_facilities
(health_infra_type_id,allowed_facilities)
values(#id#,#allowedFacilities#)',false,'ACTIVE',NULL,true,'daca9891-8bb2-4114-a5cd-0a18a5ab0538'),
	 (60512,'2023-03-15 00:00:00',60512,'2023-03-15 00:00:00','retrieve_health_infrastructure_type_allowed_facilities','healthInfraTypeId','select *
from health_infrastructure_type_allowed_facilities
where health_infra_type_id = #healthInfraTypeId#',true,'ACTIVE',NULL,true,'b7e4cc05-64ec-4baa-8748-2bcf874b57b5'),
	 (60512,'2023-03-15 00:00:00',60512,'2023-03-15 00:00:00','retrieve_health_infrastructure_facilities_by_id','healthInfraId','select is_nrc as isnrc,
for_ncd as forncd,
is_hwc as ishwc,
is_fru as isfru,
is_cmtc as iscmtc,
is_sncu as issncu,
is_blood_bank as isbloodbank,
is_gynaec as isgynaec,
is_pediatrician as ispediatrician,
is_cpconfirmationcenter as iscpconfirmationcenter,
is_chiranjeevi_scheme as "ischiranjeevischeme",
is_balsakha1 as "isBalsakha1",
is_balsakha3 as "isBalsakha3",
is_usg_facility as "isUsgFacility",
is_referral_facility as "isReferralFacility",
is_ma_yojna as "isMaYojna",
is_pmjy as "ispmjy",
is_npcb as "isNpcb",
is_Idsp as "isIdsp",
is_no_reporting_unit as "isNoReportingUnit",
is_covid_hospital as "isCovidHospital",
is_covid_lab as "isCovidLab",
has_ventilators as "hasVentilators",
has_defibrillators as "hasDefibrillators",
has_oxygen_cylinders as "hasOxygenCylinders"
from health_infrastructure_details
where id = #healthInfraId#',true,'ACTIVE',NULL,true,'2a5fda8a-e7f7-4113-9134-787a6c0b3cbc'),
	 (60512,'2023-03-23 00:00:00',60512,'2023-03-23 00:00:00','health_infrastructure_create','issncu,isfru,ispmjy,mobilenumber,isCovidLab,hasOxygenCylinders,emamtaid,latitude,isnrc,isBalsakha3,isgynaec,ispediatrician,noOfBeds,type,fundedBy,isNpcb,isCovidHospital,isbalsaka,isMaYojna,nin,postalcode,hasDefibrillators,contactNumber,hasVentilators,email,longitude,isNoReportingUnit,address,isbloodbank,isIdsp,noOfPpe,nameinenglish,iscpconfirmationcenter,abhayParimitiId,iscmtc,contactPersonName,createdBy,locationid,landlinenumber,ishwc,isBalsakha1,isReferralFacility,name,forncd,isUsgFacility,ischiranjeevischeme','with insert_health_infrastructure as (
        INSERT
        INTO
        health_infrastructure_details(
            type, name, location_id, is_nrc, is_cmtc, is_fru, is_sncu, for_ncd, is_hwc, is_idsp,
            is_chiranjeevi_scheme, is_balsaka, is_pmjy, address,funded_by, latitude,
            longitude, nin, emamta_id, is_blood_bank, is_gynaec, is_pediatrician,
            postal_code, landline_number, mobile_number, email,contact_person_name,contact_number, name_in_english, is_cpconfirmationcenter, created_by, created_on, state,
            modified_on, modified_by, is_balsakha1, is_balsakha3, is_usg_facility, is_referral_facility, is_ma_yojna, is_npcb, is_no_reporting_unit, no_of_beds,
            is_covid_hospital, is_covid_lab, no_of_ppe,has_ventilators,has_defibrillators,has_oxygen_cylinders,abhay_parimiti_id
        )
        VALUES (
            #type#, #name#, #locationid#, #isnrc#, #iscmtc#, #isfru#, #issncu#, #forncd#, #ishwc#, #isIdsp#,
            #ischiranjeevischeme#, #isbalsaka#, #ispmjy#, #address#,#fundedBy#, #latitude#,
            #longitude#, #nin#, cast(#emamtaid# as bigint), #isbloodbank#, #isgynaec#, #ispediatrician#,
            #postalcode#, #landlinenumber#, #mobilenumber#, #email#,#contactPersonName#,#contactNumber#, #nameinenglish#, #iscpconfirmationcenter#, #createdBy#, now(), ''ACTIVE'',
            now(), #createdBy#, #isBalsakha1#, #isBalsakha3#, #isUsgFacility#, #isReferralFacility#, #isMaYojna#, #isNpcb#, #isNoReportingUnit#, cast(#noOfBeds# as integer),
            #isCovidHospital#, #isCovidLab#, cast(#noOfPpe# as integer),#hasVentilators#,#hasDefibrillators#,#hasOxygenCylinders#, #abhayParimitiId#
        )
        returning id
    )
    INSERT
    INTO
    archive.health_infrastructure_details_history(
        health_infrastructure_details_id, action, type, name, location_id, is_nrc, is_cmtc, is_fru, is_sncu, for_ncd, is_hwc, is_idsp,
        is_chiranjeevi_scheme, is_balsaka, is_pmjy, address,funded_by, latitude,
        longitude, nin, emamta_id, is_blood_bank, is_gynaec, is_pediatrician,
        postal_code, landline_number, mobile_number, email,contact_person_name,contact_number, name_in_english, is_cpconfirmationcenter, created_by, created_on, state,
        modified_on, modified_by, is_balsakha1, is_balsakha3, is_usg_facility, is_referral_facility, is_ma_yojna, is_npcb, is_no_reporting_unit, no_of_beds,
        is_covid_hospital, is_covid_lab, no_of_ppe,has_ventilators,has_defibrillators,has_oxygen_cylinders,abhay_parimiti_id
    )
    VALUES (
        (select id from insert_health_infrastructure), ''CREATE'', #type#, #name#, #locationid#, #isnrc#, #iscmtc#, #isfru#, #issncu#, #forncd#, #ishwc#, #isIdsp#,
        #ischiranjeevischeme#, #isbalsaka#, #ispmjy#, #address#,#fundedBy#, #latitude#,
        #longitude#, #nin#, cast(#emamtaid# as bigint), #isbloodbank#, #isgynaec#, #ispediatrician#,
        #postalcode#, #landlinenumber#, #mobilenumber#, #email#,#contactPersonName#,#contactNumber#, #nameinenglish#, #iscpconfirmationcenter#, #createdBy#, now(), ''ACTIVE'',
        now(), #createdBy#, #isBalsakha1#, #isBalsakha3#, #isUsgFacility#, #isReferralFacility#, #isMaYojna#, #isNpcb#, #isNoReportingUnit#, cast(#noOfBeds# as integer),
        #isCovidHospital#, #isCovidLab#, cast(#noOfPpe# as integer),#hasVentilators#,#hasDefibrillators#,#hasOxygenCylinders#, #abhayParimitiId#
    )
    returning health_infrastructure_details_id as id;',true,'ACTIVE','Create Health Infrastructure',true,'04c7681c-516f-4431-9cc3-fc584e3feebc'),
	 (60512,'2023-03-23 00:00:00',60512,'2023-03-23 00:00:00','health_infrastructure_update','issncu,isfru,ispmjy,mobilenumber,isCovidLab,hasOxygenCylinders,emamtaid,latitude,isnrc,isBalsakha3,isgynaec,ispediatrician,noOfBeds,type,fundedBy,isNpcb,isCovidHospital,isbalsaka,isMaYojna,nin,postalcode,hasDefibrillators,contactNumber,modifiedBy,hasVentilators,id,email,longitude,isNoReportingUnit,address,isbloodbank,isIdsp,created_by,noOfPpe,nameinenglish,iscpconfirmationcenter,abhayParimitiId,iscmtc,contactPersonName,locationid,landlinenumber,ishwc,isBalsakha1,isReferralFacility,name,forncd,isUsgFacility,ischiranjeevischeme','with update_health_infrastructure as (
        UPDATE
        health_infrastructure_details
        SET
        type=#type#,
        name=#name#,
        location_id=#locationid#,
        for_ncd=#forncd#,
        is_nrc=#isnrc#,
        is_cmtc=#iscmtc#,
        is_fru=#isfru#,
        is_sncu=#issncu#,
        is_hwc=#ishwc#,
        is_chiranjeevi_scheme=#ischiranjeevischeme#,
        is_balsaka=#isbalsaka#,
        is_pmjy=#ispmjy#,
        address=#address#,
        funded_by = #fundedBy#,
        latitude=#latitude#,
        longitude=#longitude#,
        nin=#nin#,
        emamta_id=#emamtaid#,
        is_blood_bank=#isbloodbank#,
        is_gynaec=#isgynaec#,
        is_pediatrician=#ispediatrician#,
        postal_code=#postalcode#,
        landline_number=#landlinenumber#,
        mobile_number=#mobilenumber#,
        email=#email#,
        contact_person_name = #contactPersonName#,
        contact_number = #contactNumber#,
        name_in_english=#nameinenglish#,
        is_cpconfirmationcenter=#iscpconfirmationcenter#,
        created_by=#created_by#,
        --created_on=now(),
        modified_on=now(),
        modified_by=#modifiedBy#,
        is_balsakha1=#isBalsakha1#,
        is_balsakha3=#isBalsakha3#,
        is_usg_facility=#isUsgFacility#,
        is_referral_facility=#isReferralFacility#,
        is_ma_yojna=#isMaYojna#,
        is_npcb=#isNpcb#,
        is_idsp=#isIdsp#,
        is_no_reporting_unit=#isNoReportingUnit#,
        no_of_beds=cast(#noOfBeds# as integer),
        is_covid_hospital=#isCovidHospital#,
        is_covid_lab=#isCovidLab#,
        no_of_ppe=#noOfPpe#,
        has_ventilators = #hasVentilators#,
        has_defibrillators = #hasDefibrillators#,
        has_oxygen_cylinders = #hasOxygenCylinders#,
        abhay_parimiti_id = #abhayParimitiId#
        WHERE id=#id#
        returning id
    )
    INSERT
    INTO
    archive.health_infrastructure_details_history(
        health_infrastructure_details_id, action, type, name, location_id, is_nrc, is_cmtc, is_fru, is_sncu, for_ncd, is_hwc, is_idsp,
        is_chiranjeevi_scheme, is_balsaka, is_pmjy, address,funded_by, latitude,
        longitude, nin, emamta_id, is_blood_bank, is_gynaec, is_pediatrician,
        postal_code, landline_number, mobile_number, email,contact_person_name,contact_number, name_in_english, is_cpconfirmationcenter, created_by, created_on, state,
        modified_on, modified_by, is_balsakha1, is_balsakha3, is_usg_facility, is_referral_facility, is_ma_yojna, is_npcb, is_no_reporting_unit, no_of_beds,
        is_covid_hospital, is_covid_lab, no_of_ppe,has_ventilators,has_defibrillators,has_oxygen_cylinders,abhay_parimiti_id
    )
    VALUES (
        (select id from update_health_infrastructure), ''UPDATE'', #type#, #name#, #locationid#, #isnrc#, #iscmtc#, #isfru#, #issncu#, #forncd#, #ishwc#, #isIdsp#,
        #ischiranjeevischeme#, #isbalsaka#, #ispmjy#, #address#,#fundedBy#, #latitude#,
        #longitude#, #nin#, #emamtaid#, #isbloodbank#, #isgynaec#, #ispediatrician#,
        #postalcode#, #landlinenumber#, #mobilenumber#, #email#,#contactPersonName#,#contactNumber#, #nameinenglish#, #iscpconfirmationcenter#, #modifiedBy#, now(), ''ACTIVE'',
        now(), #modifiedBy#, #isBalsakha1#, #isBalsakha3#, #isUsgFacility#, #isReferralFacility#, #isMaYojna#, #isNpcb#, #isNoReportingUnit#, #noOfBeds#,
        #isCovidHospital#, #isCovidLab#, #noOfPpe#, #hasVentilators#, #hasDefibrillators#, #hasOxygenCylinders#, #abhayParimitiId#
    )
    returning health_infrastructure_details_id as id;',true,'ACTIVE','Update Health Infrastructure',true,'2bb9b2c2-93a3-4c29-b1ad-fe50fa491371'),
	 (97070,'2023-05-01 00:00:00',97070,'2023-05-01 00:00:00','lms_dashboard_retrieve_learning_hours_by_course_id','locationId,courseId','with location_user as(
    select distinct user_id
    from location_hierchy_closer_det
        left join um_user_location on um_user_location.loc_id = location_hierchy_closer_det.child_id
    where parent_id = #locationId#
)
select tr_course_master.course_id as "courseId",
cast (sum(tr_lesson_analytics.spent_time)  as text) as "timeSpent"
from tr_course_master
left join tr_lesson_analytics on tr_course_master.course_id = tr_lesson_analytics.course_id
 inner join location_user on tr_lesson_analytics.user_id = location_user.user_id
where tr_course_master.course_id = #courseId#
group by tr_course_master.course_id',true,'ACTIVE',NULL,true,'8f76045a-31df-4d82-af85-71be977e10fb'),
	 (97070,'2023-05-01 00:00:00',97070,'2023-05-01 00:00:00','lms_dashboard_retrieve_userwise_watch_hours_by_course_id','locationId,courseId','with location_user as(
    select distinct user_id
    from location_hierchy_closer_det
        left join um_user_location on um_user_location.loc_id = location_hierchy_closer_det.child_id
    where parent_id = #locationId#
	group by user_id
), data as (
	select user_id,
	cast (sum(spent_time)  as text ) as "spent_time"
	from tr_lesson_analytics
	where course_id = #courseId#
	group by user_id
)
select um_user.id as "userId",
concat_ws('' '',um_user.first_name,um_user.middle_name,um_user.last_name) as "userName",
um_role_master.name as "roleName",
data.spent_time as "timeSpent"
from data
inner join location_user on location_user.user_id=data.user_id
inner join um_user on data.user_id = um_user.id
and um_user.state = ''ACTIVE''
inner join um_role_master on um_user.role_id = um_role_master.id
and um_role_master.state = ''ACTIVE''',true,'ACTIVE',NULL,true,'b4563d5c-0f2c-4ef6-b3cc-8ef156098955'),
	 (80251,'2023-05-23 00:00:00',80251,'2023-05-23 00:00:00','retrieve_system_code_mapping_by_field_id','fieldId','WITH LIST_VALUE  AS
(select * from listvalue_field_value_detail where field_key = (select field_key from listvalue_field_master where field = #fieldId# AND is_active )  AND is_active =true),
CODES AS ( select value as "code" from listvalue_field_value_detail as lvd where field_key  = ''system_codes_supported_types''  AND is_active = true ) ,
CODE_MASTER AS ( select * from system_code_master ) ,
TEMP_TEB AS  ( SELECT lv.id ,
count ( codes.code ) ,
cast(array_to_json(array_agg( json_build_object(''codeType'', codes.code ) )) as text) as CODE_LIST ,
cast(array_to_json(array_agg( json_build_object(''id'', lv.id, ''name'', lv.value) )) as text) as LIST_VALUE from
LIST_VALUE lv,CODES codes group by lv.id
) 
select tt.id,tt.count as codeCount, tt.CODE_LIST as codeList,LIST_VALUE as listValue,

cast(array_to_json(array_agg(json_build_object( ''id'', CAST ( cm.id AS TEXT), ''tableId'',cm.table_id, ''tableType'',cm.table_type,''codeType'',cm.code_type
,''code'',cm.code,''description'',cm.description,''parentCode'',cm.parent_code ))) as text) as "SYSTEM_CODE"
  from  
TEMP_TEB tt left JOIN CODE_MASTER cm ON tt.id  = cm.table_id group by tt.id,tt.count,tt.CODE_LIST,LIST_VALUE',true,'ACTIVE',NULL,true,'4fa948d6-ac57-4913-be18-6e6b62ad779f'),
	 (97070,'2023-05-01 00:00:00',97070,'2023-05-01 00:00:00','lms_dashboard_retrieve_lessons_by_course_id','locationId,courseId','with location_user as(
    select distinct user_id
    from location_hierchy_closer_det
        left join um_user_location on um_user_location.loc_id = location_hierchy_closer_det.child_id
    where parent_id = #locationId#
    group by user_id
), lessons as (
	select id as lesson_id,
	title as lesson_name,
	media_type as lesson_type,
	media_order as lesson_order
	from tr_topic_media_master
	where topic_id in (select topic_id from tr_course_topic_rel where course_id = #courseId#)
	and media_state = ''ACTIVE''
),frequency as (
	select lessons.lesson_id,
	count(1) as frequency
	from tr_session_analytics
	inner join lessons on tr_session_analytics.lesson_id = lessons.lesson_id
    inner join location_user on tr_session_analytics.user_id = location_user.user_id
	group by lessons.lesson_id
),hours_spent as (
	select lesson_id,
	extract(hour from sum(spent_time)) as hours_spent
	from tr_lesson_analytics
    inner join location_user on tr_lesson_analytics.user_id = location_user.user_id
	where lesson_id in (select lesson_id from lessons)
	group by lesson_id
)select lessons.lesson_id as "lessonId",
lessons.lesson_name as "lessonName",
lessons.lesson_type as "lessonType",
coalesce(frequency.frequency,0) as "frequency",
coalesce(hours_spent.hours_spent,0) as "hoursSpent"
from lessons
left join frequency on lessons.lesson_id = frequency.lesson_id
left join hours_spent on lessons.lesson_id = hours_spent.lesson_id
order by "frequency" desc',true,'ACTIVE',NULL,true,'85dc642c-f05b-412c-84bb-b6763c1e464c'),
	 (97070,'2023-05-01 00:00:00',97070,'2023-05-01 00:00:00','ncd_diabetes_treatment_history','memberId','select
    cast(
        ncd_member_diabetes_detail.screening_date as date
    ) as "diagnosedOn",
    concat(
        um_user.first_name,
        '' '',
        um_user.middle_name,
        '' '',
        um_user.last_name
    ) as "diagnosedBy",
    ncd_member_diabetes_detail.done_by as "doneBy",
    CONCAT('''', ncd_member_diabetes_detail.blood_sugar, '' mg/dl'') as readings,
ncd_member_diabetes_detail.measurement_type as type,
    case
        when ncd_member_diabetes_detail.status is null then case
            when ncd_member_diabetes_detail.is_suspected is true then ''SUSPECTED''
            else ''NORMAL''
        end
        else ncd_member_diabetes_detail.status
    end as "currentStatus",
	ncd_member_diabetes_detail.earlier_diabetes_diagnosis as "diagnosedEarlier"
from
    ncd_member_diabetes_detail
    inner join ncd_master on ncd_member_diabetes_detail.master_id = ncd_master.id
    inner join um_user on ncd_member_diabetes_detail.created_by = um_user.id
where
    ncd_member_diabetes_detail.member_id = #memberId#
group by
    ncd_member_diabetes_detail.screening_date,
    "diagnosedBy",
    "doneBy",
    "currentStatus",
    readings,
	"diagnosedEarlier",
measurement_type
order by
    ncd_member_diabetes_detail.screening_date desc',true,'ACTIVE','To retrieve diabetes disease treatment history of patient.',true,'e710e3ca-a7e5-48e8-bdc0-67adab667fbe'),
	 (97070,'2023-05-01 00:00:00',97070,'2023-05-01 00:00:00','ncd_fetch_confirmed_diseases','memberId','select string_agg(distinct disease_code,'','') as diseases from ncd_master where member_id=#memberId#
and status not in (''NORMAL'',''SUSPECTED'') and disease_code not in (''IA'',''G'')',true,'ACTIVE',NULL,true,'a6688c27-8cf9-4a07-a3ec-a4b45d469b08'),
	 (97070,'2023-05-04 00:00:00',97070,'2023-05-04 00:00:00','ncd_initial_assessment_prefilled_data','memberId','with final_data as(select member_id,screening_date,weight,height,bmi,waist from ncd_member_hypertension_detail where member_id=#memberId# and (bmi is not null or weight is not null or height is not null or waist is not null)
union
select member_id,screening_date,weight,height,bmi,waist_circumference as waist from ncd_member_initial_assessment_detail where member_id=#memberId# and (bmi is not null or weight is not null or height is not null or waist_circumference is not null)
union
select member_id,screening_date,weight,height,bmi,0 as waist from ncd_member_diabetes_detail where member_id=#memberId# and (bmi is not null or weight is not null or height is not null)),
weight as (select ''weight'' as key,weight as value from final_data where weight is not null order by screening_date desc limit 1),
height as (select ''height'' as key,height as value from final_data where height is not null order by screening_date desc limit 1),
bmi as (select ''bmi'' as key,bmi as value from final_data where bmi is not null order by screening_date desc limit 1),
waist as (select ''waist'' as key,waist as value from final_data where waist is not null and waist!=0 order by screening_date desc limit 1)
select * from weight
union
select * from height
union
select * from bmi
union
select * from waist',true,'ACTIVE',NULL,true,'557f12cb-9e90-4cd2-a118-f4b51c204190'),
	 (97070,'2023-05-08 00:00:00',97070,'2023-05-08 00:00:00','lms_dashboard_retrieve_modules_by_course_id','locationId,courseId','with location_user as(
    select distinct user_id
    from location_hierchy_closer_det
        left join um_user_location on um_user_location.loc_id = location_hierchy_closer_det.child_id
    where parent_id = #locationId#
),
modules as (
    select topic_id as module_id,
        topic_name as module_name,
        topic_order as module_order
    from tr_topic_master
    where topic_id in (
            select topic_id
            from tr_course_topic_rel
            where course_id = #courseId#)
                and topic_state = ''ACTIVE''
),
frequency as (
    select modules.module_id,
        count(1) as frequency
    from tr_session_analytics
        inner join tr_topic_media_master on tr_session_analytics.lesson_id = tr_topic_media_master.id
        inner join modules on tr_topic_media_master.topic_id = modules.module_id
        inner join location_user on tr_session_analytics.user_id = location_user.user_id
    group by modules.module_id
),
hours_spent as (
    select module_id,
        extract(
            hour
            from sum(spent_time)
        ) as hours_spent
    from tr_lesson_analytics
        inner join location_user on tr_lesson_analytics.user_id = location_user.user_id
    where module_id in (
            select module_id
            from modules
        )
    group by module_id
)
select modules.module_id as "moduleId",
    modules.module_name as "moduleName",
    modules.module_order as "moduleOrder",
    coalesce(frequency.frequency, 0) as "frequency",
    coalesce(hours_spent.hours_spent, 0) as "hoursSpent"
from modules
    left join frequency on modules.module_id = frequency.module_id
    left join hours_spent on modules.module_id = hours_spent.module_id
order by "frequency" desc,
    "hoursSpent" desc',true,'ACTIVE',NULL,true,'e338408e-f1f5-4d51-9048-787ec1ff920f'),
	 (1,'2023-05-10 00:00:00',1,'2023-05-10 00:00:00','fetch_all_lgd_code','childid','
	select
    child_id,
    count(*),
    string_agg(location_hierchy_closer_det.parent_loc_type || ''/'' || coalesce (location_master.lgd_code,''-1'')   ,'' , '' order by depth desc) as lgdCode
    from location_hierchy_closer_det, location_master
    where child_id = #childid#
    and location_master.id = location_hierchy_closer_det.parent_id
    group by child_id',true,'ACTIVE','fetching all lgd code',true,'7f1a9c1e-5ce1-4a47-9bf4-4f15f3d9a5cc'),
	 (85436,'2023-05-23 00:00:00',85436,'2023-05-23 00:00:00','retrieve_system_codes_supported_types',NULL,'select value as "codeType" from listvalue_field_value_detail as lvd where field_key  = ''system_codes_supported_types''  AND is_active = true ORDER BY value',true,'ACTIVE','this query retrieve the list of codes supported by system',true,'4b0571bc-1847-467a-aeb1-3b97de948ac0'),
	 (60512,'2023-05-10 00:00:00',60512,'2023-05-10 00:00:00','health_infrastructure_retrieval','offset,locationId,name,limit,type','select type as hospitalType,
name as name,
get_location_hierarchy(location_id) as locationname,
location_id as locationid,
is_blood_bank as isBloodBank,
is_gynaec as isGynaec,
is_pediatrician as ispediatrician,
for_ncd as forncd,
is_nrc as isNrc,
is_cmtc as isCmtc,
is_fru as isFru,
is_sncu as isSncu,
is_hwc as isHwc,
is_chiranjeevi_scheme as ischiranjeevischeme,
is_balsaka as isBalsaka,
is_pmjy as ispmjy,
is_idsp as isidsp,
id as id,
address as address,
is_cpconfirmationcenter as isconfirmationcenter,
is_balsakha1 as isBalsakha1,
is_balsakha3 as isBalsakha3,
is_usg_facility as isUsgFacility,
is_referral_facility as isReferralFacility,
is_ma_yojna as isMaYojna,
is_npcb as isNpcb,
is_no_reporting_unit as isNoReportingUnit,
is_covid_hospital as isCovidHospital,
is_covid_lab as isCovidLab,
has_ventilators as hasVentilators,
has_defibrillators as hasDefibrillators,
has_oxygen_cylinders as hasOxygenCylinders,
hfr_facility_id as hfrFacilityId
from health_infrastructure_details
where (
	#locationId# is null
	or location_id in (
		select child_id
		from location_hierchy_closer_det
		where parent_id = #locationId#
	)
)
and (
	#name# is null
	or #name# = ''''
	or #name# = ''null''
	or name ilike ''%#name#%''
)
and (
	#type# is null
	or type = #type#
)
order by state,id
limit #limit# offset #offset#',true,'ACTIVE','Retrieve health infrastructures',true,'45330558-bae8-41d7-9525-938469640fb3'),
	 (1,'2023-05-10 00:00:00',1,'2023-05-10 00:00:00','my_health_infrastructure_retrieval','offset,limit,loggedInUserId','
    select
    hid.hfr_facility_id as hfrFacilityId,
    hid.*,
    get_location_hierarchy(hid.location_id) as "locationHierarchy"
    from user_health_infrastructure uhi
    inner join health_infrastructure_details hid on uhi.health_infrastrucutre_id = hid.id
    where uhi.user_id = #loggedInUserId#
    and uhi.state = ''ACTIVE''
    limit #limit# offset #offset#
',true,'ACTIVE','Retrieve My Health Infrastructures',true,'3b1c4098-14e4-4418-b33f-34e9fd2864f2'),
	 (97070,'2023-05-15 00:00:00',97070,'2023-05-15 00:00:00','lms_count_of_users_coursewise_weekly','locationId,roleId,courseId','with base_data as(select count(distinct tsa.user_id),date_trunc(''month'',started_on) as started_on from tr_session_analytics tsa
inner join um_user_location uul on tsa.user_id = uul.user_id and uul.state=''ACTIVE''
inner join um_user uu on uu.id = uul.user_id and uu.state = ''ACTIVE''
inner join location_hierchy_closer_det lhcd on uul.loc_id = lhcd.child_id
where lesson_id in (select distinct lesson_id from tr_lesson_analytics tla where course_id = #courseId#) and lhcd.parent_id =#locationId#
and case when #roleId# is not null then uu.role_id = cast(#roleId# as integer) else true end
group by date_trunc(''month'',started_on)),
months as (select
    generate_series(
        current_date - interval ''6'' day,
        current_date, ''1 day''
    ) as week)
select months.week, coalesce(base_data.count,0) as count from months
left join base_data on months.week=base_data.started_on',true,'ACTIVE',NULL,true,'cf234242-c687-4084-956a-dd068cea858c'),
	 (97070,'2023-05-15 00:00:00',97070,'2023-05-15 00:00:00','lms_count_of_users_coursewise_monthly','locationId,roleId,courseId','with base_data as(select count(distinct tsa.user_id),date_trunc(''month'',started_on) as started_on from tr_session_analytics tsa
inner join um_user_location uul on tsa.user_id = uul.user_id and uul.state=''ACTIVE''
inner join um_user uu on uu.id = uul.user_id and uu.state=''ACTIVE''
inner join location_hierchy_closer_det lhcd on uul.loc_id = lhcd.child_id
where lesson_id in (select distinct lesson_id from tr_lesson_analytics tla where course_id = #courseId#) and lhcd.parent_id =#locationId#
and case when #roleId# is not null then uu.role_id = cast(#roleId# as integer) else true end
group by date_trunc(''month'',started_on)),
months as (select
    generate_series(
        date_trunc(''month'',current_date - interval ''11'' month),
        current_date, ''1 month''
    ) as month)
select months.month, coalesce(base_data.count,0) as count from months
left join base_data on months.month=base_data.started_on',true,'ACTIVE',NULL,true,'0409f66b-1a17-49f2-b8d9-d553fea8ab2e'),
	 (97070,'2023-05-15 00:00:00',97070,'2023-05-15 00:00:00','lms_heatmap_data','roleId,courseId','with location_ids as(
select child_id from location_hierchy_closer_det where parent_id = 555800 and depth = 1
),
user_count as(select
count (distinct tcwca.user_id),lhcd.parent_id
from tr_course_wise_count_analytics tcwca
inner join um_user_location uul on uul.user_id=tcwca.user_id and uul.state=''ACTIVE''
inner join um_user uu on uu.id = uul.user_id and uu.state=''ACTIVE''
inner join location_hierchy_closer_det lhcd on lhcd.child_id = uul.loc_id
inner join location_ids lid on lid.child_id=lhcd.parent_id
where course_id=#courseId#
and case when #roleId# is not null then uu.role_id = cast(#roleId# as integer) else true end
group by lhcd.parent_id),
total_count as (select count(distinct attendee_id)+count(distinct additional_attendee_id) as enrolled_user_id,ttcr.course_id,lid.child_id
	from tr_training_attendee_rel ttar
	inner join tr_training_course_rel ttcr on ttcr.training_id = ttar.training_id
	left join tr_training_additional_attendee_rel ttaar on ttaar.training_id =ttar .training_id
	inner join tr_course_master tcm on tcm.course_id = ttcr.course_id
	inner join um_user_location uul on ttar.attendee_id = uul.user_id and uul.state=''ACTIVE''
	inner join location_hierchy_closer_det lhcd on lhcd.child_id = uul.loc_id
	left join um_user_location uul2 on ttaar.additional_attendee_id = uul2.user_id and uul2.state=''ACTIVE''
	left join location_hierchy_closer_det lhcd2 on lhcd2.child_id = uul2.loc_id
	inner join location_ids lid on lid.child_id=lhcd.parent_id or lid.child_id=lhcd2.parent_id
	where ttcr.course_id=#courseId#
	group by ttcr.course_id,lid.child_id),
analytics as(select
("count"*100)/enrolled_user_id as series_label,
lm.id,lm.english_name as x_axis_label
from total_count
left join user_count on total_count.child_id=user_count.parent_id
inner join location_master lm on lm.id=total_count.child_id)
select x_axis_label,series_label,
case
when series_label between 85 and 100 then ''#1e621e''
when series_label between 50 and 84 then ''#40bf40''
when series_label between 25 and 49 then ''#9fdf9f''
when series_label between 0 and 24 then ''#c6ecc6''
end as color
from analytics',true,'ACTIVE',NULL,true,'6cbf4e2a-a6b9-4886-b8c3-2891717eea2c'),
	 (97070,'2023-05-15 00:00:00',97070,'2023-05-15 00:00:00','retrieve_lms_dashboard_kpi_codes_by_role_id','roleId','select * from lms_dashboard_role_mapping where role_id = #roleId# and state=''ACTIVE''',true,'ACTIVE',NULL,true,'52c6139b-5f76-4771-9056-366486c25fca'),
	 (97070,'2023-05-15 00:00:00',97070,'2023-05-15 00:00:00','lms_dashboard_retrieve_course_engagement_v2','locationId,roleId,courseId','with training_ids as (
	select distinct training_id
	from tr_training_course_rel where course_id = #courseId#
), enrolled_users as (
	select distinct attendee_id as enrolled_user_id
	from tr_training_attendee_rel
	inner join training_ids on training_ids.training_id = tr_training_attendee_rel.training_id
	union
	select distinct additional_attendee_id as enrolled_user_id
	from tr_training_additional_attendee_rel
	inner join training_ids on training_ids.training_id = tr_training_additional_attendee_rel.training_id
), location_users as (
	select distinct user_id
    from location_hierchy_closer_det
        inner join um_user_location on um_user_location.loc_id = location_hierchy_closer_det.child_id
		inner join enrolled_users on enrolled_users.enrolled_user_id = um_user_location.user_id
    where parent_id = #locationId#
), enrolled_data as (
	select
		location_users.user_id, um_user.role_id as role_id
	from location_users
	inner join um_user on location_users.user_id = um_user.id
	and um_user.state = ''ACTIVE''
), roles as (
	select distinct role_id
	from enrolled_data
), enrolled as (
	select enrolled_data.role_id as role_id,
	count(1) as enrolled
	from enrolled_data
	group by enrolled_data.role_id
), course_status as (
	select enrolled_data.role_id as role_id,
	count(1) filter (where (course_progress is null or course_progress < 100)) as in_progress,
	count(1) filter (where course_progress = 100) as completed
	from enrolled_data
	inner join tr_course_wise_count_analytics on enrolled_data.user_id = tr_course_wise_count_analytics.user_id
	and tr_course_wise_count_analytics.course_id = #courseId#
	group by enrolled_data.role_id
), not_started as (
	select enrolled_data.role_id,
	count(1) filter (where tr_user_meta_data.user_id is null) as not_started
	from enrolled_data
	left join tr_user_meta_data on enrolled_data.user_id = tr_user_meta_data.user_id
	and tr_user_meta_data.course_id = #courseId#
	group by enrolled_data.role_id
)
select
	um_role_master.id as "roleId",
	um_role_master.name as "roleName",
	coalesce(enrolled.enrolled,0) as "enrolled",
	coalesce(not_started.not_started,0) as "notStarted",
	coalesce(course_status.in_progress,0) as "inProgress",
	coalesce(course_status.completed,0) as "completed"
from roles
left join enrolled on roles.role_id = enrolled.role_id
left join course_status on roles.role_id = course_status.role_id
left join not_started on roles.role_id = not_started.role_id
inner join um_role_master on roles.role_id = um_role_master.id
	and um_role_master.state = ''ACTIVE''
	where case when #roleId# is not null then roles.role_id = cast(#roleId# as integer) else true end',true,'ACTIVE',NULL,true,'71d78981-72af-4625-860d-44c71bb40e9b'),
	 (97070,'2023-05-17 00:00:00',97070,'2023-05-17 00:00:00','lms_course_engagement_data','locationId,roleId','with counts as(select count(distinct tcwca.user_id) filter(where tcwca.course_progress = 100 ) as users, tcwca.course_id,
avg(time_spent_on_course) as time_spent
from tr_course_wise_count_analytics tcwca
inner join um_user_location uul on tcwca.user_id = uul.user_id  and uul.state=''ACTIVE''
inner join location_hierchy_closer_det lhcd on lhcd.child_id = uul.loc_id
inner join um_user uu on uu.id = tcwca.user_id and uu.state=''ACTIVE''
where lhcd.parent_id = #locationId#
and case when #roleId# is not null then uu.role_id= cast(#roleId# as integer) else true end group by tcwca.course_id),
course_counts as(select counts.*, tcm.course_name from counts
inner join tr_course_master tcm on tcm.course_id=counts.course_id
where tcm.course_state = ''ACTIVE'' and course_type=''ONLINE''),
course_details as(select count(distinct attendee_id)+count(distinct additional_attendee_id) as enrolled_user_id,ttcr.course_id,tcm.course_name
	from tr_training_attendee_rel ttar
	inner join tr_training_course_rel ttcr on ttcr.training_id = ttar.training_id
	left join tr_training_additional_attendee_rel ttaar on ttaar.training_id =ttar .training_id
	inner join tr_course_master tcm on tcm.course_id = ttcr.course_id
	inner join um_user_location uul on ttar.attendee_id = uul.user_id  and uul.state=''ACTIVE''
	inner join location_hierchy_closer_det lhcd on lhcd.child_id = uul.loc_id
	left join um_user_location uul2 on ttaar.additional_attendee_id = uul2.user_id  and uul2.state=''ACTIVE''
	left join location_hierchy_closer_det lhcd2 on lhcd2.child_id = uul2.loc_id and lhcd2.parent_id = #locationId#	where tcm.course_state = ''ACTIVE'' and tcm.course_type=''ONLINE''
	and lhcd.parent_id = #locationId#
	group by ttcr.course_id ,tcm.course_name
)
select course_details.course_id,course_details.course_name,
(COALESCE(course_counts.users,0)*100)/course_details.enrolled_user_id as completion_rate,
date_part(''minutes'', time_spent) as time_spent
from course_counts
right join course_details on
course_details.course_id=course_counts.course_id',true,'ACTIVE',NULL,true,'3d15d603-e3f6-42e6-a7d2-fd399b896947'),
	 (60512,'2023-06-29 00:00:00',60512,'2023-06-29 00:00:00','update_first_login_user_personal_details','firstName,lastName,mobileNumber,userId','update um_user
set
first_time_password_changed = true
where id = #userId#;',false,'ACTIVE',NULL,true,'8e5e1e5c-c101-4479-b403-42b5c4eb4f38'),
	 (78434,'2023-06-29 00:00:00',78434,'2023-06-29 00:00:00','get_all_menus_for_system_constraint_form_config',NULL,'select
	mc.id as "id",
	mc.group_id as "groupId",
	mc.menu_name as "menuName",
	mc.menu_type as "menuType",
	concat(mc.menu_name, '' ('', mc.menu_type, (case when mc.group_id is not null then '' > '' else '''' end), mg.group_name, '')'') as "menuDisplayName"
from
	menu_config mc
left join
	menu_group mg on mg.id = mc.group_id and mg.group_type = mc.menu_type and mg.active is true
where
	mc.active is true
	and mc.is_dynamic_report is not true
order by
	mc.menu_name',true,'ACTIVE','Get all menus for system constraint form configurations.',true,'22d70262-7d0a-44ad-abe5-73d649f58c35'),
	 (60512,'2023-06-29 00:00:00',60512,'2023-06-29 00:00:00','create_location_type','level,name,isSohEnable,loggedInUserId,type','insert into location_type_master
(type,name,level,is_soh_enable,is_active,created_by,created_on,modified_by,modified_on)
values (#type#,#name#,#level#,#isSohEnable#,true,#loggedInUserId#,now(),#loggedInUserId#,now());',false,'ACTIVE',NULL,true,'386799aa-1e30-4ae7-ab6f-93cdd9ce6042'),
	 (75398,'2023-06-29 00:00:00',75398,'2023-06-29 00:00:00','update_listvalues','multimediaType,fileSize,loggedInUserId,id,value','UPDATE public.listvalue_field_value_detail
   SET last_modified_by=#loggedInUserId#, last_modified_on=now(),multimedia_type=#multimediaType#,
       value=#value#, file_size=#fileSize#
 WHERE id=#id#',false,'ACTIVE',NULL,true,'45b9b75e-aeb7-449a-a3c7-72b89cf98509'),
	 (60512,'2023-06-29 00:00:00',60512,'2023-06-29 00:00:00','retrieve_location_type_by_id','id','select id as "id",
type as "type",
name as "name",
level as "level",
is_soh_enable as "isSohEnable",
is_active as "isActive"
from location_type_master
where id = cast(#id# as integer)',true,'ACTIVE',NULL,true,'56c03b5a-cd2d-4764-b123-31fd89634efc'),
	 (75398,'2023-06-29 00:00:00',75398,'2023-06-29 00:00:00','school_retrieval_by_code','code,id','SELECT
    id,
    name,
    english_name as "englishName",
    code,
	location_id as "locationId",
	get_location_hierarchy(location_id) as "locationHierarchy"
    FROM school_master
    WHERE
    code = #code#
    and id != #id#;',true,'ACTIVE','Retrieve School By Code',true,'b63d2e3b-266c-42c3-ba4b-cf09fb96caa0'),
	 (60512,'2023-06-29 00:00:00',60512,'2023-06-29 00:00:00','health_infra_type_mapping','offset,limit,type','select hitl.health_infra_type_id,
case when lfvd.is_active then ''ACTIVE'' else ''INACTIVE'' end as state,
lfvd.value as value, string_agg(hitl.location_type,'','') as location_type,
string_agg('''' || hitl.location_level,'','') as location_level,
string_agg(ltm.name, '','')  as name,
hitaf.allowed_facilities as "allowedFacilities"
from health_infrastructure_type_location hitl
left join listvalue_field_value_detail lfvd on lfvd.id = hitl.health_infra_type_id
left join location_type_master ltm on ltm.type = hitl.location_type
left join health_infrastructure_type_allowed_facilities hitaf on hitl.health_infra_type_id = hitaf.health_infra_type_id
where case when (#type# is null or #type# = '''') then true else ltm.name ilike (''%'' || #type# || ''%'') end
group by hitl.health_infra_type_id, lfvd.value, lfvd.is_active,hitaf.allowed_facilities
order by lfvd.is_active desc, hitl.health_infra_type_id
limit #limit# offset #offset#',true,'ACTIVE',NULL,true,'32a4d42c-8708-4d42-9377-56bac843e403'),
	 (60512,'2023-06-29 00:00:00',60512,'2023-06-29 00:00:00','pnc_retrieve_mother_list_by_member_id','memberId','select imt_member.*
from rch_pregnancy_registration_det
inner join imt_member on rch_pregnancy_registration_det.member_id = imt_member.id
where rch_pregnancy_registration_det.delivery_date > now() - interval ''60 days''
and rch_pregnancy_registration_det.state = ''DELIVERY_DONE''
and imt_member.unique_health_id = #memberId#
and imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'',''TEMPORARY'')',true,'ACTIVE',NULL,true,'47ef4d50-2897-4144-8216-15a238154861'),
	 (60512,'2023-06-29 00:00:00',60512,'2023-06-29 00:00:00','pnc_retrieve_mother_list_by_family_id','familyId,offSet,limit','select imt_member.*
from rch_pregnancy_registration_det
inner join imt_member on rch_pregnancy_registration_det.member_id = imt_member.id
where rch_pregnancy_registration_det.delivery_date > now() - interval ''60 days''
and rch_pregnancy_registration_det.state = ''DELIVERY_DONE''
and imt_member.family_id = #familyId#
and imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'',''TEMPORARY'')
limit #limit# offset #offSet#',true,'ACTIVE',NULL,true,'ca1ab66c-e15a-4316-8095-f265e649433d'),
	 (60512,'2023-06-29 00:00:00',60512,'2023-06-29 00:00:00','pnc_retrieve_mother_list_by_family_mobile_number','offSet,mobileNumber,limit','select imt_member.*
from rch_pregnancy_registration_det
inner join imt_member on rch_pregnancy_registration_det.member_id = imt_member.id
where rch_pregnancy_registration_det.delivery_date > now() - interval ''60 days''
and rch_pregnancy_registration_det.state = ''DELIVERY_DONE''
and imt_member.family_id in (
	select family_id
	from imt_member where mobile_number = #mobileNumber#
)
and imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'',''TEMPORARY'')
order by rch_pregnancy_registration_det.delivery_date desc
limit #limit# offset #offSet#',true,'ACTIVE',NULL,true,'fdf94c16-cd74-484e-b8cb-8256919c6055'),
	 (60512,'2023-06-29 00:00:00',60512,'2023-06-29 00:00:00','pnc_retrieve_mother_list_by_location_id','offSet,locationId,limit','select imt_member.*
from rch_pregnancy_registration_det
inner join imt_member on rch_pregnancy_registration_det.member_id = imt_member.id
where rch_pregnancy_registration_det.delivery_date > now() - interval ''60 days''
and rch_pregnancy_registration_det.state = ''DELIVERY_DONE''
and rch_pregnancy_registration_det.current_location_id in (
	select child_id from location_hierchy_closer_det where parent_id = #locationId#
)
and imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'',''TEMPORARY'')
order by rch_pregnancy_registration_det.delivery_date desc
limit #limit# offset #offSet#',true,'ACTIVE',NULL,true,'49842fbe-7574-4e89-95c7-a0085ce5f036'),
	 (97070,'2023-06-29 00:00:00',97070,'2023-06-29 00:00:00','pnc_retrieve_mother_list_by_abha_number','offSet,limit,abhaNumber','select * from imt_member where id in
(select member_id from rch_pregnancy_registration_det where delivery_date > now() - interval ''60 days''
and state = ''DELIVERY_DONE''
and member_id in (select id from imt_member where health_id_number in (#abhaNumber#)))
and ((imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')) or (imt_member.state = ''com.argusoft.imtecho.member.state.temporary''))
limit #limit# offset #offSet#',true,'ACTIVE','PNC Search By Abha Number',true,'403b8188-0c57-4635-8f67-b8dcdebbc9b6'),
	 (97070,'2023-06-29 00:00:00',97070,'2023-06-29 00:00:00','pnc_retrieve_mother_list_by_abha_address','abhaAddres,offSet,limit','select * from imt_member where id in
(select member_id from rch_pregnancy_registration_det where delivery_date > now() - interval ''60 days''
and state = ''DELIVERY_DONE''
and member_id in (select id from imt_member where health_id in (#abhaAddres#)))
and ((imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')) or (imt_member.state = ''com.argusoft.imtecho.member.state.temporary''))
limit #limit# offset #offSet#',true,'ACTIVE','PNC Search By Abha Address',true,'d34689b7-f303-4a5f-b5d5-fbe22b596c3d'),
	 (60512,'2023-06-29 00:00:00',60512,'2023-06-29 00:00:00','pnc_retrieve_mother_list_by_mobile_number','offSet,mobileNumber,limit','select imt_member.*
from rch_pregnancy_registration_det
inner join imt_member on rch_pregnancy_registration_det.member_id = imt_member.id
where rch_pregnancy_registration_det.delivery_date > now() - interval ''60 days''
and rch_pregnancy_registration_det.state = ''DELIVERY_DONE''
and imt_member.mobile_number = #mobileNumber#
and imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'',''TEMPORARY'')
order by rch_pregnancy_registration_det.delivery_date desc
limit #limit# offset #offSet#',true,'ACTIVE',NULL,true,'dbdb23e3-356d-455e-9922-de4b32363c8c'),
	 (75398,'2023-06-29 00:00:00',75398,'2023-06-29 00:00:00','child_service_retrieve_child_list_by_mobile_number','offSet,mobileNumber,limit,userId','select imt_member.id,
imt_member.unique_health_id,
imt_member.family_id,
imt_member.first_name,imt_member.middle_name,imt_member.last_name,
imt_member.dob,m2.mobile_number from imt_member
left join imt_member m2 on imt_member.mother_id = m2.id
inner join imt_family on imt_member.family_id = imt_family.family_id
where imt_member.dob > now()-interval ''5 years''
and m2.mobile_number = #mobileNumber#
and ((imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')) or (imt_member.state = ''com.argusoft.imtecho.member.state.temporary''))
and imt_family.location_id in
(select child_id from location_hierchy_closer_det where parent_id in
(select loc_id from um_user_location where user_id = #userId#))
limit #limit# offset #offSet#',true,'ACTIVE',NULL,true,'38b9e9a7-47d6-4d5a-a881-da5af7891512'),
	 (75398,'2023-06-29 00:00:00',75398,'2023-06-29 00:00:00','child_service_retrieve_child_list_by_member_id','offSet,limit,memberId','select imt_member.id,
imt_member.unique_health_id,
imt_member.family_id,
imt_member.first_name,imt_member.middle_name,imt_member.last_name,
imt_member.dob,m2.mobile_number from imt_member
left join imt_member m2 on imt_member.mother_id = m2.id
inner join imt_family on imt_member.family_id = imt_family.family_id
where imt_member.dob > now()-interval ''5 years''
and imt_member.unique_health_id = #memberId#
and ((imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')) or (imt_member.state = ''com.argusoft.imtecho.member.state.temporary''))
limit #limit# offset #offSet#',true,'ACTIVE',NULL,true,'947fd387-9c47-4a2b-90c4-66c334a1a379'),
	 (75398,'2023-06-29 00:00:00',75398,'2023-06-29 00:00:00','child_service_retrieve_child_list_by_family_id','familyId,offSet,limit','select imt_member.id,
imt_member.unique_health_id,
imt_member.family_id,
imt_member.first_name,imt_member.middle_name,imt_member.last_name,
imt_member.dob,m2.mobile_number from imt_member
left join imt_member m2 on imt_member.mother_id = m2.id
inner join imt_family on imt_member.family_id = imt_family.family_id
where imt_member.dob > now()-interval ''5 years''
and imt_member.family_id = #familyId#
and ((imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')) or (imt_member.state = ''com.argusoft.imtecho.member.state.temporary''))
limit #limit# offset #offSet#',true,'ACTIVE',NULL,true,'c44e9d31-e082-446b-ae70-db2e10059732'),
	 (97070,'2023-06-29 00:00:00',97070,'2023-06-29 00:00:00','child_service_retrieve_child_list_by_dob','offSet,dob,locationId,limit','with member_details as
(select member_id from analytics.rch_child_analytics_details
where rch_child_analytics_details.dob > now()-interval ''5 years''
and rch_child_analytics_details.dob = #dob#
and rch_child_analytics_details.loc_id in
(select child_id from location_hierchy_closer_det where parent_id = #locationId#)
limit #limit# offset #offSet#)
select imt_member.id,
imt_member.unique_health_id,
imt_member.family_id,
imt_member.first_name,imt_member.middle_name,imt_member.last_name,
imt_member.dob,m2.mobile_number from imt_member
left join imt_member m2 on imt_member.mother_id = m2.id
inner join member_details on member_details.member_id = imt_member.id
where ((imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')) or (imt_member.state = ''com.argusoft.imtecho.member.state.temporary''))',true,'ACTIVE',NULL,true,'fb372992-ea27-4c1b-8a0b-f703ad272129'),
	 (75398,'2023-06-29 00:00:00',75398,'2023-06-29 00:00:00','child_service_retrieve_child_list_by_family_mobile_number','offSet,mobileNumber,limit,userId','select imt_member.id,
imt_member.unique_health_id,
imt_member.family_id,
imt_member.first_name,imt_member.middle_name,imt_member.last_name,
imt_member.dob,m2.mobile_number from imt_member
left join imt_member m2 on imt_member.mother_id = m2.id
inner join imt_family on imt_member.family_id = imt_family.family_id
where imt_member.dob > now()-interval ''5 years''
and ((imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')) or (imt_member.state = ''com.argusoft.imtecho.member.state.temporary''))
and imt_member.family_id in
(select family_id from imt_member where mobile_number = #mobileNumber#)
and imt_family.location_id in
(select child_id from location_hierchy_closer_det where parent_id in
(select loc_id from um_user_location where user_id = #userId#))
limit #limit# offset #offSet#',true,'ACTIVE',NULL,true,'5996c44d-5b99-405c-8e28-19ec9a1c972b'),
	 (97070,'2023-06-29 00:00:00',97070,'2023-06-29 00:00:00','child_service_retrieve_child_list_by_location_id','offSet,locationId,limit','with member_details as
(select member_id from analytics.rch_child_analytics_details
where rch_child_analytics_details.dob > now()-interval ''5 years''
and rch_child_analytics_details.loc_id in
(select child_id from location_hierchy_closer_det where parent_id = #locationId#)
limit #limit# offset #offSet#)
select imt_member.id,
imt_member.unique_health_id,
imt_member.family_id,
imt_member.first_name,imt_member.middle_name,imt_member.last_name,
imt_member.dob,m2.mobile_number from imt_member
left join imt_member m2 on imt_member.mother_id = m2.id
inner join member_details on member_details.member_id = imt_member.id
where ((imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')) or (imt_member.state = ''com.argusoft.imtecho.member.state.temporary''))',true,'ACTIVE',NULL,true,'815da090-7958-4178-9776-074f5801cc43'),
	 (97070,'2023-06-29 00:00:00',97070,'2023-06-29 00:00:00','child_service_retrieve_child_list_by_name','offSet,locationId,name,limit','with member_details as
(select member_id from analytics.rch_child_analytics_details
where rch_child_analytics_details.dob > now()-interval ''5 years''
and similarity(#name#,rch_child_analytics_details.member_name)>=0.50
and rch_child_analytics_details.loc_id in
(select child_id from location_hierchy_closer_det where parent_id = #locationId#)
limit #limit# offset #offSet#)
select imt_member.id,
imt_member.unique_health_id,
imt_member.family_id,
imt_member.first_name,imt_member.middle_name,imt_member.last_name,
imt_member.dob,m2.mobile_number from imt_member
left join imt_member m2 on imt_member.mother_id = m2.id
inner join member_details on member_details.member_id = imt_member.id
where ((imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')) or (imt_member.state = ''com.argusoft.imtecho.member.state.temporary''))',true,'ACTIVE',NULL,true,'01dc8d5c-1ef3-4060-873a-9ccea72884f1'),
	 (97632,'2023-06-29 00:00:00',97632,'2023-06-29 00:00:00','child_service_retrieve_child_list_by_abha_number','offSet,limit,abhaNumber','select imt_member.id,
imt_member.unique_health_id,
imt_member.family_id,
imt_member.first_name,imt_member.middle_name,imt_member.last_name,
imt_member.dob,m2.mobile_number from imt_member
left join imt_member m2 on imt_member.mother_id = m2.id
inner join imt_family on imt_member.family_id = imt_family.family_id
where imt_member.dob > now()-interval ''5 years''
and imt_member.health_id_number = #abhaNumber#
and ((imt_member.basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')) or (imt_member.state = ''com.argusoft.imtecho.member.state.temporary''))
limit #limit# offset #offSet#',true,'ACTIVE','To fetch child service details by abha number',true,'98880fa8-f215-452a-b02f-bddac727dec7'),
	 (1,'2023-06-29 00:00:00',NULL,NULL,'school_retrieval_by_id','limit,offset,id','
    SELECT
    sm.id,
	sm.name,
	sm.code,
	sm.english_name as "englishName",
	sm.grant_type as "grantType",
	sm.school_type as "schoolType",
	sm.no_of_teachers as "noOfTeachers",
	sm.principal_name as "principalName",
	sm.contact_person_name as "contactPersonName",
	sm.is_pre_primary_school as "isPrePrimarySchool",
	sm.is_primary_school as "isPrimarySchool",
	sm.is_higher_secondary_school as "isHigherSecondarySchool",
	sm.is_madresa as "isMadresa",
	sm.is_gurukul as "isGurukul",
	sm.is_other as "isOther",
	sm.other_school_type as "otherSchoolType",
	sm.contact_number as "contactNumber",
	sm.child_male_1_to_5 as "childMale1To5",
	sm.child_female_1_to_5 as "childFemale1To5",
	sm.child_male_6_to_8 as "childMale6To8",
	sm.child_female_6_to_8 as "childFemale6To8",
	sm.child_male_9_to_10 as "childMale9To10",
	sm.child_female_9_to_10 as "childFemale9To10",
	sm.child_male_11_to_12 as "childMale11To12",
	sm.child_female_11_to_12 as "childFemale11To12",
	sm.rbsk_team_id as "rbskTeamId",
	sm.location_id as "locationId",
	get_location_hierarchy(sm.location_id) as "locationHierarchy"
 	FROM public.school_master sm
    where sm.id = #id#
  	limit #limit# offset #offset#
',true,'ACTIVE','School Retrieval By Id',true,'f3ad2ce5-3b63-4c6e-888e-d16d18d027f7'),
	 (1,'2023-06-29 00:00:00',1,'2023-06-29 00:00:00','training_eligible_count','locationId,roleId,courseId','with location_det as(
select
	child_id as loc_id
from
	location_hierchy_closer_det
where
	parent_id in (#locationId#) ),
users as (
select
	tcrr.role_id,
	tcrr.course_id,
	uu.id,
	tr_course_master.module_id,
	concat(uu.first_name, '' '', uu.last_name) as FullName,
	uu.contact_number as user_mobile_number,
	tr_course_master.course_name as courseName,
	tr_course_master.course_type as courseType,
	urm.name as roleName
from
	tr_course_master
inner join tr_course_role_rel tcrr on
	tcrr.course_id = tr_course_master.course_id
	and tr_course_master.course_state = ''ACTIVE''
inner join um_user uu on
	uu.role_id = tcrr.role_id
	and uu.state = ''ACTIVE''
inner join um_user_location ul on
	ul.state = ''ACTIVE''
	and ul.user_id = uu.id
inner join location_det ld on
	ld.loc_id = ul.loc_id
inner join um_role_master urm on
	urm.id = uu.role_id
where
	uu.role_id in (#roleId#)
	and tr_course_master.course_id = #courseId# ),
totalUser as (
select
	distinct on
	(u.id) id,
	FullName,
	courseName,
	user_mobile_number,
	roleName
from
	users u) ,
scheduled as (
select
	us.id ,
	us.course_id,
	us.role_id,
	us.FullName,
	us.user_mobile_number,
	us.roleName
from
	tr_training_master tr
inner join tr_training_course_rel tcr on
	tr.training_id = tcr.training_id
inner join (
	select
		*
	from
		tr_training_attendee_rel
union
	select
		*
	from
		tr_training_additional_attendee_rel) r on
	tr.training_id = r.training_id
right join users us on
	us.id = r.attendee_id
	and us.course_id = tcr.course_id
where
	(case when us.courseType = ''ONLINE'' then tr.expiration_date is null else tr.expiration_date >= current_date end)
	and tr.training_state = ''DRAFT'' ),
practiced as (
select
	us.id,
	us.role_id,
	us.course_id,
	us.FullName,
	us.user_mobile_number,
	us.roleName
from
	tr_certificate_master tcm
inner join users us on
	us.id = tcm.user_id
	and tcm.course_id = us.course_id
inner join listvalue_field_value_detail fvm on
	fvm.id = us.module_id
left join user_form_access ufa on
	ufa.form_code = fvm.value
	and ufa.user_id = us.id
where
	tcm.certificate_type = ''COURSECOMPLETION''
	and us.course_id in (1, 7, 10, 11)
	and ufa.form_code is null ) ,
production as (
select
	us.id id,
	us.role_id,
	us.course_id,
	us.FullName,
	us.user_mobile_number,
	us.roleName
from
	tr_certificate_master tcm
inner join users us on
	us.id = tcm.user_id
	and tcm.course_id = us.course_id
where
	tcm.certificate_type = ''COURSECOMPLETION''
	and us.course_id not in (1, 7, 10, 11)
union all
select
	us.id id,
	us.role_id,
	us.course_id,
	us.FullName,
	us.user_mobile_number,
	us.roleName
from
	tr_certificate_master tcm
inner join users us on
	us.id = tcm.user_id
	and tcm.course_id = us.course_id
inner join listvalue_field_value_detail fvm on
	fvm.id = us.module_id
inner join user_form_access ufa on
	ufa.form_code = fvm.value
	and ufa.user_id = us.id
where
	tcm.certificate_type = ''COURSECOMPLETION''
	and us.course_id in (1, 7, 10, 11)
	and ufa.state = ''MOVE_TO_PRODUCTION'' ),
pending as (
select
	*
from
	scheduled
union all
select
	*
from
	practiced
union all
select
	*
from
	production ),
userByType as (
select
	id,
	fullName as "name",
	''pending'' as "type",
	user_mobile_number as "mobileNumber",
	roleName as "roleName"
from
	totalUser tu
where
	tu.id not in (
	select
		id
	from
		pending )
union
select
	id,
	fullName as "name",
	''completed'' as "type",
	user_mobile_number as "mobileNumber",
	roleName as "roleName"
from
	Pending ),
userByLocation as (
select
	us.id,
	string_agg(distinct(lm.name), '','') as location
from
	users us
inner join um_user_location uul on
	uul.user_id = us.id
inner join location_master lm on
	uul.loc_id = lm.id
group by
	us.id )
select
	ut.*,
	ul.location
from
	userByType ut
left join userByLocation ul on
	ut.id = ul.id',true,'ACTIVE',NULL,true,'fe17992c-bd9f-483b-b371-981e0f2867ce'),
	 (80208,'2023-06-29 00:00:00',80208,'2023-06-29 00:00:00','system_configs_retrieve_all',NULL,'SELECT sc.system_key "key" , sc.key_value "value",sc.is_active "state" from system_configuration sc;',true,'ACTIVE',NULL,true,'76350dc8-cc58-4e6b-bcb5-1f13d9807fef'),
	 (74841,'2023-06-29 00:00:00',74841,'2023-06-29 00:00:00','mobile_menu_list','search,offset,limit','select
mr.role_id as id,
mm.menu_name, ur."name" as role_name from mobile_menu_role_relation mr
left join mobile_menu_master mm on mm.id = mr.menu_id
left join um_role_master ur on ur.id = mr.role_id
where case when ''#search#'' = ''null'' or mm.menu_name ilike ''%#search#%'' then
true else false end
order by mr.menu_id
limit #limit# offset #offset#',true,'ACTIVE',NULL,true,'68b5486f-42aa-40c1-ba8a-00a00750ee64'),
	 (60512,'2023-06-29 00:00:00',60512,'2023-06-29 00:00:00','update_location_type','level,name,isSohEnable,loggedInUserId,id,type','update location_type_master
set type = #type#,
name = #name#,
level = #level#,
is_soh_enable  = #isSohEnable#,
modified_by = #loggedInUserId#,
modified_on = now()
where id = #id#;',false,'ACTIVE',NULL,true,'4321cba3-50e7-40b0-8786-483438d77aa0'),
	 (1,'2023-06-29 00:00:00',1,'2023-06-29 00:00:00','retrieval_deleted_families','user_id,modified_on','select family_id from imt_family_location_change_detail where from_location_id in
        (select child_id from location_hierchy_closer_det where parent_id in
        (select loc_id from um_user_location where user_id = #user_id# and state = ''ACTIVE''))
        and (''#modified_on#'' = ''null'' or created_on >= ''#modified_on#'')',true,'ACTIVE','retrieve all deleted families for user',true,'5906f2c7-2cbf-4dc0-ab7b-5e0e826da24a'),
	 (74841,'2023-06-29 00:00:00',74841,'2023-06-29 00:00:00','mobile_feature_list',NULL,'select * from mobile_feature_master',true,'ACTIVE',NULL,true,'d0f06d2e-7e13-43ae-ba02-17bf9bc7ef1c'),
	 (74841,'2023-06-29 00:00:00',74841,'2023-06-29 00:00:00','check_constant_validity_mobile_feature_master','feature_name,is_edit,mobile_constant','select case
when #is_edit# and count(1) = 1 then true
when count(1) >= 1 then false else true end
as "isValid" from mobile_feature_master
where mobile_constant = ''#mobile_constant#''
or feature_name ilike ''#feature_name#'';',true,'ACTIVE',NULL,true,'095ca9c1-b995-47eb-80ce-00a1e3bae446'),
	 (74841,'2023-06-29 00:00:00',74841,'2023-06-29 00:00:00','retrieve_menu_config_role','id','select id,name from um_role_master um
where um.state = ''ACTIVE'' and
id not in (select distinct role_id from mobile_menu_role_relation
where case when role_id = (case when ''#id#'' != '''' then #id# else -1 end) then false else true end)',true,'ACTIVE',NULL,true,'9472ef61-7480-4fec-bcea-69badb3dc146'),
	 (74841,'2023-06-29 00:00:00',74841,'2023-06-29 00:00:00','insert_update_mobile_menu_master','feature_name,mobile_display_name,userId,mobile_constant','INSERT INTO mobile_feature_master (mobile_constant, feature_name, mobile_display_name, state, created_on, created_by)
VALUES(''#mobile_constant#'',''#feature_name#'', ''#mobile_display_name#'', ''ACTIVE'', now(), ''#userId#'')
ON CONFLICT (mobile_constant)
DO
   UPDATE SET mobile_constant = ''#mobile_constant#'',
   feature_name = ''#feature_name#'',
   mobile_display_name = ''#mobile_display_name#'',
   modified_on = now(),
   modified_by = ''#userId#'';',false,'ACTIVE',NULL,true,'d014dd38-06a9-47b3-9a26-f1bd54233867'),
	 (74841,'2023-06-29 00:00:00',74841,'2023-06-29 00:00:00','update_insert_mobile_menu_master','config_json,designationIds,menu_name,userId','delete from mobile_menu_role_relation
where role_id in (select cast(unnest(string_to_array(''#designationIds#'', '','')) as integer));

with menu_master as (
INSERT INTO mobile_menu_master
	(menu_name, config_json, created_on, created_by, modified_on , modified_by)
	VALUES (
        ''#menu_name#'', ''#config_json#'', now(), ''#userId#'', now(), ''#userId#''
    )
  returning id
)
INSERT INTO mobile_menu_role_relation(menu_id, role_id)
select (select id from menu_master), cast(unnest(string_to_array(''#designationIds#'', '','')) as integer) ;',false,'ACTIVE',NULL,true,'36897008-3d53-4b60-9102-77d6c0858300'),
	 (74841,'2023-06-29 00:00:00',74841,'2023-06-29 00:00:00','retrive_mobile_menu_master','id','with menu_role as (
	select * from mobile_menu_role_relation where role_id = #id#
)
, mobile_menu_fields as (
	select id, menu_name, json_array_elements(cast(config_json as json))->>''mobile_constant'' as mobile_constant,
	json_array_elements(cast(config_json as json))->>''order'' as order_no from mobile_menu_master where id = (select menu_id from menu_role limit 1)
)
select mmf.*,mfm.feature_name,mfm.state,mmr.role_id from mobile_menu_fields mmf
left join menu_role mmr on mmr.menu_id = mmf.id
left join mobile_feature_master mfm on mfm.mobile_constant = mmf.mobile_constant
order by order_no',true,'ACTIVE',NULL,true,'56c1e86c-6bdf-4abe-9b0a-d317b3c207a1'),
	 (74841,'2023-06-29 00:00:00',74841,'2023-06-29 00:00:00','delete_mobile_menu_role_relation','id','delete from mobile_menu_role_relation
where role_id = ''#id#''',false,'ACTIVE',NULL,true,'e50626c4-cd75-4413-af44-98d42b07909e');