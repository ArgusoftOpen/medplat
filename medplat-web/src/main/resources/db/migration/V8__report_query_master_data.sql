DELETE FROM public.report_query_master;

INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (91,1027,'2018-10-11 14:52:33.885',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with del as (
select res.id,res.other_danger_signs,rwcm.id as child_wpd_id,res.unique_health_id as "Health ID",res.name as "Name",coalesce(res.edd,''-'') as "Estimated Delivery Date",
case when res.date_of_delivery is not null then to_char(res.date_of_delivery,''DD/MM/YYYY'') else ''-'' end as "Delivery date",
case when res.date_of_delivery is not null then to_char(res.date_of_delivery,''HH24:MI:SS'') else ''-'' end as "Delivery time",
coalesce(case when res.delivery_place = ''HOSP'' then ''HOSPITAL'' when res.delivery_place = ''ON_THE_WAY'' then ''On the way'' else res.delivery_place end
,''-'') as "Delivery Place",rwcm.other_congential_deformity,
coalesce(res.delivery_done_by,''-'') as "Delivery Done  By",
coalesce(res.type_of_delivery,''-'') as "Type of delivery",
coalesce(referral.value,''-'') as "Referral",
case when rwcm.pregnancy_outcome = ''LBIRTH'' then ''Alive'' when rwcm.pregnancy_outcome = ''SBIRTH'' then ''Dead'' else ''-'' end as "Pregnancy outcome",
case when rwcm.pregnancy_outcome = ''LBIRTH'' then rwcm.gender else ''-'' end as "Gender",
case when rwcm.pregnancy_outcome = ''LBIRTH'' then coalesce(round(rwcm.birth_weight\:\:numeric,2)\:\:text,''-'') else ''-'' end as "Birth Weight",
coalesce(to_char(res.discharge_date\:\:date,''DD/MM/YYYY''),''-'') as "Discharge Date",
res.mother_alive as "Is Mother Alive",
coalesce(max(case when immunisation_given = ''OPV'' then to_char(given_on\:\:date,''DD/MM/YYYY'') end),''-'') as "OPV",
coalesce(max(case when immunisation_given = ''BCG'' then to_char(given_on\:\:date,''DD/MM/YYYY'') end),''-'') as "BCG",
coalesce(max(case when immunisation_given = ''HEPATITIS_B_0'' then to_char(given_on\:\:date,''DD/MM/YYYY'') end),''-'') as "HEP B",
coalesce(max(case when immunisation_given = ''VITAMIN_K'' then to_char(given_on\:\:date,''DD/MM/YYYY'') end),''-'') as "VIT K",
res.breast_feed as "Breast feeding within 1 hour",res."Cortico steriod given date",
''NA''\:\:text as "Misoprostol given date"
from 
(select rwmm.id,mem.unique_health_id,mem.first_name || '' '' || mem.last_name as name,to_char(mem.edd,''DD/MM/YYYY'') as edd,
rwmm.date_of_delivery,rwmm.delivery_place,rwmm.delivery_done_by,
rwmm.type_of_delivery,rwmm.pregnancy_outcome,rwmm.discharge_date,
case when rwmm.mother_alive is not null then case when rwmm.mother_alive = true then ''Y'' else ''N'' end else ''-'' end as mother_alive,
case when rwmm.breast_feeding_in_one_hour = true then ''Y'' else ''N'' end as breast_feed,rwmm.other_danger_signs,rwmm.referral_done,
rwmm.referral_place,case when rwmm.is_preterm_birth = true and rwmm.cortico_steroid_given = true then 
to_char(rwmm.date_of_delivery\:\:date,''DD/MM/YYYY'') else ''-'' end as "Cortico steriod given date"
from rch_wpd_mother_master rwmm 
inner join  imt_member mem on rwmm.member_id = mem.id 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = rwmm.location_id
where (#location_id# is not null and lhcd.parent_id = #location_id#)
and (#from_date# is null or rwmm.created_on >=(case when #from_date# is null then ''01/01/1970'' else ''#from_date#'' end)\:\:Date)
and (#to_date# is null or rwmm.created_on <(case when #to_date# is null then ''01/01/1970'' else (date (case when #to_date# is null then ''01/01/1970'' else ''#to_date#'' end) + integer ''1'')end)\:\:Date) 
) res
left join listvalue_field_value_detail referral on referral.id = res.referral_place\:\:bigint and res.referral_done = ''YES''
left join rch_wpd_child_master rwcm on rwcm.wpd_mother_id = res.id
left join rch_immunisation_master rim on rim.member_id = rwcm.member_id and rim.member_type = ''C''
group by res.id,res.other_danger_signs,referral.value,rwcm.pregnancy_outcome,rwcm.gender,rwcm.birth_weight,res.discharge_date,
res.mother_alive,res.breast_feed,res."Cortico steriod given date",res.unique_health_id,res.name,res.edd,
res.date_of_delivery,res.delivery_place,res.delivery_done_by,res.type_of_delivery,rwcm.id
#limit_offset#),mother_danger as (
	select coalesce(coalesce(string_agg(lfvd.value,'',''),del.other_danger_signs),''-'') as "Danger Signs",del.id from del
	left join rch_wpd_mother_danger_signs_rel danger on danger.wpd_id = del.id
	left join listvalue_field_value_detail lfvd on lfvd.id = danger.mother_danger_signs
	group by del.id,del.other_danger_signs
),child_defect as (
	select coalesce(coalesce(string_agg(lfvd.value,'',''),del.other_congential_deformity),''-'') as "Child Defects",del.child_wpd_id from del
	left join rch_wpd_child_congential_deformity_rel danger on danger.wpd_id = del.child_wpd_id
	left join listvalue_field_value_detail lfvd on lfvd.id = danger.congential_deformity
	group by del.child_wpd_id,other_congential_deformity
)


select ROW_NUMBER() over ()+SUBSTRING (''#limit_offset#'',POSITION(''offset'' in ''#limit_offset#'')+7)\:\:int as "Sr No", 
del."Health ID",del."Name",del."Estimated Delivery Date",del."Delivery date",del."Delivery time",del."Delivery Place",del."Delivery Done  By",
del."Type of delivery",mother_danger."Danger Signs",del."Referral",del."Pregnancy outcome",del."Gender",del."Birth Weight",child_defect."Child Defects",
del."Discharge Date",del."Is Mother Alive",del."Breast feeding within 1 hour",del."OPV",del."BCG",del."HEP B",del."VIT K",
del."Cortico steriod given date",del."Misoprostol given date"
from del left join mother_danger on del.id = mother_danger.id
left join child_defect on del.child_wpd_id = child_defect.child_wpd_id',true,'ACTIVE','97a1b55a-d394-47b2-bcce-592a2dbd53e6'),
	 (1213,66522,'2019-07-17 16:43:11.745',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','89d23be1-d8b2-49dd-8390-78e6e24afbfc'),
	 (132,409,'2019-01-17 19:30:14.837',1,'2021-01-13 20:22:06.427965',NULL,'',true,'ACTIVE','12addcc1-04a4-4c1e-8bff-455dd35a61fc'),
	 (1459,409,'2019-12-27 09:34:54.925',1,'2021-01-13 20:22:06.427965','monthyear,location_id','with loc_det as (
    select 
        case 
            when lm.type in (''D'', ''C'', ''Z'') then ''D''
            when lm.type in (''T'', ''B'') then ''T''
            when lm.type in (''P'', ''U'') then ''P''
            else lm.type end,
        lm.id as loc_id,
        lh.location_id,
        s.english_name as stateName,
        s.location_code as stateCode,
        d.english_name as districtName,
        d.location_code as districtCode,
        b.english_name as talukaName,
        lm.cm_dashboard_code as talukaCode,
        p.english_name as facilityName,
        case when lm.type = ''P'' then 1 when lm.type = ''U'' then 3 else null end as facilityCode
    from location_master lm
    left join location_level_hierarchy_master lh
    on lh.id = lm.location_hierarchy_id
    left join location_master s
    on lh.level1 = s.id and s.state = ''ACTIVE'' and s.name not ilike ''%delete%''
    left join location_master d
    on lh.level3 = d.id and d.state = ''ACTIVE'' and d.name not ilike ''%delete%''
    left join location_master b	
    on lh.level4 = b.id and b.state = ''ACTIVE'' and b.name not ilike ''%delete%''
    left join location_master p
    on lh.level5 = p.id and p.state = ''ACTIVE'' and p.name not ilike ''%delete%''
    where lm."type" in (''S'', ''C'', ''D'', ''B'', ''P'', ''U'', ''T'', ''R'', ''Z'')
    and lm.id in (select child_id from location_hierchy_closer_det where parent_id = #location_id# and "depth" = 1)
),
ddo_api_report_det as (
    select 
        lh.parent_id as loc_id
        ,sum(fi_partial_numerator) as total_fi_partial_numerator
        ,sum(fi_total_denominator) as total_fi_total_denominator
        ,sum(early_registration_numerator) as total_early_registration_numerator
        ,sum(pregnant_women_registration_denominator) as total_pregnant_women_registration_denominator
        ,sum(pmsma_trimester_numerator) as total_pmsma_trimester_numerator
        ,sum(pmsma_total_denominator) as total_pmsma_total_denominator
        ,sum(sex_ratio_male) as total_sex_ration_male
        ,sum(sex_ratio_female) as total_sex_ration_female
		,sum(sex_ratio_male + sex_ratio_female ) as child
        ,sum(anemia_treated_numerator) as total_anemia_treated_numerator
        ,sum(anemia_tested_denominator) as total_anemia_tested_denominator
        ,sum(infant_death_actual_numerator) as total_infant_death_actual_numerator
        ,round(sum(sex_ratio_male + sex_ratio_female ) * 30 / 1000,0) as total_infant_death_estimated_denominator
        ,sum(low_birth_baby_partial_numerator) as total_low_birth_baby_partial_numerator
        ,sum(low_birth_baby_total_denominator) as total_low_birth_baby_total_denominator
        ,sum(institutional_deliveries_numerator) as total_institutional_deliveries_numerator
        ,sum(estimated_deliveries_denominator) as total_estimated_deliveries_denominator
        ,sum(maternal_death_actual_numerator) as total_maternal_death_actual_numerator
        ,round(sum(sex_ratio_male + sex_ratio_female ) * 87 / 100000,0)  as total_maternal_death_estimated_denominator
        ,sum(ppiucd_inserted_numerator) as total_ppiucd_inserted_numerator
        ,sum(ppiucd_institutional_denominator) as total_ppiuce_institutional_denominator
    from cm_dashboard_ddo_kpi_detail as cm , location_hierchy_closer_det lh
    where cm.month_year = to_date(case when ''#monthyear#'' = ''null'' then null else ''#monthyear#'' end, ''MM-DD-YYYY'')
    and cm.location_id = lh.child_id and lh.parent_id in (select loc_id from loc_det)
    group by lh.parent_id
),
ddo_api_result as (
    select 
        EXTRACT(YEAR FROM to_date(case when ''#monthyear#'' = ''null'' then null else ''#monthyear#'' end, ''MM-DD-YYYY'')) as Year,
        EXTRACT(MONTH FROM to_date(case when ''#monthyear#'' = ''null'' then null else ''#monthyear#'' end, ''MM-DD-YYYY'')) as Month,
        loc_det.type as "Location Level",
        loc_det.districtCode as "District Code",
        loc_det.districtName as "District Name",
        loc_det.talukaCode as "Taluka Code",
        loc_det.talukaName as "Taluka Name",
        loc_det.facilityName as "Facility Name",
        loc_det.facilityCode as "Facility Code",
        COALESCE(ddo_api_report_det.total_fi_partial_numerator, 0) as "Full Immunization achieved Numerator",
        COALESCE(ddo_api_report_det.total_fi_total_denominator, 0) as "Live Birth reg.Denominator",
        COALESCE(round(((ddo_api_report_det.total_fi_partial_numerator * 100.0) / NULLIF(ddo_api_report_det.total_fi_total_denominator, 0)), 2), 0) as "% Fully Immunization",
        
        COALESCE(ddo_api_report_det.total_early_registration_numerator, 0) as "Total Early ANC Registration Numerator",
        COALESCE(ddo_api_report_det.total_pregnant_women_registration_denominator, 0) as "Total Pregnant Women Registration Denominator",
        COALESCE(round(((ddo_api_report_det.total_early_registration_numerator * 100.0) / NULLIF(ddo_api_report_det.total_pregnant_women_registration_denominator, 0)), 2), 0) as "% Early  ANC Registration Against Pregnanat Women Registerd",
        
        COALESCE(ddo_api_report_det.total_pmsma_trimester_numerator, 0) as "Total Pmsma Trimester Numerator",
        COALESCE(ddo_api_report_det.total_pmsma_total_denominator, 0) as "Total Pmsma Denominator",
        COALESCE(round(((ddo_api_report_det.total_pmsma_trimester_numerator * 100.0) / NULLIF(ddo_api_report_det.total_pmsma_total_denominator, 0)), 2), 0) as "% Of Second And Third Trimster Antenatal Against Under Pmsma",

        COALESCE(ddo_api_report_det.total_sex_ration_male, 0) as "Total Sex Ratio Male",
        COALESCE(ddo_api_report_det.total_sex_ration_female, 0) as "Total Sex Ratio Female",
        COALESCE(round(((ddo_api_report_det.total_sex_ration_female * 1000.0) / NULLIF(ddo_api_report_det.total_sex_ration_male, 0)), 0), 0) as "Sex Ratio At Birth",

        COALESCE(ddo_api_report_det.total_anemia_treated_numerator, 0) as "Total Severe Anemia Treated Numerator",
        COALESCE(ddo_api_report_det.total_anemia_tested_denominator, 0) as "Total Severe Anemia Tested Denominator",
        COALESCE(round(((ddo_api_report_det.total_anemia_treated_numerator * 100.0) / NULLIF(ddo_api_report_det.total_anemia_tested_denominator, 0)), 2), 0) as "% Pregnant Woman Having Severe  Anemia Treated Against Severe Anemia tested",

        COALESCE(ddo_api_report_det.total_infant_death_actual_numerator, 0) as "Total Infant Death Actual Numerator",
        COALESCE(ddo_api_report_det.total_infant_death_estimated_denominator, 0) as "Total Infant Death Estimated Denominator",
        COALESCE(round(((ddo_api_report_det.total_infant_death_actual_numerator * 100.0) / NULLIF(ddo_api_report_det.total_infant_death_estimated_denominator, 0)), 2), 0) as "% Infant Death Reported Against Estimated Infant Deaths",

        COALESCE(ddo_api_report_det.total_low_birth_baby_partial_numerator, 0) as "Total Low Birth Weight Baby Numerator",
        COALESCE(ddo_api_report_det.total_low_birth_baby_total_denominator, 0) as "Total Live Birth Registered Denominator",
        COALESCE(round(((ddo_api_report_det.total_low_birth_baby_partial_numerator * 100.0) / NULLIF(ddo_api_report_det.total_low_birth_baby_total_denominator, 0)), 2), 0) as "%Low Birth Weight Baby against Live Birth reg.",

        COALESCE(ddo_api_report_det.total_institutional_deliveries_numerator, 0) as "Total Institutional Deliveries Numerator",
        COALESCE(ddo_api_report_det.total_estimated_deliveries_denominator, 0) as "Total Registered Deliveries Denominator",
        COALESCE(round(((ddo_api_report_det.total_institutional_deliveries_numerator * 100.0) / NULLIF(ddo_api_report_det.total_estimated_deliveries_denominator, 0)), 2), 0) as "% Institutional Deliveries Against Estimated Delivery",

        COALESCE(ddo_api_report_det.total_maternal_death_actual_numerator, 0) as "Total Maternal Death Actual Numerator",
        COALESCE(ddo_api_report_det.total_maternal_death_estimated_denominator, 0) as "Total Maternal Death Estimated Denominator",
        COALESCE(round(((ddo_api_report_det.total_maternal_death_actual_numerator * 100.0) / NULLIF(ddo_api_report_det.total_maternal_death_estimated_denominator, 0)), 2), 0) as "% Maternal Deaths Reported Against Estimated",

        COALESCE(ddo_api_report_det.total_ppiucd_inserted_numerator, 0) as "Total Ppiucd Inserted Numerator",
        COALESCE(ddo_api_report_det.total_ppiuce_institutional_denominator, 0) as "Total Ppiucd Institutional Denominator",
        COALESCE(round(((ddo_api_report_det.total_ppiucd_inserted_numerator * 100.0) / NULLIF(ddo_api_report_det.total_ppiuce_institutional_denominator, 0)), 2), 0) as "% Ppiucd Inserted Against Institutional Deliveries",
        
        current_date as "As On Date"

    from loc_det
    left join ddo_api_report_det on loc_det.loc_id = ddo_api_report_det.loc_id
    order by loc_det.loc_id
)
select * from ddo_api_result

union all 

select 
   
		null,
        null,
        ''<b>Total</b>'',
        null,
        null,
        null,
        null,
        null,
        null,
        sum("Full Immunization achieved Numerator"),
        sum("Live Birth reg.Denominator"),
        round((( sum("Full Immunization achieved Numerator") * 100.0) / NULLIF(sum("Live Birth reg.Denominator"), 0)), 2),
        
        sum("Total Early ANC Registration Numerator"),
        sum("Total Pregnant Women Registration Denominator"),
        round(((sum("Total Early ANC Registration Numerator") * 100.0) / NULLIF(sum("Total Pregnant Women Registration Denominator"), 0)), 2),
        
        sum("Total Pmsma Trimester Numerator"),
        sum("Total Pmsma Denominator"),
        round(((sum("Total Pmsma Trimester Numerator") * 100.0) / NULLIF(sum("Total Pmsma Denominator"), 0)), 2),

        sum("Total Sex Ratio Male"),
        sum("Total Sex Ratio Female"),
        round(((sum("Total Sex Ratio Female") * 1000.0) / NULLIF(sum("Total Sex Ratio Male"), 0)), 0),

        sum("Total Severe Anemia Treated Numerator"),
        sum("Total Severe Anemia Tested Denominator"),
        round(((sum("Total Severe Anemia Treated Numerator") * 100.0) / NULLIF(sum("Total Severe Anemia Tested Denominator"), 0)), 2),

        sum("Total Infant Death Actual Numerator"),
        sum("Total Infant Death Estimated Denominator"),
        round(((sum("Total Infant Death Actual Numerator") * 100.0) / NULLIF(sum("Total Infant Death Estimated Denominator"), 0)), 2),

        sum("Total Low Birth Weight Baby Numerator"),
        sum("Total Live Birth Registered Denominator"),
        round(((sum("Total Low Birth Weight Baby Numerator") * 100.0) / NULLIF(sum("Total Live Birth Registered Denominator"), 0)), 2),

        sum("Total Institutional Deliveries Numerator"),
        sum("Total Registered Deliveries Denominator"),
        round(((sum("Total Institutional Deliveries Numerator") * 100.0) / NULLIF(sum("Total Registered Deliveries Denominator"), 0)), 2),

        sum("Total Maternal Death Actual Numerator"),
        sum("Total Maternal Death Estimated Denominator"),
        round(((sum("Total Maternal Death Actual Numerator") * 100.0) / NULLIF(sum("Total Maternal Death Estimated Denominator"), 0)), 2),

        sum("Total Ppiucd Inserted Numerator"),
        sum("Total Ppiucd Institutional Denominator"),
        round(((sum("Total Ppiucd Inserted Numerator") * 100.0) / NULLIF(sum("Total Ppiucd Institutional Denominator"), 0)), 2),
        
        null
	from ddo_api_result',true,'ACTIVE','3eb5429f-9483-4c99-ac78-fa726e33270c'),
	 (499,63746,'2019-02-14 15:39:29.733',1,'2021-01-13 20:22:06.427965','from_date,to_date,location_id','with location_det as(
select child_id as loc_id from location_hierchy_closer_det where parent_id = #location_id#
),dates as(
select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'')+interval ''1 day'' - interval ''1 millisecond'' as to_date
),diseases_det as (
	select 1 as srno,''Severe Maternal Anemia'' as name, ''%Severe Maternal Anemia%'' as disease_name,''Severe Maternal Anemia'' as hidden_name
	union
	select 2,''Pregnancy induced hypertension'' as name, ''%High BP%'' as disease_name,''High BP'' as hidden_name
	union
	select 3,''Very Low Birth Weight'' as name, ''%Very Low Birth Weight%'' as disease_name, ''Very Low Birth Weight'' as hidden_name
	union
	select 4,''SAM'' as name, ''%SAM%'' as disease_name,''SAM'' as hidden_name
),pregnancy_reg_det as (
select pregnancy_reg_id,member_id,cur_severe_anemia,cur_blood_pressure_issue
from rch_pregnancy_analytics_details,dates,location_det
where reg_service_date between dates.from_date and dates.to_date
and member_current_location_id = location_det.loc_id
),delivery_reg_det as (
select member_id,birth_weight
from rch_child_analytics_details,dates,location_det
where dob between dates.from_date and dates.to_date
and rch_child_analytics_details.member_id is not null
and rch_child_analytics_details.loc_id = location_det.loc_id
),child_6_month_to_6_year_det as (
select member_id,is_sam_child
from rch_child_analytics_details,dates,location_det
where dob between dates.from_date - interval ''6 year'' and dates.to_date - interval ''6 month''
and member_id is not null and rch_child_analytics_details.loc_id = location_det.loc_id
),pregnancy_reg_cnt_det as(
select count(*) as total_preg_reg,sum(case when cur_severe_anemia then 1 else 0 end) new_sever_anemia_identify
,sum(case when cur_blood_pressure_issue then 1 else 0 end) as new_hypertension_identify
from pregnancy_reg_det
),delivery_reg_cnt_det as(
select count(*) as total_delivery,sum(case when birth_weight < 3 then 1 else 0 end) as new_low_birth_weight
from delivery_reg_det
),child_6_month_to_6_year_cnt_det as(
select count(*) as total_child,sum(case when is_sam_child then 1 else 0 end) as sam_child 
from child_6_month_to_6_year_det
),gvk_status as(
select t.name,sum(t.conformed_cases) as conformed_cases
,sum(agreed_to_enroll) as agreed_to_enroll
,sum(status) as status
from (
select diseases_det.name
,gvk_high_risk_follow_up_usr_info.member_id
,gvk_high_risk_follow_up_usr_info.pregnancy_reg_det_id
,max(case when gvk_high_risk_follow_up_responce.is_high_risk_condition_confirmed = ''true'' then 1 else 0 end) as conformed_cases
,max(case when is_beneficiary_willing_to_helped = true then 1 else 0 end) as agreed_to_enroll
,max(case when diseases_det.name = ''Severe Maternal Anemia'' and (is_beneficiary_received_iron_sucrose_injection_anemia = ''true'' or 
			cast(injection_count_anemia as int) > (2) or 
			is_beneficiary_received_blood_lastweek_anemia = ''true'') then 1
		when diseases_det.name = ''Pregnancy induced hypertension'' and is_beneficiary_received_drugs_for_high_bp = ''true''
		then 1
		when diseases_det.name = ''Very Low Birth Weight'' and is_new_birth_child_admitted_to_hospital_for_low_birth_weight = ''true''
		then 1
		when diseases_det.name = ''SAM'' and is_beneficiary_child_admitted_to_cmtc_sam = ''true'' then 1
		else 0 end) as status
from gvk_high_risk_follow_up_usr_info,gvk_high_risk_follow_up_responce,diseases_det,pregnancy_reg_det
where gvk_high_risk_follow_up_usr_info.id = gvk_high_risk_follow_up_responce.gvk_high_risk_usr_id
and gvk_high_risk_follow_up_usr_info.diseases like diseases_det.disease_name
and  gvk_high_risk_follow_up_usr_info.pregnancy_reg_det_id = pregnancy_reg_det.pregnancy_reg_id
and diseases_det.name in (''Severe Maternal Anemia'',''Pregnancy induced hypertension'')
group by diseases_det.name,gvk_high_risk_follow_up_usr_info.member_id,gvk_high_risk_follow_up_usr_info.pregnancy_reg_det_id
union
select diseases_det.name
,gvk_high_risk_follow_up_usr_info.member_id
,gvk_high_risk_follow_up_usr_info.pregnancy_reg_det_id
,max(case when gvk_high_risk_follow_up_responce.is_high_risk_condition_confirmed = ''true'' then 1 else 0 end) as conformed_cases
,max(case when is_beneficiary_willing_to_helped = true then 1 else 0 end) as agreed_to_enroll
,max(case when diseases_det.name = ''Severe Maternal Anemia'' and (is_beneficiary_received_iron_sucrose_injection_anemia = ''true'' or 
			cast(injection_count_anemia as int) > (2) or 
			is_beneficiary_received_blood_lastweek_anemia = ''true'') then 1
		when diseases_det.name = ''Pregnancy induced hypertension'' and is_beneficiary_received_drugs_for_high_bp = ''true''
		then 1
		when diseases_det.name = ''Very Low Birth Weight'' and is_new_birth_child_admitted_to_hospital_for_low_birth_weight = ''true''
		then 1
		when diseases_det.name = ''SAM'' and is_beneficiary_child_admitted_to_cmtc_sam = ''true'' then 1
		else 0 end) as status
from gvk_high_risk_follow_up_usr_info,gvk_high_risk_follow_up_responce,diseases_det,delivery_reg_det
where gvk_high_risk_follow_up_usr_info.id = gvk_high_risk_follow_up_responce.gvk_high_risk_usr_id
and gvk_high_risk_follow_up_usr_info.diseases like diseases_det.disease_name
and  gvk_high_risk_follow_up_usr_info.member_id = delivery_reg_det.member_id
and diseases_det.name in (''Very Low Birth Weight'')
group by diseases_det.name,gvk_high_risk_follow_up_usr_info.member_id,gvk_high_risk_follow_up_usr_info.pregnancy_reg_det_id
union
select diseases_det.name
,gvk_high_risk_follow_up_usr_info.member_id
,gvk_high_risk_follow_up_usr_info.pregnancy_reg_det_id
,max(case when gvk_high_risk_follow_up_responce.is_high_risk_condition_confirmed = ''true'' then 1 else 0 end) as conformed_cases
,max(case when is_beneficiary_willing_to_helped = true then 1 else 0 end) as agreed_to_enroll
,max(case when diseases_det.name = ''Severe Maternal Anemia'' and (is_beneficiary_received_iron_sucrose_injection_anemia = ''true'' or 
			cast(injection_count_anemia as int) > (2) or 
			is_beneficiary_received_blood_lastweek_anemia = ''true'') then 1
		when diseases_det.name = ''Pregnancy induced hypertension'' and is_beneficiary_received_drugs_for_high_bp = ''true''
		then 1
		when diseases_det.name = ''Very Low Birth Weight'' and is_new_birth_child_admitted_to_hospital_for_low_birth_weight = ''true''
		then 1
		when diseases_det.name = ''SAM'' and is_beneficiary_child_admitted_to_cmtc_sam = ''true'' then 1
		else 0 end) as status
from gvk_high_risk_follow_up_usr_info,gvk_high_risk_follow_up_responce,diseases_det,child_6_month_to_6_year_det
where gvk_high_risk_follow_up_usr_info.id = gvk_high_risk_follow_up_responce.gvk_high_risk_usr_id
and gvk_high_risk_follow_up_usr_info.diseases like diseases_det.disease_name
and  gvk_high_risk_follow_up_usr_info.member_id = child_6_month_to_6_year_det.member_id
and diseases_det.name in (''SAM'')
group by diseases_det.name,gvk_high_risk_follow_up_usr_info.member_id,gvk_high_risk_follow_up_usr_info.pregnancy_reg_det_id
) as t
group by t.name
)
select diseases_det.name as "High risk condition",diseases_det.hidden_name as hidden_high_risk
,case when diseases_det.name in (''Severe Maternal Anemia'',''Pregnancy induced hypertension'') then pregnancy_reg_cnt_det.total_preg_reg
when diseases_det.name in (''Very Low Birth Weight'') then delivery_reg_cnt_det.total_delivery
when diseases_det.name in (''SAM'') then child_6_month_to_6_year_cnt_det.total_child
else 0 end as "Denominator"
,case when diseases_det.name in (''Severe Maternal Anemia'') then case when pregnancy_reg_cnt_det.new_sever_anemia_identify is null then 0 else pregnancy_reg_cnt_det.new_sever_anemia_identify end
when diseases_det.name in (''Pregnancy induced hypertension'') then case when pregnancy_reg_cnt_det.new_hypertension_identify is null then 0 else pregnancy_reg_cnt_det.new_hypertension_identify end 
when diseases_det.name in (''Very Low Birth Weight'') then case when delivery_reg_cnt_det.new_low_birth_weight is null then 0 else delivery_reg_cnt_det.new_low_birth_weight end 
when diseases_det.name in (''SAM'') then case when child_6_month_to_6_year_cnt_det.sam_child is null then 0 else child_6_month_to_6_year_cnt_det.sam_child end 
else 0 end as "Status  of reporting A"
,coalesce(gvk_status.conformed_cases,0) as "Number of confirmed cases B"
,coalesce(gvk_status.agreed_to_enroll,0) as "Number of cases who agreed to enroll in tracking program C"
,coalesce(gvk_status.status,0) as "Status of treatment (as recorded by call center) D"
from diseases_det 
left join gvk_status on diseases_det.name = gvk_status.name
inner join pregnancy_reg_cnt_det on true = true
inner join delivery_reg_cnt_det on true = true
inner join child_6_month_to_6_year_cnt_det on true = true
order by srno',true,'ACTIVE','2be51cc9-fa87-4000-a387-90b9913d0afc'),
	 (1210,60512,'2019-07-17 14:44:35.143',1,'2021-01-13 20:22:06.427965','from_date,to_date,location_id','with health_infra_details as (
	select id,name from health_infrastructure_details
	where location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and (is_cmtc or is_nrc)
),admissions_pedia_defaulter_death_count as (
	select health_infra_details.id as child_id,
	count(*)  as total,
	sum(case when child_cmtc_nrc_admission_detail.specialist_pediatrician_visit_flag then 1 else 0 end) as pedia,
	sum(case when child_cmtc_nrc_screening_detail.state = ''DEFAULTER'' then 1 else 0 end) as defaulter,
	sum(case when child_cmtc_nrc_screening_detail.state = ''DEATH'' then 1 else 0 end) as death
	from health_infra_details
	inner join child_cmtc_nrc_admission_detail on health_infra_details.id = child_cmtc_nrc_admission_detail.screening_center
	inner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id
	where child_cmtc_nrc_admission_detail.admission_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	group by health_infra_details.id
),discharge_transfer_count as (
	select health_infra_details.id as child_id,
	count(*)  as total,
	sum(case when child_cmtc_nrc_discharge_detail.higher_facility_referral_place is not null then 1 else 0 end) as medicalTransferCount
	from health_infra_details
	inner join child_cmtc_nrc_admission_detail on health_infra_details.id = child_cmtc_nrc_admission_detail.screening_center
	inner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id
	inner join child_cmtc_nrc_discharge_detail on child_cmtc_nrc_discharge_detail.id = child_cmtc_nrc_screening_detail.discharge_id
	where child_cmtc_nrc_admission_detail.admission_date between 
		(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	group by health_infra_details.id
),followups_child_ids as(
	select health_infra_details.id as health_id, 
	child_cmtc_nrc_follow_up.child_id, child_cmtc_nrc_follow_up.follow_up_visit
	from health_infra_details
	inner join child_cmtc_nrc_admission_detail on health_infra_details.id = child_cmtc_nrc_admission_detail.screening_center
	inner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id
	inner join child_cmtc_nrc_follow_up on child_cmtc_nrc_follow_up.admission_id = child_cmtc_nrc_admission_detail.id
	where child_cmtc_nrc_admission_detail.admission_date between 
		(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	group by health_infra_details.id, child_cmtc_nrc_follow_up.child_id, child_cmtc_nrc_follow_up.follow_up_visit
),followups_count as (
	select followups_child_ids.health_id,
	sum(case when followups_child_ids.follow_up_visit=1 then 1 else 0 end) as followup1,
	sum(case when followups_child_ids.follow_up_visit=2 then 1 else 0 end) as followup2,
	sum(case when followups_child_ids.follow_up_visit=3 then 1 else 0 end) as followup3
	from followups_child_ids 
	group by followups_child_ids.health_id
),admitted_child_ids as (
	select 
	child_cmtc_nrc_admission_detail.id,
	child_cmtc_nrc_admission_detail.child_id,
	health_infra_details.id as health_id
	from health_infra_details
	inner join child_cmtc_nrc_admission_detail on health_infra_details.id = child_cmtc_nrc_admission_detail.screening_center
	inner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id
	where child_cmtc_nrc_admission_detail.admission_date between 
		(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	group by health_infra_details.id,child_cmtc_nrc_admission_detail.id,child_cmtc_nrc_admission_detail.child_id
),average_weight_gain_count as (
	select avg(child_cmtc_nrc_weight_detail.weight) as avg_wt,admitted_child_ids.health_id from admitted_child_ids
	inner join child_cmtc_nrc_weight_detail on child_cmtc_nrc_weight_detail.admission_id = admitted_child_ids.id
	group by child_cmtc_nrc_weight_detail.admission_id,admitted_child_ids.health_id
), avg_loc_cnt as (
	select average_weight_gain_count.health_id,
	sum(case when avg_wt>5 then 1 else 0 end) as avg_wt_5,
	sum(case when avg_wt>8 then 1 else 0 end) as avg_wt_8
	from average_weight_gain_count
	group by average_weight_gain_count.health_id
),weight_gain_count as (
	select health_infra_details.id as health_id,
	sum(case when 
		(round(child_cmtc_nrc_discharge_detail.weight - child_cmtc_nrc_admission_detail.weight_at_admission)
			*100.0/child_cmtc_nrc_admission_detail.weight_at_admission)>=15 then 1 else 0 end) as weightGain
	from health_infra_details
	inner join child_cmtc_nrc_admission_detail on health_infra_details.id = child_cmtc_nrc_admission_detail.screening_center
	inner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id
	inner join child_cmtc_nrc_discharge_detail on child_cmtc_nrc_discharge_detail.id = child_cmtc_nrc_screening_detail.discharge_id
	where child_cmtc_nrc_admission_detail.admission_date between 
		(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	group by health_infra_details.id
), det as (
	select row_number() over() as sr_no, 
	health_infra_details.name,
	health_infra_details.id as hidden_health_id,
	coalesce(admissions_pedia_defaulter_death_count.total,0) as admissions_count,
	coalesce(admissions_pedia_defaulter_death_count.pedia,0) as pedia_count,
	coalesce(discharge_transfer_count.total,0) as discharge_count,
	coalesce(admissions_pedia_defaulter_death_count.defaulter,0) as defaulter_count,
	coalesce(discharge_transfer_count.medicalTransferCount,0) as medical_transfer_count,
	coalesce(admissions_pedia_defaulter_death_count.death,0) as death_count,
	coalesce(avg_loc_cnt.avg_wt_5,0) as average_count_5,
	coalesce(avg_loc_cnt.avg_wt_8,0) as average_count_8,
	coalesce(followups_count.followup1,0) as followup1_count,
	coalesce(followups_count.followup2,0) as followup2_count,
	coalesce(followups_count.followup3,0) as followup3_count,
	coalesce(weight_gain_count.weightGain,0) as weight_gain_count
	from health_infra_details
	left join admissions_pedia_defaulter_death_count on health_infra_details.id = admissions_pedia_defaulter_death_count.child_id
	left join discharge_transfer_count on health_infra_details.id = discharge_transfer_count.child_id
	left join avg_loc_cnt on health_infra_details.id = avg_loc_cnt.health_id
	left join followups_count on health_infra_details.id = followups_count.health_id
	left join weight_gain_count on health_infra_details.id = weight_gain_count.health_id
)
select row_number() over() as "Sr. no", 
det.name as "Facility Name",
det.hidden_health_id,
det.admissions_count as "No. of children admitted at CMTC/NRC",
det.pedia_count as "Child Visited by Pediatrician",
	case when (det.pedia_count = 0 or det.pedia_count is null) then 0 else 
	round(det.pedia_count*100.0/admissions_count,2) end as "percent_col_Child Visited by Pediatrician",
discharge_count as "Discharge from facility",
	case when (discharge_count = 0 or discharge_count is null) then 0 else 
	round(discharge_count*100.0/admissions_count,2) end as "percent_col_Discharge from facility",
defaulter_count as "Defaulters",
	case when (defaulter_count = 0 or defaulter_count is null) then 0 else 
	round(defaulter_count*100.0/admissions_count,2) end as "percent_col_Defaulters",
medical_transfer_count as "Children Medical Transfer",
	case when (medical_transfer_count = 0 or medical_transfer_count is null) then 0 else
	round(medical_transfer_count*100.0/admissions_count,2) end as "percent_col_Children Medical Transfer",	
death_count as "Child Death",
	case when (death_count = 0 or death_count is null) then 0 else 
	round(death_count*100.0/admissions_count,2) end as "percent_col_Child Death",
det.followup1_count as "1st Follow up visit",
    case when (det.followup1_count = 0 or det.followup1_count is null)then 0 else 
	round(det.followup1_count*100.0/det.admissions_count,2) end as "percent_col_1st Follow up visit",
det.followup2_count as "2nd Follow up visit",
	case when (det.followup2_count = 0 or det.followup2_count is null)then 0 else
	round(det.followup2_count*100.0/det.admissions_count,2) end as "percent_col_2nd Follow up visit",
det.followup3_count as "3rd Follow up visit",
    case when (det.followup3_count = 0 or det.followup3_count is null) then 0 else 
	round(det.followup3_count*100.0/det.admissions_count,2) end as "percent_col_3rd Follow up visit",
average_count_5 as "No. of children with Weight gain more then 5gm/kg/day",
	case when (average_count_5 = 0 or average_count_5 is null) then 0 else
	round(average_count_5*100.0/admissions_count,2) end as "percent_col_No. of children with Weight gain more then 5gm/kg/day",
average_count_8 as "No. of children with Weight gain more then 8gm/kg/day",
	case when (average_count_8 = 0 or average_count_8 is null) then 0 else
	round(average_count_8*100.0/admissions_count,2) end as "percent_col_No. of children with Weight gain more then 8gm/kg/day",
det.weight_gain_count as "No of children with 15% weight gain"
from det
union all
select null,
''<b>Total<b>'',
#location_id#,
sum(det.admissions_count),
sum(det.pedia_count),
		case when (sum(det.pedia_count) = 0 or sum(det.pedia_count) is null) then 0 else 
		round(sum(det.pedia_count)*100.0/sum(det.admissions_count),2) end,
sum(det.discharge_count),
		case when (sum(det.discharge_count) = 0 or sum(det.discharge_count) is null) then 0 else 
		round(sum(det.discharge_count)*100.0/sum(det.admissions_count),2) end,
sum(det.defaulter_count),
		case when (sum(det.defaulter_count) = 0 or sum(det.defaulter_count) is null) then 0 else 
		round(sum(det.defaulter_count)*100.0/sum(det.admissions_count),2) end,
sum(det.medical_transfer_count),
		case when (sum(det.medical_transfer_count) = 0 or sum(det.medical_transfer_count) is null) then 0 else
		round(sum(det.medical_transfer_count)*100.0/sum(det.admissions_count),2) end,
sum(det.death_count),
		case when (sum(det.death_count) = 0 or sum(det.death_count) is null) then 0 else 
		round(sum(det.death_count)*100.0/sum(det.admissions_count),2) end,
sum(det.followup1_count),
		case when (sum(det.followup1_count) = 0 or sum(det.followup1_count) is null) then 0 else 
		round(sum(det.followup1_count)*100.0/sum(det.admissions_count),2) end,
sum(det.followup2_count),
		case when (sum(det.followup2_count) = 0 or sum(det.followup2_count) is null) then 0 else
		round(sum(det.followup2_count)*100.0/sum(det.admissions_count),2) end,
sum(det.followup3_count),
		case when (sum(det.followup3_count) = 0 or sum(det.followup3_count) is null) then 0 else 
		round(sum(det.followup3_count)*100.0/sum(det.admissions_count),2) end,
sum(det.average_count_5),
		case when (sum(det.average_count_5) = 0 or sum(det.average_count_5) is null) then 0 else
		round(sum(det.average_count_5)*100.0/sum(det.admissions_count),2) end,
sum(det.average_count_8),
		case when (sum(det.average_count_8) = 0 or sum(det.average_count_8) is null) then 0 else
		round(sum(det.average_count_8)*100.0/sum(det.admissions_count),2) end,
sum(det.weight_gain_count)		
from det',true,'ACTIVE','704aa45e-9f21-4249-aaab-c4173d998d33'),
	 (279,58981,'2019-02-07 18:04:19.796',1,'2021-01-13 20:22:06.427965',NULL,'select id,first_name || '' '' || last_name || ''('' || user_name || '')'' as name from um_user where role_id in (select role_id from um_role_category cat
inner join listvalue_field_value_detail list on cat.category_id = list.id and list.code = ''GVKEMRI_RO'') order by name;',true,'ACTIVE','6be06b55-2d45-424c-929c-9b4870a441c7'),
	 (1740,60512,'2020-09-10 10:02:38.834',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id','with prefered_language as(
	select case when prefered_language = ''EN'' then true else false end as is_english
	from um_user
	where id = #loggedInUserId#
),distinct_health_infras as (
	select distinct fsam_admission_screening_center from child_cmtc_nrc_analytics_details
),dates as (
    select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date
),health_infra_details as (
	select id,
	case when is_cmtc or is_nrc or is_sncu then name_in_english else concat(name_in_english,'' (INACTIVE)'') end as name
	from health_infrastructure_details
	where location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and (
		is_cmtc
		or is_nrc
		or is_sncu
		or id in (select fsam_admission_screening_center from distinct_health_infras)
	)
),health_infra_wise_analytics as (
	select health_infra_details.id as child_id,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.less_than_6_months_admitted) as less_than_6_months_admitted,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.above_6_months_admitted) as above_6_months_admitted,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.less_than_3_sd) as less_than_3_sd,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.muac_less_than_11_5) as muac_less_than_11_5,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.sd_and_muac) as sd_and_muac,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.oedema) as oedema,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.height_less_than_45) as height_less_than_45,
	sum(inpatient_days) as inpatient_days,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.visited_by_pediatrician) as visited_by_pediatrician,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.discharge_from_facility) as discharge_from_facility,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.cured) as cured,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.defaulters) as defaulters,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.weight_gain_not_15) as weight_gain_not_15,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.death) as death,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.fsam_follow_up_visit_1) as follow_up_visit_1,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.fsam_follow_up_visit_2) as follow_up_visit_2,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.fsam_follow_up_visit_3) as follow_up_visit_3,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.sam_to_mam) as sam_to_mam,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.sam_to_sam) as sam_to_sam,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.weight_gain_5gm_kg_day) as weight_gain_5gm_kg_day,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.weight_gain_8gm_kg_day) as weight_gain_8gm_kg_day,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.referred_for_cmam) as referred_for_cmam,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.weight_gain_15) as weight_gain_15,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.weight_gain_15_at_end_of_program) as weight_gain_15_at_end_of_program
	from health_infra_details
	inner join child_cmtc_nrc_health_facility_wise_analytics_wise_details on health_infra_details.id = child_cmtc_nrc_health_facility_wise_analytics_wise_details.health_infra_id
	inner join dates on child_cmtc_nrc_health_facility_wise_analytics_wise_details.month_year between dates.from_date and dates.to_date
	group by health_infra_details.id
),medical_transfer_details as (
	select health_infra_details.id as child_id,
	count(*) as medical_transfer
	from health_infra_details
	inner join child_cmtc_nrc_referral_detail on health_infra_details.id = child_cmtc_nrc_referral_detail.referred_from
	inner join dates on child_cmtc_nrc_referral_detail.referred_date between dates.from_date and dates.to_date
	group by health_infra_details.id
), det as (
	select row_number() over() as sr_no,
	region.english_name as region,
	district.english_name as district,
	block.english_name as block,
	health_infra_details.name,
	health_infrastructure_details.funded_by,
	health_infra_details.id as hidden_health_id,
	health_infrastructure_details.no_of_beds as no_of_beds,
	coalesce(health_infra_wise_analytics.less_than_6_months_admitted) as less_than_6_months_admitted,
	coalesce(health_infra_wise_analytics.above_6_months_admitted) as above_6_months_admitted,
	coalesce(health_infra_wise_analytics.less_than_6_months_admitted + health_infra_wise_analytics.above_6_months_admitted) as admitted_total,
	coalesce(health_infra_wise_analytics.less_than_3_sd) as less_than_3_sd,
	coalesce(health_infra_wise_analytics.muac_less_than_11_5) as muac_less_than_11_5,
	coalesce(health_infra_wise_analytics.sd_and_muac) as sd_and_muac,
	coalesce(health_infra_wise_analytics.oedema) as oedema,
	coalesce(health_infra_wise_analytics.height_less_than_45) as height_less_than_45,
	coalesce(health_infra_wise_analytics.inpatient_days) as inpatient_days,
	cast(dates.to_date as date) - cast(dates.from_date as date) as no_of_in_period_days,
	extract(month from age(cast(dates.to_date as date),cast(dates.from_date as date))) as no_of_in_period_months,
	coalesce(
	health_infra_wise_analytics.less_than_3_sd
	+ health_infra_wise_analytics.muac_less_than_11_5
	+ health_infra_wise_analytics.sd_and_muac
	+ health_infra_wise_analytics.oedema
	+ health_infra_wise_analytics.height_less_than_45
	) as criteria_total,
	coalesce(health_infra_wise_analytics.visited_by_pediatrician) as visited_by_pediatrician,
	coalesce(health_infra_wise_analytics.discharge_from_facility) as discharge_from_facility,
	coalesce(health_infra_wise_analytics.cured) as cured,
	coalesce(health_infra_wise_analytics.defaulters) as defaulters,
	coalesce(health_infra_wise_analytics.weight_gain_not_15) as weight_gain_not_15,
	coalesce(health_infra_wise_analytics.death) as death,
	coalesce(health_infra_wise_analytics.follow_up_visit_1) as follow_up_visit_1,
	coalesce(health_infra_wise_analytics.follow_up_visit_2) as follow_up_visit_2,
	coalesce(health_infra_wise_analytics.follow_up_visit_3) as follow_up_visit_3,
	coalesce(health_infra_wise_analytics.sam_to_mam) as sam_to_mam,
	coalesce(health_infra_wise_analytics.sam_to_sam) as sam_to_sam,
	coalesce(health_infra_wise_analytics.weight_gain_5gm_kg_day) as weight_gain_5gm_kg_day,
	coalesce(health_infra_wise_analytics.weight_gain_8gm_kg_day) as weight_gain_8gm_kg_day,
	coalesce(health_infra_wise_analytics.referred_for_cmam) as referred_for_cmam,
	coalesce(health_infra_wise_analytics.weight_gain_15) as weight_gain_15,
	coalesce(health_infra_wise_analytics.weight_gain_15_at_end_of_program) as weight_gain_15_at_end_of_program,
	coalesce(medical_transfer_details.medical_transfer) as medical_transfer
	from health_infra_details
	inner join dates on true
	inner join health_infrastructure_details on health_infra_details.id = health_infrastructure_details.id
	left join location_hierchy_closer_det region_closer on health_infrastructure_details.location_id = region_closer.child_id
	and region_closer.parent_loc_type = ''R''
	left join location_master region on region_closer.parent_id = region.id
	left join location_hierchy_closer_det district_closer on health_infrastructure_details.location_id = district_closer.child_id
	and district_closer.parent_loc_type in (''D'',''C'')
	left join location_master district on district_closer.parent_id = district.id
	left join location_hierchy_closer_det block_closer on health_infrastructure_details.location_id = block_closer.child_id
	and block_closer.parent_loc_type in (''B'',''Z'')
	left join location_master block on block_closer.parent_id = block.id
	left join health_infra_wise_analytics on health_infra_details.id = health_infra_wise_analytics.child_id
	left join medical_transfer_details on health_infra_details.id = medical_transfer_details.child_id
)
select row_number() over() as "Sr.No",
det.region as "Region",
det.district as "District",
det.block as "Block",
det.name as "Facility Name",
det.hidden_health_id,
det.funded_by as "Funded By",
det.no_of_beds as "No. of Beds",
det.less_than_6_months_admitted as "Less than 6 months",
det.above_6_months_admitted as "Above 6 months",
det.admitted_total as "Total Admission",
det.less_than_3_sd as "Less than 3SD",
det.muac_less_than_11_5 as "Less than 11.5 MUAC",
det.sd_and_muac as "Both",
det.oedema as "Oedema",
det.height_less_than_45 as "Other (Less than 45cm length)",
det.criteria_total as "Total",
	case when det.admitted_total = 0 or det.admitted_total is null or det.no_of_beds = 0 or det.no_of_beds is null or det.no_of_in_period_months = 0 or det.no_of_in_period_months is null then 0 else
	round(det.admitted_total * 100.0/(det.no_of_beds*(2*det.no_of_in_period_months))) end as "Admission Rate",
    case when det.inpatient_days = 0 or det.inpatient_days is null or det.no_of_in_period_days = 0 or det.no_of_in_period_days is null or det.no_of_beds = 0 or det.no_of_beds is null then 0 else
    round((det.inpatient_days * 100) / (det.no_of_in_period_days * det.no_of_beds)) end as "Bed Occupancy rate (BOR)",
det.visited_by_pediatrician as "Visited by pediatrician",
	case when det.visited_by_pediatrician = 0 or det.visited_by_pediatrician is null or det.admitted_total = 0 or det.admitted_total is null then 0 else
	round(det.visited_by_pediatrician * 100.0/det.admitted_total) end as "percent_col_Visited by Pediatrician",
det.discharge_from_facility as "Discharge from facility",
	case when det.discharge_from_facility = 0 or det.discharge_from_facility is null or det.admitted_total = 0 or det.admitted_total is null then 0 else
	round(det.discharge_from_facility * 100.0/det.admitted_total) end as "percent_col_Discharge from facility",
det.cured as "Improved nutritional status on discharge from facility",
	case when det.cured = 0 or det.cured is null or det.discharge_from_facility = 0 or det.discharge_from_facility is null then 0 else
	round(det.cured * 100.0/det.discharge_from_facility) end as "percent_col_Improved nutritional status on discharge from facility",
det.defaulters as "Defaulters",
	case when det.defaulters = 0 or det.defaulters is null or det.discharge_from_facility = 0 or det.discharge_from_facility is null then 0 else
	round(det.defaulters * 100.0/det.discharge_from_facility) end as "percent_col_Defaulters",
det.weight_gain_not_15 as "Non-respondants",
	case when det.weight_gain_not_15 = 0 or det.weight_gain_not_15 is null or det.discharge_from_facility = 0 or det.discharge_from_facility is null then 0 else
	round(det.weight_gain_not_15 * 100.0/det.discharge_from_facility) end as "percent_col_Non-respondants",
det.medical_transfer as "Medical Transfer",
	case when det.medical_transfer = 0 or det.medical_transfer is null or det.admitted_total = 0 or det.admitted_total is null then 0 else
	round(det.medical_transfer * 100.0/det.admitted_total) end as "percent_col_Medical Transfer",
det.death as "Death",
	case when det.death = 0 or det.death is null or det.admitted_total = 0 or det.admitted_total is null then 0 else
	round(det.death * 100.0/det.admitted_total) end as "percent_col_Death",
det.follow_up_visit_1 as "1st Follow up visit",
	case when det.follow_up_visit_1 = 0 or det.follow_up_visit_1 is null or det.admitted_total = 0 or det.admitted_total is null then 0 else
	round(det.follow_up_visit_1 * 100.0/det.admitted_total) end as "percent_col_1st Follow up visit",
det.follow_up_visit_2 as "2nd Follow up visit",
	case when det.follow_up_visit_2 = 0 or det.follow_up_visit_2 is null or det.admitted_total = 0 or det.admitted_total is null then 0 else
	round(det.follow_up_visit_2 * 100.0/det.admitted_total) end as "percent_col_2nd Follow up visit",
det.follow_up_visit_3 as "3rd Follow up visit",
	case when det.follow_up_visit_3 = 0 or det.follow_up_visit_3 is null or det.admitted_total = 0 or det.admitted_total is null then 0 else
	round(det.follow_up_visit_3 * 100.0/det.admitted_total) end as "percent_col_3rd Follow up visit",
det.referred_for_cmam as "Child referred for enrolling in CMAM program",
	case when det.referred_for_cmam = 0 or det.referred_for_cmam is null or det.discharge_from_facility = 0 or det.discharge_from_facility is null then 0 else
	round(det.referred_for_cmam * 100.0/det.discharge_from_facility) end as "percent_col_Child referred for enrolling in CMAM program",
det.sam_to_mam as "SAM to MAM",
det.sam_to_sam as "SAM to SAM",
det.weight_gain_5gm_kg_day as "Weight gain more than 5gm/kg/day",
	case when det.weight_gain_5gm_kg_day = 0 or det.weight_gain_5gm_kg_day is null or det.admitted_total = 0 or det.admitted_total is null then 0 else
	round(det.weight_gain_5gm_kg_day * 100.0/det.admitted_total) end as "percent_col_Weight gain more than 5gm/kg/day",
det.weight_gain_8gm_kg_day as "Weight gain more than 8gm/kg/day",
	case when det.weight_gain_8gm_kg_day = 0 or det.weight_gain_8gm_kg_day is null or det.admitted_total = 0 or det.admitted_total is null then 0 else
	round(det.weight_gain_8gm_kg_day * 100.0/det.admitted_total) end as "percent_col_Weight gain more than 8gm/kg/day",
det.weight_gain_15 as "No. of children with 15% weight gain during facility stay",
det.weight_gain_15_at_end_of_program as "No. of children with 15% weight gain at the end of program (60 days)"
from det
union all
select null,
null,
null,
null,
''<b>Total<b>'',
#location_id#,
null,
sum(det.no_of_beds),
sum(det.less_than_6_months_admitted),
sum(det.above_6_months_admitted),
sum(det.admitted_total),
sum(det.less_than_3_sd),
sum(det.muac_less_than_11_5),
sum(det.sd_and_muac),
sum(det.oedema),
sum(det.height_less_than_45),
sum(det.criteria_total),
	case when (sum(det.admitted_total) = 0 or sum(det.admitted_total) is null or sum(det.no_of_beds) = 0 or sum(det.no_of_beds) is null) or sum(det.no_of_in_period_months) = 0 or sum(det.no_of_in_period_months) is null then 0 else
	round(sum(det.admitted_total)*100.0/(sum(det.no_of_beds)*(2*sum(det.no_of_in_period_months)))) end,
    case when sum(det.inpatient_days) = 0 or sum(det.inpatient_days) is null or sum(det.no_of_in_period_days) = 0 or sum(det.no_of_in_period_days) is null or sum(det.no_of_beds) = 0 or sum(det.no_of_beds) is null then 0 else
    round((sum(det.inpatient_days) * 100) / (sum(det.no_of_in_period_days) * sum(det.no_of_beds))) end,
sum(det.visited_by_pediatrician),
	case when (sum(det.visited_by_pediatrician) = 0 or sum(det.visited_by_pediatrician) is null or sum(det.admitted_total) = 0 or sum(det.admitted_total) is null) then 0 else
	round(sum(det.visited_by_pediatrician)*100.0/sum(det.admitted_total)) end,
sum(det.discharge_from_facility),
	case when (sum(det.discharge_from_facility) = 0 or sum(det.discharge_from_facility) is null or sum(det.admitted_total) = 0 or sum(det.admitted_total) is null) then 0 else
	round(sum(det.discharge_from_facility)*100.0/sum(det.admitted_total)) end,
sum(det.cured),
	case when (sum(det.cured) = 0 or sum(det.cured) is null or sum(det.discharge_from_facility) = 0 or sum(det.discharge_from_facility) is null) then 0 else
	round(sum(det.cured)*100.0/sum(det.discharge_from_facility)) end,
sum(det.defaulters),
	case when (sum(det.defaulters) = 0 or sum(det.defaulters) is null or sum(det.discharge_from_facility) = 0 or sum(det.discharge_from_facility) is null) then 0 else
	round(sum(det.defaulters)*100.0/sum(det.discharge_from_facility)) end,
sum(det.weight_gain_not_15),
	case when (sum(det.weight_gain_not_15) = 0 or sum(det.weight_gain_not_15) is null or sum(det.discharge_from_facility) = 0 or sum(det.discharge_from_facility) is null) then 0 else
	round(sum(det.weight_gain_not_15)*100.0/sum(det.discharge_from_facility)) end,	
sum(det.medical_transfer),
	case when (sum(det.medical_transfer) = 0 or sum(det.medical_transfer) is null or sum(det.admitted_total) = 0 or sum(det.admitted_total) is null) then 0 else
	round(sum(det.medical_transfer)*100.0/sum(det.admitted_total)) end,
sum(det.death),
	case when (sum(det.death) = 0 or sum(det.death) is null or sum(det.admitted_total) = 0 or sum(det.admitted_total) is null) then 0 else
	round(sum(det.death)*100.0/sum(det.admitted_total)) end,
sum(det.follow_up_visit_1),
	case when (sum(det.follow_up_visit_1) = 0 or sum(det.follow_up_visit_1) is null or sum(det.admitted_total) = 0 or sum(det.admitted_total) is null) then 0 else
	round(sum(det.follow_up_visit_1)*100.0/sum(det.admitted_total)) end,
sum(det.follow_up_visit_2),
	case when (sum(det.follow_up_visit_2) = 0 or sum(det.follow_up_visit_2) is null or sum(det.admitted_total) = 0 or sum(det.admitted_total) is null) then 0 else
	round(sum(det.follow_up_visit_2)*100.0/sum(det.admitted_total)) end,
sum(det.follow_up_visit_3),
	case when (sum(det.follow_up_visit_3) = 0 or sum(det.follow_up_visit_3) is null or sum(det.admitted_total) = 0 or sum(det.admitted_total) is null) then 0 else
	round(sum(det.follow_up_visit_3)*100.0/sum(det.admitted_total)) end,
sum(det.referred_for_cmam),
	case when (sum(det.referred_for_cmam) = 0 or sum(det.referred_for_cmam) is null or sum(det.discharge_from_facility) = 0 or sum(det.discharge_from_facility) is null) then 0 else
	round(sum(det.referred_for_cmam)*100.0/sum(det.discharge_from_facility)) end,
sum(det.sam_to_mam),
sum(det.sam_to_sam),
sum(det.weight_gain_5gm_kg_day),
	case when (sum(det.weight_gain_5gm_kg_day) = 0 or sum(det.weight_gain_5gm_kg_day) is null or sum(det.admitted_total) = 0 or sum(det.admitted_total) is null) then 0 else
	round(sum(det.weight_gain_5gm_kg_day)*100.0/sum(det.admitted_total)) end,
sum(det.weight_gain_8gm_kg_day),
	case when (sum(det.weight_gain_8gm_kg_day) = 0 or sum(det.weight_gain_8gm_kg_day) is null or sum(det.admitted_total) = 0 or sum(det.admitted_total) is null) then 0 else
	round(sum(det.weight_gain_8gm_kg_day)*100.0/sum(det.admitted_total)) end,
sum(det.weight_gain_15),
sum(det.weight_gain_15_at_end_of_program)
from det',true,'ACTIVE','b21f6d2c-f858-4a2c-84ea-9a8ccd19a22f'),
	 (1777,74841,'2020-09-21 18:20:32.54',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','0a581013-361e-4ce9-856a-d585d94b2b2f'),
	 (1049,409,'2019-04-24 17:37:18.907',1,'2021-01-13 20:22:06.427965',NULL,'select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as year 
from generate_series(date ''2019-04-01'', current_date, ''1 year'') as curr order by year desc;',true,'ACTIVE','f3ee22b0-5793-4acc-87af-3bb3fce4e865');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1327,60512,'2019-08-19 14:52:32.558',1,'2021-01-13 20:22:06.427965',NULL,'select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as year 
from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by year desc;',true,'ACTIVE','831d2442-b9a5-4567-8c67-6eb05b534099'),
	 (1321,66522,'2019-08-19 13:46:02.797',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','a3775cdc-8ef2-4b5e-bc55-360f68cd3dd4'),
	 (805,58981,'2019-03-06 17:27:29.256',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','e20b34da-c1fe-4f85-8a74-99881fdbf2b0'),
	 (1238,409,'2019-07-24 10:22:56.609',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','db293023-a2d7-4aa4-8d79-521a2703408a'),
	 (809,58981,'2019-03-06 17:33:22.782',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','1fbc160b-2f32-4334-89c8-7415a639cfe6'),
	 (417,1,'2019-02-13 12:53:35.562',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','4715e2d1-4320-489c-afcc-d29e54b88685'),
	 (418,1,'2019-02-13 12:53:35.565',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','7fdb9fcb-a375-4868-a06c-368a2c927bdb'),
	 (490,57698,'2019-02-14 14:24:24.762',1,'2021-01-13 20:22:06.427965','location_id','select name as location_id from location_master  where id = #location_id#',true,'ACTIVE','e416ba8d-5fe8-4ad1-91d8-2eb053c291ea'),
	 (593,1,'2019-02-18 17:50:19.47',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','08131e2e-9d44-4b36-a630-b46c7a12ee3e'),
	 (671,409,'2019-02-19 20:58:37.801',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Maternal deaths(Delivery Services Provided During The Year)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
dates as (
SELECT to_date(concat(''04-01-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 1)),''MM-DD-YYYY'') as from_date
,to_date(concat(''03-31-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 2)),''MM-DD-YYYY'') as to_date
),member_det as (
	select 
        m.id,
        r.member_id, r.death_location_id as loc_id,
m.weight,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.death_date,''DD/MM/YYYY'') as death_date
,to_char(death_detail.created_on,''DD/MM/YYYY'') as date_of_entry
        ,to_char(death_detail.modified_on,''DD/MM/YYYY'') as date_of_verification
    ,to_char(p.delivery_date,''DD/MM/YYYY'') as delivery_date
,EXTRACT(YEAR from age(r.death_date, m.dob)) as age
,r.last_systolic_bp as last_systolic_bp
        ,r.haemoglobin_tested_count
	,death_detail.place_of_death
	,r.maternal_death_type as death_type
        ,r.pregnancy_reg_id
		,(case when r.registered_with_no_of_child is not null then r.registered_with_no_of_child else 0 end +
case when r.total_out_come is not null then r.total_out_come else 0 end) as total_child
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, imt_member m
	, rch_pregnancy_registration_det p
	,dates
	,rch_member_death_deatil death_detail
	where r.member_id = m.id and r.death_location_id  = l.child_id and r.pregnancy_reg_id = p.id
	and r.maternal_detah = true
	and l.parent_id = #location_id#
	and r.death_date between dates.from_date and dates.to_date
        and death_detail.member_id = m.id
	order by r.death_date
	#limit_offset#
),gravida_count as (
	select rch_pregnancy_registration_det.member_id,count(*) as gravida
	from rch_pregnancy_registration_det
	where rch_pregnancy_registration_det.member_id in (select id from member_det)
	group by rch_pregnancy_registration_det.member_id
),parity_count as (
	select imt_member.id,count(distinct m2.dob) as parity
	from imt_member
	inner join imt_member m2 on imt_member.id = m2.mother_id
	where imt_member.id in (select id from member_det)
	group by imt_member.id
),
member_det_extra as(
	select distinct
	md.id,
	concat(f.address1,'','',f.address2) as address,
	f.area_id,
    f.caste,    
case when list_value.value is null then dd.other_death_reason else list_value.value  end as death_deason,
wpd.delivery_place,
delivery.value  as delivery_health_infra_type,
	dd.verbal_autopsy,
	wpd.fbmdsr,
	dd.place_of_death,
	death_infra.value as death_health_infra_type
	from member_det md 
	inner join imt_family f on f.family_id = md.family_id    
	inner join rch_member_death_deatil dd on dd.member_id = md.id 
	left join rch_wpd_mother_master wpd on wpd.member_id = md.id and has_delivery_happened is true and md.pregnancy_reg_id = wpd.pregnancy_reg_det_id
        and (wpd.state is null or wpd.state != ''MARK_AS_FALSE_DELIVERY'')
    left join health_infrastructure_details hid on hid.id = wpd.health_infrastructure_id 
    left join listvalue_field_value_detail delivery on delivery.id = hid."type" 
    left join health_infrastructure_details death on death.id = dd.health_infrastructure_id 
    left join listvalue_field_value_detail death_infra on death_infra.id = death."type" 
    left join listvalue_field_value_detail list_value on list_value.id\:\:text = dd.death_reason
)
,caste_filter as (
	select distinct md.id,list.value as caste from member_det_extra md inner join listvalue_field_value_detail list on md.caste = cast(list.id as text)
),
loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id,  
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
),
asha_areas as (
select
	distinct area_id
from
	member_det_extra ),
asha_det_temp as(
select
	asha_areas.area_id,
	max(u.id) as user_id
from
	um_user_location ul,
	um_user u,
	asha_areas
where
	asha_areas.area_id = ul.loc_id
	and u.id = ul.user_id
	and u.state = ''ACTIVE''
	and ul.state = ''ACTIVE''
	and u.role_id = (
	select
		id
	from
		um_role_master
	where
		name = ''Asha'') group by asha_areas.area_id
),	
asha_det as (
select
	u.id,
	asha_det_temp.area_id,
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''(''||
	case
		when u.contact_number is not null then u.contact_number || '')''
		else ''N/A'' || '')''
	end as asha 
from
	um_user u,
	asha_det_temp
where
	u.id = asha_det_temp.user_id
),
last_service_details as (
	select to_char(max(service_date),''dd-MM-yyyy'') as last_service_date ,services.member_id from rch_member_services services
	inner join member_det mem on mem.member_id = services.member_id
	group by services.member_id
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
-- loc_det.aoi as "Location",
get_location_hierarchy_by_type(loc_det.loc_id,''D'') as "District / Corp",
get_location_hierarchy_by_type(loc_det.loc_id,''B'') as "Taluka / zone",
get_location_hierarchy_by_type(loc_det.loc_id,''P'') as "PHC / UHC",
get_location_hierarchy_by_type(loc_det.loc_id,''SC'') as "Sub Centre",
m_extra.address as "Address",
member_det.name as "Name",
caste_filter.caste as "Caste",
member_det.unique_health_id as "TeCHO+ ID",
-- member_det.family_id as "Family ID",
member_det.age as "Age in Years",
gravida_count.gravida as "Gravida",
parity_count.parity as "Parity",
member_det.total_child as "No of Live Children",
member_det.death_type as "Period of death",
member_det.death_date as "Date of Death",
member_det.date_of_entry as "Date of Entry",
member_det.date_of_verification as "Date of Verification",
services.last_service_date as "Last check up date",
haemoglobin_tested_count as "Last Hb",
last_systolic_bp as "Last BP",
case when delivery_place = ''HOME'' then ''Home''
when  delivery_place = ''HOSP'' then ''Hospital''
when delivery_place = ''ON_THE_WAY'' then ''On the way''
else ''Other'' end  as "Place of delivery",
case when delivery_health_infra_type is not null then delivery_health_infra_type else ''-'' end as "Delivery place type",
case when member_det.place_of_death =''HOME'' then ''Home'' 
when member_det.place_of_death  =''ON_THE_WAY'' then ''On the way''
when member_det.place_of_death = ''HOSP'' then ''Hospital''
else ''Other'' end as "Place of death",
case when death_health_infra_type is not null then death_health_infra_type else ''-'' end as "Death place type",
m_extra.death_deason as "Provisional diagnosis",


--member_det.weight as "Weight",
--member_det.lmp as "LMP Date",
--member_det.edd as "Estimated Delivery Date",


-- case when member_det.delivery_date is null then ''N/A'' else member_det.delivery_date end as "Delivery Date",
case when m_extra.verbal_autopsy then ''Yes'' else ''-'' end as "Verbal Autopsy",
m_extra.fbmdsr as "FBMDSR",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details",
case when asha_det.asha is null then ''No Asha Assigned'' else asha_det.asha end as "Asha Details"

from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join gravida_count on member_det.id = gravida_count.member_id
left join parity_count on member_det.id = parity_count.id
left join fhw_det on member_det.loc_id = fhw_det.loc_id
left join caste_filter on member_det.id = caste_filter.id
left join member_det_extra m_extra on m_extra.id = member_det.id
left join asha_det on asha_det.area_id = m_extra.area_id

left join last_service_details services on services.member_id = member_det.id',true,'ACTIVE','7a0896d5-5a88-416a-b303-becb2478f20f');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (619,409,'2019-02-19 12:29:19.463',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','ecda7627-4523-4e4c-8a98-bd57dc03e4c2'),
	 (1197,409,'2019-07-09 19:41:04.48',1,'2021-01-13 20:22:06.427965',NULL,'select cast(''2019-2020'' as text) as display_text',true,'ACTIVE','326ce266-a969-48ba-8fca-68bed66dbf03'),
	 (1383,60512,'2019-08-22 17:20:56.712',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
	select
	to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date ,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end, ''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_date 
),call_master_ids as (
	select id,
        created_on,
created_by,
get_location_hierarchy(location_id) as Location_hierarchy
from gvk_manage_call_master
	inner join dates on gvk_manage_call_master.created_on between dates.from_date and dates.to_date
	where gvk_manage_call_master.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and gvk_manage_call_master.call_response not in (''com.argusoft.imtecho.gvk.call.cant-talk'',
	''com.argusoft.imtecho.gvk.call.no-number-available'',
	''com.argusoft.imtecho.gvk.call.wrong-mobile-number'',
        ''com.argusoft.imtecho.gvk.call.phone-switched-off'',
        ''com.argusoft.imtecho.gvk.call.unresponsive'',
        ''com.argusoft.imtecho.gvk.call.not-reachable'',
''com.argusoft.imtecho.gvk.call.processed'',
''com.argusoft.imtecho.gvk.call.processing''

	)
	and gvk_manage_call_master.call_type in (''FHW_DEL_VERI'',''FHW_TT_VERI'',''FHW_CH_SER_VERI'',''FHW_CH_SER_PREG_VERI'')
),response_ids as (
	select gvk_anm_verification_response.id,call_master_ids.created_on, call_master_ids.created_by,Location_hierarchy
	from call_master_ids
	inner join gvk_anm_verification_response on call_master_ids.id = gvk_anm_verification_response.manage_call_master_id
	order by gvk_anm_verification_response.id desc
	#limit_offset#
),response as (
	select 
	gvk_anm_verification_response.id as gvk_anm_id, response_ids.created_on,response_ids.created_by,
	gvk_anm_verification_response.member_id,
    Location_hierarchy,
	case when gvk_anm_verification_response.service_type = ''FHW_DEL_VERI'' then ''FHW Delivery Verification''
		when gvk_anm_verification_response.service_type = ''FHW_TT_VERI'' then ''FHW TT Verification''
		when gvk_anm_verification_response.service_type = ''FHW_CH_SER_VERI'' then ''FHW Child Service Verification'' 
        when gvk_anm_verification_response.service_type = ''FHW_CH_SER_PREG_VERI'' then ''Delivery And Child Service Verification''  end as service_type,
	case when gvk_anm_verification_response.tt_injection_received_status = ''YES'' then ''Yes'' 
		when gvk_anm_verification_response.tt_injection_received_status = ''NO'' then ''No''
		when gvk_anm_verification_response.tt_injection_received_status = ''CANNOT_DETERMINE'' then ''Cannot Determine''
		else ''-'' end as tt_injection_received_status,
	case when gvk_anm_verification_response.is_delivery_happened is true then ''Yes''
		when gvk_anm_verification_response.is_delivery_happened is false then ''No''
		else ''-'' end as delivery_status,
	case when gvk_anm_verification_response.no_of_child_gender_verification is true then ''Yes''
		when gvk_anm_verification_response.no_of_child_gender_verification is false then ''No''
		else ''-'' end as no_of_child_gender_verification,
	case when gvk_anm_verification_response.delivery_place_verification is true then ''Yes''
		when gvk_anm_verification_response.delivery_place_verification is false then ''No''
		else ''-'' end as delivery_place_verification,
	case when gvk_anm_verification_response.delivery_health_infrastructure_verification is true then ''Yes''
		when gvk_anm_verification_response.delivery_health_infrastructure_verification is false then ''No''
		else ''-'' end as delivery_health_infrastructure_verification,
	case when gvk_anm_verification_response.delivery_done_by_verification is true then ''Yes''
		when gvk_anm_verification_response.delivery_done_by_verification is false then ''No''
		else ''-'' end as delivery_done_by_verification,
	case when gvk_anm_verification_response.child_service_vaccination_status is true then ''Yes''
		when gvk_anm_verification_response.child_service_vaccination_status is false then ''No''
		else ''-'' end as child_service_vaccination_status
	from response_ids
	inner join gvk_anm_verification_response on response_ids.id = gvk_anm_verification_response.id
),member_location_area_ids as (
	select response.gvk_anm_id,response.member_id,imt_family.location_id,imt_family.area_id
	from response
	inner join imt_member on imt_member.id = response.member_id
	inner join imt_family on imt_family.family_id = imt_member.family_id
),asha as (
	select member_location_area_ids.gvk_anm_id,asha.id
	from member_location_area_ids
	inner join um_user_location asha_location on member_location_area_ids.area_id = asha_location.loc_id and asha_location.state = ''ACTIVE''
	inner join um_user asha on asha_location.user_id = asha.id and asha.role_id = 24 and asha.state = ''ACTIVE''
),asha_unique as (
	select asha.gvk_anm_id,max(asha.id)
	from asha
	group by asha.gvk_anm_id
),fhw as (
	select member_location_area_ids.gvk_anm_id,fhw.id
	from member_location_area_ids
	inner join um_user_location fhw_location on member_location_area_ids.location_id = fhw_location.loc_id and fhw_location.state = ''ACTIVE''
	inner join um_user fhw on fhw_location.user_id = fhw.id and fhw.role_id = 30 and fhw.state = ''ACTIVE''
),fhw_unique as (
	select fhw.gvk_anm_id,max(fhw.id)
	from fhw
	group by fhw.gvk_anm_id
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Member Name",
Location_hierarchy as "Location",
to_char(response.created_on,''DD-MM-YYYY HH:MI PM'') as  "Call Date",
concat(fhw_user.first_name,'' '',fhw_user.middle_name,'' '',fhw_user.last_name) as "FHW Name",
concat(asha_user.first_name,'' '',asha_user.middle_name,'' '',asha_user.last_name) as "ASHA Name",
concat(um.first_name, '' '', um.last_name) as "RO Details" ,
response.service_type as "Service Type",
response.delivery_status as "Beneficiary Delivery Verified",
response.delivery_place_verification as "Delivery Place Verified",
response.delivery_health_infrastructure_verification as "Delivery Health Facility Verified",
response.delivery_done_by_verification as "Delivery Done By Verified",
response.no_of_child_gender_verification as "Child Gender Verified",
response.child_service_vaccination_status as "Child Vaccination Verified",
response.tt_injection_received_status as "TT Vaccination Verified"
from response
inner join imt_member on response.member_id = imt_member.id
inner join imt_family on imt_family.family_id = imt_member.family_id
left join asha_unique on response.gvk_anm_id = asha_unique.gvk_anm_id
left join fhw_unique on response.gvk_anm_id = fhw_unique.gvk_anm_id
left join um_user asha_user on asha_unique.max = asha_user.id
left join um_user fhw_user on fhw_unique.max = fhw_user.id
left join um_user um on response.created_by = um.id',true,'ACTIVE','d14a1bec-13b6-40e2-854a-9ef661221f13'),
	 (1684,74841,'2020-07-16 17:10:08.451',1,'2021-01-13 20:22:06.427965','from_month','select to_char(cast(''#from_month#'' as date),''MM/YYYY'') as from_date',true,'ACTIVE','0b97cf23-4a01-45cb-8102-4ee8d8bb5ded'),
	 (1813,74841,'2020-11-24 15:02:35.267',1,'2021-01-13 20:22:06.427965',NULL,'select depth_flag as "Depth Flag"',true,'ACTIVE','baa38e43-f150-4a42-a43e-09846ca33f35'),
	 (105,409,'2018-12-18 10:34:48.814',1,'2021-01-13 20:22:06.427965','demographic_location_id,financial_year,loggedInUserId,location_id','with parameters as(
select CAST(#location_id# AS INTEGER) as location_id,CAST(''#financial_year#'' AS TEXT) as financial_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
ldp as (
	select child_id, 
	case when ( p.preferred_language and (location_master.english_name is not null)) then location_master.english_name else location_master.name end 
	from location_hierchy_closer_det,location_master,parameters p 
	where parent_id = p.location_id and depth = 1 and location_master.id = location_hierchy_closer_det.child_id
	and (p.demographic_group=''null'' or location_hierchy_closer_det.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
),expected_target as (
	select ldp.child_id,
	location_wise_expected_target.expected_mother_reg as expected_mother_reg,
	location_wise_expected_target.expected_delivery_reg as expected_delivery_reg,
	location_wise_expected_target.ela_dpt_opv_mes_vita_1dose as ela_dpt_opv_mes_vita_1dose
	from ldp 
    inner join parameters on true
	inner join location_wise_expected_target on ldp.child_id = location_wise_expected_target.location_id
    inner join location_master on location_wise_expected_target.location_id = location_master.id
	and location_wise_expected_target.financial_year = parameters.financial_year
    and location_wise_expected_target.state = ''LOCKED''
	where (parameters.demographic_group=''null'' or location_master.demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = parameters.demographic_group)
	)
)
, r as (
	select lhcd.parent_id as id
	,coalesce(sum(stat.anc_reg),0) as anc_reg
	,coalesce(sum(stat.tt1),0) as tt1
	,coalesce(sum(stat.tt2_tt_booster),0) as tt2_tt_booster
	,coalesce(sum(stat.early_anc),0) as early_anc
	,coalesce(sum(stat.anc1),0) as anc1
	,coalesce(sum(stat.anc2),0) as anc2
	,coalesce(sum(stat.anc3),0) as anc3
	,coalesce(sum(stat.anc4),0) as anc4
	,coalesce(sum(stat.no_of_del),0) as no_of_del
	,coalesce(sum(stat.mtp),0) as mtp
	,coalesce(sum(stat.abortion),0) as abortion
	,coalesce(sum(stat.pnc1),0) as pnc1
	,coalesce(sum(stat.pnc2),0) as pnc2
	,coalesce(sum(stat.pnc3),0) as pnc3
	,coalesce(sum(stat.pnc4),0) as pnc4
	,coalesce(sum(stat.maternal_detah),0) as maternal_detah
	from location_hierchy_closer_det lhcd 
	inner join ldp on lhcd.parent_id = ldp.child_id
	left join rch_yearly_location_wise_analytics_data stat on lhcd.child_id = stat.location_id
	cross join parameters p
	where stat.financial_year = p.financial_year
	and (p.demographic_group=''null'' or lhcd.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
	group by lhcd.parent_id
), s as (
	select ldp.name,r.*,expected_target.* from r,ldp
	left join expected_target on ldp.child_id = expected_target.child_id
	where ldp.child_id = r.id
	order by ldp.name
)
select  row_number() over() as "Sr. no"
,id as hidden_location_id
,(select demographic_group from parameters) hidden_demographic_location_id
,name as  "Location"
,anc_reg as "Reg. After 1st April"
,case when expected_mother_reg is null then ''Not available'' else cast(expected_mother_reg as text) end as "Expected Mother Registration"
,tt1 as "TT1 given"
,case when anc_reg = 0 then 0 else round(tt1*100.0/anc_reg,2) end as "percent_col_TT1 given"
,tt2_tt_booster as "TT2+TT Booster"
,case when anc_reg = 0 then 0 else round(tt2_tt_booster*100.0/anc_reg,2) end as "percent_col_TT2+TT Booster"
,early_anc  as "Early ANC"
,case when anc_reg = 0 then 0 else round(early_anc*100.0/anc_reg ,2) end as "percent_col_Early ANC"
,anc1  as "1 ANC"
,case when early_anc = 0 then 0 else round(anc1*100.0/early_anc ,2) end as "percent_col_1 ANC"
,anc2 as "2 ANC"
,case when early_anc = 0 then 0 else round(anc2*100.0/early_anc ,2) end as "percent_col_2 ANC" 
,anc3  as "3 ANC"
,case when early_anc = 0 then 0 else round(anc3*100.0/early_anc ,2) end as "percent_col_3 ANC"
,anc4  as "4 ANC"
,case when early_anc = 0 then 0 else round(anc4*100.0/early_anc ,2) end as "percent_col_4 ANC"
,no_of_del  as "No of del"
,case when expected_delivery_reg is null then 0 else round(no_of_del*100.0/expected_delivery_reg,2) end as "percent_col_No of del"
,case when expected_delivery_reg is null then ''Not available'' else cast(expected_delivery_reg as text) end as "Expected Delivery Registration"
,mtp  as "MTP"
,case when anc_reg = 0 then 0 else round(mtp*100.0/anc_reg ,2) end as "percent_col_MTP"
,abortion  as "Abortion"
,case when anc_reg = 0 then 0 else round(abortion*100.0/anc_reg ,2) end as "percent_col_Abortion"
,pnc1 as "1 PNC"
,case when no_of_del = 0 then 0 else round(pnc1*100.0/no_of_del ,2) end as "percent_col_1 PNC"
,pnc2  as "2 PNC"
,case when no_of_del = 0 then 0 else round(pnc2*100.0/no_of_del ,2) end as "percent_col_2 PNC"
,pnc3  as "3 PNC"
,case when no_of_del = 0 then 0 else round(pnc3*100.0/no_of_del ,2) end as "percent_col_3 PNC"
,pnc4  as "4 PNC"
,case when no_of_del = 0 then 0 else round(pnc4*100.0/no_of_del ,2) end as "percent_col_4 PNC"
,maternal_detah  as "Maternal deaths"
,case when anc_reg = 0 then 0 else round(maternal_detah*100.0/anc_reg ,2) end as "percent_col_Maternal deaths"
from s
union all
select 
null
,(select location_id from parameters) hidden_location_id
,(select demographic_group from parameters) hidden_demographic_location_id
,''<b>Total</b>''
,sum(anc_reg)
,cast(sum(case when expected_mother_reg is not null then expected_mother_reg else 0 end) as text)
,sum(tt1)
,case when sum(anc_reg) = 0 then 0 else round(sum(tt1)*100.0/sum(anc_reg),2) end
,sum(tt2_tt_booster)
,case when sum(anc_reg) = 0 then 0 else round(sum(tt2_tt_booster)*100.0/sum(anc_reg),2) end
,sum(early_anc)
,case when sum(anc_reg) = 0 then 0 else round(sum(early_anc)*100.0/sum(anc_reg),2) end
,sum(anc1)
,case when sum(early_anc) = 0 then 0 else round(sum(anc1)*100.0/sum(early_anc),2) end
,sum(anc2)
,case when sum(early_anc) = 0 then 0 else round(sum(anc2)*100.0/sum(early_anc),2) end
,sum(anc3)
,case when sum(early_anc) = 0 then 0 else round(sum(anc3)*100.0/sum(early_anc),2) end
,sum(anc4)
,case when sum(early_anc) = 0 then 0 else round(sum(anc4)*100.0/sum(early_anc),2) end
,sum(no_of_del)
,case when sum(expected_delivery_reg) = 0 then 0 else round(sum(no_of_del)*100.0/sum(expected_delivery_reg),2) end
,cast(sum(case when expected_delivery_reg is not null then expected_delivery_reg else 0 end) as text)
,sum(mtp)
,case when sum(anc_reg) = 0 then 0 else round(sum(mtp)*100.0/sum(anc_reg),2) end
,sum(abortion)
,case when sum(anc_reg) = 0 then 0 else round(sum(abortion)*100.0/sum(anc_reg),2) end
,sum(pnc1)
,case when sum(no_of_del) = 0 then 0 else round(sum(pnc1)*100.0/sum(no_of_del),2) end
,sum(pnc2)
,case when sum(no_of_del) = 0 then 0 else round(sum(pnc2)*100.0/sum(no_of_del),2) end
,sum(pnc3)
,case when sum(no_of_del) = 0 then 0 else round(sum(pnc3)*100.0/sum(no_of_del),2) end
,sum(pnc4)
,case when sum(no_of_del) = 0 then 0 else round(sum(pnc4)*100.0/sum(no_of_del),2) end
,sum(maternal_detah)
,case when sum(anc_reg) = 0 then 0 else round(sum(maternal_detah)*100.0/sum(anc_reg),2) end
from s;',true,'ACTIVE','67eec68a-89cc-452e-b56b-c559d27f82ea'),
	 (1105,63746,'2019-05-02 14:22:57.389',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #location_id#',true,'ACTIVE','e914cb98-3d06-4227-a407-a4c484a837eb'),
	 (474,1,'2019-02-14 14:04:37.29',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','3ade350b-d2ee-405c-a6e1-36ea9e0a6c0f'),
	 (465,1,'2019-02-14 13:20:48.879',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','3d99024e-f86a-4234-9135-88cb1f2d9c13'),
	 (1593,74841,'2020-04-13 15:22:04.973',1,'2021-01-13 20:22:06.427965','from_date,location_id','with parameters as (
	select hid.id as health_infra_id,hid.name_in_english as name
	,(case when ''#from_date#'' = ''null'' then current_date else to_date(''#from_date#'',''MM/DD/YYYY'') end) as from_date
	,(case when ''#from_date#'' = ''null'' then current_date + interval ''1 day'' - interval ''1 milliseconds'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) + interval ''1 day'' - interval ''1 milliseconds'' as to_date
	from health_infrastructure_details hid
	where hid.location_id in (select lhc.child_id from location_hierchy_closer_det lhc where lhc.parent_id = #location_id#)
	and hid.is_covid_hospital
),admission_count as (
	select cad.health_infra_id
	,count(1) filter (where cad.admission_date between p.from_date and p.to_date) as admission_entry
	,count(1) filter (where (cad.discharge_date is null or p.to_date <= cad.discharge_date)) as total_admission
	,count(1) filter (where (cad.status = ''SUSPECT'' and cad.discharge_date is null or p.to_date <= cad.discharge_date)) as suspect
	,count(1) filter (where (cad.status = ''CONFORMED'' and cad.discharge_date is null or p.to_date <= cad.discharge_date)) as conformed
	from covid19_admission_detail cad
	,parameters p
	where cad.health_infra_id = p.health_infra_id
	group by cad.health_infra_id
),daily_status_entry as (
	select cad.health_infra_id
	,count(distinct cacd.admission_id) as daily_status_entry
	,count(distinct cacd.admission_id) filter(where cacd.on_air) as on_air
	,count(distinct cacd.admission_id) filter(where cacd.on_o2) as on_o2
	,count(distinct cacd.admission_id) filter(where cacd.on_ventilator) as on_ventilator 
	,count(distinct cacd.admission_id) filter(where cacd.health_status in (''Asymptomatic'')) as on_asymptomatic 
	,count(distinct cacd.admission_id) filter(where cacd.health_status in (''Mild'',''Stable-Mild'')) as on_mild
	,count(distinct cacd.admission_id) filter(where cacd.health_status in (''Stable'',''Stable-Moderate'')) as on_moderate
	,count(distinct cacd.admission_id) filter(where cacd.health_status in (''Critical'')) as on_critical 
	from covid19_admission_detail cad
	,covid19_admitted_case_daily_status cacd
	,parameters p
	where cad.health_infra_id = p.health_infra_id
	and cad.id = cacd.admission_id
	and (cad.discharge_date is null or p.to_date <= cad.discharge_date)
	and cacd.service_date between p.from_date and p.to_date
	group by cad.health_infra_id
),
pending_det as (
    select 
    count(distinct cad.id) as pending_positive,
    cad.suggested_health_infra as health_infra_id
    from
    covid19_admission_detail cad 
    inner join covid19_lab_test_detail cltd on cltd.covid_admission_detail_id = cad.id
    inner join parameters p on cad.admission_date <= p.to_date and cltd.lab_collection_on <= p.to_date and cltd.lab_result_entry_on <= p.to_date
    where cad.health_infra_id is null and cltd.lab_result = ''POSITIVE''
    and p.health_infra_id = cad.suggested_health_infra
    group by cad.suggested_health_infra
), test_result_det as (
    select
        cad.id as admission_id,
        max(cad.member_id) as member_id,
        max(cad.health_infra_id) as health_infra_id,
        max(case when cltd.lab_result = ''POSITIVE'' then 1 else 0 end ) as positive_member,
        max(cad.discharge_date) as discharge_date,
        max(cad.status) as status
    from covid19_admission_detail cad
    inner join parameters p on p.health_infra_id = cad.health_infra_id
    left join covid19_lab_test_detail cltd on cltd.covid_admission_detail_id = cad.id
    where cad.health_infra_id is not null and cad.discharge_date <= p.to_date
    and cad.status in (''DAMA/LAMA'', ''DISCHARGE'', ''REFER'', ''DEATH'')
    group by cad.id
) 
, extra_det as (
    select 
    cad.health_infra_id,
    count(1) filter (where cad.status in (''DAMA/LAMA'', ''DISCHARGE'') and cad.positive_member = 1) as positive_dischage,
    count(1) filter (where cad.status in (''DAMA/LAMA'', ''DISCHARGE'') and cad.positive_member = 0) as other_dischage,
    count(1) filter (where cad.status in (''DEATH'')) as death,
    count(1) filter (where cad.status in (''REFER'') and cad.positive_member = 1) as  positive_refer,
    count(1) filter (where cad.status in (''REFER'') and cad.positive_member = 0) as  other_refer
    from test_result_det cad
    group by cad.health_infra_id
),
final_result as (
select 
	p.health_infra_id
	,p.name
	,coalesce(admission_entry, 0) as new_admission
	,coalesce(total_admission, 0) as admitted
	,coalesce(suspect, 0) as suspect
	,coalesce(conformed, 0) as conformed
    ,coalesce(pd.pending_positive, 0) as pending_positive
    ,coalesce(ed.death, 0) as death
    ,coalesce(ed.positive_dischage, 0) as positive_dischage
    ,coalesce(ed.other_dischage, 0) as other_dischage
    ,coalesce(ed.positive_refer, 0) as positive_refer
	,coalesce(ed.other_refer, 0) as other_refer
    ,coalesce(daily_status_entry, 0) as daily_status_entry
	,coalesce(total_admission - coalesce(daily_status_entry,0), 0) as not_updated_records
	,coalesce(on_air, 0) as on_air
	,coalesce(on_o2, 0) as on_o2
	,coalesce(on_ventilator, 0) as on_ventilator
	,coalesce(on_asymptomatic, 0) as asymptomatic
	,coalesce(on_mild, 0) as mild
	,coalesce(on_moderate, 0) as moderate
	,coalesce(on_critical, 0) as critical
	from parameters p
	left join admission_count ac on p.health_infra_id = ac.health_infra_id
	left join daily_status_entry dse on p.health_infra_id = dse.health_infra_id
    left join pending_det pd on pd.health_infra_id = p.health_infra_id
    left join extra_det ed on ed.health_infra_id = p.health_infra_id
)
	select 
	row_number() over () as "Sr No",
	health_infra_id as hidden_infra_id,
	name as "Facility",
	admitted as "Current Active Patients",
	suspect as "Suspect",
	conformed as "Confirmed",
    pending_positive as "Positive Case Admission Pending",
    positive_dischage as "Positive Discharge",
    other_dischage as "Other Discharge",
    positive_refer as "Positive Refer",
    other_refer as "Other Refer",
    death as "Death",
	new_admission as "Newly admitted",
	on_air as "On Air",
	on_o2 as "On O2",
	on_ventilator as "On Ventilator",
	asymptomatic as "Asymptomatic",
	mild as "Stable - Mild",
	moderate as "Stable-Moderate",
	critical as "Critical",
	daily_status_entry as "Record updated today",
	not_updated_records as "Record not updated today"
	from final_result 
	
	union all
	
	select 
	null,
	null,
	''<b>Total</b>'',
	sum(admitted),
	sum(suspect),
	sum(conformed),
    sum(pending_positive),
    sum(positive_dischage),
    sum(other_dischage),
    sum(positive_refer),
    sum(other_refer),
    sum(death),
	sum(new_admission),
	sum(on_air),
	sum(on_o2),
	sum(on_ventilator),
	sum(asymptomatic),
	sum(mild),
	sum(moderate),
	sum(critical),
	sum(daily_status_entry),
	sum(not_updated_records)
	from final_result',true,'ACTIVE','80e39c96-1b7a-425d-b423-07a3ebe41682');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1286,63746,'2019-08-07 14:13:59.523',1,'2021-01-13 20:22:06.427965',NULL,'with  types as (
select ''all'' as key, ''All'' as value, 1 as ord
union
select ''FOLL_OVE_SERV'' as key,''Overdue services follow'' as value, 2 as ord)
select * from types order by ord',true,'ACTIVE','b8061e44-f3bc-47a3-92c3-7c97bb516612'),
	 (1287,63746,'2019-08-07 14:13:59.525',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','608c4aff-ef87-425d-96a4-fe440a61d859'),
	 (1265,60512,'2019-08-01 15:32:16.931',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id','with prefered_language as (
select 	case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end as is_enlish
from um_user where id = #loggedInUserId#
),
location_ids as(
	select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1
),child_service_ids as (
	select location_ids.child_id,
	cmtc_child_screening_analytics_details.rch_child_service_master_id,
	cmtc_child_screening_analytics_details.member_id,
	cmtc_child_screening_analytics_details.muac,
	cmtc_child_screening_analytics_details.have_pedal_edema,
	cmtc_child_screening_analytics_details.sd_score,
	cmtc_child_screening_analytics_details.created_by,
	cmtc_child_screening_analytics_details.screening_id,
	cmtc_child_screening_analytics_details.admission_id,
	cmtc_child_screening_analytics_details.disease_id,
	cmtc_child_screening_analytics_details.apetite_test
	from location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id
	inner join cmtc_child_screening_analytics_details on location_hierchy_closer_det.child_id = cmtc_child_screening_analytics_details.location_id
	and cmtc_child_screening_analytics_details.rch_child_service_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
), child_with_0_to_5 as (
	select sel_loc_closer.parent_id as child_id,count(1) as child_0_5
	from rch_child_analytics_details loc_anlyts inner join location_hierchy_closer_det sel_loc_closer on loc_anlyts.loc_id = sel_loc_closer.child_id 
	inner join location_ids on location_ids.child_id = sel_loc_closer.parent_id
	where 
	loc_anlyts.dob >= current_date - interval ''5 year''    
	and loc_anlyts.member_state != ''DEAD''
	and loc_anlyts.death_date is null
	and loc_anlyts.member_id is not null
	group by sel_loc_closer.parent_id
),screened_by_fhw_count as (
	select child_service_ids.child_id,count(distinct child_service_ids.member_id) as screened_by_fhw_count
	from child_service_ids
	inner join um_user on child_service_ids.created_by = um_user.id and um_user.role_id = 30 and um_user.state=''ACTIVE''
	group by child_service_ids.child_id
),
last_screen_by_service_id as (	
	select member_id,location_ids.child_id 	
	from rch_child_analytics_details analytics inner join location_ids 	
	inner join location_hierchy_closer_det loc on loc.parent_id = location_ids.child_id	
	on analytics.loc_id = loc.child_id	
	where sam_child_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
),	
last_screen_by_service_id_count as (	
	select count(1) as last_screen_by_service_id_count,child_id from 	
	last_screen_by_service_id	
	group by child_id	
),sam_child_identified_count as (
	select child_service_ids.child_id,count(distinct child_service_ids.member_id) as sam_child_identified_count
	from child_service_ids
	where (child_service_ids.muac < 11.5 
			or child_service_ids.have_pedal_edema 
			or (child_service_ids.sd_score = ''SD3'' or child_service_ids.sd_score = ''SD4''))
	group by child_service_ids.child_id
),referred_count as (
	select child_service_ids.child_id,count(distinct child_service_ids.member_id) as referred_count
	from child_service_ids
	where (child_service_ids.muac < 11.5 
			or child_service_ids.have_pedal_edema 
			or (child_service_ids.sd_score = ''SD3'' or child_service_ids.sd_score = ''SD4''))
	and child_service_ids.screening_id is not null
	group by child_service_ids.child_id
),admission_count as (
	select child_service_ids.child_id,count(distinct child_service_ids.member_id) as admission_count
	from child_service_ids
	where child_service_ids.screening_id is not null
	and child_service_ids.admission_id is not null
	and (child_service_ids.muac < 11.5 
			or child_service_ids.have_pedal_edema 
			or (child_service_ids.sd_score = ''SD3'' or child_service_ids.sd_score = ''SD4''))
	group by child_service_ids.child_id
),no_medical_apetite_test_pass_count as (
	select child_service_ids.child_id,count(distinct child_service_ids.member_id) as no_medical_apetite_test_pass_count
	from child_service_ids
	where child_service_ids.screening_id is not null
	and child_service_ids.admission_id is not null
	and child_service_ids.disease_id is null
	and child_service_ids.apetite_test = ''PASS''
	and (child_service_ids.muac < 11.5 
			or child_service_ids.have_pedal_edema 
			or (child_service_ids.sd_score = ''SD3'' or child_service_ids.sd_score = ''SD4''))
	group by child_service_ids.child_id
),det as (
	select row_number() over() as sr_no, 
	location_master.id as hidden_location_id,
    case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
				else location_master.name end as loc,
	coalesce(child_0_5,0) as child_0_5,
	coalesce(screened_by_fhw_count,0) as screened_by_fhw_count,
	coalesce(sam_child_identified_count,0) as sam_child_identified_count,
        coalesce(last_screen_by_service_id_count.last_screen_by_service_id_count,0) as last_screen_by_service_id_count,	
	coalesce(referred_count,0) as referred_count,
	coalesce(admission_count,0) as admission_count,
	coalesce(no_medical_apetite_test_pass_count,0) as no_medical_apetite_test_pass_count
	from location_ids
	left join child_with_0_to_5 on location_ids.child_id = child_with_0_to_5.child_id
	left join screened_by_fhw_count on location_ids.child_id = screened_by_fhw_count.child_id
	left join sam_child_identified_count on location_ids.child_id = sam_child_identified_count.child_id
	left join last_screen_by_service_id_count on location_ids.child_id = last_screen_by_service_id_count.child_id
	left join referred_count on location_ids.child_id = referred_count.child_id
	left join admission_count on location_ids.child_id = admission_count.child_id
	left join no_medical_apetite_test_pass_count on location_ids.child_id = no_medical_apetite_test_pass_count.child_id
	inner join location_master on location_master.id = location_ids.child_id
    inner join prefered_language on true
)
select row_number() over() as "Sr. no",
det.loc as "Location",
det.hidden_location_id,
det.child_0_5 as "Total Children Under 5 Years",
det.screened_by_fhw_count as "Children screened by FHW",
det.sam_child_identified_count as "Total SAM Children identified",
det.last_screen_by_service_id_count as "Total SAM Children identified (Last Service)",	
case when (det.sam_child_identified_count = 0 or det.sam_child_identified_count is null or det.screened_by_fhw_count = 0 or det.screened_by_fhw_count is null) then 0 else 
	round(det.sam_child_identified_count*100.0/det.screened_by_fhw_count,2) end as "percent_col_Total SAM Children identified",
det.referred_count as "SAM identified child to be referred at CMTC/NRC",
case when (det.referred_count = 0 or det.referred_count is null or det.screened_by_fhw_count = 0 or det.screened_by_fhw_count is null) then 0 else 
	round(det.referred_count*100.0/det.screened_by_fhw_count,2) end as "percent_col_SAM identified child to be referred at CMTC/NRC",
det.admission_count as "Admission At CMTC/NRC",
case when (det.admission_count = 0 or det.admission_count is null or det.referred_count = 0 or det.referred_count is null) then 0 else 
	round(det.admission_count*100.0/det.referred_count,2) end as "percent_col_Admission At CMTC/NRC"
--det.no_medical_apetite_test_pass_count as "SAM with no medical complication and apetite test pass",
--case when (det.no_medical_apetite_test_pass_count = 0 or det.no_medical_apetite_test_pass_count is null or det.screened_by_fhw_count = 0 or det.screened_by_fhw_count is null) then 0 else 
--	round(det.no_medical_apetite_test_pass_count*100.0/det.screened_by_fhw_count,2) end as "percent_col_SAM with no medical complication and apetite test pass"
from det
union all
select null,
''<b>Total<b>'',
#location_id#,
sum(det.child_0_5),
sum(det.screened_by_fhw_count),
sum(det.sam_child_identified_count),
sum(det.last_screen_by_service_id_count),	
	case when (sum(det.sam_child_identified_count) = 0 or sum(det.sam_child_identified_count) is null or sum(det.screened_by_fhw_count) = 0 or sum(det.screened_by_fhw_count) is null) then 0 else 
	round(sum(det.sam_child_identified_count)*100.0/sum(det.screened_by_fhw_count),2) end,
sum(det.referred_count),
	case when (sum(det.referred_count) = 0 or sum(det.referred_count) is null or sum(det.screened_by_fhw_count) = 0 or sum(det.screened_by_fhw_count) is null) then 0 else 
	round(sum(det.referred_count)*100.0/sum(det.screened_by_fhw_count),2) end,
sum(det.admission_count),
	case when (sum(det.admission_count) = 0 or sum(det.admission_count) is null or sum(det.referred_count) = 0 or sum(det.referred_count) is null) then 0 else 
	round(sum(det.admission_count)*100.0/sum(det.referred_count),2) end
--sum(det.no_medical_apetite_test_pass_count),
--	case when (sum(det.no_medical_apetite_test_pass_count) = 0 or sum(det.no_medical_apetite_test_pass_count) is null or sum(det.screened_by_fhw_count) = 0 or sum(det.screened_by_fhw_count) is null) then 0 else 
--	round(sum(det.no_medical_apetite_test_pass_count)*100.0/sum(det.screened_by_fhw_count),2) end
from det;',true,'ACTIVE','35174b7c-2f5a-4e3b-a776-318d1267c87e'),
	 (15,1027,'2018-05-14 17:02:49.405',1,'2021-01-13 20:22:06.427965',NULL,'select id,name from um_role_master where state=''ACTIVE'';',true,'ACTIVE','e3d3c807-1b8b-4374-abec-b4bf3394f5d0'),
	 (518,1,'2019-02-14 15:59:24.15',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','22c22b1a-f432-4750-9c74-e7febd18c57a'),
	 (374,1,'2019-02-13 11:48:57.213',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','06f14771-5393-4922-83e1-ea258701cc1f'),
	 (1494,74840,'2020-01-21 17:28:57.11',1,'2021-01-13 20:22:06.427965',NULL,'select id,name from um_role_master where state = ''ACTIVE'' and id in (24,30)  order by name;',true,'ACTIVE','2637fc8c-f614-4ac2-8950-11329d595f01'),
	 (1150,63746,'2019-05-28 18:33:14.028',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','4663aa51-c875-47c8-828a-e7321cc07555'),
	 (751,58981,'2019-03-01 19:41:41.414',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','263dcd12-d4b1-485a-92e7-69d8520055fd'),
	 (1462,74841,'2020-01-06 15:16:07.222',1,'2021-01-13 20:22:06.427965','role_id','select name as role_id from um_role_master where state = ''ACTIVE'' and id = #role_id#',true,'ACTIVE','b0eef71a-f5e8-482c-a6c0-a5eddf0f5a32');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1464,74841,'2020-01-06 15:16:07.413',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','bb49a155-b737-4b7d-a542-490908c0bdbf'),
	 (1574,74841,'2020-04-09 18:05:35.766',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','866ce901-a427-449f-88df-782ee456ff96'),
	 (1560,409,'2020-04-08 16:58:01.333',1,'2021-01-13 20:22:06.427965','demographic_location_id,from_date,to_date,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
parameters as (
	select distinct (case when #location_id# is null then (case when loc_id = 2 then -1 else 2 end)
		else CAST(#location_id# AS INTEGER) end) as location_id,
	(case when #location_id# is null then ''null'' else CAST(''#demographic_location_id#'' AS TEXT) end) as demographic_group
	,(case when ''#from_date#'' = ''null'' then current_date else  to_date(''#from_date#'',''MM-DD-YYYY'') end) as from_date
	,(case when ''#to_date#'' = ''null'' then current_date  else to_date(''#to_date#'',''MM-DD-YYYY'') end) as to_date
	from um_user_location where user_id = #loggedInUserId# and state = ''ACTIVE''
),location_ids as(
    select vlc.parent_id from parameters p, vw_location_closure_det_by_parent_location_depth vlc 
    where vlc.location_id=p.location_id and vlc.depth=1 
    and (p.demographic_group=''null'' or vlc.child_demographic_type in 
    (select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
    ) group by vlc.parent_id
),
age_info as (
    select vlc.parent_id as loc_id,sum(total_0to5_children) as child_0_5, 
    sum(member_60_plus_age) as member_60_plus
    from parameters p 
	cross join vw_location_closure_det_by_parent_location_depth vlc  
    left join location_wise_analytics loc_anlyts on vlc.child_id = loc_anlyts.loc_id
    where 
    vlc.location_id=p.location_id and vlc.depth=1 
    and (p.demographic_group=''null'' or vlc.child_demographic_type in 
    (select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
    )
    group by vlc.parent_id
),
preg_info as (
    select vlc.parent_id as loc_id,sum(reg_preg_women) as reg_preg_women
    from parameters p
	cross join vw_location_closure_det_by_parent_location_depth vlc  
    left join rch_current_state_pregnancy_analytics_data preg_anlyts on vlc.child_id = preg_anlyts.location_id
    where 
    vlc.location_id=p.location_id and vlc.depth=1 
    and (p.demographic_group=''null'' or vlc.child_demographic_type in 
    (select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
    )
    group by vlc.parent_id
),
result_set as (
    select 
    vlc.parent_id as loc_id,
    sum(member_cnt) as memebr,
    sum(SYMPTOMATIC_less_then_5) as age_less_then_5,
    sum(SYMPTOMATIC_age_60_plus) as age_60_plus,
	sum(morbidity_age_60_plus) as morbidity_age_60_plus,
    sum(SYMPTOMATIC_is_pregnant) as is_pregnant,
    sum(any_illness_or_discomfort) as illness,
    sum(COUGH) as cough,
    sum(fever) as fever,
    sum(BREATHING_DIFFICULTY) as breathlessness,
    sum(fever_with_cough_or_BREATHING_DIFFICULTY) as fever_with_cough_or_BREATHING_DIFFICULTY,
    sum(SYMPTOMATIC) as SYMPTOMATIC,
    sum(treatment_started) as treatment_started,
    sum(refer_to_mo) as refer_to_mo,
    sum(examined_by_mo) as examined_by_mo,
    sum(sent_for_test) as sent_for_test,
	sum(decision_done) as decision_done,
	sum(sent_for_admission) as sent_for_admission,
	sum(sample_collected) as sample_collected,
	sum(sample_tested) as sample_tested	
	from parameters p 
	cross join vw_location_closure_det_by_parent_location_depth vlc 
    left join idsp2_location_date_wise_analytics idsp on vlc.child_id = idsp.location_id
    where vlc.location_id=p.location_id and vlc.depth=1 
    and (p.demographic_group=''null'' or vlc.child_demographic_type in 
    (select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
    )
	and idsp.service_date between p.from_date and p.to_date
	group by vlc.parent_id
),
total_cluster as (
select t.loc_id,count(1) filter (where population is not null) as no_of_cluster,sum(population) as population 
from (
    select distinct vlc.parent_id as loc_id,lcm.id,population
    from parameters p cross join vw_location_closure_det_by_parent_location_depth vlc 
    left join location_cluster_mapping_detail lcmd on vlc.child_id = lcmd.location_id and lcmd.state = ''ACTIVE''
	left join location_cluster_master lcm on lcm.id = lcmd.cluster_id and lcm.state = ''ACTIVE''
    where vlc.location_id=p.location_id and vlc.depth=1 
    and (p.demographic_group=''null'' or vlc.child_demographic_type in 
    (select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
    )
	) as t	
	group by t.loc_id
)
select  
    row_number() over(order by location_master.english_name) as "Sr No.",
        location_master.id as hidden_location_id,
  (select demographic_group from parameters) as hidden_demographic_location_id,
    case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name else location_master.name end as "Location",
    coalesce(total_cluster.no_of_cluster, 0) as "No. of clusters",
    coalesce(total_cluster.population, 0) as "Est. Population to be screened",
	coalesce(memebr, 0) as "Population screened",
    --case when total_cluster.population > 0 then coalesce(round(((memebr * 100.0) / NULLIF(total_cluster.population, 0)), 2), 0) else 0 end as "% coverage",
    coalesce(fever, 0) as "Fever",
    coalesce(cough, 0) as "Cough",
    coalesce(breathlessness, 0) as "Breathlessness",
    coalesce(fever_with_cough_or_BREATHING_DIFFICULTY, 0) as "Fever with Cough/Breathlessness",
    coalesce(SYMPTOMATIC, 0) as "Total no. of presons symptomatic",
	coalesce(age_less_then_5, 0) as "Symptomatic <5 Year",
	coalesce(child_0_5, 0) as "Total <5 Year",
    coalesce(age_60_plus, 0) as "Symptomatic 60+ Age",
    coalesce(member_60_plus, 0) as "Total 60+ Age",
	coalesce(morbidity_age_60_plus, 0) as "60+ Age With Comorbidity",
    coalesce(is_pregnant, 0) as "Symptomatic Pregnant Woman",
    coalesce(reg_preg_women, 0) as "Total Pregnant Woman",
    coalesce(treatment_started, 0) as "On spot treatment given",
    coalesce(refer_to_mo, 0) as "Refer to MO",
    coalesce(examined_by_mo, 0) as "Examined by MO",
    coalesce(sent_for_test, 0) as "Sent for test",
	coalesce(decision_done, 0) as "Decision by District Co-ordinator",
	coalesce(sent_for_admission, 0) as "Sent for admission",
	coalesce(sample_collected, 0) as "Samples Collected for testing",
	coalesce(sample_tested, 0) as "Samples tested"
	
from location_ids 
inner join prefered_language on true
inner join location_master on location_master.id = location_ids.parent_id
left join total_cluster on total_cluster.loc_id = location_ids.parent_id
left join result_set rs on rs.loc_id = location_ids.parent_id
left join age_info ai on ai.loc_id = location_ids.parent_id
left join preg_info pi on pi.loc_id = location_ids.parent_id
union all
select null,(case when #location_id# is null then 2 else #location_id# end)  as hidden_location_id,
(select demographic_group from parameters) as hidden_demographic_location_id,
''<b>Total<b>'',
coalesce(sum(total_cluster.no_of_cluster), 0) as "No. of clusters",
    coalesce(sum(total_cluster.population), 0) as "Est. Population to be screened",
	coalesce(sum(memebr), 0) as "Population screened",
    --coalesce(case when sum(NULLIF(total_cluster.population, 0)) > 0 then round(((sum(memebr) * 100.0) / sum(NULLIF(total_cluster.population, 0))), 2) else 0 end, 0) as "% coverage",
    coalesce(sum(fever), 0) as "Fever",
    coalesce(sum(cough), 0) as "Cough",
    coalesce(sum(breathlessness), 0) as "Breathlessness",
    coalesce(sum(fever_with_cough_or_BREATHING_DIFFICULTY), 0) as "Fever with Cough/Breathlessness",
    coalesce(sum(SYMPTOMATIC), 0) as "Total no. of presons symptomatic",
	coalesce(sum(age_less_then_5), 0) as "Symptomatic <5 Year",
    coalesce(sum(child_0_5), 0) as "Total <5 Year",
    coalesce(sum(age_60_plus), 0) as "Symptomatic 60+ Age",
    coalesce(sum(member_60_plus), 0) as "Total 60+ Age",
	coalesce(sum(morbidity_age_60_plus), 0) as "60+ Age With Comorbidity",
    coalesce(sum(is_pregnant), 0) as "Symptomatic Pregnant Woman",
    coalesce(sum(reg_preg_women), 0) as "Total Pregnant Woman",
    coalesce(sum(treatment_started), 0) as "On spot treatment given",
    coalesce(sum(refer_to_mo), 0) as "Refer to MO",
    coalesce(sum(examined_by_mo), 0) as "Examined to MO",
    coalesce(sum(sent_for_test), 0) as "Sent for test",
	coalesce(sum(decision_done), 0) as "Decision by District Co-ordinator",
	coalesce(sum(sent_for_admission), 0) as "Sent for admission",
	coalesce(sum(sample_collected), 0) as "Samples Collected for testing",
	coalesce(sum(sample_tested), 0) as "Samples tested "
from location_ids
inner join location_master on location_master.id = location_ids.parent_id
left join total_cluster on total_cluster.loc_id = location_ids.parent_id
left join result_set rs on rs.loc_id = location_ids.parent_id
left join age_info ai on ai.loc_id = location_ids.parent_id
left join preg_info pi on pi.loc_id = location_ids.parent_id',true,'ACTIVE','d21b17e0-e15b-4cea-a476-6135dc4dd0f0'),
	 (393,1,'2019-02-13 12:24:06.792',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','bfbfcfbd-6150-4a19-88e1-31964db27a89'),
	 (1410,66522,'2019-08-28 19:19:48.089',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','732f3299-c98e-47c9-9296-eb1a0ed27a3d'),
	 (1603,74841,'2020-04-22 18:35:23.579',1,'2021-01-13 20:22:06.427965',NULL,'with types as (
select ''''''SOH'''''' as key,''SOH'' as value, 1 as ord
union
select ''''''DRTECHO'''''' as key, ''DRTECHO'' as value, 2 as ord
)select * from types order by ord desc',true,'ACTIVE','55a87572-7f8f-4baa-b5f2-87301941d527'),
	 (394,1,'2019-02-13 12:24:06.794',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','3952f887-61be-4a3b-847a-faec059908e9'),
	 (1547,74841,'2020-03-25 10:57:00.596',1,'2021-01-13 20:22:06.427965',NULL,'select ''Feaver'' as "Filter Type"',true,'ACTIVE','506db584-33b7-4dcf-8912-91e1d20439d9'),
	 (1638,74841,'2020-06-23 01:02:46.731',1,'2021-01-13 20:22:06.427965','month_year,health_infra_id','with property as (
	select case when lfvd.value = ''Community Health Center'' then ''CHC''
	else lfvd.value end as infra_type ,hid.id as health_infra_id
	,case when ''#month_year#'' != ''null'' then to_date(''#month_year#'',''MM-DD-YYYY'') else null end as month_year
	from health_infrastructure_details hid
	left join listvalue_field_value_detail lfvd on lfvd.id = hid."type"
	where hid.id = cast(#health_infra_id# as integer)
),hmis_data as(
	select
	coalesce(sum(anc_reg), 0) as anc_reg,
	coalesce(sum(anc1), 0) as anc1,
	coalesce(sum(high_risk), 0) as high_risk,
	coalesce(sum(high_risk_follow_up), 0) as high_risk_follow_up,
	coalesce(sum(tt1), 0) as tt1,
	coalesce(sum(tt2), 0) as tt2,
	coalesce(sum(tt_booster), 0) as tt_booster,
	coalesce(sum(no_of_pw_180_ifa_given), 0) as no_of_pw_180_ifa_given,
	coalesce(sum(no_of_pw_ca_given), 0) as no_of_pw_ca_given,
	coalesce(sum(no_of_pw_alben_given), 0) as no_of_pw_alben_given,
	coalesce(sum(no_of_pw_with_more_then_4_anc_checkup), 0) as no_of_pw_with_more_then_4_anc_checkup,
	coalesce(sum(no_of_pw_anc_corticosteroids_given), 0) as no_of_pw_anc_corticosteroids_given,
	coalesce(sum(no_of_pw_with_hypertension), 0) as no_of_pw_with_hypertension,
	coalesce(sum(no_of_pw_with_hypertension_migrated_at_institution), 0) as no_of_pw_with_hypertension_migrated_at_institution,
	coalesce(sum(no_of_pw_tested_for_hb_4_or_more_time), 0) as hb_test_more_than_4_time,
	coalesce(sum(hbsag_test_cnt), 0) as hbsag_test_cnt,
	coalesce(sum(0), 0) as temp2,
	coalesce(sum(no_of_pw_with_hb_count_less_than_11), 0) as no_of_pw__with_hb_count_less_then_11,
	coalesce(sum(no_of_pw_with_hb_count_less_than_7), 0) as no_of_pw__with_hb_count_less_then_7,
	coalesce(sum(no_of_pw_tested_for_anemia_with_hb_count_less_than_7), 0) as no_of_pw_tested_for_anemia_with_hb_count_less_then_7,
	coalesce(sum(no_of_pw_tested_for_gdm), 0) as no_of_pw_tested_for_gdm,
	coalesce(sum(0), 0) as temp3,
	coalesce(sum(no_of_pw_tested_for_syphilis), 0) as no_of_pw_tested_for_syphilis,
	coalesce(sum(no_of_pw_tested_positive_for_syphilis), 0) as no_of_pw_tested_positive_for_syphilis,
	coalesce(sum(no_of_pw_treated_for_syphilis), 0) as no_of_pw_treated_for_syphilis,
	coalesce(sum(0), 0) as temp4,
	coalesce(sum(0), 0) as temp5,
	coalesce(sum(no_of_home_del), 0) as no_of_home_del,
	coalesce(sum(home_del_by_sba), 0) as home_del_by_sba,
	coalesce(sum(home_del_by_non_sba), 0) as home_del_by_non_sba,
	coalesce(sum(no_of_pw_misoprostol_given_home_del), 0) as no_of_pw_misoprostol_given_home_del,
	coalesce(sum(no_of_inst_del), 0) as no_of_inst_dl,
	coalesce(sum(no_of_delivery_in_transit), 0) as no_of_delivery_in_transit,
	coalesce(sum(no_of_inst_del_stayed_48_hrs), 0) as no_of_inst_del_stayed_48_hrs,
	coalesce(sum(no_of_c_section_delivery), 0) as no_of_c_section_delivery,
	coalesce(sum(no_of_c_section_delivery_at_night), 0) as no_of_c_section_delivery_at_night,
	coalesce(sum(live_birth_male), 0) as live_birth_male,
	coalesce(sum(live_birth_female), 0) as live_birth_female,
	coalesce(sum(no_of_pre_term_newborns), 0) as no_of_pre_term_newborns,
	coalesce(sum(abortion), 0) as abortion,
	coalesce(sum(abortion_medical_method), 0) as abortion_medical_method,
	coalesce(sum(abortion_surgical_method), 0) as abortion_surgical_method,
	coalesce(sum(mtp), 0) as mtp,
	coalesce(sum(hmis_rch_service_provided_during_year.no_of_complications_refered_to_hf), 0) as no_of_complications_refered_to_hf,
	coalesce(sum(mtp_medical_method), 0) as mtp_medical_method,
	coalesce(sum(mtp_surgical_method), 0) as mtp_surgical_method,
	coalesce(sum(mtp_more_than_12_weeks), 0) as mtp_more_than_12_weeks,
	coalesce(sum(mtp_complication_identified_post_abortion), 0) as mtp_complication_identified_post_abortion,
	coalesce(sum(mtp_complication_treated_post_abortion), 0) as mtp_complication_treated_post_abortion,
	coalesce(sum(no_of_pw_provided_contraception_post_abortion), 0) as no_of_pw_provided_contraception_post_abortion,
	coalesce(sum(weighed), 0) as weighed,
	coalesce(sum(weighed_less_than_2_5), 0) as weighed_less_than_2_5,
	coalesce(sum(breast_feeding_within_1_hr), 0) as breast_feeding_within_1_hr,
	coalesce(sum(no_complications_observed), 0) as no_complications_observed,
	coalesce(sum(no_complications_managed_at_facility), 0) as no_complications_managed_at_facility,
	coalesce(sum(no_of_pw_with_obstetric_complications), 0) as no_of_pw_with_obstetric_complications,
	coalesce(sum(no_of_pw_treated_with_blood_transfusion), 0) as no_of_pw_treated_with_blood_transfusion,
	coalesce(sum(no_of_pw_recived_post_partum_in_48_hrs_hd), 0) as no_of_pw_recived_post_partum_in_48_hrs_hd,
	coalesce(sum(no_of_pw_180_ifa_full_course_given), 0) as no_of_pw_180_ifa_full_course_given,
	coalesce(sum(0), 0) as temp6,
	coalesce(sum(no_of_nsv_or_cvc), 0) as no_of_nsv_or_cvc,
	coalesce(sum(no_of_laparoscopic_sterilizations_conducted), 0) as no_of_laparoscopic_sterilizations_conducted,
	coalesce(sum(no_of_mini_lap_sterilization_conducted), 0) as no_of_mini_lap_sterilization_conducted,
	coalesce(sum(no_of_postpartum_sterilizations), 0) as no_of_postpartum_sterilizations,
	coalesce(sum(no_of_post_abortion_sterilizations), 0) as no_of_post_abortion_sterilizations,
	coalesce(sum(no_of_interval_iucd_insertions), 0) as no_of_interval_iucd_insertions,
	coalesce(sum(no_of_postpartum_iucd_insertion), 0) as no_of_postpartum_iucd_insertion,
	coalesce(sum(no_of_post_abortion_iucd_insertion), 0) as no_of_post_abortion_iucd_insertion,
	coalesce(sum(no_of_iucd_removal), 0) as no_of_iucd_removal,
	coalesce(sum(injectable_cap_first_dose), 0) as injectable_cap_first_dose,
	coalesce(sum(injectable_cap_second_dose), 0) as injectable_cap_second_dose,
	coalesce(sum(injectable_cap_third_dose), 0) as injectable_cap_third_dose,
	coalesce(sum(injectable_cap_fourth_dose), 0) as injectable_cap_fourth_dose,
	coalesce(sum(no_of_oral_pills_distributed_by_facility), 0) as no_of_oral_pills_distributed_by_facility,
	coalesce(sum(no_of_oral_pills_distributed_by_asha), 0) as no_of_oral_pills_distributed_by_asha,
	coalesce(sum(no_of_condom_distributed_by_facility), 0) as no_of_condom_distributed_by_facility,
	coalesce(sum(no_of_condom_distributed_by_asha), 0) as no_of_condom_distributed_by_asha,
	coalesce(sum(no_of_centchroman_pills_distributed_by_facility), 0) as no_of_centchroman_pills_distributed_by_facility,
	coalesce(sum(no_of_centchroman_pills_distributed_by_asha), 0) as no_of_centchroman_pills_distributed_by_asha,
	coalesce(sum(no_of_ptk_utilized_by_facility), 0) as no_of_ptk_utilized_by_facility,
	coalesce(sum(no_of_ptk_utilized_by_ash), 0) as no_of_ptk_utilized_by_ash,
	coalesce(sum(vitamin_k_given), 0) as vitamin_k_given,
	coalesce(sum(bcg_given), 0) as bcg_given,
	coalesce(sum(penta_1_given), 0) as penta_1_given,
	coalesce(sum(penta_2_given), 0) as penta_2_given,
	coalesce(sum(penta_3_given), 0) as penta_3_given,
	coalesce(sum(opv_0_given), 0) as opv_0_given,
	coalesce(sum(opv_1_given), 0) as opv_1_given,
	coalesce(sum(opv_2_given), 0) as opv_2_given,
	coalesce(sum(opv_3_given), 0) as opv_3_given,
	coalesce(sum(hep_b_given), 0) as hep_b_given,
	coalesce(sum(fipv_1_given), 0) as fipv_1_given,
	coalesce(sum(fipv_2_given), 0) as fipv_2_given,
	coalesce(sum(rota_virus_1_given), 0) as rota_virus_1_given,
	coalesce(sum(rota_virus_2_given), 0) as rota_virus_2_given,
	coalesce(sum(rota_virus_3_given), 0) as rota_virus_3_given,
	coalesce(sum(measles_rubella_1_given_in_9_to_11_month), 0) as measles_rubella_1_given_in_9_to_11_month,
	coalesce(sum(measles_rubella_2_given_in_9_to_11_month), 0) as measles_rubella_2_given_in_9_to_11_month,
	coalesce(sum(fully_immunized_bwtween_9_to_11_months), 0) as fully_immunized_bwtween_9_to_11_months,
	coalesce(sum(fully_immunized_bwtween_9_to_11_months_male), 0) as fully_immunized_bwtween_9_to_11_months_male,
	coalesce(sum(fully_immunized_bwtween_9_to_11_months_female), 0) as fully_immunized_bwtween_9_to_11_months_female,
	coalesce(sum(measles_rubella_1_given), 0) as measles_rubella_1_given,
	coalesce(sum(measles_1_given), 0) as measles_1_given,
	coalesce(sum(measles_rubella_2_given), 0) as measles_rubella_2_given,
	coalesce(sum(measles_or_rubella_2_given), 0) as measles_or_rubella_2_given,
	coalesce(sum(dpt_booster_given), 0) as dpt_booster_given,
	coalesce(sum(opv_booster_given), 0) as opv_booster_given,
	coalesce(sum(no_of_cases_of_aefi_minor), 0) as no_of_cases_of_aefi_minor,
	coalesce(sum(no_of_cases_of_aefi_severe), 0) as no_of_cases_of_aefi_severe,
	coalesce(sum(no_of_cases_of_aefi_serious), 0) as no_of_cases_of_aefi_serious,
	coalesce(sum(vitamin_a_given), 0) as vitamin_a_given,
	coalesce(sum(ifa_given), 0) as ifa_given,
	coalesce(sum(unweighted_child_given_health_checkup), 0) as unweighted_child_given_health_checkup,
	coalesce(sum(childhood_diseases_pneumonia), 0) as childhood_diseases_pneumonia,
	coalesce(sum(childhood_diseases_asthma), 0) as childhood_diseases_asthma,
	coalesce(sum(childhood_diseases_sepsis), 0) as childhood_diseases_sepsis,
	coalesce(sum(childhood_diseases_diphtheria), 0) as childhood_diseases_diphtheria,
	coalesce(sum(childhood_diseases_pertussis), 0) as childhood_diseases_pertussis,
	coalesce(sum(childhood_diseases_tetanus_neonatorum), 0) as childhood_diseases_tetanus_neonatorum,
	coalesce(sum(childhood_diseases_sam), 0) as childhood_diseases_sam,
	coalesce(sum(0), 0) as temp7,
	coalesce(sum(0), 0) as temp8,
	coalesce(sum(no_of_hypertension_cases_screened), 0) as no_of_hypertension_cases_screened,
	coalesce(sum(no_of_hypertension_cases), 0) as no_of_hypertension_cases,
	coalesce(sum(no_of_hypertension_cases_in_treatment), 0) as no_of_hypertension_cases_in_treatment,
	coalesce(sum(no_of_diabetes_cases_screened), 0) as no_of_diabetes_cases_screened,
	coalesce(sum(no_of_diabetes_cases), 0) as no_of_diabetes_cases,
	coalesce(sum(no_of_diabetes_cases_in_treatment), 0) as no_of_diabetes_cases_in_treatment,
	coalesce(sum(no_of_hypertension_and_diabetes_cases_screened), 0) as no_of_hypertension_and_diabetes_cases_screened,
	coalesce(sum(no_of_hypertension_and_diabetes_cases), 0) as no_of_hypertension_and_diabetes_cases,
	coalesce(sum(no_of_hypertension_and_diabetes_cases_in_treatment), 0) as no_of_hypertension_and_diabetes_cases_in_treatment,
	coalesce(sum(no_of_oral_cancer_cases_screened), 0) as no_of_oral_cancer_cases_screened,
	coalesce(sum(no_of_oral_cancer_cases), 0) as no_of_oral_cancer_cases,
	coalesce(sum(no_of_oral_cancer_cases_in_followup), 0) as no_of_oral_cancer_cases_in_followup,
	coalesce(sum(no_of_breast_cancer_cases_screened), 0) as no_of_breast_cancer_cases_screened,
	coalesce(sum(no_of_breast_cancer_cases), 0) as no_of_breast_cancer_cases,
	coalesce(sum(no_of_breast_cancer_cases_in_treatment), 0) as no_of_breast_cancer_cases_in_treatment,
	coalesce(sum(no_of_cervical_cases_screened), 0) as no_of_cervical_cases_screened,
	coalesce(sum(no_of_cervical_cases), 0) as no_of_cervical_cases,
	coalesce(sum(no_of_cervical_cases_in_treatment), 0) as no_of_cervical_cases_in_treatment,
	coalesce(sum(no_of_outpatient_diabetes), 0) as no_of_outpatient_diabetes,
	coalesce(sum(no_of_outpatient_hypertension), 0) as no_of_outpatient_hypertension,
	coalesce(sum(no_of_hypertension_and_diabetes_outpatients), 0) as no_of_hypertension_and_diabetes_outpatients,
	coalesce(sum(no_of_allopathic_outpatient_attendance), 0) as no_of_allopathic_outpatient_attendance,
	coalesce(sum(no_of_operation_major), 0) as no_of_operation_major,
	coalesce(sum(no_of_operation_minor), 0) as no_of_operation_minor,
	coalesce(sum(no_of_child_admitted_at_nrc), 0) as no_of_child_admitted_at_nrc,
	coalesce(sum(no_of_child_discharge_after_weight_gain_nrc), 0) as no_of_child_discharge_after_weight_gain_nrc,
	coalesce(sum(no_of_lab_test_done), 0) as no_of_lab_test_done,
	coalesce(sum(no_of_pw_tested_for_hiv), 0) as no_of_pw_tested_for_hiv,
	coalesce(sum(no_of_deaths_in_1_to_24_hrs_at_facility), 0) as no_of_deaths_in_1_to_24_hrs_at_facility,
	coalesce(sum(no_of_deaths_in_1_to_24_hrs_at_community), 0) as no_of_deaths_in_1_to_24_hrs_at_community,
	coalesce(sum(no_of_deaths_in_transit), 0) as no_of_deaths_in_transit,
	coalesce(sum(no_of_deaths_in_1_week_at_facility), 0) as no_of_deaths_in_1_week_at_facility,
	coalesce(sum(no_of_deaths_in_1_week_at_community), 0) as no_of_deaths_in_1_week_at_community,
	coalesce(sum(no_of_deaths_in_8_to_28_days_at_facility), 0) as no_of_deaths_in_8_to_28_days_at_facility,
	coalesce(sum(no_of_deaths_in_8_to_28_days_at_community), 0) as no_of_deaths_in_8_to_28_days_at_community,
	coalesce(sum(id_upto_4_weeks_dueto_sepsis), 0) as id_upto_4_weeks_dueto_sepsis,
	coalesce(sum(id_upto_4_weeks_dueto_asphyxia), 0) as id_upto_4_weeks_dueto_asphyxia,
	coalesce(sum(id_upto_4_weeks_dueto_other), 0) as id_upto_4_weeks_dueto_other,
	coalesce(sum(id_upto_12_moths_dueto_pneumonia), 0) as id_upto_12_moths_dueto_pneumonia,
	coalesce(sum(id_upto_12_moths_dueto_diarrhoea), 0) as id_upto_12_moths_dueto_diarrhoea,
	coalesce(sum(id_upto_12_moths_dueto_feaver), 0) as id_upto_12_moths_dueto_feaver,
	coalesce(sum(id_upto_12_moths_dueto_measles), 0) as id_upto_12_moths_dueto_measles,
	coalesce(sum(id_upto_12_moths_dueto_other), 0) as id_upto_12_moths_dueto_other,
	coalesce(sum(no_of_infant_deaths_1_to_12_months_at_facility), 0) as no_of_infant_deaths_1_to_12_months_at_facility,
	coalesce(sum(no_of_infant_deaths_1_to_12_months_at_community), 0) as no_of_infant_deaths_1_to_12_months_at_community,
	coalesce(sum(no_of_infant_deaths_1_to_12_months_in_transit), 0) as no_of_infant_deaths_1_to_12_months_in_transit,
	coalesce(sum(cd_upto_5_years_dueto_pneumonia), 0) as cd_upto_5_years_dueto_pneumonia,
	coalesce(sum(cd_upto_5_years_dueto_diarrhoea), 0) as cd_upto_5_years_dueto_diarrhoea,
	coalesce(sum(cd_upto_5_years_dueto_fever), 0) as cd_upto_5_years_dueto_fever,
	coalesce(sum(cd_upto_5_years_dueto_measles), 0) as cd_upto_5_years_dueto_measles,
	coalesce(sum(cd_upto_5_years_dueto_others), 0) as cd_upto_5_years_dueto_others,
	coalesce(sum(no_of_child_death_1_to_5_years_due_to_cause), 0) as no_of_child_death_1_to_5_years_due_to_cause,
	coalesce(sum(no_of_child_death_reported_through_cbcdr), 0) as no_of_child_death_reported_through_cbcdr,
	coalesce(sum(total_fbcdr_done), 0) as total_fbcdr_done,
	coalesce(sum(no_of_maternal_death_due_to_aph), 0) as no_of_maternal_death_due_to_aph,
	coalesce(sum(no_of_maternal_death_due_to_pr_pph_issue), 0) as no_of_maternal_death_due_to_pr_pph_issue,
	coalesce(sum(no_of_maternal_death_due_to_pr_anaemia_issue), 0) as no_of_maternal_death_due_to_pr_anaemia_issue,
	coalesce(sum(no_of_maternal_death_due_to_pr_sepsis), 0) as no_of_maternal_death_due_to_pr_sepsis,
	coalesce(sum(no_of_maternal_death_due_to_abortive_outcome), 0) as no_of_maternal_death_due_to_abortive_outcome,
	coalesce(sum(no_of_maternal_death_due_to_obstructed_labour), 0) as no_of_maternal_death_due_to_obstructed_labour,
	coalesce(sum(no_of_maternal_death_due_to_hypertensive_disorder), 0) as no_of_maternal_death_due_to_hypertensive_disorder,
	coalesce(sum(no_of_maternal_death_due_to_cd), 0) as no_of_maternal_death_due_to_cd,
	coalesce(sum(no_of_maternal_death_due_to_ld), 0) as no_of_maternal_death_due_to_ld,
	coalesce(sum(no_of_maternal_death_due_to_rd), 0) as no_of_maternal_death_due_to_rd,
	coalesce(sum(no_of_maternal_death_due_to_infection), 0) as no_of_maternal_death_due_to_infection,
	coalesce(sum(no_of_maternal_death_due_to_bd_intrasit), 0) as no_of_maternal_death_due_to_bd_intrasit,
	coalesce(sum(no_of_maternal_death_due_to_other_causes), 0) as no_of_maternal_death_due_to_other_causes,
	coalesce(sum(number_of_maternal_death_due_to_other_causes), 0) as number_of_maternal_death_due_to_other_causes,
	coalesce(sum(pw_provided_free_medicines_jssk), 0) as pw_provided_free_medicines_jssk,
	coalesce(sum(pw_provided_free_diet_jssk), 0) as pw_provided_free_diet_jssk,
	coalesce(sum(pw_provided_free_diagnostics_jssk), 0) as pw_provided_free_diagnostics_jssk,
	coalesce(sum(pw_provided_free_home_to_facility_trasport_jssk), 0) as pw_provided_free_home_to_facility_trasport_jssk,
	coalesce(sum(pw_provided_free_home_interfacility_transfers_jssk), 0) as pw_provided_free_home_interfacility_transfers_jssk,
	coalesce(sum(pw_provided_free_drop_back_to_home_jssk), 0) as pw_provided_free_drop_back_to_home_jssk,
	coalesce(sum(sick_infant_provided_free_medicines_jssk), 0) as sick_infant_provided_free_medicines_jssk,
	coalesce(sum(sick_infant_provided_free_drop_back_to_home_jssk), 0) as sick_infant_provided_free_drop_back_to_home_jssk,
	coalesce(sum(sick_infant_provided_free_diagnostics_jssk), 0) as sick_infant_provided_free_diagnostics_jssk,
	coalesce(sum(sick_infant_provided_free_home_to_facility_trasport_jssk), 0) as sick_infant_provided_free_home_to_facility_trasport_jssk,
	coalesce(sum(sick_infant_provided_free_home_interfacility_transfers_jssk), 0) as sick_infant_provided_free_home_interfacility_transfers_jssk,
	coalesce(sum(sick_infant_provided_free_drop_back_to_home_jssk), 0) as assick_infant_provided_free_drop_back_to_home_jssk
	from health_infrastructure_details lhc
	left join property on lhc.id = property.health_infra_id    
	left join hmis_rch_service_provided_during_year on lhc.id = hmis_rch_service_provided_during_year.health_infra_id
	and hmis_rch_service_provided_during_year.month_year = property.month_year
	left join ncd_service_provided_during_year_t on lhc.id = ncd_service_provided_during_year_t.health_infra_id
	and ncd_service_provided_during_year_t.month_year = property.month_year
	left join hmis_child_services_given_analytics on lhc.id = hmis_child_services_given_analytics.health_infa_id
	 and hmis_child_services_given_analytics.month_year = property.month_year
),final_data as (
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''1.1'' as "Sr No", ''Total number of pregnant women registered for ANC '' as "Data Item", anc_reg as count from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''1.1.1'', ''Out of the total ANC registered, number registered within 1st trimester (within 12 weeks)'', anc1 from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''1.1.2'', ''Number of High risk pregnant women identified'', high_risk from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''1.1.3'', ''out of above number of High Risk Pregnant women received fiollw up visits'', high_risk_follow_up from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''1.2.1'', ''Number of PW given TT1/Td1'', tt1 from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''1.2.2'', ''Number of PW given TT2/Td2'', tt2 from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''1.2.3'', ''Number of PW given TT/Td Booster'', tt_booster from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''1.2.4'', ''Number of PW given 180 Iron Folic Acid (IFA) tablets '', no_of_pw_180_ifa_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''1.2.5'', ''Number of PW given 360 Calcium tablets '', no_of_pw_ca_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''1.2.6'', ''Number of PW given one Albendazole tablet after 1st trimester'', no_of_pw_alben_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''1.2.7'', ''Number of PW received 4 or more ANC check ups'', no_of_pw_with_more_then_4_anc_checkup from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''1.2.8'', ''Number of PW given ANC Corticosteroids in Pre Term Labour'', no_of_pw_anc_corticosteroids_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''1.3.1'', ''New cases of PW with hypertension detected '', no_of_pw_with_hypertension from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''1.3.1.a'', ''Out of the new cases of PW with hypertension detected, cases managed at institution '', no_of_pw_with_hypertension_migrated_at_institution from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''1.4.1'', ''Number of PW tested for Haemoglobin (Hb ) 4 or more than 4 times for respective ANCs'', hb_test_more_than_4_time from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''1.4.2'', ''Total Number of PW tested for Haemoglobin (Hb )'', hbsag_test_cnt from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''1.4.3'', ''Out of Total Number of PW tested for Haemoglobin (Hb ):'', temp2 from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''1.4.3.a'', ''Number of PW having Hb level<11(7.1 to 10.9)'', no_of_pw__with_hb_count_less_then_11 from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''1.4.3.b'', ''Number of PW having Hb level<7 '', no_of_pw__with_hb_count_less_then_7 from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''1.4.4'', ''Number of PW  treated for severe anaemia (Hb<7)'', no_of_pw_tested_for_anemia_with_hb_count_less_then_7 from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''1.5.2'', ''Number of PW tested positive for GDM'', no_of_pw_tested_for_gdm from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''1.6'', ''Pregnant Women (PW) with Syphilis'', temp3 from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''1.6.2.a'', ''Number of pregnant women tested for Syphilis'', no_of_pw_tested_for_syphilis from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''1.6.2.b'', ''Number of pregnant women tested found sero positive for Syphilis'', no_of_pw_tested_positive_for_syphilis from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''1.6.2.c'', ''Number of syphilis positive pregnanat women treated for Syphilis'', no_of_pw_treated_for_syphilis from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''2.1'', ''Deliveries conducted at Home'', no_of_home_del from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''2.1.1.a'', ''Number of Home Deliveries attended by Skill Birth Attendant(SBA) (Doctor/Nurse/ANM/Midwife) '', home_del_by_sba from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''2.1.1.b'', ''Number of Home Deliveries attended by Non SBA (Trained Birth Attendant(TBA) /Relatives/etc.)'', home_del_by_non_sba from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''2.1.2'', ''Number of PW given Tablet Misoprostol during home delivery'', no_of_pw_misoprostol_given_home_del from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''2.2'', ''Number of Institutional Deliveries conducted (Including C-Sections)'', no_of_inst_dl from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''2.2.1'', ''Delivery took place in Transit (during home to health facility, in referral from one health facility to another, in ambulance, etc.)'', no_of_delivery_in_transit from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''2.2.2'', ''Out of total institutional  deliveries(excluding C-section), number of women have stayed till 48 hours '', no_of_inst_del_stayed_48_hrs from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''3.1'', ''Total C -Section deliveries performed'', no_of_c_section_delivery from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''3.1.1'', ''C-sections, performed at night (8 PM- 8 AM)'', no_of_c_section_delivery_at_night from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''4.1.1.a'', ''Live Birth - Male'', live_birth_male from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''4.1.1.b'', ''Live Birth - Female'', live_birth_female from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''4.1.2'', ''Number of Pre term newborns ( < 37 weeks of pregnancy)'', no_of_pre_term_newborns from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''4.2'', ''Abortion (spontaneous)'', abortion from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''4.3'', ''Abortion by Medical methods'', abortion_medical_method from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''4.4'', ''Abortion by Surgical methods'', abortion_surgical_method from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''4.3.1.a'', ''MTP up to 12 weeks of pregnancy through '', mtp from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''4.3.1.a.i.'', ''Medical methods'', mtp_medical_method from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''4.3.1.a.i.'', ''Surgical methods'', mtp_surgical_method from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''4.3.1.b'', ''MTP more than 12 weeks of pregnancy'', mtp_more_than_12_weeks from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''4.3.2.a'', ''Post Abortion/ MTP Complications Identified'', mtp_complication_identified_post_abortion from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''4.3.2.b'', ''Post Abortion/ MTP Complications Treated'', mtp_complication_treated_post_abortion from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''4.3.3'', ''Number of women provided with post abortion/ MTP contraception '', no_of_pw_provided_contraception_post_abortion from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''4.4.1'', ''Number of newborns weighed at birth'', weighed from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''4.4.2'', ''Number of newborns having weight less than 2.5 kg'', weighed_less_than_2_5 from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''4.4.3'', ''Number of Newborns breast fed within 1 hour of birth '', breast_feeding_within_1_hr from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''4.4.4'', ''Number of Newborns omplications identified (birth defects, deformity, birth asphyxia etc.)'', no_complications_observed from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''4.4.5'', ''Out of above, newborns compilcations managed at the facility'', no_complications_managed_at_facility from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''4.4.6'', ''out of newborns compilcations, cases refereed to higher facilities'', no_of_complications_refered_to_hf from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''5.1'', ''Number of cases of pregnant women with Obstetric Complications attended (Antepartum haemorrhage (APH), Post-Partum Hemorrhage (PPH), Sepsis, Eclampsia, Obstructed labour and others) '', no_of_pw_with_obstetric_complications from hmis_data
	union all
	select ''CHC,SDH,DH'' as display_at, ''5.2'', ''Number of Complicated pregnancies treated with Blood Transfusion'', no_of_pw_treated_with_blood_transfusion from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''5.3'', ''Number of complicated pregnancy cases referred to higher facilities'', no_of_complications_refered_to_hf from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''6.1'', ''Women receiving 1st post partum checkups within 48 hours of home delivery'', no_of_pw_recived_post_partum_in_48_hrs_hd from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''6.3'', ''Number of mothers provided full course of 180 IFA tablets after delivery'', no_of_pw_180_ifa_full_course_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''6.4'', ''Number of mothers provided 360 Calcium tablets after delivery'', temp6 from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''8.1.1'', ''Number of Non Scalpel Vasectomy (NSV) / Conventional Vasectomy conducted'', no_of_nsv_or_cvc from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''8.2.1'', ''Number of Laparoscopic sterilizations (excluding post abortion) conducted'', no_of_laparoscopic_sterilizations_conducted from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''8.2.2'', ''Number of Interval Mini-lap (other than post-partum and post abortion) sterilizations conducted'', no_of_mini_lap_sterilization_conducted from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''8.2.3'', ''Number of Postpartum sterilizations (within 7 days of delivery by minilap or concurrent with caesarean section) conducted'', no_of_postpartum_sterilizations from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''8.2.4'', ''Number of Post Abortion sterilizations (within 7 days of spontaneous or surgical abortion) conducted'', no_of_post_abortion_sterilizations from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''8.3'', ''Number of Interval IUCD Insertions (excluding PPIUCD and PAIUCD)'', no_of_interval_iucd_insertions from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''8.4'', ''Number of Postpartum (within 48 hours of delivery) IUCD insertions'', no_of_postpartum_iucd_insertion from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''8.5'', ''Number of Post Abortion (within 12 days of spontaneous or surgical abortion) IUCD insertions'', no_of_post_abortion_iucd_insertion from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''8.6'', ''Number of IUCD Removals '', no_of_iucd_removal from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''8.8'', ''Injectable Contraceptive-Antara Program- First Dose'', injectable_cap_first_dose from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''8.9'', ''Injectable Contraceptive-Antara Program- Second Dose'', injectable_cap_second_dose from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''8.10'', ''Injectable Contraceptive-Antara Program- Third Dose'', injectable_cap_third_dose from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''8.11'', ''Injectable Contraceptive-Antara Program- Fourth or more than fourth'', injectable_cap_fourth_dose from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''8.12.a.'', ''Number of Combined Oral Pills Cycle  distributed by the facility'', no_of_oral_pills_distributed_by_facility from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''8.12.b.'', ''Number of   Combined Oral Pills Cycle  distributed by ASHA  under the HDC ( Home Delivery of Contraceptives)'', no_of_oral_pills_distributed_by_asha from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''8.13.a'', ''Number of condom pieces distributed by the facility'', no_of_condom_distributed_by_facility from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''8.13.b'', ''Number of Condom pieces  distributed by ASHA  under the HDC ( Home Delivery of Contraceptives)'', no_of_condom_distributed_by_asha from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''8.14.a'', ''Number of  Centchroman (weekly) pills distributed by the facility '', no_of_centchroman_pills_distributed_by_facility from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''8.14.b'', ''Number of  Centchroman (weekly) pills distributed by  ASHA '', no_of_centchroman_pills_distributed_by_asha from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''8.16.a'', ''Number of Pregnancy Testing  kits  utilized by the facility '', no_of_ptk_utilized_by_facility from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''8.16.b'', ''Number of Pregnancy Testing  kits utilized by  ASHA  '', no_of_ptk_utilized_by_ash from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.1.1'', ''Child immunisation - Vitamin K (Birth Dose)'', vitamin_k_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.1.2'', ''Child immunisation - BCG'', bcg_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.1.6'', ''Child immunisation - Pentavalent 1'', penta_1_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.1.7'', ''Child immunisation - Pentavalent 2'', penta_2_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.1.8'', ''Child immunisation - Pentavalent 3'', penta_3_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.1.9'', ''Child immunisation - OPV 0 (Birth Dose)'', opv_0_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.1.10'', ''Child immunisation - OPV1'', opv_1_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.1.11'', ''Child immunisation - OPV2'', opv_2_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.1.12'', ''Child immunisation - OPV3'', opv_3_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.1.13'', ''Child immunisation - Hepatitis-B0 (Birth Dose)'', hep_b_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.1.17'', ''Child immunisation - Inactivated Injectable Polio Vaccine 1 (IPV 1)'', fipv_1_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.1.18'', ''Child immunisation - Inactivated Injectable Polio Vaccine 2 (IPV 2) '', fipv_2_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.1.19'', ''Child immunisation - Rotavirus 1'', rota_virus_1_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.1.20'', ''Child immunisation - Rotavirus 2'', rota_virus_2_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.1.21'', ''Child immunisation - Rotavirus 3'', rota_virus_3_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.2.1'', ''Child immunisation (9-11months) - Measles & Rubella (MR)- 1st Dose'', measles_rubella_1_given_in_9_to_11_month from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.2.2'', ''Child immunisation (9-11months) - Measles 1st dose'', measles_rubella_2_given_in_9_to_11_month from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.2.4'' ,''Number of children aged between 9 and 11 months fully immunized'', fully_immunized_bwtween_9_to_11_months from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.2.4.a'' ,''Children aged between 9 and 11 months fully immunized- Male'', fully_immunized_bwtween_9_to_11_months_male from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.2.4.b'' ,''Children aged between 9 and 11 months fully immunized - Female'', fully_immunized_bwtween_9_to_11_months_female from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.3.1'' ,''Child immunisation - Measles & Rubella (MR)- 1st Dose'', measles_rubella_1_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.3.2'' ,''Child immunisation - Measles-1st dose'', measles_1_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.4.1'' ,''Child immunisation - Measles & Rubella (MR)- 2nd Dose (16-24 months)'', measles_rubella_2_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.4.2'' ,''Child immunisation - Measles 2nd dose (More than 16 months)'', measles_or_rubella_2_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.4.3'' ,''Child immunisation - DPT 1st Booster '', dpt_booster_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.4.4'' ,''Child immunisation - OPV Booster'', opv_booster_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.6.1'', ''Number of cases of AEFI -Minor'', no_of_cases_of_aefi_minor from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.6.2'', ''Number of cases of AEFI - Severe'', no_of_cases_of_aefi_severe from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.6.3'', ''Number of cases of AEFI - Serious'', no_of_cases_of_aefi_serious from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.8.1'', ''Child immunisation - Vitamin A Dose - 1'', vitamin_a_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.9'', ''Number of children (6-59 months) provided 8-10 doses (1ml) of IFA syrup (Bi weekly)'', ifa_given from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''9.11'', ''Number of severely underweight children provided Health Checkup (0-5 yrs)'', unweighted_child_given_health_checkup from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''10.1'', ''Childhood Diseases - Pneumonia'', childhood_diseases_pneumonia from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''10.2'', ''Childhood Diseases - Asthma'', childhood_diseases_asthma from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''10.3'', ''Childhood Diseases - Sepsis'', childhood_diseases_sepsis from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''10.4'', ''Childhood Diseases - Diphtheria'', childhood_diseases_diphtheria from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''10.5'', ''Childhood Diseases - Pertussis'', childhood_diseases_pertussis from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''10.6'', ''Childhood Diseases - Tetanus Neonatorum'', childhood_diseases_tetanus_neonatorum from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''10.15'', ''Childhood Diseases - Severe Acute Malnutrition (SAM)'', childhood_diseases_sam from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''14.0.1'', ''HWC Screening services'', temp7 from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''14.0.1.1'', ''Hypertension'', temp8 from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''14.0.1.1.a'', ''Number of hypertension cases screened'', no_of_hypertension_cases_screened from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''14.0.1.1.b'', ''out of above, Number diagnosed with hypertension'', no_of_hypertension_cases from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''14.0.1.1.c'', ''Number of hypertension cases on treatment'', no_of_hypertension_cases_in_treatment from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''14.0.1.2.a'', ''Number of diabetes cases screened'', no_of_diabetes_cases_screened from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''14.0.1.2.b'', ''out of above, Number diagnosed with diabetes'', no_of_diabetes_cases from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''14.0.1.2.c'', ''Number of diabetes cases on treatment'', no_of_diabetes_cases_in_treatment from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''14.0.1.3.a'', ''Number of hypertension & diabetes cases screened'', no_of_hypertension_and_diabetes_cases_screened from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''14.0.1.3.b'', ''out of above, Number diagnosed with hypertension & diabetes'', no_of_hypertension_and_diabetes_cases from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''14.0.1.3.c'', ''Number of hypertension & diabetes cases on treatment'', no_of_hypertension_and_diabetes_cases_in_treatment from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''14.0.1.4.a'', ''Number of Oral cancer cases screened'', no_of_oral_cancer_cases_screened from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''14.0.1.4.b'', ''out of above, Number of oral cancer cases referred'', no_of_oral_cancer_cases from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''14.0.1.4.c'', ''Number of oral cancer cases on follow up care'', no_of_oral_cancer_cases_in_followup from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''14.0.1.5.a'', ''Number of breast cancer cases screened'', no_of_breast_cancer_cases_screened from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''14.0.1.5.b'', ''out of above, Number of breast cases referred'', no_of_breast_cancer_cases from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''14.0.1.5.c'', ''Number of breast cancer cases on follow up care'', no_of_breast_cancer_cases_in_treatment from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''14.0.1.6.a'', ''Number of cervical cancer cases screened'', no_of_cervical_cases_screened from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''14.0.1.6.b'', ''out of above, Number of cervical cases referred'', no_of_cervical_cases from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''14.0.1.6.c'', ''Number of cervical cancer cases on follow up care'', no_of_cervical_cases_in_treatment from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''14.1.1'', ''Outpatient - Diabetes'', no_of_outpatient_diabetes from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''14.1.2'', ''Outpatient - Hypertension'', no_of_outpatient_hypertension from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''14.1.3'', ''Outpatients- both Hypertension and Diabetes'', no_of_hypertension_and_diabetes_outpatients from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''14.2.1'', ''Allopathic- Outpatient attendance'', no_of_allopathic_outpatient_attendance from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''14.8.1'', ''Operation major (General and spinal anaesthesia)'', no_of_operation_major from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''14.8.4'', ''Operation minor (No or local anaesthesia)'', no_of_operation_minor from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''14.14.1'', ''Number of children admitted in NRC'', no_of_child_admitted_at_nrc from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''14.14.2'', ''Number of children discharged with target weight gain from the NRCs'', no_of_child_discharge_after_weight_gain_nrc from hmis_data
	union all
	select ''PHC,CHC,SDH,DH'' as display_at, ''15.1'', ''Number of Lab Tests done'', no_of_lab_test_done from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''15.3.3'', ''Pregnant women tested for HIV'', no_of_pw_tested_for_hiv from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.1.0'', ''New born deaths within 24 hrs(1 to 23 Hrs) of birth at facility'', no_of_deaths_in_1_to_24_hrs_at_facility from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''16.1.1'', ''New born deaths within 24 hrs(1 to 23 Hrs) of birth at community'', no_of_deaths_in_1_to_24_hrs_at_community from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.1.2'', ''New born deaths in transit'', no_of_deaths_in_transit from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.1.3'', ''New born deaths within 1 week (1 to 7 days) at facility'', no_of_deaths_in_1_week_at_facility from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''16.1.4'', ''New born deaths within 1 week (1 to 7 days) at community'', no_of_deaths_in_1_week_at_community from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.1.5'', ''New born deaths within  8 to 28 days at facility'', no_of_deaths_in_8_to_28_days_at_facility from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''16.1.6'', ''New born deaths within  8 to 28 days at Community'', no_of_deaths_in_8_to_28_days_at_community from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.2.1'', ''Infant Deaths up to 4 weeks due to Sepsis'', id_upto_4_weeks_dueto_sepsis from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.2.2'', ''Infant Deaths up to 4 weeks due to Asphyxia'', id_upto_4_weeks_dueto_asphyxia from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.2.3'', ''Infant Deaths up to 4 weeks due to Other causes'', id_upto_4_weeks_dueto_other from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.3.1'', ''Number of Infant Deaths (1 -12 months) due to Pneumonia'', id_upto_12_moths_dueto_pneumonia from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.3.2'', ''Number of Infant Deaths (1 -12 months) due to Diarrhoea'', id_upto_12_moths_dueto_diarrhoea from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.3.3'', ''Number of Infant Deaths (1 -12 months) due to Fever related'', id_upto_12_moths_dueto_feaver from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.3.4'', ''Number of Infant Deaths (1 -12 months) due to Measles'', id_upto_12_moths_dueto_measles from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.3.5'', ''Number of Infant Deaths (1 -12 months) due to Others'', id_upto_12_moths_dueto_other from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.3.6'', ''Infant Deaths up to 1 to 12 month at facility'', no_of_infant_deaths_1_to_12_months_at_facility from hmis_data
	union all
	select ''SC,PHC'' as display_at, ''16.3.7'', ''Infant Deaths up to 1 to 12 month at community'', no_of_infant_deaths_1_to_12_months_at_community from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.3.8'', ''Infant deaths in transit (1 week to 12 months)'', no_of_infant_deaths_1_to_12_months_in_transit from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.4.1'', ''Number of Child Deaths (1 -5 years) due to Pneumonia'', cd_upto_5_years_dueto_pneumonia from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.4.2'', ''Number of Child Deaths (1 -5 years) due to Diarrhoea'', cd_upto_5_years_dueto_diarrhoea from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.4.3'', ''Number of Child Deaths (1 -5 years) due to Fever related'', cd_upto_5_years_dueto_fever from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.4.4'', ''Number of Child Deaths (1 -5 years) due to Measles'', cd_upto_5_years_dueto_measles from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.4.5'', ''Number of Child Deaths (1 -5 years) due to Others'', cd_upto_5_years_dueto_others from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.4.6'', ''Child deaths in transit (1- 5 years) du to any cause'', no_of_child_death_1_to_5_years_due_to_cause from hmis_data
	union all
	select ''DHQ'' as display_at, ''16.4.7'', ''Number of Child deaths reported through Community based Child Death Review (CBCDR)'', no_of_child_death_reported_through_cbcdr from hmis_data
	union all
	select ''CHC,SDH,DH'' as display_at, ''16.4.8'', ''Total Facility Based Child Death Reviews (FBCDR) done'', total_fbcdr_done from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.5.1'', ''Number of Maternal Deaths due to APH (Antepartum Haemmorhage)'', no_of_maternal_death_due_to_aph from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.5.2'', ''Number of Maternal Deaths due to PPH (Postpartum Haemmorhage)'', no_of_maternal_death_due_to_pr_pph_issue from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.5.3'', ''Number of Maternal Deaths due to Anaemia'', no_of_maternal_death_due_to_pr_anaemia_issue from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.5.4'', ''Number of Maternal Deaths due to Pregnancy related sepsis'', no_of_maternal_death_due_to_pr_sepsis from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.5.6'', ''Number of Maternal Deaths due to Abortive outcome'', no_of_maternal_death_due_to_abortive_outcome from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.5.7'', ''Number of Maternal Deaths due to Obstructed/prolonged labour'', no_of_maternal_death_due_to_obstructed_labour from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.5.8'', ''Number of Maternal Deaths due to Hypertensive disorder in pregnancy, birth and puerperium'', no_of_maternal_death_due_to_hypertensive_disorder from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.5.9.a'', ''Cardiac Disorder'', no_of_maternal_death_due_to_cd from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.5.9.b'', ''Liver Disorder'', no_of_maternal_death_due_to_ld from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.5.9.c'', ''Renal Disorder'', no_of_maternal_death_due_to_rd from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.5.9.d'', ''Infections/Infestations'', no_of_maternal_death_due_to_infection from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.5.9.e'', ''Brought Dead (in transit)'', no_of_maternal_death_due_to_bd_intrasit from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.5.10'', ''Number of Maternal Deaths due to Other Causes'', no_of_maternal_death_due_to_other_causes from hmis_data
	union all
	select ''SC,PHC,CHC,SDH,DH'' as display_at, ''16.5.11'', ''Number of Maternal Deaths due to Other Causes (causes not known)'', number_of_maternal_death_due_to_other_causes from hmis_data
	union all
	select ''DHQ'' as display_at, ''25.1.1'', ''Number of Pregnant Women provided - Free Medicines under JSSK'', pw_provided_free_medicines_jssk from hmis_data
	union all
	select ''DHQ'' as display_at, ''25.1.2'', ''Number of Pregnant Women provided - Free Diet under JSSK'', pw_provided_free_diet_jssk from hmis_data
	union all
	select ''DHQ'' as display_at, ''25.1.3'', ''Number of Pregnant Women provided - Free Diagnostics under JSSK'', pw_provided_free_diagnostics_jssk from hmis_data
	union all
	select ''DHQ'' as display_at, ''25.1.4'', ''Number of Pregnant Women provided - Free Home to facility transport under JSSK'', pw_provided_free_home_to_facility_trasport_jssk from hmis_data
	union all
	select ''DHQ'' as display_at, ''25.1.5'', ''Number of Pregnant Women provided - Interfacility transfers when needed under JSSK'', pw_provided_free_home_interfacility_transfers_jssk from hmis_data
	union all
	select ''DHQ'' as display_at, ''25.1.6'', ''Number of Pregnant Women provided - Free Drop Back home under JSSK'', pw_provided_free_drop_back_to_home_jssk from hmis_data
	union all
	select ''DHQ'' as display_at, ''25.2.1'', ''Number of sick infants provided - Free Medicines under JSSK'', sick_infant_provided_free_medicines_jssk from hmis_data
	union all
	select ''DHQ'' as display_at, ''25.2.2'', ''Number of sick infants provided - Free Diagnostics under JSSK'', sick_infant_provided_free_diagnostics_jssk from hmis_data
	union all
	select ''DHQ'' as display_at, ''25.2.3'', ''Number of sick infants provided - Free Home to facility transport under JSSK'', sick_infant_provided_free_home_to_facility_trasport_jssk from hmis_data
	union all
	select ''DHQ'' as display_at, ''25.2.4'', ''Number of sick infants provided - Interfacility transfers when needed under JSSK'', sick_infant_provided_free_home_interfacility_transfers_jssk from hmis_data
	union all
	select ''DHQ'' as display_at, ''25.2.5'', ''Number of sick infants provided - Free Drop Back home under JSSK'', sick_infant_provided_free_drop_back_to_home_jssk  from hmis_data
)
select "Sr No", "Data Item", count from final_data where 11743 is not null
and display_at ilike concat(''%'',(select cast(infra_type as text) from property),''%'');',true,'ACTIVE','e7ebdade-0e81-4043-861d-45b70058949f'),
	 (1596,74840,'2020-04-14 16:08:47.249',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,column,location_id','with paratemeter_det as (
	select
	case when ''#from_date#'' != ''null'' then to_date(''#from_date#'',''MM/DD/YYYY'') end as from_date,
	case when ''#to_date#'' != ''null'' then to_date(''#to_date#'',''MM/DD/YYYY'') + interval ''1 day'' - interval ''1 millisecond''  end as upto_date

)
,
location_det as (
	select child_id as loc_id
	from location_hierchy_closer_det lhc
	where
	case when ''#location_id#'' = ''null'' then true else parent_id = #location_id# end 
)
,lab_test_det as (
	select
	distinct on
	(id)
	cad.id,cad.health_infra_id,cltd.covid_admission_detail_id,cltd.sample_health_infra,
	cltd.sample_health_infra_send_to,cltd.lab_test_number,cltd.lab_collection_on
	from covid19_admission_detail cad inner join covid19_lab_test_detail cltd on cad.id = cltd.covid_admission_detail_id 
	inner join location_det loch on loch.loc_id = cad.location_id
	inner join paratemeter_det on true = true
	where
	case 
		when #column# = ''Positive'' then cltd.lab_result = ''POSITIVE'' and cltd.lab_result_entry_on between paratemeter_det.from_date and paratemeter_det.upto_date
		when #column# = ''Negative'' then cltd.lab_result = ''NEGATIVE'' and cltd.lab_result_entry_on between paratemeter_det.from_date and paratemeter_det.upto_date
		when #column# = ''Inderminate'' then cltd.lab_result = ''INDETERMINATE'' and cltd.lab_result_entry_on between paratemeter_det.from_date and paratemeter_det.upto_date        
        when #column# = ''Samples Collected'' then cltd.lab_collection_on between paratemeter_det.from_date and paratemeter_det.upto_date
        when #column# = ''Admitted'' then cltd.lab_collection_on between paratemeter_det.from_date and paratemeter_det.upto_date and cad.admission_from = ''NEW''
        when #column# = ''Opd'' then cltd.lab_collection_on between paratemeter_det.from_date and paratemeter_det.upto_date and cad.admission_from = ''OPD_ADMIT''
        when #column# = ''Accepted'' then cltd.lab_sample_rejected_on is null and cltd.lab_sample_received_on between paratemeter_det.from_date and paratemeter_det.upto_date
        when #column# = ''Rejected'' then cltd.lab_sample_rejected_on is not null and cltd.lab_sample_rejected_on between paratemeter_det.from_date and paratemeter_det.upto_date
        when #column# = ''Result Entry'' then cltd.lab_sample_rejected_on is null and cltd.lab_result_entry_on between paratemeter_det.from_date and paratemeter_det.upto_date
		else true
	end
	order by id
	#limit_offset#
)

	select
	ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
	concat_ws('' '', cad.first_name, cad.last_name, cad.middle_name) as "Name",
	cad.age as "Age",
	cad.gender as "Gender",
	cad.address as "Address",
	cad.occupation as "Occupation",
	cad.contact_number as "Contact Number",
	d.english_name as "District",
	s.english_name as "State",
	cast(''N/A'' as text) as "Date of arrival in India",
	cad.travelled_place as "Travel to COVID afftected country (Name of country)",
	cad.flight_no as "Flight No",
	cast(''N/A'' as text) as "Seat No",
	case
		when cad.in_contact_with_covid19_paitent is not null then cad.in_contact_with_covid19_paitent
		else ''No''
	end as "H/O contact with COVID-19 case",
	cad.date_of_onset_symptom as "Date of onset of symptoms",
	concat_ws('', '' ,(case when cad.is_fever then ''Fever'' else null end) 
	,(case when cad.is_cough then ''Cough'' else null end)
	,(case when cad.is_breathlessness then ''Breathlessness'' else null end)
	,(case when cad.is_sari then ''SARI'' else null end)
	) as "Symptoms at admission",
	to_char(cad.admission_date,''DD/MM/YYYY'') as "Date of isolation",
	case
		when ltd.id is not null then ''Yes''
		else ''No''
	end "Sample collected (yes/No)",
	ltd.lab_test_number as "Sample ID",
	to_char(ltd.lab_collection_on,''DD/MM/YYYY'') as "Date of sample collection",
	hid_sample.name_in_english as "Sample collection centre",
	hid_tested.name_in_english as "Sample tested at",
	hid_tested.name_in_english as "Lab that confirmed the result",
	concat_ws('', '' ,(case when cad.is_hiv then ''HIV'' else null end) 
	,(case when cad.is_heart_patient then ''Heart Patient'' else null end)
	,(case when cad.is_diabetes then ''Diabetes'' else null end)
	,(case when cad.is_copd then ''COPD'' else null end)
	,(case when cad.is_hypertension then ''Hypertension'' else null end)
	,(case when cad.is_renal_condition then ''Renal Condition'' else null end)
	,(case when cad.is_immunocompromized then ''Immunocompromized'' else null end)
	,(case when cad.is_malignancy then ''Malignancy'' else null end)
	,(case when cad.is_other_co_mobidity then cad.other_co_mobidity else null end)
	) as "Underlying medical condition",
	cacds.health_status as "Health Status",
	case when cad.discharge_status is null then ''Admitted'' else cad.discharge_status end as "Outcome (Discharged/ Death/ Admitted)",
	to_char(cad.discharge_date,''DD/MM/YYYY'') as "Date of outcome",
	cast(''N/A'' as text) as "is patitnet member of covid 19",
	cast(''N/A'' as text) as "house hold contact",
	cast(''N/A'' as text) as "workplace contact",
	cast(''N/A'' as text) as "community contact",
	cast(''N/A'' as text) as "health care contact",
	cast(''N/A'' as text) as "co traveller"
from
	covid19_admission_detail cad
inner join lab_test_det ltd on
	cad.id = ltd.covid_admission_detail_id
left join covid19_admitted_case_daily_status cacds on
	cad.last_check_up_detail_id = cacds.id
left join location_master lm on
	lm.id = cad.location_id
left join location_level_hierarchy_master lh on
	lh.id = lm.location_hierarchy_id
left join health_infrastructure_details hid_sample on
	hid_sample.id = ltd.sample_health_infra
left join health_infrastructure_details hid_tested on
	hid_tested.id = ltd.sample_health_infra_send_to
left join location_master s on
	lh.level1 = s.id
	and s.state = ''ACTIVE''
	and s.name not ilike ''%delete%''
left join location_master d on
	lh.level3 = d.id
	and d.state = ''ACTIVE''
	and d.name not ilike ''%delete%''
order by
	cad.id',true,'ACTIVE','33f102c5-d1b2-4044-915f-c19791c7c05c');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (401,1,'2019-02-13 12:28:25.125',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','f46e53a4-d018-4063-8b07-35f2f3dbd09d'),
	 (402,1,'2019-02-13 12:28:25.128',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','07d984df-07bf-41cf-a458-94137ba44f4e'),
	 (385,1,'2019-02-13 12:19:31.394',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','75ca0fbc-132f-4fc9-8a77-48af3065284d'),
	 (405,1,'2019-02-13 12:31:41.919',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','bb842b51-e390-4d09-8676-5406415e3a9f'),
	 (458,1,'2019-02-14 12:59:49.498',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','75dc8d21-44f6-471b-b686-d48c28f96dd7'),
	 (422,1,'2019-02-14 00:25:46.606',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','3976e3c0-8f7d-4e42-a7e7-f2bac4b2a80c'),
	 (1234,409,'2019-07-24 10:19:01.984',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','2ee9cdd0-7bfb-4088-bd15-a781c2ca8b35'),
	 (666,409,'2019-02-19 20:58:20.267',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','410360a1-9a3a-4133-8b31-28057876339e'),
	 (891,64189,'2019-03-07 10:32:56.542',1,'2021-01-13 20:22:06.427965','from_date','select to_char(#from_date#,''DD/MM/YYYY'') as from_date;',true,'ACTIVE','9f68ef1b-3c74-449f-a4ad-1dd3196741b1'),
	 (1226,66522,'2019-07-17 16:52:30.693',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','05c6df06-4e69-4e6f-b51d-a4bbe69bc1e1');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (692,409,'2019-02-27 13:24:09.19',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','5000c040-99d9-4762-8332-5cfb371f83ca'),
	 (703,409,'2019-02-27 13:25:06.122',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','fc2aeb06-4f3b-4bb0-873a-cb884db0dce9'),
	 (765,64189,'2019-03-04 12:15:22.35',1,'2021-01-13 20:22:06.427965','health_infra_id','select name as health_infra_id from health_infrastructure_details where id = #health_infra_id#',true,'ACTIVE','022a0c47-aaa7-4e6f-ab2d-ffbe9ad91939'),
	 (1398,66522,'2019-08-28 15:05:51.361',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
	select
	to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date ,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end, ''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_date 
),call_master_ids as (
	select id,
        created_on,
        created_by,
        get_location_hierarchy(gvk_manage_call_master.location_id) as Location_hierarchy
from gvk_manage_call_master
	inner join dates on gvk_manage_call_master.created_on between dates.from_date and dates.to_date
	where gvk_manage_call_master.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and gvk_manage_call_master.call_response not in (''com.argusoft.imtecho.gvk.call.cant-talk'',
	''com.argusoft.imtecho.gvk.call.no-number-available'',
	''com.argusoft.imtecho.gvk.call.wrong-mobile-number'',
        ''com.argusoft.imtecho.gvk.call.phone-switched-off'',
        ''com.argusoft.imtecho.gvk.call.unresponsive'',
        ''com.argusoft.imtecho.gvk.call.not-reachable'',
''com.argusoft.imtecho.gvk.call.processed'',
''com.argusoft.imtecho.gvk.call.processing''
	)
	and gvk_manage_call_master.call_type = ''MIG_IN_VERI''
),
response_ids as (
	select gvk_member_migration_call_response.id, call_master_ids.created_on,call_master_ids.created_by,Location_hierarchy
	from call_master_ids
	inner join gvk_member_migration_call_response on call_master_ids.id = gvk_member_migration_call_response.manage_call_master_id
	order by gvk_member_migration_call_response.id desc
	#limit_offset#
),
response as (
	select 
    Location_hierarchy,
response_ids.created_on,response_ids.created_by,
	case when response.is_member_called is true then ''Yes''
	     when response.is_member_called is false then ''No''
	     when response.is_member_called is null then ''-'' end is_member_called,
	case when response.is_fhw_called is true then ''Yes''
	     when response.is_fhw_called is false then ''No''
	     when response.is_fhw_called is null then ''-'' end is_fhw_called,
	case when response.is_asha_called is true then ''Yes''
	     when response.is_asha_called is false then ''No''
	     when response.is_asha_called is null then ''-'' end is_asha_called,
	migration.reported_by,
	case when migration.state=''REPORTED'' then ''Reported'' 
	     when migration.state=''CONFIRMED'' then ''Confirmed''
	     when migration.state=''NO_RESPONSE'' then ''No Response''
	     when migration.state=''ROLLBACK'' then ''Rollback''
	     when migration.state=''NOT_RESOLVED'' then ''Not resolved''
	     when migration.state=''NOT_HAPPEN'' then ''Not happen''
	     when migration.state=''LFU'' then ''Loss to folloup''
	     when migration.state=''REVERTED'' then ''Reverted''
	     when migration.state=''DUPLICATE'' then ''Duplicate''
	     else ''other'' end as migation_state,
	     concat(migration.mobile_data\:\:json->>''firstname'', '' '', migration.mobile_data\:\:json->>''middleName'', '' '', migration.mobile_data\:\:json->>''lastName'') as member_details_f,
	     migration.mobile_data\:\:json->>''fhwOrAshaName'' as fhwOrAshaName_f,
case when response.performed_action =''create_temp_member'' then ''Created temporory member''
	when response.performed_action =''UPDATE_LOCATION'' then ''Update Location''
	when response.performed_action =''search_for_member'' then ''Search for member''
	when response.performed_action =''ROLLBACK'' then ''Rollback''
	when response.performed_action = ''NOT_RESOLVED'' then ''Not resolved''
	when response.performed_action = ''LFU'' then ''Loss to folloup'' end as performed_action,
	--gvk_immunisation_verification_response.id as gvk_immunisation_id,
	--gvk_immunisation_verification_response.member_id,
	response_ids.id as gvk_member_migration_id,migration.member_id
	from response_ids
	inner join gvk_member_migration_call_response response on response_ids.id = response.id
	inner join migration_master migration on migration.id = response.migration_id

),
member_location_area_ids as (
	select response.gvk_member_migration_id,response.member_id,imt_family.location_id,imt_family.area_id
	from response
	inner join imt_member on imt_member.id = response.member_id
	inner join imt_family on imt_family.family_id = imt_member.family_id
),asha as (
	select member_location_area_ids.gvk_member_migration_id,asha.id
	from member_location_area_ids
	inner join um_user_location asha_location on member_location_area_ids.area_id = asha_location.loc_id and asha_location.state = ''ACTIVE''
	inner join um_user asha on asha_location.user_id = asha.id and asha.role_id = 24 and asha.state = ''ACTIVE''
),asha_unique as (
	select asha.gvk_member_migration_id,max(asha.id)
	from asha
	group by asha.gvk_member_migration_id
),fhw as (
	select member_location_area_ids.gvk_member_migration_id,fhw.id
	from member_location_area_ids
	inner join um_user_location fhw_location on member_location_area_ids.location_id = fhw_location.loc_id and fhw_location.state = ''ACTIVE''
	inner join um_user fhw on fhw_location.user_id = fhw.id and fhw.role_id = 30 and fhw.state = ''ACTIVE''
),fhw_unique as (
	select fhw.gvk_member_migration_id,max(fhw.id)
	from fhw
	group by fhw.gvk_member_migration_id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
im.unique_health_id as "Unique Health ID",
case when im.id is null then ''NA'' else concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) end as "Member Name" ,
Location_hierarchy as "Location",
to_char(response.created_on,''DD-MM-YYYY HH:MI PM'') as  "Call Date",
response.member_details_f as "Member Name *",
response.fhwOrAshaName_f as "Asha/FHW Name*",
performed_action as "Performed Action",
migation_state as "Migaration state",
concat(fhw_user.first_name,'' '',fhw_user.middle_name,'' '',fhw_user.last_name) as "FHW Name",
concat(asha_user.first_name,'' '',asha_user.middle_name,'' '',asha_user.last_name) as "ASHA Name",
concat(um.first_name, '' '', um.last_name) as "RO Details",
concat(reported_by.first_name,'' '',reported_by.middle_name,'' '',reported_by.last_name) as "Reported By"
--,response.is_member_called as "Called to Member",
--response.is_fhw_called as "Called to FHW",
--response.is_asha_called as "Called to Asha"

from response
left join imt_member im on response.member_id = im.id
left join asha_unique on response.gvk_member_migration_id = asha_unique.gvk_member_migration_id
left join fhw_unique on response.gvk_member_migration_id = fhw_unique.gvk_member_migration_id
left join um_user asha_user on asha_unique.max = asha_user.id
left join um_user fhw_user on fhw_unique.max = fhw_user.id
left join um_user um on response.created_by = um.id
inner join um_user reported_by on reported_by.id = response.reported_by',true,'ACTIVE','27aa401d-ef03-4f7b-a9d0-dc36311b3a3c'),
	 (277,1,'2019-02-05 12:43:24.433',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','fa6509e2-8a02-4ba2-afd5-26a39609c447'),
	 (911,409,'2019-03-07 16:01:46.032',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','5f114a41-6e50-4156-83ae-6c382072f087'),
	 (1426,409,'2019-09-23 01:12:59.309',1,'2021-01-13 20:22:06.427965','to_month','select to_char(cast(''#to_month#'' as date),''MM/YYYY'') as to_month',true,'ACTIVE','02fafca7-61ef-47a9-8b36-6e98cb1eb1b8'),
	 (1222,66522,'2019-07-17 16:51:49.229',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','7fd77eab-bd1a-4444-b540-00e79b3c5b24'),
	 (895,64189,'2019-03-07 11:03:53.925',1,'2021-01-13 20:22:06.427965','to_date','select to_char(to_date(''#to_date#'',''MM/DD/YYYY''),''DD/MM/YYYY'') as to_date;',true,'ACTIVE','8218fbfd-a2f4-410c-a5c9-9a795ff30d31'),
	 (1107,63746,'2019-05-02 14:23:22.858',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #location_id#',true,'ACTIVE','797942de-b9a1-4274-aac9-0720cf773c74');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1338,60512,'2019-08-19 17:10:49.164',1,'2021-01-13 20:22:06.427965','from_month','select to_char(cast(''#from_month#'' as date),''MM/YYYY'') as from_month',true,'ACTIVE','185e6948-b569-4e27-a2b8-4d9f97fc8f9d'),
	 (1486,74841,'2020-01-08 18:25:14.65',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','7f892d2b-add5-4268-bb79-a0a657bdba8b'),
	 (602,409,'2019-02-19 12:09:23.089',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','cab1e837-e460-45b1-a698-b5ae91c600de'),
	 (1465,74841,'2020-01-06 15:16:07.416',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','0ef911ee-cbe9-435e-ab5f-b3059f714188'),
	 (1162,63746,'2019-05-28 18:54:10.329',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','b7140c8f-be6b-456d-963c-7c4fe79e814f'),
	 (1339,60512,'2019-08-19 17:10:49.168',1,'2021-01-13 20:22:06.427965','to_month','select to_char(cast(''#to_month#'' as date),''MM/YYYY'') as to_month',true,'ACTIVE','39f39b11-f584-48b0-8eec-d069e1f8bc08'),
	 (1306,63746,'2019-08-07 14:25:14.648',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','28b1191d-2c45-4e70-90f3-b99689c565c4'),
	 (1307,63746,'2019-08-07 14:25:14.65',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','c500c28a-1ba8-43db-8dcf-80ac3ec6b467'),
	 (1491,74840,'2020-01-10 17:09:23.005',1,'2021-01-13 20:22:06.427965','from_date,unique_health_id','with member_det as (
	select id,cur_preg_reg_det_id from imt_member im where unique_health_id = ''#unique_health_id#''
)
,date_filter as (
	select
	to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
	to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') - interval ''1 day'' + interval ''1 millisecond'' as set_date
)
,anc_service as (
   delete from rch_anc_master ram where id in (
   select rch_anc_master.id from rch_anc_master,date_filter,member_det where member_id = member_det.id and service_date >= date_filter.from_date
   )
   returning id
)
,wpd_service as(	
	select rch_wpd_mother_master.id,rch_wpd_mother_master.member_id,rch_wpd_mother_master.pregnancy_reg_det_id,-1 as modified_by from rch_wpd_mother_master,member_det,date_filter
	where member_id = member_det.id and date_of_delivery >= date_filter.from_date	
)
,wpd_query_1 as (
    update techo_notification_master set state = from_state,modified_on = now(), modified_by = -1
    from (
	select techo_notification_state_detail.notification_id,techo_notification_state_detail.from_state
	from techo_notification_state_detail, (
		select techo_notification_master.id,max(techo_notification_state_detail.id) as techo_notification_state_detail_id
		from techo_notification_master,techo_notification_state_detail
		where techo_notification_master.state= ''COMPLETED'' and member_id in (select member_id from wpd_service)  and ref_code in (select pregnancy_reg_det_id from wpd_service)
		and techo_notification_master.id = techo_notification_state_detail.notification_id
		and techo_notification_state_detail.from_state != techo_notification_state_detail.to_state
		and notification_type_id = (
			select id from notification_type_master where code = ''FHW_WPD''
		)
		group by techo_notification_master.id
	) as notification_id_last_state_detail_id
	where techo_notification_state_detail.id = notification_id_last_state_detail_id.techo_notification_state_detail_id
    ) as t  where t.notification_id =  techo_notification_master.id
    returning techo_notification_master.state
)
,wpd_query_2 as(
    update techo_notification_master set state = from_state,modified_on = now(), modified_by = -1
    from (
	select techo_notification_state_detail.notification_id,techo_notification_state_detail.from_state
	from techo_notification_state_detail,(
		select techo_notification_master.id,max(techo_notification_state_detail.id) as techo_notification_state_detail_id
		from techo_notification_master,techo_notification_state_detail
		where techo_notification_master.state= ''MARK_AS_DELIVERY_HAPPENED''
		and member_id in (select member_id from wpd_service) and ref_code in (select pregnancy_reg_det_id from wpd_service)
		and techo_notification_master.id = techo_notification_state_detail.notification_id
		and techo_notification_state_detail.from_state != techo_notification_state_detail.to_state
		and notification_type_id in (select id from notification_type_master where code in (''FHW_ANC'', ''ASHA_ANC''))
		group by techo_notification_master.id
	) as notification_id_last_state_detail_id
	where techo_notification_state_detail.id = notification_id_last_state_detail_id.techo_notification_state_detail_id
    ) as t  where t.notification_id =  techo_notification_master.id
    returning techo_notification_master.state
)
,wpd_query_3 as (
    update event_mobile_notification_pending set is_completed = false, state = ''PENDING'',
    modified_by = -1, modified_on = now()
    where member_id in (select member_id from wpd_service) and state = ''COMPLETED''
    and notification_configuration_type_id in (
	select id from event_configuration_type where mobile_notification_type in (
		select id from notification_type_master where code in (''FHW_ANC'', ''FHW_WPD'', ''ASHA_ANC'')
	)
    )
    and ref_code in (select pregnancy_reg_det_id from wpd_service)
    returning event_mobile_notification_pending.is_completed
)
,wpd_query_4 as (
    update rch_pregnancy_registration_det set state = ''PENDING'' where id in (select pregnancy_reg_det_id from wpd_service)
    returning rch_pregnancy_registration_det.state
)
,wpd_query_5 as (
    update event_mobile_notification_pending set is_completed = false, state = ''MARK_AS_FALSE_DELIVERY'',
    modified_by = -1, modified_on = now()
    from wpd_service
    where event_mobile_notification_pending.member_id in (wpd_service.member_id)
    and notification_configuration_type_id in (
    select id from event_configuration_type where mobile_notification_type in (
    select id from notification_type_master where code in (''FHW_PNC'', ''ASHA_PNC'')
    )
    )
    and ref_code in (wpd_service.pregnancy_reg_det_id)
    returning event_mobile_notification_pending.is_completed
)
,wpd_query_6 as (
    delete from techo_notification_master where notification_type_id = (select id from notification_type_master where code = ''FHW_PNC'')
    and state in (''PENDING'',''RESCHEDULE'') and ref_code in (select pregnancy_reg_det_id from wpd_service) and member_id in (select member_id from wpd_service)
    returning techo_notification_master.notification_type_id
)
,wpd_query_7 as (
    delete from techo_notification_master where notification_type_id = (select id from notification_type_master where code = ''ASHA_PNC'')
    and state in (''PENDING'',''RESCHEDULE'') and ref_code in (select pregnancy_reg_det_id from wpd_service) and member_id in (select member_id from wpd_service)
    returning techo_notification_master.notification_type_id
)
,wpd_query_8 as (
    delete from techo_notification_master where notification_type_id = (select id from notification_type_master where code = ''LMPFU'')
    and state in (''PENDING'',''RESCHEDULE'') and member_id in (select member_id from wpd_service)
    returning techo_notification_master.notification_type_id
)
,wpd_query_9 as (
    delete from techo_notification_master where notification_type_id = (select id from notification_type_master where code = ''ASHA_LMPFU'')
    and state in (''PENDING'',''RESCHEDULE'') and member_id in (select member_id from wpd_service)
    returning techo_notification_master.notification_type_id
)
,wpd_query_10 as (
    delete from techo_notification_master where notification_type_id = (select id from notification_type_master where code = ''DISCHARGE'')
    and state in (''PENDING'',''RESCHEDULE'') and member_id in (select member_id from wpd_service)
    returning techo_notification_master.notification_type_id
)
,wpd_query_11 as(
 	update rch_wpd_mother_master set state = ''MARK_AS_FALSE_DELIVERY'' where id in (select id from wpd_service) returning rch_wpd_mother_master.id
)
,wpd_query_12 as(	
	update rch_wpd_child_master set state = ''MARK_AS_FALSE_DELIVERY'' where wpd_mother_id in (select id from wpd_service) returning rch_wpd_child_master.wpd_mother_id
)
,wpd_query_13 as (
	update imt_member set state = ''com.argusoft.imtecho.member.state.archived'',remarks = ''MARK_AS_FALSE_DELIVERY''
	,modified_by = wpd_service.modified_by
	,modified_on = now()
	from wpd_service
	where imt_member.id  in (select member_id from rch_wpd_child_master where wpd_mother_id in (select id from wpd_service))
	returning imt_member.id
)
,wpd_query_14 as (
	update event_mobile_notification_pending set is_completed = false,
	state = ''MARK_AS_FALSE_DELIVERY'',
	modified_by = wpd_service.modified_by,
	modified_on = now()
	from wpd_service
	where event_mobile_notification_pending.member_id in (select member_id from rch_wpd_child_master where wpd_mother_id in (select id from wpd_service))
	and notification_configuration_type_id in (
		select id from event_configuration_type where mobile_notification_type in (
			select id from notification_type_master where code in (''FHW_CS'', ''ASHA_CS'')
	))
	returning event_mobile_notification_pending.id
)
,wpd_query_15 as (
	delete from techo_notification_master where notification_type_id = (select id from notification_type_master where code = ''FHW_CS'')
	and state in (''PENDING'',''RESCHEDULE'') and member_id in (select member_id from rch_wpd_child_master where wpd_mother_id in (select id from wpd_service))
	returning techo_notification_master.notification_type_id
)
,wpd_query_16 as (
	delete from techo_notification_master where notification_type_id = (select id from notification_type_master where code = ''ASHA_CS'')
	and state in (''PENDING'',''RESCHEDULE'') and member_id in (select member_id from rch_wpd_child_master where wpd_mother_id in (select id from wpd_service))
	returning techo_notification_master.notification_type_id
)
,pnc_mother_service as (
	delete from rch_pnc_mother_master where id in (
		select rch_pnc_master.id from rch_pnc_master,date_filter,member_det where member_id = member_det.id and service_date >= date_filter.from_date
	)
	returning id
)
,pnc_child_service as (
	delete from rch_pnc_child_master where id in (
		select rch_pnc_master.id from rch_pnc_master,date_filter,member_det where member_id = member_det.id and service_date >= date_filter.from_date
	)
	returning id
),pnc_service as (
	delete from rch_pnc_master where id in (
		select rch_pnc_master.id from rch_pnc_master,date_filter,member_det where member_id = member_det.id and service_date >= date_filter.from_date
	)
	returning id
)
,child_service_master as (
	delete from rch_child_service_master where id in (
		select rch_child_service_master.id from rch_child_service_master,date_filter,member_det where member_id = member_det.id and service_date >= date_filter.from_date
	)
	returning id
),immunisation_given_service as (
	delete from rch_immunisation_master where id in (
		select rch_immunisation_master.id from rch_immunisation_master,date_filter,member_det where rch_immunisation_master.member_id = member_det.id and given_on > date_filter.from_date
	)
	returning id
),update_imt_member as (
	update imt_member
	set
	immunisation_given = t.immunisation_given,	
	is_pregnant = case when (select count(1) from wpd_service) > 0 then true else imt_member.is_pregnant end,
	last_delivery_date = case when (select count(1) from wpd_service) > 0 then null else imt_member.last_delivery_date end,
	last_delivery_outcome = case when (select count(1) from wpd_service) > 0 then null else imt_member.last_delivery_outcome end,
	additional_info = cast(jsonb_set(
	cast(additional_info as jsonb), cast(''{lastServiceLongDate}'' as text[])
	,  cast(cast(cast((EXTRACT(EPOCH FROM (select date_filter.set_date from date_filter)) * 1000)as bigint) as text) as jsonb), false) as text)	
	from member_det
	left join (
	select rch_immunisation_master.member_id,
	string_agg(concat(rch_immunisation_master.immunisation_given,''#'',to_char(rch_immunisation_master.given_on,''DD/MM/YYYY''))
	,'','' order by rch_immunisation_master.given_on) as immunisation_given
	from rch_immunisation_master,member_det
	where rch_immunisation_master.member_id = member_det.id and (member_det.cur_preg_reg_det_id is null or member_det.cur_preg_reg_det_id = rch_immunisation_master.pregnancy_reg_det_id)
	and given_on > (select date_filter.from_date from date_filter)
	group by rch_immunisation_master.member_id) as t on t.member_id = member_det.id
	where member_det.id = imt_member.id
	returning imt_member.id
)
select * from update_imt_member',true,'ACTIVE','f601cd92-05fa-4330-8443-5c8f61e0dfa1'),
	 (1738,60512,'2020-09-07 20:35:17.917',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','f5c25a62-453a-4c72-8ea7-07d9c423ee40');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1389,60512,'2019-08-26 13:01:53.824',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','d19a1ad4-6677-4702-bdf4-302682f64e66'),
	 (747,58981,'2019-03-01 19:33:33.75',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','2e27c18f-8c75-4679-95f6-bc964f931aa0'),
	 (1397,66522,'2019-08-28 15:05:51.339',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','414e70b1-ec55-4c01-9271-df869c0facb5'),
	 (1146,63746,'2019-05-28 16:35:10.532',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','6c1c0002-1519-4946-a61b-7c6947c84867'),
	 (1584,74841,'2020-04-09 20:55:02.113',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','b67ea350-5e9d-4a60-b609-1a3ec771d7ec'),
	 (1195,57698,'2019-07-05 16:00:17.445',1,'2021-01-13 20:22:06.427965',NULL,'select id,name from um_role_master where state = ''ACTIVE''  order by name;',true,'ACTIVE','5dc5104f-c25f-4f5e-ae85-2fee30b6472b'),
	 (1495,74840,'2020-01-21 18:04:47.89',1,'2021-01-13 20:22:06.427965',NULL,'select id,name from um_role_master where state = ''ACTIVE'' and id in (24,30)  order by name;',true,'ACTIVE','c59d3ffc-fc81-44a4-8ad5-55215c3a706d'),
	 (1539,74840,'2020-03-06 19:57:36.962',1,'2021-01-13 20:22:06.427965',NULL,'select ''No of Time'' as order_by
union all
select ''Avg. Time'' as order_by
union all
select ''Max Time'' as order_by',true,'ACTIVE','2bb8581e-f7bb-447e-9c27-f1381008a82a'),
	 (1514,74841,'2020-02-10 17:40:05.019',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''MM/YYYY'') as from_date',true,'ACTIVE','3897f416-538d-4c02-8943-2c6e0874bda7'),
	 (1517,74841,'2020-02-10 17:40:05.025',1,'2021-01-13 20:22:06.427965','role_id','select name as role_id from um_role_master where state = ''ACTIVE'' and id = #role_id#;',true,'ACTIVE','1ee877ec-31a5-4d93-971e-220c635c2d16');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1583,74841,'2020-04-09 20:55:02.111',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','4704a19d-8deb-4845-9485-e456639f5f78'),
	 (1500,74840,'2020-01-23 18:48:54.939',1,'2021-01-13 20:22:06.427965',NULL,'select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as year 
from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by year desc;',true,'ACTIVE','9eec0372-4aff-4a55-93b6-6aa3705b4398'),
	 (603,409,'2019-02-19 12:09:23.092',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','66070f8e-45ff-4882-8219-4ee7f743bb57'),
	 (1724,60512,'2020-09-07 17:00:29.325',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','d9c906f1-9cea-4daa-b2b7-8c160a06dbe2'),
	 (483,57698,'2019-02-14 14:22:18.11',1,'2021-01-13 20:22:06.427965','course_id','select course_name as course_id from tr_course_master  where course_id=#course_id#',true,'ACTIVE','b34bfb8b-d108-4210-aa98-0876c9b6285e'),
	 (484,57698,'2019-02-14 14:22:18.112',1,'2021-01-13 20:22:06.427965','location_id','select name as location_id from location_master  where id = #location_id#',true,'ACTIVE','c88b6c29-c236-4a2e-801b-6437eb0daef6'),
	 (514,1,'2019-02-14 15:57:42.49',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','e9c1a804-904e-44af-b18f-cfcf31bba1f0'),
	 (452,1,'2019-02-14 00:46:06.547',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','40b67baa-1105-41e2-a180-f0b829e69a38'),
	 (425,1,'2019-02-14 00:28:03.895',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','182a803d-d591-4865-ab39-3002b770179f'),
	 (124,58981,'2019-01-09 19:52:13.571',1,'2021-01-13 20:22:06.427965',NULL,'select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as year from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by year desc;',true,'ACTIVE','188e2d38-37d9-42eb-92a1-cf626c533c43');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (78,1027,'2018-08-30 12:28:03.728',1,'2021-01-13 20:22:06.427965','from_month_year,to_month_year,loggedInUserId,location_id','-----------Maternal Service Delivery Report----------
with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#),
ldp as(
  select location_id,mtp,abortion,del_reg_still_live_birth,preg_reg,sbirth,lbirth,home_del,sc,phc,chc,sdh,uhc,gia,chiranjivi,pvt,inst_del,home_del_by_sba,home_del_by_non_sba
  ,phi_del_3_ancs,breast_feeding,maternal_detah,dh,mdh,delivery_108,delivery_out_of_state_govt,delivery_out_of_state_pvt
  from rch_delivery_date_base_location_wise_data_point,location_hierchy_closer_det
  where rch_delivery_date_base_location_wise_data_point.location_id = location_hierchy_closer_det.child_id and location_hierchy_closer_det.parent_id = #location_id#
  and month_year between (case when #from_month_year# is null then ''01/01/1970'' else to_date(''#from_month_year#'',''MM/DD/YYYY'') end) 
  	and (case when #to_month_year# is null then ''01/01/1970'' else to_date(''#to_month_year#'',''MM/DD/YYYY'') end)
 ), w as (
    select
    location_hierchy_closer_det.parent_id as loc_id,
	coalesce(sum(preg_reg),0) as preg_reg,
    coalesce(sum(del_reg_still_live_birth),0) as del_reg_still_live_birth,
    coalesce(sum(mtp),0) as mtp,
    coalesce(sum(abortion),0) as abortion,
	coalesce(sum(maternal_detah),0) as maternal_death,
    coalesce(sum(sbirth),0) as sbirth,
    coalesce(sum(lbirth),0) as lbirth,
    coalesce(sum(home_del),0) as home_del,
    coalesce(sum(home_del_by_sba),0) as home_del_by_sba,
    coalesce(sum(home_del_by_non_sba),0) as home_del_by_non_sba,
    coalesce(sum(sc),0) as sc,
    coalesce(sum(phc),0) as phc,
    coalesce(sum(chc),0) as chc,
    coalesce(sum(sdh),0) as sdh,
    coalesce(sum(uhc),0) as uhc,
    coalesce(sum(gia),0) as gia,
    coalesce(sum(chiranjivi),0) as chiranjivi,
	coalesce(sum(mdh),0) as mdh,
	coalesce(sum(dh),0) as dh,	
	coalesce(sum(delivery_108),0) as delivery_108,
    coalesce(sum(pvt),0) as pvt,
    coalesce(sum(delivery_out_of_state_govt),0) as delivery_out_of_state_govt,
    coalesce(sum(delivery_out_of_state_pvt),0) as delivery_out_of_state_pvt,
    coalesce(sum(inst_del),0) as inst_del,
    coalesce(sum(phi_del_3_ancs),0) as phi_del_3_ancs,
    coalesce(sum(breast_feeding),0) as breast_feeding
    from (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth=1)as t 
inner join location_hierchy_closer_det on t.child_id = location_hierchy_closer_det.parent_id 
inner join ldp on ldp.location_id = location_hierchy_closer_det.child_id
group by location_hierchy_closer_det.parent_id 
),s as (
select case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name else lm.name end as "Location Name",
case when ( prefered_language.is_enlish and (parent.english_name is not null)) then parent.english_name else parent.name end as "Parent Location Name",
	lm.id as hidden_location_id,
	coalesce(preg_reg,0) as "Preg-nant Women Reg",
	coalesce(lbirth,0) as "Live birth",
    coalesce(sbirth,0) as "Still birth",
    coalesce(mtp,0) as "MTP",
    coalesce(abortion,0) as "Abortion",
	coalesce(maternal_death,0) as "Maternal Death",
	coalesce(del_reg_still_live_birth,0) as "No of del Reg",
    coalesce(home_del_by_sba,0) as "Home Delivery by SBA",
    coalesce(home_del_by_non_sba,0) as "Home Delivery by NON SBA",
    coalesce(home_del,0) as "Total Home delivery",
    coalesce(sc,0) as "SC",
    coalesce(phc,0) as "PHC",
    coalesce(chc,0) as "CHC",
    coalesce(sdh,0) as "SDH",
    coalesce(uhc,0) as "UHC",
    coalesce(gia,0) as "GIA",
    coalesce(chiranjivi,0) as "Chiranjivi hospt",
	coalesce(mdh,0) as "MCH",
	coalesce(dh,0) as "DH",
	coalesce(delivery_108,0) as "GVK 108",
	coalesce(sc+phc+chc+sdh+uhc+gia+chiranjivi+mdh+dh+delivery_108,0) as "Total PHI deliveries",    
    coalesce(breast_feeding,0) as "Breast feeding within one hour of birth of phi deliveries",
    coalesce(phi_del_3_ancs,0) as "PHI deliveries with 3 ANCs",
    coalesce(pvt,0) as "Private hospital deliveries",
    coalesce(sc+phc+chc+sdh+uhc+gia+chiranjivi+mdh+dh+pvt+delivery_108,0) as "Total institutional deliveries(Gvt + Pvt)",
    coalesce(delivery_out_of_state_govt+delivery_out_of_state_pvt,0) as "Total Delivery out of State"    
from (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth=1 limit 500) as t
inner join location_master lm on lm.id = t.child_id
inner join location_master parent on parent.id = lm.parent
left join w on w.loc_id = lm.id
cross join prefered_language
order by "Location Name"
)
select row_number() over() as "Sr no.", s.* from s
union all
SELECT
	NULL,
    ''<b>Total<b>'',
NULL,
    #location_id#,
coalesce(sum("Preg-nant Women Reg"),0),
coalesce(sum("Live birth"),0),
coalesce(sum("Still birth"),0),
coalesce(sum("MTP"),0),
coalesce(sum("Abortion"),0),
coalesce(sum("Maternal Death"),0),
coalesce(sum("No of del Reg"),0),
coalesce(sum("Home Delivery by SBA"),0),
coalesce(sum("Home Delivery by NON SBA"),0),
coalesce(sum("Total Home delivery"),0),
coalesce(sum("SC"),0),
coalesce(sum("PHC"),0),
coalesce(sum("CHC"),0),
coalesce(sum("SDH"),0),
coalesce(sum("UHC"),0),
coalesce(sum("GIA"),0),
coalesce(sum("Chiranjivi hospt"),0),
coalesce(sum("MCH"),0),
coalesce(sum("DH"),0),
coalesce(sum("GVK 108"),0),
coalesce(sum("Total PHI deliveries"),0),
coalesce(sum("Breast feeding within one hour of birth of phi deliveries"),0),
coalesce(sum("PHI deliveries with 3 ANCs"),0),
coalesce(sum("Private hospital deliveries"),0),
coalesce(sum("Total institutional deliveries(Gvt + Pvt)"),0),
coalesce(sum("Total Delivery out of State"),0)
from s',true,'ACTIVE','f10cb393-15a8-420d-bc7a-9622c3772b2c'),
	 (428,1,'2019-02-14 00:30:26.038',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','d9aeb493-e74c-4b39-b31a-c10894fd00ec'),
	 (426,1,'2019-02-14 00:28:03.897',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','1f1d182d-d4c9-4314-a54b-cda99afeff73'),
	 (430,1,'2019-02-14 00:30:26.044',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','be6ca2c5-0cc1-42a7-9561-35d6931b0a37'),
	 (1736,60512,'2020-09-07 17:11:23.234',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','71a949f7-bb2f-4860-afb3-bacbd410ccf9'),
	 (1688,74841,'2020-07-17 18:58:08.491',1,'2021-01-13 20:22:06.427965','from_month','select to_char(cast(''#from_month#'' as date),''MM/YYYY'') as from_date',true,'ACTIVE','d6aaa3a6-290a-47c4-b0f8-d750b00136ff'),
	 (1689,74841,'2020-07-17 18:58:08.543',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''> '' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','03d4b822-db5f-4382-af3f-0ccc82422619'),
	 (1429,74841,'2019-10-18 16:59:17.533',1,'2021-01-13 20:22:06.427965',NULL,'with types as (
select ''''''YESTERDAY'''''' as key,''Yesterday'' as value, 1 as ord
union
select ''''''LAST_7_DAYS'''''' as key, ''Last 7 days'' as value, 2 as ord
union
select ''''''LAST_30_DAYS'''''' as key, ''Last 30 days'' as value, 3 as ord
union
select ''''''LAST_365_DAYS'''''' as key, ''Last 365 days'' as value, 3 as ord

union
select ''''''YEAR_04_2019'''''' as key, ''Current FY year'' as value, 4 as ord)
select * from types order by ord',true,'ACTIVE','a27270c0-3b8a-4553-be40-d600de3719e9'),
	 (1430,74841,'2019-10-18 16:59:17.574',1,'2021-01-13 20:22:06.427965',NULL,'with types as (
select ''''''FI'''''' as key,''FI'' as value, 2 as ord
union
select ''''''IMR'''''' as key, ''IMR'' as value, 3 as ord
union
select ''''''NCD_HYPERTENSION_CONFIRM'''''' as key, ''NCD Hypertension Confirm'' as value, 4 as ord
union
select ''''''LBW'''''' as key,''LBW'' as value, 5 as ord
union
select ''''''NCD_DIABETES_CONFIRM'''''' as key, ''NCD Diabetes Confirm'' as value, 6 as ord
union
select ''''''SR'''''' as key, ''SR'' as value, 7 as ord
union
select ''''''VERIFICATION_SERVICE'''''' as key,''Verification Service'' as value, 8 as ord
union
select ''''''NCD_DIABETES'''''' as key, ''NCD Diabetes'' as value, 9 as ord
union
select ''''''SAM'''''' as key,''SAM'' as value, 10 as ord
union
select ''''''NCD_HYPERTENSION'''''' as key,''NCD Hypertension'' as value, 11 as ord
union
select ''''''Anemia'''''' as key,''Anemia'' as value, 12 as ord
union
select ''''''AVG_SERVICE_DURATION'''''' as key,''Avg Service Duration'' as value, 13 as ord
union
select ''''''MMR'''''' as key,''MMR'' as value, 14 as ord
union
select ''''''PREG_REG'''''' as key,''Pregnancy Register'' as value, 15 as ord
union
select ''''''ID'''''' as key,''ID'' as value, 16 as ord
union
select ''''''BENEFICIARY_WRONG_MOBILE_NUMBER'''''' as key,''Beneficiary Wrong Mobile Number'' as value, 17 as ord
union
select ''''''DATA_QUALITY'''''' as key,''Data Quality'' as value, 18 as ord
union
select ''''''NCD_CERVICAL'''''' as key,''NCD Cervical'' as value, 19 as ord
union
select ''''''NCD_BREAST'''''' as key,''NCD Breast'' as value, 20 as ord
union
select ''''''NCD_ORAL'''''' as key,''NCD Oral'' as value, 21 as ord
)select * from types order by ord',true,'ACTIVE','5a0c20a5-5d7b-4e65-8190-78a3bc5ccab7'),
	 (1431,74841,'2019-10-18 16:59:17.584',1,'2021-01-13 20:22:06.427965','loggedInUserId,element_name,location_id,timeline_type','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#)
select
  case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name else lm.name end as "Location Name",
  case when t.ele_type in (''MMR'', ''IMR'') then t.chart1 
  when t.ele_type = ''SR'' then  t.value end as "Total live birth",
--   case when t.ele_type in (''MMR'', ''IMR'', ''SR'', ''Anemia'', ''SAM'', ''LBW'', ''ID'', ''FI'', ''PREG_REG'', ''VERIFICATION_SERVICE'', ''NCD_DIABETES'', ''NCD_HYPERTENSION'', ''AVG_SERVICE_DURATION'', ''DATA_QUALITY'', ''NCD_ORAL'', ''NCD_BREAST'', ''NCD_CERVICAL'', ''BENEFICIARY_WRONG_MOBILE_NUMBER'') then t.target 
--   when t.ele_type = ''NCD_DIABETES_CONFIRM'' then 8.7 
--   when t.ele_type = ''NCD_HYPERTENSION_CONFIRM'' then 18 end as "Target",
  case when t.ele_type in (''MMR'', ''IMR'') then t.value end as "Total deaths",
  case when t.ele_type = ''SR'' then t.male end as "Total male",
  case when t.ele_type = ''SR'' then t.female end as "Total female",
  case when t.ele_type = ''Anemia'' then t.chart1 end as "HB less than 7",
  case when t.ele_type = ''Anemia'' then t.chart2 end as "HB between 7 and 9.9",
  case when t.ele_type = ''Anemia'' then t.chart3 end as "HB between 10.0 and 10.9",
  case when t.ele_type = ''Anemia'' then t.chart4 end as "HB greater than 11",
  case when t.ele_type = ''SAM'' then t.value end as "Total SAM",
  case when t.ele_type = ''SAM'' then t.chart1 
  when t.ele_type in (''AVG_SERVICE_DURATION'', ''BENEFICIARY_WRONG_MOBILE_NUMBER'', ''DATA_QUALITY'') then t.value end as "Total services verified (By GVK)",
  case when t.ele_type in (''BENEFICIARY_WRONG_MOBILE_NUMBER'', ''DATA_QUALITY'') then t.chart1 end as "Success service verified (By GVK)",
  case when t.ele_type in (''BENEFICIARY_WRONG_MOBILE_NUMBER'', ''DATA_QUALITY'') then t.chart2 end as "Failed service verified (By GVK)",
  case when t.ele_type = ''SAM'' then t.chart2 end as "Total MAM",
  case when t.ele_type = ''SAM'' then t.chart3 end as "Normal Child",
  case when t.ele_type = ''LBW'' then t.value end as "Total weighted",
  case when t.ele_type = ''LBW'' then t.chart1 end as "Weight between 1.8 and 2.5",
  case when t.ele_type = ''LBW'' then t.chart2 end as "Weight less than 1.8",
  case when t.ele_type = ''LBW'' then t.chart3 end as "Weight greater than 2.5",
  case when t.ele_type = ''ID'' then t.value end as "Total ID birth",
  case when t.ele_type = ''ID'' then t.chart1 end as "Total delivery",
  case when t.ele_type = ''ID'' then t.chart2 end as "Home delivery",
  case when t.ele_type = ''FI'' then t.value end as "FI",
  case when t.ele_type = ''FI'' then t.chart1 end as "Total child born",
--  case when t.ele_type = ''FI'' then t.chart2 end as "Non-FI",
  case when t.ele_type = ''PREG_REG'' then t.value end as "Total Reg.",
  case when t.ele_type = ''PREG_REG'' then t.chart1 end as "Early Reg.",
  case when t.ele_type = ''VERIFICATION_SERVICE'' then t.value end as "Total Service Verification",
  case when t.ele_type = ''VERIFICATION_SERVICE'' then t.chart1 end as "True Count",
  case when t.ele_type = ''VERIFICATION_SERVICE'' then t.chart2 end as "False Count",
  case when t.ele_type in (''NCD_DIABETES'', ''NCD_HYPERTENSION'', ''NCD_BREAST'', ''NCD_CERVICAL'', ''NCD_ORAL'') then t.value 
  when t.ele_type in (''NCD_HYPERTENSION_CONFIRM'', ''NCD_DIABETES_CONFIRM'') then t.chart4 end as "Total Screened",
  case when t.ele_type in (''NCD_DIABETES'', ''NCD_HYPERTENSION'', ''NCD_ORAL'', ''NCD_CERVICAL'') then t.male end as "Male Screened",
  case when t.ele_type in (''NCD_DIABETES'', ''NCD_HYPERTENSION'', ''NCD_ORAL'', ''NCD_CERVICAL'') then t.female end as "Female Screened",
  case when t.ele_type in (''NCD_HYPERTENSION'', ''NCD_DIABETES'', ''NCD_ORAL'', ''NCD_CERVICAL'') then t.chart1 end as "Total member 30+",
  case when t.ele_type in (''NCD_HYPERTENSION_CONFIRM'', ''NCD_DIABETES_CONFIRM'') then t.value end as "Total Diagnosed",
  case when t.ele_type in (''NCD_HYPERTENSION_CONFIRM'', ''NCD_DIABETES_CONFIRM'') then t.chart1 end as "Total male screened",
  case when t.ele_type in (''NCD_HYPERTENSION_CONFIRM'', ''NCD_DIABETES_CONFIRM'') then t.chart2 end as "Total female screened",
  case when t.ele_type in (''NCD_HYPERTENSION_CONFIRM'', ''NCD_DIABETES_CONFIRM'') then t.chart3 end as "Total Confirmed",
  case when t.ele_type in (''NCD_DIABETES_CONFIRM'', ''NCD_HYPERTENSION_CONFIRM'') then t.male end as "Male Confirmed",
  case when t.ele_type in (''NCD_DIABETES_CONFIRM'', ''NCD_HYPERTENSION_CONFIRM'') then t.female end as "Female Confirmed",
  case when t.ele_type = ''AVG_SERVICE_DURATION'' then t.chart1 end as "Total days",
  case when t.ele_type = ''NCD_BREAST'' then t.chart1 end as "Total Female Population(>30 Age)"
from
  (
    select
	loc.child_id as location,
    coalesce(sum(ta.value), 0) as value,
	coalesce(sum(ta.male), 0) as male,
	coalesce(sum(ta.female), 0) as female,
	coalesce(sum(ta.chart1), 0) as chart1,
	coalesce(sum(ta.chart2), 0) as chart2,
	coalesce(sum(ta.chart3), 0) as chart3,
	coalesce(sum(ta.chart4), 0) as chart4,
    coalesce(max(ta.target), 0) as target,
    case when #element_name# = null then null else #element_name# end as ele_type
from
	location_hierchy_closer_det loc 
	left join soh_timeline_analytics_temp ta on ta.location_id = loc.child_id
	and element_name = #element_name#
	and timeline_type = #timeline_type#
	where loc.parent_id = #location_id#
    and loc."depth" = 1
group by
	loc.child_id,
	element_name,
	timeline_type
  ) as t
  left join location_master lm on lm.id = t.location
  cross join prefered_language
  order by lm.english_name',true,'ACTIVE','6692e0cc-625b-49f2-979b-fdc7c0b18cd4');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1690,74841,'2020-07-17 18:58:08.547',1,'2021-01-13 20:22:06.427965','to_month','select to_char(cast(''#to_month#'' as date),''MM/YYYY'') as to_date',true,'ACTIVE','449a521a-bce1-42fd-9c1a-d3e4eb31f0f5'),
	 (1660,60512,'2020-06-29 12:04:00.405',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id','with prefered_language as(
	select case when prefered_language = ''EN'' then true else false end as is_english 
	from um_user
	where id = #loggedInUserId#
),location_detail as (
	select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1
),dates as (
	select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date
),cmam_counts as (
	select location_detail.child_id,
	sum(cmam_total_admission) as cmam_admission_count,
	sum(cmam_visit_1) as cmam_visit_1_count,
	sum(cmam_visit_2) as cmam_visit_2_count,
	sum(cmam_visit_3) as cmam_visit_3_count,
	sum(cmam_visit_4) as cmam_visit_4_count,
	sum(cmam_visit_5) as cmam_visit_5_count,
	sum(cmam_visit_6) as cmam_visit_6_count,
	sum(cmam_visit_7) as cmam_visit_7_count,
	sum(cmam_visit_8) as cmam_visit_8_count
	from location_detail
	inner join location_hierchy_closer_det on location_detail.child_id = location_hierchy_closer_det.parent_id
	inner join child_cmam_analytics_location_wise_details on location_hierchy_closer_det.child_id = child_cmam_analytics_location_wise_details.location_id
	inner join dates on child_cmam_analytics_location_wise_details.month_year between dates.from_date and dates.to_date
	group by location_detail.child_id
),details as (
	select row_number() over() as sr_no,
	location_master.id as hidden_location_id,
	case when prefered_language.is_english and location_master.english_name is not null then location_master.english_name else location_master.name end as loc,
	coalesce(cmam_counts.cmam_admission_count,0) as cmam_admission_count,
	coalesce(cmam_counts.cmam_visit_1_count,0) as cmam_visit_1_count,
	coalesce(cmam_counts.cmam_visit_2_count,0) as cmam_visit_2_count,
	coalesce(cmam_counts.cmam_visit_3_count,0) as cmam_visit_3_count,
	coalesce(cmam_counts.cmam_visit_4_count,0) as cmam_visit_4_count,
	coalesce(cmam_counts.cmam_visit_5_count,0) as cmam_visit_5_count,
	coalesce(cmam_counts.cmam_visit_6_count,0) as cmam_visit_6_count,
	coalesce(cmam_counts.cmam_visit_7_count,0) as cmam_visit_7_count,
	coalesce(cmam_counts.cmam_visit_8_count,0) as cmam_visit_8_count
	from location_detail
	inner join location_master on location_master.id = location_detail.child_id
	left join cmam_counts on location_detail.child_id = cmam_counts.child_id
    cross join prefered_language
)
select details.loc as "Location",
details.hidden_location_id,
details.cmam_admission_count as "Total CMAM Admission",
details.cmam_visit_1_count as "Week 1",
details.cmam_visit_2_count as "Week 2",
details.cmam_visit_3_count as "Week 3",
details.cmam_visit_4_count as "Week 4",
details.cmam_visit_5_count as "Week 5",
details.cmam_visit_6_count as "Week 6",
details.cmam_visit_7_count as "Week 7",
details.cmam_visit_8_count as "Week 8"
from details
union all
select ''<b>Total<b>'',
#location_id#,
sum(details.cmam_admission_count),
sum(details.cmam_visit_1_count),
sum(details.cmam_visit_2_count),
sum(details.cmam_visit_3_count),
sum(details.cmam_visit_4_count),
sum(details.cmam_visit_5_count),
sum(details.cmam_visit_6_count),
sum(details.cmam_visit_7_count),
sum(details.cmam_visit_8_count)
from details;',true,'ACTIVE','e7369e63-cd9a-4d60-b552-9ddf9f23d89d'),
	 (1058,64189,'2019-04-29 13:35:47.999',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','393c0b16-b4d6-41c6-91d5-b0796272b7f7'),
	 (23,1027,'2018-05-14 17:06:47.942',1,'2021-01-13 20:22:06.427965','location_id','select lm.id as techo_code,lm.name as location_name,lm.location_code as emamta_code from location_hierchy_closer_det lh ,location_master lm
where lh.parent_id = #location_id# and depth = 1 and lh.child_id = lm.id
order by name;',true,'ACTIVE','3dafe80a-12b7-4de0-b052-17ce4542822a'),
	 (516,1,'2019-02-14 15:59:24.144',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','0a01a56c-c451-46cd-a5c9-0a3dd6ef2f04'),
	 (1033,60512,'2019-04-22 17:29:47.52',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','8b70dbdc-44ce-48ca-aff1-fdcd217bf3ae'),
	 (1217,66522,'2019-07-17 16:50:57.714',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','41c889cc-694c-4afc-8338-7b1fcbda0ead'),
	 (1728,60512,'2020-09-07 17:04:53.948',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','de73e2e1-80dc-49fd-941b-258242148e58'),
	 (922,60512,'2019-03-13 15:57:37.146',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','7ec252a7-4648-4f4c-952c-36e0ace5dab1'),
	 (1705,60512,'2020-09-07 16:38:29.395',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where dob > fsam_admission_date - interval ''6 month''
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','5b61d201-1adb-44e8-8b4a-121475d0f300');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1691,74841,'2020-07-17 18:58:08.578',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,from_month,location_id','with financial_year as (
	SELECT
        to_date(
            CASE WHEN ''#from_month#'' = ''null'' THEN
                NULL
            ELSE
                ''#from_month#''
            END, ''MM/DD/YYYY'') AS from_date,
        to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date
), final_det as (
	select
	rprd.pregnancy_reg_location_id as location_id,
	rprd.member_id
	from rch_pregnancy_analytics_details rprd 
	inner join anmol_location_mapping mapping on rprd.pregnancy_reg_location_id = mapping.location_id
	INNER JOIN location_hierchy_closer_det lm on lm.child_id = mapping.location_id and parent_loc_type  = ''V''
	left join anmol_master am on rprd.member_id = am.member_id
	left join financial_year fy on true 
	where parent_loc_type = ''V'' and 
	cast(rprd.reg_service_date_month_year as date) between fy.from_date and fy.to_date  
	and rprd.preg_reg_state in (''DELIVERY_DONE'', ''PENDING'', ''PREGNANT'')
	and 
(am.id is null )
and rprd.pregnancy_reg_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id# )
	ORDER BY rprd.pregnancy_reg_id
	#limit_offset#
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
get_location_hierarchy(fd.location_id) as "Location",
im.first_name || '' '' || im.middle_name || '' '' || im.last_name || '' ('' || im.unique_health_id || '')'' as "Member Det",
cast(age(cast(im.dob as date))  as text) as "Age",
im.basic_state as "Member Basic State",
imf.basic_state as "Family Basic State",
case when im.gender = ''F'' then ''Female'' else ''Male'' end as "Gender",
lfvd.value as "Marital Status"
from final_det fd
left join imt_member im on im.id = fd.member_id
left join imt_family imf on imf.family_id = im.family_id
left join listvalue_field_value_detail lfvd on lfvd.id = im.marital_status',true,'ACTIVE','672d490c-ec2c-4822-b119-b62326bc5523'),
	 (20,1027,'2018-05-14 17:06:21.14',1,'2021-01-13 20:22:06.427965','location_id','select case when res.name is null then null else row_number() over () end as "Sr. No",coalesce(res.name,''<b>Total</b>'') as "Location",
case when sum(res.sickle_male) is null then 0 else sum(res.sickle_male) end as "Male",
case when sum(res.sickle_female) is null then 0 else sum(res.sickle_female) end as  "Female",
case when sum(res.sickle_0_5) is null then 0 else sum(res.sickle_0_5) end as "0-5",
case when sum(res.sickle_5_15) is null then 0 else sum(res.sickle_5_15) end as "5-15",
case when sum(res.sickle_15_45) is null then 0 else sum(res.sickle_15_45) end as "15-45",
case when sum(res.sickle_above_45) is null then 0 else sum(res.sickle_above_45) end as "Above 45",
case when sum(res.sickle_bpl) is null then 0 else sum(res.sickle_bpl) end as "BPL",
case when sum(res.sickle_apl) is null then 0 else sum(res.sickle_apl) end as "APL",
case when sum(res.sickle_sc) is null then 0 else sum(res.sickle_sc) end as "SC",
case when sum(res.sickle_st) is null then 0 else sum(res.sickle_st) end as "ST",
case when sum(res.sickle_obc) is null then  0 else sum(res.sickle_obc) end as "OBC",
case when sum(res.sickle_gen) is null then 0 else sum(res.sickle_gen) end as "GEN",
case when sum(res.sickle_abandon) is null then 0 else sum(res.sickle_abandon) end as "Abandon",
case when sum(res.sickle_married) is null then 0 else sum(res.sickle_married) end as "Married",
case when sum(res.sickle_unmarried) is null then 0 else sum(res.sickle_unmarried) end as "Unmarried",
case when sum(res.sickle_widow) is null then 0 else sum(res.sickle_widow) end as "Widow",
case when sum(res.sickle_widower) is null then 0 else sum(res.sickle_widower) end as "Widower"
from
(select lm.name ,lwa.sickle_male,lwa.sickle_female,lwa.sickle_0_5,lwa.sickle_5_15,lwa.sickle_15_45,lwa.sickle_above_45,lwa.sickle_bpl,lwa.sickle_apl,
lwa.sickle_sc,lwa.sickle_st,lwa.sickle_obc,lwa.sickle_gen,lwa.sickle_abandon,lwa.sickle_married,lwa.sickle_unmarried,lwa.sickle_widow,lwa.sickle_widower
from location_hierchy_closer_det lhcd inner join location_wise_analytics lwa
on lwa.loc_id = lhcd.child_id and lwa.loc_id = lhcd.parent_id inner join location_master lm
on lwa.loc_id = lm.id
where lwa.loc_id in (select child_id from location_hierchy_closer_det where parent_id = (#location_id#) and depth=1)) res
group by rollup(res.name)',true,'ACTIVE','c42c6d96-f167-4cae-a3ce-97434de15b07'),
	 (912,409,'2019-03-07 16:01:46.034',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','4920e113-df34-4604-b0a4-943a264a2c0c'),
	 (1668,74841,'2020-07-16 15:50:41.998',1,'2021-01-13 20:22:06.427965','to_month,from_month,location_id','with loc_det as (
	select child_id from location_hierchy_closer_det
	where parent_id = #location_id# and "depth" = 1
), dates AS (
    SELECT
        to_date(
            CASE WHEN ''#from_month#'' = ''null'' THEN
                NULL
            ELSE
                ''#from_month#''
            END, ''MM/DD/YYYY'') AS from_date,
        to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date
),
final_det as (
	select lhcd.parent_id ,sum(apad.rch_pregnancy_registration) as rch_pregnancy_registration,
    sum(apad.anmol_pregnancy_registration) as anmol_pregnancy_registration,
    sum(apad.anmol_ec_not_registered) as anmol_ec_not_registered,
    sum(apad.anmol_preg_not_registered) as anmol_preg_not_registered,
sum(apad.delivery_not_registered) as delivery_not_registered
	from anmol_pregnancy_analytic_details apad 
	left join location_hierchy_closer_det lhcd on lhcd.child_id = apad.location_id
	left join dates on true
	where parent_id in (select child_id from loc_det) 
	and month_year between dates.from_date and dates.to_date
	group by lhcd.parent_id
)

select 
ld.child_id as "hidden_location_id",
lm.english_name as "Location", coalesce(rch_pregnancy_registration,0) as "Rch Pregnancy Registration"
,coalesce(anmol_pregnancy_registration,0) as "Anmol Pregnancy Registration",
coalesce(rch_pregnancy_registration - anmol_pregnancy_registration,0) as "Difference",
coalesce(anmol_ec_not_registered,0) as "Eligible Couple Not Registered",
coalesce(anmol_preg_not_registered,0) as "Pregnancy Not Registered",
coalesce(delivery_not_registered,0) as "Delivery Not Registered"
from loc_det ld 
left join final_det fd on fd.parent_id = ld.child_id
left join location_master lm on lm.id = ld.child_id

union all
select 
null,
''<b>Total</b>'',
coalesce(sum(rch_pregnancy_registration),0),
coalesce(sum(anmol_pregnancy_registration),0),
coalesce(sum(rch_pregnancy_registration - anmol_pregnancy_registration),0),
coalesce(sum(anmol_ec_not_registered),0),
coalesce(sum(anmol_preg_not_registered),0),
coalesce(sum(delivery_not_registered),0)
from final_det',true,'ACTIVE','1d5cb466-3151-458a-beb2-266bc178c1ed'),
	 (1764,60512,'2020-09-18 12:13:46.715',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_discharge_status = ''SAM_TO_SAM''
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','7c7cd464-f2f3-4f0b-8c6b-3b4a3475eda3'),
	 (1831,74841,'2020-12-10 10:09:25.682',1,'2021-01-13 20:22:06.427965','comorbidity','select case when #comorbidity# = ''true'' then ''True'' 
when #comorbidity# = ''false'' then ''False''
else ''All'' end as comorbidity',true,'ACTIVE','445af730-4785-4e2d-bc0b-812af570a924'),
	 (1218,66522,'2019-07-17 16:50:57.716',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','75852252-f19a-46e0-9a70-c641e4806822'),
	 (1208,66522,'2019-07-16 20:34:18.687',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,call_type,location_id','with unsuccess_calls as(
	select 
	*
	from gvk_manage_call_master master
	where call_response in (''com.argusoft.imtecho.gvk.call.wrong-mobile-number'')
	and location_id in (select child_id from location_hierchy_closer_det where parent_id = (case when #location_id# = -2 then 2 else #location_id# end) 
and depth <= (case when #location_id# = -2 then 0 else 8 end))
       and case when ''all'' = ''#call_type#'' then true 
       when ''#call_type#'' = ''FHW_CH_SER_VERI'' then call_type in (''FHW_CH_SER_VERI'',''FHW_DEL_VERI'',''FHW_TT_VERI'',''FHW_CH_SER_PREG_VERI'')
       else call_type = ''#call_type#'' end
       and created_on between case when ''#from_date#'' = ''null'' then now() else to_date(''#from_date#'',''MM-DD-YYYY'') end and to_date(case when ''#to_date#'' = ''null'' then null 
       else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds''
       order by id #limit_offset#
),
unsuccess_calls_details as (
	select 
	concat(im.first_name,'' '',im.last_name, ''('',im.unique_health_id ,'')'') as name,
	master.mobile_number,
	master.created_on,
	master.call_type,
	master.location_id,
	master.id,
	master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join imt_member im on im.id = master.member_id
	where call_response != ''com.argusoft.imtecho.gvk.call.success''
	
	union all 
	select 
	concat(uu.first_name,'' '',uu.last_name, ''('',role.name ,'')'') as name,
	master.mobile_number,
	master.created_on,
	master.call_type,
	master.location_id,
	master.id,
	master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join um_user uu on uu.id = master.user_id
	inner join um_role_master role on uu.role_id = role.id 
	where call_response != ''com.argusoft.imtecho.gvk.call.success''
	
	union  all
	select 
	case when im.id is null then imf.family_id else concat(im.first_name,'' '',im.last_name, '' ('',imf.family_id ,'')'') end as name,
	master.mobile_number,
master.created_on,
master.call_type,
	master.location_id,
	master.id,
	master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join imt_family imf on imf.family_id = master.family_id
	left join imt_member im on im.family_id = imf.family_id and im.family_head = true
	where call_response != ''com.argusoft.imtecho.gvk.call.success''
),
response as (
select 
master.name,
get_location_hierarchy(master.location_id) as Location_hierarchy,
case when call_response = ''com.argusoft.imtecho.gvk.call.no-number-available'' then ''No number available''
when call_response = ''com.argusoft.imtecho.gvk.call.cant-talk'' then ''Can''''t talk''
when call_response = ''com.argusoft.imtecho.gvk.call.wrong-mobile-number'' then ''Wrong mobile number''
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-asha-husband'' then ''Number belongs to asha''	-- todo
--when call_response = ''com.argusoft.imtecho.gvk.call.not-interested-in-treatment'' then ''Not intersted in treatment''
when call_response = ''com.argusoft.imtecho.gvk.call.unresponsive'' then ''Unreponsive''
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-husband'' then ''Number belongs to anm'' 
when call_response = ''com.argusoft.imtecho.gvk.call.not-reachable'' then ''Not reachable''
when call_response = ''com.argusoft.imtecho.gvk.call.phone-switched-off'' then ''Phone switched off''
when call_response = ''com.argusoft.imtecho.gvk.call.number-collection-pending'' then ''Number collection pending''			-- todo
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary-husband'' then ''number of beneficiary''
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary''
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-family-member''
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-neighbour''
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-or-anm-husband'' then ''ANM or husband''			-- todo
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-ashah-or-asha-husband'' then ''Asha or husband''			-- todo
else ''Other'' end reason,
master.mobile_number\:\:json,
master.location_id,
master.created_on,
master.call_type,
master.created_by,
master.id
from unsuccess_calls_details master
 ),
mo as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code in (''mo_phc'',''mo_uphc''))
),
mo_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	mo group by location_id
),
mo_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from mo_unique mo
	inner join um_user um on um.id = mo.mo_id
),
asha as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code = ''ASHA'')
    where uu.state = ''ACTIVE''
),
asha_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	asha group by location_id
),
asha_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from asha_unique mo
	inner join um_user um on um.id = mo.mo_id
),
anm as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code = ''FHW'')
    where uu.state = ''ACTIVE''
),
anm_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	anm group by location_id
),
anm_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from anm_unique mo
	inner join um_user um on um.id = mo.mo_id
),

contacts as (
	select json_array_elements(mobile_number)->>''mobileNumber'' as contact ,json_array_elements(mobile_number)->>''isCalled'' as isCalled ,id
	from response where mobile_number is not null ),
contacts_display_date as (	
	select string_agg(
	case when isCalled=''true'' then concat(''<b>'',contact,''</b>'') else contact end
	,'','') as contact,id from contacts
	group by id)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
resp.name as "Called Person",
Location_hierarchy as "Location",
contacts.contact as "Dialed Number",
to_char(resp.created_on,''DD-MM-YYYY HH:MI PM'') as  "Call Date",

case when resp.call_type = ''FHW_HIGH_RISK_CONF'' then ''FHW highrisk conformation''
when resp.call_type = ''IMMUN_VERI'' then ''Immunization verification''
when resp.call_type = ''FAM_VERI'' then ''Family verification''
when resp.call_type = ''PREG_REGI_VERI'' then ''Pregnancy registration verification''
when resp.call_type = ''HIGH_RISK_VERI'' then ''Highrisk followup verification''
when resp.call_type = ''MIG_IN_VERI'' then ''Member IN migration verification''
when resp.call_type = ''MIG_OUT_VERI'' then ''Member OUT migration verification''
when resp.call_type = ''DUP_MEM_VERI'' then ''Duplicate member verification'' end as "Call Type",
--resp.reason as "Reason for Unsuccessful Calling",
mo.name as "MO Details",
anm.name as "ANM Details",
asha.name as "ASHA Details"
,concat(um.first_name, '' '', um.last_name) as "RO Details" 
--fhw.name
from response resp
left join contacts_display_date contacts on resp.id = contacts.id
left join mo_details mo on mo.location_id = resp.location_id
left join anm_details anm on anm.location_id = resp.location_id
left join asha_details asha on asha.location_id = resp.location_id
left join um_user um on resp.created_by = um.id',true,'ACTIVE','c32657dd-e77f-442f-85bd-81881dd32cbe'),
	 (1644,78434,'2020-06-24 14:08:49.956',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' > '' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','df0b65ef-70b8-4372-8863-a74d8c36db1c'),
	 (817,58981,'2019-03-06 17:58:39.433',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','86d6c83c-4a47-4334-b5a5-ecdc77f9bc18');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (818,58981,'2019-03-06 17:58:39.435',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','9b9dd072-9a5c-4773-9c3a-3a5fd458dcc0'),
	 (1756,60512,'2020-09-18 12:04:43.498',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_follow_up_visit_1 is not null
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','e6211ede-5d18-4d50-9d50-7eeab4987d2a'),
	 (1713,60512,'2020-09-07 16:47:43.222',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_admission_muac < 11.5
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','f7d5b49a-061e-49bd-b501-61cd9600f45f'),
	 (1778,74841,'2020-10-05 10:30:57.511',1,'2021-01-13 20:22:06.427965','monthyear','select to_date(#monthyear#, ''MM/YYYY'') as monthyear',true,'ACTIVE','beff3c42-b1fd-44e9-b871-9481b12e98b5'),
	 (517,1,'2019-02-14 15:59:24.148',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','0f93feae-4c49-4da2-a736-9636bbcb0ea0'),
	 (750,58981,'2019-03-01 19:41:41.412',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','eb5f746d-0527-475b-8549-15b32d57844c'),
	 (386,1,'2019-02-13 12:19:31.406',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','59275760-d3fc-42ff-a8f3-3fc15c68c30e'),
	 (1752,60512,'2020-09-18 11:27:19.948',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_admission_defaulter_date is not null
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','c6f7a103-42cc-4944-bb88-066455727697'),
	 (1663,74840,'2020-06-29 16:34:13.044',1,'2021-01-13 20:22:06.427965',NULL,'with series as (
select generate_series(5,7) as age
union all 
select 7.5)
select age from series',true,'ACTIVE','8436349d-3526-4b62-a38d-7f2eb660922c'),
	 (62,1027,'2018-07-20 11:51:18.595',1,'2021-01-13 20:22:06.427965','user_id,location_id','select ROW_NUMBER() over() as "S No.",fam.family_id as "Family ID",
case when fam.contact_person_id is not null then mem.first_name || '' '' || mem.last_name else ''NA'' end as "Contact Person",
case when mem.mobile_number is not null then mem.mobile_number else ''NA'' end as "Contact No" 
from imt_family fam inner join location_hierchy_closer_det lhcd
on fam.location_id = lhcd.child_id 
left join imt_member mem on mem.id = fam.contact_person_id
where lhcd.parent_id in  (select child_id from location_hierchy_closer_det where parent_id = #location_id#
and child_id in (select loc_id from um_user_location where user_id = #user_id# and state = ''ACTIVE'')) and 
fam.state in (''com.argusoft.imtecho.family.state.new'',''com.argusoft.imtecho.family.state.new.fhsr.verified'',
''com.argusoft.imtecho.family.state.new.fhw.reverified'',''com.argusoft.imtecho.family.state.new.mo.verified'',''com.argusoft.imtecho.family.state.new.mo.fhw.reverified'')',true,'ACTIVE','d19cf0ed-e542-48c4-b144-fd63ddc6e75b');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (125,58981,'2019-01-09 19:52:31.055',1,'2021-01-13 20:22:06.427965',NULL,'select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as year from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by year desc;',true,'ACTIVE','c4a737ab-13ef-4e1d-b0f1-5d424457a513'),
	 (1747,60512,'2020-09-18 11:23:56.672',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','1f4289c1-71d3-466c-ba38-a2f3001dba38'),
	 (1686,74841,'2020-07-16 17:10:08.464',1,'2021-01-13 20:22:06.427965','to_month','select to_char(cast(''#to_month#'' as date),''MM/YYYY'') as to_date',true,'ACTIVE','943fe753-a2b6-4fd5-8c78-7fa98c093d38'),
	 (208,57698,'2019-01-25 18:32:21.932',1,'2021-01-13 20:22:06.427965','query','#query#',true,'ACTIVE','d91d249f-c8e1-4397-a84d-6ce6eb33eb48'),
	 (1849,74841,'2020-12-14 15:16:41.416',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','4b16f1b8-0caa-481f-8d58-a82afd5a4783'),
	 (1748,60512,'2020-09-18 11:23:56.696',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_admission_death_date is not null
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','09626c26-61c0-4b8d-83d4-6287061cdf85'),
	 (1648,78434,'2020-06-24 14:19:41.825',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' > '' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','820dc9e8-078f-4a8d-8b97-7053bcd99596'),
	 (65,1027,'2018-08-02 12:18:51.376',1,'2021-01-13 20:22:06.427965','family_id','select r1.*,case when r2.fhw is not null then string_agg(r2.fhw,'','') else ''NA'' end as "FHW" from
(select fam.family_id as "Family Id",fam.state as "Family State",
case when fam.contact_person_id is not null then mem.first_name || '' '' || mem.last_name else ''NA'' end as "Contact Person",
case when fam.contact_person_id is not null then mem.mobile_number else ''NA'' end as "Contact Number",
string_agg(lm.name,'' > '' order by lhcd.depth desc) as "Location"
from imt_family fam inner join location_hierchy_closer_det lhcd 
on fam.location_id = lhcd.child_id inner join location_master lm on lm.id = lhcd.parent_id 
left join imt_member mem on mem.id = fam.contact_person_id 
where fam.family_id = ''#family_id#''
group by lhcd.child_id,fam.family_id,fam.contact_person_id, mem.first_name,mem.last_name,mem.mobile_number,fam.state) r1
left join 
(
select concat(us.first_name,'' '',us.last_name,''('',us.user_name,'')'') as fhw
from um_user us inner join um_user_location ul on us.id = ul.user_id 
inner join location_hierchy_closer_det lhcd on lhcd.parent_id = ul.loc_id 
where child_id in (select location_id from imt_family where family_id = ''#family_id#'') and
us.state = ''ACTIVE'' and ul.state = ''ACTIVE'' and us.role_id = 30
group by us.id
) r2 on 1 = 1
group by r1."Family Id",r1."Contact Person",r1."Contact Number",r1."Location",r1."Family State",r2.fhw',true,'ACTIVE','8146dbab-c7dc-4a0b-8c82-87fa9eed74d9'),
	 (737,58981,'2019-03-01 19:28:06.385',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','4aa7620c-483e-4b49-95e0-9746ef0bc3c2'),
	 (1745,60512,'2020-09-18 11:22:43.89',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','9fd2dff4-f3f6-4118-ab76-35ec2c4ddd25');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (500,1,'2019-02-14 15:42:55.166',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','e4251fff-db5a-4d05-a859-d1191620904f'),
	 (501,1,'2019-02-14 15:42:55.169',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','b26b4964-8a22-44ab-a46a-5864fec96519'),
	 (381,1,'2019-02-13 12:17:26.875',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','9738b816-31ee-44e3-9a07-e5831ed4f616'),
	 (767,64189,'2019-03-04 12:20:34.75',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId# )
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','fe4dc99d-34ad-41a5-82fd-4f9a0abe2070'),
	 (1844,74841,'2020-12-11 17:30:15.542',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','8064b5c7-26be-46f3-a67c-29007439bf70'),
	 (1845,74841,'2020-12-11 17:30:15.557',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','6ece71df-cf0e-4543-82c2-665af9d3d89d'),
	 (1685,74841,'2020-07-16 17:10:08.459',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''> '' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','d6d95cf9-244e-408c-b201-48dc3268da1b'),
	 (1784,74841,'2020-10-12 14:10:20.819',1,'2021-01-13 20:22:06.427965','financial_year','with prefered_language as (
select 	case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end as is_enlish
from um_user where id = null
), params as (
		select  to_date(''04-01-'' || SUBSTRING(case when ''#financial_year#'' != ''null'' then ''#financial_year#'' else null end, 0, 5), ''MM/DD/YYYY'') as from_date,
		to_date(''03-31-'' || SUBSTRING(case when ''#financial_year#'' != ''null'' then ''#financial_year#'' else null end, 6, 8), ''MM/DD/YYYY'') as to_date
),ldp as (
	select child_id, case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
				else location_master.name end
	from location_hierchy_closer_det,location_master
        left join prefered_language on true
        where parent_id =  2
	and depth = 2 and location_master.id = location_hierchy_closer_det.child_id
),expected_target as (
	select ldp.child_id,
	location_wise_expected_target.expected_mother_reg as expected_mother_reg,
	location_wise_expected_target.expected_delivery_reg as expected_delivery_reg,
	location_wise_expected_target.ela_dpt_opv_mes_vita_1dose as ela_dpt_opv_mes_vita_1dose,
    ((75*location_wise_expected_target.expected_mother_reg)/100000) as expected_mmr,
	((30*location_wise_expected_target.expected_mother_reg)/1000) as expected_imr
	from ldp
	inner join location_wise_expected_target on ldp.child_id = location_wise_expected_target.location_id
	and location_wise_expected_target.financial_year = ''#financial_year#''
    and location_wise_expected_target.state = ''LOCKED''
), rch_service_provided_during_year_det as (
	select 
	location_id
	,coalesce(sum(stat.anc_reg),0) as anc_reg
	,coalesce(sum(stat.early_anc),0) as early_anc
	,coalesce(sum(stat.no_of_delivery),0) as no_of_delivery
	,coalesce(sum(stat.mother_death),0) as mother_death
	,coalesce(sum(stat.ppiucd),0) as ppiucd
	from rch_service_provided_during_year stat 
	inner join params on true
	where stat.month_year between params.from_date and params.to_date
	group by stat.location_id
), child_services_given_analytics_t as (
	select 
	location_id,
	coalesce(sum(infant_death),0) as infant_death,
	coalesce(sum(live_births_since_april_1),0) as live_birth_delivery,
	coalesce(sum(weighed),0) as weighed,
	coalesce(sum(weighed_less_than_2_5),0) as weighed_less_than_2_5,
	coalesce(sum(fully_immunized),0) as fully_immunized
	from child_services_given_analytics
	inner join params on true
	where month_year between params.from_date and params.to_date
	group by location_id
), rch_delivery_date_base_location_wise_data_point_t as (
	select  
	location_id,
	sum(inst_del) as inst_del,
	sum(sc+phc+chc+sdh+uhc+gia+chiranjivi+mdh+dh+delivery_108) as phi,
	sum(breast_feeding) as breast_feeding,
	sum(del_less_eq_34) as del_less_eq_34,
	sum(cortico_steroid) as cortico_steroid
	from rch_delivery_date_base_location_wise_data_point
	inner join params on true
	where month_year between params.from_date and params.to_date
	group by location_id
),sex_ration as (
	select CAST(delivery_location_id as integer) as loc_id,
	sum(case when gender in (''M'',''F'') then 1 else 0 end) as total,
	sum(case when gender = ''M'' then 1 else 0 end) as total_male,
	sum(case when gender = ''F'' then 1 else 0 end) as total_female
	from rch_child_analytics_details analytics
	left join params on true
	where member_id is not null and dob between params.from_date and params.to_date
	group by delivery_location_id
), rch_pmsma_service_statatics_t as (
	select 
	location_id,
	sum(high_risk_mother_2nd_trimester) as high_risk_mother_2nd_trimester,
	sum(total_beneficiary_under_pmsma) as total_beneficiary_under_pmsma
	from rch_pmsma_service_statatics
	inner join params on month_year between from_date and to_date
	group by location_id
), anemia as (
    select 
    rprd.native_location_id as loc_id,
    count(1) filter(where hb between 0.1 and 6.99) as total_severe_anemic,
    count(1) filter(where hb between 0.1 and 10.99) as total_anemic,
    count(1) filter(where hb between 0.1 and 6.99 and (iron_def_anemia_inj is not null or blood_transfusion)) as total_severe_anemic_treated
    from rch_pregnancy_analytics_details rprd, params
    where cast(date_trunc(''month'', rprd.reg_service_date) as date) between params.from_date and params.to_date
    group by rprd.native_location_id
), sam_child as (
	select  rcad.loc_id,
	count(1) as total_0_to_5_child
	from rch_child_analytics_details rcad  
	inner join params on true
	where cast(dob as date) between cast((case when params.to_date > current_date then current_date else params.to_date end) - interval ''5 years'' as date) and cast(params.from_date as date)
	and rcad.member_state != ''DEAD''
	and rcad.death_date is null
	and rcad.member_id is not null
	group by rcad.loc_id
), screening_sam as (
	select
	location_id,
	sum(analytics.childer_screen_by_anm) as total_screened_for_malnutition,
 	sum(analytics.sam_child) as total_sam_child
	from child_cmtc_nrc_analytics_location_wise_details analytics
	inner join params on true
	where analytics.month_year between params.from_date and params.to_date
	group by location_id
),location_wise_det as (
	select lhcd.parent_id as id
	,coalesce(sum(stat.anc_reg),0) as anc_reg
	,coalesce(sum(stat.early_anc),0) as early_anc
	,coalesce(sum(stat.no_of_delivery),0) as no_of_del
	,coalesce(sum(stat.mother_death),0) as maternal_detah
	,coalesce(sum(rdwp.inst_del),0) as inst_del
	,coalesce(sum(rdwp.phi) ,0) as phi_del
	,coalesce(sum(rdwp.breast_feeding) ,0) as breast_feeding,
	coalesce(sum(csga.infant_death),0) as infant_death,
	coalesce(sum(csga.live_birth_delivery),0) as live_birth,
	coalesce(sum(csga.weighed),0) as weighed,
	coalesce(sum(csga.weighed_less_than_2_5),0) as weighed_less_than_2_5,
	coalesce(sum(csga.fully_immunized),0) as fully_immunized,
	coalesce(sum(total_male),0) as total_male,
	coalesce(sum(total_female),0) as total_female,
	coalesce(sum(high_risk_mother_2nd_trimester),0) as high_risk_mother_2nd_trimester,
	coalesce(sum(total_beneficiary_under_pmsma),0) as total_beneficiary_under_pmsma,
	coalesce(sum(rdwp.del_less_eq_34),0) as del_less_eq_34,
	coalesce(sum(rdwp.cortico_steroid),0) as cortico_steroid,
	coalesce(sum(total_anemic),0) as total_anemic,
	coalesce(sum(total_severe_anemic),0) as total_severe_anemic,
	coalesce(sum(total_severe_anemic_treated),0) as total_severe_anemic_treated,
	coalesce(sum(total_0_to_5_child),0) as total_0_to_5_child,
	coalesce(sum(total_sam_child),0) as total_sam_child,
	coalesce(sum(total_screened_for_malnutition),0) as total_screened_for_malnutition,
	coalesce(sum(stat.ppiucd),0) as ppiucd
	from location_hierchy_closer_det lhcd 
	inner join ldp on lhcd.parent_id = ldp.child_id
	inner join params on true
	left join rch_service_provided_during_year_det stat on lhcd.child_id = stat.location_id
	left join child_services_given_analytics_t csga on csga.location_id = lhcd.child_id 
	left join rch_delivery_date_base_location_wise_data_point_t rdwp on rdwp.location_id = lhcd.child_id
	left join sex_ration on sex_ration.loc_id = lhcd.child_id
	left join rch_pmsma_service_statatics_t on rch_pmsma_service_statatics_t.location_id = lhcd.child_id
	left join anemia on anemia.loc_id = lhcd.child_id
	left join sam_child on sam_child.loc_id = lhcd.child_id
	left join screening_sam on screening_sam.location_id = lhcd.child_id
	group by lhcd.parent_id
), percentage_det as (
	select id as loc_id,
	case when expected_mother_reg is null then ''Not available'' else cast(expected_mother_reg as text) end as expected_mother_reg,
	case when expected_mother_reg is null or expected_mother_reg = 0 then 0 else round(anc_reg*100.0/expected_mother_reg,2) end as per_anc_reg,
	case when ela_dpt_opv_mes_vita_1dose is null then ''Not available'' else cast(ela_dpt_opv_mes_vita_1dose as text) end as expected_fully_immu,
	case when anc_reg = 0 then 0 else round(early_anc*100.0/anc_reg ,2) end as per_early_anc,
	case when expected_delivery_reg is null then ''Not available'' else cast(expected_delivery_reg as text) end as expected_delivery_reg,
	case when expected_delivery_reg is null then 0 else round(no_of_del*100.0/expected_delivery_reg,2) end as per_no_of_del,
	case when inst_del = 0 then 0 else round(phi_del*100.0/inst_del,2) end as per_phi_del,
	case when inst_del = 0 then 0 else round(breast_feeding*100.0/inst_del,2) end as per_breast_feeding,
	case when expected_mmr is null then ''Not available'' else cast(expected_mmr as text) end as expected_mmr,
	case when expected_mmr = 0 then 0 else round(maternal_detah*100.0/expected_mmr ,2) end as per_maternal_death,
	case when expected_imr is null then ''Not available'' else cast(expected_imr as text) end as expected_imr,
	case when expected_imr = 0 then 0 else round(infant_death*100.0/expected_imr ,2) end as per_imr,
	case when weighed = 0 then 0 else round(weighed_less_than_2_5*100.0/weighed ,2) end as per_lbw,
	case when ela_dpt_opv_mes_vita_1dose is null then 0 else round(fully_immunized*100.0/ela_dpt_opv_mes_vita_1dose,2) end as per_fully_immu,
	case when high_risk_mother_2nd_trimester = 0 then 0 else round(total_beneficiary_under_pmsma*100.0/high_risk_mother_2nd_trimester ,2) end as per_total_beneficiary_under_pmsma,
	case when total_male = 0 then 0 else round(total_female*1000.0/total_male ,2) end as per_sex_ratio,
	case when del_less_eq_34 = 0 then 0 else round(cortico_steroid*100.0/del_less_eq_34 ,2) end as per_cortico_steroid,
	case when phi_del = 0 then 0 else round(ppiucd*100.0/phi_del ,2) end as per_ppiucd,
	case when anc_reg = 0 then 0 else round(total_anemic*100.0/anc_reg ,2) end as per_total_anemic,
	case when total_anemic = 0 then 0 else round(total_severe_anemic*100.0/total_anemic ,2) end as per_total_sever_anemic,
	case when total_0_to_5_child = 0 then 0 else round(total_screened_for_malnutition*100.0/total_0_to_5_child ,2) end as per_total_anemic_malnutrition_treated,
	case when total_screened_for_malnutition = 0 then 0 else round(total_sam_child*100.0/total_screened_for_malnutition ,2) end as per_total_sam_malnutrition,
	case when total_severe_anemic = 0 then 0 else round(total_severe_anemic_treated*100.0/total_severe_anemic ,2) end as per_total_anemic_treated
	from location_wise_det lwd
	left join expected_target on lwd.id = expected_target.child_id
),  rank_det as (
	select *,
	DENSE_RANK () OVER (
		ORDER BY per_anc_reg desc
	) as anc_reg_rank,
	DENSE_RANK () OVER (
		ORDER BY per_early_anc desc
	) as early_anc_rank,
	DENSE_RANK () OVER (
		ORDER BY per_no_of_del desc
	) as no_of_del_rank,
	DENSE_RANK () OVER (
		ORDER BY per_maternal_death
	) as maternal_detah_rank,
	DENSE_RANK () OVER (
		ORDER BY per_phi_del desc
	) as phi_del_rank,
	DENSE_RANK () OVER (
		ORDER BY per_breast_feeding desc
	) as breast_feeding_rank,
	DENSE_RANK () OVER (
		ORDER BY per_imr
	) as imr_rank,
	DENSE_RANK () OVER (
		ORDER BY per_lbw 
	) as lbw_rank,
	DENSE_RANK () OVER (
		ORDER BY per_fully_immu desc
	) as fully_immu_rank,
	DENSE_RANK () OVER (
		ORDER BY per_sex_ratio desc
	) as sex_ratio_rank,
	DENSE_RANK () OVER (
		ORDER BY per_total_beneficiary_under_pmsma
	) as pmsma_rank,
	DENSE_RANK () OVER (
		ORDER BY per_cortico_steroid
	) as cortico_steroid_rank,
	DENSE_RANK () OVER (
		ORDER BY per_ppiucd
	) as ppiucd_rank,
	DENSE_RANK () OVER (
		ORDER BY per_total_anemic
	) as total_anemic_rank,
	DENSE_RANK () OVER (
		ORDER BY per_total_anemic_malnutrition_treated
	) as total_anemic_malnutrition_rank,
	DENSE_RANK () OVER (
		ORDER BY per_total_sam_malnutrition desc
	) as per_total_sam_malnutrition_rank 
	from percentage_det
),
s as (
	select ldp.name,lwd.*,rd.* from ldp
	left join location_wise_det lwd on ldp.child_id = lwd.id
	left join rank_det rd on rd.loc_id = lwd.id
	where ldp.child_id = lwd.id
	order by ldp.name
)
select row_number() over() as "Sr. no"
,id as hidden_location_id
,name as  "Location"
,expected_mother_reg as "Pro-rata target for ANC"
,anc_reg as "ANC Reg."
,per_anc_reg as "% of ANC"
,anc_reg_rank  as "Rank (ANC reg.)"
,early_anc as "Early ANC"
,per_early_anc as "% Early ANC against ANC reg."
,early_anc_rank  as "Rank (Early ANC)"
,expected_delivery_reg as "Pro-rata target for Delivery"
,no_of_del as "Delivery Reg."
,per_no_of_del as "% Delivery reg against pro-rata target"
,no_of_del_rank as "Rank (Del Reg.)"
,inst_del as "Institutional Deliveries"
,phi_del as "PHI Deliveries"
,per_phi_del as "% PHI del against total Institutional Deliveries"
,phi_del_rank as "Rank ( PHI del)"
,breast_feeding as "Early Breastfeeding"
,per_breast_feeding as "% of Early Breastfeeding  against total  Institutional Deliveries"
,breast_feeding_rank as "Rank (Early BF)"
,maternal_detah as "Maternal deaths"
,expected_mmr as "Estimated Maternal deaths ( Calc MMR (75) * estimated Live births/100000)"
,per_maternal_death as "% Reported maternal deaths against estimated deaths"
,maternal_detah_rank as "Rank ( Maternal deaths reported against est. deaths)"
,high_risk_mother_2nd_trimester as "2nd and 3rd trimester High risk mother reg. in TeCHO+"
,total_beneficiary_under_pmsma as "2nd and 3rd trimester High risk mother given service under PMSMA"
,per_total_beneficiary_under_pmsma as "% High Risk mother examined during PMSMA"
,pmsma_rank as "Rank ( High risk mother examined at PMSMA)"
,infant_death as "No. of Infant deaths"
,expected_imr as "Est. Infant deaths (Calc IMR (30) * estimated Live births/1000)"
,per_imr as "% Infant Deaths reported estimated deaths"
,imr_rank as "Rank ( Infant deaths)"
,del_less_eq_34 as "Pre-term deliveries" 
,cortico_steroid as "Antenatal Corticosteriod Injection given in case of preterm deliveries"
,per_cortico_steroid as "% Antenatal Corticosteriod Injection in case of preterm deliveries"
,cortico_steroid_rank as "Rank ( ANC inj. in case of preterm del)"
,live_birth as "Live Birth"
,weighed as "Child weighed"
,weighed_less_than_2_5 as "Low Birth Weight ( less than 2.5 kg)"
,per_lbw as "% Low birth weight babies"
,lbw_rank as "Rank ( LBW)"
,expected_fully_immu as "Pro-rata Target for Full Immunization"
,fully_immunized as "Full Immunization ach."
,per_fully_immu as "% Full Immunization against pro-rata target"
,fully_immu_rank as "Rank ( Full Immunization)"
,total_male as "Male (Live Birth)"
,total_female as "Female (Live Birth)"
,per_sex_ratio as "Sex ratio at birth"
,sex_ratio_rank as "Rank (Sex ratio)"
,ppiucd as "PPIUCD inserted for PHI Del"
,per_ppiucd as "%PPIUCD against PHI deliveries"
,ppiucd_rank as "Rank ( PPIUCD)"
,total_0_to_5_child as "0 to 5 years child registered"
,total_screened_for_malnutition as "Child screening for malnutrition"
,per_total_anemic_malnutrition_treated as "% Child screening for malnutrition"
,total_anemic_malnutrition_rank as "Rank ( Child screening)"
,total_sam_child as "SAM Identified"
,per_total_sam_malnutrition as "% of SAM identified against child screened"
,per_total_sam_malnutrition_rank as "Rank ( SAM)"
,total_anemic as "Total Anemic Mothers"
,per_total_anemic as "% Anaemic Pregnant Mothers (NotePz cal. % Anemia against ANC reg.)"
,total_anemic_rank as "Rank ( Anemic Mother)"
,total_severe_anemic as "Severe Anemia Identified"
,per_total_sever_anemic as "% Severe Anaemic Mother Identified (Note- Plz cal sever anemia against total anemia reg.)"
,total_severe_anemic_treated as "Severe Anemia treated (Plz calc FCM/iron sucrose or/and blood transfusion given to severe anemia)"
,per_total_anemic_treated as "% Severe Anaemic Mother treated against identified ( Note Plz calc FCM/iron sucrose or/and blood transfusion given to severe anemia against total severe anemia)"
from s',true,'ACTIVE','fa80e464-f55b-4b02-be9a-a6a53283c413'),
	 (215,60512,'2019-01-30 11:12:58.322',1,'2021-01-13 20:22:06.427965',NULL,'select
im.first_name || '' '' || im.middle_name || '' '' || im.last_name as "Child Name",
u.first_name || '' '' || u.middle_name || '' '' || u.last_name as "User name"
from imt_member im
inner join child_cmtc_nrc_screening_detail screening on screening.child_id = im.id
inner join um_user u on u.id = screening.created_by
where screening.screening_center is null and screening.admission_id is not null;',true,'ACTIVE','fc504bb4-5658-4404-8327-fb7c2f7ed5d3'),
	 (893,64189,'2019-03-07 11:00:57.788',1,'2021-01-13 20:22:06.427965','to_date','select to_char(to_date(''#to_date#'',''MM/DD/YYYY''),''DD/MM/YYYY'') as to_date;',true,'ACTIVE','32c1ed39-d6af-4989-97d6-9a02b99004f1');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1687,74841,'2020-07-16 17:10:08.474',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,from_month,location_id','with financial_year as (
	SELECT
        to_date(
            CASE WHEN ''#from_month#'' = ''null'' THEN
                NULL
            ELSE
                ''#from_month#''
            END, ''MM/DD/YYYY'') AS from_date,
        to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date
), final_det as (
	select
	rprd.pregnancy_reg_location_id as location_id,
	rprd.member_id,
am.mother_registration_status,
am.mother_registration_wsdl_code
	from rch_pregnancy_analytics_details rprd 
	inner join anmol_location_mapping mapping on rprd.pregnancy_reg_location_id = mapping.location_id
	INNER JOIN location_hierchy_closer_det lm on lm.child_id = mapping.location_id and parent_loc_type  = ''V''
	left join anmol_master am on rprd.pregnancy_reg_id = am.pregnancy_reg_det_id
	left join financial_year fy on true 
	where parent_loc_type = ''V'' and 
	cast(rprd.reg_service_date_month_year as date) between fy.from_date and fy.to_date  
	and rprd.preg_reg_state in (''DELIVERY_DONE'', ''PENDING'', ''PREGNANT'')
	and 
(am.mother_registration_status is null or am.mother_registration_status = ''FAIL'')
and rprd.pregnancy_reg_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id# )
	ORDER BY rprd.pregnancy_reg_id
	#limit_offset#
), previous_preg_det as (
	select fd.member_id,string_agg(case when rwmm.pregnancy_outcome is not null and rwmm.pregnancy_outcome != '''' then rwmm.pregnancy_outcome else ''N/A'' end, '','') as  pregnancy_outcome,
        string_agg(case when am.mother_delivery_status is not null and am.mother_delivery_status  != '''' then am.mother_delivery_status else ''N/A'' end, '','') as  delivery_outcome
	from final_det fd
	left join anmol_master am on am.member_id = fd.member_id
	left join rch_wpd_mother_master rwmm on rwmm.pregnancy_reg_det_id = am.pregnancy_reg_det_id
where 
rwmm.has_delivery_happened is true
and rwmm.state is null
	group by fd.member_id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
get_location_hierarchy(fd.location_id) as "Location",
im.first_name || '' '' || im.middle_name || '' '' || im.last_name || '' ('' || im.unique_health_id || '')'' as "Member Det",
cast(age(cast(im.dob as date))  as text) as "Age",
im.basic_state as "Member Basic State",
imf.basic_state as "Family Basic State",
case when im.gender = ''F'' then ''Female'' else ''Male'' end as "Gender",
lfvd.value as "Marital Status",
fd.mother_registration_status as "Current Mother Registration Status",
fd.mother_registration_wsdl_code as "Current Wsdl Status",
case when ppd.delivery_outcome is not null then ppd.delivery_outcome else ''N/A'' end as "Previous Delivery Outcome",
case when ppd.pregnancy_outcome is not null then ppd.pregnancy_outcome else ''N/A'' end as "Previous Pregnancy Outcome"
from final_det fd
left join previous_preg_det ppd on ppd.member_id = fd.member_id
left join imt_member im on im.id = fd.member_id
left join imt_family imf on imf.family_id = im.family_id
left join listvalue_field_value_detail lfvd on lfvd.id = im.marital_status',true,'ACTIVE','9d300a4e-73ce-45dc-aca7-ef3eb106c002'),
	 (1744,60512,'2020-09-18 11:20:59.134',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','59123d30-b638-4609-a51b-8830c28f92be'),
	 (89,1027,'2018-10-10 16:35:04.529',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','select  ROW_NUMBER() over ()+SUBSTRING (''#limit_offset#'',POSITION(''offset'' in ''#limit_offset#'')+7)\:\:int as "Sr No", res."Family ID",res."Health ID",res."Child Name",res."Mother Name",to_char(res."DOB",''DD/MM/YYYY'') as "Birth Date",res."Age",res."Weight",
res."Is child provided Exclusive breastfeeding for 6 months" as "Is child provided Exclusive breast feeding for 6 months",res."Is child provided complementary feeding after 6 months"
as "Is child provided comple mentary feeding after 6 months",
res."IFA syrup given biweekly for 6 to 60 months age child" as "IFA syrup given bi-weekly for 6 to 60 months age child"
,COALESCE(COALESCE(string_agg(lfvd.value,'',''),res.other_diseases),''-'') as "Disease",
res."Treatment given" as "Treat- ment given",res."Child Death",res."Death Date",
case when res.is_alive = false 
then case when res.death_reason = ''-1'' then res.other_death_reason else COALESCE(string_agg(death.value,'',''),''-'') end
else ''-'' end as "Death Reason",res."Death Place"
from
(select rcs.is_alive,rcs.other_death_reason,rcs.death_reason,rcs.other_diseases,rcs.id,mem.family_id as "Family ID",mem.unique_health_id as "Health ID",mem.first_name || '' '' || mem.last_name as "Child Name",
coalesce(mother.first_name || '' '' || mother.last_name,''NA'') as "Mother Name",mem.dob as "DOB",
extract (year from age(mem.dob))\:\:smallint * 12 + extract (month from age(mem.dob))\:\:smallint as "Age",coalesce(round(rcs.weight\:\:numeric,2)\:\:text,''NA'') as "Weight",
coalesce(case when rcs.exclusively_breastfeded = true then ''Y'' else ''N'' end,''NA'') as "Is child provided Exclusive breastfeeding for 6 months",
coalesce(case when rcs.complementary_feeding_start_period = ''AFTER6'' then ''Y'' else ''N'' end,''NA'') as "Is child provided complementary feeding after 6 months",
coalesce(case when rcs.ifa_syrup_given = true then ''Y'' else ''N'' end,''NA'') as "IFA syrup given biweekly for 6 to 60 months age child",
coalesce(rcs.is_treatement_done,''-'') as "Treatment given",
case when rcs.is_alive = true then ''N'' else ''Y'' end as "Child Death",
case when rcs.is_alive = false then to_char(rcs.death_date\:\:date,''DD/MM/YYYY'') else ''-'' end as "Death Date",
case when rcs.is_alive = false then case when rcs.place_of_death = ''ON_THE_WAY'' then ''On the way'' when rcs.place_of_death=''HOSP'' then ''HOSPITAL'' else rcs.place_of_death end else
''-'' end as "Death Place"
from rch_child_service_master rcs 
inner join location_hierchy_closer_det lhcd on rcs.location_id = lhcd.child_id
inner join imt_member mem on mem.id = rcs.member_id
left join imt_member mother on mother.id = mem.mother_id
where (#location_id# is not null and lhcd.parent_id = #location_id#)
and (#from_date# is null or rcs.created_on >=(case when #from_date# is null then ''01/01/1970'' else ''#from_date#'' end)\:\:Date)
and (#to_date# is null or rcs.created_on <(case when #to_date# is null then ''01/01/1970'' else (date (case when #to_date# is null then ''01/01/1970'' else ''#to_date#'' end) + integer ''1'')end)\:\:Date)
#limit_offset#) res 
left join rch_child_service_diseases_rel rcsdr on rcsdr.child_service_id = res.id
left join listvalue_field_value_detail lfvd on lfvd.id = rcsdr.diseases
left join listvalue_field_value_detail death on res.death_reason not in (''-1'',''NONE'') and death.id = res.death_reason\:\:bigint
group by res.id, res."Family ID",res."Health ID",res."Child Name",res."Mother Name",res."DOB",res."Age",res."Weight",
res."Is child provided Exclusive breastfeeding for 6 months",res."Is child provided complementary feeding after 6 months",
res."IFA syrup given biweekly for 6 to 60 months age child",res."Treatment given",res."Child Death",res."Death Date",res.other_diseases,
res.is_alive,res.death_reason,res.other_death_reason,res."Death Place"',true,'ACTIVE','e6306c73-ded1-4c84-976f-341b06034c9c'),
	 (382,1,'2019-02-13 12:17:26.877',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','aae3fcd6-7a92-4a6f-9807-6a9bf3ca7c1a'),
	 (388,1,'2019-02-13 12:21:52.07',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','7381fb64-0acf-47ec-8c15-387d827da908'),
	 (389,1,'2019-02-13 12:21:52.073',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','9742d769-db6e-4c9a-87f0-3cb2baa72b91'),
	 (715,409,'2019-02-27 13:25:43.224',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','9558ded8-15d7-4000-bc64-6f64689d3861'),
	 (1558,409,'2020-04-06 14:07:55.886',1,'2021-01-13 20:22:06.427965','limit_offset','with lab_test_det as (
select
	distinct on
	(covid_admission_detail_id) *
from
	covid19_lab_test_detail ctd
where
	ctd.lab_result = ''POSITIVE''
order by
	covid_admission_detail_id,
	id
#limit_offset#
 ) select
	ROW_NUMBER() over (order by ltd.covid_admission_detail_id) + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Srno",
	concat_ws('' '', cad.first_name, cad.last_name, cad.middle_name) as "Name",
	cad.age as "Age",
	cad.gender as "Gender",
	cad.address as "Address",
	cad.occupation as "Occupation",
	cad.contact_number as "Contact Number",
	d.english_name as "District",
	s.english_name as "State",
	cast(''N/A'' as text) as "Date of arrival in India",
	cad.travelled_place as "Travel to COVID affected country (Name of country)",
	cad.flight_no as "Flight No",
	cast(''N/A'' as text) as "Seat No",
	case
		when cad.in_contact_with_covid19_paitent is not null then cad.in_contact_with_covid19_paitent
		else ''No''
	end as "H/O contact with COVID-19 case",
	cad.date_of_onset_symptom as "Date of onset of symptoms",
	concat_ws('', '' ,(case when cad.is_fever then ''Fever'' else null end) 
	,(case when cad.is_cough then ''Cough'' else null end)
	,(case when cad.is_breathlessness then ''Breathlessness'' else null end)
	,(case when cad.is_sari then ''SARI'' else null end)
	) as "Symptoms at admission",
	to_char(cad.admission_date,''DD/MM/YYYY'') as "Date of isolation",
	case
		when ltd.id is not null then ''Yes''
		else ''No''
	end "Sample collected (yes/No)",
	ltd.lab_test_number as "Sample ID",
	to_char(ltd.lab_collection_on,''DD/MM/YYYY'') as "Date of sample collection",
	hid_sample.name_in_english as "Sample collection centre",
	hid_tested.name_in_english as "Sample tested at",
	hid_tested.name_in_english as "Lab that confirmed the result",
	concat_ws('', '' ,(case when cad.is_hiv then ''HIV'' else null end) 
	,(case when cad.is_heart_patient then ''Heart Patient'' else null end)
	,(case when cad.is_diabetes then ''Diabetes'' else null end)
	,(case when cad.is_copd then ''COPD'' else null end)
	,(case when cad.is_hypertension then ''Hypertension'' else null end)
	,(case when cad.is_renal_condition then ''Renal Condition'' else null end)
	,(case when cad.is_immunocompromized then ''Immunocompromized'' else null end)
	,(case when cad.is_malignancy then ''Malignancy'' else null end)
	,(case when cad.is_other_co_mobidity then cad.other_co_mobidity else null end)
	) as "Underlying medical condition",
	cacds.health_status as "Health Status",
	case when cad.discharge_status is null then ''Admitted'' else cad.discharge_status end as "Outcome (Discharged/ Death/ Admitted)",
	to_char(cad.discharge_date,''DD/MM/YYYY'') as "Date of outcome",
	cast(''N/A'' as text) as "is patient member of covid 19",
	cast(''N/A'' as text) as "house hold contact",
	cast(''N/A'' as text) as "workplace contact",
	cast(''N/A'' as text) as "community contact",
	cast(''N/A'' as text) as "health care contact",
	cast(''N/A'' as text) as "co traveller"
from
	covid19_admission_detail cad
inner join lab_test_det ltd on
	cad.id = ltd.covid_admission_detail_id
left join covid19_admitted_case_daily_status cacds on
	cad.last_check_up_detail_id = cacds.id
left join location_master lm on
	lm.id = cad.location_id
left join location_level_hierarchy_master lh on
	lh.id = lm.location_hierarchy_id
left join health_infrastructure_details hid_sample on
	hid_sample.id = ltd.sample_health_infra
left join health_infrastructure_details hid_tested on
	hid_tested.id = ltd.sample_health_infra_send_to
left join location_master s on
	lh.level1 = s.id
	and s.state = ''ACTIVE''
	and s.name not ilike ''%delete%''
left join location_master d on
	lh.level3 = d.id
	and d.state = ''ACTIVE''
	and d.name not ilike ''%delete%''
order by
	ltd.covid_admission_detail_id',true,'ACTIVE','10d3a6d4-c834-4eb9-91eb-3b37e9588971'),
	 (815,58981,'2019-03-06 17:36:58.884',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 member_det as (
	select 
    m.id,
    r.member_id, f.location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd,
    EXTRACT(YEAR from age(m.dob)) as age,
    r.haemoglobin_tested_count,
    r.last_systolic_bp as last_systolic_bp,
    to_char(p.delivery_date,''DD/MM/YYYY'') as delivery_date,
    r.delivery_outcome,
    r.live_birth,
    r.maternal_detah
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, imt_family f, rch_pregnancy_registration_det p
	where r.member_id = m.id and r.delivery_location_id = l.child_id and r.pregnancy_reg_id = p.id and m.family_id = f.family_id
	and home_del 
	and delivery_outcome in (''LBIRTH'',''SBIRTH'') and (delivery_out_of_state_govt is false and delivery_out_of_state_pvt is false)
	and l.parent_id = #location_id#
	and r.date_of_delivery_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by p.lmp_date
	#limit_offset#
), member_det_extra as(
	select 
	md.id,
	concat(f.address1,'','',f.address2) as address,
	f.area_id,
    f.caste
	from member_det md 
	inner join imt_family f on f.family_id = md.family_id 
)
,caste_filter as (
	select md.id,list.value as caste from member_det_extra md inner join listvalue_field_value_detail list on md.caste = cast(list.id as text)
),gravida_count as (
	select rch_pregnancy_registration_det.member_id,count(*) as gravida
	from rch_pregnancy_registration_det
	where rch_pregnancy_registration_det.member_id in (select id from member_det)
	group by rch_pregnancy_registration_det.member_id
),parity_count as (
	select imt_member.id,count(distinct m2.dob) as parity
	from imt_member
	inner join imt_member m2 on imt_member.id = m2.mother_id
	where imt_member.id in (select id from member_det)
	group by imt_member.id
), loc as (
	select distinct loc_id from member_det
), loc_det as (
select distinct
	loc.loc_id,
    (case when ( prefered_language.is_enlish and (s.english_name is not null)) then s.english_name else s.name end) as stateName,
    (case when ( prefered_language.is_enlish and (d.english_name is not null)) then d.english_name else d.name end) as districtName,
    (case when ( prefered_language.is_enlish and (b.english_name is not null)) then b.english_name else b.name end) as talukaName,
    (case when ( prefered_language.is_enlish and (p.english_name is not null)) then p.english_name else p.name end)  as facilityName,
    (case when ( prefered_language.is_enlish and (sc.english_name is not null)) then sc.english_name else sc.name end) as subCenterName,
    (case when ( prefered_language.is_enlish and (v.english_name is not null)) then v.english_name else v.name end) as villageName,
    (case when ( prefered_language.is_enlish and (a.english_name is not null)) then a.english_name else a.name end) as areaName
	from loc
    inner join prefered_language on true
    inner join location_master lm
    on lm.id = loc.loc_id
    left join location_level_hierarchy_master lh
    on lh.id = lm.location_hierarchy_id
    left join location_master s
    on lh.level1 = s.id and s.state = ''ACTIVE'' and s.name not ilike ''%delete%''
    left join location_master d
    on lh.level3 = d.id and d.state = ''ACTIVE'' and d.name not ilike ''%delete%''
    left join location_master b
    on lh.level4 = b.id and b.state = ''ACTIVE'' and b.name not ilike ''%delete%''
    left join location_master p
    on lh.level5 = p.id and p.state = ''ACTIVE'' and p.name not ilike ''%delete%''
    left join location_master sc
    on lh.level6 = sc.id and sc.state = ''ACTIVE'' and sc.name not ilike ''%delete%''
    left join location_master v
    on lh.level7 = v.id and v.state = ''ACTIVE'' and v.name not ilike ''%delete%''
    left join location_master a
    on lh.level8 = a.id and a.state = ''ACTIVE'' and a.name not ilike ''%delete%''
    where lm.state = ''ACTIVE'' and lm.name not ilike ''%delete%''
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
),
asha_areas as (
select
	distinct area_id
from
	member_det_extra ),
asha_det_temp as(
select
	asha_areas.area_id,
	max(u.id) as user_id
from
	um_user_location ul,
	um_user u,
	asha_areas
where
	asha_areas.area_id = ul.loc_id
	and u.id = ul.user_id
	and u.state = ''ACTIVE''
	and ul.state = ''ACTIVE''
	and u.role_id = (
	select
		id
	from
		um_role_master
	where
		name = ''ASHA'') group by asha_areas.area_id
),	
asha_det as (
select
	u.id,
	asha_det_temp.area_id,
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''(''||
	case
		when u.contact_number is not null then u.contact_number || '')''
		else ''N/A'' || '')''
	end as asha 
from
	um_user u,
	asha_det_temp
where
	u.id = asha_det_temp.user_id
),last_service_details as (
	select to_char(max(service_date),''dd-MM-yyyy'') as last_service_date ,services.member_id from rch_member_services services
	inner join member_det mem on mem.member_id = services.member_id
	group by services.member_id
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.districtName as "District / Corp",
loc_det.talukaName as "Taluka / zone",
loc_det.facilityName as "PHC / UHC",
loc_det.subCenterName as "Sub Centre",
m_extra.address as "Address",
member_det.name as "Name",
caste_filter.caste as "Caste",
member_det.unique_health_id as "TeCHO+ ID",
member_det.age as "Age in Years",
coalesce(gravida_count.gravida,0) as "Gravida",
coalesce(parity_count.parity,0) as "Parity",
member_det.live_birth as "No of Live Children",
member_det.lmp as "LMP",
member_det.edd as "EDD",
member_det.delivery_date as "Date of Home Delivery",
case when member_det.maternal_detah then ''Death'' else ''Live'' end as "Maternal outcome",
case when member_det.delivery_outcome = ''LBIRTH'' then ''Live'' when member_det.delivery_outcome = ''SBIRTH'' then ''Still'' else ''Death'' end  as "Newborn outcome (live/ still/ death)",
services.last_service_date as "Last check up ANC date",
coalesce(haemoglobin_tested_count,0) as "lastHb",
coalesce(last_systolic_bp,0) as "lastBP",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Name",
case when asha_det.asha is null then ''No Asha Assigned'' else asha_det.asha end as "Asha Name"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id
left join gravida_count on member_det.id = gravida_count.member_id
left join parity_count on member_det.id = parity_count.id
left join member_det_extra m_extra on m_extra.id = member_det.id
left join caste_filter on member_det.id = caste_filter.id
left join fhw_det on member_det.loc_id = fhw_det.loc_id
left join asha_det on asha_det.area_id = m_extra.area_id
left join last_service_details services on services.member_id = member_det.id;',true,'ACTIVE','b795a342-e302-476b-9ebe-b5fe89ba98c8'),
	 (1742,60512,'2020-09-17 15:52:21.02',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_discharge_not_15_weight_gain
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','ca46d92e-8755-4c00-b8d5-c59715c4062c');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (502,1,'2019-02-14 15:42:55.172',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','245567fc-a355-41b5-9d1c-be909fb79f1b'),
	 (245,1,'2019-02-05 11:57:29.761',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','31626838-e8ec-4b59-aff3-bfbcf21ee783'),
	(1692,74841,'2020-07-22 17:28:27.168',1,'2023-07-20 16:43:01.739',NULL,'select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as year
    from generate_series(date ''2019-04-01'', current_date, ''1 year'') as curr order by year desc;',true,'ACTIVE','041530b8-11cd-4429-87c0-934433af5d2c'),
	 (1739,60512,'2020-09-07 20:35:18.131',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select child_cmtc_nrc_admission_detail.child_id,
	child_cmtc_nrc_admission_detail.screening_center,
	child_cmtc_nrc_admission_detail.admission_date
	from child_cmtc_nrc_referral_detail
	inner join health_infrastructure_details on child_cmtc_nrc_referral_detail.referred_from = health_infrastructure_details.id
	inner join child_cmtc_nrc_admission_detail on child_cmtc_nrc_referral_detail.admission_id = child_cmtc_nrc_admission_detail.id
	where child_cmtc_nrc_referral_detail.referred_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and health_infrastructure_details.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.screening_center = health_infrastructure_details.id',true,'ACTIVE','be2f9e51-5405-4194-9dd2-30f193cdc13f'),
	 (791,58981,'2019-03-06 15:39:45.731',1,'2021-01-13 20:22:06.427965','limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id','--Abortion (Maternal Health Services provided to the mother registered during the year)
with parameters as(
select CAST(#location_id# AS INTEGER) as location_id,
CAST(''#financial_year#'' AS TEXT) as financial_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
 member_det as (
	select r.member_id, r.tracking_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p
	where r.tracking_location_id  = l.child_id 
	and delivery_outcome in (''ABORTION'', ''SPONT_ABORTION'') and (delivery_out_of_state_govt is false and delivery_out_of_state_pvt is false)
	and l.parent_id = p.location_id
	and r.reg_service_financial_year = p.financial_year
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
    and r.is_valid_for_tracking_report
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','d8eb997d-a408-410a-8739-bf299fb76e70'),
	 (786,58981,'2019-03-06 15:33:41.021',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','c6ef7da6-03ce-4529-ab20-e7b2b6208f28'),
	 (1215,66522,'2019-07-17 16:50:57.705',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','e72df58c-d96b-4ebe-87f0-6f315eda12fd'),
	 (224,58981,'2019-01-30 20:05:27.348',1,'2021-01-13 20:22:06.427965',NULL,'select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as year 
from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by year desc;',true,'ACTIVE','bcb395ab-087b-4a3c-891e-ca5ec88a23cb'),
	 (787,58981,'2019-03-06 15:33:41.031',1,'2021-01-13 20:22:06.427965','limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id','--No of Del. (Maternal Health Services provided to the mother registered during the year)
with parameters as(
select CAST(#location_id# AS INTEGER) as location_id,
CAST(''#financial_year#'' AS TEXT) as financial_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
 member_det as (
	select r.member_id, r.tracking_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p
	where r.tracking_location_id  = l.child_id 
	and delivery_outcome in (''LBIRTH'',''SBIRTH'') and (delivery_out_of_state_govt is false and delivery_out_of_state_pvt is false)
	and l.parent_id = p.location_id
	and r.reg_service_financial_year = p.financial_year
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
    and r.is_valid_for_tracking_report
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, concat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','7c9b11e2-ddf8-41c7-8c54-d1352f2a981f'),
	 (1846,74841,'2020-12-11 17:30:15.559',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','7c9922eb-4ec5-4891-8ff2-67267185fc10');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (441,1,'2019-02-14 00:39:34.951',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','6c67c73d-e492-4414-a25a-c39c58038d05'),
	 (442,1,'2019-02-14 00:39:34.953',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','bc9c705b-0f17-4c54-b853-425cd5df3278'),
	 (1735,60512,'2020-09-07 17:09:55.77',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_discharge_5gm_kg_day_gain
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','93b8416a-554b-4429-b815-ff1d7865c395'),
	 (1693,74841,'2020-07-23 16:25:17.711',1,'2023-07-20 16:43:01.739','location_id','with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)
,children_count_label as (
    select ''0'' as children, 0 as child_count
    union
    select ''1'' as children, 1 as child_count
    union
    select ''2'' as children, 2 as child_count
    union
    select ''3'' as children, 3 as child_count
    union
    select ''4'' as children, 4 as child_count
    union
    select ''5+'' as children, 5 as child_count
)
,total_number as (
	select r.age_group_or_child_cnt, sum(r.eligiblecouple) as eligiblecouple, sum(r.male) as male, sum(r.female) as female,
	sum(r.coppert) as coppert, sum(r.condom) as condom, sum(r.orelpills) as  orelpills,sum(r.injectable) as injectable, sum(r.none) as none
	from rch_eligible_couple_location_wise_count_anlytics_detail r
	inner join locations on locations.child_id = r.location_id
	where age_group_or_child_cnt in (''0'',''1'',''2'',''3'',''4'',''5+'')
	group by r.age_group_or_child_cnt
)
,eligible_couple_data as (
select children_count_label.children as age_group_or_child_cnt,
coalesce(total_number.eligiblecouple,0) as eligiblecouple,
coalesce(total_number.male,0) as male,
coalesce(total_number.female,0) as female,
coalesce(total_number.coppert,0) as coppert,
coalesce(total_number.condom,0) as condom,
coalesce(total_number.orelpills,0) as orelpills,
coalesce(total_number.injectable,0) as injectable,
coalesce(sum( male + female + coppert + condom + orelpills + injectable),0) as total ,
coalesce(total_number.none,0) as none
from children_count_label
left join total_number on total_number.age_group_or_child_cnt = children_count_label.children
group by children_count_label.children, total_number.eligiblecouple,total_number.male,
total_number.female,total_number.coppert,total_number.condom,total_number.orelpills,total_number.injectable,
total_number.none,children_count_label.child_count
order by children_count_label.child_count
)
select
age_group_or_child_cnt as hidden_age_group_or_child_count,
age_group_or_child_cnt as  "Child''s age wise",
eligiblecouple as "Number of eligible couple",
male as "Number of male",
female as "Number of female",
coppert as "Number of coppert users",
condom as "Number of condom users",
orelpills as "Number of oralpills users", injectable ,
total as "Total",
none as "No method adopted"
from eligible_couple_data
where #location_id# is not null
union all
select
	null,''<b>Total</b>'', sum(eligible_couple_data.eligiblecouple),sum(eligible_couple_data.male),sum(eligible_couple_data.female),
	sum(eligible_couple_data.coppert),sum(eligible_couple_data.condom),sum(eligible_couple_data.orelpills),sum(eligible_couple_data.injectable),
	sum(eligible_couple_data.total),sum(eligible_couple_data.none)
from eligible_couple_data
where #location_id# is not null',true,'ACTIVE','1a5bed9d-4542-4658-b455-1c908bf30f29'),
	 (789,58981,'2019-03-06 15:37:15.102',1,'2021-01-13 20:22:06.427965','limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id','--MTP (Maternal Health Services provided to the mother registered during the year)
with parameters as(
select CAST(#location_id# AS INTEGER) as location_id,
CAST(''#financial_year#'' AS TEXT) as financial_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
 member_det as (
	select r.member_id, r.tracking_location_id as loc_id,
	r.unique_health_id, r.family_id, 
	r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p
	where  r.tracking_location_id  = l.child_id 
	and delivery_outcome = ''MTP'' and (delivery_out_of_state_govt is false and delivery_out_of_state_pvt is false)
	and l.parent_id = p.location_id
	and r.reg_service_financial_year = p.financial_year
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
	and r.is_valid_for_tracking_report
	order by r.lmp_date
	#limit_offset#
),loc_det as (
	select loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','661211c4-efeb-4c0c-a31c-b605e6c6bb2b'),
	 (1031,60512,'2019-04-22 17:28:38.649',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','685691d7-0cd0-4c88-ad1f-37ffbcace188'),
	 (811,58981,'2019-03-06 17:33:22.794',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 member_det as (
	select 
    m.id,
    r.member_id, f.location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd,
    EXTRACT(YEAR from age(m.dob)) as age,
    r.haemoglobin_tested_count,
    r.last_systolic_bp as last_systolic_bp,
    to_char(p.delivery_date,''DD/MM/YYYY'') as delivery_date,
    r.delivery_outcome,
    r.live_birth,
    r.maternal_detah
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, imt_family f, rch_pregnancy_registration_det p
	where r.member_id = m.id and r.member_current_location_id = l.child_id and r.pregnancy_reg_id = p.id and m.family_id = f.family_id
	and home_del 
	and delivery_outcome in (''LBIRTH'',''SBIRTH'') and (delivery_out_of_state_govt is false and delivery_out_of_state_pvt is false)
    and delivery_done_by = ''NON-TBA''
	and l.parent_id = #location_id#
	and r.date_of_delivery_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by p.lmp_date
	#limit_offset#
), member_det_extra as(
	select 
	md.id,
	concat(f.address1,'','',f.address2) as address,
	f.area_id,
    f.caste
	from member_det md 
	inner join imt_family f on f.family_id = md.family_id 
)
,caste_filter as (
	select md.id,list.value as caste from member_det_extra md inner join listvalue_field_value_detail list on md.caste = cast(list.id as text)
),gravida_count as (
	select rch_pregnancy_registration_det.member_id,count(*) as gravida
	from rch_pregnancy_registration_det
	where rch_pregnancy_registration_det.member_id in (select id from member_det)
	group by rch_pregnancy_registration_det.member_id
),parity_count as (
	select imt_member.id,count(distinct m2.dob) as parity
	from imt_member
	inner join imt_member m2 on imt_member.id = m2.mother_id
	where imt_member.id in (select id from member_det)
	group by imt_member.id
), loc as (
	select distinct loc_id from member_det
), loc_det as (
select distinct
	loc.loc_id,
    (case when ( prefered_language.is_enlish and (s.english_name is not null)) then s.english_name else s.name end) as stateName,
    (case when ( prefered_language.is_enlish and (d.english_name is not null)) then d.english_name else d.name end) as districtName,
    (case when ( prefered_language.is_enlish and (b.english_name is not null)) then b.english_name else b.name end) as talukaName,
    (case when ( prefered_language.is_enlish and (p.english_name is not null)) then p.english_name else p.name end)  as facilityName,
    (case when ( prefered_language.is_enlish and (sc.english_name is not null)) then sc.english_name else sc.name end) as subCenterName,
    (case when ( prefered_language.is_enlish and (v.english_name is not null)) then v.english_name else v.name end) as villageName,
    (case when ( prefered_language.is_enlish and (a.english_name is not null)) then a.english_name else a.name end) as areaName
	from loc
    inner join prefered_language on true
    inner join location_master lm
    on lm.id = loc.loc_id
    left join location_level_hierarchy_master lh
    on lh.id = lm.location_hierarchy_id
    left join location_master s
    on lh.level1 = s.id and s.state = ''ACTIVE'' and s.name not ilike ''%delete%''
    left join location_master d
    on lh.level3 = d.id and d.state = ''ACTIVE'' and d.name not ilike ''%delete%''
    left join location_master b
    on lh.level4 = b.id and b.state = ''ACTIVE'' and b.name not ilike ''%delete%''
    left join location_master p
    on lh.level5 = p.id and p.state = ''ACTIVE'' and p.name not ilike ''%delete%''
    left join location_master sc
    on lh.level6 = sc.id and sc.state = ''ACTIVE'' and sc.name not ilike ''%delete%''
    left join location_master v
    on lh.level7 = v.id and v.state = ''ACTIVE'' and v.name not ilike ''%delete%''
    left join location_master a
    on lh.level8 = a.id and a.state = ''ACTIVE'' and a.name not ilike ''%delete%''
    where lm.state = ''ACTIVE'' and lm.name not ilike ''%delete%''
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
),
asha_areas as (
select
	distinct area_id
from
	member_det_extra ),
asha_det_temp as(
select
	asha_areas.area_id,
	max(u.id) as user_id
from
	um_user_location ul,
	um_user u,
	asha_areas
where
	asha_areas.area_id = ul.loc_id
	and u.id = ul.user_id
	and u.state = ''ACTIVE''
	and ul.state = ''ACTIVE''
	and u.role_id = (
	select
		id
	from
		um_role_master
	where
		name = ''ASHA'') group by asha_areas.area_id
),	
asha_det as (
select
	u.id,
	asha_det_temp.area_id,
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''(''||
	case
		when u.contact_number is not null then u.contact_number || '')''
		else ''N/A'' || '')''
	end as asha 
from
	um_user u,
	asha_det_temp
where
	u.id = asha_det_temp.user_id
),last_service_details as (
	select to_char(max(service_date),''dd-MM-yyyy'') as last_service_date ,services.member_id from rch_member_services services
	inner join member_det mem on mem.member_id = services.member_id
	group by services.member_id
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.districtName as "District / Corp",
loc_det.talukaName as "Taluka / zone",
loc_det.facilityName as "PHC / UHC",
loc_det.subCenterName as "Sub Centre",
m_extra.address as "Address",
member_det.name as "Name",
caste_filter.caste as "Caste",
member_det.unique_health_id as "TeCHO+ ID",
member_det.age as "Age in Years",
coalesce(gravida_count.gravida,0) as "Gravida",
coalesce(parity_count.parity,0) as "Parity",
member_det.live_birth as "No of Live Children",
member_det.lmp as "LMP",
member_det.edd as "EDD",
member_det.delivery_date as "Date of Home Delivery",
case when member_det.maternal_detah then ''Death'' else ''Live'' end as "Maternal outcome",
case when member_det.delivery_outcome = ''LBIRTH'' then ''Live'' when member_det.delivery_outcome = ''SBIRTH'' then ''Still'' else ''Death'' end  as "Newborn outcome (live/ still/ death)",
services.last_service_date as "Last check up ANC date",
coalesce(haemoglobin_tested_count,0) as "lastHb",
coalesce(last_systolic_bp,0) as "lastBP",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Name",
case when asha_det.asha is null then ''No Asha Assigned'' else asha_det.asha end as "Asha Name"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id
left join gravida_count on member_det.id = gravida_count.member_id
left join parity_count on member_det.id = parity_count.id
left join member_det_extra m_extra on m_extra.id = member_det.id
left join caste_filter on member_det.id = caste_filter.id
left join fhw_det on member_det.loc_id = fhw_det.loc_id
left join asha_det on asha_det.area_id = m_extra.area_id
left join last_service_details services on services.member_id = member_det.id;',true,'ACTIVE','57022ab2-a6e5-4aec-8077-697a631e888f'),
	 (764,64189,'2019-03-04 12:15:22.346',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId# )
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','f1c78da3-b5fb-4a5d-b475-c811052d02d7'),
	 (106,409,'2019-01-01 13:26:10.356',1,'2021-01-13 20:22:06.427965',NULL,'select id,name from um_role_master where id  in (
select distinct role_id from role_hierarchy_management where state = ''ACTIVE'')
order by name;',true,'ACTIVE','1ffe7ded-a778-4975-9994-c7473e9ee8a4'),
	 (1554,74841,'2020-04-01 20:12:38.219',1,'2021-01-13 20:22:06.427965','location_id','with location_det as (
	select child_id as loc_id
	from location_hierchy_closer_det lhc
	where 
	parent_id = #location_id#
)
,labtest_detail_of_collection_pending as (
	select cad.health_infra_id,
	count(1) filter(where cltd.lab_collection_status = ''COLLECTION_PENDING'') as collection_pending,
	count(distinct cad.id) filter (where cltd.lab_collection_status = ''POSITIVE'') as positive_cases
	from covid19_lab_test_detail cltd,covid19_admission_detail cad
	where cltd.covid_admission_detail_id = cad.id
	group by cad.health_infra_id
)
,labtest_detail_of_entry_pending as (
	select cltd.sample_health_infra_send_to as health_infra_id,
	count(1) filter(where cltd.lab_collection_status = ''SAMPLE_COLLECTED'') as sample_receive_pending,
	count(1) filter(where cltd.lab_collection_status = ''SAMPLE_ACCEPTED'') as result_entry_pending
	from covid19_lab_test_detail cltd,covid19_admission_detail cad
	where cltd.covid_admission_detail_id = cad.id
	group by cltd.sample_health_infra_send_to
)
,infra_info as (
	select
	hid.id as infra_id,
	hid.location_id,
	hid.name infra_name,
	sum(case when hiwd.number_of_beds is not null then hiwd.number_of_beds else 0 end) as number_of_beds,	
	sum(case when hiwd.number_of_ventilators_type1 is not null then hiwd.number_of_ventilators_type1 else 0 end) as number_of_ventilators	
	from health_infrastructure_details  hid
	inner join location_hierchy_closer_det loch on loch.child_id = hid.location_id
	left join health_infrastructure_ward_details hiwd on hiwd.health_infra_id = hid.id
	where loch.parent_id in (select distinct loc_id from location_det) and (is_covid_hospital or is_covid_lab)
	group by hid.id,hid.location_id,hid.name
 		
)
,member_det as (
	select 
	infra_id,
	sum(case when cad.status not in (''DISCHARGE'',''DEATH'',''REFER'') and current_bed_no is not null then 1 else 0 end) as occupied_beds,
	sum(case when cad.status not in (''DISCHARGE'',''DEATH'',''REFER'')and on_ventilator then 1 else 0 end) as occupied_ventilators,
    sum(case when number_of_o2 is not null then number_of_o2 else 0 end) as number_of_o2,
    sum(case when cad.status not in (''DISCHARGE'',''DEATH'',''REFER'') and on_o2 then 1 else 0 end) as occupied_o2,
	sum(case when cad.status in (''DEATH'') then 1 else 0 end) as dead,
	sum(case when cad.status in (''DISCHARGE'') then 1 else 0 end) as dischared,
	sum(case when cad.status is not null then 1 else 0 end) as treatment_done,
	sum(case when cad.status in (''SUSPECT'') then 1 else 0 end) as suspect,
	sum(case when cad.status in (''CONFORMED'') then 1 else 0 end) as conformed
	from 
	infra_info info left join health_infrastructure_ward_details hiwd on hiwd.health_infra_id = info.infra_id 
	left join covid19_admission_detail cad on cad.current_ward_id = hiwd.id
	left join covid19_admitted_case_daily_status cacas on cacas.id = cad.last_check_up_detail_id
	group by infra_id
)
,final_det as(
	select 
	 infra_info.*,
	 member_det.occupied_beds,
	 member_det.occupied_ventilators,
	 member_det.number_of_o2,
	 member_det.occupied_o2,
	 member_det.dead,
	 member_det.dischared,
	 member_det.treatment_done,
	 member_det.suspect,
	 member_det.conformed
	,ldocp.collection_pending,ldocp.positive_cases
	,ldoep.sample_receive_pending
	,ldoep.result_entry_pending
	from infra_info left join member_det on infra_info.infra_id = member_det.infra_id
	left join labtest_detail_of_collection_pending ldocp on ldocp.health_infra_id =infra_info.infra_id
	left join labtest_detail_of_entry_pending ldoep on ldoep.health_infra_id = infra_info.infra_id 
)
select
get_location_hierarchy(location_id) as "Location",
infra_id as hidden_infra_id,
infra_name as "Hospital Name",
coalesce(number_of_beds, 0) as "Total beds",
coalesce(number_of_beds - occupied_beds, 0) as "Available beds",
coalesce(occupied_beds, 0) as "Occupied beds",
coalesce(number_of_ventilators, 0) as "Total Ventilator",
coalesce(number_of_ventilators - occupied_ventilators, 0) as "Available Ventilator",
coalesce(occupied_ventilators, 0) as "Occupied Ventilator",
coalesce(occupied_o2, 0) as "Occupied O2",
coalesce(dischared, 0) as "Discharged",
coalesce(dead, 0) as "DEATH At Hospital",
coalesce(conformed, 0) as "Current confirmed cases",
coalesce(suspect, 0) as "Current suspected cases",
coalesce(collection_pending, 0) as "Sample collection pending",
coalesce(sample_receive_pending, 0) as "Sample receive pending",
coalesce(result_entry_pending, 0) as "Test result entry pending"
from final_det

union all

select 
null,
null,
''<b>Total</b>'',
coalesce(sum(number_of_beds), 0) as "Total beds",
coalesce(sum(number_of_beds) - sum(occupied_beds), 0) as "Available beds",
coalesce(sum(occupied_beds), 0) as "Occupied beds",
coalesce(sum(number_of_ventilators), 0) as "Total Ventilator",
coalesce(sum(number_of_ventilators) - sum(occupied_ventilators), 0) as "Available Ventilator",
coalesce(sum(occupied_ventilators), 0) as "Occupied Ventilator",
coalesce(sum(occupied_o2), 0) as "Occupied O2",
coalesce(sum(dischared), 0) as "Discharged",
coalesce(sum(dead), 0) as "Dead At Hospital",

coalesce(sum(conformed), 0) as "Current confirmed cases",
coalesce(sum(suspect), 0) as "Current suspected cases",
coalesce(sum(collection_pending), 0) as "Sample collection pending",
coalesce(sum(sample_receive_pending), 0) as "Sample receive pending",
coalesce(sum(result_entry_pending), 0) as "Test result entry pending"
from final_det',true,'ACTIVE','3a47dbdc-15fe-4f0f-aafa-6029296c2cf6');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1729,60512,'2020-09-07 17:04:54.364',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_admission_defaulter_date is not null
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','268c7044-2853-46fc-9484-ed47d577480e'),
	 (807,58981,'2019-03-06 17:27:29.269',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 member_det as (
	select 
    m.id,
    r.member_id, f.location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd,
    EXTRACT(YEAR from age(m.dob)) as age,
    r.haemoglobin_tested_count,
    r.last_systolic_bp as last_systolic_bp,
    to_char(p.delivery_date,''DD/MM/YYYY'') as delivery_date,
    r.delivery_outcome,
    r.live_birth,
    r.maternal_detah
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, imt_family f, rch_pregnancy_registration_det p
	where r.member_id = m.id and r.delivery_location_id = l.child_id and r.pregnancy_reg_id = p.id and m.family_id = f.family_id
	and home_del 
	and delivery_outcome in (''LBIRTH'',''SBIRTH'') and (delivery_out_of_state_govt is false and delivery_out_of_state_pvt is false)
    and (delivery_done_by is null  or delivery_done_by != ''NON-TBA'')
	and l.parent_id = #location_id#
	and r.date_of_delivery_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by p.lmp_date
	#limit_offset#
), member_det_extra as(
	select 
	md.id,
	concat(f.address1,'','',f.address2) as address,
	f.area_id,
    f.caste
	from member_det md 
	inner join imt_family f on f.family_id = md.family_id 
)
,caste_filter as (
	select md.id,list.value as caste from member_det_extra md inner join listvalue_field_value_detail list on md.caste = cast(list.id as text)
),gravida_count as (
	select rch_pregnancy_registration_det.member_id,count(*) as gravida
	from rch_pregnancy_registration_det
	where rch_pregnancy_registration_det.member_id in (select id from member_det)
	group by rch_pregnancy_registration_det.member_id
),parity_count as (
	select imt_member.id,count(distinct m2.dob) as parity
	from imt_member
	inner join imt_member m2 on imt_member.id = m2.mother_id
	where imt_member.id in (select id from member_det)
	group by imt_member.id
), loc as (
	select distinct loc_id from member_det
), loc_det as (
select distinct
	loc.loc_id,
    (case when ( prefered_language.is_enlish and (s.english_name is not null)) then s.english_name else s.name end) as stateName,
    (case when ( prefered_language.is_enlish and (d.english_name is not null)) then d.english_name else d.name end) as districtName,
    (case when ( prefered_language.is_enlish and (b.english_name is not null)) then b.english_name else b.name end) as talukaName,
    (case when ( prefered_language.is_enlish and (p.english_name is not null)) then p.english_name else p.name end)  as facilityName,
    (case when ( prefered_language.is_enlish and (sc.english_name is not null)) then sc.english_name else sc.name end) as subCenterName,
    (case when ( prefered_language.is_enlish and (v.english_name is not null)) then v.english_name else v.name end) as villageName,
    (case when ( prefered_language.is_enlish and (a.english_name is not null)) then a.english_name else a.name end) as areaName
	from loc
    inner join prefered_language on true
    inner join location_master lm
    on lm.id = loc.loc_id
    left join location_level_hierarchy_master lh
    on lh.id = lm.location_hierarchy_id
    left join location_master s
    on lh.level1 = s.id and s.state = ''ACTIVE'' and s.name not ilike ''%delete%''
    left join location_master d
    on lh.level3 = d.id and d.state = ''ACTIVE'' and d.name not ilike ''%delete%''
    left join location_master b
    on lh.level4 = b.id and b.state = ''ACTIVE'' and b.name not ilike ''%delete%''
    left join location_master p
    on lh.level5 = p.id and p.state = ''ACTIVE'' and p.name not ilike ''%delete%''
    left join location_master sc
    on lh.level6 = sc.id and sc.state = ''ACTIVE'' and sc.name not ilike ''%delete%''
    left join location_master v
    on lh.level7 = v.id and v.state = ''ACTIVE'' and v.name not ilike ''%delete%''
    left join location_master a
    on lh.level8 = a.id and a.state = ''ACTIVE'' and a.name not ilike ''%delete%''
    where lm.state = ''ACTIVE'' and lm.name not ilike ''%delete%''
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
),
asha_areas as (
select
	distinct area_id
from
	member_det_extra ),
asha_det_temp as(
select
	asha_areas.area_id,
	max(u.id) as user_id
from
	um_user_location ul,
	um_user u,
	asha_areas
where
	asha_areas.area_id = ul.loc_id
	and u.id = ul.user_id
	and u.state = ''ACTIVE''
	and ul.state = ''ACTIVE''
	and u.role_id = (
	select
		id
	from
		um_role_master
	where
		name = ''ASHA'') group by asha_areas.area_id
),	
asha_det as (
select
	u.id,
	asha_det_temp.area_id,
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''(''||
	case
		when u.contact_number is not null then u.contact_number || '')''
		else ''N/A'' || '')''
	end as asha 
from
	um_user u,
	asha_det_temp
where
	u.id = asha_det_temp.user_id
),last_service_details as (
	select to_char(max(service_date),''dd-MM-yyyy'') as last_service_date ,services.member_id from rch_member_services services
	inner join member_det mem on mem.member_id = services.member_id
	group by services.member_id
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.districtName as "District / Corp",
loc_det.talukaName as "Taluka / zone",
loc_det.facilityName as "PHC / UHC",
loc_det.subCenterName as "Sub Centre",
m_extra.address as "Address",
member_det.name as "Name",
caste_filter.caste as "Caste",
member_det.unique_health_id as "TeCHO+ ID",
member_det.age as "Age in Years",
coalesce(gravida_count.gravida,0) as "Gravida",
coalesce(parity_count.parity,0) as "Parity",
member_det.live_birth as "No of Live Children",
member_det.lmp as "LMP",
member_det.edd as "EDD",
member_det.delivery_date as "Date of Home Delivery",
case when member_det.maternal_detah then ''Death'' else ''Live'' end as "Maternal outcome",
case when member_det.delivery_outcome = ''LBIRTH'' then ''Live'' when member_det.delivery_outcome = ''SBIRTH'' then ''Still'' else ''Death'' end  as "Newborn outcome (live/ still/ death)",
services.last_service_date as "Last check up ANC date",
coalesce(haemoglobin_tested_count,0) as "lastHb",
coalesce(last_systolic_bp,0) as "lastBP",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Name",
case when asha_det.asha is null then ''No Asha Assigned'' else asha_det.asha end as "Asha Name"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id
left join gravida_count on member_det.id = gravida_count.member_id
left join parity_count on member_det.id = parity_count.id
left join member_det_extra m_extra on m_extra.id = member_det.id
left join caste_filter on member_det.id = caste_filter.id
left join fhw_det on member_det.loc_id = fhw_det.loc_id
left join asha_det on asha_det.area_id = m_extra.area_id
left join last_service_details services on services.member_id = member_det.id;',true,'ACTIVE','5f4dd666-f905-4cf9-bb54-78d87cee72db'),
	 (1847,74841,'2020-12-11 17:30:15.576',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
child_det  as (
	select m.id, c.delivery_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob,
    cast(''Neural tube defects'' as text) as nameOfDefect
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.delivery_location_id and m.id = c.member_id 
	and l.parent_id = #location_id#
	and c.has_neural_tube_def
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'') and lh.parent_id in (select loc_id from loc)
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), family_head as (
	select a.id as member_id,
	concat(im2.first_name,'' '',im2.middle_name,'' '',im2.last_name) as FamilyHead,
	im2.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join child_det a on a.id = im.id
	inner join imt_family imf on imf.family_id = im.family_id 
	inner join imt_member im2 on imf.hof_id = im2.id
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
get_location_hierarchy(child_det.loc_id) as "Location",
child_det.member_det as "Child Details",
family_head.FamilyHeadMobileNo as "Contact number",
child_det.dob as "Date of Birth",
nameOfDefect as "Name of defect",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join family_head on family_head.member_id = child_det.id;',true,'ACTIVE','3044526c-442d-499d-a158-a6cd142c301d'),
	 (1649,78434,'2020-06-24 14:19:41.853',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id','--Severe(Anemia Status Of Registered ANC Report)
with parameters as (
    select CAST(#location_id# AS INTEGER) as location_id,
    cast(''#demographic_location_id#'' as TEXT) as demographic_group,
    to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end, ''MM-DD-YYYY'') as from_date ,
	to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end, ''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date,
    (select report_preferred_language from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
member_det as (
    select
    r.member_id
    ,r.native_location_id as loc_id
    ,r.unique_health_id
    ,r.family_id
    ,r.member_name as name
    ,p.preferred_language
	from
        rch_pregnancy_analytics_details r
        ,location_hierchy_closer_det l
        ,parameters p
	where
        r.native_location_id  = l.child_id
        and l.parent_id = p.location_id
        and r.reg_service_date between p.from_date and p.to_date
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in (select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
        and r.hb between 0.1 and 6.99
    #limit_offset#
),
fhw_det as (
    select
        loc.loc_id,
        concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
        case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
    from
        um_user_location ul
        ,um_user u
        ,(select distinct loc_id from member_det) loc
        ,location_hierchy_closer_det
    where
        loc.loc_id = location_hierchy_closer_det.child_id
        and location_hierchy_closer_det.parent_id = ul.loc_id
        and u.id = ul.user_id
        and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
        and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select
    ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
    get_location_hierarchy_language_wise(member_det.loc_id, member_det.preferred_language) as "Location",
    member_det.unique_health_id as "Member ID",
    member_det.family_id as "Family ID",
    member_det.name as "Name",
    case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from
    member_det
left join
    fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','8c191ca3-51fa-40e9-b149-a2a43ff5e860'),
	 (727,63746,'2019-02-28 14:04:55.882',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #location_id#',true,'ACTIVE','449f10ca-d36b-4240-b6cc-97f2ac248743'),
	 (191,409,'2019-01-23 19:39:51.933',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','e5dbd828-2b9a-466f-ae01-5841080e063f'),
	 (195,409,'2019-01-23 19:42:06.237',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','e4c48293-1714-44b6-aac0-7b6be3f6ade9'),
	 (973,60512,'2019-04-11 11:56:37.314',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','ee8e8e03-2e2a-4037-8f7b-a299b64a6992'),
	 (1725,60512,'2020-09-07 17:00:29.891',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_discharge_id is not null
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','05c2d888-7ab5-4cce-8a67-574b3825a8c3'),
	 (1715,60512,'2020-09-07 16:49:30.416',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_admission_sd_score in (''SD4'',''SD3'')
    and fsam_admission_muac < 11.5
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','fd8562ec-b29b-4ff5-be32-a4ae0b5b4f9d');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1710,60512,'2020-09-07 16:46:15.372',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','d24f9e12-96dd-41b4-ab0a-e9e5e7ad1678'),
	 (1032,60512,'2019-04-22 17:28:38.663',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id','--No of del(Maternal Health Services Provided During The Year)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date,
to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),member_det as (
	select r.member_id, r.delivery_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.date_of_delivery, ''DD/MM/YYYY'') as dod
	,to_char(r.delivery_reg_date,''DD/MM/YYYY'') as reg_date	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, parameters p
	where r.delivery_location_id  = l.child_id 
	and r.delivery_outcome in (''LBIRTH'',''SBIRTH'') and (delivery_out_of_state_govt is false and delivery_out_of_state_pvt is false)
	and l.parent_id = p.location_id
	and r.delivery_reg_date between p.from_date and p.to_date
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
	order by r.delivery_reg_date
	#limit_offset#
), loc_det as (
	select loc.loc_id,  
string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.reg_date as "Registration date",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.dod as "Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','066d588d-7ab7-4723-95ee-2d32d6a7fedc'),
	 (1694,74841,'2020-07-23 16:29:20.18',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
case when  prefered_language.is_enlish then get_location_hierarchy_language_wise(#location_id#, ''EN'') else 
get_location_hierarchy(#location_id#) 
end as location_id
from  prefered_language',true,'ACTIVE','9e1eb3b3-639f-4cfa-9599-17c0b2ab6543'),
	 (1646,78434,'2020-06-24 14:17:00.52',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' > '' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','c4634f64-4f85-4210-8e0d-93137fa826c3'),
	 (457,1,'2019-02-14 12:59:49.496',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','784e5272-796f-4c06-9659-bb3a0794e3ee'),
	 (133,409,'2019-01-17 19:30:14.842',1,'2021-01-13 20:22:06.427965',NULL,'',true,'ACTIVE','68bfe701-348d-48dc-84d1-cea1fa426eef'),
	 (397,1,'2019-02-13 12:25:58.551',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','615ee44c-d40e-4a84-aa4b-359f0ff451e1'),
	 (1696,74841,'2020-07-24 15:07:58.453',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
case when  prefered_language.is_enlish then get_location_hierarchy_language_wise(#location_id#, ''EN'') else 
get_location_hierarchy(#location_id#) 
end as location_id
from  prefered_language',true,'ACTIVE','b4826635-7fb7-463a-97e1-a35cab9ce9b6'),
	 (461,1,'2019-02-14 13:19:30.751',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','75cfd094-9396-46bd-ab6d-5686865f3e4f'),
	 (1602,74841,'2020-04-20 19:01:37.794',1,'2021-01-13 20:22:06.427965','infra_id,limit_offset,from_date,location_id','with location_det as (
	select child_id as loc_id
	from location_hierchy_closer_det lhc
	where 
	parent_id = #location_id# 
), paratemeter_det as (
	select
	(case when ''#from_date#'' = ''null'' then current_date else to_date(''#from_date#'',''MM/DD/YYYY'') end) as from_date
	,(case when ''#from_date#'' = ''null'' then current_date + interval ''1 day'' - interval ''1 milliseconds'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) + interval ''1 day'' - interval ''1 milliseconds'' as upto_date
)
,lab_test_det as (
	select
	distinct on
	(cad.id)
	cad.id as covid_admission_detail_id
	from covid19_admission_detail cad 
    inner join covid19_lab_test_detail cltd on cad.id = cltd.covid_admission_detail_id 
	left join health_infrastructure_details hid on hid.id = cad.suggested_health_infra
	left join location_hierchy_closer_det loch on loch.child_id = hid.location_id
	inner join paratemeter_det on cltd.lab_collection_on <= paratemeter_det.upto_date and cltd.lab_result_entry_on <= paratemeter_det.upto_date
	where		
	(case when ''#infra_id#'' = ''null'' then (loch.parent_id in (select distinct loc_id from location_det)) else cad.suggested_health_infra = cast(#infra_id# as integer) end) and  
	cad.admission_date <= paratemeter_det.upto_date	
	and cad.health_infra_id is null and cltd.lab_result = ''POSITIVE''
    and cad.suggested_health_infra is not null
	order by cad.id
)
	select
	row_number() over (ORDER BY cad.id) as "Sr. No",
	concat_ws('' '', cad.first_name, cad.last_name, cad.middle_name) as "Name",
	cad.age as "Age",
	cad.gender as "Gender",
	cad.address as "Address",
	cad.occupation as "Occupation",
	cad.contact_number as "Contact Number",
	d.english_name as "District",
	s.english_name as "State",
	cast(''N/A'' as text) as "Date of arrival in India",
	cad.travelled_place as "Travel to COVID affected country (Name of country)",
	cad.flight_no as "Flight No",
	cast(''N/A'' as text) as "Seat No",
	case
		when cad.in_contact_with_covid19_paitent is not null then cad.in_contact_with_covid19_paitent
		else ''No''
	end as "H/O contact with COVID-19 case",
	cad.date_of_onset_symptom as "Date of onset of symptoms",
	concat_ws('', '' ,(case when cad.is_fever then ''Fever'' else null end) 
	,(case when cad.is_cough then ''Cough'' else null end)
	,(case when cad.is_breathlessness then ''Breathlessness'' else null end)
	,(case when cad.is_sari then ''SARI'' else null end)
	) as "Symptoms at admission",
	to_char(cad.admission_date,''DD/MM/YYYY'') as "Date of isolation"
from
	covid19_admission_detail cad
inner join lab_test_det ltd on
	cad.id = ltd.covid_admission_detail_id
left join covid19_admitted_case_daily_status cacds on
	cad.last_check_up_detail_id = cacds.id
left join location_master lm on
	lm.id = cad.location_id
left join location_level_hierarchy_master lh on
	lh.id = lm.location_hierarchy_id
left join health_infrastructure_details hid on
	hid.id = cad.suggested_health_infra
left join location_master s on
	lh.level1 = s.id
	and s.state = ''ACTIVE''
	and s.name not ilike ''%delete%''
left join location_master d on
	lh.level3 = d.id
	and d.state = ''ACTIVE''
	and d.name not ilike ''%delete%''
order by
	cad.id
 #limit_offset#',true,'ACTIVE','e0af9542-450c-4ce1-8d35-ae5c93c89593');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (147,58981,'2019-01-21 19:10:27.31',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Not Fully Immunised Child Report(Immunization Services Provided to Children with Date of Birth)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
child_det as (
	select m.id, m.unique_health_id, m.family_id, m.dob, c.tracking_location_id as loc_id,
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
	where l.child_id = c.tracking_location_id and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.member_id is not null
	and c.is_valid_for_tracking_report = true
	and (c.member_state != ''DEAD'' or c.dob + interval ''1 year''  < c.death_date)
        --and c.death_date is not null
	and c.fully_immunization_in_number_of_month is null
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.unique_health_id as "Child ID",
child_det.family_id as "Family ID",
child_det.name as "Name",
to_char(child_det.dob,''DD/MM/YYYY'') as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','a881a323-dd7c-4340-900d-91b0006c599b'),
	 (1149,63746,'2019-05-28 16:35:10.591',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id','--Inst Del (Gvt + Pvt)(Service provide to pregnant women with lmp)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_month_year,
to_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') as to_month_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
member_det as (
	select r.member_id, r.native_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p
	where r.native_location_id  = l.child_id
	and l.parent_id = p.location_id
	and (((institutional_del or delivery_108)and delivery_outcome in (''LBIRTH'',''SBIRTH'')))
	and r.lmp_month_year between p.from_month_year and p.to_month_year
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in ( select distinct demographic_type from location_demographic_type_master 
	where demographic_group = p.demographic_group)) 
	order by r.lmp_date
	#limit_offset#
),  loc_det as (
	select loc.loc_id, 
        string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','87f2f2b0-9e19-4eff-b8ba-980b351709aa'),
	 (1695,74841,'2020-07-24 15:06:04.982',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
case when  prefered_language.is_enlish then get_location_hierarchy_language_wise(#location_id#, ''EN'') else 
get_location_hierarchy(#location_id#) 
end as location_id
from  prefered_language',true,'ACTIVE','7b402b0b-554e-4a08-948a-9fd00146b365'),
	 (1709,60512,'2020-09-07 16:44:48.744',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','cc894fb3-7096-4710-98dd-e78685388d0b'),
	 (193,409,'2019-01-23 19:41:29.873',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','f4baaab8-d576-406d-8f98-4a5ab5d0476e'),
	 (1697,74841,'2020-07-24 15:09:00.799',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
case when  prefered_language.is_enlish then get_location_hierarchy_language_wise(#location_id#, ''EN'') else 
get_location_hierarchy(#location_id#) 
end as location_id
from  prefered_language',true,'ACTIVE','05ee4f3d-50b6-4c4b-a381-3b7d83f5dccd'),
	 (1229,409,'2019-07-24 10:16:53.374',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','763b4252-7dcd-4ff4-944c-f9862f3d3dda'),
	 (1034,60512,'2019-04-22 17:29:47.532',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id','--MTP(ANC Services Provided During The Year)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date
,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
CAST(''409'' AS INTEGER) as loggedInUserId,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),member_det as (
	select r.member_id, r.delivery_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.date_of_delivery, ''DD/MM/YYYY'') as dod
	,to_char(r.delivery_reg_date,''DD/MM/YYYY'') as reg_date	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, parameters p
	where r.delivery_location_id  = l.child_id
	and r.delivery_outcome in (''MTP'') and (delivery_out_of_state_govt is false and delivery_out_of_state_pvt is false)
	and l.parent_id =p.location_id
	and r.delivery_reg_date between p.from_date and p.to_date
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in ( select distinct demographic_type from location_demographic_type_master 
	where demographic_group = p.demographic_group)) 
	order by r.delivery_reg_date
	#limit_offset#
),  loc_det as (
	select loc.loc_id,  
string_agg((case when (p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws(u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc, location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.reg_date as "Registration date",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.dod as "MTP Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','f57d0549-bfb6-4ec0-b45c-64be35d94077'),
	 (119,58981,'2019-01-09 14:47:14.655',1,'2021-01-13 20:22:06.427965','from_month_year,to_month_year,loggedInUserId,location_id','/*-----State Level Monthly Compilation Sheet for Screening of Birth Defects -----------*/

with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 ldp as(
	select child_id, case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
else location_master.name end 
	from location_hierchy_closer_det, location_master,  prefered_language 
	where parent_id = #location_id# and depth = 1 
	and location_master.id = location_hierchy_closer_det.child_id
), r as(
	select lhcd.parent_id as id, 
	coalesce(sum(stat.total_delivery),0) as total_delivery, 
	coalesce(sum(stat.mother_age_less_than_18),0) as mother_age_less_than_18, 
	coalesce(sum(stat.mother_age_between_18_30),0) as mother_age_between_18_30, 
	coalesce(sum(stat.mother_age_above_30),0) as mother_age_above_30, 
	coalesce(sum(stat.early_anc_reg_delivery),0) as early_anc_reg_delivery, 
	coalesce(sum(stat.gravida_1st_birth),0) as gravida_1st_birth, 
	coalesce(sum(stat.gravida_2nd_birth),0) as gravida_2nd_birth,
	coalesce(sum(stat.gravida_3rd_birth),0) as gravida_3rd_birth,
	coalesce(sum(stat.gravida_3_plus_birth),0) as gravida_3_plus_birth,
	coalesce(sum(stat.pre_term_delivery),0) as pre_term_delivery,
	coalesce(sum(stat.full_term_delivery),0) as full_term_delivery,
	coalesce(sum(stat.post_term_delivery),0) as post_term_delivery,
	coalesce(sum(stat.outcome_live_birth),0) as outcome_live_birth,
/*	coalesce(sum(stat.live_birth_screened),0) as live_birth_screened,*/
	coalesce(sum(stat.outcome_still_birth),0) as outcome_still_birth,
/*	coalesce(sum(stat.still_birth_screened),0) as still_birth_screened,*/
	coalesce(sum(stat.neural_tube_defect),0) as neural_tube_defect,
	coalesce(sum(stat.downs_syndrome_defect),0) as downs_syndrome_defect,
	coalesce(sum(stat.cleft_lip_palete_defect),0) as cleft_lip_palete_defect,
	coalesce(sum(stat.talipes),0) as talipes,
	coalesce(sum(stat.mental_dysplasia),0) as mental_dysplasia,
	coalesce(sum(stat.congenital_cataract),0) as congenital_cataract,
	coalesce(sum(stat.congenital_deafness),0) as congenital_deafness,
	coalesce(sum(stat.congenital_heart_disease),0) as congenital_heart_disease,
	coalesce(sum(stat.retinopathy_of_prematurity),0) as retinopathy_of_prematurity,
	coalesce(sum(stat.other_defects),0) as other_defects,
	coalesce(sum(stat.no_defects_observed),0) as no_defects_observed,
	coalesce(sum(stat.new_borns_referred),0) as new_borns_referred,
	coalesce(sum(stat.no_of_clubfoot),0) as no_of_clubfoot
	from ldp
	inner join location_hierchy_closer_det lhcd on lhcd.parent_id = ldp.child_id
	left join child_delivery_location_wise_monthly_analytics stat on lhcd.child_id = stat.location_id
	where stat.month_year between (case when #from_month_year# is null then ''01/01/1970'' else to_date(''#from_month_year#'',''MM/DD/YYYY'') end) 
	and (case when #to_month_year# is null then current_date else to_date(''#to_month_year#'',''MM/DD/YYYY'') end)
	group by lhcd.parent_id
), s as(
	select ldp.name,
ldp.child_id,
	coalesce(r.total_delivery,0) as total_delivery, 
	coalesce(r.mother_age_less_than_18,0) as mother_age_less_than_18, 
	coalesce(r.mother_age_between_18_30,0) as mother_age_between_18_30, 
	coalesce(r.mother_age_above_30,0) as mother_age_above_30, 
	coalesce(r.early_anc_reg_delivery,0) as early_anc_reg_delivery, 
	coalesce(r.gravida_1st_birth,0) as gravida_1st_birth, 
	coalesce(r.gravida_2nd_birth,0) as gravida_2nd_birth,
	coalesce(r.gravida_3rd_birth,0) as gravida_3rd_birth,
	coalesce(r.gravida_3_plus_birth,0) as gravida_3_plus_birth,
	coalesce(r.pre_term_delivery,0) as pre_term_delivery,
	coalesce(r.full_term_delivery,0) as full_term_delivery,
	coalesce(r.post_term_delivery,0) as post_term_delivery,
	coalesce(r.outcome_live_birth,0) as outcome_live_birth,
/*	coalesce(r.live_birth_screened,0) as live_birth_screened,*/
	coalesce(r.outcome_still_birth,0) as outcome_still_birth,
/*	coalesce(r.still_birth_screened,0) as still_birth_screened,*/
	coalesce(r.neural_tube_defect,0) as neural_tube_defect,
	coalesce(r.downs_syndrome_defect,0) as downs_syndrome_defect,
	coalesce(r.cleft_lip_palete_defect,0) as cleft_lip_palete_defect,
	coalesce(r.talipes,0) as talipes,
	coalesce(r.mental_dysplasia,0) as mental_dysplasia,
	coalesce(r.congenital_cataract,0) as congenital_cataract,
	coalesce(r.congenital_deafness,0) as congenital_deafness,
	coalesce(r.congenital_heart_disease,0) as congenital_heart_disease,
	coalesce(r.retinopathy_of_prematurity,0) as retinopathy_of_prematurity,
	coalesce(r.other_defects,0) as other_defects,
	coalesce(r.no_defects_observed,0) as no_defects_observed,
	coalesce(r.new_borns_referred,0) as new_borns_referred,
	coalesce(r.no_of_clubfoot,0) as no_of_clubfoot
	from ldp left join r on ldp.child_id = r.id 
	order by ldp.name
)
select  row_number() over() as "Sr. no", 
name as  "Location", 
child_id as hidden_location_id,
total_delivery as "Total Deliveries",
mother_age_less_than_18 as "Less than 18 years", 
mother_age_between_18_30 as "Between 18-30 years", 
mother_age_above_30 as "Above 30 years",
early_anc_reg_delivery as "No. of delivery with early ANC registered",
gravida_1st_birth as "1st Birth",
gravida_2nd_birth as "2nd Birth",
gravida_3rd_birth as "3rd Birth",
gravida_3_plus_birth as "3+ Birth",
pre_term_delivery as "Pre-term",
full_term_delivery as "Full term",
post_term_delivery as "Post term",
outcome_live_birth as "Outcome Live birth",
/*--live_birth_screened as "No. of live birth screened for birth defects",*/
outcome_still_birth as "Outcome Still birth",
/*--still_birth_screened as "No. of still birth screened for birth defects",*/
neural_tube_defect as "Neural tube defects",
downs_syndrome_defect as "Down''s syndrome",
cleft_lip_palete_defect as "Cleft lip and palete",
talipes as "Talipes",
mental_dysplasia as "Develop mental dysplasia of hip",
congenital_cataract as "Congenital cataract",
congenital_deafness as "Congenital deafness",
congenital_heart_disease as "Congenital heart disease",
retinopathy_of_prematurity as "Retinopathy of prematurity",
no_of_clubfoot as "No. of clubfoot observerd",
other_defects as "Any other defects",
no_defects_observed as "No defects observed",
new_borns_referred as "No. of new borns referred"
from s
union all
select 
null, 
''<b>Total</b>'', 
#location_id#,
sum(total_delivery), 
sum(mother_age_less_than_18), 
sum(mother_age_between_18_30), 
sum(mother_age_above_30), 
sum(early_anc_reg_delivery), 
sum(gravida_1st_birth), 
sum(gravida_2nd_birth),
sum(gravida_3rd_birth),
sum(gravida_3_plus_birth),
sum(pre_term_delivery),
sum(full_term_delivery),
sum(post_term_delivery),
sum(outcome_live_birth),
/*--sum(live_birth_screened),*/
sum(outcome_still_birth),
/*--sum(still_birth_screened),*/
sum(neural_tube_defect),
sum(downs_syndrome_defect),
sum(cleft_lip_palete_defect),
sum(talipes),
sum(mental_dysplasia),
sum(congenital_cataract),
sum(congenital_deafness),
sum(congenital_heart_disease),
sum(retinopathy_of_prematurity),
sum(no_of_clubfoot),
sum(other_defects),
sum(no_defects_observed),
sum(new_borns_referred)
from s;',true,'ACTIVE','5b161c2e-829b-4580-b743-c38a45d853c5'),
	 (1227,60512,'2019-07-17 17:59:50.023',1,'2021-01-13 20:22:06.427965','limit_offset,location_id','with childIds as(
	select csd.id,csd.child_id,csd.screening_center from child_cmtc_nrc_screening_detail csd
	inner join imt_member m on csd.child_id = m.id
	where csd.state = ''ACTIVE'' and csd.admission_id is null and
	csd.location_id in
	(select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name,'' ('',imt_member.unique_health_id,'')'') as "Child Name (Unique Health ID)",
get_location_hierarchy(imt_family.location_id) as "Location",
case when health_infrastructure_details.name is null then ''Not Available'' else health_infrastructure_details.name end as "Screening Center"
from childIds
inner join imt_member on childIds.child_id = imt_member.id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join health_infrastructure_details on childIds.screening_center = health_infrastructure_details.id',true,'ACTIVE','e11999da-5091-4302-a252-68c75263e14a');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (199,409,'2019-01-23 19:46:32.422',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','1b931455-314d-4535-a985-5f49054786bb'),
	 (1036,60512,'2019-04-22 17:31:02.895',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id','--Abortion(ANC Services Provided During The Year)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date
,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),member_det as (
	select r.member_id, r.delivery_location_id as loc_id,
	r.unique_health_id, r.family_id, 
	r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.date_of_delivery, ''DD/MM/YYYY'') as dod
	,to_char(r.delivery_reg_date,''DD/MM/YYYY'') as reg_date	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, parameters p
	where r.delivery_location_id  = l.child_id 
	and r.delivery_outcome in (''ABORTION'', ''SPONT_ABORTION'') and (delivery_out_of_state_govt is false and delivery_out_of_state_pvt is false) 
	and l.parent_id = p.location_id
	and r.delivery_reg_date between p.from_date and p.to_date
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in ( select distinct demographic_type from location_demographic_type_master 
	where demographic_group = p.demographic_group)) 
	order by r.delivery_reg_date
	#limit_offset#
),  loc_det as (
	select loc.loc_id, 
string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det)loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det)loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.reg_date as "Registration date",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.dod as "Abortion Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','7b53ea77-fb2b-4058-bd31-67f41d3b1aa0'),
	 (1221,66522,'2019-07-17 16:51:49.227',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','2755cb7d-a253-4aca-a27a-01e7e84d7f0e'),
	 (468,1,'2019-02-14 13:21:57.608',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','752d54d0-143b-4312-968f-a5b618b38ec3'),
	 (429,1,'2019-02-14 00:30:26.042',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','e0f58ad1-085e-4475-b61f-6215f01e7d2c'),
	 (210,57698,'2019-01-29 11:38:33.756',1,'2021-01-13 20:22:06.427965','hidden_location_id','select string_agg(l2.name,''>'' order by lhcd.depth desc) as hidden_location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #hidden_location_id#',true,'ACTIVE','b1961f9a-0984-461e-b398-45d8e6670459'),
	 (437,1,'2019-02-14 00:36:36.539',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','26fd73f5-a2d6-4cca-9a8f-5560f90580c2'),
	 (139,58981,'2019-01-21 14:13:20.357',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','f3bbe591-5a40-40aa-948f-9e1a316e252f'),
	 (1557,74840,'2020-04-02 11:59:10.879',1,'2021-01-13 20:22:06.427965','limit_offset,mt_member_id','with member_selection as (
	select * from mytecho_covid_symptom_checker_dump 
	where mt_member_id = #mt_member_id#
	order by created_on  desc
),
final_det as (
 select
 mt_member_id,
name as name,
mobile_number as mobile_number,
created_on as created_on,
cast(cast(data as json) -> ''haveAnyTravelHistory'' as text) as had_any_travel_history,
cast(cast(data as json) -> ''country'' as text) as country,
cast(cast(data as json) -> ''fever'' as text) as is_fever,
cast(cast(data as json) -> ''shortOfBreath'' as text) as is_short_of_breath,
cast(cast(data as json) -> ''cough'' as text) as is_cough,
cast(cast(data as json) -> ''typeOfTravel'' as text) as type_of_travel,
--cast(cast(data as json) -> ''id'' as text) as "Id",
cast(cast(data as json) -> ''contactTracing'' as text) as contact_tracing,
cast(cast(data as json) -> ''otherDiseases'' as text) as other_disease
--cast(cast(data as json) -> ''isContinue'' as text) as "Is Continue"
from 
member_selection
#limit_offset#
)
select
row_number() over () + cast(substring(''#limit_offset#'', position(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
mt_member_id as hidden_location_id,
--mt_member_id as "Member Id",
name as "Member Name",
case when mobile_number is null or mobile_number = ''null'' then ''N/A'' else mobile_number end as "Mobile No.",
created_on as "Tracking Date",
case when had_any_travel_history is null or had_any_travel_history = ''null'' then ''N/A'' else had_any_travel_history end as "Had any travel History",
case when country is null or country = ''null'' then ''N/A'' else country end as "Country",
case when is_fever is null or is_fever = ''null'' then ''N/A'' else is_fever  end as "Is Fever",
case when is_short_of_breath is null or is_short_of_breath = ''null'' then ''N/A'' else is_short_of_breath end as "Is Short Of Breath",
case when is_cough is null or is_cough  = ''null'' then ''N/A'' else is_cough  end as "Is Cough",
case when type_of_travel is null or type_of_travel = ''null'' then ''N/A'' else type_of_travel end as "Type Of Travel",
case when contact_tracing is null or contact_tracing = ''null'' then ''N/A'' else contact_tracing  end as "Contact Tracing",
case when other_disease  is null or other_disease  = '''' or other_disease = ''null'' then ''N/A'' else other_disease  end as "Other Disease"
--data
from final_det',true,'ACTIVE','f40d786c-567f-4826-8db0-0c60aef6ce9b'),
	 (118,58981,'2019-01-09 14:45:13.075',1,'2021-01-13 20:22:06.427965','from_month_year,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 ldp as(
	select child_id, case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
else location_master.name end 
	from location_hierchy_closer_det, location_master, prefered_language  
	where parent_id = #location_id# and depth = 1 
	and location_master.id = location_hierchy_closer_det.child_id
), r as(
	select lhcd.parent_id as id, 
	coalesce(sum(stat.total_live_births),0) as total_live_births, 
	coalesce(sum(stat.opv_booster),0) as opv_booster, 
	coalesce(sum(stat.dpt_booster),0) as dpt_booster, 
	coalesce(sum(stat.measles_or_rubella_2),0) as measles_or_rubella_2, 
	coalesce(sum(stat.complete_immunization_before_24_month),0) as complete_immunization_before_24_month, 
	coalesce(sum(stat.complete_immunization_after_24_month),0) as complete_immunization_after_24_month, 
	coalesce(sum(stat.not_complete_immunized),0) as not_complete_immunized, 
	coalesce(sum(stat.infant_death),0) as infant_death
	from ldp
	inner join location_hierchy_closer_det lhcd on lhcd.parent_id = ldp.child_id
	left join child_monthly_location_wise_analytics stat on lhcd.child_id = stat.location_id
	where stat.month_year between (case when #from_month_year# is null then ''01/01/1970'' else to_date(''#from_month_year#'',''MM/DD/YYYY'') end) 
	and (case when #to_month_year# is null then current_date else to_date(''#to_month_year#'',''MM/DD/YYYY'') end)
	group by lhcd.parent_id
), s as(
	select ldp.name,
      ldp.child_id,
	coalesce(r.total_live_births,0) as total_live_births, 
	coalesce(r.opv_booster,0) as opv_booster, 
	coalesce(r.dpt_booster,0) as dpt_booster, 
	coalesce(r.measles_or_rubella_2,0) as measles_or_rubella_2, 
	coalesce(r.complete_immunization_before_24_month,0) as complete_immunization_before_24_month, 
	coalesce(r.complete_immunization_after_24_month,0) as complete_immunization_after_24_month, 
	coalesce(r.not_complete_immunized,0) as not_complete_immunized, 
	coalesce(r.infant_death,0) as infant_death
	from ldp left join r on ldp.child_id = r.id 
	order by ldp.name
)
select  row_number() over() as "Sr. no", 
child_id as hidden_location_id,
name as  "Location", 
total_live_births as "No. of children",
opv_booster as "OPV-booster", 
case when total_live_births = 0 then 0 else round(opv_booster*100.0/total_live_births,2) end as "percent_col_OPV-booster",
dpt_booster as "DPT-Booster", 
case when total_live_births = 0 then 0 else round(dpt_booster*100.0/total_live_births,2) end as "percent_col_DPT-Booster",
measles_or_rubella_2 as "Measles Or Rubella-2",
case when total_live_births = 0 then 0 else round(measles_or_rubella_2*100.0/total_live_births ,2) end as "percent_col_Measles-2", 
complete_immunization_before_24_month as "Complete Immunization Before 24 Month",
case when total_live_births = 0 then 0 else round(complete_immunization_before_24_month*100.0/total_live_births ,2) end as "percent_col_Complete Immunization", 
complete_immunization_after_24_month as "Complete Immunization After 24 Month",
case when total_live_births = 0 then 0 else round(complete_immunization_after_24_month*100.0/total_live_births ,2) end as "percent_col_Immunization After 24 Month",
not_complete_immunized as "Not completed immunized",
case when total_live_births = 0 then 0 else round(not_complete_immunized*100.0/total_live_births ,2) end as "percent_col_Child with not completed immunization",
infant_death as "Infant Death",
case when total_live_births = 0 then 0 else round(infant_death*100.0/total_live_births ,2) end as "percent_col_Infant Death" 
from s
union all
select 
null, 
#location_id#,
''<b>Total</b>'', 
sum(total_live_births), 
sum(opv_booster),
case when sum(total_live_births) = 0 then 0 else round(sum(opv_booster)*100.0/sum(total_live_births),2) end,
sum(dpt_booster),
case when sum(total_live_births) = 0 then 0 else round(sum(dpt_booster)*100.0/sum(total_live_births),2) end,
sum(measles_or_rubella_2),
case when sum(total_live_births) = 0 then 0 else round(sum(measles_or_rubella_2)*100.0/sum(total_live_births),2) end,
sum(complete_immunization_before_24_month),
case when sum(total_live_births) = 0 then 0 else round(sum(complete_immunization_before_24_month)*100.0/sum(total_live_births),2) end,
sum(complete_immunization_after_24_month),
case when sum(total_live_births) = 0 then 0 else round(sum(complete_immunization_after_24_month)*100.0/sum(total_live_births),2) end,
sum(not_complete_immunized),
case when sum(total_live_births) = 0 then 0 else round(sum(not_complete_immunized)*100.0/sum(total_live_births),2) end,
sum(infant_death),
case when sum(total_live_births) = 0 then 0 else round(sum(infant_death)*100.0/sum(total_live_births),2) end
from s;',true,'ACTIVE','55ca53f3-8e8b-4669-84e6-8cedd42bc6d4');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1700,74841,'2020-08-10 13:47:56.513',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date), ''MM/YYYY'') as from_month_year',true,'ACTIVE','55377703-8689-494f-95de-0a987debd373'),
	 (1225,66522,'2019-07-17 16:52:30.691',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','b9fc1b8d-db4e-4a28-9ada-fc9884a82c67'),
	 (476,57698,'2019-02-14 14:18:44.588',1,'2021-01-13 20:22:06.427965','role_id','select name as "role_id" from um_role_master where id=#role_id#',true,'ACTIVE','fcb659ce-1cbf-4abe-9d81-ef841f41bcf4'),
	 (477,57698,'2019-02-14 14:18:44.593',1,'2021-01-13 20:22:06.427965','course_id','select course_name as course_id from tr_course_master  where course_id=#course_id#',true,'ACTIVE','94ca9757-a924-4bf4-94df-3515bcb2b3e5'),
	 (460,1,'2019-02-14 13:19:30.746',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','c889a269-55dc-4daf-9f27-c5b6d960d175'),
	 (1206,66522,'2019-07-16 20:25:53.249',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,call_type,location_id','with unsuccess_calls as(
	select 
	*
	from gvk_manage_call_master master
	where call_response in (''com.argusoft.imtecho.gvk.call.cant-talk'')
	and location_id in (select child_id from location_hierchy_closer_det where parent_id = (case when #location_id# = -2 then 2 else #location_id# end) 
and depth <= (case when #location_id# = -2 then 0 else 8 end))
and 
case 
when ''all'' = ''#call_type#'' then true 
when ''#call_type#'' = ''FHW_CH_SER_VERI'' then call_type in (''FHW_CH_SER_VERI'',''FHW_DEL_VERI'',''FHW_TT_VERI'',''FHW_CH_SER_PREG_VERI'')
else call_type = ''#call_type#'' end
and created_on between case when ''#from_date#'' = ''null'' then now() else to_date(''#from_date#'',''MM-DD-YYYY'') end and to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds'' 
order by id #limit_offset#

),
unsuccess_calls_details as (
	select 
	concat(im.first_name,'' '',im.last_name, ''('',im.unique_health_id ,'')'') as name,
	master.mobile_number,
master.created_on,
master.call_type,
	master.location_id,
	master.id,
	master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join imt_member im on im.id = master.member_id
	where call_response != ''com.argusoft.imtecho.gvk.call.success''
	
	union  all
	select 
	concat(uu.first_name,'' '',uu.last_name, ''('',role.name ,'')'') as name,
	master.mobile_number,
	master.created_on,
	master.call_type,
	master.location_id,
	master.id,
	master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join um_user uu on uu.id = master.user_id
	inner join um_role_master role on uu.role_id = role.id 
	where call_response != ''com.argusoft.imtecho.gvk.call.success''
	
        union  all

	select 
	case when im.id is null then imf.family_id else concat(im.first_name,'' '',im.last_name, '' ('',imf.family_id ,'')'') end as name,
	master.mobile_number,
master.created_on,
master.call_type,
	master.location_id,
	master.id,
	master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join imt_family imf on imf.family_id = master.family_id
	left join imt_member im on im.family_id = imf.family_id and im.family_head = true
	where call_response != ''com.argusoft.imtecho.gvk.call.success''
	
),
response as (
select 
master.name,
get_location_hierarchy(master.location_id) as Location_hierarchy,
case when call_response = ''com.argusoft.imtecho.gvk.call.no-number-available'' then ''No number available''
when call_response = ''com.argusoft.imtecho.gvk.call.cant-talk'' then ''Can''''t talk''
when call_response = ''com.argusoft.imtecho.gvk.call.wrong-mobile-number'' then ''Wrong mobile number''
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-asha-husband'' then ''Number belongs to asha''	-- todo
--when call_response = ''com.argusoft.imtecho.gvk.call.not-interested-in-treatment'' then ''Not intersted in treatment''
when call_response = ''com.argusoft.imtecho.gvk.call.unresponsive'' then ''Unreponsive''
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-husband'' then ''Number belongs to anm'' 
when call_response = ''com.argusoft.imtecho.gvk.call.not-reachable'' then ''Not reachable''
when call_response = ''com.argusoft.imtecho.gvk.call.phone-switched-off'' then ''Phone switched off''
when call_response = ''com.argusoft.imtecho.gvk.call.number-collection-pending'' then ''Number collection pending''			-- todo
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary-husband'' then ''number of beneficiary''
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary''
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-family-member''
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-neighbour''
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-or-anm-husband'' then ''ANM or husband''			-- todo
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-ashah-or-asha-husband'' then ''Asha or husband''			-- todo
else ''Other'' end reason,
master.mobile_number\:\:json,
master.location_id,
master.created_on,
master.call_type,
master.created_by,
master.id
from unsuccess_calls_details master
 ),
mo as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code in (''mo_phc'',''mo_uphc''))
),
mo_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	mo group by location_id
),
mo_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from mo_unique mo
	inner join um_user um on um.id = mo.mo_id
),
asha as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code = ''ASHA'')
    where uu.state = ''ACTIVE''
),
asha_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	asha group by location_id
),
asha_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from asha_unique mo
	inner join um_user um on um.id = mo.mo_id
),
anm as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code = ''FHW'')
    where uu.state = ''ACTIVE''
),
anm_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	anm group by location_id
),
anm_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from anm_unique mo
	inner join um_user um on um.id = mo.mo_id
),

contacts as (
	select json_array_elements(mobile_number)->>''mobileNumber'' as contact ,json_array_elements(mobile_number)->>''isCalled'' as isCalled ,id
	from response where mobile_number is not null ),
contacts_display_date as (	
	select string_agg(
	case when isCalled=''true'' then concat(''<b>'',contact,''</b>'') else contact end
	,'','') as contact,id from contacts
	group by id)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
resp.name as "Beneficiary Name (ID)",
Location_hierarchy as "Location",
contacts.contact as "Dialed Number",
to_char(resp.created_on,''DD-MM-YYYY HH:MI PM'') as  "Call Date",

case when resp.call_type = ''FHW_HIGH_RISK_CONF'' then ''FHW highrisk conformation''
when resp.call_type = ''IMMUN_VERI'' then ''Immunization verification''
when resp.call_type = ''FAM_VERI'' then ''Family verification''
when resp.call_type = ''PREG_REGI_VERI'' then ''Pregnancy registration verification''
when resp.call_type = ''HIGH_RISK_VERI'' then ''Highrisk followup verification''
when resp.call_type = ''MIG_IN_VERI'' then ''Member IN migration verification''
when resp.call_type = ''MIG_OUT_VERI'' then ''Member OUT migration verification''
when resp.call_type = ''DUP_MEM_VERI'' then ''Duplicate member verification'' end as "Call Type",
resp.reason as "Reason for Unsuccessful Calling",
mo.name as "MO Details",
anm.name as "ANM Details",
asha.name as "ASHA Details"
,concat(um.first_name, '' '', um.last_name) as "RO Details"
--fhw.name
from response resp
left join contacts_display_date contacts on resp.id = contacts.id
left join mo_details mo on mo.location_id = resp.location_id
left join anm_details anm on anm.location_id = resp.location_id
left join asha_details asha on asha.location_id = resp.location_id
left join um_user um on resp.created_by = um.id',true,'ACTIVE','914bac20-7291-4fc2-a28f-26e5ab55e5f2'),
	 (1699,74841,'2020-08-10 13:47:56.489',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''> '' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','2439b6c0-7401-4f0f-aa5e-7aa0bf718214'),
	 (151,58981,'2019-01-22 14:36:37.615',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','767542fb-20b3-4d68-8b1f-a16bcfe7f12b'),
	 (1701,74841,'2020-08-10 13:47:56.515',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','89809b43-d684-4da0-83cf-a0607516c642'),
	 (1702,60512,'2020-09-02 19:32:33.414',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id','with prefered_language as(
	select case when prefered_language = ''EN'' then true else false end as is_english
	from um_user
	where id = #loggedInUserId#
),location_detail as (
	select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1
),dates as (
	select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date
),counts as (
	select location_detail.child_id,
	sum(less_than_6_month_boys) as less_than_6_month_boys,
	sum(less_than_6_month_girls) as less_than_6_month_girls,
	sum(more_than_6_month_boys) as more_than_6_month_boys,
	sum(more_than_6_month_girls) as more_than_6_month_girls,
	sum(less_than_3_sd) as less_than_3_sd,
	sum(muac_less_than_11_5) as muac_less_than_11_5,
	sum(sd_and_muac) as sd_and_muac
	from location_detail
	inner join location_hierchy_closer_det on location_detail.child_id = location_hierchy_closer_det.parent_id
	inner join child_cmtc_nrc_admited_analytics_location_wise_details on location_hierchy_closer_det.child_id = child_cmtc_nrc_admited_analytics_location_wise_details.location_id
	inner join dates on child_cmtc_nrc_admited_analytics_location_wise_details.month_year between dates.from_date and dates.to_date
	group by location_detail.child_id
),details as (
	select row_number() over() as sr_no,
	location_master.id as hidden_location_id,
	case when prefered_language.is_english and location_master.english_name is not null then location_master.english_name else location_master.name end as loc,
	coalesce(counts.less_than_6_month_boys + counts.less_than_6_month_girls + counts.more_than_6_month_boys + counts.more_than_6_month_girls,0) as total_admission,
	coalesce(counts.less_than_3_sd,0) as less_than_3_sd,
	coalesce(counts.muac_less_than_11_5,0) as muac_less_than_11_5,
	coalesce(counts.sd_and_muac,0) as sd_and_muac
	from location_detail
	inner join location_master on location_master.id = location_detail.child_id
	left join counts on location_detail.child_id = counts.child_id
    cross join prefered_language
)
select details.loc as "Location",
details.hidden_location_id,
details.total_admission as "Total Admission",
details.less_than_3_sd as "Admission by WFH (Z-score)",
details.muac_less_than_11_5 as "Admission by MUAC",
details.sd_and_muac as "Admission by both criteria"
from details
union all
select ''<b>Total<b>'',
#location_id#,
sum(details.total_admission),
sum(details.less_than_3_sd),
sum(details.muac_less_than_11_5),
sum(details.sd_and_muac)
from details;',true,'ACTIVE','d5045ead-4c5f-42fa-9c6d-5d44dc5086e1');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1706,60512,'2020-09-07 16:40:56.393',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','d0a7fe5d-1679-4958-b967-b112414f5a2f'),
	 (1698,74841,'2020-08-10 13:45:56.645',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#
), ldp as(
	select child_id
	from location_hierchy_closer_det, location_master, prefered_language  
	where parent_id = #location_id# and depth = 1 
	and location_master.id = location_hierchy_closer_det.child_id
), r as(
    select lhcd.child_id as id,
    stat.member_id,
    stat.mother_id,
    to_char(stat.dob, ''MM/DD/YYYY'') as dob,
    case when stat.opv_booster is null then ''Not Given'' else to_char(stat.opv_booster, ''MM/DD/YYYY'') end as opv_booster,
    case when stat.dpt_booster is null then ''Not Given'' else to_char(stat.dpt_booster, ''MM/DD/YYYY'') end as dpt_booster,
    case when stat.measles_or_rubella_2 is null then ''Not Given'' else to_char(stat.measles_or_rubella_2, ''MM/DD/YYYY'') end as measles_or_rubella_2
    from rch_child_analytics_details stat
	inner join location_hierchy_closer_det lhcd on lhcd.child_id = stat.tracking_location_id
	where stat.is_valid_for_tracking_report = true
    and stat.dob_month_year between (case when #from_month_year# is null then ''01/01/1970'' else to_date(''#from_month_year#'',''MM/DD/YYYY'') end) 
	and (case when #to_month_year# is null then current_date else to_date(''#to_month_year#'',''MM/DD/YYYY'') + interval ''1 month'' - interval ''1 milliseconds'' end)
	and lhcd.parent_id in (select child_id from ldp)
    and stat.member_id is not null 
	and stat.complete_immunization_in_number_of_month is null and (member_state != ''DEAD'' or dob + interval ''2 year''  < death_date) 
    order by stat.member_id
     #limit_offset#
), s as(
    select r.*,  
    case when prefered_language.is_enlish then get_location_hierarchy_language_wise(r.id, ''EN'') else get_location_hierarchy(r.id) end as location_name,
    child.first_name || '' '' || child.middle_name || '' '' || child.last_name || '' ('' || child.unique_health_id || '')'' as child_name,
    mother.first_name || '' '' || mother.middle_name || '' '' || mother.last_name || '' ('' || mother.unique_health_id || '')'' as mother_name
    from r
    left join prefered_language  on true
    left join imt_member child on child.id = r.member_id
    left join imt_member mother on mother.id = r.mother_id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr. No",
child_name as "Name of child",
mother_name as "Name of mother",
dob as "DOB",
location_name as  "Location",
opv_booster as "OPV Booster",
dpt_booster as "DPT Booster",
measles_or_rubella_2 as "Measels or Rubella2"
from s',true,'ACTIVE','279fd895-fa3c-4f91-9de7-84e82b345728'),
	 (213,57698,'2019-01-29 11:42:50.743',1,'2021-01-13 20:22:06.427965','from_month','select to_char(cast(''#from_month#'' as date),''DD/MM/YYYY'') as from_month',true,'ACTIVE','80bdb6b5-d675-4e16-98ab-f56b9260c9f6'),
	 (1207,66522,'2019-07-16 20:27:44.052',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,call_type,location_id','with unsuccess_calls as(
	select 
	*
	from gvk_manage_call_master master
	where call_response in (''com.argusoft.imtecho.gvk.call.no-number-available'')
	and location_id in (select child_id from location_hierchy_closer_det where parent_id = (case when #location_id# = -2 then 2 else #location_id# end) 
and depth <= (case when #location_id# = -2 then 0 else 8 end))
        and case 
        when ''all'' = ''#call_type#'' then true 
        when ''#call_type#'' = ''FHW_CH_SER_VERI'' then call_type in (''FHW_CH_SER_VERI'',''FHW_DEL_VERI'',''FHW_TT_VERI'',''FHW_CH_SER_PREG_VERI'')
        else call_type = ''#call_type#'' end
       and created_on between case when ''#from_date#'' = ''null'' then now() else to_date(''#from_date#'',''MM-DD-YYYY'') end and to_date(case when ''#to_date#'' = ''null'' then null 
       else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds''
      order by id #limit_offset#
),
unsuccess_calls_details as (
	select 
	concat(im.first_name,'' '',im.last_name, ''('',im.unique_health_id ,'')'') as name,
	master.mobile_number,
	master.created_on,
	master.call_type,
	master.location_id,
	master.id,
	master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join imt_member im on im.id = master.member_id
	where call_response != ''com.argusoft.imtecho.gvk.call.success''
	
	union all 
	select 
	concat(uu.first_name,'' '',uu.last_name, ''('',role.name ,'')'') as name,
	master.mobile_number,
	master.created_on,
	master.call_type,
	master.location_id,
	master.id,
	master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join um_user uu on uu.id = master.user_id
	inner join um_role_master role on uu.role_id = role.id 
	where call_response != ''com.argusoft.imtecho.gvk.call.success''
	
union  all
	select 
	case when im.id is null then imf.family_id else concat(im.first_name,'' '',im.last_name, '' ('',imf.family_id ,'')'') end as name,
	master.mobile_number,
	master.created_on,
	master.call_type,
	master.location_id,
	master.id,
	master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join imt_family imf on imf.family_id = master.family_id
	left join imt_member im on im.family_id = imf.family_id and im.family_head = true
	where call_response != ''com.argusoft.imtecho.gvk.call.success''
	
),
response as (
select 
master.name,
get_location_hierarchy(master.location_id) as Location_hierarchy,
case when call_response = ''com.argusoft.imtecho.gvk.call.no-number-available'' then ''No number available''
when call_response = ''com.argusoft.imtecho.gvk.call.cant-talk'' then ''Can''''t talk''
when call_response = ''com.argusoft.imtecho.gvk.call.wrong-mobile-number'' then ''Wrong mobile number''
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-asha-husband'' then ''Number belongs to asha''	-- todo
--when call_response = ''com.argusoft.imtecho.gvk.call.not-interested-in-treatment'' then ''Not intersted in treatment''
when call_response = ''com.argusoft.imtecho.gvk.call.unresponsive'' then ''Unreponsive''
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-husband'' then ''Number belongs to anm'' 
when call_response = ''com.argusoft.imtecho.gvk.call.not-reachable'' then ''Not reachable''
when call_response = ''com.argusoft.imtecho.gvk.call.phone-switched-off'' then ''Phone switched off''
when call_response = ''com.argusoft.imtecho.gvk.call.number-collection-pending'' then ''Number collection pending''			-- todo
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary-husband'' then ''number of beneficiary''
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary''
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-family-member''
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-neighbour''
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-or-anm-husband'' then ''ANM or husband''			-- todo
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-ashah-or-asha-husband'' then ''Asha or husband''			-- todo
else ''Other'' end reason,
master.mobile_number\:\:json,
master.location_id,
master.created_on,
master.call_type,
master.created_by,
master.id
from unsuccess_calls_details master
 ),
mo as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code in (''mo_phc'',''mo_uphc''))
),
mo_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	mo group by location_id
),
mo_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from mo_unique mo
	inner join um_user um on um.id = mo.mo_id
),
asha as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code = ''ASHA'')
    where uu.state = ''ACTIVE''
),
asha_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	asha group by location_id
),
asha_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from asha_unique mo
	inner join um_user um on um.id = mo.mo_id
),
anm as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code = ''FHW'')
    where uu.state = ''ACTIVE''
),
anm_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	anm group by location_id
),
anm_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from anm_unique mo
	inner join um_user um on um.id = mo.mo_id
),

contacts as (
	select json_array_elements(mobile_number)->>''mobileNumber'' as contact ,json_array_elements(mobile_number)->>''isCalled'' as isCalled ,id
	from response where mobile_number is not null ),
contacts_display_date as (	
	select string_agg(
	case when isCalled=''true'' then concat(''<b>'',contact,''</b>'') else contact end
	,'','') as contact,id from contacts
	group by id)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
resp.name as "Called Person",
Location_hierarchy as "Location",
contacts.contact as "Dialed Number",
to_char(resp.created_on,''DD-MM-YYYY HH:MI PM'') as  "Call Date",


case when resp.call_type = ''FHW_HIGH_RISK_CONF'' then ''FHW highrisk conformation''
when resp.call_type = ''IMMUN_VERI'' then ''Immunization verification''
when resp.call_type = ''FAM_VERI'' then ''Family verification''
when resp.call_type = ''PREG_REGI_VERI'' then ''Pregnancy registration verification''
when resp.call_type = ''HIGH_RISK_VERI'' then ''Highrisk followup verification''
when resp.call_type = ''MIG_IN_VERI'' then ''Member IN migration verification''
when resp.call_type = ''MIG_OUT_VERI'' then ''Member OUT migration verification''
when resp.call_type = ''DUP_MEM_VERI'' then ''Duplicate member verification'' end as "Call Type",
--resp.reason as "Reason for Unsuccessful Calling",
mo.name as "MO Details",
anm.name as "ANM Details",
asha.name as "ASHA Details"
,concat(um.first_name, '' '', um.last_name) as "RO Details"
--fhw.name
from response resp
left join contacts_display_date contacts on resp.id = contacts.id
left join mo_details mo on mo.location_id = resp.location_id
left join anm_details anm on anm.location_id = resp.location_id
left join asha_details asha on asha.location_id = resp.location_id
left join um_user um on resp.created_by = um.id',true,'ACTIVE','8703a069-f6cf-4968-957e-e33a603d62a1'),
	 (1707,60512,'2020-09-07 16:40:57.025',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where dob <= fsam_admission_date - interval ''6 month''
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','b3e2745a-aa8d-4aa4-a8e7-9c7b50b91a0f'),
	 (451,1,'2019-02-14 00:43:54.691',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Children with Congenital deafness Birth defects(State Level Monthly Compilation Sheet for Screening of Birth Defects)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.delivery_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.delivery_location_id and m.id = c.member_id 
	and l.parent_id = #location_id#
	and c.has_congenital_deafness = true
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end), '' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) ,
family_head as (
	select a.id as member_id,
	concat(im2.first_name,'' '',im2.middle_name,'' '',im2.last_name) as FamilyHead,
	im2.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join child_det a on a.id = im.id
	inner join imt_family imf on imf.family_id = im.family_id
	inner join imt_member im2 on imf.hof_id = im2.id
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when family_head.FamilyHeadMobileNo is not null then FamilyHeadMobileNo else ''-'' end as "Contact Number",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id
left join family_head on family_head.member_id = child_det.id;',true,'ACTIVE','2a892371-c6ff-43d5-9241-c7b67f5b8c77'),
	 (44,1027,'2018-05-28 11:59:21.319',1,'2021-01-13 20:22:06.427965',NULL,'select id,first_name || '' '' || last_name || ''('' || user_name || '')'' as name from um_user where role_id in (select role_id from um_role_category cat
inner join listvalue_field_value_detail list on cat.category_id = list.id and list.code = ''GVKEMRI_RO'') order by name;',true,'ACTIVE','e1edb9fa-0656-4d94-9fa4-bc4481edfd60'),
	 (226,58981,'2019-01-30 20:11:30.762',1,'2021-01-13 20:22:06.427965',NULL,'select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as year 
from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by year desc;',true,'ACTIVE','f4956040-b6e1-4f0b-8469-b20125ef2f41'),
	 (1718,60512,'2020-09-07 16:54:34.819',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','ac1ca6d0-5672-4e4b-adcb-b8eadea1003d'),
	 (445,1,'2019-02-14 00:41:48.253',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','b808bbe2-152e-45e8-b99f-53cc85ccac4a');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (446,1,'2019-02-14 00:41:48.255',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','4716d116-95cd-4c4e-abfa-f1832757c5bd'),
	 (447,1,'2019-02-14 00:41:48.269',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Children with Congenital cataract Birth defects(State Level Monthly Compilation Sheet for Screening of Birth Defects)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.delivery_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.delivery_location_id and m.id = c.member_id 
	and l.parent_id = #location_id#
	and c.has_congenital_cataract = true
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end), '' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) ,
family_head as (
	select a.id as member_id,
	concat(im2.first_name,'' '',im2.middle_name,'' '',im2.last_name) as FamilyHead,
	im2.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join child_det a on a.id = im.id
	inner join imt_family imf on imf.family_id = im.family_id
	inner join imt_member im2 on imf.hof_id = im2.id
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when family_head.FamilyHeadMobileNo is not null then FamilyHeadMobileNo else ''-'' end as "Contact Number",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id
left join family_head on family_head.member_id = child_det.id;',true,'ACTIVE','d82f671b-362a-4872-9791-2436848c9d5e'),
	 (497,1,'2019-02-14 15:32:39.855',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','c02cc956-bfd5-4463-a1a7-c869a18fe867'),
	 (123,58981,'2019-01-09 19:51:48.679',1,'2021-01-13 20:22:06.427965',NULL,'select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as year from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by year desc;',true,'ACTIVE','7fafcfdc-36da-4e49-8a85-659e543b8cb8'),
	 (222,58981,'2019-01-30 20:01:32.486',1,'2021-01-13 20:22:06.427965',NULL,'select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as year 
from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by year desc;',true,'ACTIVE','c20ae84a-5e7d-4cbd-b612-5ccdcd4e1e9f'),
	 (221,58981,'2019-01-30 20:00:23.395',1,'2021-01-13 20:22:06.427965',NULL,'select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as year 
from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by year desc;',true,'ACTIVE','87ddacf4-44e6-4b22-bffe-0a6ce7536b53'),
	 (291,1,'2019-02-11 17:23:41.163',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Penta 2 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.is_valid_for_tracking_report = true
	and c.penta2 is not null
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','23664475-f8d1-4b9d-95d4-48c7a43aab12'),
	 (225,58981,'2019-01-30 20:08:44.878',1,'2021-01-13 20:22:06.427965',NULL,'select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as year 
from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by year desc;',true,'ACTIVE','a25ebd33-4022-49e9-8801-ac2f5f97c3c4'),
	 (1851,74841,'2020-12-14 15:16:41.436',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','/*No. of clubfoot observerd(State Level Monthly Compilation Sheet For Screening Of Birth Defects) */

with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.delivery_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.delivery_location_id and m.id = c.member_id 
	and l.parent_id = #location_id#
	and c.has_club_foot = true
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end), '' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) ,
family_head as (
	select a.id as member_id,
	concat(im2.first_name,'' '',im2.middle_name,'' '',im2.last_name) as FamilyHead,
	im2.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join child_det a on a.id = im.id
	inner join imt_family imf on imf.family_id = im.family_id
	inner join imt_member im2 on imf.hof_id = im2.id
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when family_head.FamilyHeadMobileNo is not null then FamilyHeadMobileNo else ''-'' end as "Contact Number",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id
left join family_head on family_head.member_id = child_det.id;',true,'ACTIVE','137ba93c-d473-4139-a45e-8f3b22f94380'),
	 (46,1027,'2018-05-28 12:04:51.201',1,'2021-01-13 20:22:06.427965',NULL,'select id,first_name || '' '' || last_name || ''('' || user_name || '')'' as name from um_user where role_id in (select role_id from um_role_category cat
inner join listvalue_field_value_detail list on cat.category_id = list.id and list.code = ''GVKEMRI_RO'') order by name;',true,'ACTIVE','8a9b2bcb-a3b5-4036-a1f4-bb3b5cbc58f9');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1785,78434,'2020-10-16 11:17:57.492',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','da1f8201-52af-4a8b-a465-482e4ed2cfc4'),
	 (1722,60512,'2020-09-07 16:58:52.365',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','886edc45-eff9-4b1b-b44b-302f9c62899f'),
	 (1786,78434,'2020-10-16 11:17:57.694',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,from_month,location_id','-- 2nd and 3rd trimester high risk mother given services under PMS(PMSMA Services Statistics Report)
with dates as (
    select to_date(
            case
                when ''#from_month#'' = ''null'' then null
                else ''#from_month#''
            end,
            ''MM/DD/YYYY''
        ) as from_date,
        to_date(
            case
                when ''#to_month#'' = ''null'' then null
                else ''#to_month#''
            end,
            ''MM/DD/YYYY''
        ) + interval ''1 month'' - interval ''1 milliseconds'' as to_date
),
location_det as (
    select lm.id,
        lm.english_name as name,
        lm.location_code
    from location_hierchy_closer_det lh1,
        location_master lm
    where lh1.parent_id = #location_id#
        and lm.id = lh1.child_id
),
high_risk_member as (
    select rpa.pregnancy_reg_id,
        to_char(rpa.lmp_date, ''DD-MM-YYYY'') as lmp_date,
        to_char(preg.edd, ''DD-MM-YYYY'') as edd_date,
        get_location_hierarchy(rpa.member_current_location_id) as location_name,
        concat(
            im.first_name,
            '' '',
            im.middle_name,
            '' '',
            im.last_name,
            ''('',
            im.unique_health_id,
            '')''
        ) as person_name
    from rch_pregnancy_analytics_details rpa,
        rch_anc_master anc,
        dates,
        rch_pregnancy_registration_det preg,
        imt_member im
    where rpa.high_risk_mother = true
        and (
            rpa.death_date is null
            or rpa.death_date >= dates.from_date
        )
        and (
            date_of_delivery is null
            or date_of_delivery >= dates.from_date
        )
        and (
            (
                cast(rpa.lmp_date + interval ''90 days'' as date),
                cast(rpa.lmp_date + interval ''270 days'' as date)
            ) overlaps (
                cast(dates.from_date as date),
                cast(dates.to_date as date)
            )
        )
        and rpa.member_current_location_id in (
            select id
            from location_det
        )
        and rpa.pregnancy_reg_id = anc.pregnancy_reg_det_id
        and anc.is_from_web = true
        and anc.service_date between dates.from_date and dates.to_date
        and anc.examined_by_gynecologist = true
        and preg.id = rpa.pregnancy_reg_id
        and rpa.member_id = im.id
    order by rpa.pregnancy_reg_id #limit_offset#
)
select ROW_NUMBER() over () + cast(
        SUBSTRING(
            ''#limit_offset#'',
            POSITION(''offset'' in ''#limit_offset#'') + 7
        ) as int
    ) as "Sr No",
    location_name as "Location Name",
    person_name as "Name of Person",
    lmp_date as "LMP Date",
    edd_date as "EDD Date"
from high_risk_member',true,'ACTIVE','2052e55e-ab11-4ae5-b4e6-6bea244054c0'),
	 (167,58981,'2019-01-22 19:20:45.338',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','2892dbe6-2f82-44a6-8280-e2d8bba933e9'),
	 (1645,78434,'2020-06-24 14:08:50.036',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id','--Mild(Anemia Status Of Registered ANC Report)
with parameters as (
    select CAST(#location_id# AS INTEGER) as location_id,
    cast(''#demographic_location_id#'' as TEXT) as demographic_group,
    to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end, ''MM-DD-YYYY'') as from_date ,
	to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end, ''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date,
    (select report_preferred_language from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
member_det as (
    select
    r.member_id
    ,r.native_location_id as loc_id
    ,r.unique_health_id
    ,r.family_id
    ,r.member_name as name
    ,p.preferred_language
	from
        rch_pregnancy_analytics_details r
        ,location_hierchy_closer_det l
        ,parameters p
	where
        r.native_location_id  = l.child_id
        and l.parent_id = p.location_id
        and r.reg_service_date between p.from_date and p.to_date
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in (select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
        and r.hb between 10 and 10.99
    #limit_offset#
),
fhw_det as (
    select
        loc.loc_id,
        concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
        case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
    from
        um_user_location ul
        ,um_user u
        ,(select distinct loc_id from member_det) loc
        ,location_hierchy_closer_det
    where
        loc.loc_id = location_hierchy_closer_det.child_id
        and location_hierchy_closer_det.parent_id = ul.loc_id
        and u.id = ul.user_id
        and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
        and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select
    ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
    get_location_hierarchy_language_wise(member_det.loc_id, member_det.preferred_language) as "Location",
    member_det.unique_health_id as "Member ID",
    member_det.family_id as "Family ID",
    member_det.name as "Name",
    case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from
    member_det
left join
    fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','2b42a754-2a35-4280-a975-627e30f7d3ae'),
	 (1237,409,'2019-07-24 10:22:56.607',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','1aa95f02-b5ea-4a52-b4b5-9fa7d4f585e3'),
	 (1848,74841,'2020-12-14 15:16:41.376',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','151449fc-8f4f-421a-9053-67124cee6586'),
	 (1737,60512,'2020-09-07 17:11:24.225',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_discharge_15_weight_gain
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','fa9667f3-62b6-4924-9bc4-5a615b639e05'),
	 (812,58981,'2019-03-06 17:36:58.868',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','3d00a157-69aa-4e67-a985-ed61310de0f5'),
	 (1850,74841,'2020-12-14 15:16:41.419',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','794702ca-eb87-4679-af53-e9b10e507c00');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (486,57698,'2019-02-14 14:23:27.408',1,'2021-01-13 20:22:06.427965','course_id','select course_name as course_id from tr_course_master  where course_id=#course_id#',true,'ACTIVE','d23e6a5e-cf2f-4fbc-999c-08e5e138b5cc'),
	 (183,58981,'2019-01-23 13:08:44.549',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #location_id#',true,'ACTIVE','0a3fd62f-3e93-4997-9473-a9073f3b47b1'),
	 (1734,60512,'2020-09-07 17:09:54.997',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','e5ef025e-389b-4bcc-86f0-f604a135a3ea'),
	 (808,58981,'2019-03-06 17:33:22.778',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','27b1516b-3028-42f8-a277-93ca1fb50f0e'),
	 (544,1,'2019-02-14 16:21:01.339',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','19223b09-c5c1-4f93-b218-50a87915d4a4'),
	 (436,1,'2019-02-14 00:36:36.537',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','37d62d3d-02fc-4db3-b596-88b7915ca9f8'),
	 (475,1,'2019-02-14 14:04:37.298',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Children with Cleft lip and palate Birth defects(State Level Monthly Compilation Sheet for Screening of Birth Defects)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.delivery_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.delivery_location_id and m.id = c.member_id 
	and l.parent_id = #location_id#
	and c.has_cleft_lip = true
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end), ''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) ,
family_head as (
	select a.id as member_id,
	concat(im2.first_name,'' '',im2.middle_name,'' '',im2.last_name) as FamilyHead,
	im2.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join child_det a on a.id = im.id
	inner join imt_family imf on imf.family_id = im.family_id
	inner join imt_member im2 on imf.hof_id = im2.id
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when family_head.FamilyHeadMobileNo is not null then FamilyHeadMobileNo else ''-'' end as "Contact Number",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id
left join family_head on family_head.member_id = child_det.id;',true,'ACTIVE','4e98000e-072b-41a3-ba32-08671fef0f24'),
	 (1642,78434,'2020-06-24 11:53:23.708',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' > '' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','62f4070d-bbc2-4a75-bb93-6cfc52e3ad67'),
	 (702,409,'2019-02-27 13:25:06.116',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','51a55829-dcb0-41fa-b303-dd3b0d310106'),
	 (343,1,'2019-02-13 11:26:15.197',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','20af7b44-1f33-4868-833e-1dc92b3e3e10');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (344,1,'2019-02-13 11:26:15.2',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','7143e27a-5b5b-4956-9e57-9941b9e04057'),
	 (716,409,'2019-02-27 13:25:43.227',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','0f0ba74b-7f78-487f-8650-edc7f8012579'),
	 (30,1027,'2018-05-14 17:08:43.192',1,'2021-01-13 20:22:06.427965','course_id,role_id,loggedInUserId,location_id','with location_det as(
select child_id as loc_id from location_hierchy_closer_det  
where parent_id in (select distinct case when #location_id# is not null then #location_id# else  loc_id end from um_user_location where user_id = #loggedInUserId# and state = ''ACTIVE'')
),users AS (
SELECT tcrr.role_id, tcrr.course_id, uu.id,tr_course_master.module_id,
	concat(uu.first_name,'' '',uu.last_name) as FullName, tr_course_master.course_name as courseName, urm.name as roleName
	FROM 
	tr_course_master
	inner join tr_course_role_rel tcrr on tcrr.course_id = tr_course_master.course_id and tr_course_master.course_state = ''ACTIVE''
	INNER JOIN um_user uu ON uu.role_id = tcrr.role_id and uu.state = ''ACTIVE''
	inner join um_user_location ul on ul.state = ''ACTIVE'' and ul.user_id = uu.id
       	inner join location_det ld on ld.loc_id = ul.loc_id
     	inner join um_role_master urm on urm.id = uu.role_id

	where 	uu.role_id=#role_id# and tr_course_master.course_id =#course_id#

),totalUser as 
(select distinct on (u.id) id, FullName, courseName, roleName from users u)
,scheduled as (
		select us.id ,us.course_id,us.role_id from tr_training_master tr
		inner join tr_training_course_rel tcr on tr.training_id = tcr.training_id
                 inner join (select * from tr_training_attendee_rel union select * from tr_training_additional_attendee_rel) r 
                 on tr.training_id = r.training_id 
	         right join users us on us.id = r.attendee_id and us.course_id = tcr.course_id
                 where (tr.expiration_date >= current_date) and tr.training_state = ''DRAFT''
),practiced as (
	SELECT us.id, us.role_id, us.course_id from tr_certificate_master tcm 
	INNER JOIN users us on us.id = tcm.user_id and tcm.course_id = us.course_id
	inner join field_value_master fvm on fvm.id = us.module_id
	left join user_form_access ufa on ufa.form_code = fvm.field_value and ufa.user_id = us.id
	where tcm.certificate_type = ''COURSECOMPLETION'' and us.course_id in (1,7,10,11)
	and ufa.form_code is null
),production as (
	SELECT us.id id, us.role_id, us.course_id from tr_certificate_master tcm 
	INNER JOIN users us on us.id = tcm.user_id and tcm.course_id = us.course_id
	where tcm.certificate_type = ''COURSECOMPLETION'' and us.course_id not in (1,7,10,11)
	union all
	SELECT us.id id, us.role_id, us.course_id from tr_certificate_master tcm 
	INNER JOIN users us on us.id = tcm.user_id and tcm.course_id = us.course_id
	inner join field_value_master fvm on fvm.id = us.module_id
	inner join user_form_access ufa on ufa.form_code = fvm.field_value and ufa.user_id = us.id
	where tcm.certificate_type = ''COURSECOMPLETION'' and us.course_id in (1,7,10,11) and ufa.state=''MOVE_TO_PRODUCTION''
), pending as (
	select * from scheduled 
	union all 
	select * from practiced 
	union all
	select * from production
)
select ROW_NUMBER() over() as "Sr. No.", fullName as "Full Name", courseName as "Course Name", roleName as "Role" from totalUser tu where tu.id not in (select id from pending )',true,'ACTIVE','75282a2a-df03-47a3-b610-d59189836bea'),
	 (1789,74841,'2020-10-23 13:09:35.844',1,'2021-01-13 20:22:06.427965',NULL,'select value as hospital_type from listvalue_field_value_detail where field_key = ''infra_type'' and code in (''P'',''SC'',''U'',''G'',''D'',''B'',''C'');',true,'ACTIVE','041e093a-af28-4faa-b02a-ca609a0f1286'),
	 (1790,74841,'2020-10-23 13:09:35.912',1,'2021-01-13 20:22:06.427965','hospital_type,location_id','select id as health_infra_id, name as "Health Infra" from health_infrastructure_details where location_id = #location_id# and "type" = (select id from listvalue_field_value_detail where field_key = ''infra_type'' and value = ''#hospital_type#'')',true,'ACTIVE','c62eac9d-f0a8-4b74-a188-1998f32eb802'),
	 (1791,74841,'2020-10-23 13:09:37.049',1,'2021-01-13 20:22:06.427965','month_year,health_infra_id','with property as (
select
	case
		when lfvd.value = ''Community Health Center'' then ''CHC''
		else lfvd.value
	end as infra_type ,
	hid.id as health_infra_id ,
	case
		when ''#month_year#'' != ''null'' then to_date(''#month_year#'', ''MM-DD-YYYY'')
		else null
	end as month_year
from
	health_infrastructure_details hid
left join listvalue_field_value_detail lfvd on
	lfvd.id = hid."type"
where
	hid.id = cast(#health_infra_id# as integer) ),
hmis_data as(
select
	coalesce(sum(anc_reg), 0) as anc_reg,
	coalesce(sum(anc1), 0) as anc1,
	coalesce(sum(high_risk), 0) as high_risk,
	coalesce(sum(high_risk_follow_up), 0) as high_risk_follow_up,
	coalesce(sum(tt1), 0) as tt1,
	coalesce(sum(tt2), 0) as tt2,
	coalesce(sum(tt_booster), 0) as tt_booster,
	coalesce(sum(no_of_pw_180_ifa_given), 0) as no_of_pw_180_ifa_given,
	coalesce(sum(no_of_pw_ca_given), 0) as no_of_pw_ca_given,
	coalesce(sum(no_of_pw_alben_given), 0) as no_of_pw_alben_given,
	coalesce(sum(no_of_pw_with_more_then_4_anc_checkup), 0) as no_of_pw_with_more_then_4_anc_checkup,
	coalesce(sum(no_of_pw_anc_corticosteroids_given), 0) as no_of_pw_anc_corticosteroids_given,
	coalesce(sum(no_of_pw_with_hypertension), 0) as no_of_pw_with_hypertension,
	coalesce(sum(no_of_pw_with_hypertension_migrated_at_institution), 0) as no_of_pw_with_hypertension_migrated_at_institution,
	coalesce(sum(no_of_pw_tested_for_hb_4_or_more_time), 0) as hb_test_more_than_4_time,
	coalesce(sum(hbsag_test_cnt), 0) as hbsag_test_cnt,
	coalesce(sum(0), 0) as temp2,
	coalesce(sum(no_of_pw_with_hb_count_less_than_11), 0) as no_of_pw__with_hb_count_less_then_11,
	coalesce(sum(no_of_pw_with_hb_count_less_than_7), 0) as no_of_pw__with_hb_count_less_then_7,
	coalesce(sum(no_of_pw_tested_for_anemia_with_hb_count_less_than_7), 0) as no_of_pw_tested_for_anemia_with_hb_count_less_then_7,
	coalesce(sum(no_of_pw_tested_for_gdm), 0) as no_of_pw_tested_for_gdm,
	coalesce(sum(0), 0) as temp3,
	coalesce(sum(no_of_pw_tested_for_syphilis), 0) as no_of_pw_tested_for_syphilis,
	coalesce(sum(no_of_pw_tested_positive_for_syphilis), 0) as no_of_pw_tested_positive_for_syphilis,
	coalesce(sum(no_of_pw_treated_for_syphilis), 0) as no_of_pw_treated_for_syphilis,
	coalesce(sum(0), 0) as temp4,
	coalesce(sum(0), 0) as temp5,
	coalesce(sum(no_of_home_del), 0) as no_of_home_del,
	coalesce(sum(home_del_by_sba), 0) as home_del_by_sba,
	coalesce(sum(home_del_by_non_sba), 0) as home_del_by_non_sba,
	coalesce(sum(no_of_pw_misoprostol_given_home_del), 0) as no_of_pw_misoprostol_given_home_del,
	coalesce(sum(no_of_inst_del), 0) as no_of_inst_dl,
	coalesce(sum(no_of_delivery_in_transit), 0) as no_of_delivery_in_transit,
	coalesce(sum(no_of_inst_del_stayed_48_hrs), 0) as no_of_inst_del_stayed_48_hrs,
	coalesce(sum(no_of_c_section_delivery), 0) as no_of_c_section_delivery,
	coalesce(sum(no_of_c_section_delivery_at_night), 0) as no_of_c_section_delivery_at_night,
	coalesce(sum(live_birth_male), 0) as live_birth_male,
	coalesce(sum(live_birth_female), 0) as live_birth_female,
	coalesce(sum(no_of_pre_term_newborns), 0) as no_of_pre_term_newborns,
	coalesce(sum(abortion), 0) as abortion,
	coalesce(sum(abortion_medical_method), 0) as abortion_medical_method,
	coalesce(sum(abortion_surgical_method), 0) as abortion_surgical_method,
	coalesce(sum(mtp), 0) as mtp,
	coalesce(sum(hmis_rch_service_provided_during_year.no_of_complications_refered_to_hf), 0) as no_of_complications_refered_to_hf,
	coalesce(sum(mtp_medical_method), 0) as mtp_medical_method,
	coalesce(sum(mtp_surgical_method), 0) as mtp_surgical_method,
	coalesce(sum(mtp_more_than_12_weeks), 0) as mtp_more_than_12_weeks,
	coalesce(sum(mtp_complication_identified_post_abortion), 0) as mtp_complication_identified_post_abortion,
	coalesce(sum(mtp_complication_treated_post_abortion), 0) as mtp_complication_treated_post_abortion,
	coalesce(sum(no_of_pw_provided_contraception_post_abortion), 0) as no_of_pw_provided_contraception_post_abortion,
	coalesce(sum(weighed), 0) as weighed,
	coalesce(sum(weighed_less_than_2_5), 0) as weighed_less_than_2_5,
	coalesce(sum(breast_feeding_within_1_hr), 0) as breast_feeding_within_1_hr,
	coalesce(sum(no_complications_observed), 0) as no_complications_observed,
	coalesce(sum(no_complications_managed_at_facility), 0) as no_complications_managed_at_facility,
	coalesce(sum(no_of_pw_with_obstetric_complications), 0) as no_of_pw_with_obstetric_complications,
	coalesce(sum(no_of_pw_treated_with_blood_transfusion), 0) as no_of_pw_treated_with_blood_transfusion,
	coalesce(sum(no_of_pw_recived_post_partum_in_48_hrs_hd), 0) as no_of_pw_recived_post_partum_in_48_hrs_hd,
	coalesce(sum(no_of_pw_180_ifa_full_course_given), 0) as no_of_pw_180_ifa_full_course_given,
	coalesce(sum(0), 0) as temp6,
	coalesce(sum(no_of_nsv_or_cvc), 0) as no_of_nsv_or_cvc,
	coalesce(sum(no_of_laparoscopic_sterilizations_conducted), 0) as no_of_laparoscopic_sterilizations_conducted,
	coalesce(sum(no_of_mini_lap_sterilization_conducted), 0) as no_of_mini_lap_sterilization_conducted,
	coalesce(sum(no_of_postpartum_sterilizations), 0) as no_of_postpartum_sterilizations,
	coalesce(sum(no_of_post_abortion_sterilizations), 0) as no_of_post_abortion_sterilizations,
	coalesce(sum(no_of_interval_iucd_insertions), 0) as no_of_interval_iucd_insertions,
	coalesce(sum(no_of_postpartum_iucd_insertion), 0) as no_of_postpartum_iucd_insertion,
	coalesce(sum(no_of_post_abortion_iucd_insertion), 0) as no_of_post_abortion_iucd_insertion,
	coalesce(sum(no_of_iucd_removal), 0) as no_of_iucd_removal,
	coalesce(sum(injectable_cap_first_dose), 0) as injectable_cap_first_dose,
	coalesce(sum(injectable_cap_second_dose), 0) as injectable_cap_second_dose,
	coalesce(sum(injectable_cap_third_dose), 0) as injectable_cap_third_dose,
	coalesce(sum(injectable_cap_fourth_dose), 0) as injectable_cap_fourth_dose,
	coalesce(sum(no_of_oral_pills_distributed_by_facility), 0) as no_of_oral_pills_distributed_by_facility,
	coalesce(sum(no_of_oral_pills_distributed_by_asha), 0) as no_of_oral_pills_distributed_by_asha,
	coalesce(sum(no_of_condom_distributed_by_facility), 0) as no_of_condom_distributed_by_facility,
	coalesce(sum(no_of_condom_distributed_by_asha), 0) as no_of_condom_distributed_by_asha,
	coalesce(sum(no_of_centchroman_pills_distributed_by_facility), 0) as no_of_centchroman_pills_distributed_by_facility,
	coalesce(sum(no_of_centchroman_pills_distributed_by_asha), 0) as no_of_centchroman_pills_distributed_by_asha,
	coalesce(sum(no_of_ptk_utilized_by_facility), 0) as no_of_ptk_utilized_by_facility,
	coalesce(sum(no_of_ptk_utilized_by_ash), 0) as no_of_ptk_utilized_by_ash,
	coalesce(sum(vitamin_k_given), 0) as vitamin_k_given,
	coalesce(sum(bcg_given), 0) as bcg_given,
	coalesce(sum(penta_1_given), 0) as penta_1_given,
	coalesce(sum(penta_2_given), 0) as penta_2_given,
	coalesce(sum(penta_3_given), 0) as penta_3_given,
	coalesce(sum(opv_0_given), 0) as opv_0_given,
	coalesce(sum(opv_1_given), 0) as opv_1_given,
	coalesce(sum(opv_2_given), 0) as opv_2_given,
	coalesce(sum(opv_3_given), 0) as opv_3_given,
	coalesce(sum(hep_b_given), 0) as hep_b_given,
	coalesce(sum(fipv_1_given), 0) as fipv_1_given,
	coalesce(sum(fipv_2_given), 0) as fipv_2_given,
	coalesce(sum(rota_virus_1_given), 0) as rota_virus_1_given,
	coalesce(sum(rota_virus_2_given), 0) as rota_virus_2_given,
	coalesce(sum(rota_virus_3_given), 0) as rota_virus_3_given,
	coalesce(sum(measles_rubella_1_given_in_9_to_11_month), 0) as measles_rubella_1_given_in_9_to_11_month,
	coalesce(sum(measles_rubella_2_given_in_9_to_11_month), 0) as measles_rubella_2_given_in_9_to_11_month,
	coalesce(sum(fully_immunized_bwtween_9_to_11_months), 0) as fully_immunized_bwtween_9_to_11_months,
	coalesce(sum(fully_immunized_bwtween_9_to_11_months_male), 0) as fully_immunized_bwtween_9_to_11_months_male,
	coalesce(sum(fully_immunized_bwtween_9_to_11_months_female), 0) as fully_immunized_bwtween_9_to_11_months_female,
	coalesce(sum(measles_rubella_1_given), 0) as measles_rubella_1_given,
	coalesce(sum(measles_1_given), 0) as measles_1_given,
	coalesce(sum(measles_rubella_2_given), 0) as measles_rubella_2_given,
	coalesce(sum(measles_or_rubella_2_given), 0) as measles_or_rubella_2_given,
	coalesce(sum(dpt_booster_given), 0) as dpt_booster_given,
	coalesce(sum(opv_booster_given), 0) as opv_booster_given,
	coalesce(sum(no_of_cases_of_aefi_minor), 0) as no_of_cases_of_aefi_minor,
	coalesce(sum(no_of_cases_of_aefi_severe), 0) as no_of_cases_of_aefi_severe,
	coalesce(sum(no_of_cases_of_aefi_serious), 0) as no_of_cases_of_aefi_serious,
	coalesce(sum(vitamin_a_given), 0) as vitamin_a_given,
	coalesce(sum(ifa_given), 0) as ifa_given,
	coalesce(sum(unweighted_child_given_health_checkup), 0) as unweighted_child_given_health_checkup,
	coalesce(sum(childhood_diseases_pneumonia), 0) as childhood_diseases_pneumonia,
	coalesce(sum(childhood_diseases_asthma), 0) as childhood_diseases_asthma,
	coalesce(sum(childhood_diseases_sepsis), 0) as childhood_diseases_sepsis,
	coalesce(sum(childhood_diseases_diphtheria), 0) as childhood_diseases_diphtheria,
	coalesce(sum(childhood_diseases_pertussis), 0) as childhood_diseases_pertussis,
	coalesce(sum(childhood_diseases_tetanus_neonatorum), 0) as childhood_diseases_tetanus_neonatorum,
	coalesce(sum(childhood_diseases_sam), 0) as childhood_diseases_sam,
	coalesce(sum(0), 0) as temp7,
	coalesce(sum(0), 0) as temp8,
	coalesce(sum(no_of_hypertension_cases_screened), 0) as no_of_hypertension_cases_screened,
	coalesce(sum(no_of_hypertension_cases), 0) as no_of_hypertension_cases,
	coalesce(sum(no_of_hypertension_cases_in_treatment), 0) as no_of_hypertension_cases_in_treatment,
	coalesce(sum(no_of_diabetes_cases_screened), 0) as no_of_diabetes_cases_screened,
	coalesce(sum(no_of_diabetes_cases), 0) as no_of_diabetes_cases,
	coalesce(sum(no_of_diabetes_cases_in_treatment), 0) as no_of_diabetes_cases_in_treatment,
	coalesce(sum(no_of_hypertension_and_diabetes_cases_screened), 0) as no_of_hypertension_and_diabetes_cases_screened,
	coalesce(sum(no_of_hypertension_and_diabetes_cases), 0) as no_of_hypertension_and_diabetes_cases,
	coalesce(sum(no_of_hypertension_and_diabetes_cases_in_treatment), 0) as no_of_hypertension_and_diabetes_cases_in_treatment,
	coalesce(sum(no_of_oral_cancer_cases_screened), 0) as no_of_oral_cancer_cases_screened,
	coalesce(sum(no_of_oral_cancer_cases), 0) as no_of_oral_cancer_cases,
	coalesce(sum(no_of_oral_cancer_cases_in_followup), 0) as no_of_oral_cancer_cases_in_followup,
	coalesce(sum(no_of_breast_cancer_cases_screened), 0) as no_of_breast_cancer_cases_screened,
	coalesce(sum(no_of_breast_cancer_cases), 0) as no_of_breast_cancer_cases,
	coalesce(sum(no_of_breast_cancer_cases_in_treatment), 0) as no_of_breast_cancer_cases_in_treatment,
	coalesce(sum(no_of_cervical_cases_screened), 0) as no_of_cervical_cases_screened,
	coalesce(sum(no_of_cervical_cases), 0) as no_of_cervical_cases,
	coalesce(sum(no_of_cervical_cases_in_treatment), 0) as no_of_cervical_cases_in_treatment,
	coalesce(sum(no_of_outpatient_diabetes), 0) as no_of_outpatient_diabetes,
	coalesce(sum(no_of_outpatient_hypertension), 0) as no_of_outpatient_hypertension,
	coalesce(sum(no_of_hypertension_and_diabetes_outpatients), 0) as no_of_hypertension_and_diabetes_outpatients,
	coalesce(sum(no_of_allopathic_outpatient_attendance), 0) as no_of_allopathic_outpatient_attendance,
	coalesce(sum(no_of_operation_major), 0) as no_of_operation_major,
	coalesce(sum(no_of_operation_minor), 0) as no_of_operation_minor,
	--coalesce(sum(no_of_child_admitted_at_nrc), 0) as no_of_child_admitted_at_nrc,
    coalesce(sum(0), 0) as no_of_child_admitted_at_nrc,
	--coalesce(sum(no_of_child_discharge_after_weight_gain_nrc), 0) as no_of_child_discharge_after_weight_gain_nrc,
    coalesce(sum(0), 0) as no_of_child_discharge_after_weight_gain_nrc,
	--coalesce(sum(no_of_lab_test_done), 0) as no_of_lab_test_done,
    coalesce(sum(0), 0) as no_of_lab_test_done,
	coalesce(sum(no_of_pw_tested_for_hiv), 0) as no_of_pw_tested_for_hiv,
	coalesce(sum(no_of_deaths_in_1_to_24_hrs_at_facility), 0) as no_of_deaths_in_1_to_24_hrs_at_facility,
	coalesce(sum(no_of_deaths_in_1_to_24_hrs_at_community), 0) as no_of_deaths_in_1_to_24_hrs_at_community,
	coalesce(sum(no_of_deaths_in_transit), 0) as no_of_deaths_in_transit,
	coalesce(sum(no_of_deaths_in_1_week_at_facility), 0) as no_of_deaths_in_1_week_at_facility,
	coalesce(sum(no_of_deaths_in_1_week_at_community), 0) as no_of_deaths_in_1_week_at_community,
	coalesce(sum(no_of_deaths_in_8_to_28_days_at_facility), 0) as no_of_deaths_in_8_to_28_days_at_facility,
	coalesce(sum(no_of_deaths_in_8_to_28_days_at_community), 0) as no_of_deaths_in_8_to_28_days_at_community,
	coalesce(sum(id_upto_4_weeks_dueto_sepsis), 0) as id_upto_4_weeks_dueto_sepsis,
	coalesce(sum(id_upto_4_weeks_dueto_asphyxia), 0) as id_upto_4_weeks_dueto_asphyxia,
	coalesce(sum(id_upto_4_weeks_dueto_other), 0) as id_upto_4_weeks_dueto_other,
	coalesce(sum(id_upto_12_moths_dueto_pneumonia), 0) as id_upto_12_moths_dueto_pneumonia,
	coalesce(sum(id_upto_12_moths_dueto_diarrhoea), 0) as id_upto_12_moths_dueto_diarrhoea,
	coalesce(sum(id_upto_12_moths_dueto_feaver), 0) as id_upto_12_moths_dueto_feaver,
	coalesce(sum(id_upto_12_moths_dueto_measles), 0) as id_upto_12_moths_dueto_measles,
	coalesce(sum(id_upto_12_moths_dueto_other), 0) as id_upto_12_moths_dueto_other,
	coalesce(sum(no_of_infant_deaths_1_to_12_months_at_facility), 0) as no_of_infant_deaths_1_to_12_months_at_facility,
	coalesce(sum(no_of_infant_deaths_1_to_12_months_at_community), 0) as no_of_infant_deaths_1_to_12_months_at_community,
	coalesce(sum(no_of_infant_deaths_1_to_12_months_in_transit), 0) as no_of_infant_deaths_1_to_12_months_in_transit,
	coalesce(sum(cd_upto_5_years_dueto_pneumonia), 0) as cd_upto_5_years_dueto_pneumonia,
	coalesce(sum(cd_upto_5_years_dueto_diarrhoea), 0) as cd_upto_5_years_dueto_diarrhoea,
	coalesce(sum(cd_upto_5_years_dueto_fever), 0) as cd_upto_5_years_dueto_fever,
	coalesce(sum(cd_upto_5_years_dueto_measles), 0) as cd_upto_5_years_dueto_measles,
	coalesce(sum(cd_upto_5_years_dueto_others), 0) as cd_upto_5_years_dueto_others,
	coalesce(sum(no_of_child_death_1_to_5_years_due_to_cause), 0) as no_of_child_death_1_to_5_years_due_to_cause,
	coalesce(sum(no_of_child_death_reported_through_cbcdr), 0) as no_of_child_death_reported_through_cbcdr,
	coalesce(sum(total_fbcdr_done), 0) as total_fbcdr_done,
	coalesce(sum(no_of_maternal_death_due_to_aph), 0) as no_of_maternal_death_due_to_aph,
	coalesce(sum(no_of_maternal_death_due_to_pr_pph_issue), 0) as no_of_maternal_death_due_to_pr_pph_issue,
	coalesce(sum(no_of_maternal_death_due_to_pr_anaemia_issue), 0) as no_of_maternal_death_due_to_pr_anaemia_issue,
	coalesce(sum(no_of_maternal_death_due_to_pr_sepsis), 0) as no_of_maternal_death_due_to_pr_sepsis,
	coalesce(sum(no_of_maternal_death_due_to_abortive_outcome), 0) as no_of_maternal_death_due_to_abortive_outcome,
	coalesce(sum(no_of_maternal_death_due_to_obstructed_labour), 0) as no_of_maternal_death_due_to_obstructed_labour,
	coalesce(sum(no_of_maternal_death_due_to_hypertensive_disorder), 0) as no_of_maternal_death_due_to_hypertensive_disorder,
	coalesce(sum(no_of_maternal_death_due_to_cd), 0) as no_of_maternal_death_due_to_cd,
	coalesce(sum(no_of_maternal_death_due_to_ld), 0) as no_of_maternal_death_due_to_ld,
	coalesce(sum(no_of_maternal_death_due_to_rd), 0) as no_of_maternal_death_due_to_rd,
	coalesce(sum(no_of_maternal_death_due_to_infection), 0) as no_of_maternal_death_due_to_infection,
	coalesce(sum(no_of_maternal_death_due_to_bd_intrasit), 0) as no_of_maternal_death_due_to_bd_intrasit,
	coalesce(sum(no_of_maternal_death_due_to_other_causes), 0) as no_of_maternal_death_due_to_other_causes,
	coalesce(sum(number_of_maternal_death_due_to_other_causes), 0) as number_of_maternal_death_due_to_other_causes,
	coalesce(sum(pw_provided_free_medicines_jssk), 0) as pw_provided_free_medicines_jssk,
	coalesce(sum(pw_provided_free_diet_jssk), 0) as pw_provided_free_diet_jssk,
	coalesce(sum(pw_provided_free_diagnostics_jssk), 0) as pw_provided_free_diagnostics_jssk,
	coalesce(sum(pw_provided_free_home_to_facility_trasport_jssk), 0) as pw_provided_free_home_to_facility_trasport_jssk,
	coalesce(sum(pw_provided_free_home_interfacility_transfers_jssk), 0) as pw_provided_free_home_interfacility_transfers_jssk,
	coalesce(sum(pw_provided_free_drop_back_to_home_jssk), 0) as pw_provided_free_drop_back_to_home_jssk,
	coalesce(sum(sick_infant_provided_free_medicines_jssk), 0) as sick_infant_provided_free_medicines_jssk,
	coalesce(sum(sick_infant_provided_free_drop_back_to_home_jssk), 0) as sick_infant_provided_free_drop_back_to_home_jssk,
	coalesce(sum(sick_infant_provided_free_diagnostics_jssk), 0) as sick_infant_provided_free_diagnostics_jssk,
	coalesce(sum(sick_infant_provided_free_home_to_facility_trasport_jssk), 0) as sick_infant_provided_free_home_to_facility_trasport_jssk,
	coalesce(sum(sick_infant_provided_free_home_interfacility_transfers_jssk), 0) as sick_infant_provided_free_home_interfacility_transfers_jssk,
	coalesce(sum(sick_infant_provided_free_drop_back_to_home_jssk), 0) as assick_infant_provided_free_drop_back_to_home_jssk
from
	health_infrastructure_details lhc
left join property on
	lhc.id = property.health_infra_id
left join hmis_rch_service_provided_during_year on
	lhc.id = hmis_rch_service_provided_during_year.health_infra_id
	and hmis_rch_service_provided_during_year.month_year = property.month_year
left join ncd_service_provided_during_year_t on
	lhc.id = ncd_service_provided_during_year_t.health_infra_id
	and ncd_service_provided_during_year_t.month_year = property.month_year
left join hmis_child_services_given_analytics on
	lhc.id = hmis_child_services_given_analytics.health_infa_id
	and hmis_child_services_given_analytics.month_year = property.month_year ),
final_data as (
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''1.1'' as "Sr No",
	''Total number of pregnant women registered for ANC '' as "Data Item",
	anc_reg as count
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''1.1.1'',
	''Out of the total ANC registered, number registered within 1st trimester (within 12 weeks)'',
	anc1
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''1.1.2'',
	''Number of High risk pregnant women identified'',
	high_risk
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''1.1.3'',
	''out of above number of High Risk Pregnant women received fiollw up visits'',
	high_risk_follow_up
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''1.2.1'',
	''Number of PW given TT1/Td1'',
	tt1
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''1.2.2'',
	''Number of PW given TT2/Td2'',
	tt2
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''1.2.3'',
	''Number of PW given TT/Td Booster'',
	tt_booster
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''1.2.4'',
	''Number of PW given 180 Iron Folic Acid (IFA) tablets '',
	no_of_pw_180_ifa_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''1.2.5'',
	''Number of PW given 360 Calcium tablets '',
	no_of_pw_ca_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''1.2.6'',
	''Number of PW given one Albendazole tablet after 1st trimester'',
	no_of_pw_alben_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''1.2.7'',
	''Number of PW received 4 or more ANC check ups'',
	no_of_pw_with_more_then_4_anc_checkup
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''1.2.8'',
	''Number of PW given ANC Corticosteroids in Pre Term Labour'',
	no_of_pw_anc_corticosteroids_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''1.3.1'',
	''New cases of PW with hypertension detected '',
	no_of_pw_with_hypertension
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''1.3.1.a'',
	''Out of the new cases of PW with hypertension detected, cases managed at institution '',
	no_of_pw_with_hypertension_migrated_at_institution
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''1.4.1'',
	''Number of PW tested for Haemoglobin (Hb ) 4 or more than 4 times for respective ANCs'',
	hb_test_more_than_4_time
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''1.4.2'',
	''Total Number of PW tested for Haemoglobin (Hb )'',
	hbsag_test_cnt
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''1.4.3'',
	''Out of Total Number of PW tested for Haemoglobin (Hb ):'',
	temp2
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''1.4.3.a'',
	''Number of PW having Hb level<11(7.1 to 10.9)'',
	no_of_pw__with_hb_count_less_then_11
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''1.4.3.b'',
	''Number of PW having Hb level<7 '',
	no_of_pw__with_hb_count_less_then_7
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''1.4.4'',
	''Number of PW treated for severe anaemia (Hb<7)'',
	no_of_pw_tested_for_anemia_with_hb_count_less_then_7
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''1.5.2'',
	''Number of PW tested positive for GDM'',
	no_of_pw_tested_for_gdm
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''1.6'',
	''Pregnant Women (PW) with Syphilis'',
	temp3
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''1.6.2.a'',
	''Number of pregnant women tested for Syphilis'',
	no_of_pw_tested_for_syphilis
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''1.6.2.b'',
	''Number of pregnant women tested found sero positive for Syphilis'',
	no_of_pw_tested_positive_for_syphilis
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''1.6.2.c'',
	''Number of syphilis positive pregnanat women treated for Syphilis'',
	no_of_pw_treated_for_syphilis
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''2.1'',
	''Deliveries conducted at Home'',
	no_of_home_del
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''2.1.1.a'',
	''Number of Home Deliveries attended by Skill Birth Attendant(SBA) (Doctor/Nurse/ANM/Midwife) '',
	home_del_by_sba
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''2.1.1.b'',
	''Number of Home Deliveries attended by Non SBA (Trained Birth Attendant(TBA) /Relatives/etc.)'',
	home_del_by_non_sba
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''2.1.2'',
	''Number of PW given Tablet Misoprostol during home delivery'',
	no_of_pw_misoprostol_given_home_del
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''2.2'',
	''Number of Institutional Deliveries conducted (Including C-Sections)'',
	no_of_inst_dl
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''2.2.1'',
	''Delivery took place in Transit (during home to health facility, in referral from one health facility to another, in ambulance, etc.)'',
	no_of_delivery_in_transit
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''2.2.2'',
	''Out of total institutional deliveries(excluding C-section), number of women have stayed till 48 hours '',
	no_of_inst_del_stayed_48_hrs
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''3.1'',
	''Total C -Section deliveries performed'',
	no_of_c_section_delivery
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''3.1.1'',
	''C-sections, performed at night (8 PM- 8 AM)'',
	no_of_c_section_delivery_at_night
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''4.1.1.a'',
	''Live Birth - Male'',
	live_birth_male
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''4.1.1.b'',
	''Live Birth - Female'',
	live_birth_female
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''4.1.2'',
	''Number of Pre term newborns ( < 37 weeks of pregnancy)'',
	no_of_pre_term_newborns
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''4.2'',
	''Abortion (spontaneous)'',
	abortion
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''4.3'',
	''Abortion by Medical methods'',
	abortion_medical_method
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''4.4'',
	''Abortion by Surgical methods'',
	abortion_surgical_method
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''4.3.1.a'',
	''MTP up to 12 weeks of pregnancy through '',
	mtp
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''4.3.1.a.i.'',
	''Medical methods'',
	mtp_medical_method
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''4.3.1.a.i.'',
	''Surgical methods'',
	mtp_surgical_method
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''4.3.1.b'',
	''MTP more than 12 weeks of pregnancy'',
	mtp_more_than_12_weeks
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''4.3.2.a'',
	''Post Abortion/ MTP Complications Identified'',
	mtp_complication_identified_post_abortion
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''4.3.2.b'',
	''Post Abortion/ MTP Complications Treated'',
	mtp_complication_treated_post_abortion
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''4.3.3'',
	''Number of women provided with post abortion/ MTP contraception '',
	no_of_pw_provided_contraception_post_abortion
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''4.4.1'',
	''Number of newborns weighed at birth'',
	weighed
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''4.4.2'',
	''Number of newborns having weight less than 2.5 kg'',
	weighed_less_than_2_5
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''4.4.3'',
	''Number of Newborns breast fed within 1 hour of birth '',
	breast_feeding_within_1_hr
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''4.4.4'',
	''Number of Newborns omplications identified (birth defects, deformity, birth asphyxia etc.)'',
	no_complications_observed
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''4.4.5'',
	''Out of above, newborns compilcations managed at the facility'',
	no_complications_managed_at_facility
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''4.4.6'',
	''out of newborns compilcations, cases refereed to higher facilities'',
	no_of_complications_refered_to_hf
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''5.1'',
	''Number of cases of pregnant women with Obstetric Complications attended (Antepartum haemorrhage (APH), Post-Partum Hemorrhage (PPH), Sepsis, Eclampsia, Obstructed labour and others) '',
	no_of_pw_with_obstetric_complications
from
	hmis_data
union all
select
	''CHC,SDH,DH'' as display_at,
	''5.2'',
	''Number of Complicated pregnancies treated with Blood Transfusion'',
	no_of_pw_treated_with_blood_transfusion
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''5.3'',
	''Number of complicated pregnancy cases referred to higher facilities'',
	no_of_complications_refered_to_hf
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''6.1'',
	''Women receiving 1st post partum checkups within 48 hours of home delivery'',
	no_of_pw_recived_post_partum_in_48_hrs_hd
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''6.3'',
	''Number of mothers provided full course of 180 IFA tablets after delivery'',
	no_of_pw_180_ifa_full_course_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''6.4'',
	''Number of mothers provided 360 Calcium tablets after delivery'',
	temp6
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''8.1.1'',
	''Number of Non Scalpel Vasectomy (NSV) / Conventional Vasectomy conducted'',
	no_of_nsv_or_cvc
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''8.2.1'',
	''Number of Laparoscopic sterilizations (excluding post abortion) conducted'',
	no_of_laparoscopic_sterilizations_conducted
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''8.2.2'',
	''Number of Interval Mini-lap (other than post-partum and post abortion) sterilizations conducted'',
	no_of_mini_lap_sterilization_conducted
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''8.2.3'',
	''Number of Postpartum sterilizations (within 7 days of delivery by minilap or concurrent with caesarean section) conducted'',
	no_of_postpartum_sterilizations
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''8.2.4'',
	''Number of Post Abortion sterilizations (within 7 days of spontaneous or surgical abortion) conducted'',
	no_of_post_abortion_sterilizations
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''8.3'',
	''Number of Interval IUCD Insertions (excluding PPIUCD and PAIUCD)'',
	no_of_interval_iucd_insertions
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''8.4'',
	''Number of Postpartum (within 48 hours of delivery) IUCD insertions'',
	no_of_postpartum_iucd_insertion
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''8.5'',
	''Number of Post Abortion (within 12 days of spontaneous or surgical abortion) IUCD insertions'',
	no_of_post_abortion_iucd_insertion
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''8.6'',
	''Number of IUCD Removals '',
	no_of_iucd_removal
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''8.8'',
	''Injectable Contraceptive-Antara Program- First Dose'',
	injectable_cap_first_dose
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''8.9'',
	''Injectable Contraceptive-Antara Program- Second Dose'',
	injectable_cap_second_dose
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''8.10'',
	''Injectable Contraceptive-Antara Program- Third Dose'',
	injectable_cap_third_dose
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''8.11'',
	''Injectable Contraceptive-Antara Program- Fourth or more than fourth'',
	injectable_cap_fourth_dose
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''8.12.a.'',
	''Number of Combined Oral Pills Cycle distributed by the facility'',
	no_of_oral_pills_distributed_by_facility
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''8.12.b.'',
	''Number of Combined Oral Pills Cycle distributed by ASHA under the HDC ( Home Delivery of Contraceptives)'',
	no_of_oral_pills_distributed_by_asha
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''8.13.a'',
	''Number of condom pieces distributed by the facility'',
	no_of_condom_distributed_by_facility
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''8.13.b'',
	''Number of Condom pieces distributed by ASHA under the HDC ( Home Delivery of Contraceptives)'',
	no_of_condom_distributed_by_asha
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''8.14.a'',
	''Number of Centchroman (weekly) pills distributed by the facility '',
	no_of_centchroman_pills_distributed_by_facility
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''8.14.b'',
	''Number of Centchroman (weekly) pills distributed by ASHA '',
	no_of_centchroman_pills_distributed_by_asha
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''8.16.a'',
	''Number of Pregnancy Testing kits utilized by the facility '',
	no_of_ptk_utilized_by_facility
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''8.16.b'',
	''Number of Pregnancy Testing kits utilized by ASHA '',
	no_of_ptk_utilized_by_ash
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.1.1'',
	''Child immunisation - Vitamin K (Birth Dose)'',
	vitamin_k_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.1.2'',
	''Child immunisation - BCG'',
	bcg_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.1.6'',
	''Child immunisation - Pentavalent 1'',
	penta_1_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.1.7'',
	''Child immunisation - Pentavalent 2'',
	penta_2_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.1.8'',
	''Child immunisation - Pentavalent 3'',
	penta_3_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.1.9'',
	''Child immunisation - OPV 0 (Birth Dose)'',
	opv_0_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.1.10'',
	''Child immunisation - OPV1'',
	opv_1_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.1.11'',
	''Child immunisation - OPV2'',
	opv_2_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.1.12'',
	''Child immunisation - OPV3'',
	opv_3_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.1.13'',
	''Child immunisation - Hepatitis-B0 (Birth Dose)'',
	hep_b_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.1.17'',
	''Child immunisation - Inactivated Injectable Polio Vaccine 1 (IPV 1)'',
	fipv_1_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.1.18'',
	''Child immunisation - Inactivated Injectable Polio Vaccine 2 (IPV 2) '',
	fipv_2_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.1.19'',
	''Child immunisation - Rotavirus 1'',
	rota_virus_1_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.1.20'',
	''Child immunisation - Rotavirus 2'',
	rota_virus_2_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.1.21'',
	''Child immunisation - Rotavirus 3'',
	rota_virus_3_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.2.1'',
	''Child immunisation (9-11months) - Measles & Rubella (MR)- 1st Dose'',
	measles_rubella_1_given_in_9_to_11_month
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.2.2'',
	''Child immunisation (9-11months) - Measles 1st dose'',
	measles_rubella_2_given_in_9_to_11_month
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.2.4'' ,
	''Number of children aged between 9 and 11 months fully immunized'',
	fully_immunized_bwtween_9_to_11_months
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.2.4.a'' ,
	''Children aged between 9 and 11 months fully immunized- Male'',
	fully_immunized_bwtween_9_to_11_months_male
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.2.4.b'' ,
	''Children aged between 9 and 11 months fully immunized - Female'',
	fully_immunized_bwtween_9_to_11_months_female
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.3.1'' ,
	''Child immunisation - Measles & Rubella (MR)- 1st Dose'',
	measles_rubella_1_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.3.2'' ,
	''Child immunisation - Measles-1st dose'',
	measles_1_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.4.1'' ,
	''Child immunisation - Measles & Rubella (MR)- 2nd Dose (16-24 months)'',
	measles_rubella_2_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.4.2'' ,
	''Child immunisation - Measles 2nd dose (More than 16 months)'',
	measles_or_rubella_2_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.4.3'' ,
	''Child immunisation - DPT 1st Booster '',
	dpt_booster_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.4.4'' ,
	''Child immunisation - OPV Booster'',
	opv_booster_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.6.1'',
	''Number of cases of AEFI -Minor'',
	no_of_cases_of_aefi_minor
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.6.2'',
	''Number of cases of AEFI - Severe'',
	no_of_cases_of_aefi_severe
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.6.3'',
	''Number of cases of AEFI - Serious'',
	no_of_cases_of_aefi_serious
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.8.1'',
	''Child immunisation - Vitamin A Dose - 1'',
	vitamin_a_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.9'',
	''Number of children (6-59 months) provided 8-10 doses (1ml) of IFA syrup (Bi weekly)'',
	ifa_given
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''9.11'',
	''Number of severely underweight children provided Health Checkup (0-5 yrs)'',
	unweighted_child_given_health_checkup
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''10.1'',
	''Childhood Diseases - Pneumonia'',
	childhood_diseases_pneumonia
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''10.2'',
	''Childhood Diseases - Asthma'',
	childhood_diseases_asthma
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''10.3'',
	''Childhood Diseases - Sepsis'',
	childhood_diseases_sepsis
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''10.4'',
	''Childhood Diseases - Diphtheria'',
	childhood_diseases_diphtheria
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''10.5'',
	''Childhood Diseases - Pertussis'',
	childhood_diseases_pertussis
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''10.6'',
	''Childhood Diseases - Tetanus Neonatorum'',
	childhood_diseases_tetanus_neonatorum
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''10.15'',
	''Childhood Diseases - Severe Acute Malnutrition (SAM)'',
	childhood_diseases_sam
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''14.0.1'',
	''HWC Screening services'',
	temp7
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''14.0.1.1'',
	''Hypertension'',
	temp8
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''14.0.1.1.a'',
	''Number of hypertension cases screened'',
	no_of_hypertension_cases_screened
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''14.0.1.1.b'',
	''out of above, Number diagnosed with hypertension'',
	no_of_hypertension_cases
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''14.0.1.1.c'',
	''Number of hypertension cases on treatment'',
	no_of_hypertension_cases_in_treatment
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''14.0.1.2.a'',
	''Number of diabetes cases screened'',
	no_of_diabetes_cases_screened
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''14.0.1.2.b'',
	''out of above, Number diagnosed with diabetes'',
	no_of_diabetes_cases
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''14.0.1.2.c'',
	''Number of diabetes cases on treatment'',
	no_of_diabetes_cases_in_treatment
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''14.0.1.3.a'',
	''Number of hypertension & diabetes cases screened'',
	no_of_hypertension_and_diabetes_cases_screened
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''14.0.1.3.b'',
	''out of above, Number diagnosed with hypertension & diabetes'',
	no_of_hypertension_and_diabetes_cases
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''14.0.1.3.c'',
	''Number of hypertension & diabetes cases on treatment'',
	no_of_hypertension_and_diabetes_cases_in_treatment
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''14.0.1.4.a'',
	''Number of Oral cancer cases screened'',
	no_of_oral_cancer_cases_screened
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''14.0.1.4.b'',
	''out of above, Number of oral cancer cases referred'',
	no_of_oral_cancer_cases
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''14.0.1.4.c'',
	''Number of oral cancer cases on follow up care'',
	no_of_oral_cancer_cases_in_followup
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''14.0.1.5.a'',
	''Number of breast cancer cases screened'',
	no_of_breast_cancer_cases_screened
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''14.0.1.5.b'',
	''out of above, Number of breast cases referred'',
	no_of_breast_cancer_cases
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''14.0.1.5.c'',
	''Number of breast cancer cases on follow up care'',
	no_of_breast_cancer_cases_in_treatment
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''14.0.1.6.a'',
	''Number of cervical cancer cases screened'',
	no_of_cervical_cases_screened
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''14.0.1.6.b'',
	''out of above, Number of cervical cases referred'',
	no_of_cervical_cases
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''14.0.1.6.c'',
	''Number of cervical cancer cases on follow up care'',
	no_of_cervical_cases_in_treatment
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''14.1.1'',
	''Outpatient - Diabetes'',
	no_of_outpatient_diabetes
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''14.1.2'',
	''Outpatient - Hypertension'',
	no_of_outpatient_hypertension
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''14.1.3'',
	''Outpatients- both Hypertension and Diabetes'',
	no_of_hypertension_and_diabetes_outpatients
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''14.2.1'',
	''Allopathic- Outpatient attendance'',
	no_of_allopathic_outpatient_attendance
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''14.8.1'',
	''Operation major (General and spinal anaesthesia)'',
	no_of_operation_major
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''14.8.4'',
	''Operation minor (No or local anaesthesia)'',
	no_of_operation_minor
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''14.14.1'',
	''Number of children admitted in NRC'',
	no_of_child_admitted_at_nrc
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''14.14.2'',
	''Number of children discharged with target weight gain from the NRCs'',
	no_of_child_discharge_after_weight_gain_nrc
from
	hmis_data
union all
select
	''PHC,CHC,SDH,DH'' as display_at,
	''15.1'',
	''Number of Lab Tests done'',
	no_of_lab_test_done
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''15.3.3'',
	''Pregnant women tested for HIV'',
	no_of_pw_tested_for_hiv
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.1.0'',
	''New born deaths within 24 hrs(1 to 23 Hrs) of birth at facility'',
	no_of_deaths_in_1_to_24_hrs_at_facility
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''16.1.1'',
	''New born deaths within 24 hrs(1 to 23 Hrs) of birth at community'',
	no_of_deaths_in_1_to_24_hrs_at_community
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.1.2'',
	''New born deaths in transit'',
	no_of_deaths_in_transit
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.1.3'',
	''New born deaths within 1 week (1 to 7 days) at facility'',
	no_of_deaths_in_1_week_at_facility
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''16.1.4'',
	''New born deaths within 1 week (1 to 7 days) at community'',
	no_of_deaths_in_1_week_at_community
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.1.5'',
	''New born deaths within 8 to 28 days at facility'',
	no_of_deaths_in_8_to_28_days_at_facility
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''16.1.6'',
	''New born deaths within 8 to 28 days at Community'',
	no_of_deaths_in_8_to_28_days_at_community
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.2.1'',
	''Infant Deaths up to 4 weeks due to Sepsis'',
	id_upto_4_weeks_dueto_sepsis
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.2.2'',
	''Infant Deaths up to 4 weeks due to Asphyxia'',
	id_upto_4_weeks_dueto_asphyxia
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.2.3'',
	''Infant Deaths up to 4 weeks due to Other causes'',
	id_upto_4_weeks_dueto_other
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.3.1'',
	''Number of Infant Deaths (1 -12 months) due to Pneumonia'',
	id_upto_12_moths_dueto_pneumonia
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.3.2'',
	''Number of Infant Deaths (1 -12 months) due to Diarrhoea'',
	id_upto_12_moths_dueto_diarrhoea
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.3.3'',
	''Number of Infant Deaths (1 -12 months) due to Fever related'',
	id_upto_12_moths_dueto_feaver
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.3.4'',
	''Number of Infant Deaths (1 -12 months) due to Measles'',
	id_upto_12_moths_dueto_measles
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.3.5'',
	''Number of Infant Deaths (1 -12 months) due to Others'',
	id_upto_12_moths_dueto_other
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.3.6'',
	''Infant Deaths up to 1 to 12 month at facility'',
	no_of_infant_deaths_1_to_12_months_at_facility
from
	hmis_data
union all
select
	''SC,PHC'' as display_at,
	''16.3.7'',
	''Infant Deaths up to 1 to 12 month at community'',
	no_of_infant_deaths_1_to_12_months_at_community
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.3.8'',
	''Infant deaths in transit (1 week to 12 months)'',
	no_of_infant_deaths_1_to_12_months_in_transit
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.4.1'',
	''Number of Child Deaths (1 -5 years) due to Pneumonia'',
	cd_upto_5_years_dueto_pneumonia
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.4.2'',
	''Number of Child Deaths (1 -5 years) due to Diarrhoea'',
	cd_upto_5_years_dueto_diarrhoea
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.4.3'',
	''Number of Child Deaths (1 -5 years) due to Fever related'',
	cd_upto_5_years_dueto_fever
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.4.4'',
	''Number of Child Deaths (1 -5 years) due to Measles'',
	cd_upto_5_years_dueto_measles
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.4.5'',
	''Number of Child Deaths (1 -5 years) due to Others'',
	cd_upto_5_years_dueto_others
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.4.6'',
	''Child deaths in transit (1- 5 years) du to any cause'',
	no_of_child_death_1_to_5_years_due_to_cause
from
	hmis_data
union all
select
	''DHQ'' as display_at,
	''16.4.7'',
	''Number of Child deaths reported through Community based Child Death Review (CBCDR)'',
	no_of_child_death_reported_through_cbcdr
from
	hmis_data
union all
select
	''CHC,SDH,DH'' as display_at,
	''16.4.8'',
	''Total Facility Based Child Death Reviews (FBCDR) done'',
	total_fbcdr_done
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.5.1'',
	''Number of Maternal Deaths due to APH (Antepartum Haemmorhage)'',
	no_of_maternal_death_due_to_aph
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.5.2'',
	''Number of Maternal Deaths due to PPH (Postpartum Haemmorhage)'',
	no_of_maternal_death_due_to_pr_pph_issue
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.5.3'',
	''Number of Maternal Deaths due to Anaemia'',
	no_of_maternal_death_due_to_pr_anaemia_issue
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.5.4'',
	''Number of Maternal Deaths due to Pregnancy related sepsis'',
	no_of_maternal_death_due_to_pr_sepsis
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.5.6'',
	''Number of Maternal Deaths due to Abortive outcome'',
	no_of_maternal_death_due_to_abortive_outcome
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.5.7'',
	''Number of Maternal Deaths due to Obstructed/prolonged labour'',
	no_of_maternal_death_due_to_obstructed_labour
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.5.8'',
	''Number of Maternal Deaths due to Hypertensive disorder in pregnancy, birth and puerperium'',
	no_of_maternal_death_due_to_hypertensive_disorder
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.5.9.a'',
	''Cardiac Disorder'',
	no_of_maternal_death_due_to_cd
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.5.9.b'',
	''Liver Disorder'',
	no_of_maternal_death_due_to_ld
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.5.9.c'',
	''Renal Disorder'',
	no_of_maternal_death_due_to_rd
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.5.9.d'',
	''Infections/Infestations'',
	no_of_maternal_death_due_to_infection
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.5.9.e'',
	''Brought Dead (in transit)'',
	no_of_maternal_death_due_to_bd_intrasit
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.5.10'',
	''Number of Maternal Deaths due to Other Causes'',
	no_of_maternal_death_due_to_other_causes
from
	hmis_data
union all
select
	''SC,PHC,CHC,SDH,DH'' as display_at,
	''16.5.11'',
	''Number of Maternal Deaths due to Other Causes (causes not known)'',
	number_of_maternal_death_due_to_other_causes
from
	hmis_data
union all
select
	''DHQ'' as display_at,
	''25.1.1'',
	''Number of Pregnant Women provided - Free Medicines under JSSK'',
	pw_provided_free_medicines_jssk
from
	hmis_data
union all
select
	''DHQ'' as display_at,
	''25.1.2'',
	''Number of Pregnant Women provided - Free Diet under JSSK'',
	pw_provided_free_diet_jssk
from
	hmis_data
union all
select
	''DHQ'' as display_at,
	''25.1.3'',
	''Number of Pregnant Women provided - Free Diagnostics under JSSK'',
	pw_provided_free_diagnostics_jssk
from
	hmis_data
union all
select
	''DHQ'' as display_at,
	''25.1.4'',
	''Number of Pregnant Women provided - Free Home to facility transport under JSSK'',
	pw_provided_free_home_to_facility_trasport_jssk
from
	hmis_data
union all
select
	''DHQ'' as display_at,
	''25.1.5'',
	''Number of Pregnant Women provided - Interfacility transfers when needed under JSSK'',
	pw_provided_free_home_interfacility_transfers_jssk
from
	hmis_data
union all
select
	''DHQ'' as display_at,
	''25.1.6'',
	''Number of Pregnant Women provided - Free Drop Back home under JSSK'',
	pw_provided_free_drop_back_to_home_jssk
from
	hmis_data
union all
select
	''DHQ'' as display_at,
	''25.2.1'',
	''Number of sick infants provided - Free Medicines under JSSK'',
	sick_infant_provided_free_medicines_jssk
from
	hmis_data
union all
select
	''DHQ'' as display_at,
	''25.2.2'',
	''Number of sick infants provided - Free Diagnostics under JSSK'',
	sick_infant_provided_free_diagnostics_jssk
from
	hmis_data
union all
select
	''DHQ'' as display_at,
	''25.2.3'',
	''Number of sick infants provided - Free Home to facility transport under JSSK'',
	sick_infant_provided_free_home_to_facility_trasport_jssk
from
	hmis_data
union all
select
	''DHQ'' as display_at,
	''25.2.4'',
	''Number of sick infants provided - Interfacility transfers when needed under JSSK'',
	sick_infant_provided_free_home_interfacility_transfers_jssk
from
	hmis_data
union all
select
	''DHQ'' as display_at,
	''25.2.5'',
	''Number of sick infants provided - Free Drop Back home under JSSK'',
	sick_infant_provided_free_drop_back_to_home_jssk
from
	hmis_data )
select
	"Sr No",
	"Data Item",
	count
from
	final_data
where display_at ilike concat(''%'',(select cast(infra_type as text) from property), ''%'');',true,'ACTIVE','868ffd49-a3ca-4ddd-9e12-c8ed83d20f32'),
	 (492,1,'2019-02-14 15:22:28.219',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','7ea127e9-b6fb-405d-af7c-7e14dcb2165e'),
	 (1732,60512,'2020-09-07 17:08:14.012',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','d15bc224-3e67-4a2b-85d6-da992cbbde4d'),
	 (478,57698,'2019-02-14 14:18:44.596',1,'2021-01-13 20:22:06.427965','location_id','select name as location_id from location_master  where id = #location_id#',true,'ACTIVE','526bfe51-2554-4e54-a408-035680b0ab22'),
	 (729,63746,'2019-02-28 15:11:24.867',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #location_id#',true,'ACTIVE','7c1f4303-cecd-47ff-b14e-86998540f467');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (728,63746,'2019-02-28 15:01:11.566',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(lm.name,''> '' order by lhcd.depth desc) as location_id 
from location_hierchy_closer_det lhcd 
inner join location_master lm on lm.id = lhcd.parent_id 
where lhcd.child_id = #location_id#',true,'ACTIVE','a79ccd26-7411-4ca9-a0ca-a2c5fe8dbc63'),
	 (1703,60512,'2020-09-07 16:31:12.442',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id,show_current_location','with prefered_language as(
	select case when prefered_language = ''EN'' then true else false end as is_english
	from um_user
	where id = #loggedInUserId#
),distinct_health_infras as (
	select distinct fsam_admission_screening_center from child_cmtc_nrc_analytics_details
),location_detail as (
	select child_id,depth
	from location_hierchy_closer_det
	where parent_id = #location_id#
	and case when #show_current_location# then depth in (0,1) else depth = 1 end
),dates as (
	select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date
),centers_count as (
	select location_detail.child_id,
	count(*) as total_centers,
	sum(health_infrastructure_details.no_of_beds) as total_beds
	from location_detail
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_detail.child_id
	and location_hierchy_closer_det.depth <= (case when location_detail.depth < 1 then 0 else 8 end)
	inner join health_infrastructure_details on location_hierchy_closer_det.child_id = health_infrastructure_details.location_id
	where health_infrastructure_details.is_cmtc
	or health_infrastructure_details.is_nrc
	or health_infrastructure_details.is_sncu
	or health_infrastructure_details.id in (select fsam_admission_screening_center from distinct_health_infras)
	group by location_detail.child_id
),counts as (
	select location_detail.child_id,
	sum(less_than_6_month_boys) as less_than_6_month_boys,
	sum(less_than_6_month_girls) as less_than_6_month_girls,
	sum(more_than_6_month_boys) as more_than_6_month_boys,
	sum(more_than_6_month_girls) as more_than_6_month_girls,
	sum(less_than_3_sd) as less_than_3_sd,
	sum(muac_less_than_11_5) as muac_less_than_11_5,
	sum(sd_and_muac) as sd_and_muac,
	sum(oedema) as oedema,
	sum(height_less_than_45) as height_less_than_45,
	sum(inpatient_days) as inpatient_days,
	sum(visited_by_pediatrician) as visited_by_pediatrician,
	sum(discharge_from_facility) as discharge_from_facility,
	sum(cured) as cured,
	sum(defaulters) as defaulters,
	sum(weight_gain_not_15) as weight_gain_not_15,
	sum(death) as death,
	sum(referred_for_cmam) as referred_for_cmam,
	sum(fsam_discharge_5gm_kg_day_gain) as fsam_discharge_5gm_kg_day_gain,
	sum(weight_gain_15) as weight_gain_15
	from location_detail
	inner join location_hierchy_closer_det on location_detail.child_id = location_hierchy_closer_det.parent_id
	and location_hierchy_closer_det.depth <= (case when location_detail.depth < 1 then 0 else 8 end)
	inner join child_cmtc_nrc_admited_analytics_location_wise_details on location_hierchy_closer_det.child_id = child_cmtc_nrc_admited_analytics_location_wise_details.location_id
	inner join dates on child_cmtc_nrc_admited_analytics_location_wise_details.month_year between dates.from_date and dates.to_date
	group by location_detail.child_id
),medical_transfer_counts as (
	select location_detail.child_id,
	count(*) as medical_transfer
	from location_detail
	inner join location_hierchy_closer_det on location_detail.child_id = location_hierchy_closer_det.parent_id
	and location_hierchy_closer_det.depth <= (case when location_detail.depth < 1 then 0 else 8 end)
	inner join health_infrastructure_details on location_hierchy_closer_det.child_id = health_infrastructure_details.location_id
	inner join child_cmtc_nrc_referral_detail on health_infrastructure_details.id = child_cmtc_nrc_referral_detail.referred_from
	inner join dates on child_cmtc_nrc_referral_detail.referred_date between dates.from_date and dates.to_date
	where health_infrastructure_details.is_cmtc
	or health_infrastructure_details.is_nrc
	or health_infrastructure_details.is_sncu
	or health_infrastructure_details.id in (select fsam_admission_screening_center from distinct_health_infras)
	group by location_detail.child_id
),details as (
	select location_master.id as hidden_location_id,
	case when prefered_language.is_english and location_master.english_name is not null then location_master.english_name else location_master.name end as loc,
	coalesce(centers_count.total_centers,0) as total_centers,
	coalesce(centers_count.total_beds,0) as total_beds,
	coalesce(counts.less_than_6_month_boys + counts.less_than_6_month_girls,0) as less_than_6_months,
	coalesce(counts.more_than_6_month_boys + counts.more_than_6_month_girls,0) as more_than_6_months,
	coalesce(
	counts.less_than_6_month_boys
	+ counts.less_than_6_month_girls
	+ counts.more_than_6_month_boys
	+ counts.more_than_6_month_girls
	,0) as total_admission,
	coalesce(counts.less_than_3_sd,0) as less_than_3_sd,
	coalesce(counts.muac_less_than_11_5,0) as muac_less_than_11_5,
	coalesce(counts.sd_and_muac,0) as sd_and_muac,
	coalesce(counts.oedema,0) as oedema,
	coalesce(counts.height_less_than_45,0) as height_less_than_45,
	coalesce(counts.inpatient_days) as inpatient_days,
	cast(dates.to_date as date) - cast(dates.from_date as date) as no_of_in_period_days,
	extract(month from age(cast(dates.to_date as date),cast(dates.from_date as date))) as no_of_in_period_months,
	coalesce(
	counts.less_than_3_sd
	+ counts.muac_less_than_11_5
	+ counts.sd_and_muac
	+ counts.oedema
	+ counts.height_less_than_45
	,0) as criteria_total,
	coalesce(counts.visited_by_pediatrician,0) as visited_by_pediatrician,
	coalesce(counts.discharge_from_facility,0) as discharge_from_facility,
	coalesce(counts.cured,0) as cured,
	coalesce(counts.defaulters,0) as defaulters,
	coalesce(counts.weight_gain_not_15) as weight_gain_not_15,
	coalesce(medical_transfer_counts.medical_transfer,0) as medical_transfer,
	coalesce(counts.death,0) as death,
	coalesce(counts.referred_for_cmam,0) as referred_for_cmam,
	coalesce(counts.fsam_discharge_5gm_kg_day_gain,0) as fsam_discharge_5gm_kg_day_gain,
	coalesce(counts.weight_gain_15,0) as weight_gain_15
	from location_detail
	inner join dates on true
	inner join location_master on location_master.id = location_detail.child_id
	left join centers_count on location_detail.child_id = centers_count.child_id
	left join counts on location_detail.child_id = counts.child_id
	left join medical_transfer_counts on location_detail.child_id = medical_transfer_counts.child_id
	cross join prefered_language
)
select row_number() over() as "Sr.No",
details.loc as "Location",
details.hidden_location_id,
details.total_centers as "Total Centers",
details.total_beds as "Total Beds",
details.less_than_6_months as "Less than 6 months",
details.more_than_6_months as "More than 6 months",
details.total_admission as "Total Admission",
details.less_than_3_sd as "Less than 3SD",
details.muac_less_than_11_5 as "Less than 11.5 MUAC",
details.sd_and_muac as "Both",
details.oedema as "Oedema",
details.height_less_than_45 as "Other (Less than 45cm length)",
details.criteria_total as "Total",
	case when details.total_admission = 0 or details.total_admission is null or details.total_beds = 0 or details.total_beds is null then 0 else
	round((details.total_admission * 100.0)/(details.total_beds*(2* case when details.no_of_in_period_months = 0 then 1 else details.no_of_in_period_months end))) end as "Admission Rate",
	case when details.inpatient_days = 0 or details.inpatient_days is null or details.no_of_in_period_days = 0 or details.no_of_in_period_days is null
	or details.total_beds = 0 or details.total_beds is null then 0 else 
	(details.inpatient_days * 100) / (details.no_of_in_period_days * details.total_beds) end as "Bed Occupancy rate (BOR)",
details.visited_by_pediatrician as "Visited by pediatrician",
	case when details.visited_by_pediatrician = 0 or details.visited_by_pediatrician is null or details.total_admission = 0 or details.total_admission is null then 0 else
	round(details.visited_by_pediatrician * 100.0/details.total_admission) end as "percent_col_Visited by Pediatrician",
details.discharge_from_facility as "Discharge from facility",
	case when details.discharge_from_facility = 0 or details.discharge_from_facility is null or details.total_admission = 0 or details.total_admission is null then 0 else
	round(details.discharge_from_facility * 100.0/details.total_admission) end as "percent_col_Discharge from facility",
details.cured as "Improved nutritional status on discharge from facility",
	case when details.cured = 0 or details.cured is null or details.discharge_from_facility = 0 or details.discharge_from_facility is null then 0 else
	round(details.cured * 100.0/details.discharge_from_facility) end as "percent_col_Improved nutritional status on discharge from facility",
details.defaulters as "Defaulters",
	case when details.defaulters = 0 or details.defaulters is null or details.discharge_from_facility = 0 or details.discharge_from_facility is null then 0 else
	round(details.defaulters * 100.0/details.discharge_from_facility) end as "percent_col_Defaulters",
details.weight_gain_not_15 as "Non-respondants",
	case when details.weight_gain_not_15 = 0 or details.weight_gain_not_15 is null or details.discharge_from_facility = 0 or details.discharge_from_facility is null then 0 else
	round(details.weight_gain_not_15 * 100.0/details.discharge_from_facility) end as "percent_col_Non-respondants",
details.medical_transfer as "Medical Transfer",
	case when details.medical_transfer = 0 or details.medical_transfer is null or details.total_admission = 0 or details.total_admission is null then 0 else
	round(details.medical_transfer * 100.0/details.total_admission) end as "percent_col_Medical Transfer",
details.death as "Death",
	case when details.death = 0 or details.death is null or details.total_admission = 0 or details.total_admission is null then 0 else
	round(details.death * 100.0/details.total_admission) end as "percent_col_Death",
details.referred_for_cmam as "Child referred for enrolling in CMAM program",
	case when details.referred_for_cmam = 0 or details.referred_for_cmam is null or details.discharge_from_facility = 0 or details.discharge_from_facility is null then 0 else
	round(details.referred_for_cmam * 100.0/details.discharge_from_facility) end as "percent_col_Child referred for enrolling in CMAM program",
details.fsam_discharge_5gm_kg_day_gain as "Weight gain more than 5gm/kg/day",
	case when details.fsam_discharge_5gm_kg_day_gain = 0 or details.fsam_discharge_5gm_kg_day_gain is null or details.total_admission = 0 or details.total_admission is null then 0 else
	round(details.fsam_discharge_5gm_kg_day_gain * 100.0/details.total_admission) end as "percent_col_Weight gain more than 5gm/kg/day",
details.weight_gain_15 as "15% weight gain",
	case when details.weight_gain_15 = 0 or details.weight_gain_15 is null or details.discharge_from_facility = 0 or details.discharge_from_facility is null then 0 else
	round(details.weight_gain_15 * 100.0/details.discharge_from_facility) end as "percent_col_15% weight gain"
from details
union all
select null,
''<b>Total<b>'',
#location_id#,
sum(details.total_centers),
sum(details.total_beds),
sum(details.less_than_6_months),
sum(details.more_than_6_months),
sum(details.total_admission),
sum(details.less_than_3_sd),
sum(details.muac_less_than_11_5),
sum(details.sd_and_muac),
sum(details.oedema),
sum(details.height_less_than_45),
sum(details.criteria_total),
	case when (sum(details.total_admission) = 0 or sum(details.total_admission) is null or sum(details.total_beds) = 0 or sum(details.total_beds) is null) then 0 else
	round((sum(details.total_admission)*100.0)/(sum(details.total_beds)*(2* case when sum(details.no_of_in_period_months) = 0 then 1 else sum(details.no_of_in_period_months) end))) end,
	case when sum(details.no_of_in_period_days) = 0 or sum(details.no_of_in_period_days) is null or sum(details.total_beds) = 0 or sum(details.total_beds) is null then 0 else
(sum(details.inpatient_days) * 100) / (sum(details.no_of_in_period_days) * sum(details.total_beds)) end,
sum(details.visited_by_pediatrician),
	case when (sum(details.visited_by_pediatrician) = 0 or sum(details.visited_by_pediatrician) is null or sum(details.total_admission) = 0 or sum(details.total_admission) is null) then 0 else
	round(sum(details.visited_by_pediatrician)*100.0/sum(details.total_admission)) end,
sum(details.discharge_from_facility),
	case when (sum(details.discharge_from_facility) = 0 or sum(details.discharge_from_facility) is null or sum(details.total_admission) = 0 or sum(details.total_admission) is null) then 0 else
	round(sum(details.discharge_from_facility)*100.0/sum(details.total_admission)) end,
sum(details.cured),
	case when (sum(details.cured) = 0 or sum(details.cured) is null or sum(details.discharge_from_facility) = 0 or sum(details.discharge_from_facility) is null) then 0 else
	round(sum(details.cured)*100.0/sum(details.discharge_from_facility)) end,
sum(details.defaulters),
	case when (sum(details.defaulters) = 0 or sum(details.defaulters) is null or sum(details.discharge_from_facility) = 0 or sum(details.discharge_from_facility) is null) then 0 else
	round(sum(details.defaulters)*100.0/sum(details.discharge_from_facility)) end,
sum(details.weight_gain_not_15),
	case when (sum(details.weight_gain_not_15) = 0 or sum(details.weight_gain_not_15) is null or sum(details.discharge_from_facility) = 0 or sum(details.discharge_from_facility) is null) then 0 else
	round(sum(details.weight_gain_not_15)*100.0/sum(details.discharge_from_facility)) end,	
sum(details.medical_transfer),
	case when (sum(details.medical_transfer) = 0 or sum(details.medical_transfer) is null or sum(details.total_admission) = 0 or sum(details.total_admission) is null) then 0 else
	round(sum(details.medical_transfer)*100.0/sum(details.total_admission)) end,
sum(details.death),
	case when (sum(details.death) = 0 or sum(details.death) is null or sum(details.total_admission) = 0 or sum(details.total_admission) is null) then 0 else
	round(sum(details.death)*100.0/sum(details.total_admission)) end,
sum(details.referred_for_cmam),
	case when (sum(details.referred_for_cmam) = 0 or sum(details.referred_for_cmam) is null or sum(details.discharge_from_facility) = 0 or sum(details.discharge_from_facility) is null) then 0 else
	round(sum(details.referred_for_cmam)*100.0/sum(details.discharge_from_facility)) end,
sum(details.fsam_discharge_5gm_kg_day_gain),
	case when (sum(details.fsam_discharge_5gm_kg_day_gain) = 0 or sum(details.fsam_discharge_5gm_kg_day_gain) is null or sum(details.total_admission) = 0 or sum(details.total_admission) is null) then 0 else
	round(sum(details.fsam_discharge_5gm_kg_day_gain)*100.0/sum(details.total_admission)) end,
sum(details.weight_gain_15),
	case when (sum(details.weight_gain_15) = 0 or sum(details.weight_gain_15) is null or sum(details.discharge_from_facility) = 0 or sum(details.discharge_from_facility) is null) then 0 else
	round(sum(details.weight_gain_15)*100.0/sum(details.discharge_from_facility)) end
from details;',true,'ACTIVE','ca2edd37-a735-459f-b91c-e721dce35be8'),
	 (1017,60512,'2019-04-22 15:46:29.512',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id','--TT1 given(ANC Services Provided During The Year)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date,
to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),member_det as (
	select r.member_id, r.tt1_location_id as loc_id,
	r.unique_health_id, r.family_id, 
	r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.tt1_given,''DD/MM/YYYY'') as tt1_given
	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, parameters p
	where r.tt1_location_id  = l.child_id 
	and l.parent_id = p.location_id
	and r.tt1_given between p.from_date and p.to_date
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	order by r.tt1_given
	#limit_offset#
), loc_det as (
	select loc.loc_id, 
string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det)loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.tt1_given as "TT1 given",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','3f05fe14-6e46-4815-b139-ed167803efdb'),
	 (488,57698,'2019-02-14 14:24:24.756',1,'2021-01-13 20:22:06.427965','course_id','select course_name as course_id from tr_course_master  where course_id=#course_id#',true,'ACTIVE','860b0dd2-6d9d-44eb-a7a4-e3e90ec2f798'),
	 (464,1,'2019-02-14 13:20:48.876',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','508115b5-1236-46d7-8ca5-5671315bf8ac'),
	 (467,1,'2019-02-14 13:20:48.89',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Children with Any other Birth defects(State Level Monthly Compilation Sheet for Screening of Birth Defects)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.delivery_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.delivery_location_id and m.id = c.member_id 
	and l.parent_id = #location_id#
	and c.has_any_other_birth_defect = true
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end), ''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) ,
family_head as (
	select a.id as member_id,
	concat(im2.first_name,'' '',im2.middle_name,'' '',im2.last_name) as FamilyHead,
	im2.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join child_det a on a.id = im.id
	inner join imt_family imf on imf.family_id = im.family_id
	inner join imt_member im2 on imf.hof_id = im2.id
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when family_head.FamilyHeadMobileNo is not null then FamilyHeadMobileNo else ''-'' end as "Contact Number",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id
left join family_head on family_head.member_id = child_det.id;',true,'ACTIVE','06e44420-1efc-4da4-96b2-eeb3ac8407ad'),
	 (444,1,'2019-02-14 00:41:48.251',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','ef1af98b-3b18-4f38-9998-5eb8ecf006cf'),
	 (443,1,'2019-02-14 00:39:34.962',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Children with Develop mental dysplasia of Hip Birth defects(State Level Monthly Compilation Sheet for Screening of Birth Defects)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.delivery_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.delivery_location_id and m.id = c.member_id 
	and l.parent_id = #location_id#
	and c.has_develop_mental_dysplasia_of_hip = true
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end), ''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) ,
family_head as (
	select a.id as member_id,
	concat(im2.first_name,'' '',im2.middle_name,'' '',im2.last_name) as FamilyHead,
	im2.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join child_det a on a.id = im.id
	inner join imt_family imf on imf.family_id = im.family_id
	inner join imt_member im2 on imf.hof_id = im2.id
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when family_head.FamilyHeadMobileNo is not null then FamilyHeadMobileNo else ''-'' end as "Contact Number",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id
left join family_head on family_head.member_id = child_det.id;',true,'ACTIVE','e412d22e-5312-40d5-9016-89f1d278a700'),
	 (1730,60512,'2020-09-07 17:06:32.655',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','fdc48b12-ffdf-4151-8bbf-4a4363e4444b'),
	 (463,1,'2019-02-14 13:19:30.763',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Children with Retinopathy of prematurity Birth defects(State Level Monthly Compilation Sheet for Screening of Birth Defects)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.delivery_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.delivery_location_id and m.id = c.member_id 
	and l.parent_id = #location_id#
	and c.has_retinopathy_of_prematurity = true
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end), '' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) ,
family_head as (
	select a.id as member_id,
	concat(im2.first_name,'' '',im2.middle_name,'' '',im2.last_name) as FamilyHead,
	im2.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join child_det a on a.id = im.id
	inner join imt_family imf on imf.family_id = im.family_id
	inner join imt_member im2 on imf.hof_id = im2.id
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when family_head.FamilyHeadMobileNo is not null then FamilyHeadMobileNo else ''-'' end as "Contact Number",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id
left join family_head on family_head.member_id = child_det.id;',true,'ACTIVE','6dbeaf9b-4f05-4716-85c7-043264b16ca2');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (56,1027,'2018-06-18 14:12:30.211',1,'2021-01-13 20:22:06.427965','course_id,role_id,loggedInUserId,location_id','with location_det as(
select child_id as loc_id from location_hierchy_closer_det  
where parent_id in (case when #location_id# is not null then  #location_id# else (select loc_id from um_user_location where user_id = #loggedInUserId# and state = ''ACTIVE'') end)
),users AS (
SELECT distinct on (uu.id) uu.id , tcrr.role_id, tcrr.course_id, uu.first_name, uu.last_name ,tr_course_master.module_id,tr_course_master.course_name, urm.name FROM 
	tr_course_master
	inner join tr_course_role_rel tcrr on tcrr.course_id = tr_course_master.course_id and tr_course_master.course_state = ''ACTIVE''
	INNER JOIN um_user uu ON uu.role_id = tcrr.role_id and uu.state = ''ACTIVE''
	inner join um_user_location ul on ul.state = ''ACTIVE'' and ul.user_id = uu.id 
	inner join um_role_master urm on urm.id = uu.role_id
	inner join location_det ld on ld.loc_id = ul.loc_id where
	uu.role_id=#role_id# and tr_course_master.course_id =#course_id#

	 
),production as (
	SELECT us.role_id, us.course_id, us.id, concat(us.first_name,'' '',us.last_name) as "Full Name" , course_name as "Course Name", us.name as "Role"
	from tr_certificate_master tcm 
	INNER JOIN users us on us.id = tcm.user_id and tcm.course_id = us.course_id
	where tcm.certificate_type = ''COURSECOMPLETION'' and us.course_id not in (1,7,10,11,26)
	
	union all
	SELECT us.role_id, us.course_id, us.id, concat(us.first_name,'' '',us.last_name) as "Full Name", course_name as "Course Name", us.name as "Role"
	from tr_certificate_master tcm 
	INNER JOIN users us on us.id = tcm.user_id and tcm.course_id = us.course_id
	inner join field_value_master fvm on fvm.id = us.module_id
	inner join user_form_access ufa on ufa.form_code = fvm.field_value and ufa.user_id = us.id
	where tcm.certificate_type = ''COURSECOMPLETION'' and us.course_id in (1,7,10,11,26) and ufa.state=''MOVE_TO_PRODUCTION''
)
,
productionfinal as (
select  distinct on (id) "Full Name", "Course Name", "Role" from production
)
select ROW_NUMBER() over () as "Sr. No.",* from productionfinal',true,'ACTIVE','739727ba-f446-47e2-95ed-3a70d3cbf5a5'),
	 (32,1027,'2018-05-14 17:08:59.561',1,'2021-01-13 20:22:06.427965','course_id,role_id,loggedInUserId,location_id','with location_det as(
select child_id as loc_id from location_hierchy_closer_det  
where parent_id in (select distinct case when #location_id# is not null then #location_id# else loc_id end from um_user_location where user_id = #loggedInUserId# and state = ''ACTIVE'')
),users AS (
SELECT tcrr.role_id, tcrr.course_id, 
    uu.id,tr_course_master.module_id,urm.name as roleName,
	uu.first_name,uu.last_name,course_name
	FROM tr_course_master
	INNER JOIN tr_course_role_rel tcrr on tcrr.course_id = tr_course_master.course_id 
    and tr_course_master.course_state = ''ACTIVE''
	INNER JOIN um_user uu ON uu.role_id = tcrr.role_id and uu.state = ''ACTIVE''
	INNER JOIN um_user_location ul on ul.state = ''ACTIVE'' and ul.user_id = uu.id 
	INNER JOIN location_det ld on ld.loc_id = ul.loc_id
	INNER JOIN um_role_master urm on urm.id = uu.role_id
	WHERE 
	uu.role_id=#role_id# and tr_course_master.course_id =#course_id#
),
practiced as (
	SELECT distinct on(us.id) concat(us.first_name,'' '',us.last_name) as "Full Name",
	TO_CHAR(cast(ttm.effective_date as date),''ddth Mon yyyy'') as "Training Date",
	case when ttm.location_name is null then ''N/A'' else ttm.location_name end as "Location",
	concat(trainer.first_name,'' '',trainer.last_name) as "Trainer",
	course_name as "Course Name",
        us.roleName as "Role Name"
	from tr_certificate_master tcm 
	INNER JOIN users us on us.id = tcm.user_id and tcm.course_id = us.course_id
	inner join listvalue_field_value_detail fvm on fvm.id = us.module_id
	
	left join user_form_access ufa on ufa.form_code = fvm.value and ufa.user_id = us.id
	INNER JOIN tr_training_master ttm ON tcm.training_id = ttm.training_id
	inner join tr_training_primary_trainer_rel tpr on ttm.training_id = tpr.training_id
	inner join um_user trainer on tpr.primary_trainer_id = trainer.id
	--INNER JOIN tr_course_master cm on cm.course_id = tcm.course_id
	where tcm.certificate_type = ''COURSECOMPLETION'' and us.course_id in (1,7,10,11,26)
	and ufa.form_code is null
	--ttm.training_state = ''SUBMITTED'' and tcm.certificate_type = ''COURSECOMPLETION'' 
	--and us.state = ''ACTIVE'' and cm.course_state=''ACTIVE''
)
select ROW_NUMBER() over () as "Sr. No.",* from practiced',true,'ACTIVE','8f4ef49f-3b1f-4fd4-9c42-324c6e0549e7'),
	 (448,1,'2019-02-14 00:43:54.676',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','f5c69b7e-8aea-463b-8216-2aa7cb6ea67a'),
	 (1643,78434,'2020-06-24 11:53:23.866',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id','--Total ANC Reg.(Anemia Status Of Registered ANC Report)
with parameters as (
    select CAST(#location_id# AS INTEGER) as location_id,
    cast(''#demographic_location_id#'' as TEXT) as demographic_group,
    to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end, ''MM-DD-YYYY'') as from_date ,
	to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end, ''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date,
    (select report_preferred_language from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
member_det as (
    select
    r.member_id
    ,r.native_location_id as loc_id
    ,r.unique_health_id
    ,r.family_id
    ,r.member_name as name
    ,p.preferred_language
	from
        rch_pregnancy_analytics_details r
        ,location_hierchy_closer_det l
        ,parameters p
	where
        r.native_location_id  = l.child_id
        and l.parent_id = p.location_id
        and r.reg_service_date between p.from_date and p.to_date
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in (select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
    #limit_offset#
),
fhw_det as (
    select
        loc.loc_id,
        concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
        case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
    from
        um_user_location ul
        ,um_user u
        ,(select distinct loc_id from member_det) loc
        ,location_hierchy_closer_det
    where
        loc.loc_id = location_hierchy_closer_det.child_id
        and location_hierchy_closer_det.parent_id = ul.loc_id
        and u.id = ul.user_id
        and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
        and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select
    ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
    get_location_hierarchy_language_wise(member_det.loc_id, member_det.preferred_language) as "Location",
    member_det.unique_health_id as "Member ID",
    member_det.family_id as "Family ID",
    member_det.name as "Name",
    case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from
    member_det
left join
    fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','5b1d6438-277c-4219-8efa-7e2355f45b84'),
	 (481,57698,'2019-02-14 14:21:18.194',1,'2021-01-13 20:22:06.427965','location_id','select name as location_id from location_master  where id = #location_id#',true,'ACTIVE','c5122a40-ca46-44ba-9ff6-ce080ba9ddaa'),
	 (1726,60512,'2020-09-07 17:03:26.328',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','346837d5-674d-465b-af5d-56dc923006cb'),
	 (1061,64189,'2019-04-29 15:46:37.766',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','fa7c31c6-d7bf-46b8-9279-8e96ba4357f1'),
	 (1062,64189,'2019-04-29 15:46:37.783',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','74fe7baa-a3bd-416b-9f56-71ff9420561e'),
	 (1727,60512,'2020-09-07 17:03:26.959',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_discharge_status = ''SAM_TO_NORMAL''
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','7788aa18-4357-4e3f-9297-77c9191d90d7'),
	 (455,1,'2019-02-14 00:46:06.561',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','/* Children with Congenital Heart disease Birth defects(State Level Monthly Compilation Sheet for Screening of Birth Defects) */

with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.delivery_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.delivery_location_id and m.id = c.member_id 
	and l.parent_id = #location_id#
	and c.has_congenital_heart_disease = true
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end), '' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) ,
family_head as (
	select a.id as member_id,
	concat(im2.first_name,'' '',im2.middle_name,'' '',im2.last_name) as FamilyHead,
	im2.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join child_det a on a.id = im.id
	inner join imt_family imf on imf.family_id = im.family_id
	inner join imt_member im2 on imf.hof_id = im2.id
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when family_head.FamilyHeadMobileNo is not null then FamilyHeadMobileNo else ''-'' end as "Contact Number",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id
left join family_head on family_head.member_id = child_det.id;',true,'ACTIVE','4f3aa075-1c2d-491a-ae93-0ca78e55f81a');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (434,1,'2019-02-14 00:34:34.265',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','8988c269-41c5-4586-8a47-00091d51ac65'),
	 (346,1,'2019-02-13 11:28:58.108',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','a4e4f814-0137-4e12-9a07-0252d11e74b6'),
	 (679,63746,'2019-02-27 10:47:57.61',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,high_risk_condition,location_id','with location_det as(
	select child_id as loc_id from location_hierchy_closer_det where parent_id = #location_id#
),
dates as(
	select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'')+interval ''1 day'' - interval ''1 millisecond'' as to_date
), 
member_id as (
	(select member_id,reg_service_date as filter_date 
	from rch_pregnancy_analytics_details,dates,location_det
	where reg_service_date between dates.from_date and dates.to_date
	and member_current_location_id = location_det.loc_id
	and ''#high_risk_condition#'' in (''Severe Maternal Anemia'',''High BP'')
        #limit_offset#)

	union

	(select member_id, dob as filter_date 
	from rch_child_analytics_details,dates,location_det
	where dob between dates.from_date and dates.to_date
	and rch_child_analytics_details.member_id is not null
	and rch_child_analytics_details.loc_id = location_det.loc_id
	and ''#high_risk_condition#'' in (''Very Low Birth Weight'')
        #limit_offset#)

	union

	(select member_id, dob as filter_date 
	from rch_child_analytics_details,dates,location_det
	where dob between dates.from_date - interval ''6 year'' and dates.to_date - interval ''6 month''
	and member_id is not null and rch_child_analytics_details.loc_id = location_det.loc_id
	and ''#high_risk_condition#'' in (''SAM'')
        #limit_offset#)
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
mem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')'' as "Member Name",
filter_date as "RegServiceDate(Mother)/BirthDate(Child)",
case when mem.mobile_number is null then ''N/A'' else
	mem.mobile_number end as "Mobile Number"
,case 
	when hod.mobile_number is not null then 
		hod.first_name || '' '' || hod.middle_name || '' '' || hod.last_name || '' ('' || hod.mobile_number  || '')''
	else hod.first_name || '' '' || hod.middle_name || '' '' || hod.last_name
end as "Head Of Family"
,string_agg(lm.name,''> '' order by lhcd.depth desc) as "Location Hierarchy"
from member_id  
inner join imt_member mem on member_id.member_id = mem.id
inner join imt_family fam on mem.family_id = fam.family_id
left join imt_member hod on fam.family_id = hod.family_id and hod.family_head = true
inner join location_hierchy_closer_det lhcd on (case when fam.area_id is null then fam.location_id else cast(fam.area_id as bigint) end) = lhcd.child_id
inner join location_master lm on lm.id = lhcd.parent_id 
group by mem.first_name, mem.middle_name, mem.last_name, mem.mobile_number,hod.mobile_number,
hod.first_name,hod.middle_name,hod.last_name,mem.unique_health_id,filter_date',true,'ACTIVE','161827ba-2aed-4084-9df9-194149a1a180'),
	 (493,1,'2019-02-14 15:22:28.221',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','ad53f9e9-f24d-4c8e-8cd4-0f571b50ca53'),
	 (822,58981,'2019-03-06 18:04:06.561',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','e7277b3c-1bc3-43ed-aa9d-029633c03aa8'),
	 (940,60512,'2019-03-14 19:51:03.947',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','2d560e6a-020b-4138-af9d-31faca3fd1f8'),
	 (1716,60512,'2020-09-07 16:51:52.214',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','d83ba755-c9ff-41b7-9f39-b80c1611953e'),
	 (1063,64189,'2019-04-29 15:46:37.785',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','0ce564e9-7e99-403a-b8e5-b1ed1f96bf20'),
	 (413,1,'2019-02-13 12:51:25.272',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','13aa4772-019a-444e-892a-c7571977dfd0'),
	 (414,1,'2019-02-13 12:51:25.274',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','82be39af-ccd1-4bfa-9d60-7e8f575103fc');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1723,60512,'2020-09-07 16:58:53.669',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_pediatrician_visit
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','d813887b-393d-466e-9c6b-c02ef021c9ba'),
	 (31,1027,'2018-05-14 17:08:48.535',1,'2021-01-13 20:22:06.427965','course_id,role_id,loggedInUserId,location_id','with location_det as(
select child_id as loc_id from location_hierchy_closer_det  
where parent_id in (case when #location_id# is not null then  #location_id# else (select loc_id from um_user_location where user_id = #loggedInUserId# and state = ''ACTIVE'') end)
),users AS (
SELECT distinct on(uu.id) tcrr.role_id, tcrr.course_id, uu.id,tr_course_master.module_id, uu.first_name, uu.last_name FROM 
	tr_course_master
	inner join tr_course_role_rel tcrr on tcrr.course_id = tr_course_master.course_id and tr_course_master.course_state = ''ACTIVE''
	INNER JOIN um_user uu ON uu.role_id = tcrr.role_id and uu.state = ''ACTIVE''
	inner join um_user_location ul on ul.state = ''ACTIVE'' and ul.user_id = uu.id 
	inner join location_det ld on ld.loc_id = ul.loc_id
	where uu.role_id=#role_id# and tr_course_master.course_id =#course_id#

	 
),scheduled as (
		select distinct on (us.id) concat(us.first_name,'' '',us.last_name) as "Full Name",
		TO_CHAR(cast(tr.effective_date as date),''ddth Mon yyyy'') as "Training Date",
		case when tr.location_name is null then ''N/A'' else  tr.location_name end as"Location"
		from tr_training_master tr
		inner join tr_training_course_rel tcr on tr.training_id = tcr.training_id
                inner join (select * from tr_training_attendee_rel union select * from tr_training_additional_attendee_rel) r 
                on tr.training_id = r.training_id 
	        right join users us on us.id = r.attendee_id and us.course_id = tcr.course_id
                 where (tr.expiration_date >= current_date) and tr.training_state = ''DRAFT''
                --where tr.training_state = ''DRAFT''
                 
)
select ROW_NUMBER() over () as "Sr. No.",* from scheduled',true,'ACTIVE','f51da810-041b-4036-b6e0-ef7b13882b24'),
	 (482,57698,'2019-02-14 14:22:18.106',1,'2021-01-13 20:22:06.427965','role_id','select name as "role_id" from um_role_master where id=#role_id#',true,'ACTIVE','7795043d-6ee1-4540-a660-69f8cca5174f'),
	 (466,1,'2019-02-14 13:20:48.881',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','eaf89410-c02a-43fc-a39a-9afbb141c1f6'),
	 (1437,57698,'2019-11-25 14:01:57.935',1,'2021-01-13 20:22:06.427965','location_id','select mp.text_version as "Application Version" , count(distinct t1.user_id) as "Count" from  
(select user_id,max(apk_version) as version from um_user_login_det where 
apk_version is not null group by user_id) as t1,um_user u,mobile_version_mapping mp,um_user_location uml, location_hierchy_closer_det lc
where mp.apk_version = t1.version and u.id = t1.user_id and uml.user_id = u.id and uml.state = ''ACTIVE''
and uml.loc_id = lc.child_id and lc.parent_id = #location_id#
and u.state = ''ACTIVE'' group by apk_version order by apk_version desc limit 5;',true,'ACTIVE','941bbedc-bec4-49b6-991a-f515fb301553'),
	 (206,58981,'2019-01-24 11:32:38.668',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','e67b74b7-e2e9-4a56-8ce1-3bc3402b4902'),
	 (207,58981,'2019-01-24 11:32:38.672',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','96b3814b-786b-4438-923d-3d9bc8be6c9b'),
	 (202,409,'2019-01-23 19:48:56.693',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','26f9c8f5-8a52-4078-9153-d3d4f63ffa66'),
	 (449,1,'2019-02-14 00:43:54.679',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','99760a09-6c1d-4325-8010-e599b0141855'),
	 (983,60512,'2019-04-11 14:57:13.19',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','150a60b9-8223-473d-8f5b-8d862968e17f');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1721,60512,'2020-09-07 16:56:33.984',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_admission_sd_score in (''SD4'',''SD3'')
	and fsam_admission_muac < 11.5
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	union all
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_admission_sd_score in (''SD4'',''SD3'')
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	union all
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_admission_muac < 11.5
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	union all
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_admission_bilateral_pitting_oedema in (''+'',''++'',''+++'')
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	union all
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_admission_height < 45
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	order by child_id
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','faf11b44-e4d0-4e8d-a097-bb8036200c7d'),
	 (432,1,'2019-02-14 00:34:34.258',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','86bf6f16-78c5-4e15-ba44-ff4071f5ac91'),
	 (433,1,'2019-02-14 00:34:34.263',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','3cce521b-b67d-4038-93e0-a81060f15857'),
	 (347,1,'2019-02-13 11:28:58.11',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','506d0453-cc85-446b-af7a-4b1241a491a4'),
	 (348,1,'2019-02-13 11:28:58.113',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','ab315aa8-e2cc-4741-8e86-a7d6ac2e4e49'),
	 (435,1,'2019-02-14 00:34:34.276',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.delivery_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.delivery_location_id and m.id = c.member_id 
	and l.parent_id = #location_id#
	and c.has_downs_syndrome = true
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day'' - interval ''1 milliseconds''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end), ''> '' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
),
family_head as (
	select a.id as member_id,
	concat(im2.first_name,'' '',im2.middle_name,'' '',im2.last_name) as FamilyHead,
	im2.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join child_det a on a.id = im.id
	inner join imt_family imf on imf.family_id = im.family_id
	inner join imt_member im2 on imf.hof_id = im2.id
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
get_location_hierarchy(child_det.loc_id) as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when family_head.FamilyHeadMobileNo is not null then FamilyHeadMobileNo else ''-'' end as "Contact Number",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id
left join family_head on family_head.member_id = child_det.id;',true,'ACTIVE','e3513eb0-ccd2-48af-8578-593a10634d7b'),
	 (696,409,'2019-02-27 13:24:32.301',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','791dad69-82ae-4e1c-bc4c-7dd9665a1897'),
	 (1719,60512,'2020-09-07 16:54:37.789',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_admission_height < 45
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','69cdc26a-418a-4f7c-a75d-7b5ed77c4012'),
	 (431,1,'2019-02-14 00:30:26.053',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Children with Neural Tube Birth defects(State Level Monthly Compilation Sheet for Screening of Birth Defects)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.delivery_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.delivery_location_id and m.id = c.member_id 
	and l.parent_id = #location_id#
	and c.has_neural_tube_def = true
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end), ''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) ,family_head as (
	select a.id as member_id,
	concat(im2.first_name,'' '',im2.middle_name,'' '',im2.last_name) as FamilyHead,
	im2.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join child_det a on a.id = im.id
	inner join imt_family imf on imf.family_id = im.family_id
	inner join imt_member im2 on imf.hof_id = im2.id
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
get_location_hierarchy(child_det.loc_id) as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when family_head.FamilyHeadMobileNo is not null then FamilyHeadMobileNo else ''-'' end as "Contact Number",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id
left join family_head on family_head.member_id = child_det.id;',true,'ACTIVE','61382382-69a6-4a56-9918-011d2ad50104'),
	 (934,60512,'2019-03-14 12:15:47.193',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','605782de-8b61-4aa7-b9e2-ddad31fd6662');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (937,60512,'2019-03-14 19:30:37.336',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 admitted_child_ids as(
	select distinct
	child_cmtc_nrc_admission_detail.id
	from health_infrastructure_details
	inner join child_cmtc_nrc_admission_detail on health_infrastructure_details.id = child_cmtc_nrc_admission_detail.screening_center
	inner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id
	where health_infrastructure_details.location_id in (
		select child_id from location_hierchy_closer_det where parent_id = #location_id#
	) and child_cmtc_nrc_admission_detail.admission_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	#limit_offset#
),det as (
	select child_cmtc_nrc_admission_detail.child_id,
	avg(child_cmtc_nrc_weight_detail.weight) as avg_wt,
	child_cmtc_nrc_admission_detail.screening_center
	from admitted_child_ids
	inner join child_cmtc_nrc_admission_detail on admitted_child_ids.id = child_cmtc_nrc_admission_detail.id
	inner join child_cmtc_nrc_weight_detail on child_cmtc_nrc_weight_detail.admission_id = child_cmtc_nrc_admission_detail.id
	group by child_cmtc_nrc_admission_detail.child_id,child_cmtc_nrc_admission_detail.screening_center
	having avg(child_cmtc_nrc_weight_detail.weight)>8
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No", 
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
get_location_hierarchy(imt_family.location_id) as "Location",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
imt_member.dob as "Child DOB",
health_infrastructure_details.name as "Health Infrastructure"
from det
inner join imt_member on imt_member.id = det.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on det.screening_center = health_infrastructure_details.id',true,'ACTIVE','04571e52-2a31-4846-a32c-98eaa7cf26c7'),
	 (48,1027,'2018-05-28 12:09:43.797',1,'2021-01-13 20:22:06.427965',NULL,'select id,first_name || '' '' || last_name || ''('' || user_name || '')'' as name from um_user where role_id in (select role_id from um_role_category cat
inner join listvalue_field_value_detail list on cat.category_id = list.id and list.code = ''GVKEMRI_RO'') order by name;',true,'ACTIVE','57b7d2cd-3452-423d-9d0b-24a324df80e8'),
	 (1717,60512,'2020-09-07 16:51:52.758',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_admission_bilateral_pitting_oedema in (''+'',''++'',''+++'')
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','8a3b7958-4a76-439e-a6e8-b813ea658e64'),
	 (51,1027,'2018-05-28 12:26:05.5',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select
	(case
		when report_preferred_language = ''EN'' then true
		else false
	end) as is_enlish
from
	um_user
where
	id = #loggedInUserId#) select
	row_number() over () as "Sr. No",
	coalesce(case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name else lm.name end, ''<b>Total</b>'') as location,
	case
		when sum(lwa.total_0to5_children) is null then 0
		else sum(lwa.total_0to5_children)
	end as "Child 0-5 Years Age",
	case
		when sum(lwa.child_migrated) is null then 0
		else sum(lwa.child_migrated)
	end as "Migrated",
	case
		when round((100.0 * sum(lwa.child_migrated))/ sum(lwa.total_0to5_children), 2) is null then 0
		else round((100.0 * sum(lwa.child_migrated))/ sum(lwa.total_0to5_children), 2)
	end as "%",
	case
		when sum(lwa.child_dead) is null then 0
		else sum(lwa.child_dead)
	end as "Death",
	case
		when round((100.0 * sum(lwa.child_dead))/ sum(lwa.total_0to5_children), 2) is null then 0
		else round((100.0 * sum(lwa.child_dead))/ sum(lwa.total_0to5_children), 2)
	end as "% " ,
	case
		when sum(lwa.child_new) is null then 0
		else sum(lwa.child_new)
	end as "New",
	case
		when round((100.0 * sum(lwa.child_new))/ sum(lwa.total_0to5_children), 2) is null then 0
		else round((100.0 * sum(lwa.child_new))/ sum(lwa.total_0to5_children), 2)
	end as "%  "
from
	location_hierchy_closer_det lhcd,
	location_wise_analytics lwa,
	location_master lm,
	prefered_language
where
	lwa.loc_id = lhcd.child_id
	and lm.id = lhcd.parent_id
	and lhcd.parent_id in (
		select child_id
	from
		location_hierchy_closer_det
	where
		parent_id = #location_id#
		and depth = 1)
group by
	rollup((lm.name,
	prefered_language.is_enlish,
	lm.english_name))',true,'ACTIVE','212b84fd-fde6-4c8e-89d6-70a99d186222'),
	 (1079,63746,'2019-05-01 14:47:54.412',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #location_id#',true,'ACTIVE','3464a55b-8824-4f8b-9562-15820e15cb37'),
	 (1714,60512,'2020-09-07 16:49:28.37',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','25df1f53-e9bc-47ee-b652-2b89ce373a90'),
	 (1247,409,'2019-07-24 10:50:44.067',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','cb00544c-ff84-4448-b24e-e265872b7f9b'),
	 (1248,409,'2019-07-24 10:50:44.071',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','b9b704e1-2a8c-4194-892b-4318cb06ce9c'),
	 (941,60512,'2019-03-14 19:51:03.999',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
child_ids as(
	select distinct child_cmtc_nrc_discharge_detail.child_id,child_cmtc_nrc_admission_detail.screening_center 
	from health_infrastructure_details
	inner join child_cmtc_nrc_admission_detail on health_infrastructure_details.id = child_cmtc_nrc_admission_detail.screening_center
	inner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id
	inner join child_cmtc_nrc_discharge_detail on child_cmtc_nrc_discharge_detail.id = child_cmtc_nrc_screening_detail.discharge_id
	where health_infrastructure_details.location_id in (
		select child_id from location_hierchy_closer_det where parent_id = #location_id#
	) and child_cmtc_nrc_admission_detail.admission_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	and ((child_cmtc_nrc_discharge_detail.weight - child_cmtc_nrc_admission_detail.weight_at_admission)
			*100/child_cmtc_nrc_admission_detail.weight_at_admission)>=15
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No", 
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
get_location_hierarchy(imt_family.location_id) as "Location",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
imt_member.dob as "Child DOB",
health_infrastructure_details.name as "Health Infrastructure"
from child_ids
inner join imt_member on imt_member.id = child_ids.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on child_ids.screening_center = health_infrastructure_details.id',true,'ACTIVE','2105cfc8-3f04-433f-bdf9-aa5179f80266'),
	 (203,409,'2019-01-23 19:48:56.695',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','2bfff2c0-e3b5-4f90-9a12-cc5d491c55cb');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (469,1,'2019-02-14 13:21:57.611',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','6b3ec104-3225-4b35-8d57-8ae380f60670'),
	 (470,1,'2019-02-14 13:21:57.613',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','8c4a6bb9-6127-4d81-bffe-aad5198db21d'),
	 (1711,60512,'2020-09-07 16:46:15.806',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_admission_sd_score in (''SD4'',''SD3'')
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','758a0fa9-505d-4661-827c-835a265de5df'),
	 (1733,60512,'2020-09-07 17:08:17.166',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where cmam_master_id is not null and cmam_identified_from = ''FSAM''
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','ad9bb3db-0d48-4db1-877f-fc65ba2bc8e3'),
	 (1251,409,'2019-07-24 10:53:11.101',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','98ccbfbb-d201-43c9-9551-ab63adecfc59'),
	 (536,1,'2019-02-14 16:12:09.101',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','e05a738e-3b31-4039-9ce7-3bb4c0cebcc8'),
	 (537,1,'2019-02-14 16:12:09.103',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','6758e082-13cb-4163-a216-e3ff0f377bc5'),
	 (1250,409,'2019-07-24 10:53:11.091',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','8523a3a6-7d7a-48e0-8941-eb040a0efd3d'),
	 (653,409,'2019-02-19 20:12:35.423',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','70a766fe-5623-40da-b14b-f1ed0192decc'),
	 (1731,60512,'2020-09-07 17:06:33.039',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_admission_death_date is not null
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','6d235496-9a52-489d-82d8-d1e10888a1d6');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (538,1,'2019-02-14 16:12:09.105',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','b6346a0f-16af-43a6-965e-06bf30840b47'),
	 (154,58981,'2019-01-22 16:45:43.727',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
member_det as (
	select r.member_id, r.member_current_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, rch_pregnancy_registration_det p
	where r.member_id = m.id and r.member_current_location_id  = l.child_id and r.pregnancy_reg_id = p.id
	and l.parent_id = #location_id#
	and r.preg_reg_state in (''PENDING'',''PREGNANT'') 
	and r.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')
	and r.edd <= current_date
	and r.lmp_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by p.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','cf6d0806-80a3-4f0a-971e-a7bae1041357'),
	 (1763,60512,'2020-09-18 12:13:46.702',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','d6eed27b-870c-42e6-bbfe-0017482ee46b'),
	 (35,1027,'2018-05-14 17:09:16.605',1,'2021-01-13 20:22:06.427965','course_id,role_id,loggedInUserId,location_id','with location_det as(
select child_id as loc_id from location_hierchy_closer_det  
where parent_id in (case when #location_id# is not null then  #location_id# else 
(select loc_id from um_user_location where user_id = #loggedInUserId# and state = ''ACTIVE'') end)
),users AS (
SELECT
distinct on(uu.id)
concat(uu.first_name,'' '',uu.last_name) as "Full Name",
course_name as "Course Name",
urm.name as "Role Name" FROM 
	tr_course_master
	inner join tr_course_role_rel tcrr on tcrr.course_id = tr_course_master.course_id and tr_course_master.course_state = ''ACTIVE''
	INNER JOIN um_user uu ON uu.role_id = tcrr.role_id and uu.state = ''ACTIVE''
	INNER JOIN um_role_master urm ON urm.id = uu.role_id
	INNER JOIN um_user_location ul on ul.state = ''ACTIVE'' and ul.user_id = uu.id 
	INNER JOIN location_det ld on ld.loc_id = ul.loc_id	 
	WHERE
	uu.role_id=#role_id# and tr_course_master.course_id =#course_id#
)
select ROW_NUMBER() over () as "Sr. No.",* from users',true,'ACTIVE','da2d10fc-0fe0-4b55-873f-2a8867a36b82'),
	 (1252,409,'2019-07-24 10:53:11.104',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','076f8d69-bf8f-4688-82a9-d193f8282a41'),
	 (1746,60512,'2020-09-18 11:22:43.938',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_discharge_id is not null
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','71cc77ef-2e57-4748-aa56-b7ef16c61981'),
	 (1720,60512,'2020-09-07 16:56:33.568',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','05abcd81-1178-46f3-9dfa-4a1265876f64'),
	 (677,409,'2019-02-21 19:34:41.421',1,'2021-01-13 20:22:06.427965',NULL,'select id,value from listvalue_field_value_detail 
where field_key=''infra_type'' and  is_active = true',true,'ACTIVE','59493343-3918-4f7a-ba96-267fb7f9fd09'),
	 (735,58981,'2019-03-01 19:23:53.317',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','60a97ce4-c32c-45fc-834a-49c76542cbe2'),
	 (695,409,'2019-02-27 13:24:32.298',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','020d8dbb-63f8-432f-87a3-eaf8d6b621b8');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1254,409,'2019-07-24 10:54:58.897',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','494a64c4-af92-4177-aa33-4f259e8acd1e'),
	 (1023,60512,'2019-04-22 16:47:21.059',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','e130d32a-a61b-4d9a-987d-8fe8ec8b8d04'),
	 (1749,60512,'2020-09-18 11:25:42.234',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','9bde2314-9e1d-4e02-a266-9972de16a189'),
	 (1255,409,'2019-07-24 10:54:58.904',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','d0ac6e84-6cc5-4933-87c4-9d72d6d816dd'),
	 (1001,60512,'2019-04-18 13:01:28.752',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','d13ccd12-12dd-4134-a3ab-b5a2db136751'),
	 (926,60512,'2019-03-13 16:40:24.827',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','4db38ee5-dd25-4928-910b-96d7628e8cb9'),
	 (505,1,'2019-02-14 15:50:30.446',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','586b8d26-6185-4b5c-a266-510d0544f968'),
	 (349,1,'2019-02-13 11:28:58.122',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,demographic_location_id,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#
)
,parameter as (
	select CAST(''#demographic_location_id#'' AS TEXT) as demographic_group
) 
,child_det as (
	select m.id, c.delivery_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
    inner join parameter p on true = true
	where l.child_id = c.delivery_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.birth_weight is not null
    and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','fe82819c-e6b8-4e37-9a9b-989ade07ccea'),
	 (521,1,'2019-02-14 16:01:24.627',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','23e023d5-aff9-4124-bb28-a2b016e86359'),
	 (244,1,'2019-02-05 11:50:49.655',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--DPT 2 given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 years as ( 
	select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, 
	cast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date
	from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc
), child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and y.financial_year = ''#financial_year#''
	and c.dpt2 is not null
    and c.is_valid_for_tracking_report = true
	and c.dob between y.from_date and y.too_date
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','b2106c2f-34cc-4152-b0cc-dfd1888baf7e');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (257,1,'2019-02-05 12:11:39.232',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','2ae8bc76-9910-4357-9f0a-d315777e3101'),
	 (522,1,'2019-02-14 16:01:24.63',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','3e91e446-247d-49fc-959d-0c1e3272f430'),
	 (770,58981,'2019-03-06 14:27:48.856',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','3089d889-721e-4100-bd40-725add85795c'),
	 (255,1,'2019-02-05 12:09:46.71',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','a4a8720c-7144-468f-b7cc-f87c3684c258'),
	 (722,63746,'2019-02-28 12:54:57.041',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(lm.name,''> '' order by lhcd.depth desc) as "Location" 
from location_hierchy_closer_det lhcd 
inner join location_master lm on lm.id = lhcd.parent_id 
where lhcd.child_id = #location_id#',true,'ACTIVE','a9ab9c32-f08e-4265-9bfa-e83ff886b6d8'),
	 (128,409,'2019-01-10 17:35:53.386',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id','--select cast(''This report is currently not available. Please try after 1 pm. Inconvenience is regretted.'' as text) as "Message"
 with dates as(
select
	to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM/DD/YYYY'') as from_date ,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end, ''MM/DD/YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_date 
),
prefered_language as(
select
	(case
		when report_preferred_language = ''EN'' then true
		else false
	end) as is_enlish
from
	um_user
where
	id = #loggedInUserId#),
ldp as(
select
	child_id as loc_id,
	case
		when ( prefered_language.is_enlish
		and (location_master.english_name is not null)) then location_master.english_name
		else location_master.name
	end
from
	location_hierchy_closer_det,
	location_master,
	prefered_language
where
	"depth" = 1
	and location_master.id = location_hierchy_closer_det.child_id
	and location_hierchy_closer_det.parent_id = #location_id# ),
loc_wise_det as (
select
	loc_det.parent_id ,
	sum(fhs_total_member) as fhs_total_member
from
	location_wise_analytics,
	ldp,
	location_hierchy_closer_det loc_det
where
	location_wise_analytics.loc_id = loc_det.child_id
	and loc_det.parent_id = ldp.loc_id
group by
	loc_det.parent_id ),
pregnant_woman_det as (
select
	loc_det.parent_id,
	sum(reg_preg_women) as pregnant_woman_techo,
	sum(high_risk) as high_risk
from
	rch_current_state_pregnancy_analytics_data,
	ldp,
	location_hierchy_closer_det loc_det
where
	rch_current_state_pregnancy_analytics_data.location_id = loc_det.child_id
	and loc_det.parent_id = ldp.loc_id
group by
	loc_det.parent_id ),
infant_death as (
select
	loc_det.parent_id,
	count(*) as total_infant_deaths
from
	rch_child_analytics_details,
	ldp,
	location_hierchy_closer_det loc_det,
	dates
where
	rch_child_analytics_details.death_location_id = loc_det.child_id
	and loc_det.parent_id = ldp.loc_id
	and rch_child_analytics_details.death_date between dates.from_date and dates.to_date
	and rch_child_analytics_details.dob > rch_child_analytics_details.death_date - interval ''1 year''
group by
	loc_det.parent_id),
pregnancy_reg_det as (
select
	loc_det.parent_id,
	count(*) as preg_reg
from
	rch_pregnancy_analytics_details,
	ldp,
	location_hierchy_closer_det loc_det,
	dates
where
	rch_pregnancy_analytics_details.native_location_id = loc_det.child_id
	and loc_det.parent_id = ldp.loc_id
	and rch_pregnancy_analytics_details.reg_service_date between dates.from_date and dates.to_date
group by
	loc_det.parent_id ),
del_det as(
select
	loc_det.parent_id,
	count(*) as del_reg
from
	rch_pregnancy_analytics_details,
	ldp,
	location_hierchy_closer_det loc_det,
	dates
where
	rch_pregnancy_analytics_details.delivery_location_id = loc_det.child_id
	and loc_det.parent_id = ldp.loc_id
	and rch_pregnancy_analytics_details.delivery_outcome in (''LBIRTH'',
	''SBIRTH'')
	and rch_pregnancy_analytics_details.delivery_reg_date between dates.from_date and dates.to_date
group by
	loc_det.parent_id ),
fully_immunized_child_det as(
select
	loc_det.parent_id,
	sum(case when full_immunization_date is null then 0 else 1 end) as fully_immunized
from
	rch_child_analytics_details,
	ldp,
	location_hierchy_closer_det loc_det,
	dates
where
	rch_child_analytics_details.native_loc_id = loc_det.child_id
	and loc_det.parent_id = ldp.loc_id
	and rch_child_analytics_details.full_immunization_date between dates.from_date and dates.to_date
	and fully_immunization_in_number_of_month <= 12
group by
	loc_det.parent_id ),
child_age_det as(
select
	loc_det.parent_id ,
	sum(case when rch_child_analytics_details.dob >= current_date - interval ''1 year'' then 1 else 0 end) as total_0to1_children ,
	sum(case when rch_child_analytics_details.dob >= current_date - interval ''5 year'' then 1 else 0 end) as total_0to5_children
from
	rch_child_analytics_details,
	ldp,
	location_hierchy_closer_det loc_det
where
	rch_child_analytics_details.loc_id = loc_det.child_id
	and loc_det.parent_id = ldp.loc_id
	and rch_child_analytics_details.dob >= current_date - interval ''5 year''    
	and rch_child_analytics_details.member_state != ''DEAD''
	and rch_child_analytics_details.death_date is null
	and rch_child_analytics_details.member_id is not null
group by
	loc_det.parent_id ),
maternal_death as(
select
	loc_det.parent_id,
	count(*) as total_maternal_death
from
	rch_pregnancy_analytics_details,
	ldp,
	location_hierchy_closer_det loc_det,
	dates
where
	rch_pregnancy_analytics_details.death_location_id = loc_det.child_id
	and loc_det.parent_id = ldp.loc_id
	and rch_pregnancy_analytics_details.maternal_detah = true
	and rch_pregnancy_analytics_details.death_date between dates.from_date and dates.to_date
group by
	loc_det.parent_id ),
final_det as(
select
	ldp.name ,
	ldp.loc_id ,
	coalesce(fhs_total_member, 0) as fhs_total_member ,
	coalesce(pregnant_woman_techo, 0) as pregnant_woman_techo ,
	coalesce(total_0to1_children, 0) as total_0to1_children ,
	coalesce(total_0to5_children, 0) as total_0to5_children ,
	coalesce(total_infant_deaths, 0) as total_infant_deaths ,
	coalesce(preg_reg, 0) as preg_reg ,
	coalesce(del_reg, 0) as del_reg ,
	coalesce(fully_immunized, 0) as fully_immunized ,
	coalesce(total_maternal_death, 0) as total_maternal_death ,
	coalesce(high_risk, 0) as high_risk
from
	ldp
left join loc_wise_det on
	loc_wise_det.parent_id = ldp.loc_id
left join pregnancy_reg_det on
	pregnancy_reg_det.parent_id = ldp.loc_id
left join del_det on
	del_det.parent_id = ldp.loc_id
left join infant_death on
	infant_death.parent_id = ldp.loc_id
left join pregnant_woman_det on
	pregnant_woman_det.parent_id = ldp.loc_id
left join fully_immunized_child_det on
	fully_immunized_child_det.parent_id = ldp.loc_id
left join child_age_det on
	child_age_det.parent_id = ldp.loc_id
left join maternal_death on
	maternal_death.parent_id = ldp.loc_id
order by
	name ) select
	row_number() over() as "Sr. no" ,
	loc_id as hidden_location_id ,
	name ,
	fhs_total_member as "FHS population registered in techoplus (Verified)" ,
	pregnant_woman_techo as "Number of concurrent pregnant women in techoplus" ,
	preg_reg as "Number of new pregnancy registered in specified time period" ,
	del_reg as "Number of delivery reported in specified time period" ,
	total_0to1_children as "Number of 0-1 year infants in techoplus" ,
	total_0to5_children as "Number of 0-5 year children in techoplus" ,
	fully_immunized as "No of fully immunised children" ,
	total_infant_deaths as "No of Infant deaths" ,
	total_maternal_death as "No of Maternal deaths" ,
	high_risk as "Concurrent High Risk Pregnant Women"
from
	final_det
union all select
	null,
	#location_id#,
	''<b>Total</b>'' ,
	sum(fhs_total_member) ,
	sum(pregnant_woman_techo) ,
	sum(preg_reg) ,
	sum(del_reg) ,
	sum(total_0to1_children) ,
	sum(total_0to5_children) ,
	sum(fully_immunized) ,
	sum(total_infant_deaths) ,
	sum(total_maternal_death) ,
	sum(high_risk)
from
	final_det',true,'ACTIVE','2994005b-4786-4849-82ce-47295e46e954'),
	 (1792,74841,'2020-10-28 09:59:58.945',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as (
    select 	case 
            when report_preferred_language = ''EN'' then true  
            else false 
        end as is_enlish
    from um_user where id = #loggedInUserId#
), loc_det as (
   select 
    parent_id as loc_id,
    case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name
				else lm.name end as locationName,
    count(1) filter(where child_loc_type = ''P'') as no_of_phc,
    count(1) filter(where child_loc_type = ''U'') as no_of_uhc
    from location_master lm
    inner join prefered_language on true
    inner join location_hierchy_closer_det lhcd on lhcd.parent_id = lm.id
    where parent_id in (select  child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1 )
    group by parent_id, prefered_language.is_enlish, lm.english_name, lm.name 
),dates AS (
SELECT
        current_date - 1  AS from_date,
        current_date - 1  + interval ''1 day'' - interval ''1 millisecond'' as to_date,
        ''1_day'' as time_line_type
    union 
        SELECT
        current_date - 1 - 7 AS from_date,
        current_date - 1 + interval ''1 day'' - interval ''1 millisecond'' as to_date,
        ''7_day'' as time_line_type
    union 
        SELECT
        current_date - 1 - 15 AS from_date,
        current_date - 1 + interval ''1 day'' - interval ''1 millisecond'' as to_date,
        ''15_day'' as time_line_type
    union 
        SELECT
        current_date - 1 - 30 AS from_date,
        current_date - 1 + interval ''1 day'' - interval ''1 millisecond'' as to_date,
        ''30_day'' as time_line_type
    union 
       SELECT
        date_trunc(''month'', CURRENT_DATE)  AS from_date,
        current_date - 1  + interval ''1 day'' - interval ''1 millisecond'' as to_date,
        ''current_month'' as time_line_type
), health_infra_wise_data as (
    select 
    hid.id as hid,
    hid.location_id, 
    dates.time_line_type, 
	coalesce(sum(fpm.no_of_opd_attended), 0) as no_of_opd_attended,
	coalesce(sum(fpm.no_of_ipd_attended), 0) as no_of_ipd_attended,
	coalesce(sum(fpm.no_of_deliveres_conducted), 0) as no_of_deliveres_conducted,
	coalesce(sum(fpm.no_of_csection_conducted), 0) as no_of_csection_conducted,
	coalesce(sum(fpm.no_of_major_operation_conducted), 0) as no_of_major_operation_conducted,
	coalesce(sum(fpm.no_of_minor_operation_conducted), 0) as no_of_minor_operation_conducted,
	coalesce(sum(fpm.no_of_laboratory_test_conducted), 0) as no_of_laboratory_test_conducted,
    case when hid.type in (''899'',''1061'') then true else false end  as is_phc,
    case when hid.type in (''895'',''1009'',''1084'') then true else false end as is_chc,
    case when hid.type in (''894'',''1063'') then true else false end as is_uhc
from
 health_infrastructure_details hid
      inner join dates on true
	 left join facility_performance_analytics fpm on hid.id = fpm.health_infrastrucutre_id and fpm.performance_date between dates.from_date and dates.to_date
    where  
    hid.location_id in (select child_id from location_hierchy_closer_det where parent_id in (select loc_id from loc_det))
    group by hid.id, hid.location_id, dates.time_line_type, hid.type
),opd_api_report_det as (
    select 
    lh.parent_id as loc_id,
	sum(case when time_line_type = ''current_month'' then no_of_opd_attended else 0 end) as no_of_opd_attended,
	sum(case when time_line_type = ''current_month'' then no_of_ipd_attended else 0 end ) as no_of_ipd_attended,
	sum(case when time_line_type = ''current_month'' then no_of_deliveres_conducted else 0 end ) as no_of_deliveres_conducted,
	sum(case when time_line_type = ''current_month'' then no_of_csection_conducted else 0 end ) as no_of_csection_conducted,
	sum(case when time_line_type = ''current_month'' then no_of_major_operation_conducted else 0 end ) as no_of_major_operation_conducted,
	sum(case when time_line_type = ''current_month'' then no_of_minor_operation_conducted else 0 end ) as no_of_minor_operation_conducted,
	sum(case when time_line_type = ''current_month'' then no_of_laboratory_test_conducted else 0 end ) as no_of_laboratory_test_conducted,
    -- sum(case when time_line_type = ''1_day'' and is_phc then 1 else 0 end ) as no_of_phc,
    sum(loc_det.no_of_phc) as no_of_phc,
    sum(case when time_line_type = ''1_day'' and is_chc then 1 else 0 end ) as no_of_chc,
    -- sum(case when time_line_type = ''1_day'' and is_uhc then 1 else 0 end ) as no_of_uhc,
    sum(loc_det.no_of_uhc) as no_of_uhc,
    sum(case when time_line_type = ''1_day'' and no_of_opd_attended < 10 and is_phc then 1 else 0 end) as no_of_phc_with_less_than_10_opds,
    sum(case when time_line_type = ''1_day'' and no_of_opd_attended < 20 and is_chc then 1 else 0 end) as no_of_chc_with_less_than_20_opds,
    sum(case when time_line_type = ''7_day'' and no_of_opd_attended < 10 and is_phc then 1 else 0 end) as no_of_phc_with_less_than_10_opds_7_days,
    sum(case when time_line_type = ''15_day'' and no_of_opd_attended < 10 and is_phc then 1 else 0 end) as no_of_phc_with_less_than_10_opds_15_days,
    sum(case when time_line_type = ''30_day'' and no_of_opd_attended < 10 and is_phc then 1 else 0 end) as no_of_phc_with_less_than_10_opds_30_days,
     sum(case when time_line_type = ''7_day'' and no_of_opd_attended < 10 and is_chc then 1 else 0 end) as no_of_chc_with_less_than_10_opds_7_days,
    sum(case when time_line_type = ''15_day'' and no_of_opd_attended < 10 and is_chc then 1 else 0 end) as no_of_chc_with_less_than_10_opds_15_days,
    sum(case when time_line_type = ''30_day'' and no_of_opd_attended < 10 and is_chc then 1 else 0 end) as no_of_chc_with_less_than_10_opds_30_days,
    sum(case when time_line_type = ''7_day'' and no_of_laboratory_test_conducted = 0 and is_phc then 1 else 0 end) as no_of_phc_with_less_than_10_lab_test_7_days,
    sum(case when time_line_type = ''15_day'' and no_of_laboratory_test_conducted = 0 and is_phc then 1 else 0 end) as no_of_phc_with_less_than_10_lab_test_15_days,
    sum(case when time_line_type = ''30_day'' and no_of_laboratory_test_conducted = 0 and is_phc then 1 else 0 end) as no_of_phc_with_less_than_10_lab_test_30_days,
    sum(case when time_line_type = ''7_day'' and no_of_laboratory_test_conducted = 0 and is_chc then 1 else 0 end) as no_of_chc_with_less_than_10_lab_test_7_days,
    sum(case when time_line_type = ''15_day'' and no_of_laboratory_test_conducted = 0 and is_chc then 1 else 0 end) as no_of_chc_with_less_than_10_lab_test_15_days,
    sum(case when time_line_type = ''30_day'' and no_of_laboratory_test_conducted = 0 and is_chc then 1 else 0 end) as no_of_chc_with_less_than_10_lab_test_30_days
from
	health_infra_wise_data hid , location_hierchy_closer_det lh, loc_det
    where hid.location_id = lh.child_id and lh.parent_id = loc_det.loc_id
    group by lh.parent_id
), opd_result as(
    select loc_det.loc_id as id, loc_det.no_of_phc as phc, loc_det.no_of_uhc as uhc,  * from loc_det
    left join opd_api_report_det on loc_det.loc_id = opd_api_report_det.loc_id
    order by loc_det.locationName
)
select
    row_number() over() as "Sr.No.",
    id as hidden_location_id,
	locationName as "Location",
    coalesce(phc, 0) as "No. of PHC",
    coalesce(uhc, 0) as "No. of UHC",
    coalesce(no_of_chc, 0) as "No. of CHC/Hospital",
	coalesce(no_of_opd_attended, 0) as "No. of OPDs current month",
	coalesce(no_of_ipd_attended, 0) as "No. of IPDs current month",
	coalesce(no_of_deliveres_conducted, 0) as "No. of deliveries conducted current month",
	coalesce(no_of_csection_conducted, 0) as "No. of c-section conducted current month",
	coalesce(no_of_major_operation_conducted, 0) as "No. of Major operations conducted current month",
	coalesce(no_of_minor_operation_conducted, 0) as "No. of Minor operations conducted current month",
	coalesce(no_of_laboratory_test_conducted, 0) as "No. of laboratory test conducted current month",
    coalesce(no_of_phc_with_less_than_10_opds, 0) as "PHC with less than 10 OPDs",
    coalesce(no_of_chc_with_less_than_20_opds, 0) as "CHC with less than 20 OPDs",
    COALESCE(round(((no_of_phc_with_less_than_10_opds * 100.0) / NULLIF((phc), 0)), 2), 0) as "Percentage Lessthen 10 PHC",
    COALESCE(round(((no_of_chc_with_less_than_20_opds * 100.0) / NULLIF((no_of_chc), 0)), 2), 0) as "Percentage Lessthen 20 CHC",
    coalesce(no_of_phc_with_less_than_10_opds_7_days, 0) as "PHC with less than 10 OPDs Last 7 Day''s",
    coalesce(no_of_phc_with_less_than_10_opds_15_days, 0) as "PHC with less than 10 OPDs Last 15 Day''s",
    coalesce(no_of_phc_with_less_than_10_opds_30_days, 0) as "PHC with less than 10 OPDs Last 30 Day''s", 
    coalesce(no_of_chc_with_less_than_10_opds_7_days, 0) as "CHC with less than 10 OPDs Last 7 Day''s",
    coalesce(no_of_chc_with_less_than_10_opds_15_days, 0) as "CHC with less than 10 OPDs Last 15 Day''s",
    coalesce(no_of_chc_with_less_than_10_opds_30_days, 0) as "CHC with less than 10 OPDs Last 30 Day''s",
    coalesce(no_of_phc_with_less_than_10_lab_test_7_days, 0) as "No. Of Laboratory Testsconducted PHC 0 Last 7 Day''s",
    coalesce(no_of_phc_with_less_than_10_lab_test_15_days, 0) as "No. Of Laboratory Testsconducted PHC 0 Last 15 Day''s",
    coalesce(no_of_phc_with_less_than_10_lab_test_30_days, 0) as "No. Of Laboratory Testsconducted PHC 0 Last 30 Day''s",
    coalesce(no_of_chc_with_less_than_10_lab_test_7_days, 0) as "No. Of Laboratory Testsconducted CHC 0 Last 7 Day''s",
    coalesce(no_of_chc_with_less_than_10_lab_test_15_days, 0) as "No. Of Laboratory Testsconducted CHC 0 Last 15 Day''s",
    coalesce(no_of_chc_with_less_than_10_lab_test_30_days, 0) as "No. Of Laboratory Testsconducted CHC 0 Last 30 Day''s"
from opd_result
union all 
select 
null,
#location_id#,
''<b>Total</b>'',
coalesce(sum(phc), 0),
coalesce(sum(uhc), 0),
coalesce(sum(no_of_chc), 0),
coalesce(sum(no_of_opd_attended), 0),
coalesce(sum(no_of_ipd_attended), 0),
coalesce(sum(no_of_deliveres_conducted), 0),
coalesce(sum(no_of_csection_conducted), 0),
coalesce(sum(no_of_major_operation_conducted), 0),
coalesce(sum(no_of_minor_operation_conducted), 0),
coalesce(sum(no_of_laboratory_test_conducted), 0),
coalesce(sum(no_of_phc_with_less_than_10_opds), 0),
coalesce(sum(no_of_chc_with_less_than_20_opds), 0),
COALESCE(round(((sum(no_of_phc_with_less_than_10_opds) * 100.0) / NULLIF((sum(phc)), 0)), 2), 0),
COALESCE(round(((sum(no_of_chc_with_less_than_20_opds) * 100.0) / NULLIF((sum(no_of_chc)), 0)), 2), 0),
coalesce(sum(no_of_phc_with_less_than_10_opds_7_days), 0),
coalesce(sum(no_of_phc_with_less_than_10_opds_15_days), 0),
coalesce(sum(no_of_phc_with_less_than_10_opds_30_days), 0),
coalesce(sum(no_of_chc_with_less_than_10_opds_7_days), 0),
coalesce(sum(no_of_chc_with_less_than_10_opds_15_days), 0),
coalesce(sum(no_of_chc_with_less_than_10_opds_30_days), 0),
coalesce(sum(no_of_phc_with_less_than_10_lab_test_7_days), 0),
coalesce(sum(no_of_phc_with_less_than_10_lab_test_15_days), 0),
coalesce(sum(no_of_phc_with_less_than_10_lab_test_30_days), 0),
coalesce(sum(no_of_chc_with_less_than_10_lab_test_7_days), 0),
coalesce(sum(no_of_chc_with_less_than_10_lab_test_15_days), 0),
coalesce(sum(no_of_chc_with_less_than_10_lab_test_30_days), 0)
from opd_result',true,'ACTIVE','3e7f7a9b-0a12-4fa9-a6f2-9fb45871afda'),
	 (1757,60512,'2020-09-18 12:09:14.821',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','92a7bab4-017e-4bed-a43b-8d4502b70c2d'),
	 (508,1,'2019-02-14 15:55:44.904',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','49ecdfda-780a-45d9-a55a-a2e87c0152cc'),
	 (925,60512,'2019-03-13 16:08:04.949',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_ids as(
	select distinct child_cmtc_nrc_admission_detail.child_id,child_cmtc_nrc_admission_detail.screening_center 
	from health_infrastructure_details
	inner join child_cmtc_nrc_admission_detail on health_infrastructure_details.id = child_cmtc_nrc_admission_detail.screening_center
	inner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id
	where health_infrastructure_details.location_id in (
		select child_id from location_hierchy_closer_det where parent_id = #location_id#
	) and child_cmtc_nrc_admission_detail.admission_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	and child_cmtc_nrc_screening_detail.state=''DEATH''
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No", 
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
get_location_hierarchy(imt_family.location_id) as "Location",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
imt_member.dob as "Child DOB",
health_infrastructure_details.name as "Health Infrastructure"
from child_ids
inner join imt_member on imt_member.id = child_ids.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on child_ids.screening_center = health_infrastructure_details.id',true,'ACTIVE','5be8b47f-0621-4642-84cd-90767c6ad258');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1758,60512,'2020-09-18 12:09:14.864',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_follow_up_visit_2 is not null
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','6d221a86-da99-48ea-90ea-0f27a6457c05'),
	 (985,60512,'2019-04-11 14:59:08.757',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','969f1155-4483-49e9-99bb-5b8dfa49a67a'),
	 (719,409,'2019-02-27 13:25:51.211',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','9af86547-41c1-4989-a1d6-29673763e81b'),
	 (720,409,'2019-02-27 13:25:51.214',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','76f72d88-3a00-4de6-a82d-60e317fe6811'),
	 (707,409,'2019-02-27 13:25:17.478',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','fb0ae999-2196-4704-9432-f7c8b6fb096c'),
	 (708,409,'2019-02-27 13:25:17.48',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','62a319ed-cd71-4d15-bb8f-02723b577cb4'),
	 (932,60512,'2019-03-14 12:14:29.407',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','2b7cd3b5-bba8-40d4-bd93-66b587154d5c'),
	 (1765,60512,'2020-09-18 12:16:03.839',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','736c2131-3ef1-4e82-8404-407720a7e461'),
	 (1003,60512,'2019-04-18 15:19:31.257',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','09ff907d-c1c5-4204-b1be-719f5759958d'),
	 (275,1,'2019-02-05 12:41:51.42',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','af9bd6b2-fb19-4b78-ae36-c8c297b1fd2f');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1096,63746,'2019-05-01 17:07:39.301',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #location_id#',true,'ACTIVE','5f4127e0-cedd-43bc-921f-4aaa70c97ebc'),
	 (504,1,'2019-02-14 15:50:30.442',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','da3d7fd5-f92a-458d-a9a7-3f80005855bb'),
	 (711,409,'2019-02-27 13:25:28.182',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','71de1397-9a92-42bb-9bf2-a8a0bd350704'),
	 (712,409,'2019-02-27 13:25:28.184',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','629efb4a-4807-4fb0-8e28-d752a11b0ad6'),
	 (683,409,'2019-02-27 13:23:32.774',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','e1303c1e-e2b3-4ec0-bbc4-bb0c8885f06e'),
	 (684,409,'2019-02-27 13:23:32.796',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','049e2cd2-6005-4d32-9cc9-871b977c57fa'),
	 (831,58981,'2019-03-06 18:54:32.374',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','4a8ecc7f-55a1-41d7-ba6b-eeb1e149ee15'),
	 (832,58981,'2019-03-06 18:54:32.376',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','5cb8a420-f4dc-4d40-9475-c2340fff3b4f'),
	 (833,58981,'2019-03-06 18:54:32.378',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','f361a518-57d7-4507-b14d-cffa992f8910'),
	 (691,409,'2019-02-27 13:24:09.188',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','d49d9325-e2f6-4881-a141-d3da3ef5d15f');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (71,1027,'2018-08-30 11:45:30.163',1,'2021-01-13 20:22:06.427965','financial_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
ldp as (
	select child_id,
        case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name else location_master.name end        
        from location_hierchy_closer_det,location_master,prefered_language
        where parent_id in (select case when #location_id# is not null then #location_id# else loc_id end from 
        um_user_location where user_id = #loggedInUserId# and state = ''ACTIVE'') 
	 and depth = 1 and location_master.id = location_hierchy_closer_det.child_id
), r as (
	select lhcd.parent_id as id
	--,ldp.name 
	,coalesce(sum(stat.age_less_15),0) as age_less_15
	,coalesce(sum(stat.age_15_19),0) as age_15_19
	,coalesce(sum(stat.age_20_24),0) as age_20_24
	,coalesce(sum(stat.age_25_29),0) as age_25_29
	,coalesce(sum(stat.age_30_34),0) as age_30_34
	,coalesce(sum(stat.age_35_39),0) as age_35_39
	,coalesce(sum(stat.age_40_44),0) as age_40_44
	,coalesce(sum(stat.age_45_49),0) as age_45_49
	,coalesce(sum(stat.age_greater_49),0) as age_greater_49
	,coalesce(sum(stat.anc_reg),0) as anc_reg
	from location_hierchy_closer_det lhcd 
	inner join ldp on lhcd.parent_id = ldp.child_id
	left join rch_yearly_location_wise_analytics_data stat on lhcd.child_id = stat.location_id
	where stat.financial_year = case when ''#financial_year#'' != ''null'' then ''#financial_year#''
		else (
			case when extract(month from current_date) > 3 
				then concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)
				else concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end
		) end
	group by lhcd.parent_id
), s as (
	select ldp.name,r.* from r,ldp
	where ldp.child_id = r.id
	order by ldp.name
) 
select  row_number() over() as "Sr. no"
,id as hidden_location_id
,name as  "Location"
,age_less_15  as "Age less than 15"
,case when anc_reg = 0 then 0 else round(age_less_15*100.0/anc_reg,2) end as "percent_col_Age less than 15"
,age_15_19 as "15-19"
,case when anc_reg = 0 then 0 else round(age_15_19*100.0/anc_reg,2) end as "percent_col_15-19"
,age_20_24 as "20-24"
,case when anc_reg = 0 then 0 else round(age_20_24*100.0/anc_reg,2) end as "percent_col_20-24"
,age_25_29 as "25-29"
,case when anc_reg = 0 then 0 else round(age_25_29*100.0/anc_reg ,2) end as "percent_col_25-29"
,age_30_34 as "30-34"
,case when anc_reg = 0 then 0 else round(age_30_34*100.0/anc_reg ,2) end as "percent_col_30-34"
,age_35_39 as "35-39"
,case when anc_reg = 0 then 0 else round(age_35_39*100.0/anc_reg ,2) end as "percent_col_35-39"
,age_40_44 as "40-44"
,case when anc_reg = 0 then 0 else round(age_40_44*100.0/anc_reg ,2) end as "percent_col_40-44"
,age_45_49 as "45-49"
,case when anc_reg = 0 then 0 else round(age_45_49*100.0/anc_reg ,2) end as "percent_col_45-49"
,age_greater_49 as "Age greater than 49"
,case when anc_reg = 0 then 0 else round(age_greater_49*100.0/anc_reg,2) end as "percent_col_Age greater than 49"
,anc_reg  as "Total ANC Registered"
from s
union all
select 
null
,#location_id#
,''<b>Total</b>''
,sum(age_less_15)
,case when sum(anc_reg) = 0 then 0 else round(sum(age_less_15)*100.0/sum(anc_reg),2) end
,sum(age_15_19)
,case when sum(anc_reg) = 0 then 0 else round(sum(age_15_19)*100.0/sum(anc_reg),2) end
,sum(age_20_24)
,case when sum(anc_reg) = 0 then 0 else round(sum(age_20_24)*100.0/sum(anc_reg),2) end
,sum(age_25_29)
,case when sum(anc_reg) = 0 then 0 else round(sum(age_25_29)*100.0/sum(anc_reg),2) end
,sum(age_30_34)
,case when sum(anc_reg) = 0 then 0 else round(sum(age_30_34)*100.0/sum(anc_reg),2) end
,sum(age_35_39)
,case when sum(anc_reg) = 0 then 0 else round(sum(age_35_39)*100.0/sum(anc_reg),2) end
,sum(age_40_44)
,case when sum(anc_reg) = 0 then 0 else round(sum(age_40_44)*100.0/sum(anc_reg),2) end
,sum(age_45_49)
,case when sum(anc_reg) = 0 then 0 else round(sum(age_45_49)*100.0/sum(anc_reg),2) end
,sum(age_greater_49)
,case when sum(anc_reg) = 0 then 0 else round(sum(age_greater_49)*100.0/sum(anc_reg),2) end
,sum(anc_reg)
from s;',true,'ACTIVE','d475545e-c537-4fb9-9bcd-f65c30820a3a'),
	 (137,58981,'2019-01-21 12:27:34.991',1,'2021-01-13 20:22:06.427965','limit_offset,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 infants as (
	select rch_child_analytics_details.loc_id as loc_id,
	imt_member.first_name || '' '' || imt_member.middle_name || '' '' || imt_member.last_name || '' ('' || imt_member.unique_health_id || '')'' || ''<br>'' || imt_member.family_id as member_det,
	to_char(imt_member.dob, ''DD/MM/YYYY'') as dob
	from location_hierchy_closer_det, rch_child_analytics_details,imt_member
	where location_hierchy_closer_det.parent_id = #location_id#
	and location_hierchy_closer_det.child_id = rch_child_analytics_details.loc_id
	and rch_child_analytics_details.member_id = imt_member.id
	and rch_child_analytics_details.dob >= current_date - interval ''5 year''
	and rch_child_analytics_details.death_date is null
	and rch_child_analytics_details.member_state != ''DEAD''
	order by rch_child_analytics_details.dob
	#limit_offset#
), loc as (
	select distinct loc_id from infants
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
infants.member_det as "Member Details", 
loc_det.aoi as "Location",
infants.dob as "Date of Birth",
fhw_det.fhw as "FHW Details"
from infants 
inner join loc_det on infants.loc_id = loc_det.loc_id 
left join fhw_det on infants.loc_id = fhw_det.loc_id;',true,'ACTIVE','5b7a9556-70a7-454f-9ccb-8a60f14adfd6'),
	 (753,58981,'2019-03-01 19:43:55.709',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','68e36534-c8e9-46ed-8f46-99e6f15a7687'),
	 (1205,66522,'2019-07-16 19:17:16.855',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,call_type,location_id','with unsuccess_calls as(
	select 
	*
	from gvk_manage_call_master master
	where call_response in (''com.argusoft.imtecho.gvk.call.cant-talk'',
	''com.argusoft.imtecho.gvk.call.no-number-available'',
	''com.argusoft.imtecho.gvk.call.wrong-mobile-number'',
        ''com.argusoft.imtecho.gvk.call.phone-switched-off'',
        ''com.argusoft.imtecho.gvk.call.unresponsive'',
        ''com.argusoft.imtecho.gvk.call.not-reachable'')
	and location_id in (select child_id from location_hierchy_closer_det where parent_id = (case when #location_id# = -2 then 2 else #location_id# end) 
and depth <= (case when #location_id# = -2 then 0 else 8 end))
	and case when ''all'' = ''#call_type#'' then true 
	when ''#call_type#'' = ''FHW_CH_SER_VERI'' then call_type in (''FHW_CH_SER_VERI'',''FHW_DEL_VERI'',''FHW_TT_VERI'',''FHW_CH_SER_PREG_VERI'')
	else call_type = ''#call_type#'' end
and created_on between case when ''#from_date#'' = ''null'' then now() else to_date(''#from_date#'',''MM-DD-YYYY'') end and to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds''
order by id #limit_offset#

),
unsuccess_calls_details as (
	select 
	concat(im.first_name,'' '',im.last_name, ''('',im.unique_health_id ,'')'') as name,
	master.mobile_number,
	master.created_on,
	master.call_type,
	master.location_id,
	master.id,
    master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join imt_member im on im.id = master.member_id
	where call_response != ''com.argusoft.imtecho.gvk.call.success''
	
	union all 
	select 
	concat(uu.first_name,'' '',uu.last_name, ''('',role.name ,'')'') as name,
	master.mobile_number,
	master.created_on,
	master.call_type,
	master.location_id,
	master.id,
    master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join um_user uu on uu.id = master.user_id
	inner join um_role_master role on uu.role_id = role.id 
	where call_response != ''com.argusoft.imtecho.gvk.call.success''
	
union  all
	select 
	case when im.id is null then imf.family_id else concat(im.first_name,'' '',im.last_name, '' ('',imf.family_id ,'')'') end as name,
	master.mobile_number,
	master.created_on,
	master.call_type,
	master.location_id,
	master.id,
    master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join imt_family imf on imf.family_id = master.family_id
	left join imt_member im on im.family_id = imf.family_id and im.family_head = true
	where call_response != ''com.argusoft.imtecho.gvk.call.success''

union all
    select
    (master.mobile_number\:\:json->0)#>>''{name}'' as name,
	master.mobile_number,	
    master.created_on,
    master.call_type,
	master.location_id,
	master.id,
	master.created_by,
	master.call_response
	from unsuccess_calls master
	where master.member_id is null and master.user_id is null 
    and call_response != ''com.argusoft.imtecho.gvk.call.success''	
),
response as (
select
get_location_hierarchy(master.location_id) as Location_hierarchy, 
master.name,
case when call_response = ''com.argusoft.imtecho.gvk.call.no-number-available'' then ''No number available''
when call_response = ''com.argusoft.imtecho.gvk.call.cant-talk'' then ''Can''''t talk''
when call_response = ''com.argusoft.imtecho.gvk.call.wrong-mobile-number'' then ''Wrong mobile number''
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-asha-husband'' then ''Number belongs to asha''	-- todo
--when call_response = ''com.argusoft.imtecho.gvk.call.not-interested-in-treatment'' then ''Not intersted in treatment''
when call_response = ''com.argusoft.imtecho.gvk.call.unresponsive'' then ''Unreponsive''
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-husband'' then ''Number belongs to anm'' 
when call_response = ''com.argusoft.imtecho.gvk.call.not-reachable'' then ''Not reachable''
when call_response = ''com.argusoft.imtecho.gvk.call.phone-switched-off'' then ''Phone switched off''
when call_response = ''com.argusoft.imtecho.gvk.call.number-collection-pending'' then ''Number collection pending''			-- todo
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary-husband'' then ''number of beneficiary''
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary''
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-family-member''
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-neighbour''
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-or-anm-husband'' then ''ANM or husband''			-- todo
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-ashah-or-asha-husband'' then ''Asha or husband''			-- todo
else ''Other'' end reason,
master.mobile_number\:\:json,
master.location_id,
master.created_on,
master.created_by,
master.call_type,
master.id
from unsuccess_calls_details master
 ),
mo as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code in (''mo_phc'',''mo_uphc''))
),
mo_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	mo group by location_id
),
mo_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from mo_unique mo
	inner join um_user um on um.id = mo.mo_id
),
asha as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code = ''ASHA'')
	where  uu.state = ''ACTIVE''
),
asha_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	asha group by location_id
),
asha_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from asha_unique mo
	inner join um_user um on um.id = mo.mo_id
),
anm as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code = ''FHW'')
	where uu.state = ''ACTIVE''
),
anm_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	anm group by location_id
),
anm_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from anm_unique mo
	inner join um_user um on um.id = mo.mo_id
),


contacts as (
	select json_array_elements(mobile_number)->>''mobileNumber'' as contact ,json_array_elements(mobile_number)->>''isCalled'' as isCalled ,id
	from response where mobile_number is not null ),
contacts_display_date as (	
	select string_agg(
	case when isCalled=''true'' then concat(''<b>'',contact,''</b>'') else contact end
	,'','') as contact,id from contacts
	group by id)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
resp.name as "Called Person",
Location_hierarchy as "Location",
contacts.contact as "Dialed Number",
to_char(resp.created_on,''DD-MM-YYYY HH:MI PM'') as  "Call Date",

case when resp.call_type = ''FHW_HIGH_RISK_CONF'' then ''FHW highrisk conformation''
when resp.call_type = ''IMMUN_VERI'' then ''Immunization verification''
when resp.call_type = ''FAM_VERI'' then ''Family verification''
when resp.call_type = ''PREG_REGI_VERI'' then ''Pregnancy registration verification''
when resp.call_type = ''HIGH_RISK_VERI'' then ''Highrisk followup verification''
when resp.call_type = ''MIG_IN_VERI'' then ''Member IN migration verification''
when resp.call_type = ''MIG_OUT_VERI'' then ''Member OUT migration verification''
when resp.call_type = ''DUP_MEM_VERI'' then ''Duplicate member verification'' end as "Call Type",
resp.reason as "Reason for Unsuccessful Calling",
mo.name as "MO Details",
anm.name as "ANM Details",
asha.name as "ASHA Details"
,concat(um.first_name, '' '', um.last_name) as "RO Details"
--fhw.name
from response resp
left join contacts_display_date contacts on resp.id = contacts.id
left join mo_details mo on mo.location_id = resp.location_id
left join anm_details anm on anm.location_id = resp.location_id
left join asha_details asha on asha.location_id = resp.location_id
left join um_user um on resp.created_by = um.id',true,'ACTIVE','cd1eb838-1497-4f01-8689-1e4f2e9856a6'),
	 (754,58981,'2019-03-01 19:43:55.72',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','54b0d11d-79d8-4ac7-a9e5-0eca2a0ef98e'),
	 (581,1,'2019-02-18 13:18:08.531',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
	where l.child_id = c.f_ipv2_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.f_ipv2 is not null
	group by m.id, f.location_id, c.dob, f_ipv2
	having case when extract(month from f_ipv2) > 3 
	then concat(extract(year from f_ipv2), ''-'', extract(year from f_ipv2) + 1)
	else concat(extract(year from f_ipv2) - 1, ''-'', extract(year from f_ipv2)) end = 
		case when #financial_year# is null then 
			case when extract(month from current_date) > 3 
			then concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)
			else concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end
		else ''#financial_year#'' end
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','580f0185-22d6-4a3d-ae42-51d0aa4775d3'),
	 (700,409,'2019-02-27 13:24:54.756',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','57c88302-edd4-4c33-ba53-07ea997764df'),
	 (251,1,'2019-02-05 12:02:08.482',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','4e4e3efc-347b-4513-9c13-af902da27675'),
	 (404,1,'2019-02-13 12:31:41.916',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','89030e3d-5a74-4c73-ac0e-b72e96b748d2'),
	 (406,1,'2019-02-13 12:31:41.921',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','848fe347-6b44-416d-97f9-e1a0a0729d1d');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1373,69973,'2019-08-20 20:42:14.079',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
select
to_date(case when ''#from_date#'' =''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when ''#to_date#'' =''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') as to_date
),
migration_master_det as (
select mm.* from (select * from migration_master, dates) mm 
inner join location_hierchy_closer_det depth_child on depth_child.child_id=mm.reported_location_id 
inner join location_hierchy_closer_det lhcd on (lhcd.child_id=depth_child.parent_id)
 where (case when (mm.from_date is not null and mm.to_date is not null) then
reported_on between mm.from_date and mm.to_date else 1=1 end) and mm.state not in (''DUPLICATE'',''REVERTED'')
and mm.type=''IN'' and mm.state in (''REPORTED'',''NOT_RESOLVED'') and migrated_location_not_known = true and lhcd.parent_id=#location_id# and lhcd.depth=1  #limit_offset#
),
final_Query as (
select concat(im.first_name,'' '', im.middle_name,'' '', im.last_name)|| case when im.unique_health_id is not null then '' (''|| im.unique_health_id||'')'' end
as member_name, concat(uu.first_name,'' '', uu.middle_name,'' '', uu.last_name)|| case when uu.contact_number is not null then '' (''|| uu.contact_number||'')'' end as reported_by, get_location_hierarchy(mm.location_migrated_from) as from_name, get_location_hierarchy(mm.location_migrated_to) as to_name,
to_char(mm.reported_on,''DD/MM/YYYY'') as reported_on,
/* mm.state,*/
 mm.gvk_call_status, to_char(mm.schedule_date,''DD/MM/YYYY'') as schedule_date , mm.call_attempt
from migration_master_det mm
inner join um_user uu on uu.id=mm.reported_by
left join imt_member im on im.id=mm.member_id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
fq.member_name as "Member Name",
fq.reported_by as "Reported By",
fq.reported_on as "Reported On",
fq.from_name as "Migrated From",
fq.to_name as "Migrated To",
/*
fq.state as "Migration Status",
*/
fq.gvk_call_status as "Call Status",
fq.schedule_date as "Schedule Date",
fq.call_attempt as "Call Attempt"
from final_Query fq',true,'ACTIVE','85dd9244-3682-4d6e-b36f-4b83b0bf159e'),
	 (1009,60512,'2019-04-18 15:35:55.221',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','061d11bb-aff3-4626-99bd-fb8e51dff172'),
	 (1220,66522,'2019-07-17 16:51:49.223',1,'2021-01-13 20:22:06.427965','call_type','with  types as (
select ''all'' as key, ''All'' as value, 1 as ord
union
select ''FHW_HIGH_RISK_CONF'' as key,''Fhw highrisk conformation'' as value, 2 as ord
union
select ''IMMUN_VERI'' as key, ''Immunization verification'' as value, 3 as ord
union
select ''FAM_VERI'' as key, ''Family verification'' as value, 4 as ord
union
select ''PREG_REGI_VERI'' as key,''Pregnancy registration verification'' as value, 5 as ord
union
select ''MIG_IN_VERI'' as key, ''Member IN migration verification'' as value, 6 as ord
union
select ''HIGH_RISK_VERI'' as key, ''Highrisk followup verification'' as value, 7 as ord
union
select ''MIG_OUT_VERI'' as key,''Member OUT migration verification'' as value, 8 as ord
union
select ''DUP_MEM_VERI'' as key, ''Duplicate member verification'' as value, 9 as ord)
select value as call_type from types where key = ''#call_type#''',true,'ACTIVE','e9570bb4-7bf2-4554-b0e9-d22d36590de9'),
	 (247,1,'2019-02-05 11:59:16.078',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','1ccee015-d32d-40de-9422-52a6d98df12f'),
	 (1795,74841,'2020-10-28 13:13:45.732',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','b127be48-36e4-411c-990a-40d113c2e300'),
	 (1204,66522,'2019-07-16 18:51:44.973',1,'2021-01-13 20:22:06.427965','from_date,to_date,location,call_type','with loc_det as (
select lm.id as loc_id ,lm.english_name as name,lm.location_code,lh.depth 
from location_hierchy_closer_det lh,location_master lm
where lm.id = lh.child_id and lh.parent_id = #location# and lh.depth = 1

union

select lm.id as loc_id ,lm.english_name as name,lm.location_code ,0 as depth
from location_master lm
where id = #location# and #location# = 2 and (case when ''all'' in (#call_type#) or ''DUP_MEM_VERI'' in (#call_type#) then true else false end)
),
data_for_report as(
select * 
from gvk_manage_call_master master 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = master.location_id 
inner join loc_det on lhcd.parent_id = loc_det.loc_id and lhcd.depth <= (case when loc_det.depth = 0 then 0 else 8 end)
where 
master.location_id = lhcd.child_id
and case when ''all'' in (#call_type#) then true else call_type in (#call_type#) end
and created_on between case when ''#from_date#'' = ''null'' then now() else to_date(''#from_date#'',''MM-DD-YYYY'') end and to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds'' 

),
success_unique_call as (
select parent_id, count(distinct(member_id))+count(distinct(user_id)) as success_unique_type_user_call from data_for_report where 
call_response not in (''com.argusoft.imtecho.gvk.call.cant-talk'',
	''com.argusoft.imtecho.gvk.call.no-number-available'',
	''com.argusoft.imtecho.gvk.call.wrong-mobile-number'',
        ''com.argusoft.imtecho.gvk.call.phone-switched-off'',
        ''com.argusoft.imtecho.gvk.call.unresponsive'',
        ''com.argusoft.imtecho.gvk.call.not-reachable''

	) group by parent_id 
),
call_response as (
select count(1) as total,
parent_id,
sum(case when call_response not in (''com.argusoft.imtecho.gvk.call.cant-talk'',
	''com.argusoft.imtecho.gvk.call.no-number-available'',
	''com.argusoft.imtecho.gvk.call.wrong-mobile-number'',
        ''com.argusoft.imtecho.gvk.call.phone-switched-off'',
        ''com.argusoft.imtecho.gvk.call.unresponsive'',
        ''com.argusoft.imtecho.gvk.call.not-reachable''

	) then 1 else 0 end ) as success_call,
sum(case when call_response in 
(
''com.argusoft.imtecho.gvk.call.cant-talk'',
	''com.argusoft.imtecho.gvk.call.no-number-available'',
	''com.argusoft.imtecho.gvk.call.wrong-mobile-number'',
        ''com.argusoft.imtecho.gvk.call.phone-switched-off'',
  ''com.argusoft.imtecho.gvk.call.unresponsive'',
        ''com.argusoft.imtecho.gvk.call.not-reachable''
) then 1 else 0 end ) as umsuccess_call,
sum(case when call_response = ''com.argusoft.imtecho.gvk.call.cant-talk'' then 1 else 0 end ) as cant_talk_now,
sum(case when call_response = ''com.argusoft.imtecho.gvk.call.no-number-available'' then 1 else 0 end ) as no_mobile_no,
sum(case when call_response = ''com.argusoft.imtecho.gvk.call.wrong-mobile-number'' then 1 else 0 end ) as wrong_mobile_no,
sum(case when call_response = ''com.argusoft.imtecho.gvk.call.unresponsive'' then 1 else 0 end ) as call_unresponsive,
sum(case when call_response = ''com.argusoft.imtecho.gvk.call.not-reachable'' then 1 else 0 end ) as not_reachable,
sum(case when call_response = ''com.argusoft.imtecho.gvk.call.phone-switched-off'' then 1 else 0 end ) as phone_switch_off,
count(distinct(member_id))+count(distinct(user_id)) as total_unique_type_user_call
from data_for_report group by parent_id ),
report_final_data as (
select cr.*, suc.success_unique_type_user_call from call_response cr
left join success_unique_call suc on
cr.parent_id=suc.parent_id
)
select 
case when location.id = 2 then  -2 else location.id end as hidden_location_id,
location.name,
total as "Total Calls",
total_unique_type_user_call as "Unique Total Call",
success_call as "Successful Calls",
success_unique_type_user_call as "Unique Success Call",
round(((success_call*100.0)/total),2) as "Successful %",
umsuccess_call as "Unsuccessful calls",
round(((umsuccess_call*100.0)/total),2) as "Unsuccessful %",
cant_talk_now as "Can’t talk right now",
no_mobile_no as "No. not displayed",
wrong_mobile_no as "Wrong number",
not_reachable as "Not reachable",
call_unresponsive as "Call unresponsive",
phone_switch_off as "Phone Switch Off"
from report_final_data call , location_master location
where call.parent_id = location.id
union all 
select
#location# as hidden_location_id,
''Grand Total'' ,
sum(total),
sum(total_unique_type_user_call),
sum(success_call),
sum(success_unique_type_user_call),
round(((sum(success_call)*100.0)/sum(total)),2) ,
sum(umsuccess_call),
round(((sum(umsuccess_call))*100.0/sum(total)),2) ,
sum(cant_talk_now),
sum(no_mobile_no),
sum(wrong_mobile_no),
sum(not_reachable),
sum(call_unresponsive),
sum(phone_switch_off)
from report_final_data',true,'ACTIVE','2de12967-d058-483f-87cf-8e4ca8ad8008'),
	 (1209,66522,'2019-07-17 11:31:39.903',1,'2021-01-13 20:22:06.427965',NULL,'with  types as (
select ''''''all'''''' as key, ''All'' as value, 1 as ord
union
select ''''''FHW_HIGH_RISK_CONF'''''' as key,''Fhw highrisk conformation'' as value, 2 as ord
union
select ''''''IMMUN_VERI'''''' as key, ''Immunization verification'' as value, 3 as ord
union
select ''''''FAM_VERI'''''' as key, ''Family verification'' as value, 4 as ord
union
select ''''''PREG_REGI_VERI'''''' as key,''Pregnancy registration verification'' as value, 5 as ord
union
select ''''''MIG_IN_VERI'''''' as key, ''Member IN migration verification'' as value, 6 as ord
union
select ''''''HIGH_RISK_VERI'''''' as key, ''Highrisk followup verification'' as value, 7 as ord
union
select ''''''MIG_OUT_VERI'''''' as key,''Member OUT migration verification'' as value, 8 as ord
union
select ''''''DUP_MEM_VERI'''''' as key, ''Duplicate member verification'' as value, 9 as ord
union
select ''''''FHW_DEL_VERI'''',''''FHW_TT_VERI'''',''''FHW_CH_SER_VERI'''''' as key,''Beneficiary Service Verification'' as value, 10 as ord)
select * from types order by ord',true,'ACTIVE','dd9af742-cebe-4de6-8fce-f6d3def0d004'),
	 (101,1027,'2018-11-16 16:53:07.909',1,'2021-01-13 20:22:06.427965','financial_year,location_id','----------Services Provided To The Children Registered During The Year ( 0 To 1 Year )------
with ldp as(
	select child_id, location_master.name 
	from location_hierchy_closer_det, location_master 
	where parent_id = #location_id# and depth = 1 
	and location_master.id = location_hierchy_closer_det.child_id
),expected_target as (
	select ldp.child_id,
	sum(location_wise_expected_target.ela_dpt_opv_mes_vita_1dose) as ela_dpt_opv_mes_vita_1dose
	from ldp
	inner join location_hierchy_closer_det on ldp.child_id = location_hierchy_closer_det.parent_id
	inner join location_wise_expected_target on location_hierchy_closer_det.child_id = location_wise_expected_target.location_id
	and location_hierchy_closer_det.child_loc_type in (''P'',''U'')
	and location_wise_expected_target.financial_year = ''#financial_year#''
	group by ldp.child_id
), r as(
	select lhcd.parent_id as id, 
	coalesce(sum(stat.total_reg_0_1),0) as total_reg_0_1, 
	coalesce(sum(stat.weighed_0_1),0) as weighed_0_1, 
	coalesce(sum(stat.weighed_less_than_2_5_0_1),0) as weighed_less_than_2_5_0_1, 
	coalesce(sum(stat.bcg_given_0_1),0) as bcg_given_0_1, 
	coalesce(sum(stat.dpt_1_given_0_1),0) as dpt_1_given_0_1, 
	coalesce(sum(stat.penta_1_given_0_1),0) as penta_1_given_0_1, 
	coalesce(sum(stat.opv_1_given_0_1),0) as opv_1_given_0_1,
	coalesce(sum(stat.fipv_1_given_0_1),0) as fipv_1_given_0_1,
	coalesce(sum(stat.dpt_2_given_0_1),0) as dpt_2_given_0_1,
	coalesce(sum(stat.penta_2_given_0_1),0) as penta_2_given_0_1,
	coalesce(sum(stat.opv_2_given_0_1),0) as opv_2_given_0_1,
	coalesce(sum(stat.dpt_3_given_0_1),0) as dpt_3_given_0_1,
	coalesce(sum(stat.penta_3_given_0_1),0) as penta_3_given_0_1,
	coalesce(sum(stat.opv_3_given_0_1),0) as opv_3_given_0_1,
	coalesce(sum(stat.fipv_2_given_0_1),0) as fipv_2_given_0_1,
	coalesce(sum(stat.measles_1_given_0_1),0) as measles_1_given_0_1,
	coalesce(sum(stat.measles_rubella_given_0_1),0) as measles_rubella_given_0_1,
	coalesce(sum(stat.rota_virus_1_given_0_1),0) as rota_virus_1_given_0_1,
	coalesce(sum(stat.rota_virus_2_given_0_1),0) as rota_virus_2_given_0_1,
	coalesce(sum(stat.rota_virus_3_given_0_1),0) as rota_virus_3_given_0_1,
	coalesce(sum(stat.fully_immunized_0_1),0) as fully_immunized_0_1
	from ldp
	inner join location_hierchy_closer_det lhcd on lhcd.parent_id = ldp.child_id
	left join child_yearly_location_wise_analytics stat on lhcd.child_id = stat.location_id
	where stat.financial_year = ''#financial_year#'' 
	group by lhcd.parent_id
), s as(
	select ldp.child_id, ldp.name,
	expected_target.ela_dpt_opv_mes_vita_1dose,
	coalesce(r.total_reg_0_1,0) as total_reg_0_1, 
	coalesce(r.weighed_0_1,0) as weighed_0_1, 
	coalesce(r.weighed_less_than_2_5_0_1,0) as weighed_less_than_2_5_0_1, 
	coalesce(r.bcg_given_0_1,0) as bcg_given_0_1, 
	coalesce(r.dpt_1_given_0_1,0) as dpt_1_given_0_1, 
	coalesce(r.penta_1_given_0_1,0) as penta_1_given_0_1, 
	coalesce(r.opv_1_given_0_1,0) as opv_1_given_0_1,
	coalesce(r.fipv_1_given_0_1,0) as fipv_1_given_0_1,
	coalesce(r.dpt_2_given_0_1,0) as dpt_2_given_0_1,
	coalesce(r.penta_2_given_0_1,0) as penta_2_given_0_1,
	coalesce(r.opv_2_given_0_1,0) as opv_2_given_0_1,
	coalesce(r.dpt_3_given_0_1,0) as dpt_3_given_0_1,
	coalesce(r.penta_3_given_0_1,0) as penta_3_given_0_1,
	coalesce(r.opv_3_given_0_1,0) as opv_3_given_0_1,
	coalesce(r.fipv_2_given_0_1,0) as fipv_2_given_0_1,
	coalesce(r.measles_1_given_0_1,0) as measles_1_given_0_1,
	coalesce(r.measles_rubella_given_0_1,0)as measles_rubella_given_0_1,
	coalesce(r.rota_virus_1_given_0_1,0)as rota_virus_1_given_0_1,
	coalesce(r.rota_virus_2_given_0_1,0)as rota_virus_2_given_0_1,
	coalesce(r.rota_virus_3_given_0_1,0)as rota_virus_3_given_0_1,
	
	coalesce(r.fully_immunized_0_1,0) as fully_immunized_0_1
	from ldp left join r on ldp.child_id = r.id 
	left join expected_target on ldp.child_id = expected_target.child_id
	order by ldp.name
)
select  row_number() over() as "Sr. no", 
child_id as hidden_location_id,
name as  "Location", 
total_reg_0_1 as "Reg from 1st April",
case when ela_dpt_opv_mes_vita_1dose is null then ''Not available'' else cast(ela_dpt_opv_mes_vita_1dose as text) end as "Expected Vaccination Dose",
weighed_0_1  as "Children weighed", 
case when total_reg_0_1 = 0 then 0 else round(weighed_0_1*100.0/total_reg_0_1,2) end as "percent_col_Children weighed",
weighed_less_than_2_5_0_1 as "Out of weighed, less than 2.5 kg", 
case when total_reg_0_1 = 0 then 0 else round(weighed_less_than_2_5_0_1*100.0/total_reg_0_1,2) end as "percent_col_Out of weighed, less than 2.5 kg",
bcg_given_0_1  as "BCG given",
case when total_reg_0_1 = 0 then 0 else round(bcg_given_0_1*100.0/total_reg_0_1 ,2) end as "percent_col_BCG given",
dpt_1_given_0_1 as "DPT 1 given",
case when total_reg_0_1 = 0 then 0 else round(dpt_1_given_0_1*100.0/total_reg_0_1 ,2) end as "percent_col_DPT 1 given",
penta_1_given_0_1 as "Penta 1 given",
case when total_reg_0_1 = 0 then 0 else round(penta_1_given_0_1*100.0/total_reg_0_1,2) end as "percent_col_Penta 1 given", 
opv_1_given_0_1  as "OPV 1 given",
case when total_reg_0_1 = 0 then 0 else round(opv_1_given_0_1*100.0/total_reg_0_1,2) end as "percent_col_OPV 1 given",
fipv_1_given_0_1 as "FIPV 1 given",
case when total_reg_0_1 = 0 then 0 else round(fipv_1_given_0_1*100.0/total_reg_0_1 ,2) end as "percent_col_FIPV 1 given",
dpt_2_given_0_1 as "DPT 2 given",
case when total_reg_0_1 = 0 then 0 else round(dpt_2_given_0_1*100.0/total_reg_0_1 ,2) end as "percent_col_DPT 2 given", 
penta_2_given_0_1 as "Penta 2 given",
case when total_reg_0_1 = 0 then 0 else round(penta_2_given_0_1*100.0/total_reg_0_1,2) end as "percent_col_Penta 2 given", 
opv_2_given_0_1 as "OPV 2 given",
case when total_reg_0_1 = 0 then 0 else round(opv_2_given_0_1*100.0/total_reg_0_1,2) end as "percent_col_OPV 2 given", 
dpt_3_given_0_1 as "DPT 3 given",
case when total_reg_0_1 = 0 then 0 else round(dpt_3_given_0_1*100.0/total_reg_0_1 ,2) end as "percent_col_DPT 3 given",
penta_3_given_0_1  as "Penta 3 given",
case when total_reg_0_1 = 0 then 0 else round(penta_3_given_0_1*100.0/total_reg_0_1 ,2) end as "percent_col_Penta 3 given",
opv_3_given_0_1 as "OPV 3 given",
case when total_reg_0_1 = 0 then 0 else round(opv_3_given_0_1*100.0/total_reg_0_1,2) end as "percent_col_OPV 3 given", 
fipv_2_given_0_1  as "FIPV 2 given",
case when total_reg_0_1 = 0 then 0 else round(fipv_2_given_0_1*100.0/total_reg_0_1,2) end as "percent_col_FIPV 2 given",
measles_1_given_0_1 as "Measles 1 given",
case when total_reg_0_1 = 0 then 0 else round(measles_1_given_0_1*100.0/total_reg_0_1 ,2) end as "percent_col_Measles 1 given",
measles_rubella_given_0_1 as "Measles Rubella 1 given",
case when total_reg_0_1 = 0 then 0 else round(measles_rubella_given_0_1*100.0/total_reg_0_1 ,2) end as "percent_col_Measles Rubella 1 given",
rota_virus_1_given_0_1 as "Rota Virus 1 given",
case when total_reg_0_1 = 0 then 0 else round(rota_virus_1_given_0_1*100.0/total_reg_0_1 ,2) end as "percent_col_Rota Virus 1 given",
rota_virus_2_given_0_1 as "Rota Virus 2 given",
case when total_reg_0_1 = 0 then 0 else round(rota_virus_2_given_0_1*100.0/total_reg_0_1 ,2) end as "percent_col_Rota Virus 2 given",
rota_virus_3_given_0_1 as "Rota Virus 3 given",
case when total_reg_0_1 = 0 then 0 else round(rota_virus_3_given_0_1*100.0/total_reg_0_1 ,2) end as "percent_col_Rota Virus 3 given",
fully_immunized_0_1 as "Fully immuised",
case when total_reg_0_1 = 0 then 0 else round(fully_immunized_0_1*100.0/total_reg_0_1 ,2) end as "percent_col_Fully immuised" 
from s
union all
select 
null, 
#location_id#,
''<b>Total</b>'', 
sum(total_reg_0_1),
cast(sum(case when ela_dpt_opv_mes_vita_1dose is not null then ela_dpt_opv_mes_vita_1dose else 0 end) as text),
sum(weighed_0_1),
case when sum(total_reg_0_1) = 0 then 0 else round(sum(weighed_0_1)*100.0/sum(total_reg_0_1),2) end,
sum(weighed_less_than_2_5_0_1),
case when sum(total_reg_0_1) = 0 then 0 else round(sum(weighed_less_than_2_5_0_1)*100.0/sum(total_reg_0_1),2) end, 
sum(bcg_given_0_1),
case when sum(total_reg_0_1) = 0 then 0 else round(sum(bcg_given_0_1)*100.0/sum(total_reg_0_1),2) end, 
sum(dpt_1_given_0_1),
case when sum(total_reg_0_1) = 0 then 0 else round(sum(dpt_1_given_0_1)*100.0/sum(total_reg_0_1),2) end,
sum(penta_1_given_0_1),
case when sum(total_reg_0_1) = 0 then 0 else round(sum(penta_1_given_0_1)*100.0/sum(total_reg_0_1),2) end, 
sum(opv_1_given_0_1),
case when sum(total_reg_0_1) = 0 then 0 else round(sum(opv_1_given_0_1)*100.0/sum(total_reg_0_1),2) end, 
sum(fipv_1_given_0_1),
case when sum(total_reg_0_1) = 0 then 0 else round(sum(fipv_1_given_0_1)*100.0/sum(total_reg_0_1),2) end, 
sum(dpt_2_given_0_1),
case when sum(total_reg_0_1) = 0 then 0 else round(sum(dpt_2_given_0_1)*100.0/sum(total_reg_0_1),2) end,
sum(penta_2_given_0_1),
case when sum(total_reg_0_1) = 0 then 0 else round(sum(penta_2_given_0_1)*100.0/sum(total_reg_0_1),2) end, 
sum(opv_2_given_0_1),
case when sum(total_reg_0_1) = 0 then 0 else round(sum(opv_2_given_0_1)*100.0/sum(total_reg_0_1),2) end, 
sum(dpt_3_given_0_1),
case when sum(total_reg_0_1) = 0 then 0 else round(sum(dpt_3_given_0_1)*100.0/sum(total_reg_0_1),2) end, 
sum(penta_3_given_0_1),
case when sum(total_reg_0_1) = 0 then 0 else round(sum(penta_3_given_0_1)*100.0/sum(total_reg_0_1),2) end,
sum(opv_3_given_0_1),
case when sum(total_reg_0_1) = 0 then 0 else round(sum(opv_3_given_0_1)*100.0/sum(total_reg_0_1),2) end, 
sum(fipv_2_given_0_1),
case when sum(total_reg_0_1) = 0 then 0 else round(sum(fipv_2_given_0_1)*100.0/sum(total_reg_0_1),2) end, 
sum(measles_1_given_0_1),
case when sum(total_reg_0_1) = 0 then 0 else round(sum(measles_1_given_0_1)*100.0/sum(total_reg_0_1),2) end, 
sum(measles_rubella_given_0_1),
case when sum(total_reg_0_1) = 0 then 0 else round(sum(measles_rubella_given_0_1)*100.0/sum(total_reg_0_1),2) end, 
sum(rota_virus_1_given_0_1),
case when sum(total_reg_0_1) = 0 then 0 else round(sum(rota_virus_1_given_0_1)*100.0/sum(total_reg_0_1),2) end, 
sum(rota_virus_2_given_0_1),
case when sum(total_reg_0_1) = 0 then 0 else round(sum(rota_virus_2_given_0_1)*100.0/sum(total_reg_0_1),2) end, 
sum(rota_virus_3_given_0_1),
case when sum(total_reg_0_1) = 0 then 0 else round(sum(rota_virus_3_given_0_1)*100.0/sum(total_reg_0_1),2) end, 
sum(fully_immunized_0_1),
case when sum(total_reg_0_1) = 0 then 0 else round(sum(fully_immunized_0_1)*100.0/sum(total_reg_0_1),2) end
from s;',true,'ACTIVE','3467ce1c-521e-4788-b822-afd33d836865'),
	 (1098,63746,'2019-05-01 17:10:21.281',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #location_id#',true,'ACTIVE','90da919d-d1d9-45f2-a514-92d05ea3fc76'),
	 (1219,66522,'2019-07-17 16:51:49.215',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','afcf7578-714c-4997-ab5a-d43cdca88093');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1223,66522,'2019-07-17 16:52:30.686',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','a271d571-19ed-42f1-b5d4-99051ca57f1b'),
	 (541,1,'2019-02-14 16:20:37.89',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','21b0040a-14f6-4c71-bf98-c9a5deae6a3f'),
	 (892,64189,'2019-03-07 10:57:39.194',1,'2021-01-13 20:22:06.427965','from_date','select to_char(to_date(''#from_date#'',''MM/DD/YYYY''),''DD/MM/YYYY'') as from_date;',true,'ACTIVE','8a83e096-b569-4335-8a19-1e6376368d77'),
	 (1361,69973,'2019-08-20 18:10:36.741',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','aba76597-71cb-422f-a7b9-095cd80777e7'),
	 (1011,60512,'2019-04-18 15:39:00.722',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','8174997e-1325-495c-87c2-b1670205680f'),
	 (768,64189,'2019-03-04 12:20:34.754',1,'2021-01-13 20:22:06.427965','health_infra_id','select name as health_infra_id from health_infrastructure_details where id = #health_infra_id#',true,'ACTIVE','03bf8d4a-4532-4419-9dc9-8b042821abe2'),
	 (1772,74841,'2020-09-21 18:12:04.623',1,'2021-01-13 20:22:06.427965','call_type','with  types as (
select ''all'' as key, ''All'' as value, 1 as ord
union
select ''FHW_HIGH_RISK_CONF'' as key,''Fhw highrisk conformation'' as value, 2 as ord
union
select ''IMMUN_VERI'' as key, ''Immunization verification'' as value, 3 as ord
union
select ''FAM_VERI'' as key, ''Family verification'' as value, 4 as ord
union
select ''PREG_REGI_VERI'' as key,''Pregnancy registration verification'' as value, 5 as ord
union
select ''MIG_IN_VERI'' as key, ''Member IN migration verification'' as value, 6 as ord
union
select ''HIGH_RISK_VERI'' as key, ''Highrisk followup verification'' as value, 7 as ord
union
select ''MIG_OUT_VERI'' as key,''Member OUT migration verification'' as value, 8 as ord
union
select ''DUP_MEM_VERI'' as key, ''Duplicate member verification'' as value, 9 as ord)
select value as call_type from types where key = ''#call_type#''',true,'ACTIVE','ed9ec8b7-0548-4c63-a654-5203e060aa85'),
	 (549,1,'2019-02-14 16:23:36.141',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','a9b0a2e7-d432-4683-a95e-868fcb0b1a34'),
	 (1101,63746,'2019-05-01 17:10:36.177',1,'2021-01-13 20:22:06.427965','limit_offset,age_group_or_child_count,location_id','with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)
,member_location as (
	select m.member_id, m.loc_id  from rch_eligible_couple_analytics m
	inner join locations on locations.child_id = m.loc_id
        where  ( case 
		when ''#age_group_or_child_count#'' = ''5+'' then children_count >= 5
		when ''#age_group_or_child_count#'' = ''0'' then children_count is null 
		when ''#age_group_or_child_count#'' = ''1'' then children_count = 1 
		when ''#age_group_or_child_count#'' = ''2'' then children_count = 2 
		when ''#age_group_or_child_count#'' = ''3'' then children_count = 3 
		when ''#age_group_or_child_count#'' = ''4'' then children_count = 4
		when ''#age_group_or_child_count#'' = ''null'' then true
	end) 	and m.last_method_of_contraception in (''FMLSTR'') 
        #limit_offset#
)
,loc_det as(
	select member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id
	,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id
	from location_master,location_type_master,member_location 
	where 
	location_master.id = member_location.loc_id and location_type_master.type = location_master.type
)
select 
	 ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
	mem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as "Member Name",
	fam.family_id as "Family Id",to_char(r.dob, ''DD/MM/YYYY'') as "Birth Date",
	string_agg(lm.name,''> '' order by lhcd.depth desc) as "Location Hierarchy"  
from rch_eligible_couple_analytics r
inner join loc_det on loc_det.member_id = r.member_id
inner join imt_member mem on mem.id = r.member_id
inner join imt_family fam on mem.family_id = fam.family_id
inner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id
inner join location_master lm on lm.id = lhcd.parent_id
group by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;',true,'ACTIVE','61752846-e992-4f05-a479-bd916fee1fd1'),
	 (1102,63746,'2019-05-01 17:11:08.488',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #location_id#',true,'ACTIVE','a921ed5c-faae-4068-8fcc-a28b2ca730f8');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (896,64189,'2019-03-07 11:04:26.355',1,'2021-01-13 20:22:06.427965','from_date','select to_char(to_date(''#from_date#'',''MM/DD/YYYY''),''DD/MM/YYYY'') as from_date;',true,'ACTIVE','d82a7d2c-626d-47da-8743-9bb905cb4e3c'),
	 (1396,66522,'2019-08-28 15:05:51.335',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','f7fb09f9-316c-4643-a18b-5c97f3cc4c01'),
	 (1047,409,'2019-04-24 17:29:37.329',1,'2021-01-13 20:22:06.427965',NULL,'select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as year 
from generate_series(date ''2019-04-01'', current_date, ''1 year'') as curr order by year desc;',true,'ACTIVE','2a4b2429-8957-4f05-8442-5c2d9e383841'),
	 (1773,74841,'2020-09-21 18:12:04.627',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','b51c28ea-9092-4af8-a7da-b12afbd8c133'),
	 (1774,74841,'2020-09-21 18:12:04.63',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','f11f9409-234e-4ac0-9643-2cd38d6b527a'),
	 (1794,74841,'2020-10-28 13:11:50.334',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','a142d013-5393-486a-bcd3-40ec1f832ca2'),
	 (284,1,'2019-02-11 17:08:38.239',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','4884378e-bd19-453b-9a38-e1750a95dbd3'),
	 (1214,66522,'2019-07-17 16:46:30.389',1,'2021-01-13 20:22:06.427965','call_type','with  types as (
select ''all'' as key, ''All'' as value, 1 as ord
union
select ''FHW_HIGH_RISK_CONF'' as key,''Fhw highrisk conformation'' as value, 2 as ord
union
select ''IMMUN_VERI'' as key, ''Immunization verification'' as value, 3 as ord
union
select ''FAM_VERI'' as key, ''Family verification'' as value, 4 as ord
union
select ''PREG_REGI_VERI'' as key,''Pregnancy registration verification'' as value, 5 as ord
union
select ''MIG_IN_VERI'' as key, ''Member IN migration verification'' as value, 6 as ord
union
select ''HIGH_RISK_VERI'' as key, ''Highrisk followup verification'' as value, 7 as ord
union
select ''MIG_OUT_VERI'' as key,''Member OUT migration verification'' as value, 8 as ord
union
select ''DUP_MEM_VERI'' as key, ''Duplicate member verification'' as value, 9 as ord)
select value as call_type from types where key = ''#call_type#''',true,'ACTIVE','b73868c6-98be-42ac-ad38-d20e95927853'),
	 (1766,60512,'2020-09-18 12:16:03.855',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_discharge_8gm_kg_day_gain
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','c3334c88-130f-4e47-bb89-9f43a7497021'),
	 (1776,74841,'2020-09-21 18:20:32.538',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','8413ba91-5487-4f3e-b3a9-be4bd8912565');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (563,57698,'2019-02-18 12:29:51.847',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','099694d2-8b03-4d9a-8d42-787975735394'),
	 (1020,60512,'2019-04-22 16:41:29.194',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id','--TT2+TT Booster(ANC Services Provided During The Year)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date,
to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),member_det as (
	select r.member_id, r.tt2_tt_booster_location_id as loc_id,
	r.unique_health_id, r.family_id, 
	r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.tt2_tt_booster_given,''DD/MM/YYYY'') as tt2_tt_booster_given
	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, parameters p
	where r.tt2_tt_booster_location_id  = l.child_id
	and l.parent_id = p.location_id
	and r.tt2_tt_booster_given between p.from_date and p.to_date
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	order by r.tt2_tt_booster_given
	#limit_offset#
), loc_det as (
	select loc.loc_id, 
string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.tt2_tt_booster_given as "TT2/TTBooster given",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','ad94a03b-cdfe-4935-82d8-34d556f94ac0'),
	 (1743,60512,'2020-09-18 11:20:59.026',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','491cdc1f-10f7-4de4-93b3-96a1c32e5d49'),
	 (554,1,'2019-02-15 19:00:28.551',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','b2c7b06d-762a-4b9e-8186-d8f489d230dd'),
	 (421,1,'2019-02-14 00:25:46.604',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','c60104db-7d6a-4539-bb59-ab9e16e95c59'),
	 (897,64189,'2019-03-07 11:04:26.362',1,'2021-01-13 20:22:06.427965','to_date','select to_char(to_date(''#to_date#'',''MM/DD/YYYY''),''DD/MM/YYYY'') as to_date;',true,'ACTIVE','b5f57230-1747-46f8-8cee-67ca735b571f'),
	 (1013,60512,'2019-04-18 15:47:21.103',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','9d45b884-fa27-45bf-9ee5-9bb879ced069'),
	 (1761,60512,'2020-09-18 12:12:36.123',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','11283e2d-8ebf-4ef8-99ba-bc129d85f6ab'),
	 (1762,60512,'2020-09-18 12:12:36.137',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_discharge_status = ''SAM_TO_MAM''
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','04080eb3-9e43-43e9-b60f-89580335941b'),
	 (690,409,'2019-02-27 13:24:09.185',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','d4c77088-def6-492a-8e3d-14e5d2719220');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (826,58981,'2019-03-06 18:25:55.208',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','74380b1f-94c8-4220-a1bb-b2cfc6d237a8'),
	 (1793,74841,'2020-10-28 12:39:26.97',1,'2021-01-13 20:22:06.427965','location_id','with dates AS (
     SELECT
        current_date - 1  AS from_date,
        current_date - 1  + interval ''1 day'' - interval ''1 millisecond'' as to_date
), loc_det as (
    select child_id as loc_id from location_hierchy_closer_det where parent_id = ( case when #location_id# =  ''-1'' then 2 else #location_id# end)
), health_infra_wise_data as (

select  hmis.id as hid,
    hmis.location_id,
	coalesce(fpm.no_of_opd_attended, 0) as no_of_opd_attended 
from 
health_infrastructure_details hmis 
inner join dates on true
left join facility_performance_analytics  fpm on hmis.id = fpm.health_infrastrucutre_id and 
 cast(fpm.performance_date as date) between dates.from_date and dates.to_date
where location_id in (select loc_id from loc_det)
and type in (''899'',''1061'')
order by hmis.id),
result as (
select 
d.english_name as "District",
b.english_name as "Taluka",
case when p.english_name is not null then p.english_name else ''-'' end as "PHC",
hid.no_of_opd_attended as "No. of OPD Last 1 day"
    from location_master lm
    left join location_level_hierarchy_master lh
    on lh.id = lm.location_hierarchy_id
    left join location_master s
    on lh.level1 = s.id and s.state = ''ACTIVE'' and s.name not ilike ''%delete%''
    left join location_master d
    on lh.level3 = d.id and d.state = ''ACTIVE'' and d.name not ilike ''%delete%''
    left join location_master b	
    on lh.level4 = b.id and b.state = ''ACTIVE'' and b.name not ilike ''%delete%''
    left join location_master p
    on lh.level5 = p.id and p.state = ''ACTIVE'' and p.name not ilike ''%delete%''
    inner join health_infra_wise_data hid on hid.location_id = lm.id
    where hid.no_of_opd_attended < 10
)
select ROW_NUMBER() over ()  as "Sr No",
* from result',true,'ACTIVE','97869959-0e09-4ec5-9118-af922c115d8a'),
	 (94,409,'2018-10-16 18:39:32.706',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
parent_loc_detail as (
select child_id as parent_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1
),loc_detail as (
select parent_id,child_id from location_hierchy_closer_det where parent_id in (select * from parent_loc_detail)
),rch_anc_detail as (
select loc_detail.parent_id,count(*) as rch
from rch_anc_master,loc_detail
where location_id = loc_detail.child_id
and created_by != -1 and
(''#from_date#'' = ''null'' or created_on >= cast ((case when ''#from_date#'' = ''null'' then ''01-01-1970'' else ''#from_date#'' end) as date)) 
and (''#to_date#'' = ''null'' or created_on <= cast((case when ''#to_date#'' = ''null'' then ''01-01-1970'' else ''#to_date#'' end) as date ) + interval ''1 day'')
group by loc_detail.parent_id
),rch_lmp_detail as (
select loc_detail.parent_id,count(*) as rch
from rch_lmp_follow_up,loc_detail
where location_id = loc_detail.child_id
and created_by != -1 and
(''#from_date#'' = ''null'' or created_on >= cast ((case when ''#from_date#'' = ''null'' then ''01-01-1970'' else ''#from_date#'' end) as date)) 
and (''#to_date#'' = ''null'' or created_on <= cast((case when ''#to_date#'' = ''null'' then ''01-01-1970'' else ''#to_date#'' end) as date) + interval ''1 day'')
group by loc_detail.parent_id
),rch_wpd_detail as (
select loc_detail.parent_id,count(*) as rch
from rch_wpd_mother_master,loc_detail
where location_id = loc_detail.child_id
and created_by != -1 and
(''#from_date#'' = ''null'' or created_on >= cast ((case when ''#from_date#'' = ''null'' then ''01-01-1970'' else ''#from_date#'' end) as date)) 
and (''#to_date#'' = ''null'' or created_on <= cast((case when ''#to_date#'' = ''null'' then ''01-01-1970'' else ''#to_date#'' end) as date) + interval ''1 day'')
group by loc_detail.parent_id 
),rch_pnc_detail as (
select loc_detail.parent_id,count(*) as rch
from rch_pnc_master,loc_detail
where location_id = loc_detail.child_id
and created_by != -1 and
(''#from_date#'' = ''null'' or created_on >= cast ((case when ''#from_date#'' = ''null'' then ''01-01-1970'' else ''#from_date#'' end) as date)) 
and (''#to_date#'' = ''null'' or created_on <= cast((case when ''#to_date#'' = ''null'' then ''01-01-1970'' else ''#to_date#'' end) as date) + interval ''1 day'')
group by loc_detail.parent_id 
),rch_child_detail as (
select loc_detail.parent_id,count(*) as rch
from rch_child_service_master,loc_detail
where location_id = loc_detail.child_id
and created_by != -1 and
(''#from_date#'' = ''null'' or created_on >= cast ((case when ''#from_date#'' = ''null'' then ''01-01-1970'' else ''#from_date#'' end) as date)) 
and (''#to_date#'' = ''null'' or created_on <= cast((case when ''#to_date#'' = ''null'' then ''01-01-1970'' else ''#to_date#'' end) as date) + interval ''1 day'')
group by loc_detail.parent_id 
)select case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
else location_master.name end as "Location Name"
,COALESCE(rch_lmp_detail.rch,0) as "Lmp Follow Up"
,COALESCE(rch_anc_detail.rch,0) as "ANC"
,COALESCE(rch_wpd_detail.rch,0) as "WPD"
,COALESCE(rch_pnc_detail.rch,0) as "PNC"
,COALESCE(rch_child_detail.rch,0) as "CHV"
from parent_loc_detail u
inner join location_master on location_master.id = u.parent_id
left join rch_lmp_detail on u.parent_id = rch_lmp_detail.parent_id
left join rch_anc_detail on u.parent_id = rch_anc_detail.parent_id
left join rch_wpd_detail on u.parent_id = rch_wpd_detail.parent_id
left join rch_pnc_detail on u.parent_id = rch_pnc_detail.parent_id
left join rch_child_detail on u.parent_id = rch_child_detail.parent_id
cross join prefered_language 
order by location_master.name',true,'ACTIVE','d939b593-41c1-4f75-9473-43bd38a60729'),
	 (1372,69973,'2019-08-20 20:42:14.069',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','29df166c-d1e1-48d9-b26b-97af225ede4d'),
	 (1759,60512,'2020-09-18 12:10:44.763',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','6f11a582-5c30-4917-a04c-b9c66e8b9089'),
	 (1212,66522,'2019-07-17 16:41:51.484',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','a22b6ad5-f8ae-4d51-8763-bbb5cf9a96dc'),
	 (1753,60512,'2020-09-18 11:28:31.227',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','94f9dee9-16fd-405c-8d8a-3dad03b6c2f7'),
	 (1741,60512,'2020-09-17 15:52:20.967',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','dfc22af0-f48e-4983-a05c-2a612dee6bc2'),
	 (1760,60512,'2020-09-18 12:10:44.796',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_follow_up_visit_3 is not null
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','3d106c0e-5de4-4891-b018-381c58eb586c'),
	 (1796,74841,'2020-10-28 13:13:46.299',1,'2021-01-13 20:22:06.427965','location_id','with dates AS (
     SELECT
        current_date - 1  AS from_date,
        current_date - 1  + interval ''1 day'' - interval ''1 millisecond'' as to_date
), loc_det as (
    select child_id as loc_id from location_hierchy_closer_det where parent_id = ( case when #location_id# =  ''-1'' then 2 else #location_id# end)
), health_infra_wise_data as (

select  hmis.id as hid,
    hmis.location_id,
    hmis.name_in_english, 
	coalesce(fpm.no_of_opd_attended, 0) as no_of_opd_attended 
from 
health_infrastructure_details hmis 
inner join dates on true
left join facility_performance_analytics  fpm on hmis.id = fpm.health_infrastrucutre_id and 
 cast(fpm.performance_date as date) between dates.from_date and dates.to_date
where location_id in (select loc_id from loc_det)
and type in (''895'',''1009'',''1084'')
order by hmis.id),
result as (
select 
d.english_name as "District",
b.english_name as "Taluka",
case when hid.name_in_english is not null then hid.name_in_english else ''-'' end as "CHC",
hid.no_of_opd_attended as "No. of OPD Last 1 day" 
    from location_master lm
    left join location_level_hierarchy_master lh
    on lh.id = lm.location_hierarchy_id
    left join location_master s
    on lh.level1 = s.id and s.state = ''ACTIVE'' and s.name not ilike ''%delete%''
    left join location_master d
    on lh.level3 = d.id and d.state = ''ACTIVE'' and d.name not ilike ''%delete%''
    left join location_master b	
    on lh.level4 = b.id and b.state = ''ACTIVE'' and b.name not ilike ''%delete%''
    left join location_master p
    on lh.level5 = p.id and p.state = ''ACTIVE'' and p.name not ilike ''%delete%''
    inner join health_infra_wise_data hid on hid.location_id = lm.id
    where hid.no_of_opd_attended < 20
)
select ROW_NUMBER() over ()  as "Sr No",
* from result',true,'ACTIVE','152cf492-0a89-4b08-8a71-caa48d641bbc');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1755,60512,'2020-09-18 12:04:43.448',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','100b52a8-9af1-49ad-a30f-32eafe87732a'),
	 (1712,60512,'2020-09-07 16:47:42.746',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','e7622086-a601-48fb-a9d9-21d5fe1c2ed8'),
	 (79,1027,'2018-09-06 14:24:36.423',1,'2021-01-13 20:22:06.427965','limit_offset,loggedInUserId,location_id','select ROW_NUMBER () OVER () +cast(SUBSTRING (''#limit_offset#'',POSITION(''offset'' in ''#limit_offset#'')+7) as int) as "Sr No",r."MO Name",string_agg(r.location,''<br>'') as "AOI",r."Total",r."percent_col_Total",r."Archived",r."percent_col_Archived",
r."New",r."percent_col_New",r."Dead",r."percent_col_Dead",r."Migrated",r."percent_col_Migrated",r."Over 7 days",r."Total ",r."percent_col_Total_l2",r."Archived ",r."percent_col_Archived_l2",
r."New ",r."percent_col_New_l2",r."Dead ",r."percent_col_Dead_l2",r."Migrated ",r."percent_col_Migrated_l2",r."Over 7 days "
from
(select res.id,res.name as "MO Name",string_agg(lm.name,''> '' order by depth desc) as location,
concat(l1a+l1n+l1d+l1m,''/'',l1ap+l1np+l1dp+l1mp) as "Total",
case when l1ap+l1np+l1dp+l1mp <> 0 then
round(cast(((l1a+l1n+l1d+l1m)*100.0) as numeric)/(l1ap+l1np+l1dp+l1mp),2) else 0 end as "percent_col_Total",
concat(l1a,''/'',l1ap) as "Archived",
case when l1ap <> 0 then round(cast((l1a*100.0) as numeric)/l1ap,2) else 0 end as "percent_col_Archived",
concat(l1n,''/'',l1np)  as "New",
case when l1np <> 0 then round(cast((l1n*100.0) as numeric)/l1np,2) else 0 end as "percent_col_New",
concat(l1d,''/'',l1dp) as "Dead",
case when l1dp <> 0 then round(cast((l1d*100.0) as numeric)/l1dp,2) else 0 end as "percent_col_Dead",
concat(l1m,''/'',l1mp) as "Migrated",
case when l1mp <> 0 then round(cast((l1m*100.0) as numeric)/l1mp,2) else 0 end as "percent_col_Migrated",
l17p as "Over 7 days",
case when res.role_id = (select id from um_role_master where name = ''MO AYUSH'') then ''0'' else concat(l2a+l2n+l2d+l2m,''/'',l2ap+l2np+l2dp+l2mp) end as "Total ",
case when res.role_id = (select id from um_role_master where name = ''MO AYUSH'') then ''0'' else (case when l2ap+l2np+l2dp+l2mp <> 0 then round(cast((l2a+l2n+l2d+l2m)*100.0 as numeric)/(l2ap+l2np+l2dp+l2mp),2) else 0 end) end as "percent_col_Total_l2",
case when res.role_id = (select id from um_role_master where name = ''MO AYUSH'') then ''0'' else concat(l2a,''/'',l2ap) end as "Archived ",
case when res.role_id = (select id from um_role_master where name = ''MO AYUSH'') then ''0'' else (case when l2ap <> 0 then round(cast((l2a*100.0) as numeric)/l2ap,2) else 0 end) end as "percent_col_Archived_l2",
case when res.role_id = (select id from um_role_master where name = ''MO AYUSH'') then ''0'' else concat(l2n,''/'',l2np) end as "New ",
case when res.role_id = (select id from um_role_master where name = ''MO AYUSH'') then ''0'' else (case when l2np <> 0 then round(cast((l2n*100.0) as numeric)/l2np,2) else 0 end) end as "percent_col_New_l2",
case when res.role_id = (select id from um_role_master where name = ''MO AYUSH'') then ''0'' else concat(l2d,''/'',l2dp) end as "Dead ",
case when res.role_id = (select id from um_role_master where name = ''MO AYUSH'') then ''0'' else (case when l2dp <> 0 then round(cast((l2d*100.0) as numeric)/l2dp,2) else 0 end) end  as "percent_col_Dead_l2",
case when res.role_id = (select id from um_role_master where name = ''MO AYUSH'') then ''0'' else concat(l2m,''/'',l2mp) end as "Migrated ",
case when res.role_id = (select id from um_role_master where name = ''MO AYUSH'') then ''0'' else (case when l2mp <> 0 then round(cast((l2m*100.0) as numeric)/l2mp,2) else 0 end) end as "percent_col_Migrated_l2",
case when res.role_id = (select id from um_role_master where name = ''MO AYUSH'') then ''0'' else l27p end as "Over 7 days "
from
(select us.id,us.role_id,us.first_name || '' '' || us.last_name || ''('' || us.user_name || '')'' as name,
sum(COALESCE(mpa.l1_archived_marked,0)) as l1a,sum(COALESCE(mpa.l1_archived_marked,0))+sum(COALESCE(mpa.l1_archived_pending,0)) as l1ap,
sum(COALESCE(mpa.l1_new_marked,0)) as l1n,sum(COALESCE(mpa.l1_new_marked,0))+sum(COALESCE(mpa.l1_new_pending,0)) as l1np,
sum(COALESCE(mpa.l1_dead_marked,0)) as l1d ,sum(COALESCE(mpa.l1_dead_marked,0))+sum(COALESCE(mpa.l1_dead_pending,0)) as l1dp,
sum(COALESCE(mpa.l1_migrated_marked,0)) as l1m,sum(COALESCE(mpa.l1_migrated_marked,0))+sum(COALESCE(mpa.l1_migrated_pending,0)) as l1mp,
sum(COALESCE(mpa.l1_archived_last_7_days,0))+sum(COALESCE(mpa.l1_new_last_7_days,0))+sum(COALESCE(mpa.l1_dead_last_7_days,0))
+sum(COALESCE(mpa.l1_migrated_last_7_days,0)) as l17p,
case when us.role_id = (select id from um_role_master where name = ''MO AYUSH'') then 0 else sum(COALESCE(mpa.l2_archived_marked,0)) end as l2a,
case when us.role_id = (select id from um_role_master where name = ''MO AYUSH'') then 0 else sum(COALESCE(mpa.l2_archived_marked,0))+sum(COALESCE(mpa.l2_archived_pending,0)) end as l2ap,
case when us.role_id = (select id from um_role_master where name = ''MO AYUSH'') then 0 else sum(COALESCE(mpa.l2_new_marked,0)) end as l2n,
case when us.role_id = (select id from um_role_master where name = ''MO AYUSH'') then 0 else sum(COALESCE(mpa.l2_new_marked,0))+sum(COALESCE(mpa.l2_new_pending,0)) end as l2np,
case when us.role_id = (select id from um_role_master where name = ''MO AYUSH'') then 0 else sum(COALESCE(mpa.l2_dead_marked,0)) end as l2d,
case when us.role_id = (select id from um_role_master where name = ''MO AYUSH'') then 0 else sum(COALESCE(mpa.l2_dead_marked,0))+sum(COALESCE(mpa.l2_dead_pending,0)) end as l2dp,
case when us.role_id = (select id from um_role_master where name = ''MO AYUSH'') then 0 else sum(COALESCE(mpa.l2_migrated_marked,0)) end as l2m,
case when us.role_id = (select id from um_role_master where name = ''MO AYUSH'') then 0 else sum(COALESCE(mpa.l2_migrated_marked,0))+sum(COALESCE(mpa.l2_migrated_pending,0)) end as l2mp,
case when us.role_id = (select id from um_role_master where name = ''MO AYUSH'') then 0 else sum(COALESCE(mpa.l2_archived_last_7_days,0))+sum(COALESCE(mpa.l2_new_last_7_days,0))+sum(COALESCE(mpa.l2_dead_last_7_days,0))
+sum(COALESCE(mpa.l2_migrated_last_7_days,0)) end as l27p
from mo_performance_analytics mpa 
inner join location_hierchy_closer_det lhcd on mpa.loc_id = lhcd.child_id
inner join um_user us on us.id = mpa.user_id
where ((#location_id# is null and lhcd.parent_id in (select loc_id from um_user_location where user_id = #loggedInUserId# and state = ''ACTIVE''))
 or (#location_id# is not null and lhcd.parent_id = #location_id#))
group by mpa.user_id,us.first_name,us.last_name,us.user_name,us.id,us.role_id #limit_offset#) res
inner join um_user_location ul on ul.user_id = res.id
inner join location_hierchy_closer_det u_loc on u_loc.child_id = ul.loc_id 
inner join location_master lm on lm.id = u_loc.parent_id
where (((#location_id# is null and ul.loc_id in (select child_id from location_hierchy_closer_det where parent_id  in (select loc_id from um_user_location where user_id = #loggedInUserId#  and state = ''ACTIVE'')))) or(#location_id# is not null and ul.loc_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)))
and 
ul.state = ''ACTIVE''
group by ul.loc_id,res.name,res.l1a,res.l1n,res.l1d,res.l1m,res.l2a,res.l2n,res.l2d,res.l2m,res.role_id,
res.l1ap,res.l1np,res.l1dp,res.l1mp,res.l2ap,res.l2np,res.l2dp,res.l2mp,res.l17p,res.l27p,res.id) r
group by r.id,r."Total",r."percent_col_Total",r."Archived",r."percent_col_Archived",
r."New",r."percent_col_New",r."Dead",r."percent_col_Dead",r."Migrated",r."percent_col_Migrated",r."Over 7 days",r."Total ",r."percent_col_Total_l2",r."Archived ",r."percent_col_Archived_l2",
r."New ",r."percent_col_New_l2",r."Dead ",r."percent_col_Dead_l2",r."Migrated ",r."percent_col_Migrated_l2",r."Over 7 days ",r."MO Name"',true,'ACTIVE','1466561c-91cb-4f0a-8fe3-2957f85a0e88'),
	 (902,58981,'2019-03-07 11:27:45.833',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','23684ee4-9010-460d-9974-16c880a354cc'),
	 (194,409,'2019-01-23 19:41:29.877',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','875bc95b-5a2d-4611-9ad9-6ff50633184a'),
	 (626,409,'2019-02-19 12:51:15.674',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','ff906189-a134-495f-9672-cad6b9ed5dd1'),
	 (1754,60512,'2020-09-18 11:28:31.237',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_discharge_15_weight_gain
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','380782b7-aee0-4ff7-9d0d-d7a5d401dbb1'),
	 (904,58981,'2019-03-07 11:29:23.559',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','b4ef0a93-1b5c-4e1e-9d1d-1b859f20161a'),
	 (802,58981,'2019-03-06 17:02:40.283',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','9f2b0ccd-da61-42d1-b967-ab9c2720c79b'),
	 (288,1,'2019-02-11 17:21:55.95',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','bfec8939-de1a-4acf-915b-00cf9d72bc51');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (905,58981,'2019-03-07 11:29:23.571',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,too_date,loggedInUserId,location_id','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#
),
 member_det as (
	select r.member_id, f.location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, imt_family f, rch_pregnancy_registration_det p
	where r.member_id = m.id and r.member_current_location_id  = l.child_id and r.pregnancy_reg_id = p.id and m.family_id = f.family_id
	and r.home_del and r.delivery_outcome in (''LBIRTH'',''SBIRTH'')
	and l.parent_id = #location_id#
	and r.date_of_delivery between cast (
		case
			when ''#from_date#'' = ''null'' then ''01-01-1970''
			else ''#from_date#''
		end as date) and cast (
		case
			when ''#too_date#'' = ''null'' then ''01-01-1970''
			else ''#too_date#''
		end as date)
	order by p.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','c7c3b603-1c6a-4bc4-886d-b99d121084ae'),
	 (981,60512,'2019-04-11 14:55:34.832',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','ee985b80-7425-4f29-a18c-cb7c4f0a6947'),
	 (1751,60512,'2020-09-18 11:27:19.93',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','885dd5f2-05e1-4c3d-8b75-6b61dac603cb'),
	 (1656,60512,'2020-06-29 11:43:48.069',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id','with prefered_language as(
	select case when prefered_language = ''EN'' then true else false end as is_english
	from um_user
	where id = #loggedInUserId#
),location_detail as (
	select child_id,depth
	from location_hierchy_closer_det
	where parent_id = #location_id#
	and depth = 1
),dates as (
	select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date
),under_5_years as (
	select location_detail.child_id,
	sum(analytics.total_children_under_5_years) as total_children_under_5_years
	from location_detail
	inner join location_hierchy_closer_det on location_detail.child_id = location_hierchy_closer_det.parent_id
	inner join child_cmtc_nrc_analytics_location_wise_details analytics on location_hierchy_closer_det.child_id = analytics.location_id
	inner join dates on analytics.month_year = dates.from_date
	group by location_detail.child_id
),counts as (
	select location_detail.child_id,
	sum(analytics.childer_screen_by_anm) as childer_screen_by_anm,
	sum(analytics.sam_child) as sam_child,
    sum(analytics.sam_child_male) as sam_child_male,
    sum(analytics.sam_child_female) as sam_child_female,
    sum(analytics.sam_child_0_to_6_months_male) as sam_child_0_to_6_months_male,
    sum(analytics.sam_child_0_to_6_months_female) as sam_child_0_to_6_months_female,
    sum(analytics.sam_child_6_months_to_3_years_male) as sam_child_6_months_to_3_years_male,
    sum(analytics.sam_child_6_months_to_3_years_female) as sam_child_6_months_to_3_years_female,
    sum(analytics.sam_child_3_years_to_5_years_male) as sam_child_3_years_to_5_years_male,
    sum(analytics.sam_child_3_years_to_5_years_female) as sam_child_3_years_to_5_years_female,
	sum(analytics.sam_no_appetite) as sam_no_appetite,
	sum(analytics.sam_less_than_3sd_m) as sam_less_than_3sd_m,
	sum(analytics.sam_less_than_3sd_f) as sam_less_than_3sd_f,
	sum(analytics.sam_less_than_11_5_muac_m) as sam_less_than_11_5_muac_m,
	sum(analytics.sam_less_than_11_5_muac_f) as sam_less_than_11_5_muac_f,
	sum(analytics.sam_less_3sd_11_5_muac_m) as sam_less_3sd_11_5_muac_m,
	sum(analytics.sam_less_3sd_11_5_muac_f) as sam_less_3sd_11_5_muac_f,
	sum(analytics.sam_oedema_m) as sam_oedema_m,
	sum(analytics.sam_oedema_f) as sam_oedema_f,
	sum(analytics.sam_45_cm_lenth_child_m) as sam_45_cm_lenth_child_m,
	sum(analytics.sam_45_cm_lenth_child_f) as sam_45_cm_lenth_child_f,
	sum(analytics.cmam_sam_children_m) as cmam_sam_children_m,
	sum(analytics.cmam_sam_children_f) as cmam_sam_children_f,
	sum(analytics.cmtc_sam_children_m) as cmtc_sam_children_m,
	sum(analytics.cmtc_sam_children_f) as cmtc_sam_children_f,
	sum(analytics.mam_children) as mam_children,
	sum(analytics.muw_children) as muw_children,
	sum(analytics.suw_children) as suw_children,
	sum(analytics.stunted_children) as stunted_children
	from location_detail
	inner join location_hierchy_closer_det on location_detail.child_id = location_hierchy_closer_det.parent_id
	inner join child_cmtc_nrc_analytics_location_wise_details analytics on location_hierchy_closer_det.child_id = analytics.location_id
	inner join dates on analytics.month_year between dates.from_date and dates.to_date
	group by location_detail.child_id
),details as (
	select location_master.id as hidden_location_id,
	case when prefered_language.is_english and location_master.english_name is not null then location_master.english_name else location_master.name end as loc,
	case when prefered_language.is_english and parent.english_name is not null then parent.english_name else parent.name end as parent_loc,
	coalesce(total_children_under_5_years,0) as total_children_under_5_years,
	coalesce(childer_screen_by_anm,0) as childer_screen_by_anm,
	coalesce(sam_child,0) as sam_child,
    coalesce(sam_child_male,0) as sam_child_male,
    coalesce(sam_child_female,0) as sam_child_female,
    coalesce(sam_child_0_to_6_months_male,0) as sam_child_0_to_6_months_male,
    coalesce(sam_child_0_to_6_months_female,0) as sam_child_0_to_6_months_female,
    coalesce(sam_child_6_months_to_3_years_male,0) as sam_child_6_months_to_3_years_male,
    coalesce(sam_child_6_months_to_3_years_female,0) as sam_child_6_months_to_3_years_female,
    coalesce(sam_child_3_years_to_5_years_male,0) as sam_child_3_years_to_5_years_male,
    coalesce(sam_child_3_years_to_5_years_female,0) as sam_child_3_years_to_5_years_female,
	coalesce(sam_no_appetite,0) as sam_no_appetite,
	coalesce(sam_less_than_3sd_m,0) as sam_less_than_3sd_m,
	coalesce(sam_less_than_3sd_f,0) as sam_less_than_3sd_f,
	coalesce(sam_less_than_11_5_muac_m,0) as sam_less_than_11_5_muac_m,
	coalesce(sam_less_than_11_5_muac_f,0) as sam_less_than_11_5_muac_f,
	coalesce(sam_less_3sd_11_5_muac_m,0) as sam_less_3sd_11_5_muac_m,
	coalesce(sam_less_3sd_11_5_muac_f,0) as sam_less_3sd_11_5_muac_f,
	coalesce(sam_oedema_m,0) as sam_oedema_m,
	coalesce(sam_oedema_f,0) as sam_oedema_f,
	coalesce(sam_45_cm_lenth_child_m,0) as sam_45_cm_lenth_child_m,
	coalesce(sam_45_cm_lenth_child_f,0) as sam_45_cm_lenth_child_f,
	coalesce(
		sam_less_than_3sd_m
		+ sam_less_than_11_5_muac_m
		+ sam_less_3sd_11_5_muac_m
		+ sam_oedema_m
		+ sam_45_cm_lenth_child_m
	,0) as criteria_boys,
	coalesce(
		sam_less_than_3sd_f
		+ sam_less_than_11_5_muac_f
		+ sam_less_3sd_11_5_muac_f
		+ sam_oedema_f
		+ sam_45_cm_lenth_child_f
	,0) as criteria_girls,
	coalesce(
		sam_less_than_3sd_m
		+ sam_less_than_3sd_f
		+ sam_less_than_11_5_muac_m
		+ sam_less_than_11_5_muac_f
		+ sam_less_3sd_11_5_muac_m
		+ sam_less_3sd_11_5_muac_f
		+ sam_oedema_m
		+ sam_oedema_f
		+ sam_45_cm_lenth_child_m
		+ sam_45_cm_lenth_child_f
	,0) as total_criteria,
	coalesce(cmam_sam_children_m,0) as cmam_sam_children_m,
	coalesce(cmam_sam_children_f,0) as cmam_sam_children_f,
	coalesce(
		cmam_sam_children_m
		+ cmam_sam_children_f
	,0) as cmam_total,
	coalesce(cmtc_sam_children_m,0) as cmtc_sam_children_m,
	coalesce(cmtc_sam_children_f,0) as cmtc_sam_children_f,
	coalesce(
		cmtc_sam_children_m
		+ cmtc_sam_children_f
	,0) as cmtc_total,
	coalesce(
		cmam_sam_children_m
		+ cmtc_sam_children_m
	,0) as total_boys,
	coalesce(
		cmam_sam_children_f
		+ cmtc_sam_children_f
	,0) as total_girls,
	coalesce(
		cmam_sam_children_m
		+ cmam_sam_children_f
		+ cmtc_sam_children_m
		+ cmtc_sam_children_f
	,0) as total_admission,
	coalesce(mam_children,0) as mam_children,
	coalesce(muw_children,0) as muw_children,
	coalesce(suw_children,0) as suw_children,
	coalesce(stunted_children,0) as stunted_children
	from location_detail
	inner join location_master on location_master.id = location_detail.child_id
	inner join location_master parent on location_master.parent = parent.id
	left join under_5_years on location_detail.child_id = under_5_years.child_id
	left join counts on location_detail.child_id = counts.child_id
	cross join prefered_language
)
select row_number() over() as "Sr.No",
details.loc as "Location",
details.parent_loc as "Parent Location Name",
details.hidden_location_id,
details.total_children_under_5_years as "Total Children Under 5 years",
details.childer_screen_by_anm as "Live Children screened by ANM",
details.sam_child as "Total SAM children identified",
    case when details.sam_child = 0 or details.sam_child is null or details.childer_screen_by_anm = 0 or details.childer_screen_by_anm is null then 0 else
	round(details.sam_child * 100.0/details.childer_screen_by_anm,2) end as "percent_col_Total SAM children identified",
details.sam_child_male as "SAM Boys",
details.sam_child_female as "SAM Girls",
details.sam_child_0_to_6_months_male as "SAM 0-6 months Boys",
details.sam_child_0_to_6_months_female as "SAM 0-6 months Girls",
details.sam_child_6_months_to_3_years_male as "SAM 6 months - 3 years Boys",
details.sam_child_6_months_to_3_years_female as "SAM 6 months - 3 years Girls",
details.sam_child_3_years_to_5_years_male as "SAM 3-5 years Boys",
details.sam_child_3_years_to_5_years_female as "SAM 3-5 years Girls",
--details.sam_no_appetite as "SAM with appetite test not done",
details.sam_less_than_3sd_m as "Less than 3SD Boy",
details.sam_less_than_3sd_f as "Less than 3SD Girl",
details.sam_less_than_11_5_muac_m as "< 11.5 cm MUAC Boy",
details.sam_less_than_11_5_muac_f as "< 11.5 cm MUAC Girl",
details.sam_less_3sd_11_5_muac_m as "Both Boy",
details.sam_less_3sd_11_5_muac_f as "Both Girl",
details.sam_oedema_m as "Oedema Boy",
details.sam_oedema_f as "Oedema Girl",
details.sam_45_cm_lenth_child_m as "Other ( <45cm length child) Boy",
details.sam_45_cm_lenth_child_f as "Other ( <45cm length child) Girl",
--details.criteria_boys as "SAM Total Boy",
--details.criteria_girls as "SAM Total Girl",
--details.total_criteria as "SAM G.Total",
--details.cmam_sam_children_m as "CMAM eligible SAM Children Boy",
--details.cmam_sam_children_f as "CMAM eligible SAM Children Girl",
--details.cmam_total as "CMAM Total",
--	case when details.cmam_total = 0 or details.cmam_total is null or details.childer_screen_by_anm = 0 or details.childer_screen_by_anm is null then 0 else
--	round(details.cmam_total * 100.0/details.childer_screen_by_anm,2) end as "percent_col_CMAM Total",
--details.cmtc_sam_children_m as "CMTC/NRC eligible SAM children Boy",
--details.cmtc_sam_children_f as "CMTC/NRC eligible SAM children Girl",
--details.cmtc_total as "CMTC Total",
--	case when details.cmtc_total = 0 or details.cmtc_total is null or details.childer_screen_by_anm = 0 or details.childer_screen_by_anm is null then 0 else
--	round(details.cmtc_total * 100.0/details.childer_screen_by_anm,2) end as "percent_col_CMTC Total",
--details.total_boys as "Total Boy",
--details.total_girls as "Total Girl",
--details.total_admission as "Admission G.Total",
details.mam_children as "MAM (Line-list)",
	case when details.mam_children = 0 or details.mam_children is null or details.childer_screen_by_anm = 0 or details.childer_screen_by_anm is null then 0 else
	round(details.mam_children * 100.0/details.childer_screen_by_anm,2) end as "percent_col_MAM (Line-list)",
details.muw_children as "MUW",
	case when details.muw_children = 0 or details.muw_children is null or details.childer_screen_by_anm = 0 or details.childer_screen_by_anm is null then 0 else
	round(details.muw_children * 100.0/details.childer_screen_by_anm,2) end as "percent_col_MUW",
details.suw_children as "SUW (Line-list)",
	case when details.suw_children = 0 or details.suw_children is null or details.childer_screen_by_anm = 0 or details.childer_screen_by_anm is null then 0 else
	round(details.suw_children * 100.0/details.childer_screen_by_anm,2) end as "percent_col_SUW (Line-list)",
details.stunted_children as "Stunted (Linelist)",
	case when details.stunted_children = 0 or details.stunted_children is null or details.childer_screen_by_anm = 0 or details.childer_screen_by_anm is null then 0 else
	round(details.stunted_children * 100.0/details.childer_screen_by_anm,2) end as "percent_col_Stunted (Linelist)"
from details
union all
select null,
''<b>Total<b>'',
null,
#location_id#,
sum(details.total_children_under_5_years),
sum(details.childer_screen_by_anm),
sum(details.sam_child),
    case when (sum(details.sam_child) = 0 or sum(details.sam_child) is null or sum(details.childer_screen_by_anm) = 0 or sum(details.childer_screen_by_anm) is null) then 0 else
	round(sum(details.sam_child)*100.0/sum(details.childer_screen_by_anm),2) end,
sum(details.sam_child_male),
sum(details.sam_child_female),
sum(details.sam_child_0_to_6_months_male),
sum(details.sam_child_0_to_6_months_female),
sum(details.sam_child_6_months_to_3_years_male),
sum(details.sam_child_6_months_to_3_years_female),
sum(details.sam_child_3_years_to_5_years_male),
sum(details.sam_child_3_years_to_5_years_female),
--sum(details.sam_no_appetite),
sum(details.sam_less_than_3sd_m),
sum(details.sam_less_than_3sd_f),
sum(details.sam_less_than_11_5_muac_m),
sum(details.sam_less_than_11_5_muac_f),
sum(details.sam_less_3sd_11_5_muac_m),
sum(details.sam_less_3sd_11_5_muac_f),
sum(details.sam_oedema_m),
sum(details.sam_oedema_f),
sum(details.sam_45_cm_lenth_child_m),
sum(details.sam_45_cm_lenth_child_f),
--sum(details.criteria_boys),
--sum(details.criteria_girls),
--sum(details.total_criteria),
--sum(details.cmam_sam_children_m),
--sum(details.cmam_sam_children_f),
--sum(details.cmam_total),
--	case when (sum(details.cmam_total) = 0 or sum(details.cmam_total) is null or sum(details.childer_screen_by_anm) = 0 or sum(details.childer_screen_by_anm) is null) then 0 else
--	round(sum(details.cmam_total)*100.0/sum(details.childer_screen_by_anm),2) end,
--sum(details.cmtc_sam_children_m),
--sum(details.cmtc_sam_children_f),
--sum(details.cmtc_total),
--	case when (sum(details.cmtc_total) = 0 or sum(details.cmtc_total) is null or sum(details.childer_screen_by_anm) = 0 or sum(details.childer_screen_by_anm) is null) then 0 else
--	round(sum(details.cmtc_total)*100.0/sum(details.childer_screen_by_anm),2) end,
--sum(details.total_boys),
--sum(details.total_girls),
--sum(details.total_admission),
sum(details.mam_children),
	case when (sum(details.mam_children) = 0 or sum(details.mam_children) is null or sum(details.childer_screen_by_anm) = 0 or sum(details.childer_screen_by_anm) is null) then 0 else
	round(sum(details.mam_children)*100.0/sum(details.childer_screen_by_anm),2) end,
sum(details.muw_children),
	case when (sum(details.muw_children) = 0 or sum(details.muw_children) is null or sum(details.childer_screen_by_anm) = 0 or sum(details.childer_screen_by_anm) is null) then 0 else
	round(sum(details.muw_children)*100.0/sum(details.childer_screen_by_anm),2) end,
sum(details.suw_children),
	case when (sum(details.suw_children) = 0 or sum(details.suw_children) is null or sum(details.childer_screen_by_anm) = 0 or sum(details.childer_screen_by_anm) is null) then 0 else
	round(sum(details.suw_children)*100.0/sum(details.childer_screen_by_anm),2) end,
sum(details.stunted_children),
	case when (sum(details.stunted_children) = 0 or sum(details.stunted_children) is null or sum(details.childer_screen_by_anm) = 0 or sum(details.childer_screen_by_anm) is null) then 0 else
	round(sum(details.stunted_children)*100.0/sum(details.childer_screen_by_anm),2) end
from details;',true,'ACTIVE','73e2f528-2ab5-4442-8b5c-5ca6413709c4'),
	 (1224,66522,'2019-07-17 16:52:30.689',1,'2021-01-13 20:22:06.427965','call_type','with  types as (
select ''all'' as key, ''All'' as value, 1 as ord
union
select ''FHW_HIGH_RISK_CONF'' as key,''Fhw highrisk conformation'' as value, 2 as ord
union
select ''IMMUN_VERI'' as key, ''Immunization verification'' as value, 3 as ord
union
select ''FAM_VERI'' as key, ''Family verification'' as value, 4 as ord
union
select ''PREG_REGI_VERI'' as key,''Pregnancy registration verification'' as value, 5 as ord
union
select ''MIG_IN_VERI'' as key, ''Member IN migration verification'' as value, 6 as ord
union
select ''HIGH_RISK_VERI'' as key, ''Highrisk followup verification'' as value, 7 as ord
union
select ''MIG_OUT_VERI'' as key,''Member OUT migration verification'' as value, 8 as ord
union
select ''DUP_MEM_VERI'' as key, ''Duplicate member verification'' as value, 9 as ord)
select value as call_type from types where key = ''#call_type#''',true,'ACTIVE','bd2201d0-45a2-4afa-ab30-03fdf899264f'),
	 (1750,60512,'2020-09-18 11:25:42.302',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with details as (
	select *
	from child_cmtc_nrc_analytics_details
	where fsam_discharge_status = ''SAM_TO_NORMAL''
	and fsam_admission_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end)
	and
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 month'' - interval ''00:00:01''
	and fsam_admission_location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
to_char(imt_member.dob,''DD/MM/YYYY'') as "Child DOB",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
get_location_hierarchy(imt_family.location_id) as "Location",
health_infrastructure_details.name as "Admission Center",
to_char(details.fsam_admission_date,''DD/MM/YYYY'') as "Admission Date"
from details
inner join imt_member on imt_member.id = details.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on details.fsam_admission_screening_center = health_infrastructure_details.id',true,'ACTIVE','8dabaeb9-7375-46cc-ada2-2b4ce7d31133'),
	 (1708,60512,'2020-09-07 16:44:48.007',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','e9a0596c-9b1b-40e7-9e8b-837b8d07d8bc'),
	 (112,409,'2019-01-05 14:49:55.89',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 location_det as (
select child_id, case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
else location_master.name end
 from location_hierchy_closer_det,location_master, prefered_language
where location_master.id = location_hierchy_closer_det.child_id and depth = 1 and location_hierchy_closer_det.parent_id = #location_id#
),location_wise_cnt_det as(
select location_hierchy_closer_det.parent_id,imt_family.id,sum(1) as cnt  
from gvk_verification,imt_family,location_hierchy_closer_det,location_det as loc_det
where gvk_verification.family_id = imt_family.family_id
and location_hierchy_closer_det.parent_id = loc_det.child_id
and imt_family.location_id = location_hierchy_closer_det.child_id
and gvk_verification.created_on between cast(case when ''#from_date#'' = ''null'' then ''01-01-1970'' else ''#from_date#'' end as date) 
	and cast(case when ''#to_date#'' = ''null'' then ''01-01-1970'' else ''#to_date#'' end as date) +interval ''1 day''
group by location_hierchy_closer_det.parent_id,imt_family.id
),final_detail as(
select location_det.name,sum(case when cnt>0 then 1 else 0 end) as total_family_conacted,sum(case when cnt>1 then 1 else 0 end) as more_then_one_attempt
from location_det left join location_wise_cnt_det on location_det.child_id = location_wise_cnt_det.parent_id
group by location_det.child_id,location_det.name
order by location_det.name
)select row_number() over() as "Sr. no",name as "Location Detail"
,total_family_conacted as "Number of Families Contacted" 
,more_then_one_attempt as "Number of Families Attempted More Than Once"
from final_detail
union all
select null,''<b>Total</b>'',sum(total_family_conacted),sum(more_then_one_attempt) from final_detail',true,'ACTIVE','1f1fdbf0-0607-4be7-b210-18dfb3667060'),
	 (1236,409,'2019-07-24 10:22:56.545',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','440e776c-05bf-4147-833f-9ba358897c76'),
	 (1704,60512,'2020-09-07 16:38:26.45',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','f3d4965c-d58a-4d2c-86cc-ae6fa12a0abb');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (693,409,'2019-02-27 13:24:09.197',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Early ANC(LMP Based Pregnant Women Reg. for ANC Services)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
member_det as (
	select r.member_id, r.native_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.date_of_delivery,''DD/MM/YYYY'') as dod
	,to_char(r.reg_service_date,''DD/MM/YYYY'') as reg_date
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, imt_member m
	where r.member_id = m.id
	and r.early_anc = true
	and r.native_location_id  = l.child_id
	and l.parent_id = #location_id#
	and r.lmp_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date)
	order by r.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
member_det.reg_date as "Registration Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','ded90a24-4bf6-4c81-b876-299a78403919'),
	 (804,58981,'2019-03-06 17:27:29.252',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','48a903a8-ad21-423b-91f8-965d84814c12'),
	 (806,58981,'2019-03-06 17:27:29.26',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','aaf66aa1-2257-4341-9457-a01bc894a355'),
	 (1216,66522,'2019-07-17 16:50:57.711',1,'2021-01-13 20:22:06.427965','call_type','with  types as (
select ''all'' as key, ''All'' as value, 1 as ord
union
select ''FHW_HIGH_RISK_CONF'' as key,''Fhw highrisk conformation'' as value, 2 as ord
union
select ''IMMUN_VERI'' as key, ''Immunization verification'' as value, 3 as ord
union
select ''FAM_VERI'' as key, ''Family verification'' as value, 4 as ord
union
select ''PREG_REGI_VERI'' as key,''Pregnancy registration verification'' as value, 5 as ord
union
select ''MIG_IN_VERI'' as key, ''Member IN migration verification'' as value, 6 as ord
union
select ''HIGH_RISK_VERI'' as key, ''Highrisk followup verification'' as value, 7 as ord
union
select ''MIG_OUT_VERI'' as key,''Member OUT migration verification'' as value, 8 as ord
union
select ''DUP_MEM_VERI'' as key, ''Duplicate member verification'' as value, 9 as ord)
select value as call_type from types where key = ''#call_type#''',true,'ACTIVE','e378bfd1-caf5-4f1a-a20e-9bde550503a4'),
	 (239,1,'2019-02-05 11:45:14.11',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','837623d0-a10f-4ec5-ab9d-de643b5d9bd4'),
	 (723,63746,'2019-02-28 12:57:50.312',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(lm.name,''> '' order by lhcd.depth desc) as "Location" 
from location_hierchy_closer_det lhcd 
inner join location_master lm on lm.id = lhcd.parent_id 
where lhcd.child_id = #location_id#',true,'ACTIVE','c940cc8a-3032-4e6f-bea6-fbe5593d42e2'),
	 (1797,78434,'2020-11-03 14:53:19.234',1,'2021-01-13 20:22:06.427965',NULL,'select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as year 
from generate_series(date ''2020-04-01'', current_date, ''1 year'') as curr order by year desc;',true,'ACTIVE','9b4d4e65-4ef0-4599-bde7-a9bf3a03c7ef'),
	 (510,1,'2019-02-14 15:55:44.911',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','dfb62190-46f3-45af-94a3-06441cae27d5'),
	 (1405,66522,'2019-08-28 16:17:53.73',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
	select
	to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date ,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end, ''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_date 
),call_master_ids as (
select id,
created_on,
get_location_hierarchy(location_id) as Location_hierarchy
from gvk_manage_call_master
inner join dates on gvk_manage_call_master.created_on between dates.from_date and dates.to_date
where gvk_manage_call_master.location_id in (select child_id from location_hierchy_closer_det where parent_id  = (case when #location_id# = -2 then 2 else #location_id# end) 
and depth <= (case when #location_id# = -2 then 0 else 8 end))
and gvk_manage_call_master.call_response not in (''com.argusoft.imtecho.gvk.call.cant-talk'',
	''com.argusoft.imtecho.gvk.call.no-number-available'',
	''com.argusoft.imtecho.gvk.call.wrong-mobile-number'',
        ''com.argusoft.imtecho.gvk.call.phone-switched-off'',
        ''com.argusoft.imtecho.gvk.call.unresponsive'',
        ''com.argusoft.imtecho.gvk.call.not-reachable''
)
and gvk_manage_call_master.call_type = ''DUP_MEM_VERI''
),response_ids as (
select 
call_master_ids.created_on,
imt_member_duplicate_member_detail.id,
imt_member_duplicate_member_detail.member1_id,
imt_member_duplicate_member_detail.member2_id,
imt_member_duplicate_member_detail.is_member1_valid,
imt_member_duplicate_member_detail.is_member2_valid,
Location_hierarchy
from call_master_ids
inner join gvk_duplicate_member_verification_response on call_master_ids.id = gvk_duplicate_member_verification_response.manage_call_master_id
inner join imt_member_duplicate_member_detail on gvk_duplicate_member_verification_response.duplicate_member_verification_id = imt_member_duplicate_member_detail.id
order by imt_member_duplicate_member_detail.id desc
#limit_offset#
),response as (
select 
response_ids.created_on,
response_ids.id as gvk_duplicate_id,
Location_hierarchy,
concat(m1.first_name,'' '',m1.middle_name,'' '',m1.last_name,'' ('',m1.unique_health_id,'')'') as member_1_details,
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name,'' ('',m2.unique_health_id,'')'') as member_2_details,
case when response_ids.is_member1_valid then ''Yes''
else ''No'' end as member_1_valid,
case when response_ids.is_member2_valid then ''Yes''
else ''No'' end as member_2_valid,
case when response_ids.is_member1_valid then response_ids.member1_id
else response_ids.member2_id end as member_id
from response_ids
left join imt_member m1 on response_ids.member1_id = m1.id
left join imt_member m2 on response_ids.member2_id = m2.id
),member_location_area_ids as (
select response.gvk_duplicate_id,response.member_id,imt_family.location_id,imt_family.area_id
from response
inner join imt_member on imt_member.id = response.member_id
inner join imt_family on imt_family.family_id = imt_member.family_id
),asha as (
select member_location_area_ids.gvk_duplicate_id,asha.id
from member_location_area_ids
inner join um_user_location asha_location on member_location_area_ids.area_id = asha_location.loc_id and asha_location.state = ''ACTIVE''
inner join um_user asha on asha_location.user_id = asha.id and asha.role_id = 24 and asha.state = ''ACTIVE''
),asha_unique as (
select asha.gvk_duplicate_id,max(asha.id)
from asha
group by asha.gvk_duplicate_id
),fhw as (
select member_location_area_ids.gvk_duplicate_id,fhw.id
from member_location_area_ids
inner join um_user_location fhw_location on member_location_area_ids.location_id = fhw_location.loc_id and fhw_location.state = ''ACTIVE''
inner join um_user fhw on fhw_location.user_id = fhw.id and fhw.role_id = 30 and fhw.state = ''ACTIVE''
),fhw_unique as (
select fhw.gvk_duplicate_id,max(fhw.id)
from fhw
group by fhw.gvk_duplicate_id
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
response.member_1_details as "Duplicate Member 1 Verification",
response.member_2_details as "Duplicate Member 2 Verification",
Location_hierarchy as "Location",
to_char(response.created_on,''DD-MM-YYYY HH:MI PM'') as  "Call Date",
response.member_1_valid as "Is Member 1 Verified",
response.member_2_valid as "Is Member 2 Verified",
concat(fhw_user.first_name,'' '',fhw_user.middle_name,'' '',fhw_user.last_name) as "FHW Name",
concat(asha_user.first_name,'' '',asha_user.middle_name,'' '',asha_user.last_name) as "ASHA Name"
from response
inner join imt_member on response.member_id = imt_member.id
inner join imt_family on imt_family.family_id = imt_member.family_id
left join asha_unique on response.gvk_duplicate_id = asha_unique.gvk_duplicate_id
left join fhw_unique on response.gvk_duplicate_id = fhw_unique.gvk_duplicate_id
left join um_user asha_user on asha_unique.max = asha_user.id
left join um_user fhw_user on fhw_unique.max = fhw_user.id',true,'ACTIVE','78f37dac-17fd-4d8f-b712-3299e8024b48'),
	 (1775,74841,'2020-09-21 18:20:32.529',1,'2021-01-13 20:22:06.427965','call_type','with  types as (
select ''all'' as key, ''All'' as value, 1 as ord
union
select ''FHW_HIGH_RISK_CONF'' as key,''Fhw highrisk conformation'' as value, 2 as ord
union
select ''IMMUN_VERI'' as key, ''Immunization verification'' as value, 3 as ord
union
select ''FAM_VERI'' as key, ''Family verification'' as value, 4 as ord
union
select ''PREG_REGI_VERI'' as key,''Pregnancy registration verification'' as value, 5 as ord
union
select ''MIG_IN_VERI'' as key, ''Member IN migration verification'' as value, 6 as ord
union
select ''HIGH_RISK_VERI'' as key, ''Highrisk followup verification'' as value, 7 as ord
union
select ''MIG_OUT_VERI'' as key,''Member OUT migration verification'' as value, 8 as ord
union
select ''DUP_MEM_VERI'' as key, ''Duplicate member verification'' as value, 9 as ord)
select value as call_type from types where key = ''#call_type#''',true,'ACTIVE','721ae0d7-ed0d-4cbe-80d0-5f599fa6da03');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1806,78434,'2020-11-03 19:57:23.78',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','c4424055-fde5-48b1-b4eb-46f344d10e65'),
	 (813,58981,'2019-03-06 17:36:58.872',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','5cb6072d-8cef-4a9c-9a1f-5539e72c5b48'),
	 (814,58981,'2019-03-06 17:36:58.875',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','facc57ff-5e7f-45fc-97cb-72ecd021da72'),
	 (1771,74841,'2020-09-21 18:12:04.616',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','830d234b-a13e-40c0-89bf-50ac115d9958'),
	 (1312,66522,'2019-08-14 15:25:06.982',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','8d755dfa-6ddc-4e1d-aaf2-50aa25c2a408'),
	 (1768,74841,'2020-09-21 18:08:55.771',1,'2021-01-13 20:22:06.427965','call_type','with  types as (
select ''all'' as key, ''All'' as value, 1 as ord
union
select ''FHW_HIGH_RISK_CONF'' as key,''Fhw highrisk conformation'' as value, 2 as ord
union
select ''IMMUN_VERI'' as key, ''Immunization verification'' as value, 3 as ord
union
select ''FAM_VERI'' as key, ''Family verification'' as value, 4 as ord
union
select ''PREG_REGI_VERI'' as key,''Pregnancy registration verification'' as value, 5 as ord
union
select ''MIG_IN_VERI'' as key, ''Member IN migration verification'' as value, 6 as ord
union
select ''HIGH_RISK_VERI'' as key, ''Highrisk followup verification'' as value, 7 as ord
union
select ''MIG_OUT_VERI'' as key,''Member OUT migration verification'' as value, 8 as ord
union
select ''DUP_MEM_VERI'' as key, ''Duplicate member verification'' as value, 9 as ord)
select value as call_type from types where key = ''#call_type#''',true,'ACTIVE','de8a0d26-0c61-4d4c-bcf8-a1aa3e10adba'),
	 (1769,74841,'2020-09-21 18:08:55.795',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','0294f38e-83b2-45b0-983e-36c0a50426f3'),
	 (1770,74841,'2020-09-21 18:08:55.798',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','56c2cbd9-0035-4c54-bcdb-d0c0787172a4'),
	 (545,1,'2019-02-14 16:21:01.342',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','c4eb1256-fd53-4ed2-a99c-cd8d0d5215e0'),
	 (1050,409,'2019-04-24 17:37:18.919',1,'2021-01-13 20:22:06.427965','location_id','with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)
,children_count_label as (
    select ''0'' as children, 0 as child_count
    union 
    select ''1'' as children, 1 as child_count
    union
    select ''2'' as children, 2 as child_count
    union
    select ''3'' as children, 3 as child_count
    union
    select ''4'' as children, 4 as child_count
    union
    select ''5+'' as children, 5 as child_count
)
,total_number as (
	select r.age_group_or_child_cnt, sum(r.eligiblecouple) as eligiblecouple, sum(r.male) as male, sum(r.female) as female, 
	sum(r.coppert) as coppert, sum(r.condom) as condom, sum(r.orelpills) as  orelpills,sum(r.injectable) as injectable, sum(r.none) as none
	from rch_eligible_couple_location_wise_count_anlytics_detail r
	inner join locations on locations.child_id = r.location_id
	where age_group_or_child_cnt in (''0'',''1'',''2'',''3'',''4'',''5+'')
	group by r.age_group_or_child_cnt 
)
,eligible_couple_data as (	
select children_count_label.children as age_group_or_child_cnt,
coalesce(total_number.eligiblecouple,0) as eligiblecouple,
coalesce(total_number.male,0) as male,
coalesce(total_number.female,0) as female,
coalesce(total_number.coppert,0) as coppert,
coalesce(total_number.condom,0) as condom,
coalesce(total_number.orelpills,0) as orelpills,
coalesce(total_number.injectable,0) as injectable,
coalesce(sum( male + female + coppert + condom + orelpills + injectable),0) as total ,
coalesce(total_number.none,0) as none
from children_count_label 
left join total_number on total_number.age_group_or_child_cnt = children_count_label.children
group by children_count_label.children, total_number.eligiblecouple,total_number.male,
total_number.female,total_number.coppert,total_number.condom,total_number.orelpills,total_number.injectable,
total_number.none,children_count_label.child_count
order by children_count_label.child_count
)
select 
age_group_or_child_cnt as hidden_age_group_or_child_count,
age_group_or_child_cnt as  "બાળકની સંખ્યા પ્રમાણે", eligiblecouple as "લાયક દંપતિની સંખ્યા", male as "પુ.ઓ.", female as "સ્ત્રી.ઓ.", coppert as "આંકડી", 
condom as "નિરોધ વાપરનારની સંખ્યા", orelpills as "ઓરલ પીલ્સ વાપરનાર", injectable , total as "કુલ", none as "કોઇપણ પધ્ધતિ ન અપનાવેલ" 
from eligible_couple_data 
where #location_id# is not null
union all 
select 
	null,''<b>કુલ</b>'', sum(eligible_couple_data.eligiblecouple),sum(eligible_couple_data.male),sum(eligible_couple_data.female),
	sum(eligible_couple_data.coppert),sum(eligible_couple_data.condom),sum(eligible_couple_data.orelpills),sum(eligible_couple_data.injectable),
	sum(eligible_couple_data.total),sum(eligible_couple_data.none) 
from eligible_couple_data
where #location_id# is not null',true,'ACTIVE','95f6c7ed-8a7e-40e5-8004-608a866fed96');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (528,1,'2019-02-14 16:06:00.339',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','273615ab-5525-4881-9665-02523d3cfa4c'),
	 (209,57698,'2019-01-28 18:23:13.241',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,hidden_location_id,from_month','with member_details as (select member_id,member_current_location_id, lmp_date, m.first_name|| '' '' || m.last_name as name,m.unique_health_id,m.edd,m.mobile_number
from rch_pregnancy_analytics_details r,imt_member m
 where m.id=r.member_id and
 no_aadhar_and_bank=true and lmp_month_year between (case when #from_month# is null then ''01/01/1970'' else to_date(''#from_month#'',''MM/DD/YYYY'') end) 
	and (case when #to_month# is null then current_date else to_date(''#to_month#'',''MM/DD/YYYY'') end)
	and member_current_location_id in (
		select child_id from location_hierchy_closer_det  where parent_id=#hidden_location_id#
	)
#limit_offset#)

select member_details.member_id as hidden_id ,member_current_location_id as hidden_location_id,member_details.name as "Name", string_agg(location_master.name,'' > '' order by depth desc) as "Location",to_date(to_char(member_details.edd, ''YYYY/MM/DD''), ''YYYY/MM/DD'')   as "Expected Delivery Date", member_details.unique_health_id as "Unique Health Id",member_details.mobile_number as "Contact Number"

from member_details,location_hierchy_closer_det ,location_master
where
 location_hierchy_closer_det.child_id = member_details.member_current_location_id
and location_master.id = location_hierchy_closer_det.parent_id
group by member_details.member_id,member_current_location_id,"Name","Unique Health Id","Expected Delivery Date","Contact Number"',true,'ACTIVE','62761a2d-478d-4056-ae60-1d73d837c630'),
	 (997,64189,'2019-04-12 17:17:57.131',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','814bbbd9-08cc-4c72-bf9d-5f8c3cb99bad'),
	 (1366,69973,'2019-08-20 18:13:25.579',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','8190329c-1b95-46d7-ab97-02426784a4e3'),
	 (987,64189,'2019-04-12 15:52:53.891',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','7072f280-6637-41bd-b03e-1a1b7f25ff7f'),
	 (141,58981,'2019-01-21 14:20:06.776',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','9e76b0b4-dc06-4856-b9fd-0cf97913165b'),
	 (1090,63746,'2019-05-01 15:15:28.067',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #location_id#',true,'ACTIVE','250d22e7-8372-43e4-9d5e-5f2b2486f814'),
	 (664,409,'2019-02-19 20:58:11.656',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','a0ded52d-3db3-49c9-b5ee-ce5254d7fbd7'),
	 (1067,64189,'2019-04-29 16:46:55.576',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','bb57c1f1-63fa-4638-b60e-3c235883a051'),
	 (592,1,'2019-02-18 17:50:19.467',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','4c00571c-c5b1-478d-9250-c99a8344c627');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (144,58981,'2019-01-21 14:21:22.593',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','6e9ca662-f848-4586-9629-9ed1c9453831'),
	 (238,1,'2019-02-04 18:04:41.563',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','e4c7838b-080f-43e6-8e69-85d7b94f560b'),
	 (591,1,'2019-02-18 17:50:19.465',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','b6920220-719e-46e4-97f0-d6b168cc8166'),
	 (776,58981,'2019-03-06 15:07:40.437',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','96796547-fc8d-4bb8-a30e-750ac3169736'),
	 (1088,63746,'2019-05-01 15:09:46.157',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #location_id#',true,'ACTIVE','096e9b30-f600-47b0-afaf-2238f6b91a49'),
	 (237,57698,'2019-02-04 17:59:45.684',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Penta 1 given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 years as ( 
	select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, 
	cast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date
	from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc
), child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.is_valid_for_tracking_report = true
	and y.financial_year = ''#financial_year#''
	and c.penta1 is not null
	and c.dob between y.from_date and y.too_date
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','4320db7b-4345-4f9e-ac98-2595c4ffcbf2'),
	 (903,58981,'2019-03-07 11:27:45.864',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,too_date,loggedInUserId,location_id','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#
),
member_det as (
	select r.member_id, f.location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, imt_family f, rch_pregnancy_registration_det p
	where r.member_id = m.id and r.member_current_location_id  = l.child_id and r.pregnancy_reg_id = p.id and m.family_id = f.family_id
	and r.delivery_hospital = ''897'' and r.delivery_outcome in (''LBIRTH'',''SBIRTH'')
	and l.parent_id = #location_id#
	and r.date_of_delivery between cast (
		case
			when ''#from_date#'' = ''null'' then ''01-01-1970''
			else ''#from_date#''
		end as date) and cast (
		case
			when ''#too_date#'' = ''null'' then ''01-01-1970''
			else ''#too_date#''
		end as date)
	order by p.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','3fa7a99d-6615-40ab-9bc0-7e2a4d60e006'),
	 (586,1,'2019-02-18 13:36:15.529',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','2df97650-8703-4d39-a5b6-aa420a0becfe'),
	 (495,1,'2019-02-14 15:32:39.85',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','3f4acc2d-89ae-4257-b9b6-1f3e41c54503'),
	 (496,1,'2019-02-14 15:32:39.853',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','08e374a0-7ee4-4f1a-956d-47b5f1041088');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (169,58981,'2019-01-22 19:21:54.363',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','16476702-6bf3-472c-8049-a6b603eba2ac'),
	 (233,57698,'2019-02-04 17:42:56.372',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','452961ec-ab38-42d4-a69e-ecb29fcfe57e'),
	 (686,409,'2019-02-27 13:23:32.811',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Total ANC registered(LMP Based Pregnant Women Reg. for ANC Services)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 member_det as (
	select r.member_id, r.tracking_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp
	, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.date_of_delivery,''DD/MM/YYYY'') as dod
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, imt_member m
	
	where r.member_id = m.id and r.tracking_location_id  = l.child_id
	and l.parent_id = #location_id#
	and r.lmp_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date)
	order by r.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
member_det.dod as "Date of delivery",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','573918ed-b091-4895-a6ad-6d27b76a0db0'),
	 (1767,60512,'2020-09-18 12:17:47.017',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id,show_current_location','with prefered_language as(
	select case when prefered_language = ''EN'' then true else false end as is_english
	from um_user
	where id = #loggedInUserId#
),location_detail as (
	select child_id,depth
	from location_hierchy_closer_det
	where parent_id = #location_id#
	and case when #show_current_location# then depth in (0,1) else depth = 1 end
),dates as (
	select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date
),counts as (
	select location_detail.child_id,
	sum(less_than_6_month_boys) as less_than_6_month_boys,
	sum(less_than_6_month_girls) as less_than_6_month_girls,
	sum(more_than_6_month_boys) as more_than_6_month_boys,
	sum(more_than_6_month_girls) as more_than_6_month_girls,
	sum(discharge_from_facility) as discharge_from_facility,
	sum(death) as death,
	sum(fsam_follow_up_visit_1) as fsam_follow_up_visit_1,
	sum(fsam_follow_up_visit_2) as fsam_follow_up_visit_2,
	sum(fsam_follow_up_visit_3) as fsam_follow_up_visit_3,
	sum(cured) as cured,
	sum(sam_to_mam) as sam_to_mam,
	sum(sam_to_sam) as sam_to_sam,
	sum(defaulters) as defaulters,
	sum(weight_gain_8gm_kg_day) as weight_gain_8gm_kg_day,
	sum(weight_gain_15) as weight_gain_15
	from location_detail
	inner join location_hierchy_closer_det on location_detail.child_id = location_hierchy_closer_det.parent_id
	and location_hierchy_closer_det.depth <= (case when location_detail.depth < 1 then 0 else 8 end)
	inner join child_cmtc_nrc_admited_analytics_location_wise_details on location_hierchy_closer_det.child_id = child_cmtc_nrc_admited_analytics_location_wise_details.location_id
	inner join dates on child_cmtc_nrc_admited_analytics_location_wise_details.month_year between dates.from_date and dates.to_date
	group by location_detail.child_id
),details as (
	select location_master.id as hidden_location_id,
	case when prefered_language.is_english and location_master.english_name is not null then location_master.english_name else location_master.name end as loc,
	coalesce(
	counts.less_than_6_month_boys
	+ counts.less_than_6_month_girls
	+ counts.more_than_6_month_boys
	+ counts.more_than_6_month_girls
	,0) as total_admission,
	coalesce(counts.discharge_from_facility,0) as discharge_from_facility,
	coalesce(counts.death,0) as death,
	coalesce(counts.fsam_follow_up_visit_1,0) as fsam_follow_up_visit_1,
	coalesce(counts.fsam_follow_up_visit_2,0) as fsam_follow_up_visit_2,
	coalesce(counts.fsam_follow_up_visit_3,0) as fsam_follow_up_visit_3,
	coalesce(counts.cured,0) as cured,
	coalesce(counts.sam_to_mam,0) as sam_to_mam,
	coalesce(counts.sam_to_sam,0) as sam_to_sam,
	coalesce(counts.defaulters,0) as defaulters,
	coalesce(counts.weight_gain_8gm_kg_day,0) as weight_gain_8gm_kg_day,
	coalesce(counts.weight_gain_15,0) as weight_gain_15
	from location_detail
	inner join dates on true
	inner join location_master on location_master.id = location_detail.child_id
	left join counts on location_detail.child_id = counts.child_id
	cross join prefered_language
)
select row_number() over() as "Sr.No",
details.loc as "Location",
details.hidden_location_id,
details.total_admission as "No. of children admitted at CMTC/NRC",
details.discharge_from_facility as "Discharge from facility",
	case when details.discharge_from_facility = 0 or details.discharge_from_facility is null or details.total_admission = 0 or details.total_admission is null then 0 else
	round(details.discharge_from_facility * 100.0/details.total_admission,2) end as "percent_col_Discharge from facility",
details.death as "Death",
details.fsam_follow_up_visit_1 as "Follow up visit 1",
details.fsam_follow_up_visit_2 as "Follow up visit 2",
details.fsam_follow_up_visit_3 as "Follow up visit 3",
details.cured as "Children Achieved Cured Criteria",
details.sam_to_mam as "SAM To MAM",
details.sam_to_sam as "SAM To SAM",
details.defaulters as "Defaulters",
	case when details.defaulters = 0 or details.defaulters is null or details.discharge_from_facility = 0 or details.discharge_from_facility is null then 0 else
	round(details.defaulters * 100.0/details.discharge_from_facility,2) end as "percent_col_Defaulters",
details.weight_gain_8gm_kg_day as "Weight gain more than 8gm/kg/day",
	case when details.weight_gain_8gm_kg_day = 0 or details.weight_gain_8gm_kg_day is null or details.total_admission = 0 or details.total_admission is null then 0 else
	round(details.weight_gain_8gm_kg_day * 100.0/details.total_admission,2) end as "percent_col_Weight gain more than 8gm/kg/day",
details.weight_gain_15 as "15% weight gain",
	case when details.weight_gain_15 = 0 or details.weight_gain_15 is null or details.discharge_from_facility = 0 or details.discharge_from_facility is null then 0 else
	round(details.weight_gain_15 * 100.0/details.discharge_from_facility,2) end as "percent_col_15 weight gain"
from details
union all
select null,
''<b>Total<b>'',
#location_id#,
sum(details.total_admission),
sum(details.discharge_from_facility),
	case when (sum(details.discharge_from_facility) = 0 or sum(details.discharge_from_facility) is null or sum(details.total_admission) = 0 or sum(details.total_admission) is null) then 0 else
	round(sum(details.discharge_from_facility)*100.0/sum(details.total_admission),2) end,
sum(details.death),
sum(details.fsam_follow_up_visit_1),
sum(details.fsam_follow_up_visit_2),
sum(details.fsam_follow_up_visit_3),
sum(details.cured),
sum(details.sam_to_mam),
sum(details.sam_to_sam),
sum(details.defaulters),
	case when (sum(details.defaulters) = 0 or sum(details.defaulters) is null or sum(details.discharge_from_facility) = 0 or sum(details.discharge_from_facility) is null) then 0 else
	round(sum(details.defaulters)*100.0/sum(details.discharge_from_facility),2) end,
sum(details.weight_gain_8gm_kg_day),
	case when (sum(details.weight_gain_8gm_kg_day) = 0 or sum(details.weight_gain_8gm_kg_day) is null or sum(details.total_admission) = 0 or sum(details.total_admission) is null) then 0 else
	round(sum(details.weight_gain_8gm_kg_day)*100.0/sum(details.total_admission),2) end,
sum(details.weight_gain_15),
	case when (sum(details.weight_gain_15) = 0 or sum(details.weight_gain_15) is null or sum(details.discharge_from_facility) = 0 or sum(details.discharge_from_facility) is null) then 0 else
	round(sum(details.weight_gain_15)*100.0/sum(details.discharge_from_facility),2) end
from details;',true,'ACTIVE','5a3bfafd-a032-4000-adbf-2ac7a42aab82'),
	 (1198,409,'2019-07-09 19:42:50.144',1,'2021-01-13 20:22:06.427965',NULL,'select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as year from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by year desc;',true,'ACTIVE','fd1d67e6-ce69-4b4c-98ca-d662467396a2'),
	 (1369,69973,'2019-08-20 18:15:25.844',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','c79ebf1c-acc4-452e-9ffd-23aa6356341d'),
	 (979,60512,'2019-04-11 14:51:29.148',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','00110006-46c4-4e34-b4a4-a228e701340b'),
	 (1082,63746,'2019-05-01 15:07:07.41',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #location_id#',true,'ACTIVE','bf1c8e67-3cf8-44ff-b838-7b1e63e031e6'),
	 (1804,78434,'2020-11-03 19:23:50.121',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','a589f065-a654-4d39-bd3b-c73a29534878'),
	 (177,58981,'2019-01-22 19:31:24.116',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','dba5c875-1e1e-42d3-9eaf-49017616edea');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1805,78434,'2020-11-03 19:23:50.199',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,location_id','-- 2 ANC and 3 ANC HR PW registered (PMSMA Services Statistics Report during the year)
with dates as (
    select case
            when ''#financial_year#'' = ''null'' then null
            else cast(
                concat(substr(''#financial_year#'', 1, 4), ''-04-01'') as date
            )
        end as from_date,
        case
            when ''#financial_year#'' = ''null'' then null
            when cast(
                concat(substr(''#financial_year#'', 6, 10), ''-03-31'') as date
            ) <= current_date then cast(
                concat(substr(''#financial_year#'', 6, 10), ''-03-31'') as date
            )
            else current_date
        end as to_date
),
location_det as (
    select lm.id,
        lm.english_name as name,
        lm.location_code
    from location_hierchy_closer_det lh1,
        location_master lm
    where lh1.parent_id = #location_id#
        and lm.id = lh1.child_id
),
high_risk_member as (
    (
        select rpa.member_id,
            rpa.pregnancy_reg_id,
            concat(
                rpa.member_name,
                '' ('',
                rpa.unique_health_id,
                '')''
            ) as member_name,
            get_location_hierarchy(rpa.member_current_location_id) as location_name,
            to_char(rpa.lmp_date, ''DD-MM-YYYY'') as lmp_date,
            to_char(preg.edd, ''DD-MM-YYYY'') as edd_date,
            case
                when (
                    (
                        cast(rpa.lmp_date + interval ''90 days'' as date),
                        cast(rpa.lmp_date + interval ''180 days'' as date)
                    ) overlaps (
                        cast(dates.from_date as date),
                        cast(dates.to_date as date)
                    )
                ) then rpa.lmp_date + interval ''90 days''
                else null
            end as trimester_start_date,
            case
                when (
                    (
                        cast(rpa.lmp_date + interval ''90 days'' as date),
                        cast(rpa.lmp_date + interval ''180 days'' as date)
                    ) overlaps (
                        cast(dates.from_date as date),
                        cast(dates.to_date as date)
                    )
                ) then rpa.lmp_date + interval ''180 days''
                else null
            end as trimester_end_date,
            2 as current_trimester,
            string_agg(to_char(anc.service_date, ''DD-MM-YYYY''), '','') as service_dates
        from rch_pregnancy_analytics_details rpa
            inner join dates on (
                rpa.death_date is null
                or rpa.death_date >= dates.from_date
            )
            and (
                date_of_delivery is null
                or date_of_delivery >= dates.from_date
            )
            and (
                (
                    cast(rpa.lmp_date + interval ''90 days'' as date),
                    cast(rpa.lmp_date + interval ''180 days'' as date)
                ) overlaps (
                    cast(dates.from_date as date),
                    cast(dates.to_date as date)
                )
            )
            inner join rch_pregnancy_registration_det preg on preg.id = rpa.pregnancy_reg_id
            left join rch_anc_master anc on anc.pregnancy_reg_det_id = rpa.pregnancy_reg_id
            and anc.examined_by_gynecologist = true
            and anc.is_from_web = true
            and anc.service_date between (
                case
                    when (
                        (
                            cast(rpa.lmp_date + interval ''90 days'' as date),
                            cast(rpa.lmp_date + interval ''180 days'' as date)
                        ) overlaps (
                            cast(dates.from_date as date),
                            cast(dates.to_date as date)
                        )
                    ) then rpa.lmp_date + interval ''90 days''
                    else null
                end
            )
            and (
                case
                    when (
                        (
                            cast(rpa.lmp_date + interval ''90 days'' as date),
                            cast(rpa.lmp_date + interval ''180 days'' as date)
                        ) overlaps (
                            cast(dates.from_date as date),
                            cast(dates.to_date as date)
                        )
                    ) then rpa.lmp_date + interval ''180 days''
                    else null
                end
            )
        where rpa.high_risk_mother = true
            and rpa.member_current_location_id in (
                select id
                from location_det
            )
        group by rpa.pregnancy_reg_id,
            preg.edd,
            dates.from_date,
            dates.to_date
    )
    union all
    (
        select rpa.member_id,
            rpa.pregnancy_reg_id,
            concat(
                rpa.member_name,
                '' ('',
                rpa.unique_health_id,
                '')''
            ) as member_name,
            get_location_hierarchy(rpa.member_current_location_id) as location_name,
            to_char(rpa.lmp_date, ''DD-MM-YYYY'') as lmp_date,
            to_char(preg.edd, ''DD-MM-YYYY'') as edd_date,
            case
                when (
                    (
                        cast(rpa.lmp_date + interval ''180 days'' as date),
                        cast(rpa.lmp_date + interval ''270 days'' as date)
                    ) overlaps (
                        cast(dates.from_date as date),
                        cast(dates.to_date as date)
                    )
                ) then rpa.lmp_date + interval ''181 days''
                else null
            end as trimester_start_date,
            case
                when (
                    (
                        cast(rpa.lmp_date + interval ''180 days'' as date),
                        cast(rpa.lmp_date + interval ''270 days'' as date)
                    ) overlaps (
                        cast(dates.from_date as date),
                        cast(dates.to_date as date)
                    )
                ) then rpa.lmp_date + interval ''270 days''
                else null
            end as trimester_end_date,
            3 as current_trimester,
            string_agg(to_char(anc.service_date, ''DD-MM-YYYY''), '','') as service_dates
        from rch_pregnancy_analytics_details rpa
            inner join dates on (
                rpa.death_date is null
                or rpa.death_date >= dates.from_date
            )
            and (
                date_of_delivery is null
                or date_of_delivery >= dates.from_date
            )
            and (
                (
                    cast(rpa.lmp_date + interval ''180 days'' as date),
                    cast(rpa.lmp_date + interval ''270 days'' as date)
                ) overlaps (
                    cast(dates.from_date as date),
                    cast(dates.to_date as date)
                )
            )
            inner join rch_pregnancy_registration_det preg on preg.id = rpa.pregnancy_reg_id
            left join rch_anc_master anc on anc.pregnancy_reg_det_id = rpa.pregnancy_reg_id
            and anc.examined_by_gynecologist = true
            and anc.is_from_web = true
            and anc.service_date between (
                case
                    when (
                        (
                            cast(rpa.lmp_date + interval ''180 days'' as date),
                            cast(rpa.lmp_date + interval ''270 days'' as date)
                        ) overlaps (
                            cast(dates.from_date as date),
                            cast(dates.to_date as date)
                        )
                    ) then rpa.lmp_date + interval ''181 days''
                    else null
                end
            )
            and (
                case
                    when (
                        (
                            cast(rpa.lmp_date + interval ''180 days'' as date),
                            cast(rpa.lmp_date + interval ''270 days'' as date)
                        ) overlaps (
                            cast(dates.from_date as date),
                            cast(dates.to_date as date)
                        )
                    ) then rpa.lmp_date + interval ''270 days''
                    else null
                end
            )
        where rpa.high_risk_mother = true
            and rpa.member_current_location_id in (
                select id
                from location_det
            )
        group by rpa.pregnancy_reg_id,
            preg.edd,
            dates.from_date,
            dates.to_date
    )
    order by pregnancy_reg_id #limit_offset#
)
select ROW_NUMBER() over () + cast(
        SUBSTRING(
            ''#limit_offset#'',
            POSITION(''offset'' in ''#limit_offset#'') + 7
        ) as int
    ) as "Sr No",
    location_name as "Location Name",
    member_name as "Member Name",
    lmp_date as "LMP Date",
    edd_date as "EDD Date",
    case
        when current_trimester = 2 then ''2nd''
        when current_trimester = 3 then ''3rd''
        else ''-''
    end as "ANC Trimester",
    to_char(trimester_start_date, ''DD-MM-YYYY'') as "Trimester Start Date",
    to_char(trimester_end_date, ''DD-MM-YYYY'') as "Trimester End Date",
    case
        when service_dates is null then ''-''
        else service_dates
    end as "Trimester PMSMA Services Given"
from high_risk_member;',true,'ACTIVE','b147f4e3-1bee-4c74-b75f-edbe45d9c799'),
	 (548,1,'2019-02-14 16:23:36.137',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','062425e8-6ed7-4537-84dd-2bc5c3c3ed79'),
	 (550,1,'2019-02-14 16:23:36.142',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','ad3db7a5-59ca-4874-8db7-fb2f24bbf730'),
	 (915,60512,'2019-03-08 11:00:03.335',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id,show_current_location','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 location_ids as(
	select child_id,depth from location_hierchy_closer_det where parent_id = #location_id#
	and case when #show_current_location# then depth in (0,1) else depth = 1 end
),admissions_death_count as (
	select location_ids.child_id,
	count(distinct child_cmtc_nrc_screening_detail.child_id) as total,
	count(distinct child_cmtc_nrc_screening_detail.child_id) filter (where child_cmtc_nrc_screening_detail.state = ''DEATH'') as death
	from location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id
	and location_hierchy_closer_det.depth <= (case when location_ids.depth < 1 then 0 else 8 end)
	inner join health_infrastructure_details on location_hierchy_closer_det.child_id = health_infrastructure_details.location_id
	inner join child_cmtc_nrc_admission_detail on health_infrastructure_details.id = child_cmtc_nrc_admission_detail.screening_center
	inner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id
	where child_cmtc_nrc_admission_detail.admission_date between 
		(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	group by location_ids.child_id
),discharge_count as (
	select location_ids.child_id,
	count(distinct child_cmtc_nrc_screening_detail.child_id) as total
	from location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id
	inner join health_infrastructure_details on location_hierchy_closer_det.child_id = health_infrastructure_details.location_id
	inner join child_cmtc_nrc_admission_detail on health_infrastructure_details.id = child_cmtc_nrc_admission_detail.screening_center
	inner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id
	inner join child_cmtc_nrc_discharge_detail on child_cmtc_nrc_discharge_detail.id = child_cmtc_nrc_screening_detail.discharge_id
	where child_cmtc_nrc_admission_detail.admission_date between 
		(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	group by location_ids.child_id
),followups_child_ids as(
	select location_ids.child_id as location_id, 
	child_cmtc_nrc_follow_up.child_id, child_cmtc_nrc_follow_up.follow_up_visit
	from location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id
	inner join health_infrastructure_details on location_hierchy_closer_det.child_id = health_infrastructure_details.location_id
	inner join child_cmtc_nrc_admission_detail on health_infrastructure_details.id = child_cmtc_nrc_admission_detail.screening_center
	inner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id
	inner join child_cmtc_nrc_follow_up on child_cmtc_nrc_follow_up.admission_id = child_cmtc_nrc_admission_detail.id
	where child_cmtc_nrc_admission_detail.admission_date between 
		(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	group by location_ids.child_id, child_cmtc_nrc_follow_up.child_id, child_cmtc_nrc_follow_up.follow_up_visit
),followups_count as (
	select location_id,
	count(distinct followups_child_ids.child_id) filter (where followups_child_ids.follow_up_visit=1) as followup1,
	count(distinct followups_child_ids.child_id) filter (where followups_child_ids.follow_up_visit=2) as followup2,
	count(distinct followups_child_ids.child_id) filter (where followups_child_ids.follow_up_visit=3) as followup3
	from followups_child_ids 
	group by location_id
),admitted_child_ids as (
	select distinct
	child_cmtc_nrc_admission_detail.id,
	child_cmtc_nrc_admission_detail.child_id,
	location_ids.child_id as location_id
	from location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id
	inner join health_infrastructure_details on location_hierchy_closer_det.child_id = health_infrastructure_details.location_id
	inner join child_cmtc_nrc_admission_detail on health_infrastructure_details.id = child_cmtc_nrc_admission_detail.screening_center
	inner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id
	where child_cmtc_nrc_admission_detail.admission_date between 
		(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
),average_weight_gain_count as (
	select avg(child_cmtc_nrc_weight_detail.weight) as avg_wt,admitted_child_ids.child_id,admitted_child_ids.location_id from admitted_child_ids
	inner join child_cmtc_nrc_weight_detail on child_cmtc_nrc_weight_detail.admission_id = admitted_child_ids.id
	group by child_cmtc_nrc_weight_detail.admission_id,admitted_child_ids.child_id,admitted_child_ids.location_id
), distinct_avg_wt as (
	select child_id,location_id, avg(avg_wt) as avg_wt from average_weight_gain_count group by child_id,location_id
), avg_loc_cnt as (
	select distinct_avg_wt.location_id,sum(case when avg_wt>8 then 1 else 0 end) as avg_wt
	from distinct_avg_wt
	group by distinct_avg_wt.location_id
),weight_gain_count as (
	select location_ids.child_id as location_id,
	count(distinct child_cmtc_nrc_screening_detail.child_id) filter (where (round(child_cmtc_nrc_discharge_detail.weight - child_cmtc_nrc_admission_detail.weight_at_admission)
			*100.0/child_cmtc_nrc_admission_detail.weight_at_admission)>=15) as weightGain
	from location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id
	inner join health_infrastructure_details on location_hierchy_closer_det.child_id = health_infrastructure_details.location_id
	inner join child_cmtc_nrc_admission_detail on health_infrastructure_details.id = child_cmtc_nrc_admission_detail.screening_center
	inner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id
	inner join child_cmtc_nrc_discharge_detail on child_cmtc_nrc_discharge_detail.id = child_cmtc_nrc_screening_detail.discharge_id
	where child_cmtc_nrc_admission_detail.admission_date between 
		(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	group by location_ids.child_id
),det as(
	select row_number() over() as sr_no,
	case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
else location_master.name end as loc,
	location_master.id as hidden_location_id,
	coalesce(admissions_death_count.total,0) as admissions_count,
	coalesce(discharge_count.total,0) as discharge_count,
	coalesce(admissions_death_count.death,0) as death_count,
	coalesce(followups_count.followup1,0) as followup1_count,
	coalesce(followups_count.followup2,0) as followup2_count,
	coalesce(followups_count.followup3,0) as followup3_count,
	coalesce(avg_loc_cnt.avg_wt,0) as average_count,
	coalesce(weight_gain_count.weightGain,0) as weight_gain_count
	from location_ids
	left join admissions_death_count on location_ids.child_id = admissions_death_count.child_id
	left join discharge_count on location_ids.child_id = discharge_count.child_id
	left join followups_count on location_ids.child_id = followups_count.location_id
	left join avg_loc_cnt on location_ids.child_id = avg_loc_cnt.location_id
	left join weight_gain_count on location_ids.child_id = weight_gain_count.location_id
	inner join location_master on location_master.id = location_ids.child_id
        cross join prefered_language
)
select row_number() over() as "Sr. no", 
det.loc as "Location",
det.hidden_location_id,
det.admissions_count as "No. of children admitted at CMTC/NRC",
det.discharge_count as "Discharge from facility",
	case when (det.discharge_count = 0 or det.discharge_count is null or det.admissions_count = 0 or det.admissions_count is null) then 0 else
	round(det.discharge_count*100.0/det.admissions_count,2) end as "percent_col_Discharge from facility",
det.death_count as "Child Death",
	case when (det.death_count = 0 or det.death_count is null or det.admissions_count = 0 or det.admissions_count is null) then 0 else 
	round(det.death_count*100.0/det.admissions_count,2) end as "percent_col_Child Death",
det.followup1_count as "1st Follow up visit",
    case when (det.followup1_count = 0 or det.followup1_count is null or det.admissions_count = 0 or det.admissions_count is null)then 0 else 
	round(det.followup1_count*100.0/det.admissions_count,2) end as "percent_col_1st Follow up visit",
det.followup2_count as "2nd Follow up visit",
	case when (det.followup2_count = 0 or det.followup2_count is null or det.admissions_count = 0 or det.admissions_count is null)then 0 else
	round(det.followup2_count*100.0/det.admissions_count,2) end as "percent_col_2nd Follow up visit",
det.followup3_count as "3rd Follow up visit",
    case when (det.followup3_count = 0 or det.followup3_count is null or det.admissions_count = 0 or det.admissions_count is null) then 0 else 
	round(det.followup3_count*100.0/det.admissions_count,2) end as "percent_col_3rd Follow up visit",
det.average_count as "No. of children with Weight gain more then 8gm/kg/day",
	case when (det.average_count = 0 or det.average_count is null or det.admissions_count = 0 or det.admissions_count is null) then 0 else
	round(det.average_count*100.0/det.admissions_count,2) end as "percent_col_No. of children with Weight gain more then 8gm/kg/day",
det.weight_gain_count as "No of children with 15% weight gain"
from det
union all
select null,
''<b>Total<b>'',
#location_id#,
sum(det.admissions_count),
sum(det.discharge_count),
		case when (sum(det.discharge_count) = 0 or sum(det.discharge_count) is null or sum(det.admissions_count) = 0 or sum(det.admissions_count) is null) then 0 else 
		round(sum(det.discharge_count)*100.0/sum(det.admissions_count),2) end,
sum(det.death_count),
		case when (sum(det.death_count) = 0 or sum(det.death_count) is null or sum(det.admissions_count) = 0 or sum(det.admissions_count) is null) then 0 else 
		round(sum(det.death_count)*100.0/sum(det.admissions_count),2) end,
sum(det.followup1_count),
		case when (sum(det.followup1_count) = 0 or sum(det.followup1_count) is null or sum(det.admissions_count) = 0 or sum(det.admissions_count) is null) then 0 else 
		round(sum(det.followup1_count)*100.0/sum(det.admissions_count),2) end,
sum(det.followup2_count),
		case when (sum(det.followup2_count) = 0 or sum(det.followup2_count) is null or sum(det.admissions_count) = 0 or sum(det.admissions_count) is null) then 0 else
		round(sum(det.followup2_count)*100.0/sum(det.admissions_count),2) end,
sum(det.followup3_count),
		case when (sum(det.followup3_count) = 0 or sum(det.followup3_count) is null or sum(det.admissions_count) = 0 or sum(det.admissions_count) is null) then 0 else 
		round(sum(det.followup3_count)*100.0/sum(det.admissions_count),2) end,
sum(det.average_count),
		case when (sum(det.average_count) = 0 or sum(det.average_count) is null or sum(det.admissions_count) = 0 or sum(det.admissions_count) is null) then 0 else
		round(sum(det.average_count)*100.0/sum(det.admissions_count),2) end,
sum(det.weight_gain_count)
from det',true,'ACTIVE','dd2a0377-c5e7-43d0-89d7-fd0ba8b39c11'),
	 (766,64189,'2019-03-04 12:15:22.355',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,loggedInUserId,location_id,health_infra_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
dates as(
select
	to_date (
	case
		when ''#from_date#'' = ''null'' then null
		else ''#from_date#''
	end,
	''MM/DD/YYYY'') as from_date ,
	to_date (
	case
		when ''#to_date#'' = ''null'' then null
		else ''#to_date#''
	end,
	''MM/DD/YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as too_date ),
member_det as(
select
	imt_member.id,
	imt_member.unique_health_id,
	concat(imt_member.first_name, ''  '', imt_member.middle_name, ''  '', imt_member.last_name) as "Member name",
	imt_member.mobile_number,
	imt_family.location_id as loc_id,
	imt_family.area_id as area_id,
	rpcm.child_id as child_id
from
	health_infrastructure_details infra
inner join rch_pnc_master rpm on
	infra.id = rpm.health_infrastructure_id
inner join rch_pnc_child_master rpcm on rpm.id=rpcm.pnc_master_id	
inner join imt_member on
	imt_member.id = rpm.member_id
inner join imt_family on
	imt_member.family_id = imt_family.family_id
inner join dates on
	rpm.created_on between dates.from_date and dates.too_date
where
	infra.location_id = #location_id#
	and rpm.is_from_web = true
	and infra.id = #health_infra_id#  ),
imt_child as(
select
	imt_member.mother_id,
	imt_member.unique_health_id as "Child ID",
	imt_member.unique_health_id,
	imt_member.first_name as "Child Name"
from
	imt_member
where
	imt_member.id in(
		select child_id
	from
		member_det)),
loc as (
select
	distinct loc_id
from
	member_det ),
loc_det as (
select
	loc.loc_id,
	string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
from
	loc,
	location_master l1,
	location_hierchy_closer_det lhcd,
	location_master l2,
        prefered_language
where
	l1.id = loc.loc_id
	and lhcd.child_id = l1.id
	and l2.id = lhcd.parent_id
group by
	loc.loc_id ),
fhw_det as (
select
	loc.loc_id,
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' || ''Contact : '' ||
	case
		when u.contact_number is not null then u.contact_number
		else ''N/A''
	end as fhw
from
	um_user_location ul,
	um_user u,
	loc
where
	loc.loc_id = ul.loc_id
	and u.id = ul.user_id
	and u.state = ''ACTIVE''
	and ul.state = ''ACTIVE''
	and u.role_id = (
	select
		id
	from
		um_role_master
	where
		name = ''FHW'')
group by
	loc.loc_id,
	ul.state,
	u.state,
	u.first_name,
	u.last_name,
	u.user_name,
	u.contact_number),
asha_areas as (
select
	distinct area_id
from
	member_det ),
asha_det as (
select
	asha_areas.area_id,
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' || ''Contact : '' ||
	case
		when u.contact_number is not null then u.contact_number
		else ''N/A''
	end as asha
from
	um_user_location ul,
	um_user u,
	asha_areas
where
	asha_areas.area_id = ul.loc_id
	and u.id = ul.user_id
	and u.state = ''ACTIVE''
	and ul.state = ''ACTIVE''
	and u.role_id = (
	select
		id
	from
		um_role_master
	where
		name = ''Asha'')
group by
	asha_areas.area_id,
	ul.state,
	u.state,
	u.first_name,
	u.last_name,
	u.user_name,
	u.contact_number) select
	ROW_NUMBER() over () as "Sr No",
	member_det.unique_health_id as "Member ID",
	member_det."Member name",
	member_det.mobile_number as "Phone number",
	imt_child."Child ID",
	imt_child."Child Name",
	loc_det.aoi as "Location",
	case
		when fhw_det.fhw is null then ''No FHW Assigned''
		else fhw_det.fhw
	end as "FHW Details",
	case
		when asha_det.asha is null then ''No Asha Assigned''
		else asha_det.asha
	end as "Asha Details"
from
	member_det
inner join loc_det on
	member_det.loc_id = loc_det.loc_id
left join imt_child on
	imt_child.mother_id = member_det.id
left join fhw_det on
	member_det.loc_id = fhw_det.loc_id
left join asha_det on
	member_det.area_id = asha_det.area_id
	#limit_offset#;',true,'ACTIVE','4fdff693-7368-4fff-a660-a54a596e7ea8'),
	 (1807,78434,'2020-11-03 19:57:23.831',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,location_id','-- No. of PMSMA service given to 2 ANC and 3 ANC HR PW reg. (PMSMA Services Statistics Report during the year)
with dates as (
    select case
            when ''#financial_year#'' = ''null'' then null
            else cast(
                concat(substr(''#financial_year#'', 1, 4), ''-04-01'') as date
            )
        end as from_date,
        case
            when ''#financial_year#'' = ''null'' then null
            when cast(
                concat(substr(''#financial_year#'', 6, 10), ''-03-31'') as date
            ) <= current_date then cast(
                concat(substr(''#financial_year#'', 6, 10), ''-03-31'') as date
            )
            else current_date
        end as to_date
),
location_det as (
    select lm.id,
        lm.english_name as name,
        lm.location_code
    from location_hierchy_closer_det lh1,
        location_master lm
    where lh1.parent_id = #location_id#
        and lm.id = lh1.child_id
),
high_risk_member as (
    (
        select rpa.member_id,
            rpa.pregnancy_reg_id,
            concat(
                rpa.member_name,
                '' ('',
                rpa.unique_health_id,
                '')''
            ) as member_name,
            get_location_hierarchy(rpa.member_current_location_id) as location_name,
            to_char(rpa.lmp_date, ''DD-MM-YYYY'') as lmp_date,
            to_char(preg.edd, ''DD-MM-YYYY'') as edd_date,
            case
                when (
                    (
                        cast(rpa.lmp_date + interval ''90 days'' as date),
                        cast(rpa.lmp_date + interval ''180 days'' as date)
                    ) overlaps (
                        cast(dates.from_date as date),
                        cast(dates.to_date as date)
                    )
                ) then rpa.lmp_date + interval ''90 days''
                else null
            end as trimester_start_date,
            case
                when (
                    (
                        cast(rpa.lmp_date + interval ''90 days'' as date),
                        cast(rpa.lmp_date + interval ''180 days'' as date)
                    ) overlaps (
                        cast(dates.from_date as date),
                        cast(dates.to_date as date)
                    )
                ) then rpa.lmp_date + interval ''180 days''
                else null
            end as trimester_end_date,
            2 as current_trimester,
            string_agg(to_char(anc.service_date, ''DD-MM-YYYY''), '','') as service_dates
        from rch_pregnancy_analytics_details rpa,
            dates,
            rch_anc_master anc,
            rch_pregnancy_registration_det preg
        where rpa.high_risk_mother = true
            and rpa.pregnancy_reg_id = anc.pregnancy_reg_det_id
            and preg.id = rpa.pregnancy_reg_id
            and (
                rpa.death_date is null
                or rpa.death_date >= dates.from_date
            )
            and (
                date_of_delivery is null
                or date_of_delivery >= dates.from_date
            )
            and (
                (
                    cast(rpa.lmp_date + interval ''90 days'' as date),
                    cast(rpa.lmp_date + interval ''180 days'' as date)
                ) overlaps (
                    cast(dates.from_date as date),
                    cast(dates.to_date as date)
                )
            )
            and rpa.member_current_location_id in (
                select id
                from location_det
            )
            and anc.is_from_web = true
            and anc.examined_by_gynecologist = true
            and anc.service_date between case
                when (
                    (
                        cast(rpa.lmp_date + interval ''90 days'' as date),
                        cast(rpa.lmp_date + interval ''180 days'' as date)
                    ) overlaps (
                        cast(dates.from_date as date),
                        cast(dates.to_date as date)
                    )
                ) then rpa.lmp_date + interval ''90 days''
                else null
            end
            and case
                when (
                    (
                        cast(rpa.lmp_date + interval ''90 days'' as date),
                        cast(rpa.lmp_date + interval ''180 days'' as date)
                    ) overlaps (
                        cast(dates.from_date as date),
                        cast(dates.to_date as date)
                    )
                ) then rpa.lmp_date + interval ''180 days''
                else null
            end
        group by rpa.pregnancy_reg_id,
            preg.edd,
            dates.from_date,
            dates.to_date
    )
    union all
    (
        select rpa.member_id,
            rpa.pregnancy_reg_id,
            concat(
                rpa.member_name,
                '' ('',
                rpa.unique_health_id,
                '')''
            ) as member_name,
            get_location_hierarchy(rpa.member_current_location_id) as location_name,
            to_char(rpa.lmp_date, ''DD-MM-YYYY'') as lmp_date,
            to_char(preg.edd, ''DD-MM-YYYY'') as edd_date,
            case
                when (
                    (
                        cast(rpa.lmp_date + interval ''180 days'' as date),
                        cast(rpa.lmp_date + interval ''270 days'' as date)
                    ) overlaps (
                        cast(dates.from_date as date),
                        cast(dates.to_date as date)
                    )
                ) then rpa.lmp_date + interval ''181 days''
                else null
            end as trimester_start_date,
            case
                when (
                    (
                        cast(rpa.lmp_date + interval ''180 days'' as date),
                        cast(rpa.lmp_date + interval ''270 days'' as date)
                    ) overlaps (
                        cast(dates.from_date as date),
                        cast(dates.to_date as date)
                    )
                ) then rpa.lmp_date + interval ''270 days''
                else null
            end as trimester_end_date,
            3 as current_trimester,
            string_agg(to_char(anc.service_date, ''DD-MM-YYYY''), '','') as service_dates
        from rch_pregnancy_analytics_details rpa,
            dates,
            rch_anc_master anc,
            rch_pregnancy_registration_det preg
        where rpa.high_risk_mother = true
            and rpa.pregnancy_reg_id = anc.pregnancy_reg_det_id
            and preg.id = rpa.pregnancy_reg_id
            and (
                rpa.death_date is null
                or rpa.death_date >= dates.from_date
            )
            and (
                date_of_delivery is null
                or date_of_delivery >= dates.from_date
            )
            and (
                (
                    cast(rpa.lmp_date + interval ''180 days'' as date),
                    cast(rpa.lmp_date + interval ''270 days'' as date)
                ) overlaps (
                    cast(dates.from_date as date),
                    cast(dates.to_date as date)
                )
            )
            and rpa.member_current_location_id in (
                select id
                from location_det
            )
            and anc.is_from_web = true
            and anc.examined_by_gynecologist = true
            and anc.service_date between case
                when (
                    (
                        cast(rpa.lmp_date + interval ''180 days'' as date),
                        cast(rpa.lmp_date + interval ''270 days'' as date)
                    ) overlaps (
                        cast(dates.from_date as date),
                        cast(dates.to_date as date)
                    )
                ) then rpa.lmp_date + interval ''181 days''
                else null
            end
            and case
                when (
                    (
                        cast(rpa.lmp_date + interval ''180 days'' as date),
                        cast(rpa.lmp_date + interval ''270 days'' as date)
                    ) overlaps (
                        cast(dates.from_date as date),
                        cast(dates.to_date as date)
                    )
                ) then rpa.lmp_date + interval ''270 days''
                else null
            end
        group by rpa.pregnancy_reg_id,
            preg.edd,
            dates.from_date,
            dates.to_date
    )
    order by pregnancy_reg_id #limit_offset#
)
select ROW_NUMBER() over () + cast(
        SUBSTRING(
            ''#limit_offset#'',
            POSITION(''offset'' in ''#limit_offset#'') + 7
        ) as int
    ) as "Sr No",
    location_name as "Location Name",
    member_name as "Member Name",
    lmp_date as "LMP Date",
    edd_date as "EDD Date",
    case
        when current_trimester = 2 then ''2nd''
        when current_trimester = 3 then ''3rd''
        else ''-''
    end as "ANC Trimester",
    to_char(trimester_start_date, ''DD-MM-YYYY'') as "Trimester Start Date",
    to_char(trimester_end_date, ''DD-MM-YYYY'') as "Trimester End Date",
    case
        when service_dates is null then ''-''
        else service_dates
    end as "Trimester PMSMA Services Given"
from high_risk_member;',true,'ACTIVE','61f5ca0a-a11e-4772-9efe-3e7fbd63ad80'),
	 (1798,78434,'2020-11-03 14:53:19.31',1,'2021-01-13 20:22:06.427965','financial_year,location_id','with location_det as (
    select lm.id,
        lm.english_name as name,
        lm.location_code
    from location_hierchy_closer_det lh1,
        location_master lm
    where lh1.parent_id = #location_id# and depth = 1 and lm.id = lh1.child_id
),
report_det as (
    select location_det.name,
        location_det.location_code as code,
        t.*
    from (
            select lh.parent_id as loc_id,
                sum(high_risk_mother_under_techo) as high_risk_mother_under_techo,
                sum(total_anc_under_pmsma) as total_anc_under_pmsma,
                sum(total_beneficiary_under_pmsma_at_least_once) as total_beneficiary_under_pmsma_at_least_once
            from rch_pmsma_service_statistics_during_year as pmsma,
                location_hierchy_closer_det lh
            where pmsma.financial_year = ''#financial_year#''
                and pmsma.location_id = lh.child_id
                and lh.parent_id in (
                    select id
                    from location_det
                )
            group by lh.parent_id
        ) as t,
        location_det
    where t.loc_id = location_det.id
    order by name
)
select row_number() over() as "Sr. no",
    name as "Location Name",
    loc_id as hidden_location_id,
    high_risk_mother_under_techo as "2 ANC and 3 ANC HR PW registered (A)",
--    total_anc_under_pmsma as "Total number of HR PW received ANC under PMSMA (B)",
    total_beneficiary_under_pmsma_at_least_once as "No. of PMSMA service given to 2 ANC and 3 ANC HR PW reg. (B)",
    ROUND(
        case
            when high_risk_mother_under_techo = 0 then 0.00
            else cast(
                total_beneficiary_under_pmsma_at_least_once as numeric
            ) * 100 / (high_risk_mother_under_techo)
        end,
        2
    ) as "% of HR PW received ANC under PMSMA (B/A)"
from report_det
union all
select null,
    ''<b>Total</b>'',
    #location_id#,
    round(sum(high_risk_mother_under_techo), 0),
--    sum(total_anc_under_pmsma),
    sum(total_beneficiary_under_pmsma_at_least_once),
    ROUND(
        case
            when sum(high_risk_mother_under_techo) = 0 then 0
            else sum(total_beneficiary_under_pmsma_at_least_once) * 100 / (sum(high_risk_mother_under_techo))
        end,
        2
    )
from report_det;',true,'ACTIVE','4953912e-7033-4ebc-a49c-9c3ad811d577'),
	 (561,57698,'2019-02-18 12:26:54.46',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','138126b3-6b6e-4bf1-9ee2-cec0dc31512f'),
	 (1425,409,'2019-09-23 01:12:59.306',1,'2021-01-13 20:22:06.427965','from_month','select to_char(cast(''#from_month#'' as date),''MM/YYYY'') as from_month',true,'ACTIVE','a08a8555-554c-4d96-b1bf-3066712f88a1'),
	 (965,60512,'2019-04-11 11:40:29.69',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','16547b43-9540-44a2-9630-d8fc9b12ebba');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (963,60512,'2019-04-10 18:41:01.225',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','e29f6671-ca47-43fb-ad01-4e533c404db8'),
	 (966,60512,'2019-04-11 11:40:29.815',1,'2021-01-13 20:22:06.427965','depth_flag,limit_offset,from_date,to_date,loggedInUserId,location_id','with prefered_language as (
select 	case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end as is_enlish
from um_user where id = #loggedInUserId# 
), health_infra_ids as(
	select health_infrastructure_details.id as health_infrastrucutre_id,sum(facility_performance_master.no_of_ipd_attended) as no_of_ipd_attended
	from health_infrastructure_details
	left join facility_performance_master on health_infrastructure_details.id = facility_performance_master.health_infrastrucutre_id
	and facility_performance_master.performance_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	where health_infrastructure_details.location_id in
	(select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth <= (case when #depth_flag# = -1 then 0 else 8 end))
	and health_infrastructure_details.type in (1061,1063,1009,1008,1007,1012,1084)
	group by health_infrastructure_details.id
	#limit_offset#
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
health_infrastructure_details.name as "Name",
listvalue_field_value_detail.value as "Type",
case when prefered_language.is_enlish then get_location_hierarchy_language_wise(health_infrastructure_details.location_id, ''EN'')
				else get_location_hierarchy(health_infrastructure_details.location_id) end as "Location",
coalesce(health_infra_ids.no_of_ipd_attended, 0) as "No. of IPDs"
from health_infra_ids
inner join health_infrastructure_details on health_infra_ids.health_infrastrucutre_id = health_infrastructure_details.id
inner join listvalue_field_value_detail on health_infrastructure_details.type = listvalue_field_value_detail.id
inner join prefered_language on true',true,'ACTIVE','6a5cfa1b-5ab3-456b-b9eb-21328390af4e'),
	 (1211,66522,'2019-07-17 16:41:51.469',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','0b0663e5-7c1a-46d6-9348-be426b17a714'),
	 (916,60512,'2019-03-13 11:56:42.433',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','3cfc57f8-5be1-4f45-b2aa-f5415191b98b'),
	 (1812,74841,'2020-11-20 13:58:04.483',1,'2021-01-13 20:22:06.427965',NULL,'select depth_flag as hidden_depth_flag',true,'ACTIVE','cee7dc0b-310c-47a0-9427-a701022410fd'),
	 (976,60512,'2019-04-11 11:58:21.273',1,'2021-01-13 20:22:06.427965','depth_flag,limit_offset,from_date,to_date,loggedInUserId,location_id','with prefered_language as (
select 	case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end as is_enlish
from um_user where id = #loggedInUserId#
),
health_infra_ids as(
	select health_infrastructure_details.id as health_infrastructure_id,count(*) filter(where rch_wpd_mother_master.id is not null) as no_of_csection_conducted
	from health_infrastructure_details
	left join rch_wpd_mother_master on health_infrastructure_details.id = rch_wpd_mother_master.health_infrastructure_id
	and rch_wpd_mother_master.is_from_web
	and rch_wpd_mother_master.type_of_delivery = ''CAESAREAN''
	and rch_wpd_mother_master.date_of_delivery between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	where health_infrastructure_details.location_id in (
		select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth <= (case when #depth_flag# = -1 then 0 else 8 end)
	)
	and health_infrastructure_details.type in (1061,1063,1009,1008,1007,1012,1084)
	group by health_infrastructure_details.id
	#limit_offset#
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
health_infrastructure_details.name as "Name",
listvalue_field_value_detail.value as "Type",
case when prefered_language.is_enlish then get_location_hierarchy_language_wise(health_infrastructure_details.location_id, ''EN'')
				else get_location_hierarchy(health_infrastructure_details.location_id) end as "Location",
coalesce(health_infra_ids.no_of_csection_conducted, 0) as "No. of C-Section Conducted"
from health_infra_ids
inner join health_infrastructure_details on health_infra_ids.health_infrastructure_id = health_infrastructure_details.id
inner join listvalue_field_value_detail on health_infrastructure_details.type = listvalue_field_value_detail.id
inner join prefered_language on true',true,'ACTIVE','b56b33b3-1081-47e7-905a-6c40cb367c35'),
	 (953,60512,'2019-04-10 17:47:25.143',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','07b0c91f-5c71-45ba-a7a1-c9ceeddbce3c'),
	 (971,60512,'2019-04-11 11:54:38.863',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','a1775803-ea18-4d75-8cf7-9c8f67437f74'),
	 (512,1,'2019-02-14 15:57:42.484',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','1b3dec65-f108-4a67-8a7f-bcf5af32bf69'),
	 (513,1,'2019-02-14 15:57:42.488',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','7483de52-6232-4b0b-b74b-25d6f05bb626');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (163,58981,'2019-01-22 19:18:19.327',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','6a69d392-423c-423f-b514-149c7ecc531d'),
	 (1080,63746,'2019-05-01 14:47:54.423',1,'2021-01-13 20:22:06.427965','limit_offset,age_group_or_child_count,location_id','with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)
,age_group as (
    select ''15-19'' as age_group, current_date - interval ''19 years'' as from_date, current_date - interval ''15 years''  as to_date
    union
    select ''20-24'' as age_group,  current_date - interval ''24 years'' as from_date, current_date - interval ''19 years'' - interval ''1 day''  as to_date
    union
    select ''25-29'' as age_group, current_date - interval ''29 years'' as from_date, current_date - interval ''24 years'' - interval ''1 day''  as to_date
    union
    select ''30-34'' as age_group,  current_date - interval ''34 years'' as from_date, current_date - interval ''29 years'' - interval ''1 day''  as to_date
    union
    select ''35-39'' as age_group, current_date - interval ''39 years'' as from_date, current_date - interval ''34 years'' - interval ''1 day''  as to_date
    union
    select ''40-44'' as age_group,  current_date - interval ''44 years'' as from_date, current_date - interval ''39 years'' - interval ''1 day''  as to_date
    union
    select ''45-49'' as age_group, current_date - interval ''49 years'' as from_date, current_date - interval ''44 years'' - interval ''1 day''  as to_date
)
,member_location as (
	select m.member_id, m.loc_id  from rch_eligible_couple_analytics m
	inner join age_group on m.dob between age_group.from_date and age_group.to_date
	inner join locations on locations.child_id = m.loc_id
	where ( case when #age_group_or_child_count# is null then age_group in (''15-19'',''20-24'',''25-29'',''30-34'',''35-39'',''40-44'',''45-49'') else age_group = (''#age_group_or_child_count#'') end) 
	and  m.last_method_of_contraception = (''FMLSTR'') 
        #limit_offset#
)
,loc_det as(
	select member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id
	,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id
	from location_master,location_type_master,member_location 
	where 
	location_master.id = member_location.loc_id and location_type_master.type = location_master.type
)
select 
	 ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
	mem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as "Member Name",
	fam.family_id as "Family Id",to_char(r.dob, ''DD/MM/YYYY'') as "Birth Date",
	string_agg(lm.name,''> '' order by lhcd.depth desc) as "Location Hierarchy"  
from rch_eligible_couple_analytics r
inner join loc_det on loc_det.member_id = r.member_id
inner join imt_member mem on mem.id = r.member_id
inner join imt_family fam on mem.family_id = fam.family_id
inner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id
inner join location_master lm on lm.id = lhcd.parent_id
group by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;',true,'ACTIVE','78f62f85-4641-47c2-9c80-555988dba610'),
	 (914,60512,'2019-03-08 10:56:07.914',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id,show_current_location','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 location_ids as(
	select child_id,depth from location_hierchy_closer_det where parent_id = #location_id#
	and case when #show_current_location# then depth in (0,1) else depth = 1 end
),centers_count as (
	select location_master.name,location_master.id,count(*)
	from location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id
	and location_hierchy_closer_det.depth <= (case when location_ids.depth < 1 then 0 else 8 end)
	inner join health_infrastructure_details on location_hierchy_closer_det.child_id = health_infrastructure_details.location_id
	inner join location_master on location_ids.child_id = location_master.id
	where (health_infrastructure_details.is_cmtc = true or health_infrastructure_details.is_nrc=true)
	group by location_master.name,location_master.id
),admissions_pedia_defaulter_death_count as (
	select location_ids.child_id,
	count(distinct child_cmtc_nrc_screening_detail.child_id)  as total,
	count(distinct child_cmtc_nrc_screening_detail.child_id) filter (where child_cmtc_nrc_admission_detail.specialist_pediatrician_visit_flag) as pedia,
	count(distinct child_cmtc_nrc_screening_detail.child_id) filter (where child_cmtc_nrc_screening_detail.state = ''DEFAULTER'') as defaulter,
	count(distinct child_cmtc_nrc_screening_detail.child_id) filter (where child_cmtc_nrc_screening_detail.state = ''DEATH'') as death
	from location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id
	inner join health_infrastructure_details on location_hierchy_closer_det.child_id = health_infrastructure_details.location_id
	inner join child_cmtc_nrc_admission_detail on health_infrastructure_details.id = child_cmtc_nrc_admission_detail.screening_center
	inner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id
	where child_cmtc_nrc_admission_detail.admission_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	group by location_ids.child_id
),discharge_transfer_count as (
	select location_ids.child_id,
	count(distinct child_cmtc_nrc_screening_detail.child_id)  as total,
	count(distinct child_cmtc_nrc_screening_detail.child_id) filter (where child_cmtc_nrc_discharge_detail.higher_facility_referral_place is not null) as medicalTransferCount
	from location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id
	inner join health_infrastructure_details on location_hierchy_closer_det.child_id = health_infrastructure_details.location_id
	inner join child_cmtc_nrc_admission_detail on health_infrastructure_details.id = child_cmtc_nrc_admission_detail.screening_center
	inner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id
	inner join child_cmtc_nrc_discharge_detail on child_cmtc_nrc_discharge_detail.id = child_cmtc_nrc_screening_detail.discharge_id
	where child_cmtc_nrc_admission_detail.admission_date between 
		(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	group by location_ids.child_id
),admitted_child_ids as (
	select distinct
	child_cmtc_nrc_admission_detail.id,
	child_cmtc_nrc_admission_detail.child_id,
	location_ids.child_id as location_id
	from location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id
	inner join health_infrastructure_details on location_hierchy_closer_det.child_id = health_infrastructure_details.location_id
	inner join child_cmtc_nrc_admission_detail on health_infrastructure_details.id = child_cmtc_nrc_admission_detail.screening_center
	inner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id
	where child_cmtc_nrc_admission_detail.admission_date between 
		(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
),average_weight_gain_count as (
	select avg(child_cmtc_nrc_weight_detail.weight) as avg_wt,admitted_child_ids.child_id,admitted_child_ids.location_id from admitted_child_ids
	inner join child_cmtc_nrc_weight_detail on child_cmtc_nrc_weight_detail.admission_id = admitted_child_ids.id
	group by child_cmtc_nrc_weight_detail.admission_id,admitted_child_ids.child_id,admitted_child_ids.location_id
), distinct_avg_wt as (
	select child_id,location_id, avg(avg_wt) as avg_wt from average_weight_gain_count group by child_id,location_id
), avg_loc_cnt as (
	select distinct_avg_wt.location_id,sum(case when avg_wt>5 then 1 else 0 end) as avg_wt
	from distinct_avg_wt
	group by distinct_avg_wt.location_id
), det as (
	select row_number() over() as sr_no, 
	case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
else location_master.name end as loc,
	location_master.id as hidden_location_id,
	coalesce(centers_count.count,0) as centers_count,
	coalesce(admissions_pedia_defaulter_death_count.total,0) as admissions_count,
	coalesce(admissions_pedia_defaulter_death_count.pedia,0) as pedia_count,
	coalesce(discharge_transfer_count.total,0) as discharge_count,
	coalesce(admissions_pedia_defaulter_death_count.defaulter,0) as defaulter_count,
	coalesce(discharge_transfer_count.medicalTransferCount,0) as medical_transfer_count,
	coalesce(admissions_pedia_defaulter_death_count.death,0) as death_count,
	coalesce(avg_loc_cnt.avg_wt,0) as average_count
	from location_ids
	left join centers_count on location_ids.child_id = centers_count.id
	left join admissions_pedia_defaulter_death_count on location_ids.child_id = admissions_pedia_defaulter_death_count.child_id
	left join discharge_transfer_count on location_ids.child_id = discharge_transfer_count.child_id
	left join avg_loc_cnt on location_ids.child_id = avg_loc_cnt.location_id
	inner join location_master on location_master.id = location_ids.child_id
        cross join prefered_language
)
select row_number() over() as "Sr. no", 
	det.loc as "Location",
	det.hidden_location_id,
	det.centers_count as "No of CMTC/NRC",
	det.admissions_count as "No. of children admitted at CMTC/NRC",
	det.pedia_count as "Child Visited by Pediatrician",
		case when (det.pedia_count = 0 or det.pedia_count is null) then 0 else 
		round(det.pedia_count*100.0/admissions_count,2) end as "percent_col_Child Visited by Pediatrician",
	discharge_count as "Discharge from facility",
		case when (discharge_count = 0 or discharge_count is null) then 0 else 
		round(discharge_count*100.0/admissions_count,2) end as "percent_col_Discharge from facility",
	defaulter_count as "Defaulters",
		case when (defaulter_count = 0 or defaulter_count is null) then 0 else 
		round(defaulter_count*100.0/admissions_count,2) end as "percent_col_Defaulters",
	medical_transfer_count as "Children Medical Transfer",
		case when (medical_transfer_count = 0 or medical_transfer_count is null) then 0 else
		round(medical_transfer_count*100.0/admissions_count,2) end as "percent_col_Children Medical Transfer",	
	death_count as "Child Death",
		case when (death_count = 0 or death_count is null) then 0 else 
		round(death_count*100.0/admissions_count,2) end as "percent_col_Child Death",
	average_count as "No. of children with Weight gain more then 5gm/kg/day",
		case when (average_count = 0 or average_count is null) then 0 else
		round(average_count*100.0/admissions_count,2) end as "percent_col_No. of children with Weight gain more then 5gm/kg/day"
	from det
union all
select null,
''<b>Total<b>'',
#location_id#,
sum(det.centers_count),
sum(det.admissions_count),
sum(det.pedia_count),
		case when (sum(det.pedia_count) = 0 or sum(det.pedia_count) is null) then 0 else 
		round(sum(det.pedia_count)*100.0/sum(det.admissions_count),2) end,
sum(det.discharge_count),
		case when (sum(det.discharge_count) = 0 or sum(det.discharge_count) is null) then 0 else 
		round(sum(det.discharge_count)*100.0/sum(det.admissions_count),2) end,
sum(det.defaulter_count),
		case when (sum(det.defaulter_count) = 0 or sum(det.defaulter_count) is null) then 0 else 
		round(sum(det.defaulter_count)*100.0/sum(det.admissions_count),2) end,
sum(det.medical_transfer_count),
		case when (sum(det.medical_transfer_count) = 0 or sum(det.medical_transfer_count) is null) then 0 else
		round(sum(det.medical_transfer_count)*100.0/sum(det.admissions_count),2) end,
sum(det.death_count),
		case when (sum(det.death_count) = 0 or sum(det.death_count) is null) then 0 else 
		round(sum(det.death_count)*100.0/sum(det.admissions_count),2) end,
sum(det.average_count),
		case when (sum(det.average_count) = 0 or sum(det.average_count) is null) then 0 else
		round(sum(det.average_count)*100.0/sum(det.admissions_count),2) end
from det',true,'ACTIVE','289d6398-be76-4f24-b1f8-85fdc3625ded'),
	 (1035,60512,'2019-04-22 17:31:02.88',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','ecaa1f71-415d-49ec-8e51-f6de3aa7b742'),
	 (1519,409,'2020-02-12 00:41:47.083',1,'2021-01-13 20:22:06.427965','location_id','WITH loc_det AS (
    SELECT
        child_id as id
    FROM
        location_hierchy_closer_det
    WHERE
        parent_id = #location_id#
        AND "depth" = 1
), analytics as (
	select
	lh.parent_id,
	sum(fhs_new_family + fhs_verified_family) as total_family,
	sum(chfc_remaining_family) as total_member,
	
	sum(chfc_member_verified_by_fhw) as total_chfc_member_verified_by_fhw,
	sum(chfc_member_verified_by_mphw) as total_chfc_member_verified_by_mphw,
	
	sum(chfc_new_family_by_fhw) as total_chfc_new_family_by_fhw,
	sum(chfc_new_family_by_mphw) as total_chfc_new_family_by_mphw,
	
	sum(chfc_new_member_by_fhw) as total_chfc_new_member_by_fhw,
	sum(chfc_new_member_by_mphw) as total_chfc_new_member_by_mphw,
	
	sum(chfc_family_verified_by_fhw) as total_chfc_family_verified_by_fhw,
	sum(chfc_family_verified_by_mphw) as total_chfc_family_verified_by_mphw,
	
	sum(total_0to1_children) as total_0to1_children	,
	sum(total_0to5_children) as total_0to5_children
	from 
		location_wise_analytics lw,
		location_hierchy_closer_det lh
	where lh.parent_id IN (select id from loc_det)
        and lh.child_id = lw.loc_id
	GROUP BY
            lh.parent_id
)

select  
lm.english_name AS "Locations",
COALESCE(total_family, 0)	as "Total No. of families in TeCHO+",
COALESCE(total_member, 0)	as "Total No. of members in TeCHO+",
COALESCE(total_chfc_member_verified_by_fhw, 0)	as "Verified By FHW",
COALESCE(total_chfc_member_verified_by_mphw, 0)	as "Verified By MPHW",
COALESCE(total_chfc_member_verified_by_fhw + total_chfc_member_verified_by_mphw, 0)	as "Verified Total",
COALESCE(total_chfc_new_family_by_fhw, 0)	as "Family added By FHW",
COALESCE(total_chfc_new_family_by_mphw, 0)	as "Family added By MPHW",
COALESCE(total_chfc_new_family_by_fhw + total_chfc_new_family_by_mphw, 0)	as "Family added Total",
COALESCE(total_chfc_new_member_by_fhw, 0)	as "Members added By FHW",
COALESCE(total_chfc_new_member_by_mphw, 0)	as "Members added By MPHW",
COALESCE(total_chfc_new_member_by_fhw + total_chfc_new_member_by_mphw, 0)	as "Members added Total",
COALESCE(total_chfc_new_family_by_fhw + total_chfc_new_family_by_mphw + total_chfc_family_verified_by_fhw + total_chfc_family_verified_by_mphw, 0)	as "Total Families in TeCHO+ after CFHC",
COALESCE(total_chfc_member_verified_by_fhw + total_chfc_member_verified_by_mphw + total_chfc_new_member_by_fhw + total_chfc_new_member_by_mphw, 0)	as "Total Members in TeCHO+ after CFHC",
/*COALESCE(round((((total_chfc_member_verified_by_fhw + total_chfc_member_verified_by_mphw + total_chfc_new_member_by_fhw + total_chfc_new_member_by_mphw) * 100.0) / NULLIF(total_member, 0)), 2), 0)	as "% CFHC completed (Family)",*/
COALESCE(round((((total_chfc_new_family_by_fhw + total_chfc_new_family_by_mphw + total_chfc_family_verified_by_fhw + total_chfc_family_verified_by_mphw) * 100.0) / NULLIF(total_family, 0)), 2), 0)	as "% CFHC completed (Family)",
COALESCE(total_0to1_children, 0)	as "Total 0-1 year children",
COALESCE(total_0to5_children, 0)	as "Total 0-5 year children"
from analytics a
inner join location_master lm   
    on lm.id = a.parent_id
union all
select  
''<b>Total</b>'',
COALESCE(sum(total_family), 0)	as "Total No. of families in TeCHO+",
COALESCE(sum(total_member), 0)	as "Total No. of members in TeCHO+",
COALESCE(sum(total_chfc_member_verified_by_fhw), 0)	as "Verified By FHW",
COALESCE(sum(total_chfc_member_verified_by_mphw), 0)	as "Verified By MPHW",
COALESCE(sum(total_chfc_member_verified_by_fhw) + sum(total_chfc_member_verified_by_mphw), 0)	as "Verified Total",
COALESCE(sum(total_chfc_new_family_by_fhw), 0)	as "Family added By FHW",
COALESCE(sum(total_chfc_new_family_by_mphw), 0)	as "Family added By MPHW",
COALESCE(sum(total_chfc_new_family_by_fhw) + sum(total_chfc_new_family_by_mphw), 0)	as "Family added Total",
COALESCE(sum(total_chfc_new_member_by_fhw), 0)	as "Members added By FHW",
COALESCE(sum(total_chfc_new_member_by_mphw), 0)	as "Members added By MPHW",
COALESCE(sum(total_chfc_new_member_by_fhw) + sum(total_chfc_new_member_by_mphw), 0)	as "Members added Total",
COALESCE(sum(total_chfc_new_family_by_fhw) + sum(total_chfc_new_family_by_mphw) + sum(total_chfc_family_verified_by_fhw) + sum(total_chfc_family_verified_by_mphw), 0)	as "Total Families in TeCHO+ after CFHC",
COALESCE(sum(total_chfc_member_verified_by_fhw) + sum(total_chfc_member_verified_by_mphw) + sum(total_chfc_new_member_by_fhw) + sum(total_chfc_new_member_by_mphw), 0)	as "Total Members in TeCHO+ after CFHC",
/*COALESCE(round((((sum(total_chfc_member_verified_by_fhw) + sum(total_chfc_member_verified_by_mphw) + sum(total_chfc_new_member_by_fhw) + sum(total_chfc_new_member_by_mphw)) * 100.0) / NULLIF(sum(total_member), 0)), 2), 0)	as "% CFHC completed (Members)",*/
COALESCE(round((((sum(total_chfc_new_family_by_fhw) + sum(total_chfc_new_family_by_mphw) + sum(total_chfc_family_verified_by_fhw) + sum(total_chfc_family_verified_by_mphw)) * 100.0) / NULLIF(sum(total_family), 0)), 2), 0)	as "% CFHC completed (Members)"
,COALESCE(sum(total_0to1_children), 0)	as "Total 0-1 year children",
COALESCE(sum(total_0to5_children), 0)	as "Total 0-5 year children"
from analytics a
inner join location_master lm   
    on lm.id = a.parent_id',true,'ACTIVE','4b499f50-99aa-4b23-ae7e-ed3bb074695d'),
	 (450,1,'2019-02-14 00:43:54.681',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','311ddbf9-9b38-4aa6-a361-ca07f2fb6779'),
	 (1371,69973,'2019-08-20 18:16:35.555',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','67fe860b-52e6-49ad-8604-d5fa4f661698'),
	 (529,1,'2019-02-14 16:06:00.343',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','0d55eefe-09a7-4006-8759-deb0aaadeda7'),
	 (530,1,'2019-02-14 16:06:00.345',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','ca70ab7b-4d07-4e39-9d37-296a4ee170e0'),
	 (568,57698,'2019-02-18 12:42:27.22',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
	where l.child_id = c.f_ipv1_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.f_ipv1 is not null
	group by m.id, f.location_id, c.dob, c.f_ipv1
	having  (case when extract(month from f_ipv1) > 3 
	then concat(extract(year from f_ipv1), ''-'', extract(year from f_ipv1) + 1)
	else concat(extract(year from f_ipv1) - 1, ''-'', extract(year from f_ipv1)) end = 
		case when #financial_year# is null then 
			case when extract(month from current_date) > 3 
			then concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)
			else concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end
		else ''#financial_year#'' end) 
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','12fa5d21-4efc-4f64-81f8-46adb96618dd');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (181,58981,'2019-01-22 19:33:50.114',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','cb57bcba-ca75-413a-a103-6cb3fe4fdae2'),
	 (440,1,'2019-02-14 00:39:34.948',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','932eecf0-6594-4e68-88e1-b8153e9f7886'),
	 (378,1,'2019-02-13 11:51:08.878',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','8a55715b-0965-458e-9301-5876a4719450'),
	 (1158,63746,'2019-05-28 18:41:49.618',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','9bb41782-7b94-40be-9a39-d6d4f5203eee'),
	 (555,1,'2019-02-15 19:00:28.572',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
	where l.child_id = c.hep_b_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.hep_b is not null
        group by m.id, f.location_id,c.dob,hep_b
	having case when extract(month from hep_b) > 3 
	then concat(extract(year from hep_b), ''-'', extract(year from hep_b) + 1)
	else concat(extract(year from hep_b) - 1, ''-'', extract(year from hep_b)) end = 
		case when #financial_year# is null then 
			case when extract(month from current_date) > 3 
			then concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)
			else concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end
		else ''#financial_year#'' end
		
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','788f197c-a260-4cf9-8c73-d0a2bba7a352'),
	 (1370,69973,'2019-08-20 18:15:53.265',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','a40768e9-efec-44ff-ae60-85501c552ab8'),
	 (1460,74841,'2020-01-03 12:12:47.26',1,'2021-01-13 20:22:06.427965',NULL,'select id,name from um_role_master where state = ''ACTIVE'' and name in (''FHW'',''Asha'',''CHO-HWC'',''Taluka Health Officer'') order by name',true,'ACTIVE','080e6070-c2fe-4acc-a9f5-68740b65feb0'),
	 (970,60512,'2019-04-11 11:52:35.648',1,'2021-01-13 20:22:06.427965','depth_flag,limit_offset,from_date,to_date,loggedInUserId,location_id','with prefered_language as (
select 	case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end as is_enlish
from um_user where id = #loggedInUserId#
),health_infra_ids as(
	select health_infrastructure_details.id as health_infrastrucutre_id,sum(facility_performance_master.no_of_major_operation_conducted) as no_of_major_operation_conducted
	from health_infrastructure_details
	left join facility_performance_master on health_infrastructure_details.id = facility_performance_master.health_infrastrucutre_id
	and facility_performance_master.performance_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	where health_infrastructure_details.location_id in
	(select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth <= (case when #depth_flag# = -1 then 0 else 8 end))
	and health_infrastructure_details.type in (1061,1063,1009,1008,1007,1012,1084)
	group by health_infrastructure_details.id
	#limit_offset#
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
health_infrastructure_details.name as "Name",
listvalue_field_value_detail.value as "Type",
case when prefered_language.is_enlish then get_location_hierarchy_language_wise(health_infrastructure_details.location_id, ''EN'')
				else get_location_hierarchy(health_infrastructure_details.location_id) end as "Location",
coalesce(health_infra_ids.no_of_major_operation_conducted, 0) as "No. of Major Operations"
from health_infra_ids
inner join health_infrastructure_details on health_infra_ids.health_infrastrucutre_id = health_infrastructure_details.id
inner join listvalue_field_value_detail on health_infrastructure_details.type = listvalue_field_value_detail.id
inner join prefered_language on true',true,'ACTIVE','25ce1506-101a-4444-974c-df829d41e6cb'),
	 (525,1,'2019-02-14 16:05:58.108',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','086e22f4-ed9c-4fbd-bd65-8dcefe3d516d'),
	 (526,1,'2019-02-14 16:05:58.11',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','50bc3c93-4685-412e-8eb4-c0c7eec954f1');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (944,60512,'2019-04-08 15:46:31.648',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id','with prefered_language as (
select 	case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end as is_enlish
from um_user where id = #loggedInUserId#
),
location_ids as(
	select loc.child_id,lm.name from location_hierchy_closer_det loc inner join location_master lm
	on lm.id = loc.child_id
	where parent_id = #location_id# and depth in (1,0)
        order by depth asc
),health_infra_count as (
	select location_ids.child_id,
	sum(case when health_infrastructure_details.type = 1061 and health_infrastructure_details.is_no_reporting_unit is not true then 1 else 0 end) as phc_count,
	sum(case when health_infrastructure_details.type in (1009,1084) then 1 else 0 end) as chc_count,
	sum(case when health_infrastructure_details.type = 1008 then 1 else 0 end) as sdh_count,
	sum(case when health_infrastructure_details.type = 1007 then 1 else 0 end) as dh_count,
	sum(case when health_infrastructure_details.type = 1012 then 1 else 0 end) as mch_count,
	sum(case when health_infrastructure_details.type = 1063 and health_infrastructure_details.is_no_reporting_unit is not true then 1 else 0 end) as uphc_count
	from location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id and depth <= (case when location_ids.child_id = #location_id# then 0 else 8 end)
		-- and case when location_ids.child_id = #location_id# then location_hierchy_closer_det.depth = 0 else true end
	inner join health_infrastructure_details on location_hierchy_closer_det.child_id = health_infrastructure_details.location_id
	inner join listvalue_field_value_detail on health_infrastructure_details.type = listvalue_field_value_detail.id
	group by location_ids.child_id
), health_infra_wise_data as (
    select 
    health_infrastructure_details.id,
    health_infrastructure_details.location_id,
	sum(facility_performance_master.no_of_opd_attended) as no_of_opd_attended,
	case when round(avg(facility_performance_master.no_of_opd_attended)) < 20 then 1 else 0 end as avg_20_opd_count,
	sum(facility_performance_master.no_of_ipd_attended) as no_of_ipd_attended,
	sum(facility_performance_master.no_of_laboratory_test_conducted) as no_of_laboratory_test_conducted,
	sum(facility_performance_master.no_of_major_operation_conducted) as no_of_major_operation_conducted,
	sum(facility_performance_master.no_of_minor_operation_conducted) as no_of_minor_operation_conducted
    from location_ids
    inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id and depth <= (case when location_ids.child_id = #location_id# then 0 else 8 end)
    inner join health_infrastructure_details on location_hierchy_closer_det.child_id = health_infrastructure_details.location_id
	inner join facility_performance_master on facility_performance_master.health_infrastrucutre_id = health_infrastructure_details.id
	where 
    facility_performance_master.performance_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
    group by health_infrastructure_details.id,health_infrastructure_details.location_id
), data_count as(
	select 
    location_ids.child_id,   
	sum(facility_performance_master.no_of_opd_attended) as opd_count,
    sum(facility_performance_master.avg_20_opd_count) as avg_20_opd_count,
	sum(facility_performance_master.no_of_ipd_attended) as ipd_count,
	sum(facility_performance_master.no_of_laboratory_test_conducted) as lab_count,
	sum(facility_performance_master.no_of_major_operation_conducted) as major_op_count,
	sum(facility_performance_master.no_of_minor_operation_conducted) as minor_op_count
	from location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id and depth <= (case when location_ids.child_id = #location_id# then 0 else 8 end)
		-- and case when location_ids.child_id = #location_id# then location_hierchy_closer_det.depth = 0 else true end
	inner join health_infra_wise_data facility_performance_master on facility_performance_master.location_id = location_hierchy_closer_det.child_id
	group by location_ids.child_id
),wpd_counts as (
	select location_ids.child_id,
	count(*) as deliveries_count,
	count(*) filter (where rch_wpd_mother_master.type_of_delivery = ''CAESAREAN'') as csec_count
	from location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id and depth <= (case when location_ids.child_id = #location_id# then 0 else 8 end)
	inner join health_infrastructure_details on location_hierchy_closer_det.child_id = health_infrastructure_details.location_id
	inner join rch_wpd_mother_master on rch_wpd_mother_master.health_infrastructure_id = health_infrastructure_details.id
	where rch_wpd_mother_master.is_from_web
	and rch_wpd_mother_master.date_of_delivery between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	group by location_ids.child_id
),det as (
	select row_number() over() as sr_no, 
    case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
				else location_master.name end as loc,
	location_master.id as hidden_location_id,
	coalesce(health_infra_count.phc_count,0) as phc_count,
	coalesce(health_infra_count.chc_count,0) as chc_count,
	coalesce(health_infra_count.sdh_count,0) as sdh_count,
	coalesce(health_infra_count.dh_count,0) as dh_count,
	coalesce(health_infra_count.mch_count,0) as mch_count,
	coalesce(health_infra_count.uphc_count,0) as uphc_count,
	coalesce(phc_count+chc_count+sdh_count+dh_count+mch_count+uphc_count,0) as total_hi_count,
	coalesce(data_count.opd_count,0) as opd_count,
    coalesce(avg_20_opd_count, 0) as avg_20_opd_count,
	coalesce(data_count.ipd_count,0) as ipd_count,
	coalesce(data_count.lab_count,0) as lab_count,
	coalesce(data_count.major_op_count,0) as major_op_count,
	coalesce(data_count.minor_op_count,0) as minor_op_count,
	coalesce(wpd_counts.deliveries_count,0) as deliveries_count,
	coalesce(wpd_counts.csec_count,0) as csec_count
	from location_ids
	left join health_infra_count on location_ids.child_id = health_infra_count.child_id
	left join data_count on location_ids.child_id = data_count.child_id
	left join wpd_counts on location_ids.child_id = wpd_counts.child_id
	inner join location_master on location_master.id = location_ids.child_id
    inner join prefered_language on true
)
select row_number() over() as "Sr. no", 
	det.loc as "Location",
	det.hidden_location_id,
	case when det.hidden_location_id = #location_id# then -1 else 1 end as hidden_depth_flag,
	det.phc_count as "No. of PHC",
	det.chc_count as "No. of CHC",
	det.sdh_count as "No. of SDH",
	det.dh_count as "No. of DH",
	det.mch_count as "No. of MCH",
	det.uphc_count as "No. of UPHC",
	det.total_hi_count as "Total No. of Institutions",
	det.opd_count as "OPD",
    det.avg_20_opd_count as "No. of Health Infra. with Avg less than 20 OPD",
	det.ipd_count as "IPD",
	det.lab_count as "Lab Test",
	det.major_op_count as "Major Operation",
	det.minor_op_count as "Minor Operation",
	det.deliveries_count as "Deliveries",
	det.csec_count as "C-Section"
	from det
union all
select null,
''<b>Total<b>'',
#location_id#,
#location_id#,
sum(det.phc_count),
sum(det.chc_count),
sum(det.sdh_count),
sum(det.dh_count),
sum(det.mch_count),
sum(det.uphc_count),
sum(det.total_hi_count),
sum(det.opd_count),
sum(det.avg_20_opd_count),
sum(det.ipd_count),
sum(det.lab_count),
sum(det.major_op_count),
sum(det.minor_op_count),
sum(det.deliveries_count),
sum(det.csec_count)
from det',true,'ACTIVE','e2173089-cb3a-48e3-a4c5-605e5b838b18'),
	 (967,60512,'2019-04-11 11:49:14.727',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','f918b45e-7011-4265-b7aa-3aba0fd10604'),
	 (968,60512,'2019-04-11 11:49:14.739',1,'2021-01-13 20:22:06.427965','depth_flag,limit_offset,from_date,to_date,location_id','with health_infra_ids as(
select
	health_infrastructure_details.id as health_infrastrucutre_id,
	sum(facility_performance_master.no_of_laboratory_test_conducted) as no_of_laboratory_test_conducted
from
	health_infrastructure_details
left join facility_performance_master on
	health_infrastructure_details.id = facility_performance_master.health_infrastrucutre_id
	and facility_performance_master.performance_date between
	(case
		when #from_date# is null then ''01/01/1970''
		else to_date(''#from_date#'', ''MM/DD/YYYY'')
	end) and
	(case
		when #to_date# is null then ''01/01/1970''
		else to_date(''#to_date#'', ''MM/DD/YYYY'')
	end)+ interval ''1 day'' - interval ''00:00:01''
where
	health_infrastructure_details.location_id in (
	select
		child_id
	from
		location_hierchy_closer_det
	where
		parent_id = #location_id#
		and depth <=
		(case
			when #depth_flag# = -1 then 0
			else 8
		end))
	and health_infrastructure_details.type in (1061, 1063, 1009, 1008, 1007, 1012, 1084)
group by
	health_infrastructure_details.id #limit_offset# )
select
	row_number() over () + cast(SUBSTRING(''#limit_offset#'', position(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
	health_infrastructure_details.name as "Name",
	listvalue_field_value_detail.value as "Type",
	get_location_hierarchy(health_infrastructure_details.location_id) as "Location",
	coalesce(health_infra_ids.no_of_laboratory_test_conducted, 0) as "No. of Lab Test"
from
	health_infra_ids
inner join health_infrastructure_details on
	health_infra_ids.health_infrastrucutre_id = health_infrastructure_details.id
inner join listvalue_field_value_detail on
	health_infrastructure_details.type = listvalue_field_value_detail.id',true,'ACTIVE','298b0872-7723-46c0-b1ce-a35e985c83d9'),
	 (1097,63746,'2019-05-01 17:07:44.703',1,'2021-01-13 20:22:06.427965','limit_offset,age_group_or_child_count,location_id','with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)
,member_location as (
	select m.member_id, m.loc_id  from rch_eligible_couple_analytics m
	inner join locations on locations.child_id = m.loc_id
        where  ( case 
		when ''#age_group_or_child_count#'' = ''5+'' then children_count >= 5
		when ''#age_group_or_child_count#'' = ''0'' then children_count is null 
		when ''#age_group_or_child_count#'' = ''1'' then children_count = 1 
		when ''#age_group_or_child_count#'' = ''2'' then children_count = 2 
		when ''#age_group_or_child_count#'' = ''3'' then children_count = 3 
		when ''#age_group_or_child_count#'' = ''4'' then children_count = 4
		when ''#age_group_or_child_count#'' = ''null'' then true
	end) 
        #limit_offset#
)
,loc_det as(
	select member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id
	,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id
	from location_master,location_type_master,member_location 
	where 
	location_master.id = member_location.loc_id and location_type_master.type = location_master.type
)
select 
	 ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
	mem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as "Member Name",
	fam.family_id as "Family Id",to_char(r.dob, ''DD/MM/YYYY'') as "Birth Date",
	string_agg(lm.name,''> '' order by lhcd.depth desc) as "Location Hierarchy"  
from rch_eligible_couple_analytics r
inner join loc_det on loc_det.member_id = r.member_id
inner join imt_member mem on mem.id = r.member_id
inner join imt_family fam on mem.family_id = fam.family_id
inner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id
inner join location_master lm on lm.id = lhcd.parent_id
group by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;',true,'ACTIVE','d7e84ccc-c0ad-419c-8c2e-898908e5554a'),
	 (1159,63746,'2019-05-28 18:41:49.623',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','2bd4c5a6-39f0-4f67-a1de-7b4af29401b9'),
	 (964,60512,'2019-04-10 18:41:01.299',1,'2021-01-13 20:22:06.427965','depth_flag,limit_offset,from_date,to_date,loggedInUserId,location_id','with prefered_language as (
select 	case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end as is_enlish
from um_user where id = #loggedInUserId# 
), health_infra_ids as(
	select health_infrastructure_details.id as health_infrastrucutre_id,sum(facility_performance_master.no_of_opd_attended) as no_of_opd_attended
	from health_infrastructure_details
	left join facility_performance_master on health_infrastructure_details.id = facility_performance_master.health_infrastrucutre_id
	and facility_performance_master.performance_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	where health_infrastructure_details.location_id in
	(select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth <= (case when #depth_flag# = -1 then 0 else 8 end))
	and health_infrastructure_details.type in (1061,1063,1009,1008,1007,1012,1084)
	group by health_infrastructure_details.id
	#limit_offset#
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
health_infrastructure_details.name as "Name",
listvalue_field_value_detail.value as "Type",
case when prefered_language.is_enlish then get_location_hierarchy_language_wise(health_infrastructure_details.location_id, ''EN'')
				else get_location_hierarchy(health_infrastructure_details.location_id) end as "Location",
coalesce(health_infra_ids.no_of_opd_attended, 0) as "No. of OPDs"
from health_infra_ids
inner join health_infrastructure_details on health_infra_ids.health_infrastrucutre_id = health_infrastructure_details.id
inner join listvalue_field_value_detail on health_infrastructure_details.type = listvalue_field_value_detail.id
inner join prefered_language on true',true,'ACTIVE','b5602d73-a2ba-4490-b668-19804bd2b7d2'),
	 (1815,74841,'2020-11-25 17:19:47.041',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','f1e26349-047c-4615-8c3d-de41eb75ef76'),
	 (1816,74841,'2020-11-25 17:19:47.059',1,'2021-01-13 20:22:06.427965','depth_flag,limit_offset,from_date,to_date,loggedInUserId,location_id','with prefered_language as (
select 	case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end as is_enlish
from um_user where id = #loggedInUserId# 
), health_infra_ids as(
	select health_infrastructure_details.id as health_infrastrucutre_id,
    sum(facility_performance_master.no_of_opd_attended) as no_of_opd_attended,
    avg(facility_performance_master.no_of_opd_attended) as avg_opds
	from health_infrastructure_details
	left join facility_performance_master on health_infrastructure_details.id = facility_performance_master.health_infrastrucutre_id
	and facility_performance_master.performance_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	where health_infrastructure_details.location_id in
	(select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth <= (case when #depth_flag# = -1 then 0 else 8 end))
	and health_infrastructure_details.type in (1061,1063,1009,1008,1007,1012,1084)
	group by health_infrastructure_details.id
	#limit_offset#
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
health_infrastructure_details.name as "Name",
listvalue_field_value_detail.value as "Type",
case when prefered_language.is_enlish then get_location_hierarchy_language_wise(health_infrastructure_details.location_id, ''EN'')
				else get_location_hierarchy(health_infrastructure_details.location_id) end as "Location",
coalesce(round(health_infra_ids.avg_opds), 0) as "Avg No. of OPDs"
from health_infra_ids
inner join health_infrastructure_details on health_infra_ids.health_infrastrucutre_id = health_infrastructure_details.id
inner join listvalue_field_value_detail on health_infrastructure_details.type = listvalue_field_value_detail.id
inner join prefered_language on true
where round(avg_opds) < 20',true,'ACTIVE','7da096e7-bab3-42de-83c8-768095f0457f'),
	 (629,409,'2019-02-19 12:55:50.631',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','d6dab69f-95f0-40d2-ba5c-15abb4b0fb02'),
	 (630,409,'2019-02-19 12:55:50.635',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','c1f94e49-5e6a-4fdf-b245-94753e483386');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1111,63746,'2019-05-02 14:25:28.763',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #location_id#',true,'ACTIVE','dc630948-4b99-49d5-98b4-7169cb5affc9'),
	 (410,1,'2019-02-13 12:34:49.338',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','9ecbade6-7d7a-4a71-8979-7124702126a8'),
	 (155,58981,'2019-01-22 18:19:19.585',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','40b4df39-316c-436b-9e76-7776219b94bc'),
	 (1549,75398,'2020-03-28 18:04:43.489',1,'2021-01-13 20:22:06.427965','location','with location_det as (
select l.id as loc_id,l.name
from location_hierchy_closer_det lhc,location_master l 
where 
l.id = lhc.child_id
and parent_id = #location# and depth = 1
order by name
),dr_techo_reg_det as(
select parent_id as location_id
,count(1) filter (where u.state = ''ACTIVE'') as approved
,count(1) filter (where u.state = ''DISAPPROVED'') as disapproved
,count(1) filter (where u.state = ''UNVERIFIED'') as pending
,count(1) total
from um_user u
left join user_health_infrastructure  uhi on u.id = uhi.user_id and uhi.state = ''ACTIVE''
left join health_infrastructure_details hid on hid.id = uhi.health_infrastrucutre_id
left join location_hierchy_closer_det lhc on lhc.child_id = hid.location_id 
where  role_id in (
select id from um_role_master where name = ''DrTecho User'')
and lhc.parent_id in (select loc_id from location_det)
group by parent_id
),screen_history as (
select lh.parent_id as location_id
,count(1) as no_of_person_screened
,count(1) filter (where is_travel and is_travel_from_other_country != true) as domestic_travel_history
,count(1) filter (where is_travel_from_other_country = true) as international_travel_history
,count(1) filter (where (
	(case when is_cough then 1 else 0 end) 
	+ (case when is_fever then 1 else 0 end)
	+ (case when is_respiratory_issue then 1 else 0 end)) = 1) only_one_symptoms
,count(1) filter (where (
	(case when is_cough then 1 else 0 end) 
	+ (case when is_fever then 1 else 0 end)
	+ (case when is_respiratory_issue then 1 else 0 end)) = 2) multiple_symptoms
,count(1) filter (where (
	(case when is_cough then 1 else 0 end) 
	+ (case when is_fever then 1 else 0 end)
	+ (case when is_respiratory_issue then 1 else 0 end)) = 3) all_symptoms

,count(1) filter (where is_sari) as sari
,count(1) filter (where is_travel and is_travel_from_other_country != true
	and ((case when is_cough then 1 else 0 end) 
	+ (case when is_fever then 1 else 0 end)
	+ (case when is_respiratory_issue then 1 else 0 end)) > 0) as domestic_travel_history_with_symptoms
,count(1) filter (where is_travel_from_other_country = true
	and ((case when is_cough then 1 else 0 end) 
	+ (case when is_fever then 1 else 0 end)
	+ (case when is_respiratory_issue then 1 else 0 end)) > 0) as international_travel_history_with_symptoms
,count(1) filter (where suggest_covid_test) as suggest_covid_test
from covid_travellers_info cti
, location_hierchy_closer_det lh
where input_type = ''DR_TECHO''
and lh.child_id = cti.district_id
and lh.parent_id in (select loc_id from location_det)
group by lh.parent_id
),final_det as (
select ld.name
,ld.loc_id 
,coalesce(approved,0) as approved
,coalesce(disapproved,0) as disapproved
,coalesce(pending,0) as pending
,coalesce(total,0) as total
,coalesce(no_of_person_screened,0) as no_of_person_screened
,coalesce(only_one_symptoms,0) as only_one_symptoms
,coalesce(multiple_symptoms,0) as multiple_symptoms
,coalesce(all_symptoms,0) as all_symptoms
,coalesce(international_travel_history,0) as international_travel_history
,coalesce(international_travel_history_with_symptoms,0) as international_travel_history_with_symptoms
,coalesce(domestic_travel_history,0) as domestic_travel_history
,coalesce(domestic_travel_history_with_symptoms,0) as domestic_travel_history_with_symptoms
,coalesce(sari,0) as sari
,coalesce(suggest_covid_test,0) as suggest_covid_test
from location_det ld
left join dr_techo_reg_det dru on dru.location_id = ld.loc_id
left join screen_history sh on sh.location_id = ld.loc_id 
)
select name as "Location"
,loc_id as hidden_location_id
,approved as "Approved"
--,disapproved as "Disapproved"
--,pending as "Pending"
--,total as "Total"
,no_of_person_screened as "Patients Screened"
,only_one_symptoms as "Having Only One Symptom"
,multiple_symptoms as "Having Multiple Symptoms"
,all_symptoms as "Having All Symptoms"
,international_travel_history as "Int. Travel History"
,international_travel_history_with_symptoms as "Int. Travel History With Symptoms"
,domestic_travel_history as "Domestic Travel History"
,domestic_travel_history_with_symptoms as "Domestic Travel History With Symptoms"
,sari as "SARI"
,suggest_covid_test as "Suggested Covid Test"
from final_det
union all
select ''Total''
,#location# as hidden_location_id  
,sum(approved)
--,sum(disapproved)
--,sum(pending)
--,sum(total)
,sum(no_of_person_screened) 
,sum(only_one_symptoms) 
,sum(multiple_symptoms)
,sum(all_symptoms)
,sum(international_travel_history)
,sum(international_travel_history_with_symptoms)
,sum(domestic_travel_history)
,sum(domestic_travel_history_with_symptoms)
,sum(sari)
,sum(suggest_covid_test)
from final_det',true,'ACTIVE','aab25bbc-cf2d-438e-bdc3-95479cedae67'),
	 (762,64189,'2019-03-04 11:54:10.87',1,'2021-01-13 20:22:06.427965','health_infra_id','select name as health_infra_id from health_infrastructure_details where id = #health_infra_id#',true,'ACTIVE','a568d8bc-4d8a-4cc8-a1bd-44e6e00c682f'),
	 (894,64189,'2019-03-07 11:03:53.92',1,'2021-01-13 20:22:06.427965','from_date','select to_char(to_date(''#from_date#'',''MM/DD/YYYY''),''DD/MM/YYYY'') as from_date;',true,'ACTIVE','88f6c9c3-2be0-4bc9-8bb2-c39b3b18321d'),
	 (472,1,'2019-02-14 14:04:37.277',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','4a623faa-d039-4d1e-87d8-0040af75791c'),
	 (473,1,'2019-02-14 14:04:37.288',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','1332744b-1dff-4ef2-8283-ef146aa0d103'),
	 (1110,63746,'2019-05-02 14:24:48.033',1,'2021-01-13 20:22:06.427965','limit_offset,age_group_or_child_count,location_id','with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)
,member_location as (
	select m.member_id, m.loc_id  from rch_eligible_couple_analytics m
	inner join locations on locations.child_id = m.loc_id
        where  ( case 
		when ''#age_group_or_child_count#'' = ''5+'' then children_count >= 5
		when ''#age_group_or_child_count#'' = ''0'' then children_count is null 
		when ''#age_group_or_child_count#'' = ''1'' then children_count = 1 
		when ''#age_group_or_child_count#'' = ''2'' then children_count = 2 
		when ''#age_group_or_child_count#'' = ''3'' then children_count = 3 
		when ''#age_group_or_child_count#'' = ''4'' then children_count = 4
		when ''#age_group_or_child_count#'' = ''null'' then true
	end) 	and  m.last_method_of_contraception in (''CHHAYA'',''ANTARA'')   
        #limit_offset#
)
,loc_det as(
	select member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id
	,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id
	from location_master,location_type_master,member_location 
	where 
	location_master.id = member_location.loc_id and location_type_master.type = location_master.type
)
select 
	 ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
	mem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as "Member Name",
	fam.family_id as "Family Id",to_char(r.dob, ''DD/MM/YYYY'') as "Birth Date",
	string_agg(lm.name,''> '' order by lhcd.depth desc) as "Location Hierarchy"  
from rch_eligible_couple_analytics r
inner join loc_det on loc_det.member_id = r.member_id
inner join imt_member mem on mem.id = r.member_id
inner join imt_family fam on mem.family_id = fam.family_id
inner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id
inner join location_master lm on lm.id = lhcd.parent_id
group by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;',true,'ACTIVE','fc9bbc51-7bce-480e-bf88-f771bf97a8b0'),
	 (627,409,'2019-02-19 12:51:15.676',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','6e7e5156-ec83-49e1-ba67-953228ab57d1');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1820,74841,'2020-12-07 15:08:31.726',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,demographic_location_id,from_month,location_id','with parameters as(
select
	cast(#location_id# as integer) as location_id,
	cast(''#demographic_location_id#'' as text) as demographic_group,
	to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end, ''MM-DD-YYYY'') as from_date ,
	to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end, ''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date ),
location_ids as(
select
	child_id
from
	location_hierchy_closer_det,
	parameters p
where
	parent_id = p.location_id
	and (p.demographic_group = ''null''
	or location_hierchy_closer_det.child_loc_demographic_type in (
	select
		distinct demographic_type
	from
		location_demographic_type_master
	where
		demographic_group = p.demographic_group) )
	and depth = 1 ),
preg_details as (
select
	lhcd.child_id as location_id,
	rpad2.*
from
	rch_pregnancy_analytics_details rpad2
inner join parameters on
	true
inner join location_hierchy_closer_det lhcd on
	lhcd.child_id = rpad2.native_location_id
where
	rpad2.reg_service_date between parameters.from_date and parameters.to_date
	and hb between 0.1 and 6.99
	and iron_def_anemia_inj is not null
	and lhcd.parent_id in (
	select
		child_id
	from
		location_ids)
	and lhcd.child_id = rpad2.native_location_id
order by
	rpad2.pregnancy_reg_id 
 #limit_offset#
),
anmeia_detail as (
select
	rpad2.unique_health_id,
	max(case when ram.iron_def_anemia_inj = ''FCM'' then ram.health_infrastructure_id else null end) as fcm_infra,
	max(case when ram.iron_def_anemia_inj = ''IRON_SUCROSE'' then ram.health_infrastructure_id else null end) as is_infra
from
	preg_details rpad2
inner join rch_anc_master ram on
	ram.pregnancy_reg_det_id = rpad2.pregnancy_reg_id
group by
	rpad2.unique_health_id ),
loc as (
	select distinct location_id as loc_id from preg_details
)
, fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
),
result as (
select
	get_location_hierarchy(preg_details.location_id) as "Location",
	preg_details.unique_health_id as "Health id",
	member_name as "Mother name",
	fhw_det.fhw as "FHW details",
	case
		when (anmeia_detail.fcm_infra is not null
		and anmeia_detail.is_infra is not null) then ''Both''
		when anmeia_detail.fcm_infra is not null then ''Fcm''
		when anmeia_detail.is_infra is not null then ''Iron Sucrose''
	end as "Iron Scrose or FCM",
	case
		when fcm_hid.id is not null then concat_ws('' '', fcm_lfvd.value, fcm_hid."name")
		else ''-''
	end as "Place of Fcm given",
	case
		when is_hid.id is not null then concat_ws('' '', is_lfvd.value , is_hid."name")
		else ''-''
	end as "Place of Iron Sucrose given"
from
	preg_details
left join fhw_det on fhw_det.loc_id = preg_details.location_id
left join anmeia_detail on
	anmeia_detail.unique_health_id = preg_details.unique_health_id
left join health_infrastructure_details fcm_hid on
	fcm_hid.id = anmeia_detail.fcm_infra
left join listvalue_field_value_detail fcm_lfvd on
	fcm_lfvd.id = fcm_hid."type"
left join health_infrastructure_details is_hid on
	is_hid.id = anmeia_detail.is_infra
left join listvalue_field_value_detail is_lfvd on
	is_lfvd.id = is_hid."type" )
select
	row_number() over () + cast(SUBSTRING(''#limit_offset#'', position(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
	result.*
from
	result',true,'ACTIVE','fee9a2c4-3e25-414c-a17e-8fbef734a60a'),
	 (1415,409,'2019-09-23 00:46:42.312',1,'2021-01-13 20:22:06.427965','from_month','select to_char(cast(''#from_month#'' as date),''MM/YYYY'') as from_month',true,'ACTIVE','08e93fc7-0503-49af-af9c-e9275fac1dd8'),
	 (1416,409,'2019-09-23 00:46:42.356',1,'2021-01-13 20:22:06.427965','to_month','select to_char(cast(''#to_month#'' as date),''MM/YYYY'') as to_month',true,'ACTIVE','7cc27592-5bda-44ed-a914-57e23a57291d'),
	 (924,60512,'2019-03-13 16:08:04.942',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','537f3e8d-8213-4a66-a454-c76547aaf927'),
	 (312,57698,'2019-02-12 15:51:11.267',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','58d81584-62c5-47e3-a644-b0c8bcf41c4b'),
	 (1112,63746,'2019-05-02 14:25:28.778',1,'2021-01-13 20:22:06.427965','limit_offset,age_group_or_child_count,location_id','with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)
,member_location as (
	select m.member_id, m.loc_id  from rch_eligible_couple_analytics m
	inner join locations on locations.child_id = m.loc_id
        where  ( case 
		when ''#age_group_or_child_count#'' = ''5+'' then children_count >= 5
		when ''#age_group_or_child_count#'' = ''0'' then children_count is null 
		when ''#age_group_or_child_count#'' = ''1'' then children_count = 1 
		when ''#age_group_or_child_count#'' = ''2'' then children_count = 2 
		when ''#age_group_or_child_count#'' = ''3'' then children_count = 3 
		when ''#age_group_or_child_count#'' = ''4'' then children_count = 4
		when ''#age_group_or_child_count#'' = ''null'' then true
	end)	and (m.last_method_of_contraception is null or m.last_method_of_contraception in (''CONTRA'',''NONE'',''null'',''none''))  
        #limit_offset#
)
,loc_det as(
	select member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id
	,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id
	from location_master,location_type_master,member_location 
	where 
	location_master.id = member_location.loc_id and location_type_master.type = location_master.type
)
select 
	 ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
	mem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as "Member Name",
	fam.family_id as "Family Id",to_char(r.dob, ''DD/MM/YYYY'') as "Birth Date",
	string_agg(lm.name,''> '' order by lhcd.depth desc) as "Location Hierarchy"  
from rch_eligible_couple_analytics r
inner join loc_det on loc_det.member_id = r.member_id
inner join imt_member mem on mem.id = r.member_id
inner join imt_family fam on mem.family_id = fam.family_id
inner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id
inner join location_master lm on lm.id = lhcd.parent_id
group by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;',true,'ACTIVE','babdb1b8-020f-4c5d-aef6-c341a78e2e37'),
	 (1521,409,'2020-02-24 21:21:52.085',1,'2021-01-13 20:22:06.427965',NULL,'select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as year 
from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by year desc;',true,'ACTIVE','e771a220-833f-4b1e-a41b-2dee6fc8bf56'),
	 (1819,74841,'2020-12-07 15:08:31.698',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' > '' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','f88423b1-e1ec-4390-8af1-c319495780b8'),
	 (933,60512,'2019-03-14 12:14:29.416',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_ids as(
	select distinct child_cmtc_nrc_screening_detail.child_id,child_cmtc_nrc_admission_detail.screening_center 
	from health_infrastructure_details
	inner join child_cmtc_nrc_admission_detail on health_infrastructure_details.id = child_cmtc_nrc_admission_detail.screening_center
	inner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id
	inner join child_cmtc_nrc_follow_up on child_cmtc_nrc_follow_up.admission_id = child_cmtc_nrc_admission_detail.id
	where health_infrastructure_details.location_id in (
		select child_id from location_hierchy_closer_det where parent_id = #location_id#
	) and child_cmtc_nrc_admission_detail.admission_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	and child_cmtc_nrc_follow_up.follow_up_visit=2
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No", 
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
get_location_hierarchy(imt_family.location_id) as "Location",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
imt_member.dob as "Child DOB",
health_infrastructure_details.name as "Health Infrastructure"
from child_ids
inner join imt_member on imt_member.id = child_ids.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on child_ids.screening_center = health_infrastructure_details.id',true,'ACTIVE','e18ba2b0-4aae-45c3-b7c8-0071d3b209a9'),
	 (1830,78434,'2020-12-08 11:21:40.263',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,from_month,location_id','-- No. of H.R. PW given PMSMA services once in each trimester (C)(Concurrent PMSMA Report (Monthly))

with dates as (
    select to_date(
            case
                when ''#from_month#'' = ''null'' then null
                else ''#from_month#''
            end,
            ''MM/DD/YYYY''
        ) as from_date,
        to_date(
            case
                when ''#to_month#'' = ''null'' then null
                else ''#to_month#''
            end,
            ''MM/DD/YYYY''
        ) + interval ''1 month'' - interval ''1 milliseconds'' as to_date
),
location_det as (
    select lm.id,
        lm.english_name as name,
        lm.location_code
    from location_hierchy_closer_det lh1,
        location_master lm
    where lh1.parent_id = #location_id#
        and lm.id = lh1.child_id
),
high_risk_member as (
    select distinct(rpa.pregnancy_reg_id),
        to_char(rpa.lmp_date, ''DD-MM-YYYY'') as lmp_date,
        to_char(preg.edd, ''DD-MM-YYYY'') as edd_date,
        get_location_hierarchy(rpa.member_current_location_id) as location_name,
        concat(
            im.first_name,
            '' '',
            im.middle_name,
            '' '',
            im.last_name,
            ''('',
            im.unique_health_id,
            '')''
        ) as person_name
    from rch_pregnancy_analytics_details rpa,
        rch_anc_master anc,
        dates,
        rch_pregnancy_registration_det preg,
        imt_member im
    where rpa.high_risk_mother = true
        and (
            rpa.death_date is null
            or rpa.death_date >= dates.from_date
        )
        and (
            date_of_delivery is null
            or date_of_delivery >= dates.from_date
        )
        and (
            (
                cast(rpa.lmp_date + interval ''90 days'' as date),
                cast(rpa.lmp_date + interval ''270 days'' as date)
            ) overlaps (
                cast(dates.from_date as date),
                cast(dates.to_date as date)
            )
        )
        and rpa.member_current_location_id in (
            select id
            from location_det
        )
        and rpa.pregnancy_reg_id = anc.pregnancy_reg_det_id
        and anc.is_from_web = true
        and anc.service_date between 
        (
            case when ((cast(rpa.lmp_date + interval ''90 days'' as date),cast(rpa.lmp_date + interval ''180 days'' as date)) 
		    overlaps (cast(dates.from_date as date), cast(dates.to_date as date))) then  rpa.lmp_date + interval ''90 days''
            when ((cast(rpa.lmp_date + interval ''180 days'' as date),cast(rpa.lmp_date + interval ''270 days'' as date)) 
                    overlaps (cast(dates.from_date as date), cast(dates.to_date as date))) then  rpa.lmp_date + interval ''181 days''
            else null end) 
        and 
        (
            case when ((cast(rpa.lmp_date + interval ''90 days'' as date),cast(rpa.lmp_date + interval ''180 days'' as date)) 
            overlaps (cast(dates.from_date as date), cast(dates.to_date as date))) then  rpa.lmp_date + interval ''180 days''
            when ((cast(rpa.lmp_date + interval ''180 days'' as date),cast(rpa.lmp_date + interval ''270 days'' as date)) 
                    overlaps (cast(dates.from_date as date), cast(dates.to_date as date))) then  rpa.lmp_date + interval ''270 days''
            else null end
        )
        and anc.examined_by_gynecologist = true
        and preg.id = rpa.pregnancy_reg_id
        and rpa.member_id = im.id
    order by rpa.pregnancy_reg_id #limit_offset#
)
select ROW_NUMBER() over () + cast(
        SUBSTRING(
            ''#limit_offset#'',
            POSITION(''offset'' in ''#limit_offset#'') + 7
        ) as int
    ) as "Sr No",
    location_name as "Location Name",
    person_name as "Name of Person",
    lmp_date as "LMP Date",
    edd_date as "EDD Date"
from high_risk_member',true,'ACTIVE','bcb302cd-12a8-4a19-9b6c-7cfd1ea3163e');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1118,60512,'2019-05-02 15:14:45.564',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
	select 
	case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end as from_date,
	case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end + interval ''1 day'' - interval ''00:00:00.001'' as to_date
),child_service_ids as (
	select child_service_id from rch_child_cp_suspects
	inner join dates on created_on between from_date and to_date
	where location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and status is null
	#limit_offset#
)
select
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
concat(imt_member.unique_health_id,'' ('',imt_member.family_id,'')'') as "Unique Health ID (Family ID)",
concat(imt_member.first_name,'' '',imt_member.last_name) as "Child Name",
imt_member.dob as "Date of Birth",
m2.mobile_number as "Mother Contact No.",
to_char(rch_child_service_master.service_date,''DD-MM-YYYY'') as "Child Service Date"
from rch_child_service_master
inner join imt_member on rch_child_service_master.member_id = imt_member.id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join child_service_ids on rch_child_service_master.id = child_service_ids.child_service_id',true,'ACTIVE','a7855d40-1add-4815-8aa3-734c66ff571e'),
	 (1452,74841,'2019-12-11 15:26:02.044',1,'2021-01-13 20:22:06.427965','filter_date,source_type','with data as (
		select
			source_type,
			wsdl_code,
			wsdl_code_count
		from
			anmol_api_status
		where
created_on = (select max(created_on) from anmol_api_status where cast(created_on as date) = to_date(''#filter_date#'', ''MM/DD/YYYY'')) 			and source_type = #source_type#
	)
		
	select source_type as "Source Type", wsdl_code as "Wsdl Code", wsdl_code_count as "Wsdl Code Count" from data
	union all
	select ''<b>Total</b>'', null, sum(wsdl_code_count) from data',true,'ACTIVE','988a34ff-f997-4f40-9846-c6d83d4c4e1a'),
	 (1829,78434,'2020-12-08 11:21:40.199',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','fbf54280-e0e5-4a6b-8a81-50d192b82ebe'),
	 (1633,409,'2020-05-22 15:34:34.533',1,'2021-01-13 20:22:06.427965','limit_offset,filter_type,loggedInUserId,location_id','with prefered_language as(
select (case
when report_preferred_language = ''EN'' then true  
else false
end) as is_enlish
from um_user where id = #loggedInUserId#
),age_info as (
    select loc_anlyts.location_id as loc_id,
	member_id,
    concat(name,''<br>'',''('',unique_health_id,'')'',''<br>'',''('',family_id,'')'')  as name,
   name as member_name,
    concat(to_char(dob, ''dd/mm/yyyy''),''('', EXTRACT(YEAR FROM age(cast(dob as date))),'' Years)'') as age,
    comorbidity
    from member_basic_detail loc_anlyts,location_hierchy_closer_det vlc
    where  vlc.child_id = cast(loc_anlyts.location_id as integer) 
    and vlc.parent_id = #location_id#
    and (
    case when #filter_type# = ''total_0to5_children'' and EXTRACT(YEAR FROM age(cast(dob as date))) between 0 and 5 then true
    when #filter_type# = ''total_6_to_10'' and EXTRACT(YEAR FROM age(cast(dob as date))) between 6 and 10 then true
    when #filter_type# = ''total_11_to_49'' and EXTRACT(YEAR FROM age(cast(dob as date))) between 11 and 49 then true
    when #filter_type# = ''total_50_to_59'' and EXTRACT(YEAR FROM age(cast(dob as date))) between 50 and 59 then true
    when #filter_type# = ''total_60_plus'' and EXTRACT(YEAR FROM age(cast(dob as date))) >= 60  then true
    when #filter_type# = ''all'' then true
    else false end )
    order by loc_anlyts.location_id,family_id desc
	 #limit_offset#
),final_det as (
select age_info.*,m.mobile_number 
from age_info,imt_member m
where age_info.member_id = m.id
)
select  
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No.",
ai.name as "Member Detail",
ai.member_name as "Member Name EN",
age as "Age",
ai.mobile_number as "Mobile No",
get_location_hierarchy_from_district(cast(ai.loc_id as integer)) as "Location",
comorbidity as "Comorbidities"
from final_det ai',true,'ACTIVE','730493f3-8437-49cc-929e-a2620ba628d9'),
	 (506,1,'2019-02-14 15:50:30.448',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','918b4c60-c516-4364-ad1e-3f033e7fc654'),
	 (1399,66522,'2019-08-28 15:27:23.199',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','9d89da4a-3ece-4823-a43d-e3529519810e'),
	 (1119,60512,'2019-05-02 15:40:07.897',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','d902e9b0-37f1-4c3b-8fe0-3b639e07e22c'),
	 (1052,409,'2019-04-25 20:20:24.546',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','82ffe64c-a69e-4738-8113-3c596767ea50'),
	 (1053,409,'2019-04-25 20:20:24.549',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','eca4d208-b4ed-4636-b8b0-0012e22c58f2'),
	 (1051,409,'2019-04-25 20:20:24.532',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','66026dc5-5ac2-466f-b53c-e8ce79a61b85');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1135,60512,'2019-05-02 15:58:56.085',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','2a438913-211f-4497-a9c1-03451690271a'),
	 (507,1,'2019-02-14 15:50:30.458',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,demographic_location_id,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#
)
,parameter as (
	select CAST(''#demographic_location_id#'' AS TEXT) as demographic_group
)
,child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
    inner join parameter p on true = true
	where l.child_id = c.hep_b_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.hep_b is not null
    and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	group by m.id, f.location_id, c.dob, hep_b
	having cast(date_trunc(''month'', hep_b) as date)  between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','8e142b6c-adda-4c16-a519-635fb3dd6bc1'),
	 (453,1,'2019-02-14 00:46:06.55',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','b1acaade-2427-4c3c-825e-6d220876a66f'),
	 (509,1,'2019-02-14 15:55:44.908',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','a914d765-585a-4acb-a790-7969b969ec02'),
	 (454,1,'2019-02-14 00:46:06.552',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','e77dd701-4ee5-4fb4-8e06-630b3b38fe62'),
	 (972,60512,'2019-04-11 11:54:38.874',1,'2021-01-13 20:22:06.427965','depth_flag,limit_offset,from_date,to_date,loggedInUserId,location_id','with prefered_language as (
select 	case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end as is_enlish
from um_user where id = #loggedInUserId#
),health_infra_ids as(
	select health_infrastructure_details.id as health_infrastrucutre_id,sum(facility_performance_master.no_of_minor_operation_conducted) as no_of_minor_operation_conducted
	from health_infrastructure_details
	left join facility_performance_master on health_infrastructure_details.id = facility_performance_master.health_infrastrucutre_id
	and facility_performance_master.performance_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	where health_infrastructure_details.location_id in
	(select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth <= (case when #depth_flag# = -1 then 0 else 8 end))
	and health_infrastructure_details.type in (1061,1063,1009,1008,1007,1012,1084)
	group by health_infrastructure_details.id
	#limit_offset#
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
health_infrastructure_details.name as "Name",
listvalue_field_value_detail.value as "Type",
case when prefered_language.is_enlish then get_location_hierarchy_language_wise(health_infrastructure_details.location_id, ''EN'')
				else get_location_hierarchy(health_infrastructure_details.location_id) end as "Location",
coalesce(health_infra_ids.no_of_minor_operation_conducted, 0) as "No. of Minor Operations"
from health_infra_ids
inner join health_infrastructure_details on health_infra_ids.health_infrastrucutre_id = health_infrastructure_details.id
inner join listvalue_field_value_detail on health_infrastructure_details.type = listvalue_field_value_detail.id
inner join prefered_language on true',true,'ACTIVE','01a18d76-49f1-462c-bdc0-f3db0a690c5c'),
	 (1025,60512,'2019-04-22 16:49:22.31',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','58c1a7a1-9efe-4d9d-96e4-ea7a1d6d9b00'),
	 (1559,74840,'2020-04-07 18:52:58.595',1,'2021-01-13 20:22:06.427965','infra_id,limit_offset,location_id,status','with location_det as (
	select child_id as loc_id
	from location_hierchy_closer_det lhc
	where 
	parent_id = #location_id# 
), lab_test_det as (
	select *
	from covid19_lab_test_detail ctd 
    where 
    case when ''#status#'' = ''COLLECTION_PENDING'' and lab_collection_status = ''COLLECTION_PENDING'' then true else ctd.lab_result = ''POSITIVE'' end  
    order by covid_admission_detail_id,id
), infra_info as (
	select
	hid.id as infra_id,
	hid.location_id,
	hid.name infra_name
	from health_infrastructure_details  hid
	inner join location_hierchy_closer_det loch on loch.child_id = hid.location_id
	left join health_infrastructure_ward_details hiwd on hiwd.health_infra_id = hid.id
	where (is_covid_hospital or is_covid_lab)
    and (case when #infra_id# is null then (loch.parent_id in (select distinct loc_id from location_det)) else hid.id = cast(#infra_id# as integer) end)
	group by hid.id,hid.location_id,hid.name
)
,member_det as (
	select
    cad.id,
	concat_ws('' '', cad.first_name, cad.last_name, cad.middle_name) as member_name,
	cad.age as age,
	cad.gender as gender,
	cad.address as address,
	cad.occupation as occupation,
	cad.contact_number as contact_number,
	d.english_name as district,
	s.english_name as state,
	cast(''N/A'' as text) as date_of_arrival_in_india,
	cad.travelled_place as travelled_to_covid_affected_country,
	cad.flight_no as flight_no,
	cast(''N/A'' as text) as seat_no,
	case
		when cad.in_contact_with_covid19_paitent is not null then cad.in_contact_with_covid19_paitent
		else ''No''
	end as had_contact_with_covid19_case,
	to_char(cad.date_of_onset_symptom,''DD/MM/YYYY'') as date_of_onset_of_symptoms,
	
	concat_ws('', '' ,(case when cad.is_fever then ''Fever'' else null end) 
	,(case when cad.is_cough then ''Cough'' else null end)
	,(case when cad.is_breathlessness then ''Breathlessness'' else null end)
	,(case when cad.is_sari then ''SARI'' else null end)
	) as symptoms_at_admission,
	
	to_char(cad.admission_date,''DD/MM/YYYY'') as date_of_isolation,
	
	case
		when ltd.id is not null then ''Yes''
		else ''No''
	end sample_collected,
	ltd.lab_test_number as sample_id,
	to_char(ltd.lab_collection_on,''DD/MM/YYYY'') as date_of_sample_collected,
	
	hid_sample.name_in_english as sample_collection_center,
	hid_tested.name_in_english as sample_tested_at,
	hid_tested.name_in_english as lab_that_have_confirmed_the_result,
	
	concat_ws('', '' ,(case when cad.is_hiv then ''HIV'' else null end) 
	,(case when cad.is_heart_patient then ''Heart Patient'' else null end)
	,(case when cad.is_diabetes then ''Diabetes'' else null end)
	,(case when cad.is_copd then ''COPD'' else null end)
	,(case when cad.is_hypertension then ''Hypertension'' else null end)
	,(case when cad.is_renal_condition then ''Renal Condition'' else null end)
	,(case when cad.is_immunocompromized then ''Immunocompromized'' else null end)
	,(case when cad.is_malignancy then ''Malignancy'' else null end)
	,(case when cad.is_other_co_mobidity then cad.other_co_mobidity else null end)
	) as underlying_medical_condition,
	
	cacds.health_status as health_status,
	case when cad.discharge_status is null then ''Admitted'' else cad.discharge_status end as outcome,
	to_char(cad.discharge_date,''DD/MM/YYYY'') as date_of_outcome,
	cast(''N/A'' as text) as is_patitnet_member_of_covid_19,
	cast(''N/A'' as text) as household_contact,
	cast(''N/A'' as text) as workplace_contact,
	cast(''N/A'' as text) as community_contact,
	cast(''N/A'' as text) as health_care_contact,
	cast(''N/A'' as text) as co_traveller
	from infra_info info
    left join health_infrastructure_ward_details hiwd on hiwd.health_infra_id = info.infra_id 
	left join covid19_admission_detail cad on cad.current_ward_id = hiwd.id
	left join lab_test_det ltd on cad.id = ltd.covid_admission_detail_id    
	left join covid19_admitted_case_daily_status cacds on cad.last_check_up_detail_id = cacds.id
	left join location_master lm on lm.id = cad.location_id
	left join location_level_hierarchy_master lh on	lh.id = lm.location_hierarchy_id
	left join health_infrastructure_details hid_sample on hid_sample.id = ltd.sample_health_infra
	left join health_infrastructure_details hid_tested on hid_tested.id = ltd.sample_health_infra_send_to
	left join location_master s on lh.level1 = s.id and s.state = ''ACTIVE''
	and s.name not ilike ''%delete%''	left join location_master d on
	lh.level3 = d.id and d.state = ''ACTIVE''
	and d.name not ilike ''%delete%''	
	where ((case when (''#status#'' = ''CONFORMED'' or ''#status#'' = ''SUSPECT'' ) and cad.status = ''#status#'' then true else false end)	
        or (case when ''#status#'' = ''COLLECTION_PENDING'' and lab_collection_status = ''#status#'' then true else false end))
     and cad.health_infra_id is not null
     #limit_offset#
)
select
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr. No",
member_name as "Name",
age as "Age",
gender as "Gender",
address as "Address",
occupation as "Occupation",
contact_number as "Contact Number",
district as "District",
state as "State",
date_of_arrival_in_india as "Date of arrival in India",
travelled_to_covid_affected_country as "Travel to COVID affected country (Name of country)",
flight_no as "Flight No",
seat_no as "Seat No",
had_contact_with_covid19_case as "H/O contact with COVID-19 case",
date_of_onset_of_symptoms as "Date of onset of symptoms",
symptoms_at_admission as "Symptoms at admission",
date_of_isolation as "Date of isolation",
sample_collected as "Sample collected (yes/No)",
sample_id as "Sample ID",
date_of_sample_collected as "Date of sample collection",
sample_collection_center "Sample collection centre",
sample_tested_at as "Sample tested at",
lab_that_have_confirmed_the_result as "Lab that confirmed the result",
underlying_medical_condition as "Underlying medical condition",
health_status as "Health Status",
outcome as "Outcome (Discharged/ Death/ Admitted)",
date_of_outcome as "Date of outcome",
is_patitnet_member_of_covid_19 as "is patient member of covid 19",
household_contact as "house hold contact",
workplace_contact as "workplace contact",
community_contact as "community contact",
health_care_contact as "health care contact",
co_traveller as "co traveller"
from member_det',true,'ACTIVE','656ab5a8-9a59-4f33-85fd-914065c3b627'),
	 (1137,60512,'2019-05-02 16:51:12.422',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','b58ccc8a-d94d-4965-bc25-7f5fe9a50c26'),
	 (102,1027,'2018-11-16 16:54:17.226',1,'2021-01-13 20:22:06.427965','financial_year,loggedInUserId,location_id','-----Services Provided To The Children Registered During The Year ( 1 To 6 Year )-----

with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 ldp as(
	select child_id, case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
else location_master.name end 
	from location_hierchy_closer_det, location_master, prefered_language 
	where parent_id = #location_id# and depth = 1 
	and location_master.id = location_hierchy_closer_det.child_id
),expected_target as (
	select ldp.child_id,
	sum(location_wise_expected_target.ela_dpt_opv_mes_vita_1dose) as ela_dpt_opv_mes_vita_1dose
	from ldp
	inner join location_hierchy_closer_det on ldp.child_id = location_hierchy_closer_det.parent_id
	inner join location_wise_expected_target on location_hierchy_closer_det.child_id = location_wise_expected_target.location_id
	and location_hierchy_closer_det.child_loc_type in (''P'',''U'')
	and location_wise_expected_target.financial_year = ''#financial_year#''
	group by ldp.child_id
), r as(
	select lhcd.parent_id as id, 
	coalesce(sum(stat.total_reg_1_6),0) as total_reg_1_6, 
	coalesce(sum(stat.weighed_1_6),0) as weighed_1_6, 
	coalesce(sum(stat.weighed_less_than_2_5_1_6),0) as weighed_less_than_2_5_1_6, 
	coalesce(sum(stat.bcg_given_1_6),0) as bcg_given_1_6, 
	coalesce(sum(stat.dpt_1_given_1_6),0) as dpt_1_given_1_6, 
	coalesce(sum(stat.penta_1_given_1_6),0) as penta_1_given_1_6, 
	coalesce(sum(stat.opv_1_given_1_6),0) as opv_1_given_1_6,
	coalesce(sum(stat.fipv_1_given_1_6),0) as fipv_1_given_1_6,
	coalesce(sum(stat.dpt_2_given_1_6),0) as dpt_2_given_1_6,
	coalesce(sum(stat.penta_2_given_1_6),0) as penta_2_given_1_6,
	coalesce(sum(stat.opv_2_given_1_6),0) as opv_2_given_1_6,
	coalesce(sum(stat.dpt_3_given_1_6),0) as dpt_3_given_1_6,
	coalesce(sum(stat.penta_3_given_1_6),0) as penta_3_given_1_6,
	coalesce(sum(stat.opv_3_given_1_6),0) as opv_3_given_1_6,
	coalesce(sum(stat.fipv_2_given_1_6),0) as fipv_2_given_1_6,
	coalesce(sum(stat.measles_1_given_1_6),0) as measles_1_given_1_6,
	coalesce(sum(stat.measles_rubella_1_given_1_6),0) as measles_rubella_1_given_1_6,
	coalesce(sum(stat.fully_immunized_1_6),0) as fully_immunized_1_6
	from ldp
	inner join location_hierchy_closer_det lhcd on lhcd.parent_id = ldp.child_id
	left join child_with_age_1_to_6_year_analytics stat on lhcd.child_id = stat.location_id
	where stat.financial_year = ''#financial_year#'' 
	group by lhcd.parent_id
), s as(
	select ldp.name,ldp.child_id,
	expected_target.ela_dpt_opv_mes_vita_1dose,
	coalesce(r.total_reg_1_6,0) as total_reg_1_6, 
	coalesce(r.weighed_1_6,0) as weighed_1_6, 
	coalesce(r.weighed_less_than_2_5_1_6,0) as weighed_less_than_2_5_1_6, 
	coalesce(r.bcg_given_1_6,0) as bcg_given_1_6, 
	coalesce(r.dpt_1_given_1_6,0) as dpt_1_given_1_6, 
	coalesce(r.penta_1_given_1_6,0) as penta_1_given_1_6, 
	coalesce(r.opv_1_given_1_6,0) as opv_1_given_1_6,
	coalesce(r.fipv_1_given_1_6,0) as fipv_1_given_1_6,
	coalesce(r.dpt_2_given_1_6,0) as dpt_2_given_1_6,
	coalesce(r.penta_2_given_1_6,0) as penta_2_given_1_6,
	coalesce(r.opv_2_given_1_6,0) as opv_2_given_1_6,
	coalesce(r.dpt_3_given_1_6,0) as dpt_3_given_1_6,
	coalesce(r.penta_3_given_1_6,0) as penta_3_given_1_6,
	coalesce(r.opv_3_given_1_6,0) as opv_3_given_1_6,
	coalesce(r.fipv_2_given_1_6,0) as fipv_2_given_1_6,
	coalesce(r.measles_1_given_1_6,0) as measles_1_given_1_6,
	coalesce(r.measles_rubella_1_given_1_6,0) as measles_rubella_1_given_1_6,
	coalesce(r.fully_immunized_1_6,0) as fully_immunized_1_6
	from ldp left join r on ldp.child_id = r.id
	left join expected_target on ldp.child_id = expected_target.child_id
	order by ldp.name
)
select  row_number() over() as "Sr. no", 
name as  "Location",
child_id as hidden_location_id,
total_reg_1_6 as "Reg from 1st April",
case when ela_dpt_opv_mes_vita_1dose is null then ''Not available'' else cast(ela_dpt_opv_mes_vita_1dose as text) end as "Expected Vaccination Dose",
weighed_1_6  as "Children weighed", 
case when total_reg_1_6 = 0 then 0 else round(weighed_1_6*100.0/total_reg_1_6,2) end as "percent_col_Children weighed",
weighed_less_than_2_5_1_6 as "Out of weighed, less than 2.5 kg", 
case when total_reg_1_6 = 0 then 0 else round(weighed_less_than_2_5_1_6*100.0/total_reg_1_6,2) end as "percent_col_Out of weighed, less than 2.5 kg",
bcg_given_1_6  as "BCG given",
case when total_reg_1_6 = 0 then 0 else round(bcg_given_1_6*100.0/total_reg_1_6 ,2) end as "percent_col_BCG given",
dpt_1_given_1_6 as "DPT 1 given",
case when total_reg_1_6 = 0 then 0 else round(dpt_1_given_1_6*100.0/total_reg_1_6 ,2) end as "percent_col_DPT 1 given",
penta_1_given_1_6  as "Penta 1 given",
case when total_reg_1_6 = 0 then 0 else round(penta_1_given_1_6*100.0/total_reg_1_6,2) end as "percent_col_Penta 1 given",
opv_1_given_1_6  as "OPV 1 given",
case when total_reg_1_6 = 0 then 0 else round(opv_1_given_1_6*100.0/total_reg_1_6,2) end as "percent_col_OPV 1 given",
fipv_1_given_1_6 as "FIPV 1 given",
case when total_reg_1_6 = 0 then 0 else round(fipv_1_given_1_6*100.0/total_reg_1_6 ,2) end as "percent_col_FIPV 1 given",
dpt_2_given_1_6 as "DPT 2 given",
case when total_reg_1_6 = 0 then 0 else round(dpt_2_given_1_6*100.0/total_reg_1_6 ,2) end as "percent_col_DPT 2 given", 
penta_2_given_1_6  as "Penta 2 given",
case when total_reg_1_6 = 0 then 0 else round(penta_2_given_1_6*100.0/total_reg_1_6,2) end as "percent_col_Penta 2 given",
opv_2_given_1_6  as "OPV 2 given",
case when total_reg_1_6 = 0 then 0 else round(opv_2_given_1_6*100.0/total_reg_1_6,2) end as "percent_col_OPV 2 given",
dpt_3_given_1_6 as "DPT 3 given",
case when total_reg_1_6 = 0 then 0 else round(dpt_3_given_1_6*100.0/total_reg_1_6 ,2) end as "percent_col_DPT 3 given", 
penta_3_given_1_6 as "Penta 3 given",
case when total_reg_1_6 = 0 then 0 else round(penta_3_given_1_6*100.0/total_reg_1_6 ,2) end as "percent_col_Penta 3 given",
opv_3_given_1_6 as "OPV 3 given",
case when total_reg_1_6 = 0 then 0 else round(opv_3_given_1_6*100.0/total_reg_1_6,2) end as "percent_col_OPV 3 given", 
fipv_2_given_1_6 as "FIPV 2 given",
case when total_reg_1_6 = 0 then 0 else round(fipv_2_given_1_6*100.0/total_reg_1_6,2) end as "percent_col_FIPV 2 given", 
measles_1_given_1_6 as "Measles 1 given",
case when total_reg_1_6 = 0 then 0 else round(measles_1_given_1_6*100.0/total_reg_1_6 ,2) end as "percent_col_Measles 1 given",
measles_rubella_1_given_1_6  as "Measles Rubella 1 given",
case when total_reg_1_6 = 0 then 0 else round(measles_rubella_1_given_1_6 *100.0/total_reg_1_6 ,2) end as "percent_col_Measles Rubella 1 given",
fully_immunized_1_6  as "Fully immuised",
case when total_reg_1_6 = 0 then 0 else round(fully_immunized_1_6*100.0/total_reg_1_6 ,2) end as "percent_col_Fully immuised"
from s
union all
select 
null, 
''<b>Total</b>'',
#location_id#,
sum(total_reg_1_6),
cast(sum(case when ela_dpt_opv_mes_vita_1dose is not null then ela_dpt_opv_mes_vita_1dose else 0 end) as text),
sum(weighed_1_6),
case when sum(total_reg_1_6) = 0 then 0 else round(sum(weighed_1_6)*100.0/sum(total_reg_1_6),2) end,
sum(weighed_less_than_2_5_1_6),
case when sum(total_reg_1_6) = 0 then 0 else round(sum(weighed_less_than_2_5_1_6)*100.0/sum(total_reg_1_6),2) end,
sum(bcg_given_1_6),
case when sum(total_reg_1_6) = 0 then 0 else round(sum(bcg_given_1_6)*100.0/sum(total_reg_1_6),2) end,
sum(dpt_1_given_1_6),
case when sum(total_reg_1_6) = 0 then 0 else round(sum(dpt_1_given_1_6)*100.0/sum(total_reg_1_6),2) end,
sum(penta_1_given_1_6),
case when sum(total_reg_1_6) = 0 then 0 else round(sum(penta_1_given_1_6)*100.0/sum(total_reg_1_6),2) end, 
sum(opv_1_given_1_6),
case when sum(total_reg_1_6) = 0 then 0 else round(sum(opv_1_given_1_6)*100.0/sum(total_reg_1_6),2) end, 
sum(fipv_1_given_1_6),
case when sum(total_reg_1_6) = 0 then 0 else round(sum(fipv_1_given_1_6)*100.0/sum(total_reg_1_6),2) end, 
sum(dpt_2_given_1_6),
case when sum(total_reg_1_6) = 0 then 0 else round(sum(dpt_2_given_1_6)*100.0/sum(total_reg_1_6),2) end,
sum(penta_2_given_1_6),
case when sum(total_reg_1_6) = 0 then 0 else round(sum(penta_2_given_1_6)*100.0/sum(total_reg_1_6),2) end,
sum(opv_2_given_1_6),
case when sum(total_reg_1_6) = 0 then 0 else round(sum(opv_2_given_1_6)*100.0/sum(total_reg_1_6),2) end,
sum(dpt_3_given_1_6),
case when sum(total_reg_1_6) = 0 then 0 else round(sum(dpt_3_given_1_6)*100.0/sum(total_reg_1_6),2) end,
sum(penta_3_given_1_6),
case when sum(total_reg_1_6) = 0 then 0 else round(sum(penta_3_given_1_6)*100.0/sum(total_reg_1_6),2) end,
sum(opv_3_given_1_6),
case when sum(total_reg_1_6) = 0 then 0 else round(sum(opv_3_given_1_6)*100.0/sum(total_reg_1_6),2) end,
sum(fipv_2_given_1_6),
case when sum(total_reg_1_6) = 0 then 0 else round(sum(fipv_2_given_1_6)*100.0/sum(total_reg_1_6),2) end,
sum(measles_1_given_1_6),
case when sum(total_reg_1_6) = 0 then 0 else round(sum(measles_1_given_1_6)*100.0/sum(total_reg_1_6),2) end,
sum(measles_rubella_1_given_1_6),
case when sum(total_reg_1_6) = 0 then 0 else round(sum(measles_rubella_1_given_1_6)*100.0/sum(total_reg_1_6),2) end,
sum(fully_immunized_1_6),
case when sum(total_reg_1_6) = 0 then 0 else round(sum(fully_immunized_1_6)*100.0/sum(total_reg_1_6),2) end
from s;',true,'ACTIVE','ff2b40e9-b6d6-49f7-9f5c-0f1df44c9761');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (99,1027,'2018-11-14 18:37:28.075',1,'2021-01-13 20:22:06.427965','to_month,loggedInUserId,from_month,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#
), ldp as(
	select child_id,(case when prefered_language.is_enlish and location_master.english_name is not null then location_master.english_name
else location_master.name end) as name
	from location_hierchy_closer_det, location_master ,  prefered_language 
	where parent_id = #location_id# and depth = 1 
	and location_master.id = location_hierchy_closer_det.child_id
), r as(
	select lhcd.parent_id as id, 
	/*coalesce(sum(stat.total_delivery),0) as total_delivery, */
	coalesce(sum(stat.live_births_since_april_1),0) as live_birth_delivery, 
	coalesce(sum(stat.still_birth_delivery),0) as still_birth_delivery, 
	coalesce(sum(stat.infant_death),0) as infant_death, 
	coalesce(sum(stat.neonatal_death),0) as neonatal_death, 
	coalesce(sum(stat.early_neonatal_death),0) as early_neonatal_death, 
	coalesce(sum(stat.lbw_death),0) as lbw_death,
	coalesce(sum(stat.asphyxia_death),0) as asphyxia_death,
	coalesce(sum(stat.pnuemonia_death),0) as pnuemonia_death,
	coalesce(sum(stat.diarhoeaa_death),0) as diarhoeaa_death,
	coalesce(sum(stat.measles_death),0) as measles_death,
	coalesce(sum(stat.high_fever_death),0) as high_fever_death,
	coalesce(sum(stat.infant_death - (stat.lbw_death+stat.asphyxia_death+stat.pnuemonia_death+stat.diarhoeaa_death+stat.measles_death+stat.high_fever_death)),0) as other_death
	--coalesce(sum(stat.other_death),0) as other_death
	from ldp
	inner join location_hierchy_closer_det lhcd on lhcd.parent_id = ldp.child_id
	left join child_services_given_analytics stat on lhcd.child_id = stat.location_id
	where stat.month_year between to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'')
	and to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')
	group by lhcd.parent_id
),del_detail as (
select lhcd.parent_id as id, 
coalesce(sum(no_of_delivery),0) as total_delivery
from ldp
inner join location_hierchy_closer_det lhcd on lhcd.parent_id = ldp.child_id
left join rch_service_provided_during_year stat on lhcd.child_id = stat.location_id
where stat.month_year between to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'')
and to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')
group by lhcd.parent_id
), s as(
	select ldp.name,
	ldp.child_id,
	coalesce(del_detail.total_delivery,0) as total_delivery, 
	coalesce(r.live_birth_delivery,0) as live_birth_delivery, 
	coalesce(r.still_birth_delivery,0) as still_birth_delivery, 
	coalesce(r.infant_death,0) as infant_death, 
	coalesce(r.neonatal_death,0) as neonatal_death, 
	coalesce(r.early_neonatal_death,0) as early_neonatal_death, 
	coalesce(r.lbw_death,0) as lbw_death,
	coalesce(r.asphyxia_death,0) as asphyxia_death,
	coalesce(r.pnuemonia_death,0) as pnuemonia_death,
	coalesce(r.diarhoeaa_death,0) as diarhoeaa_death,
	coalesce(r.measles_death,0) as measles_death,
	coalesce(r.high_fever_death,0) as high_fever_death,
	coalesce(r.other_death,0) as other_death
	from ldp left join r on ldp.child_id = r.id 
	left join del_detail on ldp.child_id = del_detail.id
	order by ldp.name
)
select  row_number() over() as "Sr. no", 
name as  "Location", 
child_id as hidden_location_id,
total_delivery as "Total Delivery",
live_birth_delivery  as "Live Birth", 
case when (live_birth_delivery + still_birth_delivery)  = 0 then 0 else round(live_birth_delivery*100.0/(live_birth_delivery + still_birth_delivery),2) end as "percent_col_Live Birth",
still_birth_delivery  as "Still birth", 
case when (live_birth_delivery + still_birth_delivery) = 0 then 0 else round(still_birth_delivery*100.0/(live_birth_delivery + still_birth_delivery),2) end as "percent_col_Still birth",
infant_death  as "Infant Deaths (0-1 year)",
case when live_birth_delivery = 0 then 0 else round(infant_death*100.0/live_birth_delivery ,2) end as "percent_col_Infant Deaths (0-1 year)",
neonatal_death as "Neonatal deaths (0-28 days of birth)",
case when infant_death = 0 then 0 else round(neonatal_death*100.0/infant_death ,2) end as "percent_col_Neonatal deaths (0-28 days of birth)",
early_neonatal_death as "Early neonatal deaths (0-7 days of birth)",
case when neonatal_death = 0 then 0 else round(early_neonatal_death*100.0/neonatal_death,2) end as "percent_col_Early neonatal deaths (0-7 days of birth)", 
lbw_death  as "LBW",
case when infant_death = 0 then 0 else round(lbw_death*100.0/infant_death,2) end as "percent_col_LBW",
asphyxia_death as "Asphyxia",
case when infant_death = 0 then 0 else round(asphyxia_death*100.0/infant_death ,2) end as "percent_col_Asphyxia", 
pnuemonia_death  as "Pneumonia",
case when infant_death = 0 then 0 else round(pnuemonia_death*100.0/infant_death ,2) end as "percent_col_Pneumonia",
diarhoeaa_death  as "Diarrhoea",
case when infant_death = 0 then 0 else round(diarhoeaa_death*100.0/infant_death,2) end as "percent_col_Diarrhoea",
measles_death  as "Measles",
case when infant_death = 0 then 0 else round(measles_death*100.0/infant_death,2) end as "percent_col_Measles",
high_fever_death  as "High fever",
case when infant_death = 0 then 0 else round(high_fever_death*100.0/infant_death ,2) end as "percent_col_High fever",
other_death  as "Others",
case when infant_death = 0 then 0 else round(other_death*100.0/infant_death ,2) end as "percent_col_Others"
from s
union all
select 
null, 
''<b>Total</b>'', 
#location_id#,
sum(total_delivery), 
sum(live_birth_delivery),
case when sum(live_birth_delivery + still_birth_delivery) = 0 then 0 else round(sum(live_birth_delivery)*100.0/sum(live_birth_delivery + still_birth_delivery),2) end, 
sum(still_birth_delivery),
case when sum(live_birth_delivery + still_birth_delivery) = 0 then 0 else round(sum(still_birth_delivery)*100.0/sum(live_birth_delivery + still_birth_delivery),2) end, 
sum(infant_death),
case when sum(live_birth_delivery) = 0 then 0 else round(sum(infant_death)*100.0/sum(live_birth_delivery),2) end, 
sum(neonatal_death),
case when sum(infant_death) = 0 then 0 else round(sum(neonatal_death)*100.0/sum(infant_death),2) end,
sum(early_neonatal_death),
case when sum(neonatal_death) = 0 then 0 else round(sum(early_neonatal_death)*100.0/sum(neonatal_death),2) end, 
sum(lbw_death),
case when sum(infant_death) = 0 then 0 else round(sum(lbw_death)*100.0/sum(infant_death),2) end, 
sum(asphyxia_death),
case when sum(infant_death) = 0 then 0 else round(sum(asphyxia_death)*100.0/sum(infant_death),2) end, 
sum(pnuemonia_death),
case when sum(infant_death) = 0 then 0 else round(sum(pnuemonia_death)*100.0/sum(infant_death),2) end,
sum(diarhoeaa_death),
case when sum(infant_death) = 0 then 0 else round(sum(diarhoeaa_death)*100.0/sum(infant_death),2) end, 
sum(measles_death),
case when sum(infant_death) = 0 then 0 else round(sum(measles_death)*100.0/sum(infant_death),2) end, 
sum(high_fever_death),
case when sum(infant_death) = 0 then 0 else round(sum(high_fever_death)*100.0/sum(infant_death),2) end, 
sum(other_death),
case when sum(infant_death) = 0 then 0 else round(sum(other_death)*100.0/sum(infant_death),2) end
from s;',true,'ACTIVE','76a74e47-a6b9-4a47-89a7-b0e9ab8bb8e2'),
	 (1156,63746,'2019-05-28 18:33:17.284',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','c0431ecb-7024-4ffa-8663-af6c24cae5cc'),
	 (1451,74841,'2019-12-11 15:26:02.022',1,'2021-01-13 20:22:06.427965',NULL,'with types as (
select ''''''MOTHER_ANC'''''' as key,''Mother Anc'' as value, 1 as ord
union
select ''''''MOTHER_PNC'''''' as key, ''Mother Pnc'' as value, 2 as ord
union
select ''''''CHILD_PNC'''''' as key, ''Child Pnc'' as value, 3 as ord
union
select ''''''CHILD_TRACKING'''''' as key,''Child Tracking'' as value, 4 as ord
union
select ''''''MOTHER_INFRANT'''''' as key, ''Mother Infrant'' as value, 5 as ord
union
select ''''''MOTHER_REGISTRATION'''''' as key, ''Mother Registration'' as value, 6 as ord
union
select ''''''CHILD_REGISTRATION'''''' as key,''Child Registration'' as value, 7 as ord
union
select ''''''MOTHER_DELIVERY'''''' as key, ''Mother Delivery'' as value, 8 as ord
union
select ''''''ELIGIBLE_COUPLE'''''' as key,''Eligible Couple'' as value, 9 as ord
union
select ''''''MOTHER_MEDICAL'''''' as key,''Mother Medical'' as value, 10 as ord
union
select ''''''CHILD_MEDICAL'''''' as key,''Child Medical'' as value, 11 as ord
union
select ''''''ELIGIBLE_COUPLE_TRACKING'''''' as key,''Eligible Couple Tracking'' as value, 12 as ord
)select * from types order by ord',true,'ACTIVE','4ec04ddc-33d0-4cf9-a1f5-a76eba2f8d98'),
	 (633,63746,'2019-02-19 14:59:19.649',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,high_risk_condition,location_id','with location_det as(
	select child_id as loc_id from location_hierchy_closer_det where parent_id = #location_id#
),dates as(
	select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'')+interval ''1 day'' - interval ''1 millisecond'' as to_date
),highriskusr as (
(select member_id,reg_service_date as filter_date
from rch_pregnancy_analytics_details,dates,location_det
where reg_service_date between dates.from_date and dates.to_date
and member_current_location_id = location_det.loc_id  
and ( (cur_severe_anemia = true and (''#high_risk_condition#'' in (''Severe Maternal Anemia''))) 
	or (cur_blood_pressure_issue = true and (''#high_risk_condition#'' in (''High BP''))))
#limit_offset#)

union

(select member_id, dob as filter_date
from rch_child_analytics_details,dates,location_det
where dob between dates.from_date and dates.to_date
and rch_child_analytics_details.member_id is not null
and rch_child_analytics_details.loc_id = location_det.loc_id
and birth_weight < 3
and ''#high_risk_condition#'' in (''Very Low Birth Weight'')
#limit_offset#)

union

(select member_id,dob as filter_date
from rch_child_analytics_details,dates,location_det
where dob between dates.from_date - interval ''6 year'' and dates.to_date - interval ''6 month''
and member_id is not null and rch_child_analytics_details.loc_id = location_det.loc_id
and is_sam_child = true
and ''#high_risk_condition#'' in (''SAM'')
#limit_offset#)
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
mem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')'' as "Member Name",
filter_date as "RegServiceDate(Mother)/BirthDate(Child)",
case when mem.mobile_number is null then ''N/A'' else
	mem.mobile_number end as "Mobile Number"
,case 
	when hod.mobile_number is not null then 
		hod.first_name || '' '' || hod.middle_name || '' '' || hod.last_name || '' ('' || hod.mobile_number  || '')''
	else hod.first_name || '' '' || hod.middle_name || '' '' || hod.last_name
end as "Head Of Family"
,string_agg(lm.name,''> '' order by lhcd.depth desc) as "Location Hierarchy"
from highriskusr  
inner join imt_member mem on highriskusr.member_id = mem.id
inner join imt_family fam on mem.family_id = fam.family_id
left join imt_member hod on fam.family_id = hod.family_id and hod.family_head = true
inner join location_hierchy_closer_det lhcd on (case when fam.area_id is null then fam.location_id else cast(fam.area_id as bigint) end) = lhcd.child_id
inner join location_master lm on lm.id = lhcd.parent_id 
group by mem.first_name, mem.middle_name, mem.last_name, mem.mobile_number,hod.mobile_number,hod.first_name,hod.middle_name,hod.last_name,mem.unique_health_id,filter_date',true,'ACTIVE','9e83d6ac-34d3-4f2d-b09e-bcc252171102'),
	 (1667,409,'2020-06-30 15:03:59.226',1,'2021-01-13 20:22:06.427965','age','select case when #age# = 8 then 7.5 else #age# end as age',true,'ACTIVE','d895d052-3ea5-436f-b62a-16fdc92246c2'),
	 (462,1,'2019-02-14 13:19:30.754',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','51506811-5d3b-4507-990f-504683d0a7b2'),
	 (511,1,'2019-02-14 15:55:44.921',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,demographic_location_id,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#
)
,parameter as (
	select CAST(''#demographic_location_id#'' AS TEXT) as demographic_group
)
,child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
    inner join parameter p on true = true
	where l.child_id = c.opv0_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.opv0 is not null
    and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	group by m.id, f.location_id, c.dob, opv0
	having cast(date_trunc(''month'', opv0) as date) between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','2443dec3-a7fb-4f81-b1c0-e099013ad0cc'),
	 (898,64189,'2019-03-07 11:04:56.535',1,'2021-01-13 20:22:06.427965','from_date','select to_char(to_date(''#from_date#'',''MM/DD/YYYY''),''DD/MM/YYYY'') as from_date;',true,'ACTIVE','994b53b1-05c2-4c37-8128-633be6644864'),
	 (899,64189,'2019-03-07 11:04:56.54',1,'2021-01-13 20:22:06.427965','to_date','select to_char(to_date(''#to_date#'',''MM/DD/YYYY''),''DD/MM/YYYY'') as to_date;',true,'ACTIVE','ce3212b5-1205-4079-9c14-df169607f24a'),
	 (732,58981,'2019-03-01 17:16:32.015',1,'2021-01-13 20:22:06.427965','health_infra_id','select name as health_infra_id from health_infrastructure_details where id = #health_infra_id#',true,'ACTIVE','3a8ed233-e942-4b43-b820-f83b6ccca016');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1664,74840,'2020-06-29 16:41:18.393',1,'2021-01-13 20:22:06.427965',NULL,'with series as (
select generate_series(5,7) as age
union all 
select 7.5)
select age from series',true,'ACTIVE','d895d052-3ea5-436f-b62a-16fdc92246c1'),
	 (947,63746,'2019-04-09 11:26:38.525',1,'2021-01-13 20:22:06.427965','from_date,to_date','with highrisk_member as (
	select * from gvk_high_risk_follow_up_usr_info where gvk_call_state in (
		''com.argusoft.imtecho.gvk.call.pickedup-schedule-for-next-visit'',
		''com.argusoft.imtecho.gvk.call.schedule-pending-for-next-visit'',
		''com.argusoft.imtecho.gvk.call.beneficiary-not-pickedup-by-108-pickedup-schedule'',
		''com.argusoft.imtecho.gvk.call.processed-anemia'',
		''com.argusoft.imtecho.gvk.call.processed-child-addmited-to-cmtc-lbw'',
		''com.argusoft.imtecho.gvk.call.processed-child-addmited-to-sncu-sam'',
		''com.argusoft.imtecho.gvk.call.beneficiary-not-visited-phc-pickedup-schedule'',
		''com.argusoft.imtecho.gvk.call.beneficiary-not-interested-to-reschedule-pickup-date''
	)
	and modified_on between 
                        cast(case when ''#from_date#'' = ''null'' then ''01-01-1970'' else ''#from_date#'' end as date)
				and 
			cast(case when ''#to_date#'' = ''null'' then ''01-01-1970'' else ''#to_date#'' end as date) + interval ''1 day'')
,treatment_perform as(
	select max(res.id) as id from highrisk_member req 
	inner join gvk_high_risk_follow_up_responce res on req.id = res.gvk_high_risk_usr_id 
	where res.gvk_call_response_status = ''com.argusoft.imtecho.gvk.call.success''
	group by res.gvk_high_risk_usr_id 
)
,display_det as(
	select TO_CHAR( hrisk.created_on,''DD-MM-YYYY'') as "Date",
	TO_CHAR(hrisk.created_on,''HH12:MI:SS'') as "Time",
	mem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')'' as "Beneficiary Name",
	req.call_attempt as "Follow up Call No", TO_CHAR(req.pickup_schedule_date,''DD-MM-YYYY HH12:MI:SS'') as "Visit Schedule On",
	case when hrisk.is_108_pickedup_beneficiary = true then ''YES'' else ''NO'' end  as "Did Pick Up Come",
	case when hrisk.is_beneficiary_visited_phc = true then ''YES'' else ''NO'' end as "Did They Visit Medical Facility",
	req.diseases as "Highrisk Condition",
	case when req.diseases like ''%SAM%'' then 
		case when (hrisk.is_beneficiary_child_admitted_to_cmtc_sam = ''true'') then ''YES'' else ''NO'' end
	 when req.diseases like ''%Very Low Birth Weight%'' then 
		case when hrisk.is_new_birth_child_admitted_to_hospital_for_low_birth_weight = ''true'' then ''YES'' else ''NO'' end
	 when req.diseases like ''%High BP%'' then 
		case when hrisk.is_beneficiary_received_drugs_for_high_bp = ''true'' then ''YES'' else ''NO'' end
	 when req.diseases like ''%Severe Maternal Anemia%'' then 
		case when (hrisk.is_beneficiary_received_blood_lastweek_anemia = true or 
				hrisk.is_beneficiary_received_iron_sucrose_injection_anemia = ''yes'' or
					hrisk.is_beneficiary_received_fcm_lastweek_anemia = ''yes'' )  then ''YES'' else ''NO'' end
	 else ''NO''
	end as "Did They Get Treatment"
	from gvk_high_risk_follow_up_responce hrisk 
	inner join treatment_perform tp on hrisk.id = tp.id 
	inner join gvk_high_risk_follow_up_usr_info req on req.id = hrisk.gvk_high_risk_usr_id
	inner join imt_member mem on hrisk.member_id = mem.id 
	inner join imt_family fam on mem.family_id = fam.family_id 
	inner join um_user creator on hrisk.created_by = creator.id
	inner join um_user_location fhw on fam.location_id = fhw.loc_id  and fhw.state = ''ACTIVE'' 
	inner join um_user fhwnam on fhw.user_id = fhwnam.id and fhwnam.role_id = 30 and fhwnam.state = ''ACTIVE'' and fhwnam.contact_number is not null
	left join um_user_location ashaLoc on fam.area_id = ashaLoc.loc_id  and ashaLoc.state = ''ACTIVE'' 
	left join um_user ashanam on ashaLoc.user_id = ashanam.id and ashanam.role_id = 24 and ashanam.state = ''ACTIVE'' 
	left join location_hierchy_closer_det lhcd on (case when fam.area_id is null then fam.location_id else cast(fam.area_id as bigint) end) = lhcd.child_id 
	left join location_master lm on lm.id = lhcd.parent_id 
	group by hrisk.member_id,mem.unique_health_id,mem.first_name ,mem.middle_name,mem.last_name,mem.unique_health_id,mem.mobile_number,
	fhwnam.contact_number,fhwnam.first_name,fhwnam.middle_name,fhwnam.last_name,req.diseases,req.highrisk_reason,hrisk.is_beneficiary_willing_to_helped,
	hrisk.schedule_date,hrisk.is_schedule_pending,req.call_attempt,hrisk.created_on,req.pickup_schedule_date,hrisk.is_108_pickedup_beneficiary,
	hrisk.is_beneficiary_visited_phc,req.diseases,hrisk.is_beneficiary_child_admitted_to_cmtc_sam,hrisk.is_new_birth_child_admitted_to_hospital_for_low_birth_weight,
	hrisk.is_beneficiary_received_drugs_for_high_bp,hrisk.is_beneficiary_received_blood_lastweek_anemia,hrisk.is_beneficiary_received_iron_sucrose_injection_anemia,
	hrisk.is_beneficiary_received_fcm_lastweek_anemia
	
	order by hrisk.created_on
)
select ROW_NUMBER() over ()  as "Sr No",* from display_det',true,'ACTIVE','ec430835-1705-417c-8325-8aba896680eb'),
	 (265,1,'2019-02-05 12:33:25.253',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','e5a3a96a-4f5e-40a7-a260-109ef70de986'),
	 (1333,60512,'2019-08-19 17:08:40.315',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','77f1dd8c-dc64-4901-aca4-289331aee33d'),
	 (1187,409,'2019-07-05 11:25:34.101',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','b4b14eb0-4827-47a7-84b9-7a532cd06e03'),
	 (1285,63746,'2019-08-07 14:13:59.486',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','b51c6d39-a353-42ef-9be6-5c589250787e'),
	 (166,58981,'2019-01-22 19:19:49.109',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,loggedInUserId,from_month,location_id','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#)
,dates as (
	select to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date
	,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date
)
, member_det as (
	select r.member_id, r.member_current_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, rch_pregnancy_registration_det p, dates d
	where r.member_id = m.id and r.member_current_location_id  = l.child_id and m.cur_preg_reg_det_id = p.id
	and l.parent_id = #location_id#
	and r.reg_service_date  between d.from_date and d.to_date
	and r.total_out_come>=3
	--and r.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')
	--and r.preg_reg_state in (''PENDING'',''PREGNANT'')
	order by p.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','cb12a4c6-6efe-4261-aeb6-d68b5535ab02'),
	 (1121,60512,'2019-05-02 15:42:55.484',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','4c928e2e-2ae4-4e87-97c0-727a49df4340'),
	 (1288,63746,'2019-08-07 14:13:59.528',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','cd2d32f2-3daa-4886-81d1-73ae9e2f8b05'),
	 (790,58981,'2019-03-06 15:39:45.72',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','0066e76d-11b9-4136-bce9-facee1faed12');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1228,409,'2019-07-24 10:16:53.32',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','903c8ed4-4edb-4c32-a33d-a56ab283cfa7'),
	 (21,1027,'2018-05-14 17:06:29.313',1,'2021-01-13 20:22:06.427965','location_id','select case when res."Location" is null then null else row_number() over () end as "Sr. No",coalesce(res."Location",''<b>Total</b>'') as "Location Name",
case when sum(res."TB") is null then 0 else  sum(res."TB") end as "TB",
case when sum(res."HIV") is null then 0 else sum(res."HIV") end as  "HIV",
case when sum(res."Leprosy") is null then 0 else sum(res."Leprosy") end as "Leprosy",
case when sum(res."Blindness") is null then 0 else sum(res."Blindness") end as "Blindness",
case when sum(res."Sickle Cell Disease") is null then 0 else sum(res."Sickle Cell Disease") end as "Sickle Cell Disease",
case when sum(res."Diabetes") is null then 0 else sum(res."Diabetes") end as "Diabetes",
case when sum(res."Thalessemia") is null then 0 else sum(res."Thalessemia") end as "Thalessemia"
from
(select lm.name as "Location",lwa.tb as "TB",lwa.hiv as "HIV",lwa.leprosy as "Leprosy",lwa.blindness as "Blindness",
lwa.sickle_cell as "Sickle Cell Disease",lwa.diabetes as "Diabetes",lwa.thalessemia as "Thalessemia"
from location_hierchy_closer_det lhcd inner join location_wise_analytics lwa
on lwa.loc_id = lhcd.child_id and lwa.loc_id = lhcd.parent_id inner join location_master lm
on lwa.loc_id = lm.id
where lwa.loc_id in (select child_id from location_hierchy_closer_det where parent_id = (#location_id#) and depth=1)) res
group by rollup(res."Location")',true,'ACTIVE','de92a051-8b84-4641-86d4-baecd4c58ac9'),
	 (498,1,'2019-02-14 15:32:39.863',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,demographic_location_id,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#
)
,parameter as (
	select CAST(''#demographic_location_id#'' AS TEXT) as demographic_group
)
,child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
    inner join parameter p on true = true
	where l.child_id = c.bcg_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.bcg is not null
    and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	group by m.id, f.location_id, c.dob, bcg
	having cast(date_trunc(''month'', bcg) as date) between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','f7134dc3-f58b-49e4-a3c6-7db2865b7a42'),
	 (24,1027,'2018-05-14 17:07:07.281',1,'2021-01-13 20:22:06.427965',NULL,'select id,first_name || '' '' || last_name || ''('' || user_name || '')'' as name from um_user where role_id = (select id from um_role_master  where code = ''GVKEMRI_RO'') order by name;',true,'ACTIVE','a5b25050-e088-4a65-80bf-eae37550d9f1'),
	 (25,1027,'2018-05-14 17:07:07.476',1,'2021-01-13 20:22:06.427965','from_date,from_date,from_date,to_date,to_date,to_date,to_date,user_id,user_id,from_date,from_date,from_date,to_date,to_date,to_date,to_date,user_id,user_id','select row_number() over () as "Sr. No",concat(us.first_name,'' '',us.last_name,''('',us.user_name,'')'') as "Agent Name",
sum(r1."Total Verified Family") as "Total Verified Family",
sum(r1."Sent For Revirification Total Family") as "Sent For Revirification Total Family",
sum(r1."Total Successful Calls") as "Total Successful Calls",
sum(r1."Total Not Reachable Calls") as "Total Not Reachable Calls",
sum(r1."Total Cant Talk Right Now Calls") as "Total Cant Talk Right Now Calls",
sum(r1."Total Unresponsive Calls") as "Total Unresponsive Calls",
sum(r1."Total Calls Attempted") as "Total Calls Attempted"
from 
(select gv.created_by,
sum(case when gv.state = ''com.argusoft.imtecho.family.state.emri.verified.ok'' then 1 else 0 end) as "Total Verified Family",
sum(case when gv.state = ''com.argusoft.imtecho.family.state.emri.fhw.reverification'' then 1 else 0 end) as "Sent For Revirification Total Family",
sum(case when gv.status = ''com.argusoft.imtecho.gvk.call.success'' then 1 else 0 end) as "Total Successful Calls",
sum(case when gv.status = ''com.argusoft.imtecho.gvk.call.not-reachable'' then 1 else 0 end) as "Total Not Reachable Calls",
sum(case when gv.status = ''com.argusoft.imtecho.gvk.call.cant-talk'' then 1 else 0 end) as "Total Cant Talk Right Now Calls",
sum(case when gv.status = ''com.argusoft.imtecho.gvk.call.unresponsive'' then 1 else 0 end) as "Total Unresponsive Calls",
sum(1) as "Total Calls Attempted"
from gvk_verification gv
where (#from_date# is null or gv.created_on >=(case when #from_date# is null then ''01/01/1970'' else ''#from_date#'' end)\:\:Date)
and (#to_date# is null or gv.created_on <=(case when #to_date# is null then ''01/01/1970'' else (date (case when #to_date# is null then ''01/01/1970'' else ''#to_date#'' end) + integer ''1'')end)\:\:Date)
and (#user_id# is null or gv.created_by = (#user_id#))
group by gv.created_by 
union
select av.created_by,
0 as "Total Verified Family",
0 as "Sent For Revirification Total Family",
sum(case when av.status = ''com.argusoft.imtecho.gvk.call.success'' then 1 else 0 end) as "Total Successful Calls",
sum(case when av.status = ''com.argusoft.imtecho.gvk.call.not-reachable'' then 1 else 0 end) as "Total Not Reachable Calls",
sum(case when av.status = ''com.argusoft.imtecho.gvk.call.cant-talk'' then 1 else 0 end) as "Total Cant Talk Right Now Calls",
sum(case when av.status = ''com.argusoft.imtecho.gvk.call.unresponsive'' then 1 else 0 end) as "Total Unresponsive Calls",
sum(1) as "Total Calls Attempted"
from gvk_absent_verification av
where (#from_date# is null or av.created_on >=(case when #from_date# is null then ''01/01/1970'' else ''#from_date#'' end)\:\:Date)
and (#to_date# is null or av.created_on <=(case when #to_date# is null then ''01/01/1970'' else (date (case when #to_date# is null then ''01/01/1970'' else ''#to_date#'' end) + integer ''1'')end)\:\:Date)
and (#user_id# is null or av.created_by = (#user_id#))
group by av.created_by) r1,um_user us
where r1.created_by = us.id and us.role_id = (select id from um_role_master where code = ''GVKEMRI_RO'')
group by us.id',true,'ACTIVE','d6306f1a-f03a-4d0b-8a48-f8deecb484d5'),
	 (26,1027,'2018-05-14 17:07:18.35',1,'2021-01-13 20:22:06.427965',NULL,'select id,first_name || '' '' || last_name || ''('' || user_name || '')'' as name from um_user where role_id = (select id from um_role_master  where code = ''GVKEMRI_RO'') order by name;',true,'ACTIVE','785b6e53-e056-48d8-a9d8-a994825ee6fa'),
	 (1303,63746,'2019-08-07 14:22:06.807',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,call_type,location_id','with unsuccess_calls as(
	select 
	*
	from ccc_manage_call_master master
	where call_response in (''com.argusoft.imtecho.ccc.call.cant-talk'')
	and location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and case when ''all'' = ''#call_type#'' then true else call_type = ''#call_type#'' end
and created_on between case when ''#from_date#'' = ''null'' then now() else to_date(''#from_date#'',''MM-DD-YYYY'') end and to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds'' 
order by id #limit_offset#

),
unsuccess_calls_details as (
	select 
	concat(im.first_name,'' '',im.last_name, ''('',im.unique_health_id ,'')'') as name,
	master.mobile_number,
master.created_on,
master.call_type,
	master.location_id,
	master.id,
	master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join imt_member im on im.id = master.member_id
	where call_response != ''com.argusoft.imtecho.ccc.call.success''
	
	union  all
	select 
	concat(uu.first_name,'' '',uu.last_name, ''('',role.name ,'')'') as name,
	master.mobile_number,
	master.created_on,
	master.call_type,
	master.location_id,
	master.id,
	master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join um_user uu on uu.id = master.user_id
	inner join um_role_master role on uu.role_id = role.id 
	where call_response != ''com.argusoft.imtecho.ccc.call.success''
	
       
	
),
response as (
select 
master.name,
case when call_response = ''com.argusoft.imtecho.ccc.call.no-number-available'' then ''No number available''
when call_response = ''com.argusoft.imtecho.ccc.call.cant-talk'' then ''Can''''t talk''
when call_response = ''com.argusoft.imtecho.ccc.call.wrong-mobile-number'' then ''Wrong mobile number''
when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-asha-husband'' then ''Number belongs to asha''	-- todo
--when call_response = ''com.argusoft.imtecho.ccc.call.not-interested-in-treatment'' then ''Not intersted in treatment''
when call_response = ''com.argusoft.imtecho.ccc.call.unresponsive'' then ''Unreponsive''
when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-anm-husband'' then ''Number belongs to anm'' 
when call_response = ''com.argusoft.imtecho.ccc.call.not-reachable'' then ''Not reachable''
when call_response = ''com.argusoft.imtecho.ccc.call.phone-switched-off'' then ''Phone switched off''
when call_response = ''com.argusoft.imtecho.ccc.call.number-collection-pending'' then ''Number collection pending''			-- todo
--when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-beneficiary-husband'' then ''number of beneficiary''
--when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-beneficiary''
--when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-beneficiarys-family-member''
--when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-beneficiarys-neighbour''
when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-anm-or-anm-husband'' then ''ANM or husband''			-- todo
when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-ashah-or-asha-husband'' then ''Asha or husband''			-- todo
else ''Other'' end reason,
master.mobile_number\:\:json,
master.location_id,
master.created_on,
master.call_type,
master.created_by,
master.id
from unsuccess_calls_details master
 ),
mo as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code in (''mo_phc'',''mo_uphc''))
),
mo_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	mo group by location_id
),
mo_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from mo_unique mo
	inner join um_user um on um.id = mo.mo_id
),
asha as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code = ''ASHA'')
),
asha_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	asha group by location_id
),
asha_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from asha_unique mo
	inner join um_user um on um.id = mo.mo_id
),
anm as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code = ''FHW'')
),
anm_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	anm group by location_id
),
anm_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from anm_unique mo
	inner join um_user um on um.id = mo.mo_id
),

contacts as (
	select json_array_elements(mobile_number)->>''mobileNumber'' as contact ,json_array_elements(mobile_number)->>''isCalled'' as isCalled ,id
	from response where mobile_number is not null ),
contacts_display_date as (	
	select string_agg(
	case when isCalled=''true'' then concat(''<b>'',contact,''</b>'') else contact end
	,'','') as contact,id from contacts
	group by id)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
resp.name as "Beneficiary Name (ID)",
contacts.contact as "Dialed Number",
to_char(resp.created_on,''DD-MM-YYYY HH:MI PM'') as  "Call Date",

case when resp.call_type = ''FOLL_OVE_SERV'' then ''Overdue services follow'' end as "Call Type",
resp.reason as "Reason for Unsuccessful Calling",
mo.name as "MO Details",
anm.name as "ANM Details",
asha.name as "ASHA Details"
,concat(um.first_name, '' '', um.last_name) as "RO Details"
--fhw.name
from response resp
left join contacts_display_date contacts on resp.id = contacts.id
left join mo_details mo on mo.location_id = resp.location_id
left join anm_details anm on anm.location_id = resp.location_id
left join asha_details asha on asha.location_id = resp.location_id
left join um_user um on resp.created_by = um.id',true,'ACTIVE','dfe2b1b9-e87a-4ff8-9207-ee68b5956255'),
	 (146,58981,'2019-01-21 19:10:27.282',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','8c0f33a6-3ee6-47fe-a1ef-12cf97208bc2'),
	 (969,60512,'2019-04-11 11:52:35.64',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','85035f01-a785-4ee8-9208-685f5d660e7f'),
	 (1189,409,'2019-07-05 13:19:59.039',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','fc38f8b2-706f-4154-842d-634eac04f583');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1308,63746,'2019-08-07 14:25:14.67',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,call_type,location_id','with unsuccess_calls as(
	select 
	*
	from ccc_manage_call_master master
	where call_response in (''com.argusoft.imtecho.ccc.call.cant-talk'',
	''com.argusoft.imtecho.ccc.call.no-number-available'',
	''com.argusoft.imtecho.ccc.call.wrong-mobile-number'',
        ''com.argusoft.imtecho.ccc.call.phone-switched-off'')
	and location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and case when ''all'' = ''#call_type#'' then true else call_type = ''#call_type#'' end
and created_on between case when ''#from_date#'' = ''null'' then now() else to_date(''#from_date#'',''MM-DD-YYYY'') end and to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds''
order by id #limit_offset#

),
unsuccess_calls_details as (
	select 
	concat(im.first_name,'' '',im.last_name, ''('',im.unique_health_id ,'')'') as name,
	master.mobile_number,
	master.created_on,
	master.call_type,
	master.location_id,
	master.id,
    master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join imt_member im on im.id = master.member_id
	where call_response != ''com.argusoft.imtecho.ccc.call.success''
	
	union all 
	select 
	concat(uu.first_name,'' '',uu.last_name, ''('',role.name ,'')'') as name,
	master.mobile_number,
	master.created_on,
	master.call_type,
	master.location_id,
	master.id,
    master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join um_user uu on uu.id = master.user_id
	inner join um_role_master role on uu.role_id = role.id 
	where call_response != ''com.argusoft.imtecho.ccc.call.success''

	
),
response as (
select 
master.name,
case when call_response = ''com.argusoft.imtecho.ccc.call.no-number-available'' then ''No number available''
when call_response = ''com.argusoft.imtecho.ccc.call.cant-talk'' then ''Can''''t talk''
when call_response = ''com.argusoft.imtecho.ccc.call.wrong-mobile-number'' then ''Wrong mobile number''
when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-asha-husband'' then ''Number belongs to asha''	-- todo
--when call_response = ''com.argusoft.imtecho.ccc.call.not-interested-in-treatment'' then ''Not intersted in treatment''
when call_response = ''com.argusoft.imtecho.ccc.call.unresponsive'' then ''Unreponsive''
when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-anm-husband'' then ''Number belongs to anm'' 
when call_response = ''com.argusoft.imtecho.ccc.call.not-reachable'' then ''Not reachable''
when call_response = ''com.argusoft.imtecho.ccc.call.phone-switched-off'' then ''Phone switched off''
when call_response = ''com.argusoft.imtecho.ccc.call.number-collection-pending'' then ''Number collection pending''			-- todo
--when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-beneficiary-husband'' then ''number of beneficiary''
--when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-beneficiary''
--when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-beneficiarys-family-member''
--when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-beneficiarys-neighbour''
when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-anm-or-anm-husband'' then ''ANM or husband''			-- todo
when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-ashah-or-asha-husband'' then ''Asha or husband''			-- todo
else ''Other'' end reason,
master.mobile_number\:\:json,
master.location_id,
master.created_on,
master.created_by,
master.call_type,
master.id
from unsuccess_calls_details master
 ),
mo as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code in (''mo_phc'',''mo_uphc''))
),
mo_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	mo group by location_id
),
mo_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from mo_unique mo
	inner join um_user um on um.id = mo.mo_id
),
asha as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code = ''ASHA'')
),
asha_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	asha group by location_id
),
asha_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from asha_unique mo
	inner join um_user um on um.id = mo.mo_id
),
anm as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code = ''FHW'')
),
anm_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	anm group by location_id
),
anm_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from anm_unique mo
	inner join um_user um on um.id = mo.mo_id
),


contacts as (
	select json_array_elements(mobile_number)->>''mobileNumber'' as contact ,json_array_elements(mobile_number)->>''isCalled'' as isCalled ,id
	from response where mobile_number is not null ),
contacts_display_date as (	
	select string_agg(
	case when isCalled=''true'' then concat(''<b>'',contact,''</b>'') else contact end
	,'','') as contact,id from contacts
	group by id)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
resp.name as "Called Person",
contacts.contact as "Dialed Number",
to_char(resp.created_on,''DD-MM-YYYY HH:MI PM'') as  "Call Date",

case when resp.call_type = ''FOLL_OVE_SERV'' then ''Overdue services follow'' end as "Call Type",
resp.reason as "Reason for Unsuccessful Calling",
mo.name as "MO Details",
anm.name as "ANM Details",
asha.name as "ASHA Details"
,concat(um.first_name, '' '', um.last_name) as "RO Details"
--fhw.name
from response resp
left join contacts_display_date contacts on resp.id = contacts.id
left join mo_details mo on mo.location_id = resp.location_id
left join anm_details anm on anm.location_id = resp.location_id
left join asha_details asha on asha.location_id = resp.location_id
left join um_user um on resp.created_by = um.id',true,'ACTIVE','e3df0493-9f50-4f73-b368-6182ca611655'),
	 (975,60512,'2019-04-11 11:58:21.263',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','1cee8cb7-1141-47fc-b232-3f45c0d94bfe'),
	 (45,1027,'2018-05-28 11:59:23.784',1,'2021-01-13 20:22:06.427965','from_date,to_date,user_id','select row_number() over (ORDER BY usr.first_name) as sr_no,usr.first_name || '' '' || usr.last_name as Name,FHS_Call_Number,Avg_Time_For_FHS_Call  from um_user usr inner join (
select created_by,count(*) As FHS_Call_Number,TO_CHAR((round(avg(processing_time)) || '' second'')\:\:interval, ''HH24:MI:SS'') As Avg_Time_For_FHS_Call 
from gvk_verification 
where (#user_id# is null or  created_by =#user_id#)   
and (#from_date# is null or created_on >=(case when #from_date# is null then ''01/01/1970'' else ''#from_date#'' end)\:\:Date)
and (#to_date# is null or created_on <(case when #to_date# is null then ''01/01/1970'' else (date (case when #to_date# is null then ''01/01/1970'' else ''#to_date#'' end) + integer ''1'')end)\:\:Date)
group by created_by) as fhsCallDetail 
on usr.id = fhsCallDetail.created_by
order by Name',true,'ACTIVE','94b4457a-12ea-4774-a42f-e54391695a54'),
	 (373,1,'2019-02-13 11:48:57.211',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','c46a57af-1e53-4f1f-8e2d-64f7ee57870a'),
	 (1230,409,'2019-07-24 10:16:53.376',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','716f6692-f130-4044-a224-9dce225fb1e7'),
	 (1275,63746,'2019-08-06 18:38:35.304',1,'2021-01-13 20:22:06.427965',NULL,'with  types as (
select ''all'' as key, ''All'' as value, 1 as ord
union
select ''FOLL_OVE_SERV'' as key,''Overdue services follow'' as value, 2 as ord)
select * from types order by ord',true,'ACTIVE','eef9196c-df79-47ca-a883-f3dac47f58a0'),
	 (1193,409,'2019-07-05 15:00:30.687',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Out of weighed, less than 2.5 kg (Yearly)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.delivery_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.delivery_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.birth_weight is not null and c.birth_weight < 2.5
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','fb72a9a2-5527-44b2-9bf7-a9c055db8589'),
	 (1305,63746,'2019-08-07 14:25:14.646',1,'2021-01-13 20:22:06.427965',NULL,'with  types as (
select ''all'' as key, ''All'' as value, 1 as ord
union
select ''FOLL_OVE_SERV'' as key,''Overdue services follow'' as value, 2 as ord)
select * from types order by ord',true,'ACTIVE','0cf150d7-c449-4f59-9112-5845a5508cba'),
	 (27,1027,'2018-05-14 17:07:18.358',1,'2021-01-13 20:22:06.427965','from_date,from_date,from_date,to_date,to_date,to_date,to_date,user_id,user_id','select row_number() over () as "Sr. No",concat(us.first_name,'' '',us.last_name,''('',us.user_name,'')'') as "Agent Name" ,
to_char(r1.created_on,''DD-MM-YYYY hh24:mi:ss'') as "Agent Break Time Out",to_char(r1.next_val,''DD-MM-YYYY hh24:mi:ss'') as "Agent Break Time In",
to_char(r1.next_val - r1.created_on,''hh24:mi:ss'') as "Total Break Hours"
from um_user us,
(select state,created_by,created_on,LEAD (created_on,1) OVER (
 PARTITION BY created_by
 ORDER BY
 created_on
 ) AS next_val
  from gvk_activity_log 
where (#from_date# is null or created_on >=(case when #from_date# is null then ''01/01/1970'' else ''#from_date#'' end)\:\:Date)
and (#to_date# is null or created_on <(case when #to_date# is null then ''01/01/1970'' else (date (case when #to_date# is null then ''01/01/1970'' else ''#to_date#'' end) + integer ''1'')end)\:\:Date)
and (#user_id# is null or created_by = (#user_id#))) r1
where r1.created_by = us.id and  r1.state = ''com.argusoft.imtecho.gvk.user.state.inactive''
and us.role_id = (select id from um_role_master where code = ''GVKEMRI_RO'');',true,'ACTIVE','c4bb7f94-8eb1-4fc3-b8cf-ad52d1bb67b0'),
	 (37,1027,'2018-05-14 17:28:01.361',1,'2021-01-13 20:22:06.427965',NULL,'select id,first_name || '' '' || last_name || ''('' || user_name || '')'' as name from um_user where role_id = (select id from um_role_master  where code = ''GVKEMRI_RO'') order by name;',true,'ACTIVE','fcf77a5e-7ff0-42cc-8238-a91268d486ef');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (540,1,'2019-02-14 16:20:37.888',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','39d21c8f-64b9-4b83-a765-5b2cacacada4'),
	 (38,1027,'2018-05-14 17:28:01.364',1,'2021-01-13 20:22:06.427965','user_id,user_id,from_date,from_date,from_date,to_date,to_date,to_date,to_date','select row_number() over (ORDER BY usr.first_name) as sr_no,usr.first_name || '' '' || usr.last_name as Name,FHS_Call_Number,Avg_Time_For_FHS_Call  from um_user usr inner join (
select created_by,count(*) As FHS_Call_Number,TO_CHAR((round(avg(processing_time)) || '' second'')\:\:interval, ''HH24:MI:SS'') As Avg_Time_For_FHS_Call 
from gvk_verification 
where (#user_id# is null or  created_by =#user_id#)   
and (#from_date# is null or created_on >=(case when #from_date# is null then ''01/01/1970'' else ''#from_date#'' end)\:\:Date)
and (#to_date# is null or created_on <(case when #to_date# is null then ''01/01/1970'' else (date (case when #to_date# is null then ''01/01/1970'' else ''#to_date#'' end) + integer ''1'')end)\:\:Date)
group by created_by) as fhsCallDetail 
on usr.id = fhsCallDetail.created_by
order by Name',true,'ACTIVE','2f9aa83b-8a73-4b28-929b-a46fa03ffeb3'),
	 (129,58981,'2019-01-11 15:55:59.643',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,loggedInUserId,location_id','with dates as(

select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date

, to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_date

),prefered_language as(

select (case 

when report_preferred_language = ''EN'' then true  

else false 

end) as is_enlish 

from um_user where id = #loggedInUserId#), 

 preg_women as (

	select rch_pregnancy_analytics_details.native_location_id as loc_id,

	imt_member.first_name || '' '' || imt_member.middle_name || '' '' || imt_member.last_name || '' ('' || imt_member.unique_health_id || '')'' || ''<br>'' || imt_member.family_id as member_det,

	to_char(imt_member.dob, ''DD/MM/YYYY'') as dob,

	to_char(rch_pregnancy_analytics_details.lmp_date, ''DD/MM/YYYY'') as lmp,

	case when rch_pregnancy_analytics_details.edd is null then cast(''N/A'' as text) else to_char(rch_pregnancy_analytics_details.edd, ''DD/MM/YYYY'') end as edd

	from rch_pregnancy_analytics_details,location_hierchy_closer_det,imt_member,imt_family,dates

	where location_hierchy_closer_det.parent_id = #location_id#

	and rch_pregnancy_analytics_details.native_location_id = location_hierchy_closer_det.child_id

	and rch_pregnancy_analytics_details.member_id = imt_member.id

	and imt_member.family_id = imt_family.family_id

	and rch_pregnancy_analytics_details.reg_service_date between dates.from_date and dates.to_date

	order by rch_pregnancy_analytics_details.lmp_date

	#limit_offset#

), loc as (

	select distinct loc_id from preg_women

), loc_det as (

	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 

	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 

	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id

	group by loc.loc_id

), fhw_det as (

	select loc.loc_id, 

	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 

	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw

	from um_user_location ul, um_user u, loc,location_hierchy_closer_det

	where loc.loc_id = location_hierchy_closer_det.child_id and

	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id

	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''

	and u.role_id = (select id from um_role_master where name = ''FHW'')

	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number

)

select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",

preg_women.member_det as "Member Details", 

loc_det.aoi as "Location",

preg_women.dob as "Date of Birth",

preg_women.lmp as "LMP Date",

preg_women.edd as "Estimated Delivery Date",

fhw_det.fhw as "FHW Details"

from preg_women 

inner join loc_det on preg_women.loc_id = loc_det.loc_id 

left join fhw_det on preg_women.loc_id = fhw_det.loc_id;',true,'ACTIVE','74696335-4b99-4a53-b155-b6eea5cb3d86'),
	 (1180,409,'2019-07-02 20:39:51.866',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','4d10267a-63fc-4444-bbe4-777a904ee4b5'),
	 (121,58981,'2019-01-09 14:53:22',1,'2021-01-13 20:22:06.427965','from_month_year,to_month_year,loggedInUserId,location_id','--------Immunisation Services Provided To Children With Date Of Birth-------
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 ldp as(
	select child_id, case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
else location_master.name end
	from location_hierchy_closer_det, location_master, prefered_language 
	where parent_id = #location_id# and depth = 1 
	and location_master.id = location_hierchy_closer_det.child_id
), r as(
	select lhcd.parent_id as id, 
	coalesce(sum(stat.total_live_births),0) as total_live_births, 
	coalesce(sum(stat.hep_b_given),0) as hep_b_given, 
	coalesce(sum(stat.opv_0_given),0) as opv_0_given, 
	coalesce(sum(stat.bcg_given),0) as bcg_given,
	coalesce(sum(stat.penta_1_given),0) as penta_1_given,
	coalesce(sum(stat.opv_1_given),0) as opv_1_given,
	coalesce(sum(stat.fipv_1_given),0) as fipv_1_given,
	coalesce(sum(stat.penta_2_given),0) as penta_2_given,
	coalesce(sum(stat.opv_2_given),0) as opv_2_given,
	coalesce(sum(stat.penta_3_given),0) as penta_3_given,
	coalesce(sum(stat.opv_3_given),0) as opv_3_given,
	coalesce(sum(stat.fipv_2_given),0) as fipv_2_given,
	coalesce(sum(stat.measles_1_given),0) as measles_1_given,
	coalesce(sum(stat.measles_rubella_1_given),0) as measles_rubella_1_given,
	coalesce(sum(stat.rota_virus_1_given),0) as rota_virus_1_given,
	coalesce(sum(stat.rota_virus_2_given),0) as rota_virus_2_given,
	coalesce(sum(stat.rota_virus_3_given),0) as rota_virus_3_given,
	coalesce(sum(stat.fully_immunized_before_11_months),0) as fully_immunized_before_11_months,
	coalesce(sum(stat.fully_immunized_after_11_months),0) as fully_immunized_after_11_months,
	coalesce(sum(stat.not_fully_immunized),0) as not_fully_immunized,
	coalesce(sum(stat.infant_death),0) as infant_death
	from ldp
	inner join location_hierchy_closer_det lhcd on lhcd.parent_id = ldp.child_id
	left join child_monthly_location_wise_analytics stat on lhcd.child_id = stat.location_id
	where stat.month_year between (case when #from_month_year# is null then ''01/01/1970'' else to_date(''#from_month_year#'',''MM/DD/YYYY'') end) 
	and (case when #to_month_year# is null then current_date else to_date(''#to_month_year#'',''MM/DD/YYYY'') end)
	group by lhcd.parent_id
), s as(
	select r.id, ldp.name,
	coalesce(r.total_live_births,0) as total_live_births, 
	coalesce(r.hep_b_given,0) as hep_b_given, 
	coalesce(r.opv_0_given,0) as opv_0_given, 
	coalesce(r.bcg_given,0) as bcg_given,
	coalesce(r.penta_1_given,0) as penta_1_given,
	coalesce(r.opv_1_given,0) as opv_1_given,
	coalesce(r.fipv_1_given,0) as fipv_1_given,
	coalesce(r.penta_2_given,0) as penta_2_given,
	coalesce(r.opv_2_given,0) as opv_2_given,
	coalesce(r.penta_3_given,0) as penta_3_given,
	coalesce(r.opv_3_given,0) as opv_3_given,
	coalesce(r.fipv_2_given,0) as fipv_2_given,
	coalesce(r.measles_1_given,0) as measles_1_given,
	coalesce(r.measles_rubella_1_given,0) as measles_rubella_1_given,
	coalesce(r.rota_virus_1_given,0) as rota_virus_1_given,
	coalesce(r.rota_virus_2_given,0) as rota_virus_2_given,
	coalesce(r.rota_virus_3_given,0) as rota_virus_3_given,
	coalesce(r.fully_immunized_before_11_months,0) as fully_immunized_before_11_months,
	coalesce(r.fully_immunized_after_11_months,0) as fully_immunized_after_11_months,
	coalesce(r.not_fully_immunized,0) as not_fully_immunized,
	coalesce(r.infant_death,0) as infant_death
	from ldp left join r on ldp.child_id = r.id 
	order by ldp.name
)
select  row_number() over() as "Sr. no",
id as hidden_location_id,
name as  "Location", 
total_live_births as "Child Registered with DOB",
hep_b_given  as "Hep B Birth Dose given", 
case when total_live_births = 0 then 0 else round(hep_b_given*100.0/total_live_births,2) end as "percent_col_Hep B Birth Dose given",
opv_0_given  as "OPV Zero dose given",
case when total_live_births = 0 then 0 else round(opv_0_given*100.0/total_live_births,2) end as "percent_col_OPV Zero dose given",
bcg_given as "BCG given",
case when total_live_births = 0 then 0 else round(bcg_given*100.0/total_live_births ,2) end as "percent_col_BCG given",
penta_1_given  as "Pentavalent 1 given",
case when total_live_births = 0 then 0 else round(penta_1_given*100.0/total_live_births ,2) end as "percent_col_Pentavalent 1 given",
opv_1_given as "OPV 1 given",
case when total_live_births = 0 then 0 else round(opv_1_given*100.0/total_live_births ,2) end as "percent_col_OPV 1 given",
fipv_1_given as "FIPV 1 given",
case when total_live_births = 0 then 0 else round(fipv_1_given*100.0/total_live_births ,2) end as "percent_col_FIPV 1 given",
penta_2_given as "Pentavalent 2 given",
case when total_live_births = 0 then 0 else round(penta_2_given*100.0/total_live_births ,2) end as "percent_col_Pentavalent 2 given",
opv_2_given as "OPV 2 given",
case when total_live_births = 0 then 0 else round(opv_2_given*100.0/total_live_births ,2) end as "percent_col_OPV 2 given", 
penta_3_given  as "Pentavalent 3 given",
case when total_live_births = 0 then 0 else round(penta_3_given*100.0/total_live_births ,2) end as "percent_col_Pentavalent 3 given",
opv_3_given as "OPV 3 given",
case when total_live_births = 0 then 0 else round(opv_3_given*100.0/total_live_births ,2) end as "percent_col_OPV 3 given",
fipv_2_given as "FIPV 2 given",
case when total_live_births = 0 then 0 else round(fipv_2_given*100.0/total_live_births ,2) end as "percent_col_FIPV 2 given",
measles_1_given as "Measles 1",
case when total_live_births = 0 then 0 else round(measles_1_given*100.0/total_live_births ,2) end as "percent_col_Measles 1",
measles_rubella_1_given as "Measles Rubella 1",
case when total_live_births = 0 then 0 else round(measles_rubella_1_given*100.0/total_live_births ,2) end as "percent_col_Measles Rubella 1",
rota_virus_1_given as "Rota Virus 1",
case when total_live_births = 0 then 0 else round(rota_virus_1_given*100.0/total_live_births ,2) end as "percent_col_Rota Virus 1",
rota_virus_2_given as "Rota Virus 2",
case when total_live_births = 0 then 0 else round(rota_virus_2_given*100.0/total_live_births ,2) end as "percent_col_Rota Virus 2",
rota_virus_3_given as "Rota Virus 3",
case when total_live_births = 0 then 0 else round(rota_virus_3_given*100.0/total_live_births ,2) end as "percent_col_Rota Virus 3",
fully_immunized_before_11_months as "Fully Immunised before 11 months",
case when total_live_births = 0 then 0 else round(fully_immunized_before_11_months*100.0/total_live_births ,2) end as "percent_col_Fully Immunised before 11 months",
fully_immunized_after_11_months as "Fully Immunised after 11 months",
case when total_live_births = 0 then 0 else round(fully_immunized_after_11_months*100.0/total_live_births ,2) end as "percent_col_Fully Immunised after 11 months",
not_fully_immunized  as "Not fully immunised",
case when total_live_births = 0 then 0 else round(not_fully_immunized*100.0/total_live_births ,2) end as "percent_col_Not fully immunised",
infant_death as "Infant death",
case when total_live_births = 0 then 0 else round(infant_death*100.0/total_live_births ,2) end as "percent_col_Infant death"
from s
union all
select 
null,
#location_id#, 
''<b>Total</b>'', 
sum(total_live_births), 
sum(hep_b_given),
case when sum(total_live_births) = 0 then 0 else round(sum(hep_b_given)*100.0/sum(total_live_births),2) end,
sum(opv_0_given), 
case when sum(total_live_births) = 0 then 0 else round(sum(opv_0_given)*100.0/sum(total_live_births),2) end,
sum(bcg_given),
case when sum(total_live_births) = 0 then 0 else round(sum(bcg_given)*100.0/sum(total_live_births),2) end,
sum(penta_1_given),
case when sum(total_live_births) = 0 then 0 else round(sum(penta_1_given)*100.0/sum(total_live_births),2) end,
sum(opv_1_given),
case when sum(total_live_births) = 0 then 0 else round(sum(opv_1_given)*100.0/sum(total_live_births),2) end,
sum(fipv_1_given),
case when sum(total_live_births) = 0 then 0 else round(sum(fipv_1_given)*100.0/sum(total_live_births),2) end,
sum(penta_2_given),
case when sum(total_live_births) = 0 then 0 else round(sum(penta_2_given)*100.0/sum(total_live_births),2) end, 
sum(opv_2_given),
case when sum(total_live_births) = 0 then 0 else round(sum(opv_2_given)*100.0/sum(total_live_births),2) end,
sum(penta_3_given),
case when sum(total_live_births) = 0 then 0 else round(sum(penta_3_given)*100.0/sum(total_live_births),2) end,
sum(opv_3_given),
case when sum(total_live_births) = 0 then 0 else round(sum(opv_3_given)*100.0/sum(total_live_births),2) end,
sum(fipv_2_given),
case when sum(total_live_births) = 0 then 0 else round(sum(fipv_2_given)*100.0/sum(total_live_births),2) end,
sum(measles_1_given),
case when sum(total_live_births) = 0 then 0 else round(sum(measles_1_given)*100.0/sum(total_live_births),2) end,
sum(measles_rubella_1_given),
case when sum(total_live_births) = 0 then 0 else round(sum(measles_rubella_1_given)*100.0/sum(total_live_births),2) end,
sum(rota_virus_1_given),
case when sum(total_live_births) = 0 then 0 else round(sum(rota_virus_1_given)*100.0/sum(total_live_births),2) end,
sum(rota_virus_2_given),
case when sum(total_live_births) = 0 then 0 else round(sum(rota_virus_2_given)*100.0/sum(total_live_births),2) end,
sum(rota_virus_3_given),
case when sum(total_live_births) = 0 then 0 else round(sum(rota_virus_3_given)*100.0/sum(total_live_births),2) end,
sum(fully_immunized_before_11_months),
case when sum(total_live_births) = 0 then 0 else round(sum(fully_immunized_before_11_months)*100.0/sum(total_live_births),2) end,
sum(fully_immunized_after_11_months),
case when sum(total_live_births) = 0 then 0 else round(sum(fully_immunized_after_11_months)*100.0/sum(total_live_births),2) end,
sum(not_fully_immunized),
case when sum(total_live_births) = 0 then 0 else round(sum(not_fully_immunized)*100.0/sum(total_live_births),2) end,
sum(infant_death),
case when sum(total_live_births) = 0 then 0 else round(sum(infant_death)*100.0/sum(total_live_births),2) end
from s;',true,'ACTIVE','068b8551-500c-4231-970e-941fb0227dd3'),
	 (487,57698,'2019-02-14 14:23:27.41',1,'2021-01-13 20:22:06.427965','location_id','select name as location_id from location_master  where id = #location_id#',true,'ACTIVE','7271576a-4815-4889-b713-a603ea06cb1b'),
	 (336,1,'2019-02-12 17:40:38.299',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','cc5523a2-ebfe-4bb7-a129-ebafe32026bd'),
	 (524,1,'2019-02-14 16:05:58.105',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','56a12f27-9027-4b71-a6ca-c0e02dca8530'),
	 (61,1027,'2018-07-20 11:49:04.396',1,'2021-01-13 20:22:06.427965','user_id,location_id','select ROW_NUMBER() over() as "S No.",fam.family_id as "Family ID",
case when fam.contact_person_id is not null then mem.first_name || '' '' || mem.last_name else ''NA'' end as "Contact Person",
case when mem.mobile_number is not null then mem.mobile_number else ''NA'' end as "Contact No" 
from imt_family fam inner join location_hierchy_closer_det lhcd
on fam.location_id = lhcd.child_id 
left join imt_member mem on mem.id = fam.contact_person_id
where lhcd.parent_id in  (select child_id from location_hierchy_closer_det where parent_id = #location_id#
and child_id in (select loc_id from um_user_location where user_id = #user_id# and state = ''ACTIVE'')) and 
fam.state in (''com.argusoft.imtecho.family.state.archived'',
				''com.argusoft.imtecho.family.state.archived.fhsr.verified'',
				''com.argusoft.imtecho.family.state.new.archived.mo.fhw.reverified'',
				''com.argusoft.imtecho.family.state.archived.emri.fhw.reverified'',
				''com.argusoft.imtecho.family.state.new.archived.fhw.reverified'',
				''com.argusoft.imtecho.family.state.archived.mo.verified'',
				''com.argusoft.imtecho.family.state.archived.mo.fhw.reverified''
				,''com.argusoft.imtecho.family.state.merged'')',true,'ACTIVE','1f8514ae-912a-4221-a93a-76a0d796cc62'),
	 (1310,66522,'2019-08-14 15:20:59.444',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,call_type,location_id','with unsuccess_calls as(
	select 
	*
	from gvk_manage_call_master master
	where call_response in (''com.argusoft.imtecho.gvk.call.not-reachable'')
	and location_id in (select child_id from location_hierchy_closer_det where parent_id = (case when #location_id# = -2 then 2 else #location_id# end) 
and depth <= (case when #location_id# = -2 then 0 else 8 end))
       and case when ''all'' = ''#call_type#'' then true 
       when ''#call_type#'' = ''FHW_CH_SER_VERI'' then call_type in (''FHW_CH_SER_VERI'',''FHW_DEL_VERI'',''FHW_TT_VERI'',''FHW_CH_SER_PREG_VERI'')
       else call_type = ''#call_type#'' end
       and created_on between case when ''#from_date#'' = ''null'' then now() else to_date(''#from_date#'',''MM-DD-YYYY'') end and to_date(case when ''#to_date#'' = ''null'' then null 
       else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds''
       order by id #limit_offset#
),
unsuccess_calls_details as (
	select 
	concat(im.first_name,'' '',im.last_name, ''('',im.unique_health_id ,'')'') as name,
	master.mobile_number,
	master.created_on,
	master.call_type,
	master.location_id,
	master.id,
	master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join imt_member im on im.id = master.member_id
	where call_response != ''com.argusoft.imtecho.gvk.call.success''
	
	union all 
	select 
	concat(uu.first_name,'' '',uu.last_name, ''('',role.name ,'')'') as name,
	master.mobile_number,
	master.created_on,
	master.call_type,
	master.location_id,
	master.id,
	master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join um_user uu on uu.id = master.user_id
	inner join um_role_master role on uu.role_id = role.id 
	where call_response != ''com.argusoft.imtecho.gvk.call.success''
	
	union  all
	select 
	case when im.id is null then imf.family_id else concat(im.first_name,'' '',im.last_name, '' ('',imf.family_id ,'')'') end as name,
	master.mobile_number,
master.created_on,
master.call_type,
	master.location_id,
	master.id,
	master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join imt_family imf on imf.family_id = master.family_id
	left join imt_member im on im.family_id = imf.family_id and im.family_head = true
	where call_response != ''com.argusoft.imtecho.gvk.call.success''
),
response as (
select 
master.name,
get_location_hierarchy(master.location_id) as Location_hierarchy,
case when call_response = ''com.argusoft.imtecho.gvk.call.no-number-available'' then ''No number available''
when call_response = ''com.argusoft.imtecho.gvk.call.cant-talk'' then ''Can''''t talk''
when call_response = ''com.argusoft.imtecho.gvk.call.wrong-mobile-number'' then ''Wrong mobile number''
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-asha-husband'' then ''Number belongs to asha''	-- todo
--when call_response = ''com.argusoft.imtecho.gvk.call.not-interested-in-treatment'' then ''Not intersted in treatment''
when call_response = ''com.argusoft.imtecho.gvk.call.unresponsive'' then ''Unreponsive''
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-husband'' then ''Number belongs to anm'' 
when call_response = ''com.argusoft.imtecho.gvk.call.not-reachable'' then ''Not reachable''
when call_response = ''com.argusoft.imtecho.gvk.call.phone-switched-off'' then ''Phone switched off''
when call_response = ''com.argusoft.imtecho.gvk.call.number-collection-pending'' then ''Number collection pending''			-- todo
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary-husband'' then ''number of beneficiary''
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary''
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-family-member''
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-neighbour''
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-or-anm-husband'' then ''ANM or husband''			-- todo
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-ashah-or-asha-husband'' then ''Asha or husband''			-- todo
else ''Other'' end reason,
master.mobile_number\:\:json,
master.location_id,
master.created_on,
master.call_type,
master.created_by,
master.id
from unsuccess_calls_details master
 ),
mo as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code in (''mo_phc'',''mo_uphc''))
),
mo_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	mo group by location_id
),
mo_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from mo_unique mo
	inner join um_user um on um.id = mo.mo_id
),
asha as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code = ''ASHA'')
    where uu.state = ''ACTIVE''
),
asha_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	asha group by location_id
),
asha_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from asha_unique mo
	inner join um_user um on um.id = mo.mo_id
),
anm as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code = ''FHW'')
    where uu.state = ''ACTIVE''
),
anm_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	anm group by location_id
),
anm_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from anm_unique mo
	inner join um_user um on um.id = mo.mo_id
),

contacts as (
	select json_array_elements(mobile_number)->>''mobileNumber'' as contact ,json_array_elements(mobile_number)->>''isCalled'' as isCalled ,id
	from response where mobile_number is not null ),
contacts_display_date as (	
	select string_agg(
	case when isCalled=''true'' then concat(''<b>'',contact,''</b>'') else contact end
	,'','') as contact,id from contacts
	group by id)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
resp.name as "Called Person",
Location_hierarchy as "Location",
contacts.contact as "Dialed Number",
to_char(resp.created_on,''DD-MM-YYYY HH:MI PM'') as  "Call Date",

case when resp.call_type = ''FHW_HIGH_RISK_CONF'' then ''FHW highrisk conformation''
when resp.call_type = ''IMMUN_VERI'' then ''Immunization verification''
when resp.call_type = ''FAM_VERI'' then ''Family verification''
when resp.call_type = ''PREG_REGI_VERI'' then ''Pregnancy registration verification''
when resp.call_type = ''HIGH_RISK_VERI'' then ''Highrisk followup verification''
when resp.call_type = ''MIG_IN_VERI'' then ''Member IN migration verification''
when resp.call_type = ''MIG_OUT_VERI'' then ''Member OUT migration verification''
when resp.call_type = ''DUP_MEM_VERI'' then ''Duplicate member verification'' end as "Call Type",
--resp.reason as "Reason for Unsuccessful Calling",
mo.name as "MO Details",
anm.name as "ANM Details",
asha.name as "ASHA Details"
,concat(um.first_name, '' '', um.last_name) as "RO Details" 
--fhw.name
from response resp
left join contacts_display_date contacts on resp.id = contacts.id
left join mo_details mo on mo.location_id = resp.location_id
left join anm_details anm on anm.location_id = resp.location_id
left join asha_details asha on asha.location_id = resp.location_id
left join um_user um on resp.created_by = um.id',true,'ACTIVE','f2077f47-f3a7-44c7-b611-24e0e288b769');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (300,1,'2019-02-11 17:58:55.694',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','801dedb9-8c88-4176-9c53-725802c7b708'),
	 (339,1,'2019-02-13 11:23:47.529',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','7ab1f2cc-8326-4760-8e51-d61cd3a4a525'),
	 (340,1,'2019-02-13 11:23:47.562',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','3b2b3c92-90bf-445b-a9e2-38dbbb09650b'),
	 (380,1,'2019-02-13 12:17:26.871',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','58e7beba-8d5a-4b95-a298-cff2727e3341'),
	 (1027,60512,'2019-04-22 16:51:50.237',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','599d3ea3-8907-4ab8-ab02-95c8f8f49267'),
	 (542,1,'2019-02-14 16:20:37.893',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','92c7d481-d3bd-4cf6-9360-22f15f4273f7'),
	 (1487,74841,'2020-01-08 18:25:14.653',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','1454c50f-477a-4b47-942c-f90fe318e66a'),
	 (188,58981,'2019-01-23 14:46:06.781',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,loggedInUserId,location_id','with prefered_language as(

select (case 

when report_preferred_language = ''EN'' then true  

else false 

end) as is_enlish 

from um_user where id = #loggedInUserId#),

 death as (

	select rch_pregnancy_analytics_details.death_location_id as loc_id,

	imt_member.family_id,
	imt_member.id,
	rch_pregnancy_analytics_details.pregnancy_reg_id,

	imt_member.first_name || '' '' || imt_member.middle_name || '' '' || imt_member.last_name || '' ('' || imt_member.unique_health_id || '')'' || ''<br>'' || imt_member.family_id as member_det,

	to_char(imt_member.dob, ''DD/MM/YYYY'') as dob,

	rch_pregnancy_analytics_details.maternal_death_type as death_type,

	to_char(rch_pregnancy_analytics_details.death_date, ''DD/MM/YYYY'') as death_date,
	(case when rch_pregnancy_analytics_details.registered_with_no_of_child is not null then rch_pregnancy_analytics_details.registered_with_no_of_child else 0 end +
case when rch_pregnancy_analytics_details.total_out_come is not null then rch_pregnancy_analytics_details.total_out_come else 0 end) as total_child

	

	from rch_pregnancy_analytics_details, location_hierchy_closer_det, imt_member

	where location_hierchy_closer_det.parent_id = #location_id#

	and rch_pregnancy_analytics_details.death_location_id = location_hierchy_closer_det.child_id

	and imt_member.id = rch_pregnancy_analytics_details.member_id

	and rch_pregnancy_analytics_details.maternal_detah = true

	and rch_pregnancy_analytics_details.death_date between cast (

		case

			when ''#from_date#'' = ''null'' then ''01-01-1970''

			else ''#from_date#''

		end as date) and cast (

		case

			when ''#to_date#'' = ''null'' then ''01-01-1970''

			else ''#to_date#''

		end as date) + interval ''1 day''

	order by rch_pregnancy_analytics_details.death_date

	#limit_offset#

),member_det_extra as(
select
	md.id,
	concat(f.address1, '','', f.address2) as address,
	f.area_id,
	f.caste,
	wpd.delivery_place,
	dd.verbal_autopsy,
	wpd.fbmdsr,
	to_char(dd.created_on, ''dd-MM-yyyy'') as data_entry_date,
	case
		when list_value.value is null then dd.other_death_reason
		else list_value.value end as death_deason,
		dd.place_of_death
	from
	death md 
	inner join imt_family f on f.family_id = md.family_id
	inner join rch_member_death_deatil dd on dd.member_id = md.id
	left join rch_wpd_mother_master wpd on
		wpd.member_id = md.id and has_delivery_happened is true
		and wpd.pregnancy_reg_det_id = md.pregnancy_reg_id
	left join listvalue_field_value_detail list_value on list_value.id\:\:text = dd.death_reason 
)
,
caste_filter as (
	select md.id,list.value as caste from member_det_extra md inner join listvalue_field_value_detail list on md.caste = cast(list.id as text)
)
, loc as (

	select distinct loc_id from death

), loc_det as (

	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 

	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 

	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id

	group by loc.loc_id

), fhw_det as (

	select loc.loc_id, 

	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 

	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw

	from um_user_location ul, um_user u, loc,location_hierchy_closer_det

	where loc.loc_id = location_hierchy_closer_det.child_id and

	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id

	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''

	and u.role_id = (select id from um_role_master where name = ''FHW'')

	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number

)

select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",

death.member_det as "Member Details", 

loc_det.aoi as "Location",

caste_filter.caste as "Caste",

death.dob as "Date of Birth",

death.total_child as "No of Live Children",

death.death_date as "Death Date", 

death.death_type as "Death Type", 

fhw_det.fhw as "FHW Details"

from death 

inner join loc_det on death.loc_id = loc_det.loc_id 

left join fhw_det on death.loc_id = fhw_det.loc_id
left join caste_filter on death.id = caste_filter.id
;',true,'ACTIVE','5ea70d5f-a052-4c08-861a-188894db21e2'),
	 (1573,74841,'2020-04-09 18:05:35.763',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','934359ce-d929-47af-9b87-e3f2a2ffdad9'),
	 (515,1,'2019-02-14 15:57:42.502',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,demographic_location_id,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#
)
,parameter as (
	select CAST(''#demographic_location_id#'' AS TEXT) as demographic_group
)
,child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
    inner join parameter p on true = true
	where l.child_id = c.penta1_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.penta1 is not null
    and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	group by m.id, f.location_id, c.dob, penta1
	having cast(date_trunc(''month'', penta1) as date)  between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','894ab7d3-b844-49ea-ab15-ada49b2f8e49');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (116,409,'2019-01-08 01:13:12.328',1,'2021-01-13 20:22:06.427965','from_date,to_date','with user_det as(
select
	*
from
	um_user
where
	role_id in (
		select distinct role_id
	from
		um_user
	where
		id in (
		select
			distinct created_by
		from
			gvk_verification ))
	and state = ''ACTIVE'' 
	),
user_wise_cnt_det as(
select
	gvk_verification.created_by,
	coalesce(sum(case when gvk_verification.state = ''com.argusoft.imtecho.family.state.emri.fhw.reverification'' then 1 else 0 end),
	0) as reverification,
	coalesce(sum(case when gvk_verification.state != ''com.argusoft.imtecho.family.state.emri.fhw.reverification'' then 1 else 0 end),
	0) as verified,
	coalesce(sum(1),
	0) as cnt
from
	imt_family_verification,
	gvk_verification
where
	imt_family_verification.gvk_state = ''com.argusoft.imtecho.gvk.call.processed''
	and gvk_verification.family_id = imt_family_verification.family_id
	and (gvk_verification.status = ''com.argusoft.imtecho.gvk.call.success''
	or gvk_verification.state = ''com.argusoft.imtecho.family.state.emri.fhw.reverification'')
	and imt_family_verification.modified_on between cast (
	case
		when ''#from_date#'' = ''null'' then ''01-01-1970''
		else ''#from_date#''
	end as date) and cast (
	case
		when ''#to_date#'' = ''null'' then ''01-01-1970''
		else ''#to_date#''
	end as date) + interval ''1 day''
group by
	gvk_verification.created_by ),
final_detail as(
select
	concat(user_det.first_name, '' '', user_det.last_name, ''('', user_det.user_name, '')'') as name ,
	COALESCE(cnt,0) as total_family,
	COALESCE(verified,0) as verified,
	COALESCE(reverification,0) as reverification
from
	user_det
left join user_wise_cnt_det on
	user_det.id = user_wise_cnt_det.created_by
where
	''#from_date#'' != ''null''
order by
	user_det.first_name )
select
	row_number() over() as "Sr. no",
	name as "Name" ,
	total_family as "Number of Families" ,
	verified as "Number of Families Verified",
	reverification as "Number of Families Sent for reverification"
from
	final_detail
union all select
	null,
	''<b>Total</b>'',
	sum(total_family),
	sum(verified),
	sum(reverification)
from
	final_detail',true,'ACTIVE','91b9e9e9-51ba-4fec-8f20-4c617acdd6b6'),
	 (618,409,'2019-02-19 12:29:19.461',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','802cf124-9e29-47a1-bef5-299099989118'),
	 (1342,60512,'2019-08-19 17:12:51.75',1,'2021-01-13 20:22:06.427965','from_month','select to_char(cast(''#from_month#'' as date),''MM/YYYY'') as from_month',true,'ACTIVE','c18bd0d2-2f24-45ce-bc5f-d9bd7d4a37d0'),
	 (1421,409,'2019-09-23 01:08:04.717',1,'2021-01-13 20:22:06.427965','from_month','select to_char(cast(''#from_month#'' as date),''MM/YYYY'') as from_month',true,'ACTIVE','bade6ed9-3d25-4382-bcc4-1ada7c8c02a4'),
	 (1422,409,'2019-09-23 01:08:04.722',1,'2021-01-13 20:22:06.427965','to_month','select to_char(cast(''#to_month#'' as date),''MM/YYYY'') as to_month',true,'ACTIVE','c7959674-c1a1-4172-9531-c0f43e7afb78'),
	 (1423,409,'2019-09-23 01:10:40.756',1,'2021-01-13 20:22:06.427965','from_month','select to_char(cast(''#from_month#'' as date),''MM/YYYY'') as from_month',true,'ACTIVE','e387b99f-45ea-45f8-9c4a-c3a24b904ac8'),
	 (519,1,'2019-02-14 15:59:24.159',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,demographic_location_id,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#
)
,parameter as (
	select CAST(''#demographic_location_id#'' AS TEXT) as demographic_group
)
,child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
    inner join parameter p on true = true
	where l.child_id = c.opv1_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.opv1 is not null
    and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	group by m.id, f.location_id, c.dob, opv1
	having cast(date_trunc(''month'', opv1) as date) between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','ce7fb6e4-9107-4856-8b57-4e268f6ad548'),
	 (1077,63746,'2019-05-01 14:47:26.915',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #location_id#',true,'ACTIVE','f866a979-ed6a-47b2-9e0d-f51ce0393a2e'),
	 (120,58981,'2019-01-09 14:48:56.275',1,'2021-01-13 20:22:06.427965','from_month_year,to_month_year,loggedInUserId,location_id','---------Child For Monitoring Of Pentavalent 3 Vaccine As Per Date Of Birth----------
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 ldp as(
	select child_id, case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
else location_master.name end
	from location_hierchy_closer_det, location_master, prefered_language  
	where parent_id = #location_id# and depth = 1 
	and location_master.id = location_hierchy_closer_det.child_id
), r as(
	select lhcd.parent_id as id, 
	coalesce(sum(stat.total_live_births),0) as total_live_births, 
	coalesce(sum(stat.penta_3_given_within_4_months),0) as penta_3_given_within_4_months, 
	coalesce(sum(stat.penta_3_given_within_12_months),0) as penta_3_given_within_12_months, 
	coalesce(sum(stat.penta_3_given_after_12_months),0) as penta_3_given_after_12_months, 
	coalesce(sum(stat.penta_3_not_given),0) as penta_3_not_given
	from ldp
	inner join location_hierchy_closer_det lhcd on lhcd.parent_id = ldp.child_id
	left join child_monthly_location_wise_analytics stat on lhcd.child_id = stat.location_id
	where stat.month_year between (case when #from_month_year# is null then ''01/01/1970'' else to_date(''#from_month_year#'',''MM/DD/YYYY'') end) 
	and (case when #to_month_year# is null then current_date else to_date(''#to_month_year#'',''MM/DD/YYYY'') end)
	group by lhcd.parent_id
), s as(
	select ldp.name,
ldp.child_id,
	coalesce(r.total_live_births,0) as total_live_births, 
	coalesce(r.penta_3_given_within_4_months,0) as penta_3_given_within_4_months, 
	coalesce(r.penta_3_given_within_12_months,0) as penta_3_given_within_12_months, 
	coalesce(r.penta_3_given_after_12_months,0) as penta_3_given_after_12_months,
	coalesce(r.penta_3_given_within_4_months+r.penta_3_given_within_12_months+r.penta_3_given_after_12_months,0) as penta_3_given,
	coalesce(r.penta_3_not_given,0) as penta_3_not_given 
	from ldp left join r on ldp.child_id = r.id 
	order by ldp.name
)
select  row_number() over() as "Sr. no", 
name as  "Location", 
child_id as hidden_location_id,
total_live_births as "Live Birth reported",
penta_3_given_within_4_months as "No. of infant given Penta 3 within 4 month of DOB",
case when total_live_births = 0 then 0 else round(penta_3_given_within_4_months*100.0/total_live_births,2) end as "percent_col_No. of infant given Penta 3 within 4 month of DOB",
penta_3_given_within_12_months as "No. of infant given Penta 3 within 12 month of DOB", 
case when total_live_births = 0 then 0 else round(penta_3_given_within_12_months*100.0/total_live_births,2) end as "percent_col_No. of infant given Penta 3 within 12 month of DOB",
penta_3_given_after_12_months as "No. of infant given Penta 3 after 12 month of DOB",
case when total_live_births = 0 then 0 else round(penta_3_given_after_12_months*100.0/total_live_births ,2) end as "percent_col_No. of infant given Penta 3 after 12 month of DOB",
penta_3_given as "No. of infant given Penta 3",
case when total_live_births = 0 then 0 else round(penta_3_given*100.0/total_live_births ,2) end as "percent_col_No. of infant given Penta 3",
penta_3_not_given as "No. of infant not given Penta 3",
case when total_live_births = 0 then 0 else round(penta_3_not_given*100.0/total_live_births ,2) end as "percent_col_No. of infant not given Penta 3"
from s
union all
select 
null, 
''<b>Total</b>'', 
#location_id#,
sum(total_live_births), 
sum(penta_3_given_within_4_months),
case when sum(total_live_births) = 0 then 0 else round(sum(penta_3_given_within_4_months)*100.0/sum(total_live_births),2) end,
sum(penta_3_given_within_12_months),
case when sum(total_live_births) = 0 then 0 else round(sum(penta_3_given_within_12_months)*100.0/sum(total_live_births),2) end,
sum(penta_3_given_after_12_months),
case when sum(total_live_births) = 0 then 0 else round(sum(penta_3_given_after_12_months)*100.0/sum(total_live_births),2) end,
sum(penta_3_given),
case when sum(total_live_births) = 0 then 0 else round(sum(penta_3_given)*100.0/sum(total_live_births),2) end,
sum(penta_3_not_given),
case when sum(total_live_births) = 0 then 0 else round(sum(penta_3_not_given)*100.0/sum(total_live_births),2) end
from s;',true,'ACTIVE','548be02d-4802-45e2-a123-daf7a21fc648'),
	 (601,409,'2019-02-19 12:09:23.085',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','e2ff080d-d278-4a11-aa78-8448fcb2c954');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (520,1,'2019-02-14 16:01:24.624',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','2f8d8da2-880c-46a2-8103-eac616e88276'),
	 (1543,74841,'2020-03-23 12:32:44.75',1,'2021-01-13 20:22:06.427965','from_date,to_date,location_id','with dates as (
	SELECT
        to_date(
            CASE WHEN ''#from_date#'' = ''null'' THEN
                NULL
            ELSE
                ''#from_date#''
            END, ''MM/DD/YYYY'') AS from_date,
        to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') as to_date
),
location_ids as(
	select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1
),
result_set as (
    select 
	lch.parent_id as loc_id,
	count(distinct idsp.member_id) as member_done,
	count(distinct idsp.family_id) as family_done,
	sum(case when idsp.is_any_illness_or_discomfort then 1 else 0 end) as illness,
	sum(case when idsp.is_cough then 1 else 0 end) as cough,
	sum(case when idsp.is_fever then 1 else 0 end) as fever,
	sum(case when idsp.is_fever and idsp.is_cough and idsp.is_any_illness_or_discomfort then 1 else 0 end) as all_three
    from idsp_member_screening_details idsp
	inner join location_hierchy_closer_det lch
	on lch.child_id = idsp.location_id
	and lch.parent_id in (select distinct child_id from location_ids)
	inner join dates on idsp.service_date between dates.from_date and dates.to_date
	group by lch.parent_id
)
select 
	row_number() over() as "Sr No.",
	location_master.name as "Location",
	coalesce(member_done, 0) as "Total Unique Member Screening",
	coalesce(family_done, 0) as "Total Unique Family Screening",
	coalesce(illness, 0) as "Member Having Any Illness Or Discomfort",
	coalesce(cough, 0) as "Member Having Cough",
	coalesce(fever, 0) as "Member Having Fever",
	coalesce(all_three, 0) as "Member With Cough, Fever And Illness Or Discomfort"
from location_ids 
inner join location_master on location_master.id = location_ids.child_id
left join result_set rs on rs.loc_id = location_ids.child_id
union all
select 
null,
''<b>Total<b>'',
coalesce(sum(member_done), 0),
coalesce(sum(family_done), 0),
coalesce(sum(illness), 0),
coalesce(sum(cough), 0),
coalesce(sum(fever), 0),
coalesce(sum(all_three), 0)
from location_ids 
inner join location_master on location_master.id = location_ids.child_id
left join result_set rs on rs.loc_id = location_ids.child_id',true,'ACTIVE','5d136446-b711-412f-a76b-a3e43024c952'),
	 (523,1,'2019-02-14 16:01:24.639',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,demographic_location_id,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#
)
,parameter as (
	select CAST(''#demographic_location_id#'' AS TEXT) as demographic_group
)
,child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
    inner join parameter p on true = true
	where l.child_id = c.f_ipv1_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.f_ipv1 is not null
    and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	group by m.id, f.location_id, c.dob, f_ipv1
	having cast(date_trunc(''month'', f_ipv1) as date)  between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','a020a5fc-1cd7-4582-b870-0e2b6899f2c6'),
	 (1424,409,'2019-09-23 01:10:40.758',1,'2021-01-13 20:22:06.427965','to_month','select to_char(cast(''#to_month#'' as date),''MM/YYYY'') as to_month',true,'ACTIVE','d0869118-592a-4e58-a370-ab03f988b917'),
	 (910,409,'2019-03-07 16:01:46.028',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','1a1626c8-b8ee-42bd-a909-f63a70acd639'),
	 (1634,74841,'2020-05-22 17:29:56.001',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
case when  prefered_language.is_enlish then get_location_hierarchy_language_wise(#location_id#, ''EN'') else 
get_location_hierarchy(#location_id#) 
end as location_id
from  prefered_language',true,'ACTIVE','24a4e80d-e11a-4f3a-9dbb-7bd7487a1f2a'),
	 (820,58981,'2019-03-06 18:04:06.554',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','272ca8a2-8ab1-4e6e-a44e-44326d9f91eb'),
	 (1375,60512,'2019-08-22 13:56:47.923',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','a7816706-550d-44bd-8fe3-b10ddc66dcbc'),
	 (1376,60512,'2019-08-22 13:56:48.107',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
	select
	to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date ,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end, ''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_date 
),call_master_ids as (
	select id,
         created_on,
         get_location_hierarchy(location_id) as Location_hierarchy
        from gvk_manage_call_master
	inner join dates on gvk_manage_call_master.created_on between dates.from_date and dates.to_date
	where gvk_manage_call_master.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and gvk_manage_call_master.call_response not in (''com.argusoft.imtecho.gvk.call.cant-talk'',
	''com.argusoft.imtecho.gvk.call.no-number-available'',
	''com.argusoft.imtecho.gvk.call.wrong-mobile-number'',
        ''com.argusoft.imtecho.gvk.call.phone-switched-off'',
        ''com.argusoft.imtecho.gvk.call.unresponsive'',
        ''com.argusoft.imtecho.gvk.call.not-reachable'',
''com.argusoft.imtecho.gvk.call.processed'',
''com.argusoft.imtecho.gvk.call.processing''
	)
	and gvk_manage_call_master.call_type = ''HIGH_RISK_VERI''
),response_ids as (
	select gvk_high_risk_follow_up_responce.id, call_master_ids.created_on,Location_hierarchy
	from call_master_ids
	inner join gvk_high_risk_follow_up_responce on call_master_ids.id = gvk_high_risk_follow_up_responce.manage_call_master_id
	order by gvk_high_risk_follow_up_responce.id desc
	#limit_offset#
),response as (
	select 
	gvk_high_risk_follow_up_responce.id as gvk_follow_up_id,
	gvk_high_risk_follow_up_responce.member_id,
response_ids.created_on,
Location_hierarchy,
  	case when gvk_high_risk_follow_up_responce.called_for = ''highriskuserverificationdata'' then ''Service Verification'' 
		when gvk_high_risk_follow_up_responce.called_for = ''highriskusertreatmentdata''  then ''Service'' 
		else ''-'' end as called_type,

	case when gvk_high_risk_follow_up_responce.is_beneficiary_willing_to_helped is true then ''Yes'' 
		when gvk_high_risk_follow_up_responce.is_beneficiary_willing_to_helped is false then ''No'' 
		else ''-'' end as is_beneficiary_willing_to_helped,
	case when gvk_high_risk_follow_up_responce.is_schedule_pending is true then ''Yes''
		when gvk_high_risk_follow_up_responce.is_schedule_pending is false then ''No''
		else ''-'' end as is_schedule_pending,
	case when gvk_high_risk_follow_up_responce.schedule_date is not null then to_char(gvk_high_risk_follow_up_responce.schedule_date,''MM/DD/YYYY'')
		else ''-'' end as schedule_date,
	case when gvk_high_risk_follow_up_responce.is_beneficiary_pickedup_date_for_next_schedule is true then ''Yes''
		when gvk_high_risk_follow_up_responce.is_beneficiary_pickedup_date_for_next_schedule is false then ''No''
		else ''-'' end as is_beneficiary_pickedup_date_for_next_schedule,
	case when gvk_high_risk_follow_up_responce.next_pickup_schedule_date is not null then to_char(gvk_high_risk_follow_up_responce.schedule_date,''MM/DD/YYYY'')
		else ''-'' end as next_pickup_schedule_date,
	case when gvk_high_risk_follow_up_responce.is_108_pickedup_beneficiary is true then ''Yes''
		when gvk_high_risk_follow_up_responce.is_108_pickedup_beneficiary is false then ''No''
		else ''-'' end as is_108_pickedup_beneficiary,
	case when gvk_high_risk_follow_up_responce.is_beneficiary_visited_phc is true then ''Yes''
		when gvk_high_risk_follow_up_responce.is_beneficiary_visited_phc is false then ''No''
		else ''-'' end as is_beneficiary_visited_phc,
	case when gvk_high_risk_follow_up_responce.is_beneficiary_received_blood_lastweek_anemia is true then ''Yes''
		when gvk_high_risk_follow_up_responce.is_beneficiary_received_blood_lastweek_anemia is false then ''No''
		else ''-'' end as is_beneficiary_received_blood_lastweek_anemia,
	case when gvk_high_risk_follow_up_responce.is_beneficiary_received_fcm_lastweek_anemia = ''true'' then ''Yes''
		when gvk_high_risk_follow_up_responce.is_beneficiary_received_fcm_lastweek_anemia = ''false'' then ''No''
		else ''-'' end as is_beneficiary_received_fcm_lastweek_anemia,
	case when gvk_high_risk_follow_up_responce.is_beneficiary_received_drugs_for_high_bp = ''true'' then ''Yes''
		when gvk_high_risk_follow_up_responce.is_beneficiary_received_drugs_for_high_bp = ''false'' then ''No''
		else ''-'' end as is_beneficiary_received_drugs_for_high_bp,
	case when gvk_high_risk_follow_up_responce.is_new_birth_child_admitted_to_hospital_for_low_birth_weight = ''true'' then ''Yes''
		when gvk_high_risk_follow_up_responce.is_new_birth_child_admitted_to_hospital_for_low_birth_weight = ''false'' then ''No''
		else ''-'' end as is_new_birth_child_admitted_to_hospital_for_low_birth_weight,
	case when gvk_high_risk_follow_up_responce.is_beneficiary_child_admitted_to_cmtc_sam = ''true'' then ''Yes''
		when gvk_high_risk_follow_up_responce.is_beneficiary_child_admitted_to_cmtc_sam = ''false'' then ''No''
		else ''-'' end as is_beneficiary_child_admitted_to_cmtc_sam,
	case when gvk_high_risk_follow_up_responce.is_beneficiary_droped_at_home_by_108 is true then ''Yes''
		when gvk_high_risk_follow_up_responce.is_beneficiary_droped_at_home_by_108 is false then ''No''
		else ''-'' end as is_beneficiary_droped_at_home_by_108,
	case when gvk_high_risk_follow_up_responce.is_beneficiary_received_iron_sucrose_injection_anemia = ''true'' then ''Yes''
		when gvk_high_risk_follow_up_responce.is_beneficiary_received_iron_sucrose_injection_anemia = ''false'' then ''No''
		else ''-'' end as is_beneficiary_received_iron_sucrose_injection_anemia
	from response_ids
	inner join gvk_high_risk_follow_up_responce on response_ids.id = gvk_high_risk_follow_up_responce.id
),member_location_area_ids as (
	select response.gvk_follow_up_id,response.member_id,imt_family.location_id,imt_family.area_id
	from response
	inner join imt_member on imt_member.id = response.member_id
	inner join imt_family on imt_family.family_id = imt_member.family_id
),asha as (
	select member_location_area_ids.gvk_follow_up_id,asha.id
	from member_location_area_ids
	inner join um_user_location asha_location on member_location_area_ids.area_id = asha_location.loc_id and asha_location.state = ''ACTIVE''
	inner join um_user asha on asha_location.user_id = asha.id and asha.role_id = 24 and asha.state = ''ACTIVE''
),asha_unique as (
	select asha.gvk_follow_up_id,max(asha.id)
	from asha
	group by asha.gvk_follow_up_id
),fhw as (
	select member_location_area_ids.gvk_follow_up_id,fhw.id
	from member_location_area_ids
	inner join um_user_location fhw_location on member_location_area_ids.location_id = fhw_location.loc_id and fhw_location.state = ''ACTIVE''
	inner join um_user fhw on fhw_location.user_id = fhw.id and fhw.role_id = 30 and fhw.state = ''ACTIVE''
),fhw_unique as (
	select fhw.gvk_follow_up_id,max(fhw.id)
	from fhw
	group by fhw.gvk_follow_up_id
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Member Name",
Location_hierarchy as "Location",
to_char(response.created_on,''DD-MM-YYYY HH:MI PM'') as  "Call Date",
concat(fhw_user.first_name,'' '',fhw_user.middle_name,'' '',fhw_user.last_name) as "FHW Name",
concat(asha_user.first_name,'' '',asha_user.middle_name,'' '',asha_user.last_name) as "ASHA Name",
response.called_type as "Call Type",
response.is_beneficiary_willing_to_helped as "Is Beneficiary Willing to be helped",
response.is_schedule_pending as "Is Schedule Pending",
response.schedule_date as "Schedule Date",
response.is_beneficiary_pickedup_date_for_next_schedule as "Next Date for Pickup Scheduled",
response.next_pickup_schedule_date as "Next Date for Pickup",
response.is_108_pickedup_beneficiary as "Was Pickup done for Beneficiary",
response.is_beneficiary_visited_phc as "Did Beneficiary Visit PHC",
response.is_beneficiary_received_fcm_lastweek_anemia as "Did Beneficiary receive FCM last week",
response.is_beneficiary_received_blood_lastweek_anemia as "Did Beneficiary receive blood last week for Anemia",
response.is_beneficiary_received_iron_sucrose_injection_anemia as "Did Beneficiary receive iron sucrose injection for Anemia",
response.is_beneficiary_received_drugs_for_high_bp as "Did Beneficiary receive drugs for High BP",
response.is_new_birth_child_admitted_to_hospital_for_low_birth_weight as "Was born child admitted to hospital for LBW",
response.is_beneficiary_child_admitted_to_cmtc_sam as "Was child admitted to CMTC/SAM",
response.is_beneficiary_droped_at_home_by_108 as "Was beneficiary dropped at home"
from response
inner join imt_member on response.member_id = imt_member.id
inner join imt_family on imt_family.family_id = imt_member.family_id
left join asha_unique on response.gvk_follow_up_id = asha_unique.gvk_follow_up_id
left join fhw_unique on response.gvk_follow_up_id = fhw_unique.gvk_follow_up_id
left join um_user asha_user on asha_unique.max = asha_user.id
left join um_user fhw_user on fhw_unique.max = fhw_user.id',true,'ACTIVE','73b89341-5f2a-4242-ba55-f4fedf9d9b65'),
	 (746,58981,'2019-03-01 19:33:33.748',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','fac1b078-c317-4dd0-b84c-7657ca17738d');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1388,60512,'2019-08-26 13:01:53.797',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','57b2b0f3-351d-4bf8-8abc-b30c38bc778e'),
	 (1314,60512,'2019-08-16 17:02:21.905',1,'2021-01-13 20:22:06.427965','to_month,demographic_location_id,from_month,location_id','with parameters as(
	select CAST(#location_id# as integer) as location_id, cast(''#demographic_location_id#'' as TEXT) as demographic_group,
	to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end, ''MM-DD-YYYY'') as from_date ,
	to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end, ''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date 
),location_ids as(
	select child_id from location_hierchy_closer_det, parameters p where parent_id = p.location_id
	and (p.demographic_group=''null'' or location_hierchy_closer_det.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
	and depth = 1
),pregancy_reg_count as (
	select location_ids.child_id as location_id,sum(anc_reg) anc_reg_count
	from location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id
	inner join rch_service_provided_during_year on location_hierchy_closer_det.child_id = rch_service_provided_during_year.location_id
	inner join parameters on rch_service_provided_during_year.month_year between parameters.from_date and parameters.to_date
	where 
	(parameters.demographic_group=''null'' or location_hierchy_closer_det.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = parameters.demographic_group))
	group by location_ids.child_id
),anc_det as (
select 
location_ids.child_id as location_id,rch_anc_master.pregnancy_reg_det_id
,max(case when haemoglobin_count is not null then rch_anc_master.id end) as anc_id
,max(case when iron_def_anemia_inj in (''IRON_SUCROSE'',''FCM'') then 1 else 0 end) as iron_def_anemia_inj
,max(case when rch_anc_master.blood_transfusion = true then 1 else 0 end) as blood_transfusion
from location_ids
inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id
inner join rch_anc_master on location_hierchy_closer_det.child_id = rch_anc_master.location_id
inner join parameters on rch_anc_master.service_date between parameters.from_date and parameters.to_date
where rch_anc_master.member_status = ''AVAILABLE''
and (parameters.demographic_group=''null'' or location_hierchy_closer_det.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = parameters.demographic_group))
group by location_ids.child_id,rch_anc_master.pregnancy_reg_det_id
),haemoglobin_counts as (
	select anc_det.location_id,
	count(*) filter (where anc_id is not null) as hb_data_entered_count,
	count(*) filter (where anc.haemoglobin_count between 10 and 10.999) as mild_hb_count,
	count(*) filter (where anc.haemoglobin_count between 7 and 9.999) as moderate_hb_count,
	count(*) filter (where anc.haemoglobin_count < 7) as severe_hb_count,
	count(*) filter (where anc.haemoglobin_count >= 11) as normal_hb_count,
	sum(anc_det.iron_def_anemia_inj) as iron_sucrose_count,
	sum(anc_det.blood_transfusion) as blood_transfusion_count
	from anc_det
	left join rch_anc_master  anc on anc.id = anc_det.anc_id
	group by anc_det.location_id
),minimum_4_member_ids as (
	select anc_det.location_id,anc_det.pregnancy_reg_det_id,count(*) as hb_count
	from anc_det
	inner join rch_anc_master on anc_det.pregnancy_reg_det_id = rch_anc_master.pregnancy_reg_det_id 
		and rch_anc_master.haemoglobin_count is not null
	inner join parameters on rch_anc_master.service_date <= parameters.to_date
	where anc_det.anc_id is not null
	group by anc_det.location_id,anc_det.pregnancy_reg_det_id
	having count(*) > 4
),minimum_4_count as (
	select minimum_4_member_ids.location_id,count(*) as minimum_4_count
	from minimum_4_member_ids
	group by minimum_4_member_ids.location_id
),det as (
	select row_number() over() as sr_no,
	location_master.name as loc,
	location_master.id as hidden_location_id,
	coalesce(pregancy_reg_count.anc_reg_count,0) as anc_reg_count,
	coalesce(haemoglobin_counts.hb_data_entered_count,0) as hb_data_entered_count,
	coalesce(haemoglobin_counts.mild_hb_count,0) as mild_hb_count,
	coalesce(haemoglobin_counts.moderate_hb_count,0) as moderate_hb_count,
	coalesce(haemoglobin_counts.severe_hb_count,0) as severe_hb_count,
	coalesce(haemoglobin_counts.normal_hb_count,0) as normal_hb_count,
	coalesce(minimum_4_count.minimum_4_count,0) as minimum_4_count,
	--0 as minimum_4_count,
	coalesce(haemoglobin_counts.mild_hb_count + haemoglobin_counts.moderate_hb_count + haemoglobin_counts.severe_hb_count,0) as total_anemic_count,
	coalesce(haemoglobin_counts.iron_sucrose_count,0) as iron_sucrose_count,
	coalesce(haemoglobin_counts.blood_transfusion_count,0) as blood_transfusion_count
	from location_ids
	left join pregancy_reg_count on location_ids.child_id = pregancy_reg_count.location_id
	left join haemoglobin_counts on location_ids.child_id = haemoglobin_counts.location_id
	left join minimum_4_count on location_ids.child_id = minimum_4_count.location_id
	inner join location_master on location_ids.child_id = location_master.id
)
select row_number() over() as "Sr. no",
det.loc as "Location",
det.hidden_location_id,
det.anc_reg_count as "Total ANC Reg.",
det.hb_data_entered_count as "No. of ANC with HB data entry",
	case when det.anc_reg_count = 0 then 0 else 
	round(det.hb_data_entered_count*100.0/det.anc_reg_count,2) end as "percent_col_No. of ANC with HB data entry",
det.minimum_4_count as "No. of ANC with minimum 4 times Hb Tested",
	case when (det.anc_reg_count = 0) then 0 else 
	round(det.minimum_4_count*100.0/det.anc_reg_count,2) end as "percent_col_No. of ANC with minimum 4 times Hb Tested",
det.total_anemic_count as "Total Anemic Mother",
	case when (det.hb_data_entered_count = 0) then 0 else 
	round(det.total_anemic_count*100.0/det.hb_data_entered_count,2) end as "percent_col_Total Anemic Mother",
det.mild_hb_count as "Mild (Hb 10 to 10.9)",
	case when (det.hb_data_entered_count = 0) then 0 else 
	round(det.mild_hb_count*100.0/det.hb_data_entered_count,2) end as "percent_col_Mild (Hb 10 to 10.9)",
det.moderate_hb_count as "Moderate (Hb 7 to 9.9)",
	case when (det.hb_data_entered_count = 0) then 0 else 
	round(det.moderate_hb_count*100.0/det.hb_data_entered_count,2) end as "percent_col_Moderate (Hb 7 to 9.9)",
det.severe_hb_count as "Severe (Hb less than 7)",
	case when (det.hb_data_entered_count = 0) then 0 else 
	round(det.severe_hb_count*100.0/det.hb_data_entered_count,2) end as "percent_col_Severe (Hb less than 7)",
det.normal_hb_count as "Normal (Hb more than or equal to 11)",
	case when (det.hb_data_entered_count = 0) then 0 else 
	round(det.normal_hb_count*100.0/det.hb_data_entered_count,2) end as "percent_col_Normal (Hb more than or equal to 11)",
det.iron_sucrose_count as "Severe anemic mother given parentral iron (Iron sucrose/FCM)",
	case when (det.severe_hb_count = 0) then 0 else 
	round(det.iron_sucrose_count*100.0/det.severe_hb_count,2) end as "percent_col_Severe anemic mother given parentral iron (Iron sucrose/FCM)",
det.blood_transfusion_count as "Severe anemic mother given blood transfusion",
	case when (det.severe_hb_count = 0) then 0 else 
	round(det.blood_transfusion_count*100.0/det.severe_hb_count,2) end as "percent_col_Severe anemic mother given blood transfusion"
from det
union all
select null,
''<b>Total<b>'',
#location_id#,
sum(det.anc_reg_count),
sum(det.hb_data_entered_count),
	case when (sum(det.anc_reg_count) = 0) then 0 else 
	round(sum(det.hb_data_entered_count)*100.0/sum(det.anc_reg_count),2) end,
sum(det.minimum_4_count),
	case when (sum(det.anc_reg_count) = 0) then 0 else 
	round(sum(det.minimum_4_count)*100.0/sum(det.anc_reg_count),2) end,
sum(det.total_anemic_count),
	case when (sum(det.hb_data_entered_count) = 0) then 0 else 
	round(sum(det.total_anemic_count)*100.0/sum(det.hb_data_entered_count),2) end,
sum(det.mild_hb_count),
	case when (sum(det.hb_data_entered_count) = 0) then 0 else 
	round(sum(det.mild_hb_count)*100.0/sum(det.hb_data_entered_count),2) end,
sum(det.moderate_hb_count),
	case when (sum(det.hb_data_entered_count) = 0) then 0 else 
	round(sum(det.moderate_hb_count)*100.0/sum(det.hb_data_entered_count),2) end,
sum(det.severe_hb_count),
	case when (sum(det.hb_data_entered_count) = 0) then 0 else 
	round(sum(det.severe_hb_count)*100.0/sum(det.hb_data_entered_count),2) end,
sum(det.normal_hb_count),
	case when (sum(det.hb_data_entered_count) = 0) then 0 else 
	round(sum(det.normal_hb_count)*100.0/sum(det.hb_data_entered_count),2) end,
sum(det.iron_sucrose_count),
	case when (sum(det.severe_hb_count) = 0) then 0 else 
	round(sum(det.iron_sucrose_count)*100.0/sum(det.severe_hb_count),2) end,
sum(det.blood_transfusion_count),
	case when (sum(det.severe_hb_count) = 0) then 0 else 
	round(sum(det.blood_transfusion_count)*100.0/sum(det.severe_hb_count),2) end
from det;',true,'ACTIVE','86a8acca-30f8-4191-aecd-2eb0f8e6a420'),
	 (527,1,'2019-02-14 16:05:58.119',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,demographic_location_id,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#
)
,parameter as (
	select CAST(''#demographic_location_id#'' AS TEXT) as demographic_group
)
,child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
    inner join parameter p on true = true
	where l.child_id = c.penta2_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.penta2 is not null
    and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	group by m.id, f.location_id, c.dob, penta2
	having cast(date_trunc(''month'', penta2) as date) between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','2800abc5-ec93-4e50-b4ed-6df7962ebf0d'),
	 (738,58981,'2019-03-01 19:28:06.388',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','e16bad46-4df8-49dd-9eb5-4b225419091a'),
	 (734,58981,'2019-03-01 19:23:53.314',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','ab822e3a-349d-443a-8381-11f4bcb74a3e'),
	 (1341,60512,'2019-08-19 17:12:51.735',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','fda2ee4b-dd6d-4cad-b440-30151ee3d5bf'),
	 (1343,60512,'2019-08-19 17:12:51.752',1,'2021-01-13 20:22:06.427965','to_month','select to_char(cast(''#to_month#'' as date),''MM/YYYY'') as to_month',true,'ACTIVE','d81ff282-997e-445e-a81d-3a9bd9e6ec6c'),
	 (1344,60512,'2019-08-19 17:12:51.77',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,demographic_location_id,from_month,location_id','with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
	to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end, ''MM-DD-YYYY'') as from_date ,
	to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end, ''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date 
),member_ids as (
select * from (
select 
distinct on(rch_anc_master.pregnancy_reg_det_id) pregnancy_reg_det_id
,rch_anc_master.member_id
,rch_anc_master.haemoglobin_count as haemoglobin_count
,rch_anc_master.service_date as reg_service_date
,rch_anc_master.location_id as location_id
from location_hierchy_closer_det 
inner join rch_anc_master on location_hierchy_closer_det.child_id = rch_anc_master.location_id
inner join parameters on rch_anc_master.service_date between parameters.from_date and parameters.to_date
where rch_anc_master.haemoglobin_count is not null
and location_hierchy_closer_det.parent_id = parameters.location_id
and (parameters.demographic_group=''null'' or location_hierchy_closer_det.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = parameters.demographic_group))
order by rch_anc_master.pregnancy_reg_det_id,rch_anc_master.id desc) as t
where t.haemoglobin_count < 7
#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No", 
imt_member.unique_health_id as "Unique Health ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Member Name",
get_location_hierarchy(member_ids.location_id) as "Location",
to_char(member_ids.reg_service_date,''DD/MM/YYYY'') as "ANC Reg. Date",
member_ids.haemoglobin_count as "Haemoglobin"
from member_ids
inner join imt_member on member_ids.member_id = imt_member.id',true,'ACTIVE','a9ed28d5-5543-4088-a52a-f85ab18b86c8'),
	 (792,58981,'2019-03-06 15:41:19.871',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','ca67d5dc-cd44-4039-8aa0-dfc68ec8b145'),
	 (1148,63746,'2019-05-28 16:35:10.581',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','ca52d81b-cb0d-4819-9582-c75575c758b7');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1311,66522,'2019-08-14 15:23:03.304',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,call_type,location_id','with unsuccess_calls as(
	select 
	*
	from gvk_manage_call_master master
	where call_response in (''com.argusoft.imtecho.gvk.call.unresponsive'')
	and location_id in (select child_id from location_hierchy_closer_det where parent_id = (case when #location_id# = -2 then 2 else #location_id# end) 
and depth <= (case when #location_id# = -2 then 0 else 8 end))
       and case when ''all'' = ''#call_type#'' then true 
       when ''#call_type#'' = ''FHW_CH_SER_VERI'' then call_type in (''FHW_CH_SER_VERI'',''FHW_DEL_VERI'',''FHW_TT_VERI'',''FHW_CH_SER_PREG_VERI'')
       else call_type = ''#call_type#'' end
       and created_on between case when ''#from_date#'' = ''null'' then now() else to_date(''#from_date#'',''MM-DD-YYYY'') end and to_date(case when ''#to_date#'' = ''null'' then null 
       else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds''
       order by id #limit_offset#
),
unsuccess_calls_details as (
	select 
	concat(im.first_name,'' '',im.last_name, ''('',im.unique_health_id ,'')'') as name,
	master.mobile_number,
	master.created_on,
	master.call_type,
	master.location_id,
	master.id,
	master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join imt_member im on im.id = master.member_id
	where call_response != ''com.argusoft.imtecho.gvk.call.success''
	
	union all 
	select 
	concat(uu.first_name,'' '',uu.last_name, ''('',role.name ,'')'') as name,
	master.mobile_number,
	master.created_on,
	master.call_type,
	master.location_id,
	master.id,
	master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join um_user uu on uu.id = master.user_id
	inner join um_role_master role on uu.role_id = role.id 
	where call_response != ''com.argusoft.imtecho.gvk.call.success''
	
	union  all
	select 
	case when im.id is null then imf.family_id else concat(im.first_name,'' '',im.last_name, '' ('',imf.family_id ,'')'') end as name,
	master.mobile_number,
    master.created_on,
    master.call_type,
	master.location_id,
	master.id,
	master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join imt_family imf on imf.family_id = master.family_id
	left join imt_member im on im.family_id = imf.family_id and im.family_head = true
	where call_response != ''com.argusoft.imtecho.gvk.call.success''

    union all
    select
    (master.mobile_number\:\:json->0)#>>''{name}'' as name,
	master.mobile_number,	
    master.created_on,
    master.call_type,
	master.location_id,
	master.id,
	master.created_by,
	master.call_response
	from unsuccess_calls master
	where master.member_id is null and master.user_id is null 
    and call_response != ''com.argusoft.imtecho.gvk.call.success''

),
response as (
select 
master.name,
get_location_hierarchy(master.location_id) as Location_hierarchy,
case when call_response = ''com.argusoft.imtecho.gvk.call.no-number-available'' then ''No number available''
when call_response = ''com.argusoft.imtecho.gvk.call.cant-talk'' then ''Can''''t talk''
when call_response = ''com.argusoft.imtecho.gvk.call.wrong-mobile-number'' then ''Wrong mobile number''
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-asha-husband'' then ''Number belongs to asha''	-- todo
--when call_response = ''com.argusoft.imtecho.gvk.call.not-interested-in-treatment'' then ''Not intersted in treatment''
when call_response = ''com.argusoft.imtecho.gvk.call.unresponsive'' then ''Unreponsive''
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-husband'' then ''Number belongs to anm'' 
when call_response = ''com.argusoft.imtecho.gvk.call.not-reachable'' then ''Not reachable''
when call_response = ''com.argusoft.imtecho.gvk.call.phone-switched-off'' then ''Phone switched off''
when call_response = ''com.argusoft.imtecho.gvk.call.number-collection-pending'' then ''Number collection pending''			-- todo
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary-husband'' then ''number of beneficiary''
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary''
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-family-member''
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-neighbour''
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-or-anm-husband'' then ''ANM or husband''			-- todo
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-ashah-or-asha-husband'' then ''Asha or husband''			-- todo
else ''Other'' end reason,
master.mobile_number\:\:json,
master.location_id,
master.created_on,
master.call_type,
master.created_by,
master.id
from unsuccess_calls_details master
 ),
mo as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code in (''mo_phc'',''mo_uphc''))
),
mo_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	mo group by location_id
),
mo_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from mo_unique mo
	inner join um_user um on um.id = mo.mo_id
),
asha as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code = ''ASHA'')
    where uu.state = ''ACTIVE''
),
asha_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	asha group by location_id
),
asha_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from asha_unique mo
	inner join um_user um on um.id = mo.mo_id
),
anm as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code = ''FHW'')
    where uu.state = ''ACTIVE''
),
anm_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	anm group by location_id
),
anm_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from anm_unique mo
	inner join um_user um on um.id = mo.mo_id
),

contacts as (
	select json_array_elements(mobile_number)->>''mobileNumber'' as contact ,json_array_elements(mobile_number)->>''isCalled'' as isCalled ,id
	from response where mobile_number is not null ),
contacts_display_date as (	
	select string_agg(
	case when isCalled=''true'' then concat(''<b>'',contact,''</b>'') else contact end
	,'','') as contact,id from contacts
	group by id)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
resp.name as "Called Person",
Location_hierarchy as "Location",
contacts.contact as "Dialed Number",
to_char(resp.created_on,''DD-MM-YYYY HH:MI PM'') as  "Call Date",
case when resp.call_type = ''FHW_HIGH_RISK_CONF'' then ''FHW highrisk conformation''
when resp.call_type = ''IMMUN_VERI'' then ''Immunization verification''
when resp.call_type = ''FAM_VERI'' then ''Family verification''
when resp.call_type = ''PREG_REGI_VERI'' then ''Pregnancy registration verification''
when resp.call_type = ''HIGH_RISK_VERI'' then ''Highrisk followup verification''
when resp.call_type = ''MIG_IN_VERI'' then ''Member IN migration verification''
when resp.call_type = ''MIG_OUT_VERI'' then ''Member OUT migration verification''
when resp.call_type = ''DUP_MEM_VERI'' then ''Duplicate member verification'' end as "Call Type",
--resp.reason as "Reason for Unsuccessful Calling",
mo.name as "MO Details",
anm.name as "ANM Details",
asha.name as "ASHA Details"
,concat(um.first_name, '' '', um.last_name) as "RO Details" 
--fhw.name
from response resp
left join contacts_display_date contacts on resp.id = contacts.id
left join mo_details mo on mo.location_id = resp.location_id
left join anm_details anm on anm.location_id = resp.location_id
left join asha_details asha on asha.location_id = resp.location_id
left join um_user um on resp.created_by = um.id',true,'ACTIVE','678db30e-2d81-43d9-9334-cd25cc6519db'),
	 (1313,66522,'2019-08-14 15:25:07.005',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,call_type,location_id','with unsuccess_calls as(
	select 
	*
	from gvk_manage_call_master master
	where call_response in (''com.argusoft.imtecho.gvk.call.phone-switched-off'')
	and location_id in (select child_id from location_hierchy_closer_det where parent_id = (case when #location_id# = -2 then 2 else #location_id# end) 
and depth <= (case when #location_id# = -2 then 0 else 8 end))
       and case when ''all'' = ''#call_type#'' then true 
       when ''#call_type#'' = ''FHW_CH_SER_VERI'' then call_type in (''FHW_CH_SER_VERI'',''FHW_DEL_VERI'',''FHW_TT_VERI'',''FHW_CH_SER_PREG_VERI'')
       else call_type = ''#call_type#'' end
       and created_on between case when ''#from_date#'' = ''null'' then now() else to_date(''#from_date#'',''MM-DD-YYYY'') end and to_date(case when ''#to_date#'' = ''null'' then null 
       else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds''
       order by id #limit_offset#
),
unsuccess_calls_details as (
	select 
	concat(im.first_name,'' '',im.last_name, ''('',im.unique_health_id ,'')'') as name,
	master.mobile_number,
	master.created_on,
	master.call_type,
	master.location_id,
	master.id,
	master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join imt_member im on im.id = master.member_id
	where call_response != ''com.argusoft.imtecho.gvk.call.success''
	
	union all 
	select 
	concat(uu.first_name,'' '',uu.last_name, ''('',role.name ,'')'') as name,
	master.mobile_number,
	master.created_on,
	master.call_type,
	master.location_id,
	master.id,
	master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join um_user uu on uu.id = master.user_id
	inner join um_role_master role on uu.role_id = role.id 
	where call_response != ''com.argusoft.imtecho.gvk.call.success''
	
	union  all
	select 
	case when im.id is null then imf.family_id else concat(im.first_name,'' '',im.last_name, '' ('',imf.family_id ,'')'') end as name,
	master.mobile_number,
master.created_on,
master.call_type,
	master.location_id,
	master.id,
	master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join imt_family imf on imf.family_id = master.family_id
	left join imt_member im on im.family_id = imf.family_id and im.family_head = true
	where call_response != ''com.argusoft.imtecho.gvk.call.success''
),
response as (
select 
master.name,
get_location_hierarchy(master.location_id) as Location_hierarchy,
case when call_response = ''com.argusoft.imtecho.gvk.call.no-number-available'' then ''No number available''
when call_response = ''com.argusoft.imtecho.gvk.call.cant-talk'' then ''Can''''t talk''
when call_response = ''com.argusoft.imtecho.gvk.call.wrong-mobile-number'' then ''Wrong mobile number''
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-asha-husband'' then ''Number belongs to asha''	-- todo
--when call_response = ''com.argusoft.imtecho.gvk.call.not-interested-in-treatment'' then ''Not intersted in treatment''
when call_response = ''com.argusoft.imtecho.gvk.call.unresponsive'' then ''Unreponsive''
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-husband'' then ''Number belongs to anm'' 
when call_response = ''com.argusoft.imtecho.gvk.call.not-reachable'' then ''Not reachable''
when call_response = ''com.argusoft.imtecho.gvk.call.phone-switched-off'' then ''Phone switched off''
when call_response = ''com.argusoft.imtecho.gvk.call.number-collection-pending'' then ''Number collection pending''			-- todo
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary-husband'' then ''number of beneficiary''
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiary''
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-family-member''
--when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-beneficiarys-neighbour''
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-or-anm-husband'' then ''ANM or husband''			-- todo
when call_response = ''com.argusoft.imtecho.gvk.call.number-belongs-to-ashah-or-asha-husband'' then ''Asha or husband''			-- todo
else ''Other'' end reason,
master.mobile_number\:\:json,
master.location_id,
master.created_on,
master.call_type,
master.created_by,
master.id
from unsuccess_calls_details master
 ),
mo as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code in (''mo_phc'',''mo_uphc''))
),
mo_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	mo group by location_id
),
mo_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from mo_unique mo
	inner join um_user um on um.id = mo.mo_id
),
asha as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code = ''ASHA'')
    where uu.state = ''ACTIVE''
),
asha_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	asha group by location_id
),
asha_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from asha_unique mo
	inner join um_user um on um.id = mo.mo_id
),
anm as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id and uml.state = ''ACTIVE''
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code = ''FHW'')
    where uu.state = ''ACTIVE''
),
anm_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	anm group by location_id
),
anm_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from anm_unique mo
	inner join um_user um on um.id = mo.mo_id
),

contacts as (
	select json_array_elements(mobile_number)->>''mobileNumber'' as contact ,json_array_elements(mobile_number)->>''isCalled'' as isCalled ,id
	from response where mobile_number is not null ),
contacts_display_date as (	
	select string_agg(
	case when isCalled=''true'' then concat(''<b>'',contact,''</b>'') else contact end
	,'','') as contact,id from contacts
	group by id)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
resp.name as "Called Person",
Location_hierarchy as "Location",
contacts.contact as "Dialed Number",
to_char(resp.created_on,''DD-MM-YYYY HH:MI PM'') as  "Call Date",

case when resp.call_type = ''FHW_HIGH_RISK_CONF'' then ''FHW highrisk conformation''
when resp.call_type = ''IMMUN_VERI'' then ''Immunization verification''
when resp.call_type = ''FAM_VERI'' then ''Family verification''
when resp.call_type = ''PREG_REGI_VERI'' then ''Pregnancy registration verification''
when resp.call_type = ''HIGH_RISK_VERI'' then ''Highrisk followup verification''
when resp.call_type = ''MIG_IN_VERI'' then ''Member IN migration verification''
when resp.call_type = ''MIG_OUT_VERI'' then ''Member OUT migration verification''
when resp.call_type = ''DUP_MEM_VERI'' then ''Duplicate member verification'' end as "Call Type",
--resp.reason as "Reason for Unsuccessful Calling",
mo.name as "MO Details",
anm.name as "ANM Details",
asha.name as "ASHA Details"
,concat(um.first_name, '' '', um.last_name) as "RO Details" 
--fhw.name
from response resp
left join contacts_display_date contacts on resp.id = contacts.id
left join mo_details mo on mo.location_id = resp.location_id
left join anm_details anm on anm.location_id = resp.location_id
left join asha_details asha on asha.location_id = resp.location_id
left join um_user um on resp.created_by = um.id',true,'ACTIVE','941750d3-0591-43d9-b501-cefe068d1d9d'),
	 (1246,409,'2019-07-24 10:50:44.058',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','f0478a37-9bd4-4fa9-8033-500bdd9a26cc'),
	 (1316,409,'2019-08-19 12:42:44.676',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','dadfe1fd-96f5-4245-9276-8441070c1d99'),
	 (1545,74841,'2020-03-23 18:26:44.776',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','18c7d42e-ff86-4375-b480-1e81198ddc9b'),
	 (756,58981,'2019-03-01 19:43:55.732',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id','--TT - 1 (Service provide to pregnant women with lmp)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_month_year,
to_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') as to_month_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
member_det as (
	select r.member_id, r.native_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p
	where r.native_location_id  = l.child_id 
	and l.parent_id = p.location_id
	and tt1_given is not null
	and r.lmp_month_year between p.from_month_year and p.to_month_year
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in ( select distinct demographic_type from location_demographic_type_master 
	where demographic_group = p.demographic_group)) 
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id, 
        string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','e4e09971-4d67-4536-98a8-1b74c8f251e8'),
	 (1256,409,'2019-07-24 10:54:58.906',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','8a1e2242-89e0-4733-8cb1-e3eed037613c'),
	 (1260,409,'2019-07-24 11:06:50.04',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','423e1a12-494e-4c06-a6a2-56e8349f145c'),
	 (752,58981,'2019-03-01 19:41:41.424',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id','--ANC-4 (Service provide to pregnant women with lmp)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_month_year,
to_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') as to_month_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
member_det as (
	select r.member_id, r.native_location_id as loc_id,	
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.date_of_delivery,''DD/MM/YYYY'') as dod
	,to_char(r.anc4,''DD/MM/YYYY'') as anc4
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, parameters p
	where r.anc4 is not null
	and r.native_location_id  = l.child_id
	and l.parent_id = p.location_id
	and r.lmp_month_year between p.from_month_year and p.to_month_year
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in ( select distinct demographic_type from location_demographic_type_master 
	where demographic_group = p.demographic_group)) 
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id,         
        string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
member_det.anc4 as "ANC4 Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','7255181e-61c8-4a81-8609-0f066c250592'),
	 (80,1027,'2018-09-18 12:45:43.519',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select ROW_NUMBER() over () as "S No.",coalesce(r1.name,''<b>Total</b>'') as "Location",
case when sum(total.count) is null then 0 else sum(total.count) end as "Total users created",
case when sum(scheduled.count) is null then 0 else sum(scheduled.count) end as "Total Scheduled",
case when sum(practicing.count) is null then 0 else sum(practicing.count) end as "No of FHW in practice",
case when sum(pending.count) is null then 0 else sum(pending.count) end as "Total Pending training",
case when sum(production.count) is null then 0 else sum(production.count) end as "No of FHW on production"
from (select lhcd.child_id,case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name
else lm.name end  from location_hierchy_closer_det lhcd 
inner join location_master lm on lhcd.child_id = lm.id
cross join prefered_language
where lhcd.parent_id = #location_id# and lhcd.depth = 1) r1
left join 
(select count(distinct us.id),lhcd.parent_id from um_user us inner join um_user_location ul on us.id = ul.user_id
inner join location_hierchy_closer_det lhcd on lhcd.child_id = ul.loc_id
where us.role_id = 30 and lhcd.parent_id in
(select child_id from location_hierchy_closer_det  
where parent_id = #location_id# and depth = 1
) and us.state = ''ACTIVE'' and ul.state = ''ACTIVE''
group by lhcd.parent_id) total
on r1.child_id = total.parent_id
left join 
(select count(distinct us.id),lhcd.parent_id from tr_certificate_master tcm inner join um_user us on tcm.user_id = us.id 
inner join um_user_location ul on us.id = ul.user_id inner join tr_training_master tm on tm.training_id = tcm.training_id
inner join location_hierchy_closer_det lhcd on lhcd.child_id = ul.loc_id
where us.role_id = 30 and tcm.certificate_type = ''COURSECOMPLETION'' and tm.training_state = ''SUBMITTED'' and lhcd.parent_id in
(select child_id from location_hierchy_closer_det  
where parent_id = #location_id# and depth = 1
) and us.state = ''ACTIVE'' and tcm.course_id = 7 and us.id not in (select user_id from user_form_access where form_code = ''RCH'') and ul.state = ''ACTIVE''
group by lhcd.parent_id) practicing on r1.child_id = practicing.parent_id
left join 
(select count(distinct us.id),lhcd.parent_id from tr_training_master tm inner join tr_training_course_rel tcr using(training_id)
inner join
(select * from tr_training_attendee_rel union select * from tr_training_additional_attendee_rel) attendee on 
attendee.training_id = tm.training_id
inner join um_user us on us.id = attendee.attendee_id 
inner join um_user_location ul on us.id = ul.user_id 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = ul.loc_id
where tcr.course_id = 7 and us.role_id = 30 and ul.state = ''ACTIVE'' and lhcd.parent_id in
(select child_id from location_hierchy_closer_det  
where parent_id = #location_id# and depth = 1 
) and us.state = ''ACTIVE''  and tm.training_state = ''DRAFT'' and tm.expiration_date >= now()
group by lhcd.parent_id) scheduled on r1.child_id = scheduled.parent_id
left join 
(select count(distinct us.id),lhcd.parent_id from um_user us inner join um_user_location ul on us.id = ul.user_id
inner join location_hierchy_closer_det lhcd on lhcd.child_id = ul.loc_id
where us.role_id = 30 and ul.state = ''ACTIVE'' and lhcd.parent_id in
(select child_id from location_hierchy_closer_det  
where parent_id = #location_id# and depth = 1) and us.state = ''ACTIVE'' and us.id not in 
(select user_id from tr_certificate_master inner join tr_training_master using (training_id) 
where course_id = 7 and certificate_type = ''COURSECOMPLETION'' and training_state = ''SUBMITTED'')
and us.id not in ( select attendee.attendee_id from tr_training_master tm inner join tr_training_course_rel tcr on tm.training_id = tcr.training_id
inner join
(select * from tr_training_attendee_rel union select * from tr_training_additional_attendee_rel) attendee on 
attendee.training_id = tm.training_id
where tm.training_state = ''DRAFT'' and tm.expiration_date >= now() and tcr.course_id = 7
) and us.id not in (select user_id from user_form_access where form_code = ''RCH'')
group by lhcd.parent_id) pending on r1.child_id = pending.parent_id
left join 
(select count(distinct us.id),lhcd.parent_id from user_form_access ufa inner join um_user us on us.id = ufa.user_id
inner join um_user_location ul  on us.id = ul.user_id
inner join location_hierchy_closer_det lhcd on lhcd.child_id = ul.loc_id
where lhcd.parent_id in
(select child_id from location_hierchy_closer_det  
where parent_id = #location_id# and depth = 1) and us.role_id = 30 and us.state = ''ACTIVE'' and ul.state = ''ACTIVE''
and ufa.form_code = ''RCH''
group by lhcd.parent_id) production on r1.child_id = production.parent_id
group by rollup(r1.name)',true,'ACTIVE','0ce76e6b-a7cc-49dd-952f-cee52c9d29b2');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (678,409,'2019-02-21 19:34:41.464',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,health_infrastructure_type,loggedInUserId,location_id','---Final with dates-------
 with prefered_language as(
select
	(case
		when report_preferred_language = ''EN'' then true
		else false
	end) as is_enlish
from
	um_user
where
	id = #loggedInUserId#),
location_det as(
select
	child_id as loc_id
from
	location_hierchy_closer_det
where
	parent_id = #location_id# ),
health_infrastructure_det as(
select
	health_infrastructure_details.id,
	health_infrastructure_details.name,
	listvalue_field_value_detail.value ,
	health_infrastructure_details.location_id
from
	health_infrastructure_details
inner join listvalue_field_value_detail on
	health_infrastructure_details.type = listvalue_field_value_detail.id
where
	location_id in (
		select loc_id
	from
		location_det)
	and (''#health_infrastructure_type#'' = ''null''
	or ''#health_infrastructure_type#'' = ''''
	or type = #health_infrastructure_type#)
    and health_infrastructure_details.is_no_reporting_unit is not true
order by
	health_infrastructure_details.name #limit_offset# ),
health_infrastructure_loc_det as(
select
	child_id as loc_id,
	string_agg((case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name else location_master.name end), ''>'' order by depth desc) as name
from
	location_hierchy_closer_det,
	location_master,
	prefered_language
where
	child_id in (
	select
		distinct location_id
	from
		health_infrastructure_det)
	and location_master.id = parent_id
group by
	child_id ),
dates as(
select
	to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM/DD/YYYY'') as from_date ,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end, ''MM/DD/YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_date ),
wpd as (
select
	hid.id,
	count(*) as no_of_deliveries
from
	health_infrastructure_det hid
inner join rch_wpd_mother_master rwm on
	hid.id = rwm.health_infrastructure_id
inner join dates on
	true = true
where
	rwm.created_on between dates.from_date and dates.to_date
	and  rwm.is_from_web = true
group by
	hid.id ),
anc as (
select
	hid.id,
	count(*) as no_of_anc
from
	health_infrastructure_det hid
inner join rch_anc_master ram on
	hid.id = ram.health_infrastructure_id
inner join dates on
	true = true
where
	ram.created_on between dates.from_date and dates.to_date
	and ram.is_from_web = true
group by
	hid.id ),
pnc as (
select
	hid.id,
	count(*) as no_of_pnc
from
	health_infrastructure_det hid
inner join rch_pnc_master rpm on
	hid.id = rpm.health_infrastructure_id
inner join dates on
	true = true
where
	rpm.created_on between dates.from_date and dates.to_date
	and  rpm.is_from_web = true
group by
	hid.id ),
child as (
select
	hid.id,
	count(*) as no_of_child
from
	health_infrastructure_det hid
inner join rch_child_service_master rcsm  on
	hid.id = rcsm.health_infrastructure_id
inner join dates on
	true = true
where
	rcsm.created_on between dates.from_date and dates.to_date
	and  rcsm.is_from_web = true
group by
	hid.id ) select
	row_number() over () as "Sr No.",
	t1.*
from
	(
		select
		--ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
 h.name as "Name" ,
		h.value as "Type" ,
		h.id as hidden_health_infra_id ,
		h.location_id as hidden_location_id ,
		health_infrastructure_loc_det.name as "Location detail" ,
		coalesce(no_of_deliveries, 0) as "WPD" ,
		coalesce(no_of_anc, 0) as "ANC" ,
		coalesce(no_of_pnc, 0) as "PNC" ,
		coalesce(no_of_child, 0) as "Child Service"
	from
		health_infrastructure_det h
	inner join health_infrastructure_loc_det on
		h.location_id = health_infrastructure_loc_det.loc_id
	left join wpd on
		h.id = wpd.id
	left join anc on
		h.id = anc.id
	left join pnc on
		h.id = pnc.id
	left join child on
		h.id = child.id
	order by
		h.id) as t1',true,'ACTIVE','9d590354-28c1-429f-ae09-4f73ec20c543'),
	 (1635,74841,'2020-05-22 17:49:33.931',1,'2021-01-13 20:22:06.427965','filter_type','select 
case when #filter_type# = ''all'' then ''All'' 
 when #filter_type# = ''total_0to5_children'' then ''Age 0 to 5'' 
 when #filter_type# = ''total_6_to_10'' then ''Age 6 to 10'' 
 when #filter_type# = ''total_11_to_49'' then ''Age 11 to 49'' 
 when #filter_type# = ''total_50_to_59'' then ''Age 50 to 59'' 
 when #filter_type# = ''total_60_plus'' then ''Age 60+'' 
end
as filter_type',true,'ACTIVE','cd52e850-f73e-4cc5-bdcd-08ca19543a2a'),
	 (999,60512,'2019-04-16 11:13:35.546',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','ed43e0ce-4753-43d2-91a0-cda414c68a7e'),
	 (1666,409,'2020-06-30 15:03:59.203',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','3bd4c411-564d-4a2d-a2c2-5945a9dc8b93'),
	 (655,409,'2019-02-19 20:51:22.143',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','7aa81b59-6bca-4d50-a38c-c21c734b5cba'),
	 (531,1,'2019-02-14 16:06:00.355',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,demographic_location_id,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#
)
,parameter as (
	select CAST(''#demographic_location_id#'' AS TEXT) as demographic_group
)
,child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
    inner join parameter p on true = true
	where l.child_id = c.opv2_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.opv2 is not null
    and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	group by m.id, f.location_id, c.dob, opv2
	having cast(date_trunc(''month'', opv2) as date) between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','f64123df-98ff-4c6d-8cf7-92903ec0b0e1'),
	 (1099,63746,'2019-05-01 17:10:23.496',1,'2021-01-13 20:22:06.427965','limit_offset,age_group_or_child_count,location_id','with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)
,member_location as (
	select m.member_id, m.loc_id  from rch_eligible_couple_analytics m
	inner join locations on locations.child_id = m.loc_id
        where  ( case 
		when ''#age_group_or_child_count#'' = ''5+'' then children_count >= 5
		when ''#age_group_or_child_count#'' = ''0'' then children_count is null 
		when ''#age_group_or_child_count#'' = ''1'' then children_count = 1 
		when ''#age_group_or_child_count#'' = ''2'' then children_count = 2 
		when ''#age_group_or_child_count#'' = ''3'' then children_count = 3 
		when ''#age_group_or_child_count#'' = ''4'' then children_count = 4
		when ''#age_group_or_child_count#'' = ''null'' then true
	end) and m.last_method_of_contraception in (''MLSTR'') 
        #limit_offset#
)
,loc_det as(
	select member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id
	,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id
	from location_master,location_type_master,member_location 
	where 
	location_master.id = member_location.loc_id and location_type_master.type = location_master.type
)
select 
	 ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
	mem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as "Member Name",
	fam.family_id as "Family Id",to_char(r.dob, ''DD/MM/YYYY'') as "Birth Date",
	string_agg(lm.name,''> '' order by lhcd.depth desc) as "Location Hierarchy"  
from rch_eligible_couple_analytics r
inner join loc_det on loc_det.member_id = r.member_id
inner join imt_member mem on mem.id = r.member_id
inner join imt_family fam on mem.family_id = fam.family_id
inner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id
inner join location_master lm on lm.id = lhcd.parent_id
group by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;',true,'ACTIVE','3400621c-e87e-4cd5-9e0c-3b3cef30c4c6'),
	 (1639,74841,'2020-06-23 01:23:29.091',1,'2021-01-13 20:22:06.427965',NULL,'select  value as hospital_type from listvalue_field_value_detail where field_key = ''infra_type'' and code in (''P'',''SC'',''U'',''G'',''D'',''B'',''C'');',true,'ACTIVE','de3ddee1-2d95-4b6f-8550-44f54426f32f'),
	 (685,409,'2019-02-27 13:23:32.799',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','70a17801-3749-441e-9cdf-c96182508b0e'),
	 (670,409,'2019-02-19 20:58:37.791',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','73878fee-8f0f-41ce-ac42-42a5e9d0bc85');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (258,1,'2019-02-05 12:11:39.244',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--FIPV 2 given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 years as ( 
	select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, 
	cast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date
	from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc
), child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.is_valid_for_tracking_report = true
    and y.financial_year = ''#financial_year#''
	and c.opv3 is not null
	and c.dob between y.from_date and y.too_date
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','48ffacb4-4c3a-4d84-9a8c-4548eed5a85d'),
	 (1599,74840,'2020-04-20 18:43:29.535',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','dbcfb226-8b2b-4c87-95ae-748e0015f5ba'),
	 (1562,92665,'2020-04-09 14:02:06.313',1,'2021-01-13 20:22:06.427965','limit_offset,location_id','with location_filter as (
	select lm.id, lm."name" , lm.english_name ,lm."type" from location_hierchy_closer_det lhcd inner join location_master lm on lm.id = lhcd.child_id where lhcd.parent_id = #location_id#
)
select 
row_number() over() as "Sr. no",
hid."name" ,
(select lm.name from location_hierchy_closer_det lhcd  inner join location_master lm on lhcd.parent_id = lm.id and lhcd.parent_loc_type = ''D'' where lhcd.child_id = hid.location_id ) as district,
(select lm.name from location_hierchy_closer_det lhcd  inner join location_master lm on lhcd.parent_id = lm.id and lhcd.parent_loc_type = ''B'' where lhcd.child_id = hid.location_id ) as block
from location_filter lf inner join health_infrastructure_details hid on lf.id = hid.location_id where ( hid.longitude is null or hid.longitude = ''0'' or hid.longitude = ''''
									or	hid.latitude is null or hid.latitude = ''0'' or hid.latitude = '''' ) and hid."type" in (1061,1062,1063,1007,1008,1009,1012,1084) #limit_offset# ;',true,'ACTIVE','8ff15c6e-2de8-4d99-b1b7-7f504adf007e'),
	 (1524,74840,'2020-02-28 15:40:13.57',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','7937eb0c-45b1-4f96-b881-08ea2d2efe81'),
	 (412,1,'2019-02-13 12:51:25.245',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','6c9785d5-6d18-4286-bd62-2c0bef0c8dbc'),
	 (782,58981,'2019-03-06 15:29:47.912',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','e28c0cc3-a8a3-45a2-b5f6-df6019c9fa43'),
	 (539,1,'2019-02-14 16:12:09.115',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,demographic_location_id,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#
)
,parameter as (
	select CAST(''#demographic_location_id#'' AS TEXT) as demographic_group
)
,child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
    inner join parameter p on true = true
	where l.child_id = c.penta3_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.penta3 is not null
    and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	group by m.id, f.location_id, c.dob, penta3
	having cast(date_trunc(''month'', penta3) as date)  between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','1c69d752-ebe4-4cce-9a8f-b20edd69a5e3'),
	 (104,409,'2018-12-12 12:09:40.035',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 parent_loc_detail as (
select child_id as parent_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1
),loc_detail as (
select distinct location_hierchy_closer_det.parent_id,location_hierchy_closer_det .child_id from location_hierchy_closer_det
inner join location_hierchy_closer_det p1 on p1.child_id =  location_hierchy_closer_det.child_id and p1.parent_loc_type in (''U'',''B'')
where location_hierchy_closer_det.parent_id in (select * from parent_loc_detail)
),rch_anc_detail as (
select loc_detail.parent_id,count(*) as rch
from rch_anc_master,loc_detail
where location_id = loc_detail.child_id
and created_by != -1 and
(''#from_date#'' = ''null'' or created_on >= cast ((case when ''#from_date#'' = ''null'' then ''01-01-1970'' else ''#from_date#'' end) as date)) 
and (''#to_date#'' = ''null'' or created_on <= cast((case when ''#to_date#'' = ''null'' then ''01-01-1970'' else ''#to_date#'' end) as date))
group by loc_detail.parent_id
),rch_lmp_detail as (
select loc_detail.parent_id,count(*) as rch
from rch_lmp_follow_up,loc_detail
where location_id = loc_detail.child_id
and created_by != -1 and
(''#from_date#'' = ''null'' or created_on >= cast ((case when ''#from_date#'' = ''null'' then ''01-01-1970'' else ''#from_date#'' end) as date)) 
and (''#to_date#'' = ''null'' or created_on <= cast((case when ''#to_date#'' = ''null'' then ''01-01-1970'' else ''#to_date#'' end) as date))
group by loc_detail.parent_id
),rch_wpd_detail as (
select loc_detail.parent_id,count(*) as rch
from rch_wpd_mother_master,loc_detail
where location_id = loc_detail.child_id
and created_by != -1 and
(''#from_date#'' = ''null'' or created_on >= cast ((case when ''#from_date#'' = ''null'' then ''01-01-1970'' else ''#from_date#'' end) as date)) 
and (''#to_date#'' = ''null'' or created_on <= cast((case when ''#to_date#'' = ''null'' then ''01-01-1970'' else ''#to_date#'' end) as date))
group by loc_detail.parent_id 
),rch_pnc_detail as (
select loc_detail.parent_id,count(*) as rch
from rch_pnc_master,loc_detail
where location_id = loc_detail.child_id
and created_by != -1 and
(''#from_date#'' = ''null'' or created_on >= cast ((case when ''#from_date#'' = ''null'' then ''01-01-1970'' else ''#from_date#'' end) as date)) 
and (''#to_date#'' = ''null'' or created_on <= cast((case when ''#to_date#'' = ''null'' then ''01-01-1970'' else ''#to_date#'' end) as date))
group by loc_detail.parent_id 
),rch_child_detail as (
select loc_detail.parent_id,count(*) as rch
from rch_child_service_master,loc_detail
where location_id = loc_detail.child_id
and created_by != -1 and
(''#from_date#'' = ''null'' or created_on >= cast ((case when ''#from_date#'' = ''null'' then ''01-01-1970'' else ''#from_date#'' end) as date)) 
and (''#to_date#'' = ''null'' or created_on <= cast((case when ''#to_date#'' = ''null'' then ''01-01-1970'' else ''#to_date#'' end) as date))
group by loc_detail.parent_id 
)select case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
else location_master.name end as "Location Name"
,COALESCE(rch_lmp_detail.rch,0) as "Lmp Follow Up"
,COALESCE(rch_anc_detail.rch,0) as "ANC"
,COALESCE(rch_wpd_detail.rch,0) as "WPD"
,COALESCE(rch_pnc_detail.rch,0) as "PNC"
,COALESCE(rch_child_detail.rch,0) as "CHV"
from parent_loc_detail u
inner join location_master on location_master.id = u.parent_id
left join rch_lmp_detail on u.parent_id = rch_lmp_detail.parent_id
left join rch_anc_detail on u.parent_id = rch_anc_detail.parent_id
left join rch_wpd_detail on u.parent_id = rch_wpd_detail.parent_id
left join rch_pnc_detail on u.parent_id = rch_pnc_detail.parent_id
left join rch_child_detail on u.parent_id = rch_child_detail.parent_id
cross join prefered_language 
order by location_master.name',true,'ACTIVE','c7798057-537e-4bde-840a-9af7b5f1b21d'),
	 (333,1,'2019-02-12 17:38:22.165',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Infants given Penta 3 After 12 months of DOB(Child for monitoring of Pentavalent 3 Vaccine as per Date of Birth)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.member_id is not null
	and c.death_date is null
	and c.penta3 is not null 
	and c.penta3 > m.dob + interval ''12 months''
and c.is_valid_for_tracking_report = true
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi  
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','29ee182a-163f-4b60-9c70-b3d47f553889'),
	 (1531,74841,'2020-03-04 15:21:56.267',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','fefba2b0-73d1-48f8-889d-a46dd1e0a734');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (532,1,'2019-02-14 16:11:35.457',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','78791292-c782-417a-ba90-5f576693fad5'),
	 (533,1,'2019-02-14 16:11:35.461',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','e52b8faf-2b86-481c-8166-91702437488f'),
	 (534,1,'2019-02-14 16:11:35.463',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','46f74967-a68e-4a76-833d-d2411d7235bf'),
	 (535,1,'2019-02-14 16:11:35.473',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,demographic_location_id,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#
)
,parameter as (
	select CAST(''#demographic_location_id#'' AS TEXT) as demographic_group
)
,child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
    inner join parameter p on true = true
	where l.child_id = c.opv3_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.opv3 is not null
    and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	group by m.id, f.location_id, c.dob, opv3
	having cast(date_trunc(''month'', opv3) as date)  between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','c693f99c-6b7a-438e-b782-561dc18e2a8b'),
	 (546,1,'2019-02-14 16:21:01.344',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','97c5521f-28bc-4183-b8f8-f979975eb19a'),
	 (1662,74840,'2020-06-29 13:34:07.435',1,'2021-01-13 20:22:06.427965','limit_offset,loggedInUserId,location_id,age','with user_lang as (    
	select prefered_language as lang from um_user uu where id =  CAST(#loggedInUserId# AS INTEGER) 
),
parameters as (
    select
	CAST(#location_id# AS INTEGER) as loc_id,
	cast(#age# as INTEGER) as age
)
,child_details as (	
	select	
	child.location_id as Location_id,
	child.child_name,
	child.parent_name,
	case when child.contact_detail is null  or  child.contact_detail = '''' then ''N/A''
       else cast(child.contact_detail as text)
       end as contact_detail,	
	dob,
	case when p.age = 8 then 7.5 else p.age end as age,
	case when l.lang=''EN'' then lm3.english_name else lm3.name end as "District",
	lm3.lgd_code  as "District Code",
	case when l.lang=''EN'' then lm4.english_name else lm4.name end as "Taluka",
	lm4.lgd_code  as "Taluka Code",
	case when l.lang=''En'' then lm7.english_name else lm7.name end as "Village",
	lm7.lgd_code  as "Village Code"
	from zzz_child_weight_wise_analytics_5_to_7_5_year child inner join location_hierchy_closer_det loc
		on child.location_id = loc.child_id
		inner join location_level_hierarchy_master llhm on child.Location_id = llhm.location_id 
inner join user_lang l on true = true
	left join location_master lm3 on
	lm3.id = llhm.level3  and lm3.state = ''ACTIVE'' and lm3.name not ilike ''%delete%''
	left join location_master lm4 on
	lm4.id = llhm.level4 and lm4.state = ''ACTIVE'' and lm4.name not ilike ''%delete%''
	left join location_master lm7 on
	lm7.id = llhm.level7 and lm7.state = ''ACTIVE'' and lm7.name not ilike ''%delete%''
		inner join parameters p on true = true  
	where loc.parent_id = p.loc_id
	and
	--	here we have considerd 7.5 as 8 because we have stored int value in analytics table
	child.age = p.age
	order by "District","Taluka","Village",child.child_name
	#limit_offset#
)
,final_det as (
	select
	ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
	child_name as "Child Name",
	to_char(dob, ''DD/MM/YYYY'') as "DOB",
	age as "Age",
	parent_name as "Parent Details",
	contact_detail as "Contact Detail",
	"District",
	"District Code",
	"Taluka",
	"Taluka Code",
	"Village",
	"Village Code"
	from child_details child
	inner join user_lang l on true = true

)
select * from final_det',true,'ACTIVE','20c25b95-9793-4faf-8a57-4dca9faef4bd'),
	 (547,1,'2019-02-14 16:21:01.352',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,demographic_location_id,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#
)
,parameter as (
	select CAST(''#demographic_location_id#'' AS TEXT) as demographic_group
)
,child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
    inner join parameter p on true = true
	where l.child_id = c.f_ipv2_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.f_ipv2 is not null
    and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	group by m.id, f.location_id, c.dob, f_ipv2
	having cast(date_trunc(''month'', f_ipv2) as date)  between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','c3efbbdd-ded8-4c85-b852-15e95e22ca37'),
	 (954,60512,'2019-04-10 17:47:25.159',1,'2021-01-13 20:22:06.427965','depth_flag,limit_offset,loggedInUserId,location_id','with prefered_language as (
select 	case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end as is_enlish
from um_user where id = #loggedInUserId# 
), health_infra_ids as(
	select id,name,location_id,address from health_infrastructure_details where location_id in
	(select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth <= (case when #depth_flag# = -1 then 0 else 8 end))
	and type in (1009,1084)
	#limit_offset#
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
health_infra_ids.name as "Name",
case when prefered_language.is_enlish then get_location_hierarchy_language_wise(health_infra_ids.location_id, ''EN'')
				else get_location_hierarchy(health_infra_ids.location_id) end as "Location",
case when health_infra_ids.address is not null and health_infra_ids.address !='''' and health_infra_ids.address !=''null'' then health_infra_ids.address else ''N.A'' end as "Address"
from health_infra_ids
inner join prefered_language on true',true,'ACTIVE','123dc5f2-63d3-4f2d-bbbe-b265c7c76a0d'),
	 (543,1,'2019-02-14 16:20:37.9',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,demographic_location_id,to_month_year,loggedInUserId,location_id','---Measles Monthly---

with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
,parameter as (
	select CAST(''#demographic_location_id#'' AS TEXT) as demographic_group
)
,child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
    inner join parameter p on true = true
	where l.child_id = c.measles_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.measles is not null
    and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	group by m.id, f.location_id, c.dob, measles
	having cast(date_trunc(''month'', measles) as date)  between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','9592f5d2-ed05-47ac-a50a-7adb1165f5c9'),
	 (1537,74840,'2020-03-05 18:55:23.843',1,'2021-01-13 20:22:06.427965',NULL,'select ''No of Time'' as order_by
union all
select ''Avg. Active Time'' as order_by
union all
select ''Max Active Time'' as order_by',true,'ACTIVE','eea54d20-a982-4664-a452-d52e55a8f0f0');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1057,64189,'2019-04-29 13:35:47.969',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','e0a464fa-f114-4539-a7b1-6b0d6afc4178'),
	 (1059,64189,'2019-04-29 13:35:48.002',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','d9696113-eed0-4d8a-a1f8-49f3365214f3'),
	 (1060,64189,'2019-04-29 13:35:48.012',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,demographic_location_id,to_month_year,loggedInUserId,location_id','---Measles Rubella Monthly---

with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#
)
,parameter as (
	select CAST(''#demographic_location_id#'' AS TEXT) as demographic_group
)
,dates as(
select to_date(case when ''#from_month_year#'' = ''null'' then null else ''#from_month_year#'' end,''MM/DD/YYYY'') from_date
,to_date(case when ''#to_month_year#'' = ''null'' then null else ''#to_month_year#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date
),child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f,dates
    inner join parameter p on true = true
	where l.child_id = c.measles_rubella_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.measles_rubella is not null
	and measles_rubella between dates.from_date and dates.to_date
    and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','2ce212aa-b755-49a9-ac7a-1569aee92736'),
	 (1497,74840,'2020-01-23 15:51:05.334',1,'2021-01-13 20:22:06.427965',NULL,'select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as year 
from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by year desc;',true,'ACTIVE','29b51ed8-1ed3-4448-b74a-35b3398022c0'),
	 (1665,409,'2020-06-30 14:44:32.578',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with user_lang as (    
	select prefered_language as lang from um_user uu where id =  CAST(#loggedInUserId# AS INTEGER) 
),
loc_detail as (
    select * from location_master where id in (
	select
	child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1)
),child_details as (	
	select	
	lh.parent_id as Location_id,
	count(1) filter(where child.age = 5) as age5,
	count(1) filter(where child.age = 6) as age6,
	count(1) filter(where child.age = 7) as age7,
	count(1) filter(where child.age = 8) as age7_5
	from loc_detail
	inner join location_hierchy_closer_det lh on lh.parent_id = loc_detail.id
	inner join zzz_child_weight_wise_analytics_5_to_7_5_year child on child.location_id = lh.child_id
	group by lh.parent_id
),final_det as(
select
ld.id as hidden_location_id,
case when l.lang=''EN'' then ld.english_name else ld.name end as "Location",
age5 as "Age 5",
age6 as "Age 6",
age7 as "Age 7",
age7_5 as  "Age 7.5"
from loc_detail ld
inner join user_lang l on true = true
left join child_details child on child.location_id = ld.id
order by "Location"
)
select
ROW_NUMBER() over () "Sr No",
*
from final_det
union all
select
null,
#location_id#,
''<b>Total<b>'',
sum("Age 5"),
sum("Age 6"),
sum("Age 7"),
sum("Age 7.5")
from final_det',true,'ACTIVE','eb166d61-5ec4-4dc4-82bd-e3575023761e'),
	 (1499,74840,'2020-01-23 18:48:54.899',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','15b032a7-0848-4794-ae6e-30e4cd5dd178'),
	 (1365,69973,'2019-08-20 18:12:53.477',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','0eeb8e03-8344-452c-8c05-302beee6ed03'),
	 (92,1027,'2018-10-12 12:48:49.528',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with anc_data as 
(select res.pregnancy_reg_det_id as hidden_id,res.lmp,   
res.unique_health_id as "Health Id",res.name as "Name",res.edd as "Estimated Delivery Date",res.visit as "Visit No",res.id as hidded_ram_id,
res."Visit date",res."Weight",res."Haemoglobin count",res."BP",res."IFA tablets given" as "No of IFA tablets given",
res."Calcium tablets given" as "No of calcium tablets given",
res."Albendazole given" as "Is albendazole given\?",res."Abdominal examination",
coalesce(max(case when rim.immunisation_given = ''TT1'' then to_char(rim.given_on\:\:date,''DD/MM/YYYY'') end),''NA'') as "TT1 given date",
coalesce(max(case when rim.immunisation_given = ''TT2'' then to_char(rim.given_on\:\:date,''DD/MM/YYYY'') end),''NA'') as "TT2 given date",
res."Danger signs",res."Referral Place if done",res."Reason for death if dead",res."VDRL test",res."HIV test",
res."Albumin",res."Urine Sugar" from
(select ram.id,ram.pregnancy_reg_det_id,mem.unique_health_id,mem.first_name || '' '' || mem.last_name as name,coalesce(to_char(rprd.edd,''DD/MM/YYYY''),''NA'') as edd,
case when ram.created_on\:\:date - mem.lmp between 0 and 91 then 1 when ram.created_on\:\:date - mem.lmp between 92 and 182 then 2
when ram.created_on\:\:date - mem.lmp between 190 and 238 then 3 else 4 end as visit,to_char(ram.created_on\:\:date,''DD/MM/YYYY'') as "Visit date",
coalesce(ram.weight\:\:text,''NA'') as "Weight",coalesce(round(ram.haemoglobin_count\:\:numeric,2)\:\:text,''NA'') as "Haemoglobin count",
concat(''Systolic:'',coalesce(ram.systolic_bp\:\:text,''NA''),''<br>'',''Diastolic:'',coalesce(ram.diastolic_bp\:\:text,''NA'')) as "BP",
coalesce(ram.ifa_tablets_given\:\:text,''NA'') as "IFA tablets given",coalesce(ram.calcium_tablets_given\:\:text,''NA'') as "Calcium tablets given",
case when ram.albendazole_given = true then ''Y'' else ''N'' end as "Albendazole given",
coalesce(ram.foetal_movement,''NA'') as "Abdominal examination",
coalesce(lfvd.value,coalesce(ram.other_dangerous_sign,''NA'')) as "Danger signs",
case when ram.referral_done = ''YES'' then ref.value else ''NA'' end as "Referral Place if done",
case when ram.dead_flag = true then dead.value else ''NA'' end as "Reason for death if dead",
case when ram.vdrl_test = ''POSITIVE'' then ''+'' else ''-'' end as "VDRL test",
case when ram.hiv_test = ''POSITIVE'' then ''+'' else ''-'' end as "HIV test",
coalesce(urine_albumin,''NA'') as "Albumin",coalesce(urine_sugar,''NA'') as "Urine Sugar",
rprd.lmp_date as lmp
from rch_anc_master ram
inner join imt_member mem on ram.member_id = mem.id
inner join rch_pregnancy_registration_det rprd on rprd.id = ram.pregnancy_reg_det_id
inner join location_hierchy_closer_det lhcd on ram.location_id = lhcd.child_id
left join listvalue_field_value_detail lfvd on lfvd.id = ram.dangerous_sign_id\:\:bigint
left join listvalue_field_value_detail ref on ref.id = ram.referral_place
left join listvalue_field_value_detail dead on dead.id = ram.death_reason\:\: bigint
where (#location_id# is not null and lhcd.parent_id = #location_id#) and ram.created_by is not null and
(#from_date# is null or ram.created_on >=(case when #from_date# is null then ''01/01/1970'' else ''#from_date#'' end)\:\:Date)
and (#to_date# is null or ram.created_on <(case when #to_date# is null then ''01/01/1970'' else (date (case when #to_date# is null then ''01/01/1970'' else ''#to_date#'' end) + integer ''1'')end)\:\:Date) 
#limit_offset#) res
left join rch_immunisation_master rim on 
rim.pregnancy_reg_det_id = res.pregnancy_reg_det_id and rim.member_type = ''M''
group by res.id,rim.pregnancy_reg_det_id,res.unique_health_id,res.name,res.edd,res.visit,res."Visit date",res.pregnancy_reg_det_id,
res."Weight",res."Haemoglobin count",res."BP",res."IFA tablets given",res."Calcium tablets given",
res."Albendazole given",res."Danger signs",res."Reason for death if dead",res."Referral Place if done",
res."VDRL test",res."HIV test",res."Albumin",res."Urine Sugar",res."Abdominal examination",res.lmp)
,first_anc as (
 	select min(ram.id) as id,ram.pregnancy_reg_det_id from rch_anc_master ram inner join anc_data on ram.pregnancy_reg_det_id = anc_data.hidden_id
 	group by ram.pregnancy_reg_det_id	
)

select ROW_NUMBER() over ()+SUBSTRING (''#limit_offset#'',POSITION(''offset'' in ''#limit_offset#'')+7)\:\:int as "Sr No",
concat(case when anc_data.hidded_ram_id = first_anc.id then ''*'' else '''' end,anc_data."Health Id") as "Health Id",anc_data."Name",
anc_data."Estimated Delivery Date",
case when anc_data.hidded_ram_id = first_anc.id then coalesce(to_char(anc_data.lmp,''DD/MM/YYYY''),''NA'') else ''NA'' end as "LMP Date",
anc_datA."Visit No",anc_data."Visit date",anc_data."Weight",anc_data."Haemoglobin count",anc_data."BP",
anc_data."No of IFA tablets given",anc_data."No of calcium tablets given",anc_data."Is albendazole given\?",anc_data."Abdominal examination",
anc_data."TT1 given date",anc_data."TT2 given date",anc_data."Danger signs",anc_data."Referral Place if done",
anc_data."Reason for death if dead",anc_data."VDRL test",anc_data."HIV test",anc_data."Albumin",anc_data."Urine Sugar"
from anc_data inner join first_anc on anc_data.hidden_id = first_anc.pregnancy_reg_det_id',true,'ACTIVE','d748e400-db58-47b5-8f62-f4437409ced6'),
	 (1249,409,'2019-07-24 10:50:44.092',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,demographic_location_id,to_month_year,loggedInUserId,location_id','--rota_virus_1
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#
)
,parameter as (
	select CAST(''#demographic_location_id#'' AS TEXT) as demographic_group
)
,child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
    inner join parameter p on true = true
	where l.child_id = c.rota_virus_1_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.rota_virus_1 is not null
    and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	and c.rota_virus_1 >= ''07-01-2019''
	and cast(date_trunc(''month'', rota_virus_1) as date) between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','b3109858-e80a-4aa9-a76c-4e3b282dcc65'),
	 (1038,60512,'2019-04-22 17:32:09.666',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id','--1 PNC(Delivery Services Provided During The Year)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date,
to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),member_det as (
	select r.member_id, r.pnc1_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.pnc1,''DD/MM/YYYY'') as pnc_date	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, parameters p
	where r.pnc1_location_id  = l.child_id
	and l.parent_id = p.location_id
	and r.pnc1 between p.from_date and p.to_date
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	order by r.pnc1
	#limit_offset#
), loc_det as (
	select loc.loc_id,  
string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det)loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.pnc_date as "Pnc date",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','8619c744-72c2-4b26-8411-64bebc1399c3');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1589,409,'2020-04-11 23:45:57.121',1,'2021-01-13 20:22:06.427965','location_id','select hid.id,hid.name_in_english,hid.name,get_location_hierarchy( hid.location_id) as location
from health_infrastructure_details hid
where hid.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
and hid.is_covid_hospital
order by hid.name_in_english;',true,'ACTIVE','10d330fe-a99b-44fe-ac9c-94422faeba10'),
	 (956,60512,'2019-04-10 17:49:48.671',1,'2021-01-13 20:22:06.427965','depth_flag,limit_offset,loggedInUserId,location_id','with prefered_language as (
select 	case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end as is_enlish
from um_user where id = #loggedInUserId# 
), health_infra_ids as(
	select id,name,location_id,address from health_infrastructure_details where location_id in
	(select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth <= (case when #depth_flag# = -1 then 0 else 8 end))
	and type = 1008
	#limit_offset#
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
health_infra_ids.name as "Name",
case when prefered_language.is_enlish then get_location_hierarchy_language_wise(health_infra_ids.location_id, ''EN'')
				else get_location_hierarchy(health_infra_ids.location_id) end as "Location",
case when health_infra_ids.address is not null and health_infra_ids.address !='''' and health_infra_ids.address !=''null'' then health_infra_ids.address else ''N.A'' end as "Address"
from health_infra_ids
inner join prefered_language on true',true,'ACTIVE','95f7c2e1-7e4c-4ee9-84f7-057d5edbfa37'),
	 (784,58981,'2019-03-06 15:31:20.275',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','e4896b16-3951-428b-9eab-26a6fa35fb37'),
	 (745,58981,'2019-03-01 19:33:33.735',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','b967aed5-1cee-4d61-8c1b-14789d17fe66'),
	 (660,409,'2019-02-19 20:51:39.129',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Abortion(ANC Services Provided During The Year)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
dates as (
SELECT to_date(concat(''04-01-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 1)),''MM-DD-YYYY'') as from_date
,to_date(concat(''03-31-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 2)),''MM-DD-YYYY'') as to_date
),member_det as (
	select r.member_id, r.delivery_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.date_of_delivery, ''DD/MM/YYYY'') as dod
	,to_char(r.delivery_reg_date,''DD/MM/YYYY'') as reg_date
	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, imt_member m
	, rch_pregnancy_registration_det p
	,dates
	
	where r.member_id = m.id and r.delivery_location_id  = l.child_id and r.pregnancy_reg_id = p.id
	and r.delivery_outcome in (''ABORTION'', ''SPONT_ABORTION'')
	and l.parent_id = #location_id#
	and r.delivery_reg_date between dates.from_date and dates.to_date
	order by r.delivery_reg_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.reg_date as "Registration date",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.dod as "Abortion Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','b29730de-28b3-40eb-90ef-dcbcd0dd4956'),
	 (140,58981,'2019-01-21 14:13:36.331',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','aa774c85-855f-47f2-9762-5613d069003c'),
	 (396,1,'2019-02-13 12:25:58.547',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #location_id#',true,'ACTIVE','72378510-b470-4710-ab04-c1a65ec5691d'),
	 (656,409,'2019-02-19 20:51:22.182',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--No of del(Delivery Services Provided During The Year)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
dates as (
SELECT to_date(concat(''04-01-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 1)),''MM-DD-YYYY'') as from_date
,to_date(concat(''03-31-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 2)),''MM-DD-YYYY'') as to_date
),member_det as (
	select r.member_id, r.delivery_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.date_of_delivery, ''DD/MM/YYYY'') as dod
	,to_char(r.delivery_reg_date,''DD/MM/YYYY'') as reg_date
	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, imt_member m
	, rch_pregnancy_registration_det p
	,dates
	
	where r.member_id = m.id and r.delivery_location_id  = l.child_id and r.pregnancy_reg_id = p.id
	and r.delivery_outcome in (''LBIRTH'',''SBIRTH'')
	and l.parent_id = #location_id#
	and r.delivery_reg_date between dates.from_date and dates.to_date
        and delivery_out_of_state_govt is false and delivery_out_of_state_pvt is false
	order by r.delivery_reg_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id,  
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.reg_date as "Registration date",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.dod as "Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','9fe35a42-183a-4fbb-9da1-138ede5c457b'),
	 (643,409,'2019-02-19 19:35:49.714',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','97f10ab5-0713-4484-80a1-3731b4550ac7'),
	 (772,58981,'2019-03-06 14:29:58.723',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','af45d070-2bbf-4320-8fe2-1eb2a3d0b67a');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1591,74840,'2020-04-12 21:18:38.555',1,'2021-01-13 20:22:06.427965','infra_id,limit_offset,from_date,to_date,column','with paratemeter_det as (
	select
	case when ''#from_date#'' != ''null'' then to_date(''#from_date#'',''MM/DD/YYYY'') end as from_date,

	case when ''#to_date#'' != ''null'' then to_date(''#to_date#'',''MM/DD/YYYY'') + interval ''1 day'' - interval ''1 millisecond''  end as upto_date
)
,lab_test_det as (
select
	distinct on
	(covid_admission_detail_id)
	covid_admission_detail_id,cltd.id,sample_health_infra,sample_health_infra_send_to,lab_test_number,lab_collection_on
	from covid19_lab_test_detail cltd,covid19_admission_detail cad
	inner join paratemeter_det on true = true
	where cltd.covid_admission_detail_id = cad.id	
	and cad.status not ilike ''%_temp''
	and cltd.sample_health_infra_send_to = case when ''#infra_id#'' = ''null'' then null else cast(#infra_id# as integer) end 
	and case 
		when ''#column#'' = ''Samples Collected'' then cltd.lab_collection_on between paratemeter_det.from_date and paratemeter_det.upto_date
		
		when ''#column#'' = ''Admitted'' then cltd.lab_collection_on between paratemeter_det.from_date and paratemeter_det.upto_date
				and  cad.admission_from = ''NEW''
				
		when ''#column#'' = ''Opd'' then cltd.lab_collection_on between paratemeter_det.from_date and paratemeter_det.upto_date
				and cad.admission_from = ''OPD_ADMIT''
				
		when ''#column#'' = ''Accepted'' then cltd.lab_sample_rejected_on is null
				and cltd.lab_sample_received_on between paratemeter_det.from_date and paratemeter_det.upto_date		
		
		when ''#column#'' = ''Rejected'' then cltd.lab_sample_rejected_on is not null
				and cltd.lab_sample_rejected_on between paratemeter_det.from_date and paratemeter_det.upto_date		
		
		when ''#column#'' = ''Result Entry'' then cltd.lab_sample_rejected_on is null
				and cltd.lab_result_entry_on between paratemeter_det.from_date and paratemeter_det.upto_date		
		
		when ''#column#'' = ''Positive'' then cltd.lab_result = ''POSITIVE''
				and cltd.lab_result_entry_on between paratemeter_det.from_date and paratemeter_det.upto_date
				
		when ''#column#'' = ''Negative'' then cltd.lab_result = ''NEGATIVE''
				and cltd.lab_result_entry_on between paratemeter_det.from_date and paratemeter_det.upto_date		
		
		when ''#column#'' = ''Inderminate'' then cltd.lab_result = ''INDETERMINATE''
				and cltd.lab_result_entry_on between paratemeter_det.from_date and paratemeter_det.upto_date
		else false
		end	
			
	order by covid_admission_detail_id,	id
)
	
	select
	row_number() over (ORDER BY cad.id) as "Srno",
	concat_ws('' '', cad.first_name, cad.last_name, cad.middle_name) as "Name",
	cad.age as "Age",
	cad.gender as "Gender",
	cad.address as "Address",
	cad.occupation as "Occupation",
	cad.contact_number as "Contact Number",
	d.english_name as "District",
	s.english_name as "State",
	cast(''N/A'' as text) as "Date of arrival in India",
	cad.travelled_place as "Travel to COVID affected country (Name of country)",
	cad.flight_no as "Flight No",
	cast(''N/A'' as text) as "Seat No",
	case
		when cad.in_contact_with_covid19_paitent is not null then cad.in_contact_with_covid19_paitent
		else ''No''
	end as "H/O contact with COVID-19 case",
	cad.date_of_onset_symptom as "Date of onset of symptoms",
	concat_ws('', '' ,(case when cad.is_fever then ''Fever'' else null end) 
	,(case when cad.is_cough then ''Cough'' else null end)
	,(case when cad.is_breathlessness then ''Breathlessness'' else null end)
	,(case when cad.is_sari then ''SARI'' else null end)
	) as "Symptoms at admission",
	to_char(cad.admission_date,''DD/MM/YYYY'') as "Date of isolation",
	case
		when ltd.id is not null then ''Yes''
		else ''No''
	end "Sample collected (yes/No)",
	ltd.lab_test_number as "Sample ID",
	to_char(ltd.lab_collection_on,''DD/MM/YYYY'') as "Date of sample collection",
	hid_sample.name_in_english as "Sample collection centre",
	hid_tested.name_in_english as "Sample tested at",
	hid_tested.name_in_english as "Lab that confirmed the result",
	concat_ws('', '' ,(case when cad.is_hiv then ''HIV'' else null end) 
	,(case when cad.is_heart_patient then ''Heart Patient'' else null end)
	,(case when cad.is_diabetes then ''Diabetes'' else null end)
	,(case when cad.is_copd then ''COPD'' else null end)
	,(case when cad.is_hypertension then ''Hypertension'' else null end)
	,(case when cad.is_renal_condition then ''Renal Condition'' else null end)
	,(case when cad.is_immunocompromized then ''Immunocompromized'' else null end)
	,(case when cad.is_malignancy then ''Malignancy'' else null end)
	,(case when cad.is_other_co_mobidity then cad.other_co_mobidity else null end)
	) as "Underlying medical condition",
	cacds.health_status as "Health Status",
	case when cad.discharge_status is null then ''Admitted'' else cad.discharge_status end as "Outcome (Discharged/ Death/ Admitted)",
	to_char(cad.discharge_date,''DD/MM/YYYY'') as "Date of outcome",
	cast(''N/A'' as text) as "is patient member of covid 19",
	cast(''N/A'' as text) as "house hold contact",
	cast(''N/A'' as text) as "workplace contact",
	cast(''N/A'' as text) as "community contact",
	cast(''N/A'' as text) as "health care contact",
	cast(''N/A'' as text) as "co traveller"
from
	covid19_admission_detail cad
inner join lab_test_det ltd on
	cad.id = ltd.covid_admission_detail_id
left join covid19_admitted_case_daily_status cacds on
	cad.last_check_up_detail_id = cacds.id
left join location_master lm on
	lm.id = cad.location_id
left join location_level_hierarchy_master lh on
	lh.id = lm.location_hierarchy_id
left join health_infrastructure_details hid_sample on
	hid_sample.id = ltd.sample_health_infra
left join health_infrastructure_details hid_tested on
	hid_tested.id = ltd.sample_health_infra_send_to
left join location_master s on
	lh.level1 = s.id
	and s.state = ''ACTIVE''
	and s.name not ilike ''%delete%''
left join location_master d on
	lh.level3 = d.id
	and d.state = ''ACTIVE''
	and d.name not ilike ''%delete%''
order by
	cad.id
#limit_offset#',true,'ACTIVE','180c7030-a988-487f-ade4-5ab277f2a0e1'),
	 (773,58981,'2019-03-06 14:29:58.735',1,'2021-01-13 20:22:06.427965','limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id','--TT1 Given (Maternal Health Services provided to the mother registered during the year)
with parameters as(
select CAST(#location_id# AS INTEGER) as location_id,
CAST(''#financial_year#'' AS TEXT) as financial_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
 member_det as (
	select r.member_id, r.tracking_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p
	where r.tracking_location_id  = l.child_id
	and tt1_given is not null
	and l.parent_id = p.location_id
	and r.reg_service_financial_year = p.financial_year
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
    and r.is_valid_for_tracking_report
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','8b370eff-48ec-4146-a7a6-9b3160be1b09'),
	 (951,60512,'2019-04-10 14:56:33.253',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','6a137f86-347a-443a-8720-d53991405286'),
	 (1257,409,'2019-07-24 10:54:58.921',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,demographic_location_id,to_month_year,loggedInUserId,location_id','--rota_virus_3
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#
)
,parameter as (
	select CAST(''#demographic_location_id#'' AS TEXT) as demographic_group
) 
,child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
	inner join parameter p on true = true
	where l.child_id = c.rota_virus_3_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.rota_virus_3 is not null
	and c.rota_virus_3 >= ''07-01-2019''
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	and cast(date_trunc(''month'', rota_virus_3) as date) between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','a0e5be45-46e8-4640-852e-a7382e5bd675'),
	 (266,1,'2019-02-05 12:33:25.262',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,loggedInUserId,from_month,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#
),dates as (
select to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM-DD-YYYY'') from_date
,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM-DD-YYYY'')  + interval ''1 month'' - interval ''1 milliseconds'' to_date
),child_det as (
	select m.id, c.death_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m,dates
	where l.child_id = c.death_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.no_of_days_in_death between 0 and 365
	and c.death_date between dates.from_date and dates.to_date
	order by c.death_date
	#limit_offset#
), child_det_extra as (
	select member_id,
	case when values.value is null then death_detail.other_death_reason else values.value end as death_reason,
	case when death_detail.place_of_death = ''HOSP'' then ''Hostpital''
	     when lower(death_detail.place_of_death) = ''home'' then ''home''		
	     when death_detail.place_of_death = ''ON_THE_WAY'' then ''On the way''		
	end as 	place_of_death
	from rch_member_death_deatil death_detail
	inner join child_det cd on cd.id = death_detail.member_id
	left join listvalue_field_value_detail values on cast(values.id as text) = death_detail.death_reason
),
loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
child_det_extra.place_of_death as "Place of death",
child_det_extra.death_reason as "Death Reason",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
inner join child_det_extra  on child_det_extra.member_id = child_det.id
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','8c546418-026d-42b6-a4bb-b2bef221b95d'),
	 (220,58981,'2019-01-30 19:59:19.032',1,'2021-01-13 20:22:06.427965',NULL,'select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as year 
from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by year desc;',true,'ACTIVE','d9534895-538c-438f-9edb-92a87cb22b5e'),
	 (1253,409,'2019-07-24 10:53:11.116',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,demographic_location_id,to_month_year,loggedInUserId,location_id','--rota_virus_2
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#
)
,parameter as (
	select CAST(''#demographic_location_id#'' AS TEXT) as demographic_group
) 
,child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
    inner join parameter p on true = true
	where l.child_id = c.rota_virus_2_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.rota_virus_2 is not null
	and c.rota_virus_2 >= ''07-01-2019''
    and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)) 
	and cast(date_trunc(''month'', rota_virus_2) as date) between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','46302327-c220-4b4c-bb6e-829cdfe1bcf5'),
	 (959,60512,'2019-04-10 17:53:27.887',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','80a7ec97-6ef6-4bdc-bb1e-a2d92e94756e'),
	 (1513,74841,'2020-02-10 17:40:04.987',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' > '' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','0caf0ff6-50ac-4796-b2c1-d1dd282caa11'),
	 (1506,74840,'2020-01-29 13:27:04.04',1,'2021-01-13 20:22:06.427965','from_month','date_trunc(''month'',to_date(''#from_month#'',''MM/DD/YYYY'')) m from_month',true,'ACTIVE','0a3028b1-7f3f-4857-adf0-202a58c0e25c');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (342,1,'2019-02-13 11:26:15.193',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','a3f798db-a832-44b7-abdf-c4a506d6ec44'),
	 (93,1027,'2018-10-12 14:46:37.73',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','select  ROW_NUMBER() over ()+SUBSTRING (''#limit_offset#'',POSITION(''offset'' in ''#limit_offset#'')+7)\:\:int as "Sr No",    
mem.unique_health_id as "Health Id",mem.first_name || '' '' || mem.last_name as "Name",
case when rpmm.created_on\:\:date- rpmm.date_of_delivery\:\:date between 0 and 2 then ''1''  
when rpmm.created_on\:\:date- rpmm.date_of_delivery\:\:date between 3 and 6 then ''2'' 
when rpmm.created_on\:\:date- rpmm.date_of_delivery\:\:date between 7 and 13 then ''3'' 
when rpmm.created_on\:\:date- rpmm.date_of_delivery\:\:date between 14 and 20 then ''4'' 
when rpmm.created_on\:\:date- rpmm.date_of_delivery\:\:date between 21 and 27 then ''5'' 
when rpmm.created_on\:\:date- rpmm.date_of_delivery\:\:date between 28 and 41 then ''6'' 
when rpmm.created_on\:\:date- rpmm.date_of_delivery\:\:date between 42 and 60 then ''7'' 
else ''NA'' end as "Visit No",
coalesce(to_char(rpm.service_date\:\:date,''DD/MM/YYYY''),''-'') as "Service Date",coalesce(rpmm.ifa_tablets_given\:\:text,''-'') as "No of IFA tablets given",
coalesce(coalesce(string_agg(lfvd.value,'',''),rpmm.other_danger_sign),''-'') as "Danger sign",
case when rpmm.mother_referral_done = ''YES'' then lfvd1.value else ''-'' end as "Referral place if done",
case when rpmm.is_alive = false then ''Death date\:'' || to_char(rpmm.death_date\:\:date,''DD/MM/YYYY'') || ''<br>'' || ''Place\:'' || rpmm.death_reason 
else ''-'' end as "If death, then date and death reason",coalesce(rpmm.family_planning_method,''-'') as "Family Planning method"
from
(select a.id,a.member_id,a.pnc_no,a.service_date from rch_pnc_master a inner join location_hierchy_closer_det lhcd on lhcd.child_id = a.location_id
where (#location_id# is not null and lhcd.parent_id = #location_id#)  and a.created_by is not null
 and
(#from_date# is null or a.created_on >=(case when #from_date# is null then ''01/01/1970'' else ''#from_date#'' end)\:\:Date)
and (#to_date# is null or a.created_on <(case when #to_date# is null then ''01/01/1970'' else (date (case when #to_date# is null then ''01/01/1970'' else ''#to_date#'' end) + integer ''1'')end)\:\:Date)
#limit_offset#) rpm
left join rch_pnc_mother_master rpmm on rpm.id  = rpmm.pnc_master_id
inner join imt_member mem on mem.id = rpm.member_id
left join rch_pnc_mother_danger_signs_rel danger on danger.mother_pnc_id = rpm.id
left join listvalue_field_value_detail lfvd on lfvd.id = danger.mother_danger_signs
left join listvalue_field_value_detail lfvd1 on lfvd1.id = rpmm.referral_place 
group by rpm.id,mem.unique_health_id,mem.first_name,mem.last_name,rpmm.ifa_tablets_given,rpm.service_date,
rpmm.other_danger_sign,rpmm.mother_referral_done,lfvd1.value,rpmm.is_alive,rpmm.death_date,rpmm.death_reason,rpmm.family_planning_method,rpmm.created_on,rpmm.date_of_delivery',true,'ACTIVE','dd07341d-fb85-48b5-b2be-8881ff3e2567'),
	 (95,1027,'2018-10-18 15:17:55.866',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','select ROW_NUMBER() over ()+SUBSTRING (''#limit_offset#'',POSITION(''offset'' in ''#limit_offset#'')+7)\:\:int as "Sr No",    
res.* from 
(select mem.unique_health_id as "Health Id",mem.first_name || '' '' || mem.last_name as "Name",
case when rpcm.created_on\:\:date- rwcm.date_of_delivery\:\:date between 0 and 2 then ''1''  
when rpcm.created_on\:\:date- rwcm.date_of_delivery\:\:date between 3 and 6 then ''2'' 
when rpcm.created_on\:\:date- rwcm.date_of_delivery\:\:date between 7 and 13 then ''3'' 
when rpcm.created_on\:\:date- rwcm.date_of_delivery\:\:date between 14 and 20 then ''4'' 
when rpcm.created_on\:\:date- rwcm.date_of_delivery\:\:date between 21 and 27 then ''5'' 
when rpcm.created_on\:\:date- rwcm.date_of_delivery\:\:date between 28 and 41 then ''6'' 
when rpcm.created_on\:\:date- rwcm.date_of_delivery\:\:date between 42 and 60 then ''7'' 
else ''NA'' end as "Visit No",to_char(rpcm.created_on,''DD/MM/YYYY'') as "Visit Date",coalesce(round(rpcm.child_weight\:\:numeric,2)\:\:text,''-'') as "Child Weight",
case when coalesce(string_agg(lfvd.value,'',''),rpcm.other_danger_sign) is null or 
coalesce(string_agg(lfvd.value,'',''),rpcm.other_danger_sign) = '''' then ''-'' else
coalesce(string_agg(lfvd.value,'',''),rpcm.other_danger_sign)  end as "Danger sign",
case when rpcm.child_referral_done = ''YES'' then string_agg(lfvd1.value,'','') else ''-'' end as "Referral place if done",
case when rpcm.is_alive = false then to_char(rpcm.death_date,''DD/MM/YYYY'') || '','' || rpcm.place_of_death else ''-'' end as "If dead Child,then death Place and date"
from rch_pnc_child_master  rpcm inner join rch_pnc_master rpm 
on rpcm.pnc_master_id = rpm.id inner join location_hierchy_closer_det lhcd on lhcd.child_id = rpm.location_id
inner join imt_member mem on rpcm.child_id = mem.id
inner join rch_wpd_child_master rwcm on rwcm.member_id = mem.id
left join rch_pnc_child_danger_signs_rel danger on danger.child_pnc_id = rpcm.id
left join listvalue_field_value_detail lfvd on lfvd.id = danger.child_danger_signs
left join listvalue_field_value_detail lfvd1 on lfvd1.id = rpcm.referral_place 
where (#location_id# is not null and lhcd.parent_id = #location_id#) and
(#from_date# is null or rpcm.created_on >=(case when #from_date# is null then ''01/01/1970'' else ''#from_date#'' end)\:\:Date)
and (#to_date# is null or rpcm.created_on <(case when #to_date# is null then ''01/01/1970'' else (date (case when #to_date# is null then ''01/01/1970'' else ''#to_date#'' end) + integer ''1'')end)\:\:Date)
group by rpcm.id, mem.unique_health_id,mem.first_name,mem.last_name,rwcm.date_of_delivery
#limit_offset#) res',true,'ACTIVE','592f5fdd-ea14-44cb-afef-a64232b9dd99'),
	 (1167,63746,'2019-05-29 15:10:27.57',1,'2021-01-13 20:22:06.427965','limit_offset,age_group_or_child_count,location_id','with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)
,member_location as (
	select m.member_id, m.loc_id  from rch_eligible_couple_analytics m
	inner join locations on locations.child_id = m.loc_id
        where  ( case 
		when ''#age_group_or_child_count#'' = ''5+'' then children_count >= 5
		when ''#age_group_or_child_count#'' = ''0'' then children_count is null 
		when ''#age_group_or_child_count#'' = ''1'' then children_count = 1 
		when ''#age_group_or_child_count#'' = ''2'' then children_count = 2 
		when ''#age_group_or_child_count#'' = ''3'' then children_count = 3 
		when ''#age_group_or_child_count#'' = ''4'' then children_count = 4
		when ''#age_group_or_child_count#'' = ''null'' then true
	end)	and  m.last_method_of_contraception in (''MLSTR'',''FMLSTR'',''IUCD5'',''IUCD10'',''CONDOM'',''ORALPILLS'',''CHHAYA'',''ANTARA'')  
        #limit_offset#
)
,loc_det as(
	select member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id
	,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id
	from location_master,location_type_master,member_location 
	where 
	location_master.id = member_location.loc_id and location_type_master.type = location_master.type
)
select 
	 ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
	mem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as "Member Name",
	fam.family_id as "Family Id",to_char(r.dob, ''DD/MM/YYYY'') as "Birth Date",
	string_agg(lm.name,''> '' order by lhcd.depth desc) as "Location Hierarchy"  
from rch_eligible_couple_analytics r
inner join loc_det on loc_det.member_id = r.member_id
inner join imt_member mem on mem.id = r.member_id
inner join imt_family fam on mem.family_id = fam.family_id
inner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id
inner join location_master lm on lm.id = lhcd.parent_id
group by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;',true,'ACTIVE','b0b926b0-380b-4f34-bea8-9d91864c121f'),
	 (1196,409,'2019-07-09 19:39:03.545',1,'2021-01-13 20:22:06.427965','to_month,from_month,location_id','with dates as (
select
	to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end, ''MM-DD-YYYY'') as from_date ,
	to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end, ''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 milliseconds'' as to_date ),
location_det as (
select
	lm.id,
	lm.english_name as name,
	lm.location_code
from
	location_hierchy_closer_det lh1,
	location_master lm
where
	lh1.parent_id = #location_id#
	and depth = 1
	and lm.id = lh1.child_id 
),anc_registration_detail as (
select
	lh.parent_id as location_id,
	sum(anc.anc_reg) as anc_reg
from
	rch_service_provided_during_year anc ,
	location_hierchy_closer_det lh,dates
where
	lh.parent_id in (
		select id
	from
		location_det)
	and anc.location_id = lh.child_id
	and anc.month_year between dates.from_date and dates.to_date
group by
	lh.parent_id 
),phi_delivery as (
select
	lh.parent_id as location_id,
	sum(del.chc + del.chiranjivi + del.dh + del.phc + del.sc + del.sdh + del.uhc) as phi_del
from
	rch_delivery_date_base_location_wise_data_point del ,
	location_hierchy_closer_det lh ,
	dates
where
	lh.parent_id in (
		select id
	from
		location_det)
	and del.location_id = lh.child_id
	and del.month_year between dates.from_date and dates.to_date
group by
	lh.parent_id 
),wpd_free_det as (
select
	lh.parent_id as location_id ,
	sum(case when free_diet then 1 else 0 end) as free_diet ,
	sum(case when free_medicines then 1 else 0 end) as free_medicines ,
	sum(case when free_drop_transport then 1 else 0 end) as free_drop_transport ,
	sum(case when free_blood_transfusion then 1 else 0 end) as free_blood_transfusion ,
	sum(case when free_lab_test then 1 else 0 end) as free_lab_test
from
	rch_wpd_mother_master as wpd ,
	dates ,
	location_hierchy_closer_det lh
where
	wpd.date_of_delivery between dates.from_date and dates.to_date
	and wpd.location_id = lh.child_id
	and lh.parent_id in (
		select id
	from
		location_det)
group by
	lh.parent_id 
),anc_free_det as (
select
	lh.parent_id as location_id ,
	sum(case when anc_ser.calcium_tablets_given > 0 or anc_ser.ifa_tablets_given > 0 or anc_ser.fa_tablets_given > 0 then 1 else 0 end) as free_medicines ,
	sum(case when anc_ser.haemoglobin_count > 0 or anc_ser.sickle_cell_test != ''NOT_DONE'' or anc_ser.vdrl_test != ''NOT_DONE'' or anc_ser.hiv_test != ''NOT_DONE'' or anc_ser.hbsag_test != ''NOT_DONE'' then 1 else 0 end) as free_lab_test
from
	rch_anc_master as anc_ser ,
	dates ,
	location_hierchy_closer_det lh
where
	anc_ser.service_date between dates.from_date and dates.to_date
	and anc_ser.location_id = lh.child_id
	and anc_ser.is_from_web = true
	and lh.parent_id in (
		select id
	from
		location_det) 
group by lh.parent_id
),report_det as (
select
	location_det.id as location_id,location_det.location_code as code,location_det.name
	,sum(anc_registration_detail.anc_reg) as anc_reg
	,sum(phi_delivery.phi_del) as phi_del
	,sum(wpd_free_det.free_medicines + anc_free_det.free_medicines) as free_medicines
	,sum(wpd_free_det.free_diet) as free_diet
	,sum(wpd_free_det.free_lab_test + anc_free_det.free_lab_test) as free_lab_test
	,sum(wpd_free_det.free_blood_transfusion) as free_blood_transfusion
	,sum(wpd_free_det.free_drop_transport) as free_drop_transport	
from
	location_det 
	left join anc_registration_detail on anc_registration_detail.location_id = location_det.id
	left join phi_delivery on  phi_delivery.location_id = location_det.id
	left join wpd_free_det on  wpd_free_det.location_id = location_det.id
	left join anc_free_det on  anc_free_det.location_id = location_det.id
group by location_det.id,location_det.location_code,location_det.name
order by location_det.name
) 
select
	row_number() over() as "Sr. no" ,
	code as "Code" ,
	name as "Location Name" ,
	anc_reg as "Number of ANC registered",
	phi_del as "Number of Deliveries in Government Institutions",
	free_medicines as "Free Drug" ,
	case when phi_del = 0 then 0 else round(cast(free_medicines as numeric)*100/phi_del,2) end as "%Free Drugs against Public Health Instritute Deliveries",
	free_diet as "Free Diet" ,
	case when phi_del = 0 then 0 else round(cast(free_diet as numeric)*100/phi_del,2) end as "%Free Diet against Public Health Instritute Deliveries",
	free_lab_test as "Free Diagnostic" ,
	case when anc_reg = 0 then 0 else round(cast(free_lab_test as numeric)*100/anc_reg,2) end as "% Free Diagnostic Against ANC registration",
	free_blood_transfusion as "Free Blood transfusion" ,
	free_drop_transport as "Free Referral Transport",
	case when phi_del = 0 then 0 else round(cast(free_drop_transport as numeric)*100/phi_del,2) end as "% Free Referral Transport against Public Institute deliveries"
from
	report_det
union all select
	null ,
	null,
	''<b>Total</b>'' ,
	sum(anc_reg),
	sum(phi_del),
	sum(free_medicines) ,
	case when sum(phi_del) = 0 then 0 else round(sum(free_medicines)*100/sum(phi_del),2) end,
	sum(free_diet) ,
	case when sum(phi_del) = 0 then 0 else round(sum(free_diet)*100/sum(phi_del),2) end,
	sum(free_lab_test) ,
	case when sum(anc_reg) = 0 then 0 else round(sum(free_lab_test)*100/sum(anc_reg),2) end,
	sum(free_blood_transfusion) ,
	sum(free_drop_transport),
	case when sum(phi_del) = 0 then 0 else round(sum(free_drop_transport)*100/sum(phi_del),2) end
from
	report_det',true,'ACTIVE','1302ec9e-17de-4f0c-b250-7e11681833b9'),
	 (1590,74840,'2020-04-12 18:27:45.415',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,upto_date,location_id','with location_det as (
select child_id as loc_id
from location_hierchy_closer_det lhc
where
parent_id = #location_id# 
-- #location_id#
)
,paratemeter_det as (
select
case when ''#from_date#'' != ''null'' then to_date(''#from_date#'',''MM/DD/YYYY'') end as from_date,
-- #from_date#
case when ''#to_date#'' != ''null'' then to_date(''#to_date#'',''MM/DD/YYYY'') + interval ''1 day'' - interval ''1 millisecond''  end as upto_date
-- #upto_date#
)

,transfer_lab_detail as (
select
distinct on (lab_history.health_infra_from)
lab_history.health_infra_from,
lab_history.health_infra_to,
lab_history.transferred_on,
h.name as send_infra_name
from covid19_lab_test_detail lab inner join covid19_lab_test_transfer_history lab_history
on lab.sample_health_infra_send_to  = lab_history.health_infra_from
inner join health_infrastructure_details  h on lab_history.health_infra_to = h.id
inner join paratemeter_det on true = true
where transferred_on between paratemeter_det.from_date and paratemeter_det.upto_date
order by lab_history.health_infra_from
),infra_info as (
select
hid.id as infra_id,
hid.location_id,
hid.name as infra_name
from health_infrastructure_details  hid
inner join location_hierchy_closer_det loch on loch.child_id = hid.location_id
where loch.parent_id in (select distinct loc_id from location_det) and is_covid_lab
group by hid.id,hid.location_id,hid.name
),lab_wise_analytics as (
select
cltd.sample_health_infra_send_to,
count(1) filter(where cltd.lab_collection_on between paratemeter_det.from_date and paratemeter_det.upto_date
) total_sample_received,
count(1) filter (where cltd.lab_collection_on between paratemeter_det.from_date and paratemeter_det.upto_date
and  cad.admission_from = ''NEW'') as new_admitted,
count(distinct cad.id) filter (where cltd.lab_collection_on between paratemeter_det.from_date and paratemeter_det.upto_date
and cad.admission_from = ''OPD_ADMIT'') as opd_admitted,
count(1) filter(where cltd.lab_sample_rejected_on is null
and cltd.lab_sample_received_on between paratemeter_det.from_date and paratemeter_det.upto_date
) total_accepted_for_testing,
count(1) filter(where cltd.lab_sample_rejected_on is not null
and cltd.lab_sample_rejected_on between paratemeter_det.from_date and paratemeter_det.upto_date
) total_Rejected_for_testing,
count(1) filter(where cltd.lab_sample_rejected_on is null
and cltd.lab_result_entry_on between paratemeter_det.from_date and paratemeter_det.upto_date
) total_case_tested,
count(1) filter (where cltd.lab_result = ''POSITIVE''
and cltd.lab_result_entry_on between paratemeter_det.from_date and paratemeter_det.upto_date
) as positive_cases,
count(1) filter (where cltd.lab_result = ''NEGATIVE''
and cltd.lab_result_entry_on between paratemeter_det.from_date and paratemeter_det.upto_date
) as negative_cases,
count(1) filter (where cltd.lab_result = ''INDETERMINATE''
and cltd.lab_result_entry_on between paratemeter_det.from_date and paratemeter_det.upto_date
) as inderminate_cases
from covid19_lab_test_detail cltd,covid19_admission_detail cad
inner join paratemeter_det on true = true
where cltd.covid_admission_detail_id = cad.id
--and cltd.lab_collection_on between paratemeter_det.from_date and paratemeter_det.upto_date
and cad.status not ilike ''%_temp''
group by cltd.sample_health_infra_send_to    
),final_det as (
select
infra_info.infra_id,
infra_info.infra_name ,
coalesce(total_sample_received,0) as total_sample_received,
coalesce(total_accepted_for_testing,0) as total_accepted_for_testing,
coalesce(total_Rejected_for_testing,0) as total_Rejected_for_testing,
coalesce(total_case_tested,0) as total_case_tested,
coalesce(positive_cases,0) as positive_cases,
coalesce(negative_cases,0) as negative_cases,
coalesce(inderminate_cases,0) as inderminate_cases,
coalesce (new_admitted,0) as new_admitted,
coalesce (opd_admitted,0) as opd_admitted
from infra_info left join lab_wise_analytics analytics on infra_info.infra_id = analytics.sample_health_infra_send_to
left join transfer_lab_detail transfer on infra_info.infra_id = transfer.health_infra_from
 #limit_offset#
)
select
row_number() over () + cast(substring(''#limit_offset#'', position(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
infra_id as hidden_infra_id,
infra_name as "Name Of Lab",
total_sample_received as "Samples Collected",
new_admitted as "Admitted",
opd_admitted as "Opd",
total_accepted_for_testing as "Accepted",
total_Rejected_for_testing as "Rejected",
total_case_tested as "Result Entry",
positive_cases as "Positive",
negative_cases as "Negative",
inderminate_cases as "Indeterminate"
from final_det

union all

select
null,
null,
''<b>Total</b>'',
sum(total_sample_received),
sum(new_admitted),
sum(opd_admitted),
sum(total_accepted_for_testing),
sum(total_Rejected_for_testing),
sum(total_case_tested),
sum(positive_cases),
sum(negative_cases),
sum(inderminate_cases)
from
final_det',true,'ACTIVE','53a4022c-4447-4bd4-8741-c3673175a85f'),
	 (200,409,'2019-01-23 19:46:32.424',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','69e65274-06a9-440a-8fa2-6d18b13f45a5'),
	 (1510,74841,'2020-02-10 14:06:41.843',1,'2021-01-13 20:22:06.427965',NULL,'select id,name from um_role_master where state = ''ACTIVE'' and id in (24,30)  order by name;',true,'ACTIVE','c8f05ae2-3f17-4f44-aff1-92b86e64be83'),
	 (1166,63746,'2019-05-29 15:10:27.531',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #location_id#',true,'ACTIVE','79cd37fb-6dd0-44fd-b7e3-f9fa459dc2cf'),
	 (974,60512,'2019-04-11 11:56:37.326',1,'2021-01-13 20:22:06.427965','depth_flag,limit_offset,from_date,to_date,loggedInUserId,location_id','with prefered_language as (
select 	case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end as is_enlish
from um_user where id = #loggedInUserId#
),health_infra_ids as(
	select health_infrastructure_details.id as health_infrastructure_id,count(*) filter(where rch_wpd_mother_master.id is not null) as no_of_deliveres_conducted
	from health_infrastructure_details
	left join rch_wpd_mother_master on health_infrastructure_details.id = rch_wpd_mother_master.health_infrastructure_id
	and rch_wpd_mother_master.is_from_web
	and rch_wpd_mother_master.date_of_delivery between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	where health_infrastructure_details.location_id in (
		select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth <= (case when #depth_flag# = -1 then 0 else 8 end)
	)
	and health_infrastructure_details.type in (1061,1063,1009,1008,1007,1012,1084)
	group by health_infrastructure_details.id
	#limit_offset#
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
health_infrastructure_details.name as "Name",
listvalue_field_value_detail.value as "Type",
case when prefered_language.is_enlish then get_location_hierarchy_language_wise(health_infrastructure_details.location_id, ''EN'')
				else get_location_hierarchy(health_infrastructure_details.location_id) end as "Location",
coalesce(health_infra_ids.no_of_deliveres_conducted, 0) as "No. of Deliveries Conducted"
from health_infra_ids
inner join health_infrastructure_details on health_infra_ids.health_infrastructure_id = health_infrastructure_details.id
inner join listvalue_field_value_detail on health_infrastructure_details.type = listvalue_field_value_detail.id
inner join prefered_language on true',true,'ACTIVE','ed110e9f-4097-4ff1-9dd2-2f1eaa6da536');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (392,1,'2019-02-13 12:24:06.788',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','e95541a9-9be1-444d-b470-9385e5ead1ec'),
	 (398,1,'2019-02-13 12:25:58.553',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','cde99d67-88eb-43a3-bd51-3aed84222c09'),
	 (400,1,'2019-02-13 12:28:25.121',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #location_id#',true,'ACTIVE','831069fc-ba24-4782-874c-d6f0af1bd2fe'),
	 (824,58981,'2019-03-06 18:25:55.202',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','2b93c0a8-d18d-4f1b-b784-f0ab72a34186'),
	 (551,1,'2019-02-14 16:23:36.151',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,demographic_location_id,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
,parameter as (
	select CAST(''#demographic_location_id#'' AS TEXT) as demographic_group
)
,child_det as (
	select m.id, c.native_loc_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	inner join parameter p on true = true
    where l.child_id = c.native_loc_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.full_immunization_date is not null
        and fully_immunization_in_number_of_month <= 12
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	 group by m.id, c.native_loc_id, c.dob, full_immunization_date
	having cast(date_trunc(''month'', full_immunization_date) as date)  between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','c178ec62-9a4c-48a2-acf3-98fb31d2c3e0'),
	 (390,1,'2019-02-13 12:21:52.076',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','3100e697-5bb7-461a-9c3a-a1619f601fbd'),
	 (456,1,'2019-02-14 12:59:49.473',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','280a7c7d-8629-4d6c-afa2-90c8b092f3b3'),
	 (111,409,'2019-01-04 18:23:54.037',1,'2021-01-13 20:22:06.427965','from_date,to_date','with user_det as(
select * from um_user where role_id in (select distinct role_id from um_user where id in (
select distinct created_by from gvk_immunisation_verification_response ))
and state = ''ACTIVE''
),user_wise_cnt_det as(
select gvk_immunisation_verification_response.created_by
,sum(case when gvk_immunisation_verification_response.gvk_call_status = ''com.argusoft.imtecho.gvk.call.cant-talk'' then 1 else 0 end) as cant_talk
,sum(case when gvk_immunisation_verification_response.gvk_call_status = ''com.argusoft.imtecho.gvk.call.goes-private-hospital-for-vaccination'' 
		then 1 else 0 end) as goes_to_pvt_hospital
,sum(case when gvk_immunisation_verification_response.gvk_call_status = ''com.argusoft.imtecho.gvk.call.not-reachable'' 
		then 1 else 0 end) as not_rechable
,sum(case when gvk_immunisation_verification_response.gvk_call_status = ''com.argusoft.imtecho.gvk.call.success'' 
		then 1 else 0 end) as success
,sum(case when gvk_immunisation_verification_response.gvk_call_status = ''com.argusoft.imtecho.gvk.call.unresponsive'' 
		then 1 else 0 end) as unresponsive
,sum(case when gvk_immunisation_verification_response.gvk_call_status = ''com.argusoft.imtecho.gvk.call.wrong-mobile-number'' 
		then 1 else 0 end) as wrong_number
from gvk_immunisation_verification,gvk_immunisation_verification_response
where gvk_immunisation_verification.member_id = gvk_immunisation_verification_response.member_id
and gvk_immunisation_verification_response.created_on between cast(case when ''#from_date#'' = ''null'' then ''01-01-1970'' else ''#from_date#'' end as date) 
	and cast(case when ''#to_date#'' = ''null'' then ''01-01-1970'' else ''#to_date#'' end as date) + interval ''1 day'' 
group by gvk_immunisation_verification_response.created_by
),final_detail as(
select concat(user_det.first_name,'' '',user_det.last_name,''('',user_det.user_name,'')'') as name
,user_wise_cnt_det.*,cant_talk+goes_to_pvt_hospital+not_rechable+success+unresponsive+wrong_number as total
from user_det left join user_wise_cnt_det on user_det.id = user_wise_cnt_det.created_by
where ''#from_date#'' != ''null''
order by user_det.first_name
)select row_number() over() as "Sr. no",name as "Name"
,cant_talk as "Can''t Talk Right Now"
,goes_to_pvt_hospital as "Goes Private Hospital For Vaccination"
,not_rechable as "Not Reachable"
,success as "Successful"
,unresponsive as "Unresponsive"
,wrong_number as "Wrong Number"
,total as "Total"
from final_detail
union all
select null,''<b>Total</b>'',sum(cant_talk)
	,sum(goes_to_pvt_hospital),sum(not_rechable),sum(success),sum(unresponsive),sum(wrong_number),sum(total) from final_detail;',true,'ACTIVE','0671024b-ef24-46b5-a558-61313ff1cc86'),
	 (196,409,'2019-01-23 19:42:06.239',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','da8a5228-6850-456d-abc6-139663c38a7e'),
	 (192,409,'2019-01-23 19:39:51.937',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','e5175168-f41b-402e-a246-71ce5498c97a');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (290,1,'2019-02-11 17:23:41.15',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','94fec538-c7d2-4039-9d46-673aa499c200'),
	 (1641,409,'2020-06-23 08:27:29.63',1,'2021-01-13 20:22:06.427965','health_infra_id','select name from health_infrastructure_details where id = #health_infra_id#;',true,'ACTIVE','13037eb9-63e2-4453-8274-50577d9cc264'),
	 (620,409,'2019-02-19 12:29:19.473',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id','--Number of institutional delivery registered with LMP(Delivery monitoring of Registered LMP)
with parameters as(
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') + interval ''1 day'' as to_date,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
), 
 member_det as (
	select r.member_id, r.tracking_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.date_of_delivery,''DD/MM/YYYY'') as dod	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l	
	, parameters p	
	where r.tracking_location_id  = l.child_id
	and l.parent_id = p.location_id
	and r.institutional_del = true 
	and r.delivery_outcome in (''LBIRTH'',''SBIRTH'')
	and r.lmp_month_year between p.from_date and p.to_date
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
    and r.is_valid_for_tracking_report
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id,  string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
member_det.dod as "Date of Delivery",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','309c93ee-f713-4fb0-8e71-d20584556cfe'),
	 (1546,74841,'2020-03-23 18:26:44.879',1,'2021-01-13 20:22:06.427965','limit_offset,filter_type,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
idsp_screening as (
	select 
	idsp.location_id as loc_id,
	imt_member.family_id,
	imt_member.id,
	imt_member.first_name || '' '' || imt_member.middle_name || '' '' || imt_member.last_name || '' ('' || imt_member.unique_health_id || '')'' || ''<br>'' || imt_member.family_id as member_det,
	to_char(imt_member.dob, ''DD/MM/YYYY'') as dob,
  case when  (idsp.is_cough  = 1 ) then true else false end as is_cough,
case when  (idsp.is_any_illness_or_discomfort  = 1 ) then true else false end as is_any_illness_or_discomfort,
case when  (idsp.is_fever  = 1 ) then true else false end as is_fever,
	concat_ws('','', address1, address2) as address,
	(idsp.is_fever + idsp.is_cough + idsp.is_breathlessness) = 2 as multiple_symt,
	case when(idsp.has_travel >= 1)  then true else false end as travel,
	case when (idsp.has_travel = 1 and (idsp.is_fever + idsp.is_cough + idsp.is_breathlessness ) = 3) then true else false end as travel_all_symptoms_local,
	case when (idsp.has_travel = 1) then true else false end as local_travel,
    case when (idsp.has_travel = 2) then true else false end as out_of_country_travel,    
	case when (idsp.has_travel = 0 and (idsp.is_fever + idsp.is_cough + idsp.is_breathlessness ) >= 1) then true else false end as member_with_no_traveled_and_any_symptoms,    
	case when idsp.country is not null then idsp.country else  ''-'' end as country,
    case when (idsp.is_breathlessness = 1)then true else false end as breathlessness,
    case when (idsp.has_travel = 1 and (idsp.is_fever + idsp.is_cough + idsp.is_breathlessness  >= 1)) then true else false end as local_travel_and_symptoms,
    case when (idsp.has_travel = 2 and (idsp.is_fever + idsp.is_cough + idsp.is_breathlessness ) >= 1) then true else false end as international_travel_and_symptoms,
    case when (idsp.has_travel = 2 and (idsp.is_fever + idsp.is_cough + idsp.is_breathlessness ) = 3) then true else false end as international_travel_and_all_symptoms,
	case when ((idsp.is_fever + idsp.is_cough + idsp.is_breathlessness ) =3) then true else false end as all_three,
	case when (idsp.has_travel = 1 and idsp.mo_symt_verfied > 0) then true else false end examin_mo_with_symt_and_local_travel,
    case when (idsp.has_travel = 2 and idsp.mo_symt_verfied > 0) then true else false end examin_mo_with_symt_and_int_travel,
    case when (idsp.has_travel = 1 and idsp.sent_for_covid_test > 0) then true else false end as covid_test_with_local_travel,
    case when (idsp.has_travel = 2 and idsp.sent_for_covid_test > 0) then true else false end as covid_test_with_int_travel,
    case when romm.id is not null then  (u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>''
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end) else null end as created
    from  idsp_screening_analytics idsp
	left join imt_member on imt_member.id = idsp.member_id
	left join location_hierchy_closer_det ldp on ldp.child_id = idsp.location_id
	left join imt_family on imt_family.family_id = imt_member.family_id
    left join rch_opd_member_master romm on romm.id = idsp.mo_symt_verfied
    left join um_user u on u.id = romm.created_by
	where ldp.parent_id = #location_id#
	and (case when #filter_type# = ''feaver'' and idsp.is_fever = 1 then true 
	when #filter_type# = ''cough'' and idsp.is_cough = 1 then true
	when #filter_type# = ''illness'' and idsp.is_any_illness_or_discomfort = 1 then true
	when #filter_type# = ''breathlessness'' and idsp.is_breathlessness = 1 then true
	when #filter_type# = ''all_three'' and idsp.is_fever =1 and idsp.is_cough =1 and idsp.is_breathlessness = 1 then true
	when #filter_type# = ''local_travel_sympt'' and idsp.has_travel = 1 and (idsp.is_fever + idsp.is_cough + idsp.is_breathlessness ) >= 1 then true
	when #filter_type# = ''international_travel_symt'' and idsp.has_travel = 2 and (idsp.is_fever + idsp.is_cough + idsp.is_breathlessness ) >= 1 then true
	when #filter_type# = ''travel'' and idsp.has_travel > 0 then true
    when #filter_type#  = ''multiple_symt'' and (idsp.is_fever + idsp.is_cough + idsp.is_breathlessness ) = 2 then true
    when #filter_type#  = ''mo_domestic'' and idsp.mo_symt_verfied > 0 and idsp.has_travel = 1 then true
     when #filter_type#  = ''mo_int'' and idsp.mo_symt_verfied > 0 and idsp.has_travel = 2 then true
	end )
	order by idsp.member_id
	#limit_offset#
),contact_person as (
	select distinct a.id, 
	 concat( contact_person.first_name, '' '', contact_person.middle_name, '' '', contact_person.last_name,
		'' ('', case when contact_person.mobile_number is null then ''N/A'' else contact_person.mobile_number end, '')'' ) as contactPersonMobileNo
	from imt_member contact_person
	inner join idsp_screening a on a.family_id = contact_person.family_id 
	inner join imt_family ifm on ifm.family_id = contact_person.family_id and ifm.contact_person_id = contact_person.id
	
), 
loc as (
	select distinct loc_id from idsp_screening
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi  
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
idsp_screening.member_det as "Member Details", 
loc_det.aoi as "Location",
contact_person.contactPersonMobileNo as "Contact Person MobileNo",
idsp_screening.address as "Address",
fhw_det.fhw as "FHW Details",
idsp_screening.is_cough as "Cough",
idsp_screening.is_fever as "Fever",
idsp_screening.breathlessness as "Breathlessness",
idsp_screening.multiple_symt as "Multiple Symptoms",
idsp_screening.all_three as "All Three Symptoms",
idsp_screening.member_with_no_traveled_and_any_symptoms as "No Travel but F, C or B	",
idsp_screening.travel as "Person with travel history",
idsp_screening.local_travel as "Domestic travel history",
idsp_screening.local_travel_and_symptoms as "Domestic Travel with F,C or B",
idsp_screening.travel_all_symptoms_local as "Domestic Travel with all symptoms",
idsp_screening.out_of_country_travel as "International travel history",
idsp_screening.country as "Country",
idsp_screening.international_travel_and_symptoms as "Intl. Travel with F,C or B",
idsp_screening.international_travel_and_all_symptoms as "Intl. Travel with all symptoms",
idsp_screening.examin_mo_with_symt_and_int_travel as "Intl. Travel examined by mo",
idsp_screening.examin_mo_with_symt_and_local_travel as "Domestic Travel. examined by mo",
idsp_screening.covid_test_with_local_travel as "Domestic Travel Send for test",
idsp_screening.covid_test_with_int_travel as "Intl. Travel Send for test",
idsp_screening.created as "MO Details"
from idsp_screening 
left join contact_person on contact_person.id = idsp_screening.id
inner join loc_det on idsp_screening.loc_id = loc_det.loc_id 
left join fhw_det on idsp_screening.loc_id = fhw_det.loc_id;',true,'ACTIVE','a8f92755-60be-43d4-b19a-9e4f125c219c'),
	 (1640,74841,'2020-06-23 01:38:48.363',1,'2021-01-13 20:22:06.427965','hospital_type,location_id','select id as health_infra_id, name as "Health Infra" from health_infrastructure_details
where location_id = #location_id# and "type" = (select id from listvalue_field_value_detail where field_key = ''infra_type'' and value = ''#hospital_type#'')',true,'ACTIVE','13037eb9-63e2-4453-8274-50577d9cc265'),
	 (594,1,'2019-02-18 17:50:19.483',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,demographic_location_id,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#
)
,parameter as (
	select CAST(''#demographic_location_id#'' AS TEXT) as demographic_group
) 
,child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
    inner join parameter p on true = true
	where l.child_id = c.loc_id and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.birth_weight is not null and c.birth_weight < 2.5
    and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','69695e9c-38fc-4433-8054-3c217cdbc6c0'),
	 (622,409,'2019-02-19 12:32:44.69',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','400dc7a5-9bbf-4f69-96d4-847443f53491'),
	 (1651,60512,'2020-06-29 11:22:04.272',1,'2021-01-13 20:22:06.427965','from_date,to_date,location_id','WITH loc_det AS (
    SELECT
        child_id as id
    FROM
        location_hierchy_closer_det
    WHERE
       parent_id = #location_id#
        AND "depth" = 1
),
dates AS (
    SELECT
        to_date(
            CASE WHEN ''#from_date#'' = ''null'' THEN
                NULL
            ELSE
                ''#from_date#''
            END, ''MM-DD-YYYY'') AS from_date,
        to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date
),
location_wise_analytics as (
select
	lh.parent_id as location_id,
	sum(ccna.less_than_6_month_boys) as less_than_6_month_boys,
	sum(ccna.less_than_6_month_girls) as less_than_6_month_girls,
	sum(ccna.more_than_6_month_boys) as more_than_6_month_boys,
	sum(ccna.more_than_6_month_girls) as more_than_6_month_girls
from
	child_cmtc_nrc_admited_analytics_location_wise_details ccna,
    location_hierchy_closer_det lh,
	dates
where
lh.parent_id in (select id from loc_det) and
	ccna.location_id = lh.child_id
	and ccna.month_year between dates.from_date and dates.to_date
group by
	lh.parent_id)
select
	lm.id as hidden_location_id,
	lm.english_name as "Location",
	COALESCE(less_than_6_month_boys, 0) as "Less than 6 months Boys",
	COALESCE(less_than_6_month_girls, 0) as "Less than 6 months Girls",
	COALESCE(more_than_6_month_boys, 0) as "More than 6 months Boys",
	COALESCE(more_than_6_month_girls, 0) as "More than 6 months Girls",
	COALESCE(less_than_6_month_boys + more_than_6_month_boys, 0) as "Gender wise Total Boys",
	COALESCE(less_than_6_month_girls + more_than_6_month_girls, 0) as "Gender wise Total Girls"
from
	loc_det ld
inner join location_master lm on
	lm.id = ld.id
left join location_wise_analytics lwa on
	lwa.location_id = ld.id
union all
select	null,
	''<b>Total</b>'',
	COALESCE(sum(less_than_6_month_boys), 0),
	COALESCE(sum(less_than_6_month_girls), 0),
	COALESCE(sum(more_than_6_month_boys), 0),
	COALESCE(sum(more_than_6_month_girls), 0),
	COALESCE(sum(less_than_6_month_boys) + sum(more_than_6_month_boys), 0),
	COALESCE(sum(less_than_6_month_girls) + sum(more_than_6_month_girls), 0)
from location_wise_analytics',true,'ACTIVE','92e67719-c763-4627-981d-56fb33df98f6'),
	 (1652,60512,'2020-06-29 11:25:55.672',1,'2021-01-13 20:22:06.427965','from_date,to_date,location_id','WITH loc_det AS (
    SELECT
        child_id as id
    FROM
        location_hierchy_closer_det
    WHERE
       parent_id = #location_id#
        AND "depth" = 1
),
dates AS (
    SELECT
        to_date(
            CASE WHEN ''#from_date#'' = ''null'' THEN
                NULL
            ELSE
                ''#from_date#''
            END, ''MM/DD/YYYY'') AS from_date,
        to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date
),
location_wise_analytics as (
select
	lh.parent_id as location_id,
	sum(ccna.sam_boys_greater_than_6_month + ccna.sam_boys_less_than_6_month + ccna.sam_girls_less_than_6_month + ccna.sam_girls_greater_than_6_month) as gross_total,
	sum(ccna.sam_boys_less_than_6_month) as sam_boys_less_than_6_month,
	sum(ccna.sam_girls_less_than_6_month) as sam_girls_less_than_6_month,
	sum(ccna.sam_girls_greater_than_6_month) as sam_girls_greater_than_6_month,
	sum(ccna.sam_boys_greater_than_6_month) as sam_boys_greater_than_6_month
from
	child_cmtc_nrc_analytics_location_wise_details ccna,
    location_hierchy_closer_det lh,
	dates
where
lh.parent_id in (select id from loc_det) and
	ccna.location_id = lh.child_id
	and ccna.month_year between dates.from_date and dates.to_date
group by
	lh.parent_id)
select
	lm.id as hidden_location_id,
	lm.english_name as "Location",
	COALESCE(gross_total, 0) as "Gross Total",
	COALESCE(sam_boys_less_than_6_month, 0) as "Less than 6 months Boys",
	COALESCE(sam_girls_less_than_6_month, 0) as "Less than 6 months Girls",
	COALESCE(sam_boys_less_than_6_month + sam_girls_less_than_6_month, 0) as "Less than 6 months Total",
	COALESCE(sam_boys_greater_than_6_month, 0) as "More than 6 months Boys",
	COALESCE(sam_girls_greater_than_6_month, 0) as "More than 6 months Girls",
	COALESCE(sam_girls_greater_than_6_month + sam_boys_greater_than_6_month, 0) as "More than 6 months Total",
	COALESCE(sam_boys_less_than_6_month + sam_boys_greater_than_6_month, 0) as "Gender wise Total Boys",
	COALESCE(round((((sam_boys_less_than_6_month + sam_boys_greater_than_6_month) * 100.0) / NULLIF((gross_total), 0)), 2),0) as "percent_col_Gender wise Total Boys",
	COALESCE(sam_girls_less_than_6_month + sam_girls_greater_than_6_month, 0) as "Gender wise Total Girls",
	COALESCE(round((((sam_girls_less_than_6_month + sam_girls_greater_than_6_month) * 100.0) / NULLIF((gross_total), 0)), 2),0) as "percent_col_Gender wise Total Girls"
from
	loc_det ld
inner join location_master lm on
	lm.id = ld.id
left join location_wise_analytics lwa on
	lwa.location_id = ld.id
union all
select	null,
	''<b>Total</b>'',
	COALESCE(sum(gross_total), 0) as "Gross Total",
	COALESCE(sum(sam_boys_less_than_6_month), 0) as "less than 6 months Boys",
	COALESCE(sum(sam_girls_less_than_6_month), 0) as "less than 6 months Girls",
	COALESCE(sum(sam_boys_less_than_6_month) + sum(sam_girls_less_than_6_month), 0) as "less than 6 months Total",
	COALESCE(sum(sam_boys_greater_than_6_month), 0) as "more than 6 months Boys",
	COALESCE(sum(sam_girls_greater_than_6_month), 0) as "more than 6 months Girls",
	COALESCE(sum(sam_girls_greater_than_6_month) + sum(sam_boys_greater_than_6_month), 0) as "more than 6 months Total",
	COALESCE(sum(sam_boys_less_than_6_month) + sum(sam_boys_greater_than_6_month), 0) as "Gender wise Total Boys",
	COALESCE(round((((sum(sam_boys_less_than_6_month) + sum(sam_boys_greater_than_6_month)) * 100.0) / NULLIF((sum(gross_total)), 0)), 2), 0) as "percent_col_Gender wise Total Boys",
	COALESCE(sum(sam_girls_less_than_6_month) + sum(sam_girls_greater_than_6_month), 0) as "Gender wise Total Girls",
	COALESCE(round((((sum(sam_girls_less_than_6_month) + sum(sam_girls_greater_than_6_month)) * 100.0) / NULLIF((sum(gross_total)), 0)), 2), 0) as "percent_col_Gender wise Total Girls"
from location_wise_analytics',true,'ACTIVE','d598ab95-d364-45da-9a19-2d67aa3e82b7'),
	 (623,409,'2019-02-19 12:32:44.692',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','9f41b4a0-7890-4536-be2f-0da76ee74367');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (675,409,'2019-02-20 11:55:45.842',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','cf4d1705-db7a-49b2-8efd-d280e365ed87'),
	 (631,409,'2019-02-19 12:55:50.638',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','8f2e9174-f20a-4508-a0be-0aaba28eb8c2'),
	 (1653,60512,'2020-06-29 11:28:50.703',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id','with prefered_language as(
	select case when prefered_language = ''EN'' then true else false end as is_english 
	from um_user
	where id = #loggedInUserId#
),location_detail as (
	select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1
),dates as (
	select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date
),status_counts as (
	select location_detail.child_id,
	count(*) filter (where fsam_discharge_id is not null) as total_discharged,
	count(*) filter (where fsam_discharge_status = ''SAM_TO_SAM'') as sam_to_sam,
	count(*) filter (where fsam_discharge_status = ''SAM_TO_MAM'') as sam_to_mam,
	count(*) filter (where fsam_discharge_status = ''SAM_TO_NORMAL'') as sam_to_normal
	from location_detail
	inner join location_hierchy_closer_det on location_detail.child_id = location_hierchy_closer_det.parent_id
	inner join child_cmtc_nrc_analytics_details on location_hierchy_closer_det.child_id = child_cmtc_nrc_analytics_details.sam_screening_location_id
	inner join dates on child_cmtc_nrc_analytics_details.fsam_admission_date between dates.from_date and dates.to_date
	group by location_detail.child_id
),details as (
	select row_number() over() as sr_no,
	location_master.id as hidden_location_id,
	case when prefered_language.is_english and location_master.english_name is not null then location_master.english_name else location_master.name end as loc,
	coalesce(status_counts.total_discharged) as total_discharged,
	coalesce(status_counts.sam_to_sam,0) as sam_to_sam,
	coalesce(status_counts.sam_to_mam,0) as sam_to_mam,
	coalesce(status_counts.sam_to_normal,0) as sam_to_normal
	from location_detail
	inner join location_master on location_master.id = location_detail.child_id
	left join status_counts on location_detail.child_id = status_counts.child_id
    cross join prefered_language
)
select details.loc as "Location",
details.hidden_location_id,
details.sam_to_sam as "SAM-SAM",
	case when details.sam_to_sam = 0 or details.sam_to_sam is null or details.total_discharged = 0 or details.total_discharged is null then 0 else
	round(details.sam_to_sam * 100.0/details.total_discharged) end as "percent_col_SAM-SAM",
details.sam_to_mam as "SAM-MAM",
	case when details.sam_to_mam = 0 or details.sam_to_mam is null or details.total_discharged = 0 or details.total_discharged is null then 0 else
	round(details.sam_to_mam * 100.0/details.total_discharged) end as "percent_col_SAM-MAM",
details.sam_to_normal as "SAM-Normal",
	case when details.sam_to_normal = 0 or details.sam_to_normal is null or details.total_discharged = 0 or details.total_discharged is null then 0 else
	round(details.sam_to_normal * 100.0/details.total_discharged) end as "percent_col_SAM-Normal"
from details
union all
select ''<b>Total<b>'',
#location_id#,
sum(details.sam_to_sam),
	case when (sum(details.sam_to_sam) = 0 or sum(details.sam_to_sam) is null or sum(details.total_discharged) = 0 or sum(details.total_discharged) is null) then 0 else 
	round(sum(details.sam_to_sam)*100.0/sum(details.total_discharged),2) end,
sum(details.sam_to_mam),
	case when (sum(details.sam_to_mam) = 0 or sum(details.sam_to_mam) is null or sum(details.total_discharged) = 0 or sum(details.total_discharged) is null) then 0 else 
	round(sum(details.sam_to_mam)*100.0/sum(details.total_discharged),2) end,
sum(details.sam_to_normal),
	case when (sum(details.sam_to_normal) = 0 or sum(details.sam_to_normal) is null or sum(details.total_discharged) = 0 or sum(details.total_discharged) is null) then 0 else 
	round(sum(details.sam_to_normal)*100.0/sum(details.total_discharged),2) end
from details;',true,'ACTIVE','2fbda17f-3891-4d48-92f7-ef39f00f11f9'),
	 (1488,74841,'2020-01-08 18:25:14.655',1,'2021-01-13 20:22:06.427965','notification_type','select case when  #notification_type# = -1 then ''All'' end  as notification_type  
union 
select "name" as notification_type from notification_type_master where id = #notification_type#',true,'ACTIVE','3d48b2cf-ea07-4487-9092-7bc1fdd83d4d'),
	 (1509,74841,'2020-02-10 13:59:05.877',1,'2021-01-13 20:22:06.427965','role_id','select name as role_id from um_role_master where state = ''ACTIVE'' and id = #role_id#;',true,'ACTIVE','b0e90684-e0d2-44ee-92c8-2cfa62f38e6f'),
	 (229,57698,'2019-02-04 17:24:26.958',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','7f74f528-897f-4a5a-aaad-b6adca40edcc'),
	 (1054,409,'2019-04-25 20:20:24.557',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id','--Missing Delivery - EDD Not Lapsed (Delivery monitoring of Registered LMP)
with parameters as(
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') + interval ''1 day'' as to_date,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
 member_det as (
	select r.member_id, r.tracking_location_id as loc_id,
	r.unique_health_id, r.family_id, 
	r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, parameters p
	where r.tracking_location_id  = l.child_id
	and l.parent_id = p.location_id
        and r.preg_reg_state in (''PENDING'',''PREGNANT'') 
	--and r.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'', ''TEMPORARY'')
        and r.maternal_detah is false
        and r.edd > current_date 
	and r.lmp_month_year between p.from_date and p.to_date
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
    and r.is_valid_for_tracking_report
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id, 
        string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
select loc.loc_id, 
	concat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')	
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
--member_det.dod as "Date of Death",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','aff217b5-3f21-4a9a-a050-0118453559d1'),
	 (1657,60512,'2020-06-29 11:47:41.872',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id','with prefered_language as(
	select case when prefered_language = ''EN'' then true else false end as is_english 
	from um_user
	where id = #loggedInUserId#
),dates as (
    select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date
),health_infra_details as (
	select id,name from health_infrastructure_details
	where location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and (is_cmtc or is_nrc or is_sncu)
),health_infra_wise_analytics as (
	select health_infra_details.id as child_id,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.less_than_6_months_admitted) as less_than_6_months_admitted,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.above_6_months_admitted) as above_6_months_admitted,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.less_than_3_sd) as less_than_3_sd,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.muac_less_than_11_5) as muac_less_than_11_5,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.sd_and_muac) as sd_and_muac,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.oedema) as oedema,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.height_less_than_45) as height_less_than_45,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.visited_by_pediatrician) as visited_by_pediatrician,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.discharge_from_facility) as discharge_from_facility,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.cured) as cured,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.defaulters) as defaulters,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.death) as death,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.referred_for_cmam) as referred_for_cmam,
	sum(child_cmtc_nrc_health_facility_wise_analytics_wise_details.weight_gain_15) as weight_gain_15
	from health_infra_details
	inner join child_cmtc_nrc_health_facility_wise_analytics_wise_details on health_infra_details.id = child_cmtc_nrc_health_facility_wise_analytics_wise_details.health_infra_id
	inner join dates on child_cmtc_nrc_health_facility_wise_analytics_wise_details.month_year between dates.from_date and dates.to_date
	group by health_infra_details.id
),medical_transfer_details as (
	select health_infra_details.id as child_id,
	count(*) as medical_transfer
	from health_infra_details
	inner join child_cmtc_nrc_referral_detail on health_infra_details.id = child_cmtc_nrc_referral_detail.referred_from
	inner join dates on child_cmtc_nrc_referral_detail.referred_date between dates.from_date and dates.to_date
	group by health_infra_details.id
), det as (
	select row_number() over() as sr_no, 
	health_infra_details.name,
	health_infra_details.id as hidden_health_id,
	health_infrastructure_details.no_of_beds as no_of_beds,
	coalesce(health_infra_wise_analytics.less_than_6_months_admitted) as less_than_6_months_admitted,
	coalesce(health_infra_wise_analytics.above_6_months_admitted) as above_6_months_admitted,
	coalesce(health_infra_wise_analytics.less_than_6_months_admitted + health_infra_wise_analytics.above_6_months_admitted) as admitted_total,
	coalesce(health_infra_wise_analytics.less_than_3_sd) as less_than_3_sd,
	coalesce(health_infra_wise_analytics.muac_less_than_11_5) as muac_less_than_11_5,
	coalesce(health_infra_wise_analytics.sd_and_muac) as sd_and_muac,
	coalesce(health_infra_wise_analytics.oedema) as oedema,
	coalesce(health_infra_wise_analytics.height_less_than_45) as height_less_than_45,
	coalesce(
	health_infra_wise_analytics.less_than_3_sd
	+ health_infra_wise_analytics.muac_less_than_11_5
	+ health_infra_wise_analytics.sd_and_muac
	+ health_infra_wise_analytics.oedema
	+ health_infra_wise_analytics.height_less_than_45
	) as criteria_total,
	coalesce(health_infra_wise_analytics.visited_by_pediatrician) as visited_by_pediatrician,
	coalesce(health_infra_wise_analytics.discharge_from_facility) as discharge_from_facility,
	coalesce(health_infra_wise_analytics.cured) as cured,
	coalesce(health_infra_wise_analytics.defaulters) as defaulters,
	coalesce(health_infra_wise_analytics.death) as death,
	coalesce(health_infra_wise_analytics.referred_for_cmam) as referred_for_cmam,
	coalesce(health_infra_wise_analytics.weight_gain_15) as weight_gain_15,
	coalesce(medical_transfer_details.medical_transfer) as medical_transfer
	from health_infra_details
	inner join health_infrastructure_details on health_infra_details.id = health_infrastructure_details.id
	left join health_infra_wise_analytics on health_infra_details.id = health_infra_wise_analytics.child_id
	left join medical_transfer_details on health_infra_details.id = medical_transfer_details.child_id
)
select row_number() over() as "Sr.No",
det.name as "Facility Name",
det.hidden_health_id,
det.no_of_beds as "No. of Beds",
det.less_than_6_months_admitted as "Less than 6 months",
det.above_6_months_admitted as "Above 6 months",
det.admitted_total as "Total Admission",
det.less_than_3_sd as "Less than 3SD",
det.muac_less_than_11_5 as "Less than 11.5 MUAC",
det.sd_and_muac as "Both",
det.oedema as "Oedema",
det.height_less_than_45 as "Other (Less than 45cm length)",
det.criteria_total as "Total",
	case when det.admitted_total = 0 or det.admitted_total is null or det.no_of_beds = 0 or det.no_of_beds is null then 0 else
	round(det.admitted_total * 100.0/(det.no_of_beds*2)) end as "Admission Rate",
det.visited_by_pediatrician as "Visited by pediatrician",
	case when det.visited_by_pediatrician = 0 or det.visited_by_pediatrician is null or det.admitted_total = 0 or det.admitted_total is null then 0 else
	round(det.visited_by_pediatrician * 100.0/det.admitted_total) end as "percent_col_Visited by Pediatrician",
det.discharge_from_facility as "Discharge from facility",
	case when det.discharge_from_facility = 0 or det.discharge_from_facility is null or det.admitted_total = 0 or det.admitted_total is null then 0 else
	round(det.discharge_from_facility * 100.0/det.admitted_total) end as "percent_col_Discharge from facility",
det.cured as "Improved nutritional status on discharge from facility",
	case when det.cured = 0 or det.cured is null or det.discharge_from_facility = 0 or det.discharge_from_facility is null then 0 else
	round(det.cured * 100.0/det.discharge_from_facility) end as "percent_col_Improved nutritional status on discharge from facility",
det.defaulters as "Defaulters",
	case when det.defaulters = 0 or det.defaulters is null or det.admitted_total = 0 or det.admitted_total is null then 0 else
	round(det.defaulters * 100.0/det.admitted_total) end as "percent_col_Defaulters",
det.medical_transfer as "Medical Transfer",
	case when det.medical_transfer = 0 or det.medical_transfer is null or det.admitted_total = 0 or det.admitted_total is null then 0 else
	round(det.medical_transfer * 100.0/det.admitted_total) end as "percent_col_Medical Transfer",
det.death as "Death",
det.referred_for_cmam as "Child referred for enrolling in CMAM program",
	case when det.referred_for_cmam = 0 or det.referred_for_cmam is null or det.discharge_from_facility = 0 or det.discharge_from_facility is null then 0 else
	round(det.referred_for_cmam * 100.0/det.discharge_from_facility) end as "percent_col_Child referred for enrolling in CMAM program",
det.weight_gain_15 as "No. of children with 15% weigth gain"
from det
union all
select null,
''<b>Total<b>'',
#location_id#,
sum(det.no_of_beds),
sum(det.less_than_6_months_admitted),
sum(det.above_6_months_admitted),
sum(det.admitted_total),
sum(det.less_than_3_sd),
sum(det.muac_less_than_11_5),
sum(det.sd_and_muac),
sum(det.oedema),
sum(det.height_less_than_45),
sum(det.criteria_total),
	case when (sum(det.admitted_total) = 0 or sum(det.admitted_total) is null or sum(det.no_of_beds) = 0 or sum(det.no_of_beds) is null) then 0 else 
	round(sum(det.admitted_total)*100.0/(sum(det.no_of_beds)*2),2) end,
sum(det.visited_by_pediatrician),
	case when (sum(det.visited_by_pediatrician) = 0 or sum(det.visited_by_pediatrician) is null or sum(det.admitted_total) = 0 or sum(det.admitted_total) is null) then 0 else 
	round(sum(det.visited_by_pediatrician)*100.0/sum(det.admitted_total),2) end,
sum(det.discharge_from_facility),
	case when (sum(det.discharge_from_facility) = 0 or sum(det.discharge_from_facility) is null or sum(det.admitted_total) = 0 or sum(det.admitted_total) is null) then 0 else 
	round(sum(det.discharge_from_facility)*100.0/sum(det.admitted_total),2) end,
sum(det.cured),
	case when (sum(det.cured) = 0 or sum(det.cured) is null or sum(det.discharge_from_facility) = 0 or sum(det.discharge_from_facility) is null) then 0 else 
	round(sum(det.cured)*100.0/sum(det.discharge_from_facility),2) end,
sum(det.defaulters),
	case when (sum(det.defaulters) = 0 or sum(det.defaulters) is null or sum(det.admitted_total) = 0 or sum(det.admitted_total) is null) then 0 else 
	round(sum(det.defaulters)*100.0/sum(det.admitted_total),2) end,
sum(det.medical_transfer),
	case when (sum(det.medical_transfer) = 0 or sum(det.medical_transfer) is null or sum(det.admitted_total) = 0 or sum(det.admitted_total) is null) then 0 else 
	round(sum(det.medical_transfer)*100.0/sum(det.admitted_total),2) end,
sum(det.death),
sum(det.referred_for_cmam),
	case when (sum(det.referred_for_cmam) = 0 or sum(det.referred_for_cmam) is null or sum(det.discharge_from_facility) = 0 or sum(det.discharge_from_facility) is null) then 0 else 
	round(sum(det.referred_for_cmam)*100.0/sum(det.discharge_from_facility),2) end,
sum(det.weight_gain_15)	
from det',true,'ACTIVE','6aa4f634-b359-455b-baa8-1d2a35ff5aa9'),
	 (1655,60512,'2020-06-29 11:36:35.967',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id','with prefered_language as(
	select case when prefered_language = ''EN'' then true else false end as is_english 
	from um_user
	where id = #loggedInUserId#
),location_detail as (
	select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1
),dates as (
	select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date
),analytics as (
	select location_detail.child_id,
	sum(childer_screen_by_anm) as children_screened,
	sum(apetite_pass_no_medical_complication_boys) as apetite_pass_no_medical_complication_boys,
	sum(apetite_pass_no_medical_complication_girls) as apetite_pass_no_medical_complication_girls,
	sum(apetite_fail_medical_complication_boys) as apetite_fail_medical_complication_boys,
	sum(apetite_fail_medical_complication_girls) as apetite_fail_medical_complication_girls,
	sum(apetite_pass_medical_complication_boys) as apetite_pass_medical_complication_boys,
	sum(apetite_pass_medical_complication_girls) as apetite_pass_medical_complication_girls,
	sum(apetite_fail_no_medical_complication_boys) as apetite_fail_no_medical_complication_boys,
	sum(apetite_fail_no_medical_complication_girls) as apetite_fail_no_medical_complication_girls,
	sum(sam_oedema_m) as oedema_boys,
	sum(sam_oedema_f) as oedema_girls,
	sum(sam_boys_less_than_6_month) as less_than_6_month_boys,
	sum(sam_girls_less_than_6_month) as less_than_6_month_girls
	from location_detail
	inner join location_hierchy_closer_det on location_detail.child_id = location_hierchy_closer_det.parent_id
	inner join child_cmtc_nrc_analytics_location_wise_details on location_hierchy_closer_det.child_id = child_cmtc_nrc_analytics_location_wise_details.location_id
	inner join dates on child_cmtc_nrc_analytics_location_wise_details.month_year between dates.from_date and dates.to_date
	group by location_detail.child_id
),details as (
	select row_number() over() as sr_no,
	location_master.id as hidden_location_id,
	case when prefered_language.is_english and location_master.english_name is not null then location_master.english_name else location_master.name end as loc,
	coalesce(analytics.children_screened,0) as children_screened,
	coalesce(analytics.apetite_pass_no_medical_complication_boys,0) as apetite_pass_no_medical_complication_boys,
	coalesce(analytics.apetite_pass_no_medical_complication_girls,0) as apetite_pass_no_medical_complication_girls,
	coalesce(analytics.apetite_pass_no_medical_complication_boys + analytics.apetite_pass_no_medical_complication_girls,0) as apetite_pass_no_medical_complication_total,
	coalesce(analytics.apetite_fail_medical_complication_boys,0) as apetite_fail_medical_complication_boys,
	coalesce(analytics.apetite_fail_medical_complication_girls,0) as apetite_fail_medical_complication_girls,
	coalesce(analytics.apetite_fail_medical_complication_boys + analytics.apetite_fail_medical_complication_girls,0) as apetite_fail_medical_complication_total,
	coalesce(analytics.apetite_pass_medical_complication_boys,0) as apetite_pass_medical_complication_boys,
	coalesce(analytics.apetite_pass_medical_complication_girls,0) as apetite_pass_medical_complication_girls,
	coalesce(analytics.apetite_pass_medical_complication_boys + analytics.apetite_pass_medical_complication_girls,0) as apetite_pass_medical_complication_total,
	coalesce(analytics.apetite_fail_no_medical_complication_boys,0) as apetite_fail_no_medical_complication_boys,
	coalesce(analytics.apetite_fail_no_medical_complication_girls,0) as apetite_fail_no_medical_complication_girls,
	coalesce(analytics.apetite_fail_no_medical_complication_boys + analytics.apetite_fail_no_medical_complication_girls,0) as apetite_fail_no_medical_complication_total,
	coalesce(analytics.oedema_boys,0) as oedema_boys,
	coalesce(analytics.oedema_girls,0) as oedema_girls,
	coalesce(analytics.oedema_boys + analytics.oedema_girls,0) as oedema_total,
	coalesce(analytics.less_than_6_month_boys,0) as less_than_6_month_boys,
	coalesce(analytics.less_than_6_month_girls,0) as less_than_6_month_girls,
	coalesce(analytics.less_than_6_month_boys + analytics.less_than_6_month_girls,0) as less_than_6_month_total
	from location_detail
	inner join location_master on location_master.id = location_detail.child_id
	left join analytics on location_detail.child_id = analytics.child_id
    cross join prefered_language
)
select row_number() over() as "Sr. no", 
details.loc as "Location",
details.hidden_location_id,
details.apetite_pass_no_medical_complication_boys as "SAM with Appetite Test Pass without Medical Complication (Boys)",
details.apetite_pass_no_medical_complication_girls as "SAM with Appetite Test Pass without Medical Complication (Girls)",
details.apetite_pass_no_medical_complication_total as "SAM with Appetite Test Pass without Medical Complication (Total)",
	case when details.apetite_pass_no_medical_complication_total = 0 or details.apetite_pass_no_medical_complication_total is null or details.children_screened = 0 or details.children_screened is null then 0 else
	round(details.apetite_pass_no_medical_complication_total * 100.0/details.children_screened) end as "percent_col_SAM with Appetite Test Pass without Medical Complication (Total)",
details.apetite_fail_medical_complication_boys as "SAM with Appetite Test Fail with Medical Complication (Boys)",
details.apetite_fail_medical_complication_girls as "SAM with Appetite Test Fail with Medical Complication (Girls)",
details.apetite_fail_medical_complication_total as "SAM with Appetite Test Fail with Medical Complication (Total)",
	case when details.apetite_fail_medical_complication_total = 0 or details.apetite_fail_medical_complication_total is null or details.children_screened = 0 or details.children_screened is null then 0 else
	round(details.apetite_fail_medical_complication_total * 100.0/details.children_screened) end as "percent_col_SAM with Appetite Test Fail with Medical Complication (Total)",
details.apetite_pass_medical_complication_boys as "SAM with Appetite Test Pass with Medical Complication (Boys)",
details.apetite_pass_medical_complication_girls as "SAM with Appetite Test Pass with Medical Complication (Girls)",
details.apetite_pass_medical_complication_total as "SAM with Appetite Test Pass with Medical Complication (Total)",
	case when details.apetite_pass_medical_complication_total = 0 or details.apetite_pass_medical_complication_total is null or details.children_screened = 0 or details.children_screened is null then 0 else
	round(details.apetite_pass_medical_complication_total * 100.0/details.children_screened) end as "percent_col_SAM with Appetite Test Pass with Medical Complication (Total)",
details.apetite_fail_no_medical_complication_boys as "SAM with Appetite Test Fail without Medical Complication (Boys)",
details.apetite_fail_no_medical_complication_girls as "SAM with Appetite Test Fail without Medical Complication (Girls)",
details.apetite_fail_no_medical_complication_total as "SAM with Appetite Test Fail without Medical Complication (Total)",
	case when details.apetite_fail_no_medical_complication_total = 0 or details.apetite_fail_no_medical_complication_total is null or details.children_screened = 0 or details.children_screened is null then 0 else
	round(details.apetite_fail_no_medical_complication_total * 100.0/details.children_screened) end as "percent_col_SAM with Appetite Test Fail without Medical Complication (Total)",
details.less_than_6_month_boys as "Less than 6 months (Boys)",
details.less_than_6_month_girls as "Less than 6 months (Girls)",
details.less_than_6_month_total as "Less than 6 month (Total)",
	case when details.less_than_6_month_total = 0 or details.less_than_6_month_total is null or details.children_screened = 0 or details.children_screened is null then 0 else
	round(details.less_than_6_month_total * 100.0/details.children_screened) end as "percent_col_Less than 6 month (Total)",
details.oedema_boys as "Bilateral Pitting Oedema (Boys)",
details.oedema_girls as "Bilateral Pitting Oedema (Girls)",
details.oedema_total as "Bilateral Pitting Oedema (Total)",
	case when details.oedema_total = 0 or details.oedema_total is null or details.children_screened = 0 or details.children_screened is null then 0 else
	round(details.oedema_total * 100.0/details.children_screened) end as "percent_col_Bilateral Pitting Oedema (Total)",
coalesce(
	details.apetite_fail_medical_complication_boys
	+ details.apetite_pass_medical_complication_boys
	+ details.apetite_fail_no_medical_complication_boys
	+ details.less_than_6_month_boys
	+ details.oedema_boys
,0) as "Total (Boys)",
coalesce(
	details.apetite_fail_medical_complication_girls
	+ details.apetite_pass_medical_complication_girls
	+ details.apetite_fail_no_medical_complication_girls
	+ details.less_than_6_month_girls
	+ details.oedema_girls
,0) as "Total (Girls)",
coalesce(
	details.apetite_pass_no_medical_complication_total
	+ details.apetite_fail_medical_complication_total
	+ details.apetite_pass_medical_complication_total
	+ details.apetite_fail_no_medical_complication_total
	+ details.less_than_6_month_total
	+ details.oedema_total
,0) as "Grand Total"
from details
union all
select null,
''<b>Total<b>'',
#location_id#,
sum(details.apetite_pass_no_medical_complication_boys),
sum(details.apetite_pass_no_medical_complication_girls),
sum(details.apetite_pass_no_medical_complication_total),
	case when (sum(details.apetite_pass_no_medical_complication_total) = 0 or sum(details.apetite_pass_no_medical_complication_total) is null or sum(details.children_screened) = 0 or sum(details.children_screened) is null) then 0 else 
	round(sum(details.apetite_pass_no_medical_complication_total)*100.0/sum(details.children_screened),2) end,
sum(details.apetite_fail_medical_complication_boys),
sum(details.apetite_fail_medical_complication_girls),
sum(details.apetite_fail_medical_complication_total),
	case when (sum(details.apetite_fail_medical_complication_total) = 0 or sum(details.apetite_fail_medical_complication_total) is null or sum(details.children_screened) = 0 or sum(details.children_screened) is null) then 0 else 
	round(sum(details.apetite_fail_medical_complication_total)*100.0/sum(details.children_screened),2) end,
sum(details.apetite_pass_medical_complication_boys),
sum(details.apetite_pass_medical_complication_girls),
sum(details.apetite_pass_medical_complication_total),
	case when (sum(details.apetite_pass_medical_complication_total) = 0 or sum(details.apetite_pass_medical_complication_total) is null or sum(details.children_screened) = 0 or sum(details.children_screened) is null) then 0 else 
	round(sum(details.apetite_pass_medical_complication_total)*100.0/sum(details.children_screened),2) end,
sum(details.apetite_fail_no_medical_complication_boys),
sum(details.apetite_fail_no_medical_complication_girls),
sum(details.apetite_fail_no_medical_complication_total),
	case when (sum(details.apetite_fail_no_medical_complication_total) = 0 or sum(details.apetite_fail_no_medical_complication_total) is null or sum(details.children_screened) = 0 or sum(details.children_screened) is null) then 0 else 
	round(sum(details.apetite_fail_no_medical_complication_total)*100.0/sum(details.children_screened),2) end,
sum(details.less_than_6_month_boys),
sum(details.less_than_6_month_girls),
sum(details.less_than_6_month_total),
	case when (sum(details.less_than_6_month_total) = 0 or sum(details.less_than_6_month_total) is null or sum(details.children_screened) = 0 or sum(details.children_screened) is null) then 0 else 
	round(sum(details.less_than_6_month_total)*100.0/sum(details.children_screened),2) end,
sum(details.oedema_boys),
sum(details.oedema_girls),
sum(details.oedema_total),
	case when (sum(details.oedema_total) = 0 or sum(details.oedema_total) is null or sum(details.children_screened) = 0 or sum(details.children_screened) is null) then 0 else 
	round(sum(details.oedema_total)*100.0/sum(details.children_screened),2) end,
sum(details.apetite_fail_medical_complication_boys
	+ details.apetite_pass_medical_complication_boys
	+ details.apetite_fail_no_medical_complication_boys
	+ details.less_than_6_month_boys
	+ details.oedema_boys),
sum(details.apetite_fail_medical_complication_girls
	+ details.apetite_pass_medical_complication_girls
	+ details.apetite_fail_no_medical_complication_girls
	+ details.less_than_6_month_girls
	+ details.oedema_girls),
sum(details.apetite_pass_no_medical_complication_total
	+ details.apetite_fail_medical_complication_total
	+ details.apetite_pass_medical_complication_total
	+ details.apetite_fail_no_medical_complication_total
	+ details.less_than_6_month_total
	+ details.oedema_total)
from details;',true,'ACTIVE','3ab4175c-0c17-4bf0-986e-3dd34ad5e84e'),
	 (376,1,'2019-02-13 11:51:08.871',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','bcd83b75-b838-4d9d-8569-23c00418eb39');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (269,1,'2019-02-05 12:37:04.943',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Out of weighed, less than 2.5 kg(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.is_valid_for_tracking_report = true
	and c.birth_weight is not null and c.birth_weight < 2.5
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','157159ac-4422-4b60-a9c7-bb7c0fbdff59'),
	 (64,1027,'2018-07-20 11:55:29.312',1,'2021-01-13 20:22:06.427965','user_id,location_id','select ROW_NUMBER() over() as "S No.",fam.family_id as "Family ID",
mem.first_name || '' '' || mem.last_name as "Member Name",
case when fam.contact_person_id is not null then contact.first_name || '' '' || contact.last_name else ''NA'' end as "Contact Person",
case when mem.mobile_number is not null then contact.mobile_number else ''NA'' end as "Contact No" 
from imt_family fam inner join location_hierchy_closer_det lhcd
on fam.location_id = lhcd.child_id 
inner join imt_member mem on fam.family_id = mem.family_id
left join imt_member contact on contact.id = fam.contact_person_id
where lhcd.parent_id in  (select child_id from location_hierchy_closer_det where parent_id = #location_id#
and child_id in (select loc_id from um_user_location where user_id = #user_id# and state = ''ACTIVE'')) and 
mem.state in (''com.argusoft.imtecho.member.state.fhw.reverified'',''com.argusoft.imtecho.member.state.verified'',
''com.argusoft.imtecho.member.state.new'') and fam.state in (''com.argusoft.imtecho.family.state.new'',''com.argusoft.imtecho.family.state.new.fhsr.verified'',
				''com.argusoft.imtecho.family.state.new.fhw.reverified'',''com.argusoft.imtecho.family.state.new.mo.verified'',
			    ''com.argusoft.imtecho.family.state.new.mo.fhw.reverified'',''com.argusoft.imtecho.family.state.verified'',
				''com.argusoft.imtecho.family.state.fhw.reverified'',''com.argusoft.imtecho.family.state.emri.verified.ok'',
				''com.argusoft.imtecho.family.state.mo.reverified'',''com.argusoft.imtecho.family.state.mo.fhw.reverified'',
				''com.argusoft.imtecho.family.state.emri.fhw.reverified'',''com.argusoft.imtecho.family.state.emri.fhw.reverified.dead'',
				''com.argusoft.imtecho.family.state.emri.fhw.reverified.verified'',''com.argusoft.imtecho.family.state.emri.verified.ok.dead'',
				''com.argusoft.imtecho.family.state.emri.verified.ok.archived'',''com.argusoft.imtecho.family.state.emri.verification.pool.dead'',
				''com.argusoft.imtecho.family.state.emri.verification.pool'',''com.argusoft.imtecho.family.state.emri.verification.pool.verified'',
				''com.argusoft.imtecho.family.state.emri.verified.ok.verified'')',true,'ACTIVE','9856840e-da24-4d65-b0b0-55a3aeccab8e'),
	 (1489,74841,'2020-01-08 18:25:14.665',1,'2021-01-13 20:22:06.427965','notification_type,limit_offset,from_date,to_date,role_id,location_id','WITH
dates AS (
    SELECT
        to_date(
            CASE WHEN ''#from_date#'' = ''null'' THEN
                NULL
            ELSE
                ''#from_date#''
            END, ''MM-DD-YYYY'') AS from_date,
        to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date
)
,user_wise_count AS (
    SELECT
 		ul.user_id,
 		string_agg(distinct get_location_hierarchy(ul.location_id),''<br>'') as location_name,
 		sum(ul.missed_count) as missed_count,
        sum(ul.pending_count) as pending_count,
        sum(ul.on_completed_count) as on_completed_count,
        sum(ul.after_due_completed_count) as after_due_completed_count,
        sum(ul.due_pending) as due_pending
    FROM
        location_wise_task_complition_rate_analysis ul,
        dates,location_hierchy_closer_det lh	
    WHERE
        ul.month_year BETWEEN dates.from_date AND dates.to_date
        AND lh.parent_id = #location_id#
        and lh.child_id = ul.location_id        
        AND (
            case 
            when #notification_type# = ''-1'' then ul.notification_type_id in (select id from notification_type_master nt where role_id = #role_id#) 
            else ul.notification_type_id = #notification_type# 
            end)
        GROUP BY
          lh.parent_id, ul.user_id
order by lh.parent_id, ul.user_id
        #limit_offset#
), result_set as (select distinct
	concat_ws('' '', u.first_name, u.last_name, ''('', u.user_name, '')'') "User Detail",
	string_agg(distinct uwc.location_name, ''<br>'') as "Location",
	COALESCE(sum(uwc.on_completed_count), 0) as "On time Complete",
    COALESCE(sum(uwc.after_due_completed_count), 0) as "After Due Completed Count",
    COALESCE(sum(uwc.pending_count), 0) as "Pending Count",
    COALESCE(sum(uwc.due_pending), 0) as "Due Pending",
    COALESCE(sum(uwc.missed_count), 0) as "Missed",
(COALESCE(sum(uwc.on_completed_count), 0) + COALESCE(sum(uwc.after_due_completed_count), 0) + COALESCE(sum(uwc.pending_count), 0) +
     COALESCE(sum(uwc.due_pending), 0) + COALESCE(sum(uwc.missed_count), 0)) as "Total"
	from user_wise_count uwc
inner join um_user u
on u.id  = uwc.user_id
group by u.first_name, u.last_name, u.user_name)

select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
rs.*  
from result_set rs',true,'ACTIVE','96e77dc1-3c46-4b56-a08d-5dc3fe697e35'),
	 (1654,60512,'2020-06-29 11:33:19.967',1,'2021-01-13 20:22:06.427965','from_date,to_date,location_id','with dates as (
    select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date
),health_infra_details as (
	select id,name from health_infrastructure_details
	where location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and (is_cmtc or is_nrc or is_sncu)
),details as (
	select health_infra_details.id,
	count(*) filter (where health_infrastructure_details.is_cmtc) as to_cmtc_count,
	count(*) filter (where health_infrastructure_details.is_nrc) as to_nrc_count
	from health_infra_details
	inner join child_cmtc_nrc_referral_detail on health_infra_details.id = child_cmtc_nrc_referral_detail.referred_from
	inner join health_infrastructure_details on child_cmtc_nrc_referral_detail.referred_to = health_infrastructure_details.id
	inner join dates on child_cmtc_nrc_referral_detail.referred_date between dates.from_date and dates.to_date
	group by health_infra_details.id
)select health_infra_details.name as "Facility",
coalesce(details.to_cmtc_count,0) as "CMTC To CMTC",
coalesce(details.to_nrc_count,0) as "CMTC To NRC"
from health_infra_details
left join details on health_infra_details.id = details.id
union all
select ''<b>Total</b>'',
coalesce(sum(details.to_cmtc_count),0),
coalesce(sum(details.to_nrc_count),0)
from details;',true,'ACTIVE','c3ad2923-757f-46c1-bb6d-7540641dd23d'),
	 (698,409,'2019-02-27 13:24:54.748',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','a4ad53e3-0941-4d09-9e85-bece45a6711f'),
	 (1658,60512,'2020-06-29 11:51:40.134',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id','with prefered_language as(
	select case when prefered_language = ''EN'' then true else false end as is_english 
	from um_user
	where id = #loggedInUserId#
),dates as (
    select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date
),health_infra_details as (
	select id,name from health_infrastructure_details
	where location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and (is_cmtc or is_nrc or is_sncu)
),health_infra_wise_analytics as (
	select health_infra_details.id as child_id,
	sum(details.less_than_6_months_admitted + details.above_6_months_admitted) as total_admitted,
	sum(details.discharge_from_facility) as discharge_from_facility,
	sum(details.death) as death,
	sum(details.fsam_follow_up_visit_1) as follow_up_visit_1,
	sum(details.fsam_follow_up_visit_2) as follow_up_visit_2,
	sum(details.fsam_follow_up_visit_3) as follow_up_visit_3,
	sum(details.cured) as cured,
	sum(details.sam_to_mam) as sam_to_mam,
	sum(details.sam_to_sam) as sam_to_sam,
	sum(details.defaulters) as defaulters,
	sum(details.weight_gain_8gm_kg_day) as weight_gain_8gm_kg_day,
	sum(details.weight_gain_15) as weight_gain_15
	from health_infra_details
	inner join child_cmtc_nrc_health_facility_wise_analytics_wise_details details on health_infra_details.id = details.health_infra_id
	inner join dates on details.month_year between dates.from_date and dates.to_date
	group by health_infra_details.id
), det as (
	select row_number() over() as sr_no, 
	health_infra_details.name,
	health_infra_details.id as hidden_health_id,
	coalesce(health_infra_wise_analytics.total_admitted) as total_admitted,
	coalesce(health_infra_wise_analytics.discharge_from_facility) as discharge_from_facility,
	coalesce(health_infra_wise_analytics.death) as death,
	coalesce(health_infra_wise_analytics.follow_up_visit_1) as follow_up_visit_1,
	coalesce(health_infra_wise_analytics.follow_up_visit_2) as follow_up_visit_2,
	coalesce(health_infra_wise_analytics.follow_up_visit_3) as follow_up_visit_3,
	coalesce(health_infra_wise_analytics.cured) as cured,
	coalesce(health_infra_wise_analytics.sam_to_mam) as sam_to_mam,
	coalesce(health_infra_wise_analytics.sam_to_sam) as sam_to_sam,
	coalesce(health_infra_wise_analytics.defaulters) as defaulters,
	coalesce(health_infra_wise_analytics.weight_gain_8gm_kg_day) as weight_gain_8gm_kg_day,
	coalesce(health_infra_wise_analytics.weight_gain_15) as weight_gain_15
	from health_infra_details
	left join health_infra_wise_analytics on health_infra_details.id = health_infra_wise_analytics.child_id
)
select det.name as "Facility Name",
det.hidden_health_id,
det.total_admitted as "No. of children admitted at CMTC/NRC",
det.discharge_from_facility as "Discharge From Facility",
	case when det.discharge_from_facility = 0 or det.discharge_from_facility is null or det.total_admitted = 0 or det.total_admitted is null then 0 else
	round(det.discharge_from_facility * 100.0/det.total_admitted) end as "percent_col_Discharge From Facility",
det.death as "Child Death",
det.follow_up_visit_1 as "Follow Up visit 1",
det.follow_up_visit_2 as "Follow Up visit 2",
det.follow_up_visit_3 as "Follow Up visit 3",
det.cured as "Children Achieved Cured Criteria",
det.sam_to_mam as "SAM To MAM",
det.sam_to_sam as "SAM To SAM",
det.defaulters as "Defaulters",
	case when det.defaulters = 0 or det.defaulters is null or det.total_admitted = 0 or det.total_admitted is null then 0 else
	round(det.defaulters * 100.0/det.total_admitted) end as "percent_col_Defaulters",
det.weight_gain_8gm_kg_day as "Weight gain more than 8gm/kg/day",
	case when det.weight_gain_8gm_kg_day = 0 or det.weight_gain_8gm_kg_day is null or det.discharge_from_facility = 0 or det.discharge_from_facility is null then 0 else
	round(det.weight_gain_8gm_kg_day * 100.0/det.discharge_from_facility) end as "percent_col_Weight gain more than 8gm/kg/day",
det.weight_gain_15 as "15% weight gain at the end of program",
	case when det.weight_gain_15 = 0 or det.weight_gain_15 is null or det.discharge_from_facility = 0 or det.discharge_from_facility is null then 0 else
	round(det.weight_gain_15 * 100.0/det.discharge_from_facility) end as "percent_col_15% weight gain at the end of program"
from det
union all
select ''<b>Total<b>'',
#location_id#,
sum(det.total_admitted),
sum(det.discharge_from_facility),
	case when (sum(det.discharge_from_facility) = 0 or sum(det.discharge_from_facility) is null or sum(det.total_admitted) = 0 or sum(det.total_admitted) is null) then 0 else 
	round(sum(det.discharge_from_facility)*100.0/sum(det.total_admitted),2) end,
sum(det.death),
sum(det.follow_up_visit_1),
sum(det.follow_up_visit_2),
sum(det.follow_up_visit_3),
sum(det.cured),
sum(det.sam_to_mam),
sum(det.sam_to_sam),
sum(det.defaulters),
	case when (sum(det.defaulters) = 0 or sum(det.defaulters) is null or sum(det.total_admitted) = 0 or sum(det.total_admitted) is null) then 0 else 
	round(sum(det.defaulters)*100.0/sum(det.total_admitted),2) end,
sum(det.weight_gain_8gm_kg_day),
	case when (sum(det.weight_gain_8gm_kg_day) = 0 or sum(det.weight_gain_8gm_kg_day) is null or sum(det.discharge_from_facility) = 0 or sum(det.discharge_from_facility) is null) then 0 else 
	round(sum(det.weight_gain_8gm_kg_day)*100.0/sum(det.discharge_from_facility),2) end,
sum(det.weight_gain_15),
	case when (sum(det.weight_gain_15) = 0 or sum(det.weight_gain_15) is null or sum(det.discharge_from_facility) = 0 or sum(det.discharge_from_facility) is null) then 0 else 
	round(sum(det.weight_gain_15)*100.0/sum(det.discharge_from_facility),2) end	
from det',true,'ACTIVE','ae45b62b-0852-4724-969a-d1870b341093'),
	 (1592,74841,'2020-04-13 13:15:36.933',1,'2021-01-13 20:22:06.427965','from_date,to_date,upto_date,location_id','with location_det as (
select child_id as loc_id
from location_hierchy_closer_det lhc
where
parent_id = #location_id# and depth = (case when #location_id# in (2,-1) then 1 else 0 end)
-- 2
)
--select * from location_det
,paratemeter_det as (
select
case when ''#from_date#'' != ''null'' then to_date(''#from_date#'',''MM/DD/YYYY'') end as from_date,
-- 04/10/2020
case when ''#to_date#'' != ''null'' then to_date(''#to_date#'',''MM/DD/YYYY'') + interval ''1 day'' - interval ''1 millisecond''  end as upto_date
-- #upto_date#
)
,lab_wise_analytics as (
select
loch.parent_id as location_id,
count(1) filter(where cltd.lab_collection_on between paratemeter_det.from_date and paratemeter_det.upto_date
) total_sample_received,
count(1) filter (where cltd.lab_collection_on between paratemeter_det.from_date and paratemeter_det.upto_date
and  cad.admission_from = ''NEW'') as new_admitted,
count(distinct cad.id) filter (where cltd.lab_collection_on between paratemeter_det.from_date and paratemeter_det.upto_date
and cad.admission_from = ''OPD_ADMIT'') as opd_admitted,
count(1) filter(where cltd.lab_sample_rejected_on is null
and cltd.lab_sample_received_on between paratemeter_det.from_date and paratemeter_det.upto_date
) total_accepted_for_testing,
count(1) filter(where cltd.lab_sample_rejected_on is not null
and cltd.lab_sample_rejected_on between paratemeter_det.from_date and paratemeter_det.upto_date
) total_Rejected_for_testing,
count(1) filter(where cltd.lab_sample_rejected_on is null
and cltd.lab_result_entry_on between paratemeter_det.from_date and paratemeter_det.upto_date
) total_case_tested,
count(1) filter (where cltd.lab_result = ''POSITIVE''
and cltd.lab_result_entry_on between paratemeter_det.from_date and paratemeter_det.upto_date
) as positive_cases,
count(1) filter (where cltd.lab_result = ''NEGATIVE''
and cltd.lab_result_entry_on between paratemeter_det.from_date and paratemeter_det.upto_date
) as negative_cases,
count(1) filter (where cltd.lab_result = ''INDETERMINATE''
and cltd.lab_result_entry_on between paratemeter_det.from_date and paratemeter_det.upto_date
) as inderminate_cases
from covid19_lab_test_detail cltd,covid19_admission_detail cad,location_hierchy_closer_det loch
inner join paratemeter_det on true = true
where cltd.covid_admission_detail_id = cad.id 
and loch.child_id = cad.location_id and loch.parent_id in (select loc_id from location_det)
--and cltd.lab_collection_on between paratemeter_det.from_date and paratemeter_det.upto_date
and cad.status not ilike ''%_temp''
group by loch.parent_id    
)
,final_det as (
select
lm.english_name as location,
location_det.loc_id,
coalesce(total_sample_received,0) as total_sample_received,
coalesce(total_accepted_for_testing,0) as total_accepted_for_testing,
coalesce(total_Rejected_for_testing,0) as total_Rejected_for_testing,
coalesce(total_case_tested,0) as total_case_tested,
coalesce(positive_cases,0) as positive_cases,
coalesce(negative_cases,0) as negative_cases,
coalesce(inderminate_cases,0) as inderminate_cases,
coalesce (new_admitted,0) as new_admitted,
coalesce (opd_admitted,0) as opd_admitted
from location_det 
left join lab_wise_analytics analytics on location_det.loc_id = analytics.location_id
left join location_master lm on lm.id = location_det.loc_id
)
select
row_number() over () as "Sr No",
location as "Location",
loc_id as hidden_location_id,
total_sample_received as "Samples Collected",
new_admitted as "Admitted",
opd_admitted as "Opd",
total_accepted_for_testing as "Accepted",
total_Rejected_for_testing as "Rejected",
total_case_tested as "Result Entry",
positive_cases as "Positive",
negative_cases as "Negative",
inderminate_cases as "Inderminate"
from final_det

union all

select
null,
''<b>Total</b>'',
#location_id#,
sum(total_sample_received),
sum(new_admitted),
sum(opd_admitted),
sum(total_accepted_for_testing),
sum(total_Rejected_for_testing),
sum(total_case_tested),
sum(positive_cases),
sum(negative_cases),
sum(inderminate_cases)
from
final_det',true,'ACTIVE','027fccfb-9d82-400f-a9cf-9f726647f7a3'),
	 (267,1,'2019-02-05 12:34:50.509',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','d612e9fc-e287-4a54-83a7-88f6b3afb6e2'),
	 (920,60512,'2019-03-13 15:29:59.486',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','f24df239-2e46-4b68-a829-7aca7b190f0a'),
	 (268,1,'2019-02-05 12:34:50.518',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Children weighed(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.birth_weight is not null
	and c.is_valid_for_tracking_report = true
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','3c919f64-2642-4fba-8eb4-369dc8b247da');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (775,58981,'2019-03-06 15:04:37.679',1,'2021-01-13 20:22:06.427965','limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id','--TT2+TT Booster (Maternal Health Services provided to the mother registered during the year)
with parameters as(
select CAST(#location_id# AS INTEGER) as location_id,
CAST(''#financial_year#'' AS TEXT) as financial_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
 member_det as (
	select r.member_id, r.tracking_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l,parameters p
	where r.tracking_location_id  = l.child_id 
	and (tt2_given is not null or tt_boster is not null)
	and l.parent_id = p.location_id
	and r.reg_service_financial_year = p.financial_year
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
    and r.is_valid_for_tracking_report
	order by r.lmp_date
	#limit_offset#
),  loc_det as (
	select loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, concat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','cd35ea4c-8b96-4493-8673-c580debe9914'),
	 (292,1,'2019-02-11 17:39:34.205',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','e136c0ca-f9a9-414b-8267-a0b0b26bfbfd'),
	 (1647,78434,'2020-06-24 14:17:00.554',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id','--Moderate(Anemia Status Of Registered ANC Report)
with parameters as (
    select CAST(#location_id# AS INTEGER) as location_id,
    cast(''#demographic_location_id#'' as TEXT) as demographic_group,
    to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end, ''MM-DD-YYYY'') as from_date ,
	to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end, ''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date,
    (select report_preferred_language from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
member_det as (
    select
    r.member_id
    ,r.native_location_id as loc_id
    ,r.unique_health_id
    ,r.family_id
    ,r.member_name as name
    ,p.preferred_language
	from
        rch_pregnancy_analytics_details r
        ,location_hierchy_closer_det l
        ,parameters p
	where
        r.native_location_id  = l.child_id
        and l.parent_id = p.location_id
        and r.reg_service_date between p.from_date and p.to_date
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in (select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
        and r.hb between 7 and 9.99
    #limit_offset#
),
fhw_det as (
    select
        loc.loc_id,
        concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
        case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
    from
        um_user_location ul
        ,um_user u
        ,(select distinct loc_id from member_det) loc
        ,location_hierchy_closer_det
    where
        loc.loc_id = location_hierchy_closer_det.child_id
        and location_hierchy_closer_det.parent_id = ul.loc_id
        and u.id = ul.user_id
        and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
        and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select
    ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
    get_location_hierarchy_language_wise(member_det.loc_id, member_det.preferred_language) as "Location",
    member_det.unique_health_id as "Member ID",
    member_det.family_id as "Family ID",
    member_det.name as "Name",
    case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from
    member_det
left join
    fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','ad7f686a-31a0-45c3-a14c-022fbd172825'),
	 (264,1,'2019-02-05 12:31:40.381',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Live Birth from 1st April(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.member_id is not null
	and c.is_valid_for_tracking_report = true
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','19204b85-e0d0-45ff-ab48-38dad38e2595'),
	 (59,1027,'2018-07-20 11:46:48.632',1,'2021-01-13 20:22:06.427965','user_id,location_id','select ROW_NUMBER() over() as "S No.",fam.family_id as "Family ID",
case when fam.contact_person_id is not null then mem.first_name || '' '' || mem.last_name else ''NA'' end as "Contact Person",
case when mem.mobile_number is not null then mem.mobile_number else ''NA'' end as "Contact No" 
from imt_family fam inner join location_hierchy_closer_det lhcd
on fam.location_id = lhcd.child_id 
left join imt_member mem on mem.id = fam.contact_person_id
where lhcd.parent_id in  (select child_id from location_hierchy_closer_det where parent_id = #location_id#
and child_id in (select loc_id from um_user_location where user_id = #user_id# and state = ''ACTIVE'')) and 
fam.state in (''com.argusoft.imtecho.family.state.unverified'',''com.argusoft.imtecho.family.state.orphan'')',true,'ACTIVE','e9604082-4edf-422a-a7df-4417796b3663'),
	 (109,409,'2019-01-03 21:35:45.371',1,'2021-01-13 20:22:06.427965','from_date,to_date','with user_det as(
select * from um_user where role_id in (select distinct role_id from um_user where id in (
select distinct created_by from gvk_immunisation_verification_response ))
and state = ''ACTIVE''
),user_wise_cnt_det as(
select gvk_immunisation_verification_response.created_by,gvk_immunisation_verification_response.member_id,sum(1) as cnt  
from gvk_immunisation_verification,gvk_immunisation_verification_response
where gvk_immunisation_verification.member_id = gvk_immunisation_verification_response.member_id
and gvk_immunisation_verification_response.created_on between cast(case when ''#from_date#'' = ''null'' then ''01-01-1970'' else ''#from_date#'' end as date) 
	and cast(case when ''#to_date#'' = ''null'' then ''01-01-1970'' else ''#to_date#'' end as date) + interval ''1 day'' 
group by gvk_immunisation_verification_response.created_by,gvk_immunisation_verification_response.member_id
),final_detail as(
select concat(user_det.first_name,'' '',user_det.last_name,''('',user_det.user_name,'')'') as name
,sum(case when cnt>0 then 1 else 0 end) as total_family_conacted,sum(case when cnt>1 then 1 else 0 end) as more_then_one_attempt
from user_det left join user_wise_cnt_det on user_det.id = user_wise_cnt_det.created_by
where ''#from_date#'' != ''null''
group by user_det.id,user_det.first_name,user_det.last_name,user_det.user_name
order by user_det.first_name
)select row_number() over() as "Sr. no",name as "Name"
,total_family_conacted as "Number of Families Contacted" 
,more_then_one_attempt as "Number of Families Attempted More Than Once"
from final_detail
union all
select null,''<b>Total</b>'',sum(total_family_conacted),sum(more_then_one_attempt) from final_detail',true,'ACTIVE','6b1a1dbc-a53b-495f-8f84-87f4b1d3fc5e'),
	 (617,409,'2019-02-19 12:29:19.455',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','ab569d43-1536-4470-a59c-3e67030ddcc2'),
	 (1637,409,'2020-06-11 01:53:38.729',1,'2021-01-13 20:22:06.427965','to_month,demographic_location_id,from_month,location_id','with parameters as(
	select CAST(#location_id# as integer) as location_id, cast(''#demographic_location_id#'' as TEXT) as demographic_group,
	to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end, ''MM-DD-YYYY'') as from_date ,
	to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end, ''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date 
),location_ids as(
	select child_id from location_hierchy_closer_det, parameters p where parent_id = p.location_id
	and (p.demographic_group=''null'' or location_hierchy_closer_det.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
	and depth = 1
),anmeia_detail as(
	select location_ids.child_id as location_id
	,max(location_master.english_name) as loc
	,sum(anc_reg) as anc_reg_count
	,sum(anc_with_hb) as hb_data_entered_count
	,sum(anc_with_hb_more_than_4) as minimum_4_count
	,sum(mild_hb) as mild_hb_count
	,sum(modrate_hb) as moderate_hb_count
	,sum(severe_hb) as severe_hb_count
	,sum(normal_hb) as normal_hb_count
	,sum(modrate_hb+mild_hb+severe_hb) as total_anemic_count
	,sum(severe_hb_with_iron_def_inj) as iron_sucrose_count
	,sum(severe_hb_with_blood_transfusion) as blood_transfusion_count
	from rch_anemia_status_analytics,parameters,location_hierchy_closer_det,location_ids,location_master
	where location_hierchy_closer_det.parent_id = location_ids.child_id
	and location_master.id = location_ids.child_id
	and location_hierchy_closer_det.child_id = rch_anemia_status_analytics.location_id
	and rch_anemia_status_analytics.month_year between parameters.from_date and parameters.to_date
	and (parameters.demographic_group=''null'' or location_hierchy_closer_det.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = parameters.demographic_group))
	group by location_ids.child_id
)
select row_number() over() as "Sr. no",
det.loc as "Location",
det.location_id as hidden_location_id,
det.anc_reg_count as "Total ANC Reg.",
det.hb_data_entered_count as "No. of ANC with HB data entry",
	case when det.anc_reg_count = 0 then 0 else 
	round(det.hb_data_entered_count*100.0/det.anc_reg_count,2) end as "% ANC with HB data entry",
det.minimum_4_count as "No. of ANC with minimum 4 times Hb Tested",
	case when (det.hb_data_entered_count = 0) then 0 else 
	round(det.minimum_4_count*100.0/det.hb_data_entered_count,2) end as "% of ANC with minimum 4 times Hb Tested",
det.total_anemic_count as "Total Anemic Mother",
	case when (det.hb_data_entered_count = 0) then 0 else 
	round(det.total_anemic_count*100.0/det.hb_data_entered_count,2) end as "% Total Anemic Mother",
det.mild_hb_count as "Mild (Hb 10 to 10.9)",
	case when (det.hb_data_entered_count = 0) then 0 else 
	round(det.mild_hb_count*100.0/det.hb_data_entered_count,2) end as "% Mild (Hb 10 to 10.9)",
det.moderate_hb_count as "Moderate (Hb 7 to 9.9)",
	case when (det.hb_data_entered_count = 0) then 0 else 
	round(det.moderate_hb_count*100.0/det.hb_data_entered_count,2) end as "% Moderate (Hb 7 to 9.9)",
det.severe_hb_count as "Severe (Hb less than 7)",
	case when (det.hb_data_entered_count = 0) then 0 else 
	round(det.severe_hb_count*100.0/det.hb_data_entered_count,2) end as "% Severe (Hb less than 7)",
det.normal_hb_count as "Normal (Hb more than or equal to 11)",
	case when (det.hb_data_entered_count = 0) then 0 else 
	round(det.normal_hb_count*100.0/det.hb_data_entered_count,2) end as "% Normal (Hb more than or equal to 11)",
det.iron_sucrose_count as "Severe anemic mother given parentral iron (Iron sucrose/FCM)",
	case when (det.severe_hb_count = 0) then 0 else 
	round(det.iron_sucrose_count*100.0/det.severe_hb_count,2) end as "% Severe anemic mother given parentral iron (Iron sucrose/FCM)",
det.blood_transfusion_count as "Severe anemic mother given blood transfusion",
	case when (det.severe_hb_count = 0) then 0 else 
	round(det.blood_transfusion_count*100.0/det.severe_hb_count,2) end as "% Severe anemic mother given blood transfusion"
from anmeia_detail det
union all
select null,
''<b>Total<b>'',
#location_id#,
sum(det.anc_reg_count),
sum(det.hb_data_entered_count),
	case when (sum(det.anc_reg_count) = 0) then 0 else 
	round(sum(det.hb_data_entered_count)*100.0/sum(det.anc_reg_count),2) end,
sum(det.minimum_4_count),
	case when (sum(det.anc_reg_count) = 0) then 0 else 
	round(sum(det.minimum_4_count)*100.0/sum(det.anc_reg_count),2) end,
sum(det.total_anemic_count),
	case when (sum(det.hb_data_entered_count) = 0) then 0 else 
	round(sum(det.total_anemic_count)*100.0/sum(det.hb_data_entered_count),2) end,
sum(det.mild_hb_count),
	case when (sum(det.hb_data_entered_count) = 0) then 0 else 
	round(sum(det.mild_hb_count)*100.0/sum(det.hb_data_entered_count),2) end,
sum(det.moderate_hb_count),
	case when (sum(det.hb_data_entered_count) = 0) then 0 else 
	round(sum(det.moderate_hb_count)*100.0/sum(det.hb_data_entered_count),2) end,
sum(det.severe_hb_count),
	case when (sum(det.hb_data_entered_count) = 0) then 0 else 
	round(sum(det.severe_hb_count)*100.0/sum(det.hb_data_entered_count),2) end,
sum(det.normal_hb_count),
	case when (sum(det.hb_data_entered_count) = 0) then 0 else 
	round(sum(det.normal_hb_count)*100.0/sum(det.hb_data_entered_count),2) end,
sum(det.iron_sucrose_count),
	case when (sum(det.severe_hb_count) = 0) then 0 else 
	round(sum(det.iron_sucrose_count)*100.0/sum(det.severe_hb_count),2) end,
sum(det.blood_transfusion_count),
	case when (sum(det.severe_hb_count) = 0) then 0 else 
	round(sum(det.blood_transfusion_count)*100.0/sum(det.severe_hb_count),2) end
from anmeia_detail det;',true,'ACTIVE','79d7cfef-ee00-48e1-88ff-43aa70a589bf'),
	 (632,409,'2019-02-19 12:55:50.646',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id','--Missing Delivery - EDD Lapsed (Delivery monitoring of Registered LMP)
with parameters as(
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') + interval ''1 day'' as to_date,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
), 
 member_det as (
	select r.member_id, r.tracking_location_id as loc_id,
	r.unique_health_id, r.family_id, 
	r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	--,to_char(r.death_date,''DD/MM/YYYY'') as dod
	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, parameters p	
	where r.tracking_location_id  = l.child_id 
	and l.parent_id = #location_id#
	and r.preg_reg_state in (''PENDING'',''PREGNANT'') 
	and maternal_detah is false
	--and r.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')
        and r.edd <= current_date 
	and r.lmp_month_year between p.from_date and p.to_date
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
    and r.is_valid_for_tracking_report = true
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id, 
        string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
--member_det.dod as "Date of Death",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','631ad36e-fe62-453f-8954-19671210961d'),
	 (204,58981,'2019-01-24 11:30:54.698',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','c4bea8a8-ec21-4836-af19-e0b4f72ec910');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (205,58981,'2019-01-24 11:30:54.765',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','c045fb02-c499-4309-9abf-4e46cac5f308'),
	 (743,58981,'2019-03-01 19:30:54.263',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','a551e9e5-b685-452a-8496-d02e5ed1c08e'),
	 (197,409,'2019-01-23 19:45:49.038',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','7059db52-9ba7-4b13-9cae-02ed0a9c05f9'),
	 (198,409,'2019-01-23 19:45:49.04',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','579c7d27-f742-4d6f-9a90-e8aac5e5dc95'),
	 (294,1,'2019-02-11 17:40:59.394',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','0ad1a0a7-81f1-46a7-9a68-e5ca6662f120'),
	 (304,1,'2019-02-11 18:01:05.729',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','49219aa8-0722-4005-aa1b-dd9ccd015eac'),
	 (503,1,'2019-02-14 15:42:55.182',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,demographic_location_id,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#
)
,parameter as (
	select CAST(''#demographic_location_id#'' AS TEXT) as demographic_group
)
,  child_det as (
	select m.id, c.death_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
    inner join parameter p on true = true
	where l.child_id = c.death_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.is_infant_death = true
    and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	group by m.id, c.death_location_id, c.dob, death_date
	having cast(date_trunc(''month'', death_date) as date)  between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','dc43756b-ed64-4734-ba58-8fabfd8ced76'),
	 (142,58981,'2019-01-21 14:20:45.772',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','bd38e2fa-295a-45de-acfd-c2464d4249ab'),
	 (1511,74841,'2020-02-10 14:06:41.882',1,'2021-01-13 20:22:06.427965','role_id','select -1 as id, ''All'' as "name"
union
select id,name from notification_type_master 
where role_id = #role_id# and  id != 1
order by "name"',true,'ACTIVE','a08a9060-9b69-4935-8d92-898346feb19c'),
	 (1171,60512,'2019-05-31 14:36:24.798',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','e22ea540-dc6d-4de4-a28f-353cd5465d77');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (699,409,'2019-02-27 13:24:54.751',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','3286330e-9448-448e-a83d-0302fdc438ae'),
	 (1550,74841,'2020-03-29 13:22:32.962',1,'2021-01-13 20:22:06.427965','limit_offset,filter_by,location_id','with idsp_screening as (
	select
		cti.district_id as loc_id,
		name as member_det,
		is_cough,
		is_fever,
		is_respiratory_issue as breathlessness,
		case when is_travel and is_travel_from_other_country != true then true else false end as domestic_travel_history,
		case when is_travel_from_other_country = true then true else false end as international_travel_history,
        age,
        mobile_number as contactPersonMobileNo,
		is_sari as sari,
		travel_from,
		travel_to,
        u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>''
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as created,
		cti.address
		from covid_travellers_info cti
		inner join location_hierchy_closer_det lh on lh.child_id = cti.district_id
        left join  um_user u on u.id = cti.created_by
		where lh.parent_id = #location_id# and input_type = ''DR_TECHO'' 
		and (case when ''#filter_by#'' = ''Suggested Covid Test'' then cti.suggest_covid_test 
		when ''#filter_by#'' = ''SARI'' then cti.is_sari else false end)
		order by cti.member_id
	#limit_offset#
),
loc as (
	select distinct loc_id from idsp_screening
),
loc_det as (
	select loc.loc_id,  string_agg((case when ((l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No.",
idsp_screening.member_det as "Member Details",
loc_det.aoi as "Location",
idsp_screening.contactPersonMobileNo as "Contact Person MobileNo",
idsp_screening.age as "Age",
idsp_screening.address as "Address",
idsp_screening.is_cough as "Has Cough",
idsp_screening.is_fever as "Has Fever",
idsp_screening.breathlessness as "Has Breathlessness",
idsp_screening.domestic_travel_history as "Domestic TravelHistory",
idsp_screening.international_travel_history as "International TravelHistory",
idsp_screening.sari as "SARI",
idsp_screening.travel_from as "Travel Origin",
idsp_screening.travel_to as "Travel Destination",
idsp_screening.created as "Created BY"
from idsp_screening
inner join loc_det on idsp_screening.loc_id = loc_det.loc_id;',true,'ACTIVE','4ee65cda-8c43-4671-afea-87828e73bf5a'),
	 (1188,409,'2019-07-05 11:25:34.21',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#
),dates as (
select to_date(case when ''#financial_year#'' = ''null'' then null else concat(''04-01-'',substr(''#financial_year#'',1,4)) end,''MM-DD-YYYY'') from_date
,to_date(case when ''#financial_year#'' = ''null'' then null else concat(''04-01-'',substr(''#financial_year#'',6,10)) end,''MM-DD-YYYY'') to_date
),child_det as (
	select m.id, c.death_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m,dates
	where l.child_id = c.death_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.no_of_days_in_death between 0 and 365
	and c.death_date between dates.from_date and dates.to_date
	order by c.death_date
	#limit_offset#
), 
child_det_extra as (
	select member_id,
	case when values.value is null then death_detail.other_death_reason else values.value end as death_reason,
	case when death_detail.place_of_death = ''HOSP'' then ''Hostpital''
	     when lower(death_detail.place_of_death) = ''home'' then ''home''		
	     when death_detail.place_of_death = ''ON_THE_WAY'' then ''On the way''		
	end as 	place_of_death
	from rch_member_death_deatil death_detail
	inner join child_det cd on cd.id = death_detail.member_id
	left join listvalue_field_value_detail values on cast(values.id as text) = death_detail.death_reason
),
loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
child_det_extra.place_of_death as "Place of death",
child_det_extra.death_reason as "Death Reason",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
inner join child_det_extra  on child_det_extra.member_id = child_det.id
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','c790d484-aaa4-4f7a-be45-1eabdd8acee4'),
	 (1661,60512,'2020-06-29 12:07:25.134',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id','with prefered_language as(
	select case when prefered_language = ''EN'' then true else false end as is_english 
	from um_user
	where id = #loggedInUserId#
),location_detail as (
	select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1
),dates as (
	select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date
),follow_up_analytics as (
	select location_detail.child_id,
	sum(sam_follow_up_month_1) as sam_follow_up_month_1,
	sum(sam_follow_up_month_2) as sam_follow_up_month_2,
	sum(sam_follow_up_month_3) as sam_follow_up_month_3,
	sum(sam_follow_up_month_6) as sam_follow_up_month_6,
	sum(sam_follow_up_month_12) as sam_follow_up_month_12,
	sum(sam_follow_up_month_18) as sam_follow_up_month_18,
	sum(sam_follow_up_month_24) as sam_follow_up_month_24
	from location_detail
	inner join location_hierchy_closer_det on location_detail.child_id = location_hierchy_closer_det.parent_id
	inner join child_cmam_analytics_cure_location_wise_details on location_hierchy_closer_det.child_id = child_cmam_analytics_cure_location_wise_details.location_id
	inner join dates on child_cmam_analytics_cure_location_wise_details.month_year between dates.from_date and dates.to_date
	group by location_detail.child_id
),details as (
	select row_number() over() as sr_no,
	location_master.id as hidden_location_id,
	case when prefered_language.is_english and location_master.english_name is not null then location_master.english_name else location_master.name end as loc,
	coalesce(follow_up_analytics.sam_follow_up_month_1,0) as sam_follow_up_month_1,
	coalesce(follow_up_analytics.sam_follow_up_month_2,0) as sam_follow_up_month_2,
	coalesce(follow_up_analytics.sam_follow_up_month_3,0) as sam_follow_up_month_3,
	coalesce(follow_up_analytics.sam_follow_up_month_6,0) as sam_follow_up_month_6,
	coalesce(follow_up_analytics.sam_follow_up_month_12,0) as sam_follow_up_month_12,
	coalesce(follow_up_analytics.sam_follow_up_month_18,0) as sam_follow_up_month_18,
	coalesce(follow_up_analytics.sam_follow_up_month_24,0) as sam_follow_up_month_24
	from location_detail
	inner join location_master on location_master.id = location_detail.child_id
	left join follow_up_analytics on location_detail.child_id = follow_up_analytics.child_id
    cross join prefered_language
)
select details.loc as "Location",
details.hidden_location_id,
details.sam_follow_up_month_1 as "Follow Up for 1st Month",
details.sam_follow_up_month_2 as "Follow Up for 2nd Month",
details.sam_follow_up_month_3 as "Follow Up for 3rd Month",
details.sam_follow_up_month_6 as "Follow Up for 6th Month",
details.sam_follow_up_month_12 as "Follow Up for 12th Month",
details.sam_follow_up_month_18 as "Follow Up for 18th Month",
details.sam_follow_up_month_24 as "Follow Up for 24th Month"
from details
union all
select ''<b>Total<b>'',
#location_id#,
sum(details.sam_follow_up_month_1),
sum(details.sam_follow_up_month_2),
sum(details.sam_follow_up_month_3),
sum(details.sam_follow_up_month_6),
sum(details.sam_follow_up_month_12),
sum(details.sam_follow_up_month_18),
sum(details.sam_follow_up_month_24)
from details;',true,'ACTIVE','628fea82-cf3f-44bf-84d1-d5e13470c908'),
	 (1650,74840,'2020-06-29 11:18:33.148',1,'2021-01-13 20:22:06.427965','limit_offset,loggedInUserId,location_id','with user_lang as (    
	select prefered_language from um_user uu where id =  CAST(#loggedInUserId# AS INTEGER) 
),
parameters as (
    select child_id as loc_id,
    case when user_lang.prefered_language = ''EN'' then master.english_name
	else master.name
	end as location_name    
	from location_hierchy_closer_det lhc
	inner join location_master master on lhc.child_id = master.id
	inner join user_lang on true = true
	where 
	parent_id = CAST(#location_id# AS INTEGER) and depth = 1
    
)
,child_details as (
	
	select
	loc.parent_id as loc_id,
	count(1) filter (where child.age = 5) as five,
	count(1) filter (where child.age = 6) as six,
	count(1) filter (where child.age = 7) as seven,
	count(1) filter (where child.age = 7.5) as seven_and_half
	
	
	from zzz_child_weight_wise_analytics_5_to_7_5_year child inner join location_hierchy_closer_det loc
		on child.location_id = loc.child_id  
	where loc.parent_id in (select loc_id from parameters p)
	group by loc.parent_id
	order by loc.parent_id
	#limit_offset#
)
,final_det as (
	select
	p.loc_id as loc_id,
	location_name,
	c.five,
	c.six,
	c.seven,
	c.seven_and_half
	from parameters p left join child_details c on p.loc_id = c.loc_id

)
select
	ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
	loc_id as hidden_location_id,
	location_name as "Location",
	coalesce(five,0) as "5 KG",
	coalesce(six,0) as "6 KG",
	coalesce(seven,0) as "7 KG",
	coalesce(seven_and_half,0) as "7.5 KG"	
	from 
	final_det
       
        union all
	
	select
	null,
	#location_id# as hidden_location_id,
	''<b>Total</b>'',
	coalesce(sum(five),0),
	coalesce(sum(six),0),
	coalesce(sum(seven),0),
	coalesce(sum(seven_and_half),0)
	from 
	final_det',true,'ACTIVE','f8f8f1c0-33ae-4635-b2be-23693471a3bc'),
	 (60,1027,'2018-07-20 11:47:48.73',1,'2021-01-13 20:22:06.427965','user_id,location_id','select ROW_NUMBER() over() as "S No.",fam.family_id as "Family ID",
case when fam.contact_person_id is not null then mem.first_name || '' '' || mem.last_name else ''NA'' end as "Contact Person",
case when mem.mobile_number is not null then mem.mobile_number else ''NA'' end as "Contact No" 
from imt_family fam inner join location_hierchy_closer_det lhcd
on fam.location_id = lhcd.child_id 
left join imt_member mem on mem.id = fam.contact_person_id
where lhcd.parent_id in  (select child_id from location_hierchy_closer_det where parent_id = #location_id#
and child_id in (select loc_id from um_user_location where user_id = #user_id# and state = ''ACTIVE'')) and 
fam.state in (''com.argusoft.imtecho.family.state.verified'',''com.argusoft.imtecho.family.state.fhw.reverified'',''com.argusoft.imtecho.family.state.emri.verified.ok'',
				''com.argusoft.imtecho.family.state.mo.reverified'',''com.argusoft.imtecho.family.state.mo.fhw.reverified'',''com.argusoft.imtecho.family.state.emri.fhw.reverified'',
				''com.argusoft.imtecho.family.state.emri.fhw.reverified.dead'',
				''com.argusoft.imtecho.family.state.emri.fhw.reverified.verified'',''com.argusoft.imtecho.family.state.emri.verified.ok.dead'',''com.argusoft.imtecho.family.state.emri.verified.ok.archived''
				,''com.argusoft.imtecho.family.state.emri.verification.pool.dead'',''com.argusoft.imtecho.family.state.emri.verification.pool'',
				''com.argusoft.imtecho.family.state.emri.verification.pool.verified'',''com.argusoft.imtecho.family.state.emri.verified.ok.verified'')',true,'ACTIVE','8d6a5029-0429-43d0-ab39-a0ee8a99e78c'),
	 (1659,60512,'2020-06-29 12:00:40.593',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id','with prefered_language as(
	select case when prefered_language = ''EN'' then true else false end as is_english 
	from um_user
	where id = #loggedInUserId#
),location_detail as (
	select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1
),dates as (
	select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date
),analytics as (
	select location_detail.child_id,
	sum(cmam_directly_enrolled_boys) as cmam_directly_enrolled_boys,
	sum(cmam_directly_enrolled_girls) as cmam_directly_enrolled_girls,
	sum(fsam_enrolled_boys) as fsam_enrolled_boys,
	sum(fsam_enrolled_girls) as fsam_enrolled_girls,
	sum(less_than_3_sd_score_boys) as less_than_3_sd_score_boys,
	sum(less_than_3_sd_score_girls) as less_than_3_sd_score_girls,
	sum(less_than_11_5_muac_boys) as less_than_11_5_muac_boys,
	sum(less_than_11_5_muac_girls) as less_than_11_5_muac_girls,
	sum(both_boys) as both_boys,
	sum(both_girls) as both_girls,
	sum(mam_discharged_from_cmtc_boys) as mam_discharged_from_cmtc_boys,
	sum(mam_discharged_from_cmtc_girls) as mam_discharged_from_cmtc_girls,
	sum(discharged_boys) as discharged_boys,
	sum(discharged_girls) as discharged_girls,
	sum(cured_sd_score_boys) as cured_sd_score_boys,
	sum(cured_sd_score_girls) as cured_sd_score_girls,
	sum(cured_muac_boys) as cured_muac_boys,
	sum(cured_muac_girls) as cured_muac_girls,
	sum(cured_from_cmam_boys) as cured_from_cmam_boys,
	sum(cured_from_cmam_girls) as cured_from_cmam_girls,
	sum(cured_from_fsam_boys) as cured_from_fsam_boys,
	sum(cured_from_fsam_girls) as cured_from_fsam_girls
	from location_detail
	inner join location_hierchy_closer_det on location_detail.child_id = location_hierchy_closer_det.parent_id
	inner join child_cmam_analytics_location_wise_details on location_hierchy_closer_det.child_id = child_cmam_analytics_location_wise_details.location_id
	inner join dates on child_cmam_analytics_location_wise_details.month_year between dates.from_date and dates.to_date
	group by location_detail.child_id
),details as (
	select row_number() over() as sr_no,
	location_master.id as hidden_location_id,
	case when prefered_language.is_english and location_master.english_name is not null then location_master.english_name else location_master.name end as loc,
	coalesce(analytics.cmam_directly_enrolled_boys,0) as cmam_directly_enrolled_boys,
	coalesce(analytics.cmam_directly_enrolled_girls,0) as cmam_directly_enrolled_girls,
	coalesce(analytics.fsam_enrolled_boys,0) as fsam_enrolled_boys,
	coalesce(analytics.fsam_enrolled_girls,0) as fsam_enrolled_girls,
	coalesce(analytics.cmam_directly_enrolled_boys + analytics.fsam_enrolled_boys,0) as enrolled_total_boys,
	coalesce(analytics.cmam_directly_enrolled_girls + analytics.fsam_enrolled_girls,0) as enrolled_total_girls,
	coalesce(analytics.less_than_3_sd_score_boys,0) as less_than_3_sd_score_boys,
	coalesce(analytics.less_than_3_sd_score_girls,0) as less_than_3_sd_score_girls,
	coalesce(analytics.less_than_11_5_muac_boys,0) as less_than_11_5_muac_boys,
	coalesce(analytics.less_than_11_5_muac_girls,0) as less_than_11_5_muac_girls,
	coalesce(analytics.both_boys,0) as both_boys,
	coalesce(analytics.both_girls,0) as both_girls,
	coalesce(analytics.mam_discharged_from_cmtc_boys) as mam_discharged_from_cmtc_boys,
	coalesce(analytics.mam_discharged_from_cmtc_girls) as mam_discharged_from_cmtc_girls,
	coalesce(analytics.less_than_3_sd_score_boys + analytics.less_than_11_5_muac_boys + mam_discharged_from_cmtc_boys,0) as admission_criteria_total_boys,
	coalesce(analytics.less_than_3_sd_score_boys + analytics.less_than_11_5_muac_boys + mam_discharged_from_cmtc_girls,0) as admission_criteria_total_girls,
	coalesce(analytics.discharged_boys,0) as discharged_boys,
	coalesce(analytics.discharged_girls,0) as discharged_girls,
	coalesce(analytics.cured_sd_score_boys) as cured_sd_score_boys,
	coalesce(analytics.cured_sd_score_girls) as cured_sd_score_girls,
	coalesce(analytics.cured_muac_boys,0) as cured_muac_boys,
	coalesce(analytics.cured_muac_girls,0) as cured_muac_girls,
	coalesce(analytics.cured_from_cmam_boys,0) as cured_from_cmam_boys,
	coalesce(analytics.cured_from_cmam_girls,0) as cured_from_cmam_girls,
	coalesce(analytics.cured_from_fsam_boys,0) as cured_from_fsam_boys,
	coalesce(analytics.cured_from_fsam_girls,0) as cured_from_fsam_girls
	from location_detail
	inner join location_master on location_master.id = location_detail.child_id
	left join analytics on location_detail.child_id = analytics.child_id
    cross join prefered_language
)
select details.loc as "Location",
details.hidden_location_id,
details.cmam_directly_enrolled_boys as "Directly enrolled in CMAM (Boys)",
details.cmam_directly_enrolled_girls as "Directly enrolled in CMAM (Girls)",
details.fsam_enrolled_boys as "Enrolled after discharge from CMTC (Boys)",
details.fsam_enrolled_girls as "Enrolled after discharge from CMTC (Girls)",
details.enrolled_total_boys as "Total Enrolled (Boys)",
details.enrolled_total_girls as "Total Enrolled (Girls)",
details.less_than_3_sd_score_boys as "Less than -3SD (Boys)",
details.less_than_3_sd_score_girls as "Less than -3SD (Girls)",
details.less_than_11_5_muac_boys as "Less than 11.5 MUAC (Boys)",
details.less_than_11_5_muac_girls as "Less than 11.5 MUAC (Girls)",
details.both_boys as "Both (Boys)",
details.both_girls as "Both (Girls)",
details.mam_discharged_from_cmtc_boys as "MAM discharged from CMTC (Boys)",
details.mam_discharged_from_cmtc_girls as "MAM discharged from CMTC (Girls)",
details.admission_criteria_total_boys as "Admission Criteria Total (Boys)",
details.admission_criteria_total_girls as "Admission Criteria Total (Girls)",
details.discharged_boys as "Discharged Children (Boys)",
details.discharged_girls as "Discharged Children (Girls)",
	case when (details.discharged_boys + details.discharged_girls) = 0 or (details.discharged_boys + details.discharged_girls) is null or (details.enrolled_total_boys + details.enrolled_total_girls) = 0 or (details.enrolled_total_boys + details.enrolled_total_girls) is null then 0 else
	round((details.discharged_boys + details.discharged_girls) * 100.0/(details.enrolled_total_boys + details.enrolled_total_girls)) end as "percent_col_Discharged",
details.cured_sd_score_boys as "SD Score >= SD2 (Boys)",
details.cured_sd_score_girls as "SD Score >= SD2 (Girls)",
details.cured_muac_boys as "MUAC > 12.5 (Boys)",
details.cured_muac_girls as "MUAC > 12.5 (Girls)",
details.cured_from_cmam_boys as "CMAM (Boys)",
details.cured_from_cmam_girls as "CMAM (Girls)",
details.cured_from_fsam_boys as "Referred from CMTC (Boys)",
details.cured_from_fsam_girls as "Referred from CMTC (Girls)"
from details
union all
select ''<b>Total<b>'',
#location_id#,
sum(details.cmam_directly_enrolled_boys),
sum(details.cmam_directly_enrolled_girls),
sum(details.fsam_enrolled_boys),
sum(details.fsam_enrolled_girls),
sum(details.enrolled_total_boys),
sum(details.enrolled_total_girls),
sum(details.less_than_3_sd_score_boys),
sum(details.less_than_3_sd_score_girls),
sum(details.less_than_11_5_muac_boys),
sum(details.less_than_11_5_muac_girls),
sum(details.both_boys),
sum(details.both_girls),
sum(details.mam_discharged_from_cmtc_boys),
sum(details.mam_discharged_from_cmtc_girls),
sum(details.admission_criteria_total_boys),
sum(details.admission_criteria_total_girls),
sum(details.discharged_boys),
sum(details.discharged_girls),
	case when sum(details.discharged_boys + details.discharged_girls) = 0 or sum(details.discharged_boys + details.discharged_girls) is null or sum(details.enrolled_total_boys + details.enrolled_total_girls) = 0 or sum(details.enrolled_total_boys + details.enrolled_total_girls) is null then 0 else
	round(sum(details.discharged_boys + details.discharged_girls) * 100.0/sum(details.enrolled_total_boys + details.enrolled_total_girls)) end,
sum(details.cured_sd_score_boys),
sum(details.cured_sd_score_girls),
sum(details.cured_muac_boys),
sum(details.cured_muac_girls),
sum(details.cured_from_cmam_boys),
sum(details.cured_from_cmam_girls),
sum(details.cured_from_fsam_boys),
sum(details.cured_from_fsam_girls)
from details;',true,'ACTIVE','022858af-16ba-4fa0-9c59-22e94edd30ac'),
	 (22,1027,'2018-05-14 17:06:38.978',1,'2021-01-13 20:22:06.427965','location_id','select case when lm.name is null then null else row_number() over () end as "Sr. No",case when lm.name is null then ''<b>Total</b>'' else lm.name end as "Location",
case when t."No of Families" is null then 0 else t."No of Families" end,case when t."No of Members" is null then 0 else t."No of Members" end,
case when t."Members Alive" is null then 0 else t."Members Alive" end,case when t."No of Males" is null then 0 else t."No of Males" end,
case when t."No of Females" is null then 0 else t."No of Females" end,case when t."Women(15 to 49 Years)" is null then 0 else t."Women(15 to 49 Years)" end,
case when t."Children(0 to 5 Years)" is null then 0 else t."Children(0 to 5 Years)" end,
case when t."Adolescents(10-19 Years)" is null then 0 else t."Adolescents(10-19 Years)" end
from
(select coalesce(r1.parent_id\:\:TEXT,''<b>Total</b>'') as "Location",sum(r1.total_family) as "No of Families",sum(r1.total_members) as "No of Members",
sum(r1.total_members) as "Members Alive",sum(r1.total_male) as "No of Males",sum(r1.total_female) as "No of Females",
sum(r1.total_women) as "Women(15 to 49 Years)",sum(r1.total_children) as "Children(0 to 5 Years)",sum(r1.total_adolescents) as "Adolescents(10-19 Years)"
from 
(select * from location_hierchy_closer_det lhcd left join location_wise_analytics lwa 
on lwa.loc_id = lhcd.child_id 	
where lhcd.parent_id in (select child_id from location_hierchy_closer_det where parent_id = (#location_id#) and depth=1)) r1
group by rollup(r1.parent_id)) t
left join location_master lm on t."Location" = lm.id\:\:text',true,'ACTIVE','9e77f03e-2557-42df-92bc-62e3980aa8d3'),
	 (726,63746,'2019-02-28 13:03:37.752',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #location_id#',true,'ACTIVE','7e5ce32a-786d-4dcc-9d61-460b684e8159'),
	 (19,1027,'2018-05-14 17:06:10.529',1,'2021-01-13 20:22:06.427965','location_id','select row_number() over () as "Sr. No",coalesce(lm.name,''<b>Total</b>'') as "Location",
case when sum(t.r11_15_49) is null then 0 else sum(t.r11_15_49) end  as "No of 15-49 yrs women in FHS",
case when sum(t.r11_migrated) is null then 0 else sum(t.r11_migrated) end as "No of Women Migrated",
case when ROUND((100.0 * sum(t.r11_migrated))/sum(t.r11_15_49), 2) is null then 0 else ROUND((100.0 * sum(t.r11_migrated))/sum(t.r11_15_49), 2) end as "%",
case when sum(t.r11_dead) is null then 0 else sum(t.r11_dead) end as "Death",
case when ROUND((100.0 * sum(t.r11_dead))/sum(t.r11_15_49), 2) is null then 0 else ROUND((100.0 * sum(t.r11_dead))/sum(t.r11_15_49), 2) end as "%  ", 
case when sum(t.r11_eligible_couple) is null then 0 else sum(t.r11_eligible_couple) end as "Eligible Couple",
case when ROUND((100.0 * sum(t.r11_eligible_couple))/sum(t.r11_15_49), 2) is null then 0 else ROUND((100.0 * sum(t.r11_eligible_couple))/sum(t.r11_15_49), 2) end as "% "
from 
(select lwa.loc_id,lwa.r11_15_49,lwa.r11_migrated ,lwa.r11_dead,lwa.r11_eligible_couple
from
location_wise_analytics lwa 
where lwa.loc_id in (select child_id from location_hierchy_closer_det where parent_id = (#location_id#) and depth=1)
) t
inner join (select id,name from location_master) lm on lm.id = t.loc_id
group by rollup(lm.name)',true,'ACTIVE','272a7f7b-2ad7-461c-bffe-ec9dcd84cb59');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (17,1027,'2018-05-14 17:05:53.67',1,'2021-01-13 20:22:06.427965','location_id','select  row_number() over () as "Sr. No",coalesce(lm.name,''<b>Total</b>'') as "Location",
sum(lwa.total_family) as "Total families",sum(lwa.new_fam) as "New Families added",ROUND((100.0 * sum(lwa.new_fam))/sum(lwa.total_family), 2) as "%",
sum(lwa.deleted_fam) as "Families deleted",ROUND((100.0 * sum(lwa.deleted_fam))/sum(lwa.total_family), 2) as "% ",
sum(lwa.total_members) as "Total Members",sum(lwa.new_mem) as "New Members added",ROUND((100.0 * sum(lwa.new_mem))/sum(lwa.total_members), 2) as "%  ",
sum(lwa.deleted_mem) as "Deleted Members",ROUND((100.0 * sum(lwa.deleted_mem))/sum(lwa.total_members), 2) as "%    "
from location_wise_analytics lwa 
inner join location_master lm on lm.id = lwa.loc_id
where lwa.loc_id in (select child_id from location_hierchy_closer_det where parent_id = (#location_id#) and depth=1)
group by rollup(lm.name)',true,'ACTIVE','fa8953ee-391c-416b-a353-9ad68e847518'),
	 (18,1027,'2018-05-14 17:06:01.062',1,'2021-01-13 20:22:06.427965','location_id','select row_number() over () as "Sr. No",t."Location",t.t1 "Total Families",t.t2 as "New Families Added",
ROUND((100.0 * t.t2)/t.t1, 2) as "%   ",t.t3 as "Families Deleted",ROUND((100.0 * t.t3)/t.t1, 2) as "%",
t.t4 as "Total Members",t.t5 as "New Members Added",ROUND((100.0 * t.t5)/t.t4, 2) as "% ",t.t6 as "Memberes Deleted",
ROUND((100.0 * t.t6)/t.t4, 2) as "%  "
from
(select coalesce(lm.name,''<b>Total</b>'') as "Location",count(distinct fam.family_id) as "t1",
sum(case when fam.state = ''com.argusoft.imtecho.family.state.new'' then 1 else 0 end) as "t2",
sum(case when fam.state = ''com.argusoft.imtecho.family.state.archived'' then 1 else 0 end) as "t3",
count(*) as "t4",
sum(case when mem.state = ''com.argusoft.imtecho.member.state.new'' then 1 else 0 end) as "t5",
sum(case when mem.state = ''com.argusoft.imtecho.member.state.archived'' then 1 else 0 end) as "t6"
from imt_member mem,imt_family fam,location_hierchy_closer_det lcd,location_master lm
where mem.family_id = fam.family_id and fam.location_id = lcd.child_id 
and lcd.parent_id in (select child_id from location_hierchy_closer_det where parent_id = (#location_id#) and depth=1)
and lm.id = lcd.parent_id
group by rollup(lm.name)) t',true,'ACTIVE','17dc3f1f-b5ca-4b47-838d-5f079bf9f747'),
	 (1231,409,'2019-07-24 10:16:53.387',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Rota virus 1 (Immunization Services Provided to Children with Date of Birth)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.is_valid_for_tracking_report = true
	and c.rota_virus_1 is not null
	and c.rota_virus_1 >= ''07-01-2019''
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','16436d12-318e-4d54-adff-41121c78c914'),
	 (749,58981,'2019-03-01 19:41:41.409',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','bac008f4-5848-4249-be28-a6ea0b0b032c'),
	 (63,1027,'2018-07-20 11:52:21.312',1,'2021-01-13 20:22:06.427965','user_id,location_id','select ROW_NUMBER() over() as "S No.",fam.family_id as "Family ID",
case when fam.contact_person_id is not null then mem.first_name || '' '' || mem.last_name else ''NA'' end as "Contact Person",
case when mem.mobile_number is not null then mem.mobile_number else ''NA'' end as "Contact No" 
from imt_family fam inner join location_hierchy_closer_det lhcd
on fam.location_id = lhcd.child_id 
left join imt_member mem on mem.id = fam.contact_person_id
where lhcd.parent_id in  (select child_id from location_hierchy_closer_det where parent_id = #location_id#
and child_id in (select loc_id from um_user_location where user_id = #user_id# and state = ''ACTIVE'')) and 
fam.state in (''com.argusoft.imtecho.family.state.verified'',''com.argusoft.imtecho.family.state.fhw.reverified'',''com.argusoft.imtecho.family.state.emri.verified.ok'',
				''com.argusoft.imtecho.family.state.mo.reverified'',''com.argusoft.imtecho.family.state.mo.fhw.reverified'',''com.argusoft.imtecho.family.state.emri.fhw.reverified'',
				''com.argusoft.imtecho.family.state.emri.fhw.reverified.dead'',
				''com.argusoft.imtecho.family.state.emri.fhw.reverified.verified'',''com.argusoft.imtecho.family.state.emri.verified.ok.dead'',''com.argusoft.imtecho.family.state.emri.verified.ok.archived''
				,''com.argusoft.imtecho.family.state.emri.verification.pool.dead'',''com.argusoft.imtecho.family.state.emri.verification.pool'',
				''com.argusoft.imtecho.family.state.emri.verification.pool.verified'',''com.argusoft.imtecho.family.state.emri.verified.ok.verified'',
				''com.argusoft.imtecho.family.state.new'',''com.argusoft.imtecho.family.state.new.fhsr.verified'',''com.argusoft.imtecho.family.state.new.fhw.reverified'',''com.argusoft.imtecho.family.state.new.mo.verified'',''com.argusoft.imtecho.family.state.new.mo.fhw.reverified'')',true,'ACTIVE','bb8586f6-a888-4918-b720-be635bb7e871'),
	 (58,1027,'2018-07-20 11:45:21.149',1,'2021-01-13 20:22:06.427965','user_id,location_id','select ROW_NUMBER() over() as "S No.",fam.family_id as "Family ID",
case when fam.contact_person_id is not null then mem.first_name || '' '' || mem.last_name else ''NA'' end as "Contact Person",
case when mem.mobile_number is not null then mem.mobile_number else ''NA'' end as "Contact No" 
from imt_family fam inner join location_hierchy_closer_det lhcd
on fam.location_id = lhcd.child_id 
left join imt_member mem on mem.id = fam.contact_person_id
where lhcd.parent_id in  (select child_id from location_hierchy_closer_det where parent_id = #location_id#
and child_id in (select loc_id from um_user_location where user_id = #user_id# and state = ''ACTIVE'')) and fam.created_by is null',true,'ACTIVE','b99f1412-49d3-4e5f-9585-cc8aff7f3125'),
	 (491,1,'2019-02-14 15:22:28.206',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #location_id#',true,'ACTIVE','b842ae60-a88f-491c-b04a-7db9b02d289c'),
	 (1239,409,'2019-07-24 10:22:56.635',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Rota virus 3 (Immunization Services Provided to Children with Date of Birth)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.rota_virus_3 is not null
	and c.is_valid_for_tracking_report = true
	and c.rota_virus_3 >= ''07-01-2019''
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','f87a3609-1f02-417e-a064-8a25ab3bb087'),
	 (742,58981,'2019-03-01 19:30:54.261',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','9f095d0e-3f48-484b-adc3-6c81002016c1'),
	 (114,58981,'2019-01-05 19:09:12.675',1,'2021-01-13 20:22:06.427965',NULL,'select row_number() over() as "Sr. no", * from (
	select distinct dl.name "Name", string_agg(l.name,''>'' order by lhcd.depth desc) as "Hierarchy", 
	case when dl.has_active_user = true then ''Yes'' else ''No'' end as "Has Active Users", 
	case when dl.has_family = true then ''Yes'' else ''No'' end as "Has Families", 
	case when dl.has_active_user = false and dl.has_family = false then ''Yes'' else ''No'' end as "Parent Child Location Issue"
	from deleted_locations dl 
	inner join location_hierchy_closer_det lhcd on lhcd.child_id = dl.location_id
	inner join location_master l on l.id = lhcd.parent_id
	where deleted_on is null 
	group by dl.id, dl.location_id, dl.name, dl.has_active_user, dl.has_family 
	order by "Hierarchy"
) as t',true,'ACTIVE','e0a20092-10ee-4a9a-be22-fd01033bb535');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (372,1,'2019-02-13 11:48:57.207',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','5bb4f2c8-9622-41aa-be13-b8e1e498f35e'),
	 (50,1027,'2018-05-28 12:21:21.674',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#)
select row_number() over () as "Sr. No",coalesce(case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name else lm.name end,''<b>Total</b>'') as "Location",sum(lwa.total_family) "Total Families",
sum(lwa.new_fam) as "New Families Added",ROUND((100.0 * sum(lwa.new_fam))/sum(lwa.total_family), 2) as "%   ",
sum(lwa.deleted_fam) as "Families Deleted",ROUND((100.0 * sum(lwa.deleted_fam))/sum(lwa.total_family), 2) as "%",
sum(lwa.total_members) as "Total Members",sum(lwa.new_mem) as "New Members Added",ROUND((100.0 * sum(lwa.new_mem))/sum(lwa.total_members), 2) as "% ",
sum(lwa.deleted_mem) as "Memberes Deleted",ROUND((100.0 * sum(lwa.deleted_mem))/sum(lwa.total_members), 2) as "%  "
from location_hierchy_closer_det lhcd,location_wise_analytics lwa,location_master lm,prefered_language
where lwa.loc_id = lhcd.child_id  and lm.id = lhcd.parent_id 
and lhcd.parent_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth=1)
group by rollup((lm.name,lm.english_name,prefered_language.is_enlish))',true,'ACTIVE','88d9039e-0fb6-4a00-a5a5-ef6d2ace126b'),
	 (740,58981,'2019-03-01 19:28:06.401',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id','--Early ANC (Service provide to pregnant women with lmp)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_month_year,
to_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') as to_month_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
member_det as (
	select r.member_id, r.native_location_id as loc_id,	
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p
	where r.native_location_id  = l.child_id 
	and l.parent_id = p.location_id
	and early_anc = true
	and r.lmp_month_year between p.from_month_year and p.to_month_year
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in ( select distinct demographic_type from location_demographic_type_master 
	where demographic_group = p.demographic_group)) 
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id, 
        string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','e00281ee-a362-4eca-8615-208979531dd4'),
	 (785,58981,'2019-03-06 15:31:20.293',1,'2021-01-13 20:22:06.427965','limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id','--4 ANC (Maternal Health Services provided to the mother registered during the year)
with parameters as(
select CAST(#location_id# AS INTEGER) as location_id,
CAST(''#financial_year#'' AS TEXT) as financial_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
 member_det as (
	select r.member_id, r.tracking_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.anc4, ''DD/MM/YYYY'') as anc4
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p
	where r.tracking_location_id  = l.child_id 
	and anc4 is not null
	and l.parent_id = p.location_id
	and r.reg_service_financial_year = p.financial_year
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
	and r.is_valid_for_tracking_report
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det)  loc, location_hierchy_closer_det lhcd, location_master l2, parameters p
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, concat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
member_det.anc4 as "ANC4 Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','678a67ef-6988-49f6-af39-6cff7379d98e'),
	 (459,1,'2019-02-14 12:59:49.509',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Fully Immunised Children before 11 months(Immunization Services Provided to Children with Date of Birth)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.member_id is not null
	and c.death_date is null
    and c.is_valid_for_tracking_report = true
	and c.fully_immunization_in_number_of_month is not null 
	and c.fully_immunization_in_number_of_month <= 11
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','d5d663a8-757a-46ab-846b-2ab0b2383930'),
	 (1512,74841,'2020-02-10 14:06:41.896',1,'2021-01-13 20:22:06.427965','notification_type,from_date,to_date,role_id,location_id','WITH loc_det AS (
    SELECT
        child_id as id
    FROM
        location_hierchy_closer_det
    WHERE
        parent_id = #location_id#
        AND "depth" = 1
),
dates AS (
    SELECT
        to_date(
            CASE WHEN ''#from_date#'' = ''null'' THEN
                NULL
            ELSE
                ''#from_date#''
            END, ''MM-DD-YYYY'') AS from_date,
        to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date
)
,location_wise_task_complition_rate AS (
    SELECT
        lh.parent_id,
        sum(ul.missed_count) as missed_count,
        sum(ul.pending_count) as pending_count,
        sum(ul.on_completed_count) as on_completed_count,
        sum(ul.after_due_completed_count) as after_due_completed_count,
        sum(ul.due_pending) as due_pending
    FROM
        location_wise_task_complition_rate_analysis ul,
        dates,location_hierchy_closer_det lh
    WHERE
        ul.month_year BETWEEN dates.from_date AND dates.to_date
        AND lh.parent_id IN (select id from loc_det)
        and lh.child_id = ul.location_id		
        and (
			case 
			when #notification_type# = ''-1'' then ul.notification_type_id in (select id from notification_type_master nt where role_id = #role_id#) 
			else ul.notification_type_id = #notification_type# end)
        GROUP BY
            lh.parent_id
)
SELECT
    lm.id as "hidden_location_id",
    lm.english_name AS "Location",
    COALESCE((coalesce(uwc.on_completed_count, 0) + coalesce(uwc.after_due_completed_count, 0) + coalesce(uwc.pending_count, 0) + coalesce(uwc.due_pending, 0) + coalesce(uwc.missed_count, 0)), 0) as "Total task",
    COALESCE(uwc.missed_count, 0) as "Missed",
    COALESCE(round(((uwc.missed_count * 100.0)/nullif((coalesce(uwc.missed_count, 0) + coalesce(uwc.on_completed_count, 0) + coalesce(uwc.after_due_completed_count, 0)), 0)), 2), 0) as "percent_col_1",
    COALESCE(uwc.on_completed_count, 0) as "On time",
    COALESCE(round(((uwc.on_completed_count * 100.0) /nullif(coalesce(uwc.missed_count, 0) + coalesce(uwc.on_completed_count, 0) + coalesce(uwc.after_due_completed_count, 0), 0)), 2), 0) as "percent_col_2",
    COALESCE(uwc.after_due_completed_count, 0) as "After Due",
    COALESCE(round(((uwc.after_due_completed_count * 100.0) /nullif(coalesce(uwc.missed_count, 0) + coalesce(uwc.on_completed_count, 0) + coalesce(uwc.after_due_completed_count, 0), 0)), 2), 0) as "percent_col_3",
    COALESCE(coalesce(uwc.on_completed_count, 0) + coalesce(uwc.after_due_completed_count, 0), 0) as "Total ",
    COALESCE(round((((coalesce(uwc.on_completed_count, 0) + coalesce(uwc.after_due_completed_count, 0)) * 100.0) /nullif((coalesce(uwc.on_completed_count, 0) + coalesce(uwc.after_due_completed_count, 0) + coalesce(uwc.missed_count, 0)), 0)), 2), 0) as "percent_col_4",
    COALESCE(uwc.pending_count, 0) as "On time pending",
    COALESCE(uwc.due_pending, 0) as "Due pending",
    COALESCE(coalesce(uwc.pending_count, 0) + coalesce(uwc.due_pending, 0), 0) as "Total pending",
    COALESCE(round((((coalesce(uwc.pending_count, 0) + coalesce(uwc.due_pending, 0)) * 100.0) / NULLIF((coalesce(uwc.on_completed_count, 0) + coalesce(uwc.after_due_completed_count, 0) + coalesce(uwc.pending_count, 0) + coalesce(uwc.due_pending, 0) + coalesce(uwc.missed_count, 0)), 0)), 2), 0) as "percent_col_5"
FROM
    location_wise_task_complition_rate uwc
    inner join location_master lm   
    on lm.id = uwc.parent_id
union all
select
	null,
		''<b>Total</b>'',
		coalesce(SUM(coalesce(uwc.on_completed_count, 0) + coalesce(uwc.after_due_completed_count, 0) + coalesce(uwc.pending_count, 0) + coalesce(uwc.due_pending, 0) + coalesce(uwc.missed_count, 0)), 0),
        coalesce(SUM(uwc.missed_count), 0),
        COALESCE(round(((SUM(uwc.missed_count) * 100.0)/nullif((coalesce(SUM(uwc.missed_count), 0) + coalesce(SUM(uwc.on_completed_count), 0) + coalesce(SUM(uwc.after_due_completed_count), 0)), 0)), 2), 0),
        coalesce(SUM(uwc.on_completed_count), 0),
        COALESCE(round(((SUM(uwc.on_completed_count) * 100.0)/nullif((coalesce(SUM(uwc.missed_count), 0) + coalesce(SUM(uwc.on_completed_count), 0) + coalesce(SUM(uwc.after_due_completed_count), 0)), 0)), 2), 0),
        coalesce(SUM(uwc.after_due_completed_count), 0),
        COALESCE(round(((sum(uwc.after_due_completed_count) * 100.0) /nullif((coalesce(SUM(uwc.missed_count), 0) + coalesce(SUM(uwc.on_completed_count), 0) + coalesce(SUM(uwc.after_due_completed_count), 0)), 0)), 2), 0),
        coalesce(sum(uwc.on_completed_count) + sum(uwc.after_due_completed_count), 0),
        COALESCE(round((((sum(uwc.on_completed_count) + sum(uwc.after_due_completed_count)) * 100.0) /nullif((sum(uwc.on_completed_count) + sum(uwc.after_due_completed_count) + 
        sum(uwc.missed_count)), 0)), 2), 0),
        coalesce(SUM(uwc.pending_count), 0),
        coalesce(SUM(uwc.due_pending), 0),
        coalesce(SUM(uwc.due_pending) + SUM(uwc.pending_count), 0),
COALESCE(round((((sum(uwc.pending_count) + sum(uwc.due_pending)) * 100.0) / NULLIF((coalesce(sum(uwc.on_completed_count), 0) + coalesce(sum(uwc.after_due_completed_count), 0) + coalesce(sum(uwc.pending_count), 0) + coalesce(sum(uwc.due_pending), 0) + coalesce(sum(uwc.missed_count), 0)), 0)), 2), 0)

	from location_wise_task_complition_rate uwc
        inner join location_master lm
        on lm.id = uwc.parent_id',true,'ACTIVE','865d900e-58ba-4794-93cb-2286283aa707'),
	 (774,58981,'2019-03-06 15:04:37.663',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','becc9445-0fe6-4186-b623-30e381a745c1'),
	 (368,1,'2019-02-13 11:46:52.971',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','3b743aae-b4d5-4b2b-9638-1a2e35fec1b0'),
	 (369,1,'2019-02-13 11:46:52.984',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','882d5b86-f184-4615-a4d0-77c688ab566c'),
	 (370,1,'2019-02-13 11:46:52.986',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','8be5c64e-d7a5-43c6-89e2-065e79daa9dc');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (584,1,'2019-02-18 13:34:29.769',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','f38b3cbb-2d25-42de-b706-a521889714dd'),
	 (694,409,'2019-02-27 13:24:32.294',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','c0e74321-c128-4267-9dde-22b922f193b5'),
	 (423,1,'2019-02-14 00:25:46.63',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Fully Immunized Children after 11 months(Immunization Services Provided to Children with Date of Birth)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.member_id is not null
	and c.death_date is null
    and c.is_valid_for_tracking_report = true
	and c.fully_immunization_in_number_of_month is not null 
	and c.fully_immunization_in_number_of_month > 11
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','645b71b4-f78a-4902-9d95-7dda43b136df'),
	 (1360,69973,'2019-08-20 18:09:05.136',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','3edfca96-6e15-4b57-b9eb-382511c2d5ae'),
	 (371,1,'2019-02-13 11:46:53',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Hep B Given(Immunization Services Provided to Children with Date of Birth)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.hep_b is not null
	and c.is_valid_for_tracking_report = true
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','f2aceb1c-ca51-4a06-bf04-c5cf1ca5c9df'),
	 (189,409,'2019-01-23 19:37:37.95',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','9482d530-6b55-4262-ae03-9a9e26e1aa7f'),
	 (1436,409,'2019-11-22 17:23:15.076',1,'2021-01-13 20:22:06.427965','from_month_year,to_month_year,loggedInUserId,location_id','-----------Maternal Service Delivery Report----------
with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#),
ldp as(
  select location_id,del_reg_still_live_birth as del_reg,pnc1,pnc2,pnc3,pnc4,ifa_180_after_delivery,calcium_360_after_delivery,full_pnc
  from rch_delivery_date_base_location_wise_data_point,location_hierchy_closer_det
  where rch_delivery_date_base_location_wise_data_point.location_id = location_hierchy_closer_det.child_id and location_hierchy_closer_det.parent_id = #location_id#
  and month_year between (case when #from_month_year# is null then ''01/01/1970'' else to_date(''#from_month_year#'',''MM/DD/YYYY'') end) 
  	and (case when #to_month_year# is null then ''01/01/1970'' else to_date(''#to_month_year#'',''MM/DD/YYYY'') end)
 ), w as (
    select
    location_hierchy_closer_det.parent_id as loc_id,
	coalesce(sum(del_reg),0) as del_reg,
    coalesce(sum(pnc1),0) as pnc1,
    coalesce(sum(pnc2),0) as pnc2,
    coalesce(sum(pnc3),0) as pnc3,
	coalesce(sum(pnc4),0) as pnc4,
    coalesce(sum(ifa_180_after_delivery),0) as ifa_180_after_delivery,
    coalesce(sum(calcium_360_after_delivery),0) as calcium_360_after_delivery,
    coalesce(sum(full_pnc),0) as full_pnc
    from (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth=1)as t 
inner join location_hierchy_closer_det on t.child_id = location_hierchy_closer_det.parent_id 
inner join ldp on ldp.location_id = location_hierchy_closer_det.child_id
group by location_hierchy_closer_det.parent_id 
),s as (
select case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name else lm.name end as "Location Name",
	lm.id as hidden_location_id,
	coalesce(del_reg,0) as "Total Delivery Registered",
	coalesce(pnc1,0) as "PNC 1",
	round(coalesce(case when del_reg = 0 then 0 else pnc1*100.00/del_reg end,0),2)  as "percent_col_pnc1",
    coalesce(pnc2,0) as "PNC 2",
    round(coalesce(case when del_reg = 0 then 0 else pnc2*100.00/del_reg end,0),2)  as "percent_col_pnc2",
    coalesce(pnc3,0) as "PNC 3",
    round(coalesce(case when del_reg = 0 then 0 else pnc3*100.00/del_reg end,0),2)  as "percent_col_pnc3",
    coalesce(pnc4,0) as "PNC 4",
    round(coalesce(case when del_reg = 0 then 0 else pnc4*100.00/del_reg end,0),2)  as "percent_col_pnc4",
    coalesce(ifa_180_after_delivery,0) as "180 IFA",
    round(coalesce(case when del_reg = 0 then 0 else ifa_180_after_delivery*100.00/del_reg end,0),2)  as "percent_col_ifa_180_after_delivery",
    coalesce(calcium_360_after_delivery,0) as "360 Calcium",
	round(coalesce(case when del_reg = 0 then 0 else calcium_360_after_delivery*100.00/del_reg end,0),2)  as "percent_col_calcium_360_after_delivery",
    coalesce(full_pnc,0) as "Full PNC",
	round(coalesce(case when del_reg = 0 then 0 else full_pnc*100.00/del_reg end,0),2)  as "percent_col_full_pnc"
    
from (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth=1) as t
inner join location_master lm on lm.id = t.child_id
left join w on w.loc_id = lm.id
cross join prefered_language
order by lm.name
)
select row_number() over() as "Sr no.", s.* from s
union all
SELECT
	NULL,
    ''<b>Total<b>'',
    #location_id#,
coalesce(sum("Total Delivery Registered"),0),
coalesce(sum("PNC 1"),0),
round(coalesce(case when sum("Total Delivery Registered") = 0 then 0 else sum("PNC 1")*100.00/sum("Total Delivery Registered") end,0),2),
coalesce(sum("PNC 2"),0),
round(coalesce(case when sum("Total Delivery Registered") = 0 then 0 else sum("PNC 2")*100.00/sum("Total Delivery Registered") end,0),2),
coalesce(sum("PNC 3"),0),
round(coalesce(case when sum("Total Delivery Registered") = 0 then 0 else sum("PNC 3")*100.00/sum("Total Delivery Registered") end,0),2),
coalesce(sum("PNC 4"),0),
round(coalesce(case when sum("Total Delivery Registered") = 0 then 0 else sum("PNC 4")*100.00/sum("Total Delivery Registered") end,0),2),
coalesce(sum("180 IFA"),0),
round(coalesce(case when sum("Total Delivery Registered") = 0 then 0 else sum("180 IFA")*100.00/sum("Total Delivery Registered") end,0),2),
coalesce(sum("360 Calcium"),0),
round(coalesce(case when sum("Total Delivery Registered") = 0 then 0 else sum("360 Calcium")*100.00/sum("Total Delivery Registered") end,0),2),
coalesce(sum("Full PNC"),0),
round(coalesce(case when sum("Total Delivery Registered") = 0 then 0 else sum("Full PNC")*100.00/sum("Total Delivery Registered") end,0),2)
from s',true,'ACTIVE','13f29df9-9f33-4880-9a75-b234e82d98dd'),
	 (227,57698,'2019-02-04 13:11:42.62',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','2228c4ca-6ae0-4492-8583-732b05ed983b'),
	 (1329,60512,'2019-08-19 16:52:34.682',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','d1228d39-4e36-4064-8a88-0fc240c77044'),
	 (126,58981,'2019-01-09 19:52:49.313',1,'2021-01-13 20:22:06.427965',NULL,'select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as year from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by year desc;',true,'ACTIVE','59ea15f3-426f-4f4c-97c5-ba3c48a2274c');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1407,66522,'2019-08-28 16:22:06.116',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','d71727c7-76e5-4f72-9e3e-ec099fa592c5'),
	 (1355,69973,'2019-08-20 17:45:15.597',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
select
to_date(case when ''#from_date#'' =''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when ''#to_date#'' =''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') as to_date
),
migration_master_det as (
select mm.* from (select * from migration_master, dates) mm 
inner join location_hierchy_closer_det depth_child on depth_child.child_id=mm.reported_location_id 
inner join location_hierchy_closer_det lhcd on (lhcd.child_id=depth_child.parent_id)
 where (case when (mm.from_date is not null and mm.to_date is not null) then
reported_on between mm.from_date and mm.to_date else 1=1 end) and mm.state not in (''DUPLICATE'',''REVERTED'')
and mm.type=''OUT'' and mm.state in (''ROLLBACK'', ''NO_RESPONSE'') and lhcd.parent_id=#location_id# and lhcd.depth=1  #limit_offset#
),
final_Query as (
select concat(im.first_name,'' '', im.middle_name,'' '', im.last_name)|| case when im.unique_health_id is not null then '' (''|| im.unique_health_id||'')'' end
as member_name, concat(uu.first_name,'' '', uu.middle_name,'' '', uu.last_name)|| case when uu.contact_number is not null then '' (''|| uu.contact_number||'')'' end as reported_by, get_location_hierarchy(mm.location_migrated_from) as from_name, get_location_hierarchy(mm.location_migrated_to) as to_name, to_char(mm.reported_on,''DD/MM/YYYY'') as reported_on, 
/*, mm.family_migrated_from, mm.family_migrated_to, mm.state*/
 concat(cnf.first_name,'' '', cnf.middle_name,'' '', cnf.last_name) as confirmed_by, to_char(mm.confirmed_on,''DD/MM/YYYY'') as confirmed_on
from migration_master_det mm
inner join um_user uu on uu.id=mm.reported_by
left join um_user cnf on cnf.id=mm.confirmed_by
left join imt_member im on im.id=mm.member_id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
fq.member_name as "Member Name",
fq.reported_by as "Reported By",
fq.reported_on as "Reported On",
fq.from_name as "Migrated From",
fq.to_name as "Migrated To",
fq.confirmed_on as "Confirmed On",
fq.confirmed_by as "Confirmed By"
/*
,fq.state as "Migration Status",
fq.family_migrated_from as "Family Migrated From",
fq.family_migrated_to as "Family Migrated To"
*/
from final_Query fq',true,'ACTIVE','da914754-fc0c-46c0-ae14-6dd008a76ebe'),
	 (190,409,'2019-01-23 19:37:37.989',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','204593bf-bf11-44b3-bbb4-9c172adf020d'),
	 (377,1,'2019-02-13 11:51:08.876',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','5d1e25d9-2758-4edb-a926-d2e8d065af91'),
	 (66,1027,'2018-08-30 11:21:37.671',1,'2021-01-13 20:22:06.427965','from_month_year,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
ldp as(
  select location_id,anc_reg,jsy_beneficiary,jsy_beneficiaries_with_aadhar_and_bank_no
  ,jsy_beneficiaries_with_aadhar_reg_no,jsy_beneficiaries_with_aadhar_id_but_no_bank_details
  ,jsy_beneficiaries_with_bank_acc_but_no_aadhar_details,jsy_beneficiaries_with_no_aadhar_and_bank_details
  from rch_lmp_base_location_wise_data_point,location_hierchy_closer_det
  where rch_lmp_base_location_wise_data_point.location_id = location_hierchy_closer_det.child_id 
  and location_hierchy_closer_det.parent_id = #location_id#
  and month_year between 
  	(case when #from_month_year# is null then ''01/01/1970'' else to_date(''#from_month_year#'',''MM/DD/YYYY'') end) 
  and 
  	(case when #to_month_year# is null then ''01/01/1970'' else to_date(''#to_month_year#'',''MM/DD/YYYY'') end)
 ), w as (
    select
location_hierchy_closer_det.parent_id as loc_id,
    sum(ldp.anc_reg) as anc_reg,
    coalesce(sum(ldp.jsy_beneficiary),0) as jsy_beneficiary,
    coalesce(sum(ldp.jsy_beneficiaries_with_aadhar_and_bank_no),0) as jsy_beneficiaries_with_aadhar_and_bank_no,
    coalesce(sum(ldp.jsy_beneficiaries_with_aadhar_reg_no),0) as jsy_beneficiaries_with_aadhar_reg_no,
    coalesce(sum(ldp.jsy_beneficiaries_with_aadhar_id_but_no_bank_details),0) as jsy_beneficiaries_with_aadhar_id_but_no_bank_details,
    coalesce(sum(ldp.jsy_beneficiaries_with_bank_acc_but_no_aadhar_details),0) as jsy_beneficiaries_with_bank_acc_but_no_aadhar_details,
    coalesce(sum(ldp.jsy_beneficiaries_with_no_aadhar_and_bank_details),0) as jsy_beneficiaries_with_no_aadhar_and_bank_details
    from (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth=1)as t 
inner join location_hierchy_closer_det on t.child_id = location_hierchy_closer_det.parent_id 
inner join ldp on ldp.location_id = location_hierchy_closer_det.child_id
group by location_hierchy_closer_det.parent_id 
),s as (
select case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name
else lm.name end as "Location Name"
,lm.id AS hidden_location_id
,anc_reg as "Number of ANC Registered"
,coalesce(jsy_beneficiary,0) as "No of JSY Beneficiaries out of ANC registered"
,round(coalesce(case when anc_reg = 0 then 0 else jsy_beneficiary*100/anc_reg end,0),2) as "Percentage JSY Beneficiaries to ANC registered"
,coalesce(jsy_beneficiaries_with_aadhar_and_bank_no,0) as "No of JSY Beneficiaries with Aadhar id/Reg No and Bank acc no"
,round(coalesce(case when jsy_beneficiary = 0 then 0 else jsy_beneficiaries_with_aadhar_and_bank_no*100/jsy_beneficiary end,0),2) as "Percentage of JSY Beneficiaries with Aadhar id/Reg No and Bank acc no"
,coalesce(jsy_beneficiaries_with_aadhar_reg_no,0) as "No of JSY Beneficiaries with aadhar reg no"
,round(coalesce(case when jsy_beneficiary = 0 then 0 else jsy_beneficiaries_with_aadhar_reg_no*100/jsy_beneficiary end,0),2) as "Percentage of JSY Beneficiaries with aadhar reg no"
,coalesce(jsy_beneficiaries_with_aadhar_id_but_no_bank_details,0) as "No of JSY Beneficiaries with aadhar id no but no bank details"
,round(coalesce(case when jsy_beneficiary = 0 then 0 else jsy_beneficiaries_with_aadhar_id_but_no_bank_details*100/jsy_beneficiary end,0),2) as "Percentage of JSY Beneficiaries with aadhar id no but no bank details"
,coalesce(jsy_beneficiaries_with_bank_acc_but_no_aadhar_details,0) as "No of JSY Beneficiaries with Bank acc No but no aadhar details"
,round(coalesce(case when jsy_beneficiary = 0 then 0 else jsy_beneficiaries_with_bank_acc_but_no_aadhar_details*100/jsy_beneficiary end,0),2) as "Percentage of JSY Beneficiaries with Bank acc No but no aadhar details"
,coalesce(jsy_beneficiaries_with_no_aadhar_and_bank_details,0) as "JSY Beneficiaries with no Aadhar id/Regd No and Bank Details"
,round(coalesce(case when jsy_beneficiary = 0 then 0 else jsy_beneficiaries_with_no_aadhar_and_bank_details*100/jsy_beneficiary end,0),2) as "Percentage of JSY Beneficiaries with no Aadhar id/Regd No and Bank Details"

from (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth=1 limit 100) as t
inner join location_master lm on lm.id = t.child_id
left join w on w.loc_id = lm.id
cross join prefered_language
order by lm.name,prefered_language.is_enlish
)
select row_number() over() as "Sr no.", s.* FROM s
union all
SELECT
	NULL,
    ''<b>Total<b>'',
    #location_id#,
    coalesce(sum("Number of ANC Registered"),0),
    coalesce(sum("No of JSY Beneficiaries out of ANC registered"),0),
    round(coalesce(case when sum("Number of ANC Registered") = 0 then 0 else sum("No of JSY Beneficiaries out of ANC registered")*100/sum("Number of ANC Registered") end,0),2), 
    coalesce(sum("No of JSY Beneficiaries with Aadhar id/Reg No and Bank acc no"),0),
    round(coalesce(case when sum("No of JSY Beneficiaries out of ANC registered") = 0 then 0 else sum("No of JSY Beneficiaries with Aadhar id/Reg No and Bank acc no")*100/sum("No of JSY Beneficiaries out of ANC registered") end,0),2), 
    coalesce(sum("No of JSY Beneficiaries with aadhar reg no"),0),
    round(coalesce(case when sum("No of JSY Beneficiaries out of ANC registered") = 0 then 0 else sum("No of JSY Beneficiaries with aadhar reg no")*100/sum("No of JSY Beneficiaries out of ANC registered") end,0),2), 
    coalesce(sum("No of JSY Beneficiaries with aadhar id no but no bank details"),0),
    round(coalesce(case when sum("No of JSY Beneficiaries out of ANC registered") = 0 then 0 else sum("No of JSY Beneficiaries with aadhar id no but no bank details")*100/sum("No of JSY Beneficiaries out of ANC registered") end,0),2), 
    coalesce(sum("No of JSY Beneficiaries with Bank acc No but no aadhar details"),0),
    round(coalesce(case when sum("No of JSY Beneficiaries out of ANC registered") = 0 then 0 else sum("No of JSY Beneficiaries with Bank acc No but no aadhar details")*100/sum("No of JSY Beneficiaries out of ANC registered") end,0),2), 
    coalesce(sum("JSY Beneficiaries with no Aadhar id/Regd No and Bank Details"),0),
    round(coalesce(case when sum("No of JSY Beneficiaries out of ANC registered") = 0 then 0 else sum("JSY Beneficiaries with no Aadhar id/Regd No and Bank Details")*100/sum("No of JSY Beneficiaries out of ANC registered") end,0),2)
from s',true,'ACTIVE','c7b95e72-620b-4c59-892e-3976c0e0c4cf'),
	 (276,1,'2019-02-05 12:41:51.429',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--BCG given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.bcg is not null
	and c.is_valid_for_tracking_report = true
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','b23f1efd-74ec-4587-8310-134dc5cef9e2'),
	 (1055,409,'2019-04-28 18:07:01.358',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','83c165b6-ec93-4a6e-9995-9dcb1c959d8f'),
	 (645,409,'2019-02-19 19:56:34.044',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','42eaf368-9c6b-4a32-956a-e08f0e3fa7f8'),
	 (408,1,'2019-02-13 12:34:49.33',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','6ee554c0-b17f-42cf-aca7-08f5d24f794b'),
	 (409,1,'2019-02-13 12:34:49.336',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','56cff9a4-139c-44ed-91ca-59e7e12a470c');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (261,1,'2019-02-05 12:19:21.083',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','738ca7c8-08ea-4282-823c-121244d90279'),
	 (113,409,'2019-01-05 15:15:40.599',1,'2021-01-13 20:22:06.427965','from_date,to_date','with user_det as(
select * from um_user where role_id in (select distinct role_id from um_user where id in (
select distinct created_by from gvk_verification ))
and state = ''ACTIVE''
),user_wise_cnt_det as(
select gvk_verification.created_by,gvk_verification.family_id,sum(1) as cnt  
from  gvk_verification,imt_family
where  gvk_verification.family_id = imt_family.family_id
and gvk_verification.created_on between cast(case when ''#from_date#'' = ''null'' then ''01-01-1970'' else ''#from_date#'' end as date) 
	and cast(case when ''#to_date#'' = ''null'' then ''01-01-1970'' else ''#to_date#'' end as date) +interval ''1 day''
group by gvk_verification.created_by,gvk_verification.family_id
),final_detail as(
select concat(user_det.first_name,'' '',user_det.last_name,''('',user_det.user_name,'')'') as name
,sum(case when cnt>0 then 1 else 0 end) as total_family_conacted,sum(case when cnt>1 then 1 else 0 end) as more_then_one_attempt
from user_det left join user_wise_cnt_det on user_det.id = user_wise_cnt_det.created_by
where ''#from_date#'' != ''null''
group by user_det.id,user_det.first_name,user_det.last_name,user_det.user_name
order by user_det.first_name
)select row_number() over() as "Sr. no",name as "Name"
,total_family_conacted as "Number of Families Contacted" 
,more_then_one_attempt as "Number of Families Attempted More Than Once"
from final_detail
union all
select null,''<b>Total</b>'',sum(total_family_conacted),sum(more_then_one_attempt) from final_detail',true,'ACTIVE','c25ba13e-815b-4dc4-8fd5-6c834ce03bb4'),
	 (637,63746,'2019-02-19 15:08:14.242',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,high_risk_condition,location_id','with location_det as(
	select child_id as loc_id from location_hierchy_closer_det where parent_id = #location_id#
),
dates as(
	select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'')+interval ''1 day'' - interval ''1 millisecond'' as to_date
),
pregnancy_reg_det as (
select pregnancy_reg_id,member_id,reg_service_date as filter_date
from rch_pregnancy_analytics_details,dates,location_det
where reg_service_date between dates.from_date and dates.to_date
and member_current_location_id = location_det.loc_id  
and ( (cur_severe_anemia = true and (''#high_risk_condition#'' in (''Severe Maternal Anemia''))) 
	or (cur_blood_pressure_issue = true and (''#high_risk_condition#'' in (''High BP''))))
),
delivery_reg_det as (
select member_id, dob as filter_date
from rch_child_analytics_details,dates,location_det
where dob between dates.from_date and dates.to_date
and rch_child_analytics_details.member_id is not null
and rch_child_analytics_details.loc_id = location_det.loc_id
and ''#high_risk_condition#'' in (''Very Low Birth Weight'')
),
child_6_month_to_6_year_det as (
select member_id, dob as filter_date
from rch_child_analytics_details,dates,location_det
where dob between dates.from_date - interval ''6 year'' and dates.to_date - interval ''6 month''
and member_id is not null and rch_child_analytics_details.loc_id = location_det.loc_id
and is_sam_child = true
and ''#high_risk_condition#'' in (''SAM'')
), high_risk_usr as (

(select 
gvk_high_risk_follow_up_usr_info.member_id,filter_date
,gvk_high_risk_follow_up_usr_info.pregnancy_reg_det_id,
gvk_high_risk_follow_up_usr_info.diseases,gvk_high_risk_follow_up_usr_info.highrisk_reason,
gvk_high_risk_follow_up_usr_info.treatment_performed_info
from gvk_high_risk_follow_up_usr_info,gvk_high_risk_follow_up_responce,pregnancy_reg_det
where gvk_high_risk_follow_up_usr_info.id = gvk_high_risk_follow_up_responce.gvk_high_risk_usr_id
and gvk_high_risk_follow_up_usr_info.diseases like ''%#high_risk_condition#%''
and  gvk_high_risk_follow_up_usr_info.pregnancy_reg_det_id = pregnancy_reg_det.pregnancy_reg_id
and 
	((''#high_risk_condition#'' in (''Severe Maternal Anemia'') and 
		((gvk_high_risk_follow_up_responce.is_beneficiary_received_iron_sucrose_injection_anemia = ''true'' or 
			cast(gvk_high_risk_follow_up_responce.injection_count_anemia as int) > (2) or 
			gvk_high_risk_follow_up_responce.is_beneficiary_received_blood_lastweek_anemia = ''true''))) or 
	(''#high_risk_condition#'' in (''High BP'') and gvk_high_risk_follow_up_responce.is_beneficiary_received_drugs_for_high_bp = ''true''))
#limit_offset#
)

union

(select 
gvk_high_risk_follow_up_usr_info.member_id,filter_date
,gvk_high_risk_follow_up_usr_info.pregnancy_reg_det_id,
gvk_high_risk_follow_up_usr_info.diseases,gvk_high_risk_follow_up_usr_info.highrisk_reason,
gvk_high_risk_follow_up_usr_info.treatment_performed_info
from gvk_high_risk_follow_up_usr_info,gvk_high_risk_follow_up_responce,delivery_reg_det
where gvk_high_risk_follow_up_usr_info.id = gvk_high_risk_follow_up_responce.gvk_high_risk_usr_id
and gvk_high_risk_follow_up_usr_info.diseases like ''%#high_risk_condition#%''
and  gvk_high_risk_follow_up_usr_info.member_id = delivery_reg_det.member_id
and ''#high_risk_condition#'' in (''Very Low Birth Weight'')
and gvk_high_risk_follow_up_responce.is_new_birth_child_admitted_to_hospital_for_low_birth_weight = ''true''
#limit_offset#
)


union

(select 
gvk_high_risk_follow_up_usr_info.member_id,filter_date
,gvk_high_risk_follow_up_usr_info.pregnancy_reg_det_id,
gvk_high_risk_follow_up_usr_info.diseases,gvk_high_risk_follow_up_usr_info.highrisk_reason,
gvk_high_risk_follow_up_usr_info.treatment_performed_info
from gvk_high_risk_follow_up_usr_info,gvk_high_risk_follow_up_responce,child_6_month_to_6_year_det
where gvk_high_risk_follow_up_usr_info.id = gvk_high_risk_follow_up_responce.gvk_high_risk_usr_id
and gvk_high_risk_follow_up_usr_info.diseases like ''%#high_risk_condition#%''
and  gvk_high_risk_follow_up_usr_info.member_id = child_6_month_to_6_year_det.member_id
and ''#high_risk_condition#'' in (''SAM'')
and gvk_high_risk_follow_up_responce.is_beneficiary_child_admitted_to_cmtc_sam = ''true''
#limit_offset#
)
)

select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
mem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')'' as "Member Name",
filter_date as "RegServiceDate(Mother)/BirthDate(Child)",
case when mem.mobile_number is null then ''N/A'' else
	mem.mobile_number end as "Mobile Number"
,case 
	when hod.mobile_number is not null then 
		hod.first_name || '' '' || hod.middle_name || '' '' || hod.last_name || '' ('' || hod.mobile_number  || '')''
	else hod.first_name || '' '' || hod.middle_name || '' '' || hod.last_name
end as "Head Of Family",
highriskusr.highrisk_reason as "High Risk Reason",
highriskusr.treatment_performed_info as "Given Treatment"
,string_agg(lm.name,''> '' order by lhcd.depth desc) as "locationHierarchy"
from high_risk_usr highriskusr   
inner join imt_member mem on highriskusr.member_id = mem.id
inner join imt_family fam on mem.family_id = fam.family_id
left join imt_member hod on fam.family_id = hod.family_id and hod.family_head = true
inner join location_hierchy_closer_det lhcd on (case when fam.area_id is null then fam.location_id else cast(fam.area_id as bigint) end) = lhcd.child_id
inner join location_master lm on lm.id = lhcd.parent_id 
group by mem.first_name, mem.middle_name, mem.last_name, mem.mobile_number, highriskusr.highrisk_reason,highriskusr.treatment_performed_info,
hod.first_name,hod.middle_name,hod.last_name,hod.mobile_number,mem.unique_health_id,filter_date',true,'ACTIVE','e7f44126-dd37-4ef8-a580-0113e862e211'),
	 (1368,69973,'2019-08-20 18:14:59.015',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','eb4238d5-bfbc-4635-94da-0ff60bfd341a'),
	 (634,63746,'2019-02-19 15:02:02.833',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,high_risk_condition,location_id','with location_det as(
select child_id as loc_id from location_hierchy_closer_det where parent_id = #location_id#
),
dates as(
select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'')+interval ''1 day'' - interval ''1 millisecond'' as to_date
),
pregnancy_reg_det as (
select pregnancy_reg_id,member_id,reg_service_date as filter_date
from rch_pregnancy_analytics_details,dates,location_det
where reg_service_date between dates.from_date and dates.to_date
and member_current_location_id = location_det.loc_id  
and ( (cur_severe_anemia = true and (''#high_risk_condition#'' in (''Severe Maternal Anemia''))) 
	or (cur_blood_pressure_issue = true and (''#high_risk_condition#'' in (''High BP''))))
),
delivery_reg_det as (
select member_id, dob as filter_date
from rch_child_analytics_details,dates,location_det
where dob between dates.from_date and dates.to_date
and rch_child_analytics_details.member_id is not null
and rch_child_analytics_details.loc_id = location_det.loc_id
and ''#high_risk_condition#'' in (''Very Low Birth Weight'')
),
child_6_month_to_6_year_det as (
select member_id, dob as filter_date
from rch_child_analytics_details,dates,location_det
where dob between dates.from_date - interval ''6 year'' and dates.to_date - interval ''6 month''
and member_id is not null and rch_child_analytics_details.loc_id = location_det.loc_id
and is_sam_child = true
and ''#high_risk_condition#'' in (''SAM'')
), high_risk_usr as (

(select 
distinct gvk_high_risk_follow_up_responce.gvk_high_risk_usr_id, gvk_high_risk_follow_up_usr_info.member_id, filter_date,
gvk_high_risk_follow_up_usr_info.diseases,gvk_high_risk_follow_up_usr_info.highrisk_reason
from gvk_high_risk_follow_up_usr_info,gvk_high_risk_follow_up_responce,pregnancy_reg_det
where gvk_high_risk_follow_up_usr_info.id = gvk_high_risk_follow_up_responce.gvk_high_risk_usr_id
and gvk_high_risk_follow_up_usr_info.diseases like ''%#high_risk_condition#%''
and  gvk_high_risk_follow_up_usr_info.pregnancy_reg_det_id = pregnancy_reg_det.pregnancy_reg_id
and ''#high_risk_condition#'' in (''Severe Maternal Anemia'',''High BP'')
and gvk_high_risk_follow_up_responce.is_high_risk_condition_confirmed = ''true''
#limit_offset#
)

union

(select 
distinct gvk_high_risk_follow_up_responce.gvk_high_risk_usr_id, gvk_high_risk_follow_up_usr_info.member_id, filter_date,
gvk_high_risk_follow_up_usr_info.diseases,gvk_high_risk_follow_up_usr_info.highrisk_reason
from gvk_high_risk_follow_up_usr_info,gvk_high_risk_follow_up_responce,delivery_reg_det
where gvk_high_risk_follow_up_usr_info.id = gvk_high_risk_follow_up_responce.gvk_high_risk_usr_id
and gvk_high_risk_follow_up_usr_info.diseases like ''%#high_risk_condition#%''
and  gvk_high_risk_follow_up_usr_info.member_id = delivery_reg_det.member_id
and ''#high_risk_condition#'' in (''Very Low Birth Weight'')
and gvk_high_risk_follow_up_responce.is_high_risk_condition_confirmed = ''true''
#limit_offset#
)

union

(select 
distinct gvk_high_risk_follow_up_responce.gvk_high_risk_usr_id, gvk_high_risk_follow_up_usr_info.member_id, filter_date,
gvk_high_risk_follow_up_usr_info.diseases,gvk_high_risk_follow_up_usr_info.highrisk_reason
from gvk_high_risk_follow_up_usr_info,gvk_high_risk_follow_up_responce,child_6_month_to_6_year_det
where gvk_high_risk_follow_up_usr_info.id = gvk_high_risk_follow_up_responce.gvk_high_risk_usr_id
and gvk_high_risk_follow_up_usr_info.diseases like ''%#high_risk_condition#%''
and  gvk_high_risk_follow_up_usr_info.member_id = child_6_month_to_6_year_det.member_id
and ''#high_risk_condition#'' in (''SAM'')
and gvk_high_risk_follow_up_responce.is_high_risk_condition_confirmed = ''true''
#limit_offset# )
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
mem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')'' as "Member Name",
filter_date as "RegServiceDate(Mother)/BirthDate(Child)",

case when mem.mobile_number is null then ''N/A'' else
	mem.mobile_number end as "Mobile Number"
,case 
	when hod.mobile_number is not null then 
		hod.first_name || '' '' || hod.middle_name || '' '' || hod.last_name || '' ('' || hod.mobile_number  || '')''
	else hod.first_name || '' '' || hod.middle_name || '' '' || hod.last_name
end as "Head Of Family",
highriskusr.highrisk_reason as "High Risk Reason"
,string_agg(lm.name,''> '' order by lhcd.depth desc) as "locationHierarchy"
from high_risk_usr highriskusr   
inner join imt_member mem on highriskusr.member_id = mem.id
inner join imt_family fam on mem.family_id = fam.family_id
left join imt_member hod on fam.family_id = hod.family_id and hod.family_head = true
inner join location_hierchy_closer_det lhcd on (case when fam.area_id is null then fam.location_id else cast(fam.area_id as bigint) end) = lhcd.child_id
inner join location_master lm on lm.id = lhcd.parent_id 
group by mem.first_name, mem.middle_name, mem.last_name, mem.mobile_number, highriskusr.highrisk_reason,mem.mobile_number,
hod.mobile_number,hod.first_name,hod.middle_name,hod.last_name,mem.unique_health_id, filter_date, gvk_high_risk_usr_id',true,'ACTIVE','bd7f43ff-938d-4cbe-a8ea-36d623d8a0f3'),
	 (278,1,'2019-02-05 12:43:24.442',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--DPT 1 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.dpt1 is not null
	and c.is_valid_for_tracking_report = true
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','6b49a89e-c52e-4755-a8fc-604278f98c8d'),
	 (335,1,'2019-02-12 17:40:38.297',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','b4eca80f-c088-4340-8493-f67f75eaa5c8'),
	 (1046,60512,'2019-04-22 17:37:11.665',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id','--Maternal deaths(Delivery Services Provided During The Year)(monthly)---
with parameters as (
select
	cast(#location_id# as integer) as location_id,
	to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end, ''MM/DD/YYYY'') from_date,
	to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end, ''MM/DD/YYYY'')+ interval ''1 month'' - interval ''1 millisecond'' to_date,
	cast(''#demographic_location_id#'' as text) as demographic_group,
	(select report_preferred_language = ''EN'' from um_user where id = cast(''#loggedInUserId#'' as integer)) as preferred_language )
,member_det as (
select
	m.id,
	r.member_id,
	r.death_location_id as loc_id,
	m.unique_health_id,
	m.family_id,
	m.weight,
	m.is_pregnant,
	m.last_delivery_date,
	r.haemoglobin_tested_count,
	death_detail.place_of_death,
	r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp,
	to_char(r.edd, ''DD/MM/YYYY'') as edd,
	to_char(r.death_date, ''DD/MM/YYYY'') as death_date,
	to_char(death_detail.created_on, ''DD/MM/YYYY'') as date_of_entry,
	to_char(death_detail.modified_on, ''DD/MM/YYYY'') as date_of_verification,
	to_char(r.date_of_delivery, ''DD/MM/YYYY'') as delivery_date,
	r.pregnancy_reg_id,
	extract(year from age(r.death_date, m.dob)) as age,
	r.last_systolic_bp as last_systolic_bp,
	r.maternal_death_type as death_type,
	(case when r.registered_with_no_of_child is not null then r.registered_with_no_of_child else 0 end +
case when r.total_out_come is not null then r.total_out_come else 0 end) as total_child
from
	rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, parameters p ,rch_member_death_deatil death_detail
	where r.member_id = m.id and r.death_location_id = l.child_id
	and r.maternal_detah = true
	and l.parent_id = p.location_id
	and r.death_date between p.from_date and p.to_date
	and death_detail.member_id = m.id
	and (p.demographic_group = ''null''
	or l.child_loc_demographic_type in (select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	order by
	r.death_date #limit_offset# 
)
,gravida_count as (
select rch_pregnancy_registration_det.member_id, count(*) as gravida
	from rch_pregnancy_registration_det where rch_pregnancy_registration_det.member_id in (
	select id from member_det
	)
	group by rch_pregnancy_registration_det.member_id 
)
,parity_count as (
	select imt_member.id,count(distinct m2.dob) as parity
		from imt_member inner join imt_member m2 on imt_member.id = m2.mother_id
	where imt_member.id in (select id from member_det) group by imt_member.id 
)
,member_det_extra as(
select distinct
	md.id,
	concat(f.address1, '','', f.address2) as address,
	f.area_id,
	f.caste,
	wpd.delivery_place,
	dd.verbal_autopsy,
	wpd.fbmdsr,
	to_char(dd.created_on, ''dd-MM-yyyy'') as data_entry_date,
	case
		when list_value.value is null then dd.other_death_reason
		else list_value.value end as death_deason,
		dd.place_of_death
	from
	member_det md 
	inner join imt_family f on f.family_id = md.family_id
	inner join rch_member_death_deatil dd on dd.member_id = md.id
	left join rch_wpd_mother_master wpd on
		wpd.member_id = md.id and has_delivery_happened is true
		and wpd.pregnancy_reg_det_id = md.pregnancy_reg_id
	left join listvalue_field_value_detail list_value on list_value.id\:\:text = dd.death_reason 
)
,caste_filter as (
	select distinct md.id,list.value as caste from member_det_extra md inner join listvalue_field_value_detail list on md.caste = cast(list.id as text)
)
,loc_det as (
	select loc.loc_id,string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end), ''>'' order by lhcd.depth desc) as aoi
	from
		(select distinct loc_id from member_det) loc,
		location_hierchy_closer_det lhcd,location_master l2,parameters p
		where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
		group by loc.loc_id 
)
,fhw_det as (
select loc.loc_id,
	concat_ws('''' , u.first_name, u.last_name, '' ('', u.user_name, '')'', '''', '' Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
from um_user_location ul,um_user u,(select distinct loc_id from member_det) loc,location_hierchy_closer_det
where
	loc.loc_id = location_hierchy_closer_det.child_id and location_hierchy_closer_det.parent_id = ul.loc_id
	and u.id = ul.user_id and u.state = ''ACTIVE''
	and ul.state = ''ACTIVE'' and u.role_id = (select id from um_role_master where name = ''FHW'') 
)
,asha_areas as (
	select distinct area_id from member_det_extra
)
,asha_det_temp as(
	select
	asha_areas.area_id,
	max(u.id) as user_id
	from um_user_location ul,um_user u,asha_areas
	where asha_areas.area_id = ul.loc_id and u.id = ul.user_id and u.state = ''ACTIVE'' 
	and ul.state = ''ACTIVE'' and u.role_id = (select id from um_role_master where name = ''Asha'')
	group by
	asha_areas.area_id
)
,asha_det as (
select
	u.id,asha_det_temp.area_id,u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''('' ||
	case
		when u.contact_number is not null then u.contact_number || '')''
		else ''N/A'' || '')'' end as asha
	from
		um_user u,asha_det_temp
	where
		u.id = asha_det_temp.user_id
)
,last_service_details as (
	select to_char(max(service_date), ''dd-MM-yyyy'') as last_service_date ,services.member_id
	from rch_member_services services
	inner join member_det mem on mem.member_id = services.member_id
	group by
	services.member_id
)
select
	row_number() over () + cast(substring(''#limit_offset#'', position(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
	get_location_hierarchy_by_type(loc_det.loc_id,
	''D'') as "District / Corp",
	get_location_hierarchy_by_type(loc_det.loc_id,
	''B'') as "Taluka / zone",
	get_location_hierarchy_by_type(loc_det.loc_id,
	''P'') as "PHC / UHC",
	get_location_hierarchy_by_type(loc_det.loc_id,
	''SC'') as "Sub Centre",
	m_extra.address as "Address",
	member_det.name as "Name",
	caste_filter.caste as "Caste",
	member_det.unique_health_id as "TeCHO+ ID",
	member_det.age as "Age in Years",
	gravida_count.gravida as "Gravida",
	parity_count.parity as "Parity",
	member_det.total_child as "No of Live Children",
	member_det.death_type as "Period of death",
	member_det.death_date as "Date of Death",
	m_extra.data_entry_date as "Date of Entry",
	member_det.date_of_verification as "Date of Verification",
	services.last_service_date as "Last check up date",
	haemoglobin_tested_count as "Last Hb",
	last_systolic_bp as "Last BP",
		case
		when delivery_place = ''HOME'' then ''Home''
		when delivery_place = ''HOSP'' then ''Hospital''
		when delivery_place = ''ON_THE_WAY'' then ''onthe way''
		else ''Other'' end as "Place of delivery",
		
		case
		when member_det.place_of_death = ''HOME'' then ''Home''
		when member_det.place_of_death = ''ON_THE_WAY'' then ''onthe way''
		when member_det.place_of_death = ''HOSP'' then ''Hospital''
		else ''Other'' end as "Place of death",
	m_extra.death_deason as "Provisional diagnosis",
		case
		when m_extra.verbal_autopsy then ''yes''
		else ''-'' end as "Verbal Autopsy",
	m_extra.fbmdsr as "FBMDSR",
		case
		when fhw_det.fhw is null then ''no FHW Assigned''
		else fhw_det.fhw end as "FHW Details",
		
		case
		when asha_det.asha is null then ''no Asha Assigned''
		else asha_det.asha end as "Asha Details"

	from
		member_det
	left join gravida_count on member_det.id = gravida_count.member_id
	left join parity_count on member_det.id = parity_count.id
	inner join loc_det on member_det.loc_id = loc_det.loc_id
	inner join member_det_extra m_extra on m_extra.id = member_det.id
	left join caste_filter on member_det.id = caste_filter.id
	left join fhw_det on member_det.loc_id = fhw_det.loc_id
	left join asha_det on asha_det.area_id = m_extra.area_id
	left join last_service_details services on services.member_id = member_det.id',true,'ACTIVE','39908241-03c3-480a-a8cb-8bf04ae6e36d'),
	 (988,64189,'2019-04-12 15:52:53.932',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--2.1-2.5 kg(LBW Child Registered)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.delivery_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.delivery_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.birth_weight is not null and c.birth_weight >= 2 and c.birth_weight < 2.5
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','dd3bfddd-b05d-4bc2-9623-18eab3b51a1b'),
	 (420,1,'2019-02-14 00:25:46.591',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','abe98431-e40d-4b14-b410-f9bf3907311e');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (214,57698,'2019-01-29 11:42:50.747',1,'2021-01-13 20:22:06.427965','to_month','select to_char(cast(''#to_month#'' as date),''DD/MM/YYYY'') as to_month',true,'ACTIVE','ba1306ec-3fae-46ba-8421-3ee591bd6492'),
	 (1611,74841,'2020-05-11 19:29:43.437',1,'2021-01-13 20:22:06.427965','app_name,limit_offset,app_version,device_type','with users as (
	select distinct on (user_id) *
	from 
	um_user_app_access_details
	where 
	app_name = #app_name# and ''#app_version#'' != ''null'' 
	order by user_id, id desc
), final_det as (
select concat(first_name, '' '',middle_name,'' '', last_name, ''('', user_name, '')'') as "User Detail" ,
um."name" as "Role"
from um_user
left join um_role_master um on um.id = um_user.role_id
where um_user.id in (
    select user_id from users 
    where 
     case when ''#device_type#'' = ''null'' and ''#app_version#'' = ''null'' then true else 
        device_type = ''#device_type#''
        and app_version = ''#app_version#'' end
        order by user_id
      #limit_offset#
    ) and um_user.state = ''ACTIVE''
    order by um_user.id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No.",
* from final_det',true,'ACTIVE','9fb9c113-5b06-4e1d-ae01-584f5ef7d90a'),
	 (424,1,'2019-02-14 00:28:03.892',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','cf3ad2c1-de01-4bb9-97d1-6b651f8f1425'),
	 (1233,409,'2019-07-24 10:19:01.98',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','ba8ccd45-9422-485d-8620-91e3eda51d90'),
	 (771,58981,'2019-03-06 14:27:48.877',1,'2021-01-13 20:22:06.427965','limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id','--Reg. After 1st April (Maternal Health Services provided to the mother registered during the year)
with parameters as(
select CAST(#location_id# AS INTEGER) as location_id,
CAST(''#financial_year#'' AS TEXT) as financial_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
 member_det as (
	select r.member_id, r.native_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p
	where r.native_location_id  = l.child_id 
	and l.parent_id = p.location_id
	and r.reg_service_financial_year = p.financial_year
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
	order by r.lmp_date
	#limit_offset#
),  loc_det as (
	select loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','eb697255-2ae7-4fa0-8c37-c03f04744fe2'),
	 (427,1,'2019-02-14 00:28:03.906',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, m.unique_health_id, m.family_id, m.dob, f.location_id as loc_id,
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
	where l.child_id = c.loc_id and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.member_id is not null
	and c.death_date is null
	and c.fully_immunization_in_number_of_month is null
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.unique_health_id as "Child ID",
child_det.family_id as "Family ID",
child_det.name as "Name",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','2cdbf9fc-d7e7-41ca-b725-ca4628143bc6'),
	 (77,1027,'2018-08-30 12:13:35.843',1,'2021-01-13 20:22:06.427965','financial_year,loggedInUserId,location_id','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#),
expected_target as (
	select t.child_id,
	sum(location_wise_expected_target.expected_mother_reg) as expected_mother_reg
	from (
		select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1
	) as t
	inner join location_hierchy_closer_det on t.child_id = location_hierchy_closer_det.parent_id
	inner join location_wise_expected_target on location_hierchy_closer_det.child_id = location_wise_expected_target.location_id
	and location_hierchy_closer_det.child_loc_type in (''P'',''U'')
	and location_wise_expected_target.financial_year = ''#financial_year#''
	group by t.child_id
),
w as (
	select
	lm.id as hidden_location_id,
    case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name
				else lm.name end as "Location Name",
    coalesce(sum(anc_reg),0) as "Pregnant women registration during period",
    coalesce(sum(hbsag_test),0) as "Total HbsAg Test Done",
    coalesce(case when sum(anc_reg) = 0 then 0 else sum(hbsag_test)*100/sum(anc_reg) end,0) as "% of HbsAg Test Done",
    coalesce(sum(reactive),0) as "Total Reactive",
    coalesce(case when sum(anc_reg) = 0 then 0 else sum(reactive)*100/sum(anc_reg) end,0) as "% of Reactive",
    coalesce(sum(non_reactive),0) as "Total Non Reactive",
    coalesce(case when sum(anc_reg) = 0 then 0 else sum(non_reactive)*100/sum(anc_reg) end,0) as "% of non-reactive"
	from (
		select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1
	) as t 
	inner join location_hierchy_closer_det on t.child_id = location_hierchy_closer_det.parent_id 
	inner join location_master lm on lm.id = t.child_id
	left join rch_yearly_location_wise_analytics_data lwrra on lwrra.location_id = location_hierchy_closer_det.child_id
        cross join prefered_language
	where lwrra.financial_year = ''#financial_year#''
	group by lm.id,prefered_language.is_enlish
	order by lm.name
)
select row_number() over() as "Sr. no",
w.*,
case when expected_mother_reg is null then ''Not available'' else cast(expected_mother_reg as text) end as "Expected Mother Registration"
from w
left join expected_target on w.hidden_location_id = expected_target.child_id
union all
select 
null,
#location_id#,
''<b>Total<b>'',
coalesce(sum("Pregnant women registration during period"),0),
coalesce(sum("Total HbsAg Test Done"),0),
round(coalesce(case when sum("Pregnant women registration during period") = 0 then 0 else sum("Total HbsAg Test Done")*100/sum("Pregnant women registration during period") end,0),2),
coalesce(sum("Total Reactive"),0),
round(coalesce(case when sum("Pregnant women registration during period") = 0 then 0 else sum("Total Reactive")*100/sum("Pregnant women registration during period") end,0),2),
coalesce(sum("Total Non Reactive"),0),
round(coalesce(case when sum("Pregnant women registration during period") = 0 then 0 else sum("Total Non Reactive")*100/sum("Pregnant women registration during period") end,0),2),
cast(sum(case when expected_mother_reg is not null then expected_mother_reg else 0 end) as text)
from w
left join expected_target on w.hidden_location_id = expected_target.child_id',true,'ACTIVE','4ac02442-6206-4c26-acad-afca20234fec'),
	 (1556,74840,'2020-04-02 11:57:00.484',1,'2021-01-13 20:22:06.427965','limit_offset','with member_selection as (
	select mt_member_id,name,mobile_number,data,created_on from mytecho_covid_symptom_checker_dump 
--	group by mt_member_id,name 
	order by mt_member_id asc,created_on  desc
),
count_data as (
	select
	mt_member_id ,
	count(1)	
	from member_selection
	group by mt_member_id
)
--select * from count_date
,fetch_top_data as (
	select distinct on (mt_member_id) *
	from member_selection
),
final_det as (
 select
 fetch_top_data.mt_member_id,
name as name,
mobile_number as mobile_number,
created_on as created_on,
cast(cast(data as json) -> ''haveAnyTravelHistory'' as text) as had_any_travel_history,
cast(cast(data as json) -> ''country'' as text) as country,
cast(cast(data as json) -> ''fever'' as text) as is_fever,
cast(cast(data as json) -> ''shortOfBreath'' as text) as is_short_of_breath,
cast(cast(data as json) -> ''cough'' as text) as is_cough,
cast(cast(data as json) -> ''typeOfTravel'' as text) as type_of_travel,
--cast(cast(data as json) -> ''id'' as text) as "Id",
cast(cast(data as json) -> ''contactTracing'' as text) as contact_tracing,
cast(cast(data as json) -> ''otherDiseases'' as text) as other_disease,
count_data.count as count
--cast(cast(data as json) -> ''isContinue'' as text) as "Is Continue"
from 
fetch_top_data inner join count_data on fetch_top_data.mt_member_id = count_data.mt_member_id
#limit_offset#
)
select
row_number() over () + cast(substring(''#limit_offset#'', position(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
mt_member_id as hidden_location_id,
--mt_member_id as "Member Id",
name as "Member Name",
case when mobile_number is null or mobile_number = ''null'' then ''N/A'' else mobile_number end as "Mobile No.",
created_on as "Tracking Date",
case when had_any_travel_history is null or had_any_travel_history = ''null'' then ''N/A'' else had_any_travel_history end as "Had any travel History",
case when country is null or country = ''null'' then ''N/A'' else country end as "Country",
case when is_fever is null or is_fever = ''null'' then ''N/A'' else is_fever  end as "Is Fever",
case when is_short_of_breath is null or is_short_of_breath = ''null'' then ''N/A'' else is_short_of_breath end as "Is Short Of Breath",
case when is_cough is null or is_cough  = ''null'' then ''N/A'' else is_cough  end as "Is Cough",
case when type_of_travel is null or type_of_travel = ''null'' then ''N/A'' else type_of_travel end as "Type Of Travel",
case when contact_tracing is null or contact_tracing = ''null'' then ''N/A'' else contact_tracing  end as "Contact Tracing",
case when other_disease  is null or other_disease  = ''""'' or other_disease = ''null'' then ''N/A'' else other_disease  end as "Other Disease",
coalesce(count,0) as "Tracking Count"


--data
from final_det',true,'ACTIVE','c67c9eb3-4537-4e15-a8e3-4e27264bc93c'),
	 (283,1,'2019-02-11 17:06:17.087',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Penta 1 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.penta1 is not null
	and c.is_valid_for_tracking_report = true
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','fbef98d3-903f-4339-8b99-feadbc5434f9'),
	 (323,1,'2019-02-12 16:19:46.96',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','ea973466-99e4-48dc-8f92-d600278933b3');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (635,63746,'2019-02-19 15:05:10.291',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,high_risk_condition,location_id','with location_det as(
select child_id as loc_id from location_hierchy_closer_det where parent_id = #location_id#
),
dates as(
select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'')+interval ''1 day'' - interval ''1 millisecond'' as to_date
),
pregnancy_reg_det as (
select pregnancy_reg_id,member_id,reg_service_date as filter_date 
from rch_pregnancy_analytics_details,dates,location_det
where reg_service_date between dates.from_date and dates.to_date
and member_current_location_id = location_det.loc_id  
and ( (cur_severe_anemia = true and (''#high_risk_condition#'' in (''Severe Maternal Anemia''))) 
	or (cur_blood_pressure_issue = true and (''#high_risk_condition#'' in (''High BP''))))
),
delivery_reg_det as (
select member_id,dob as filter_date 
from rch_child_analytics_details,dates,location_det
where dob between dates.from_date and dates.to_date
and rch_child_analytics_details.member_id is not null
and rch_child_analytics_details.loc_id = location_det.loc_id
and ''#high_risk_condition#'' in (''Very Low Birth Weight'')
),
child_6_month_to_6_year_det as (
select member_id,dob as filter_date 
from rch_child_analytics_details,dates,location_det
where dob between dates.from_date - interval ''6 year'' and dates.to_date - interval ''6 month''
and member_id is not null and rch_child_analytics_details.loc_id = location_det.loc_id
and is_sam_child = true
and ''#high_risk_condition#'' in (''SAM'')
), high_risk_usr as (

(select 
distinct gvk_high_risk_follow_up_responce.gvk_high_risk_usr_id, gvk_high_risk_follow_up_usr_info.member_id,filter_date, 
gvk_high_risk_follow_up_usr_info.diseases,gvk_high_risk_follow_up_usr_info.highrisk_reason
from gvk_high_risk_follow_up_usr_info,gvk_high_risk_follow_up_responce,pregnancy_reg_det
where gvk_high_risk_follow_up_usr_info.id = gvk_high_risk_follow_up_responce.gvk_high_risk_usr_id
and gvk_high_risk_follow_up_usr_info.diseases like ''%#high_risk_condition#%''
and  gvk_high_risk_follow_up_usr_info.pregnancy_reg_det_id = pregnancy_reg_det.pregnancy_reg_id
and ''#high_risk_condition#'' in (''Severe Maternal Anemia'',''High BP'')
and gvk_high_risk_follow_up_responce.is_beneficiary_willing_to_helped = true
#limit_offset#
)

union

(select 
distinct gvk_high_risk_follow_up_responce.gvk_high_risk_usr_id, gvk_high_risk_follow_up_usr_info.member_id,filter_date, 
gvk_high_risk_follow_up_usr_info.diseases,gvk_high_risk_follow_up_usr_info.highrisk_reason
from gvk_high_risk_follow_up_usr_info,gvk_high_risk_follow_up_responce,delivery_reg_det
where gvk_high_risk_follow_up_usr_info.id = gvk_high_risk_follow_up_responce.gvk_high_risk_usr_id
and gvk_high_risk_follow_up_usr_info.diseases like ''%#high_risk_condition#%''
and  gvk_high_risk_follow_up_usr_info.member_id = delivery_reg_det.member_id
and ''#high_risk_condition#'' in (''Very Low Birth Weight'')
and gvk_high_risk_follow_up_responce.is_beneficiary_willing_to_helped = true
#limit_offset#
)

union

(select 
distinct gvk_high_risk_follow_up_responce.gvk_high_risk_usr_id, gvk_high_risk_follow_up_usr_info.member_id,filter_date, 
gvk_high_risk_follow_up_usr_info.diseases,gvk_high_risk_follow_up_usr_info.highrisk_reason
from gvk_high_risk_follow_up_usr_info,gvk_high_risk_follow_up_responce,child_6_month_to_6_year_det
where gvk_high_risk_follow_up_usr_info.id = gvk_high_risk_follow_up_responce.gvk_high_risk_usr_id
and gvk_high_risk_follow_up_usr_info.diseases like ''%#high_risk_condition#%''
and  gvk_high_risk_follow_up_usr_info.member_id = child_6_month_to_6_year_det.member_id
and ''#high_risk_condition#'' in (''SAM'')
and gvk_high_risk_follow_up_responce.is_beneficiary_willing_to_helped = true
#limit_offset# )
)

select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
mem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')'' as "Member Name",
filter_date as "RegServiceDate(Mother)/BirthDate(Child)",
case when mem.mobile_number is null then ''N/A'' else
	mem.mobile_number end as "Mobile Number"
,case 
	when hod.mobile_number is not null then 
		hod.first_name || '' '' || hod.middle_name || '' '' || hod.last_name || '' ('' || hod.mobile_number  || '')''
	else hod.first_name || '' '' || hod.middle_name || '' '' || hod.last_name
end as "Head Of Family",
highriskusr.highrisk_reason as "High Risk Reason"
,string_agg(lm.name,''> '' order by lhcd.depth desc) as "locationHierarchy"
from high_risk_usr highriskusr   

inner join imt_member mem on highriskusr.member_id = mem.id
inner join imt_family fam on mem.family_id = fam.family_id
left join imt_member hod on fam.family_id = hod.family_id and hod.family_head = true
inner join location_hierchy_closer_det lhcd on (case when fam.area_id is null then fam.location_id else cast(fam.area_id as bigint) end) = lhcd.child_id
inner join location_master lm on lm.id = lhcd.parent_id 
group by mem.first_name, mem.middle_name, mem.last_name, mem.mobile_number,highriskusr.highrisk_reason,
hod.first_name,hod.middle_name,hod.last_name,hod.mobile_number,mem.unique_health_id,filter_date, gvk_high_risk_usr_id',true,'ACTIVE','1b3e98f4-100e-4221-ab00-93d642c740d5'),
	 (270,1,'2019-02-05 12:38:34.922',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','7654e976-635e-4c03-bb56-d270760f54e3'),
	 (991,409,'2019-04-12 16:44:14.633',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','657cd85c-16be-4ea0-9a20-820fab64689f'),
	 (223,58981,'2019-01-30 20:03:44.131',1,'2021-01-13 20:22:06.427965',NULL,'select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as year 
from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by year desc;',true,'ACTIVE','5da3dfba-ad1a-44d5-bdda-020dff32cdfa'),
	 (289,1,'2019-02-11 17:21:55.964',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--DPT 2 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.dpt2 is not null
	and c.is_valid_for_tracking_report = true
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','eb8f515d-5d47-417c-a005-b456c78a376d'),
	 (479,57698,'2019-02-14 14:21:18.188',1,'2021-01-13 20:22:06.427965','course_id','select course_name as course_id from tr_course_master  where course_id=#course_id#',true,'ACTIVE','c77fea2b-5668-48d9-ae98-e653d027711e'),
	 (480,57698,'2019-02-14 14:21:18.192',1,'2021-01-13 20:22:06.427965','role_id','select name as "role_id" from um_role_master where id=#role_id#',true,'ACTIVE','69bc1bcf-04ab-4acc-b04e-2c523fb594c2'),
	 (88,1027,'2018-10-10 10:17:39.836',1,'2021-01-13 20:22:06.427965','limit_offset,location_id','select
row_number() over ()+ substring (''#limit_offset#'',
position(''offset'' in ''#limit_offset#'')+ 7)\:\:int as "Sr No",
res."Family ID" as "Family ID",
res."Name",
coalesce(res."Mother Name", ''NA'') as "Mother Name",
res."DOB",
case
when hepatitis <> ''given'' then
case
when hepatitis = ''not_given'' then ''<i style="font-size:3vh" class="fa fa-square-o" aria-hidden="true"></i>''
when hepatitis = ''missed'' then ''<i style="color:red;font-size:3vh" class="fa fa-window-close-o" aria-hidden="true"></i>''
else ''NA''
end
else ''<i style="color:green;font-size:3vh" class="fa fa-check-square-o" aria-hidden="true"></i>''
end as "HEPA TITIS B 0",
case
when opv_0 <> ''given'' then
case
when opv_0 = ''not_given'' then ''<i style="font-size:3vh" class="fa fa-square-o" aria-hidden="true"></i>''
when opv_0 = ''missed'' then ''<i style="color:red;font-size:3vh" class="fa fa-window-close-o" aria-hidden="true"></i>''
else ''NA''
end
else ''<i style="color:green;font-size:3vh" class="fa fa-check-square-o" aria-hidden="true"></i>''
end as "OPV 0",
case
when bcg <> ''given'' then
case
when bcg = ''not_given'' then ''<i style="font-size:3vh" class="fa fa-square-o" aria-hidden="true"></i>''
when bcg = ''missed'' then ''<i style="color:red;font-size:3vh" class="fa fa-window-close-o" aria-hidden="true"></i>''
else ''NA''
end
else ''<i style="color:green;font-size:3vh" class="fa fa-check-square-o" aria-hidden="true"></i>''
end as "BCG",
case
when penta_1 <> ''given'' then
case
when penta_1 = ''not_given'' then ''<i style="font-size:3vh" class="fa fa-square-o" aria-hidden="true"></i>''
when penta_1 = ''missed'' then ''<i style="color:red;font-size:3vh" class="fa fa-window-close-o" aria-hidden="true"></i>''
else ''NA''
end
else ''<i style="color:green;font-size:3vh" class="fa fa-check-square-o" aria-hidden="true"></i>''
end as "PEN TA 1",
case
when opv_1 <> ''given'' then
case
when opv_1 = ''not_given'' then ''<i style="font-size:3vh" class="fa fa-square-o" aria-hidden="true"></i>''
when opv_1 = ''missed'' then ''<i style="color:red;font-size:3vh" class="fa fa-window-close-o" aria-hidden="true"></i>''
else ''NA''
end
else ''<i style="color:green;font-size:3vh" class="fa fa-check-square-o" aria-hidden="true"></i>''
end as "OPV 1",
case
when f_ipv_1_01 <> ''given'' then
case
when f_ipv_1_01 = ''not_given'' then ''<i style="font-size:3vh" class="fa fa-square-o" aria-hidden="true"></i>''
when f_ipv_1_01 = ''missed'' then ''<i style="color:red;font-size:3vh" class="fa fa-window-close-o" aria-hidden="true"></i>''
else ''NA''
end
else ''<i style="color:green;font-size:3vh" class="fa fa-check-square-o" aria-hidden="true"></i>''
end as "F IPV 1 01",
case
when penta_2 <> ''given'' then
case
when penta_2 = ''not_given'' then ''<i style="font-size:3vh" class="fa fa-square-o" aria-hidden="true"></i>''
when penta_2 = ''missed'' then ''<i style="color:red;font-size:3vh" class="fa fa-window-close-o" aria-hidden="true"></i>''
else ''NA''
end
else ''<i style="color:green;font-size:3vh" class="fa fa-check-square-o" aria-hidden="true"></i>''
end as "PENTA 2",
case
when opv_2 <> ''given'' then
case
when opv_2 = ''not_given'' then ''<i style="font-size:3vh" class="fa fa-square-o" aria-hidden="true"></i>''
when opv_2 = ''missed'' then ''<i style="color:red;font-size:3vh" class="fa fa-window-close-o" aria-hidden="true"></i>''
else ''NA''
end
else ''<i style="color:green;font-size:3vh" class="fa fa-check-square-o" aria-hidden="true"></i>''
end as "OPV 2",
case
when penta_3 <> ''given'' then
case
when penta_3 = ''not_given'' then ''<i style="font-size:3vh" class="fa fa-square-o" aria-hidden="true"></i>''
when penta_3 = ''missed'' then ''<i style="color:red;font-size:3vh" class="fa fa-window-close-o" aria-hidden="true"></i>''
else ''NA''
end
else ''<i style="color:green;font-size:3vh" class="fa fa-check-square-o" aria-hidden="true"></i>''
end as "PEN TA 3",
case
when opv_3 <> ''given'' then
case
when opv_3 = ''not_given'' then ''<i style="font-size:3vh" class="fa fa-square-o" aria-hidden="true"></i>''
when opv_3 = ''missed'' then ''<i style="color:red;font-size:3vh" class="fa fa-window-close-o" aria-hidden="true"></i>''
else ''NA''
end
else ''<i style="color:green;font-size:3vh" class="fa fa-check-square-o" aria-hidden="true"></i>''
end as "OPV 3",
case
when f_ipv_2_01 <> ''given'' then
case
when f_ipv_2_01 = ''not_given'' then ''<i style="font-size:3vh" class="fa fa-square-o" aria-hidden="true"></i>''
when f_ipv_2_01 = ''missed'' then ''<i style="color:red;font-size:3vh" class="fa fa-window-close-o" aria-hidden="true"></i>''
else ''NA''
end
else ''<i style="color:green;font-size:3vh" class="fa fa-check-square-o" aria-hidden="true"></i>''
end as "F IPV 2 01",
case
when vitamin_a <> ''given'' then
case
when vitamin_a = ''not_given'' then ''<i style="font-size:3vh" class="fa fa-square-o" aria-hidden="true"></i>''
when vitamin_a = ''missed'' then ''<i style="color:red;font-size:3vh" class="fa fa-window-close-o" aria-hidden="true"></i>''
else ''NA''
end
else ''<i style="color:green;font-size:3vh" class="fa fa-check-square-o" aria-hidden="true"></i>''
end as "VITA MIN A",
case
when opv_booster <> ''given'' then
case
when opv_booster = ''not_given'' then ''<i style="font-size:3vh" class="fa fa-square-o" aria-hidden="true"></i>''
when opv_booster = ''missed'' then ''<i style="color:red;font-size:3vh" class="fa fa-window-close-o" aria-hidden="true"></i>''
else ''NA''
end
else ''<i style="color:green;font-size:3vh" class="fa fa-check-square-o" aria-hidden="true"></i>''
end as "OPV BOOS TER",
case
when dpt_booster <> ''given'' then
case
when dpt_booster = ''not_given'' then ''<i style="font-size:3vh" class="fa fa-square-o" aria-hidden="true"></i>''
when dpt_booster = ''missed'' then ''<i style="color:red;font-size:3vh" class="fa fa-window-close-o" aria-hidden="true"></i>''
else ''NA''
end
else ''<i style="color:green;font-size:3vh" class="fa fa-check-square-o" aria-hidden="true"></i>''
end as "DPT BOOS TER",
case
when measles_rubella_1 <> ''given'' then
case
when measles_1 = ''given'' then ''<i style="color:green;font-size:3vh" class="fa fa-check-square-o" aria-hidden="true"></i>''
when measles_rubella_1 = ''not_given'' then ''<i style="font-size:3vh" class="fa fa-square-o" aria-hidden="true"></i>''
when measles_rubella_1 = ''missed'' then ''<i style="color:red;font-size:3vh" class="fa fa-window-close-o" aria-hidden="true"></i>''
else ''NA''
end
else ''<i style="color:green;font-size:3vh" class="fa fa-check-square-o" aria-hidden="true"></i>''
end as "MR1 / MEA SLES 1",
case
when measles_rubella_2 <> ''given'' then
case
when measles_2 = ''given'' then ''<i style="color:green;font-size:3vh" class="fa fa-check-square-o" aria-hidden="true"></i>''
when measles_rubella_2 = ''not_given''  then ''<i style="font-size:3vh" class="fa fa-square-o" aria-hidden="true"></i>''
when measles_rubella_2 = ''missed''  then ''<i style="color:red;font-size:3vh" class="fa fa-window-close-o" aria-hidden="true"></i>''
else ''NA''
end
else ''<i style="color:green;font-size:3vh" class="fa fa-check-square-o" aria-hidden="true"></i>''
end as "MR2 / MEA SLES 2",
case
when rota_virus_1 <> ''given'' then
case
when rota_virus_1 = ''not_given'' then ''<i style="font-size:3vh" class="fa fa-square-o" aria-hidden="true"></i>''
when rota_virus_1 = ''missed'' then ''<i style="color:red;font-size:3vh" class="fa fa-window-close-o" aria-hidden="true"></i>''
else ''NA''
end
else ''<i style="color:green;font-size:3vh" class="fa fa-check-square-o" aria-hidden="true"></i>''
end as "ROTA VIRUS 1",
case
when rota_virus_2 <> ''given'' then
case
when rota_virus_2 = ''not_given'' then ''<i style="font-size:3vh" class="fa fa-square-o" aria-hidden="true"></i>''
when rota_virus_2 = ''missed'' then ''<i style="color:red;font-size:3vh" class="fa fa-window-close-o" aria-hidden="true"></i>''
else ''NA''
end
else ''<i style="color:green;font-size:3vh" class="fa fa-check-square-o" aria-hidden="true"></i>''
end as "ROTA VIRUS 2",
case
when rota_virus_3 <> ''given'' then
case
when rota_virus_3 = ''not_given'' then ''<i style="font-size:3vh" class="fa fa-square-o" aria-hidden="true"></i>''
when rota_virus_3 = ''missed'' then ''<i style="color:red;font-size:3vh" class="fa fa-window-close-o" aria-hidden="true"></i>''
else ''NA''
end
else ''<i style="color:green;font-size:3vh" class="fa fa-check-square-o" aria-hidden="true"></i>''
end as "ROTA VIRUS 3"
from
(
select
r.family_id as "Family ID",
r.name as "Name",
mother.first_name || '' '' || mother.last_name as "Mother Name",
to_char(r.dob, ''DD/MM/YYYY'') || '' ('' || extract(year
from
age(r.dob)) * 12 + extract(months
from
age(r.dob)) || ''m '' || extract(days
from
age(r.dob)) || ''d'' || '')'' as "DOB",
r.id,
r.age as days,
hepatitis,
opv_0,
bcg,
penta_1,
opv_1,
f_ipv_1_01,
penta_2,
opv_2,
penta_3,
opv_3,
f_ipv_2_01,
measles_1,
vitamin_a,
opv_booster,
dpt_booster,
measles_2,
measles_rubella_1,
measles_rubella_2,
rota_virus_1,
rota_virus_2,
rota_virus_3
from
(
select
mem.family_id,
mem.id,
mem.first_name || '' '' || mem.last_name as name,
current_date - dob as age,
mem.mother_id,
mem.dob,
vaccine_status(mem.dob,
''HEPATITIS_B_0'',
mem.id) as hepatitis,
vaccine_status(mem.dob,
''OPV_0'',
mem.id) as opv_0,
vaccine_status(mem.dob,
''BCG'',
mem.id) as bcg,
vaccine_status(mem.dob,
''PENTA_1'',
mem.id) as penta_1,
vaccine_status(mem.dob,
''OPV_1'',
mem.id) as opv_1,
vaccine_status(mem.dob,
''F_IPV_1_01'',
mem.id) as f_ipv_1_01,
vaccine_status(mem.dob,
''PENTA_2'',
mem.id) as penta_2,
vaccine_status(mem.dob,
''OPV_2'',
mem.id) as opv_2,
vaccine_status(mem.dob,
''PENTA_3'',
mem.id) as penta_3,
vaccine_status(mem.dob,
''OPV_3'',
mem.id) as opv_3,
vaccine_status(mem.dob,
''F_IPV_2_01'',
mem.id) as f_ipv_2_01,
vaccine_status(mem.dob,
''MEASLES_1'',
mem.id) as measles_1,
vaccine_status(mem.dob,
''VITAMIN_A'',
mem.id) as vitamin_a,
vaccine_status(mem.dob,
''OPV_BOOSTER'',
mem.id) as opv_booster,
vaccine_status(mem.dob,
''DPT_BOOSTER'',
mem.id) as dpt_booster,
vaccine_status(mem.dob,
''MEASLES_2'',
mem.id) as measles_2,
vaccine_status(mem.dob,
''MEASLES_RUBELLA_1'',
mem.id) as measles_rubella_1,
vaccine_status(mem.dob,
''MEASLES_RUBELLA_2'',
mem.id) as measles_rubella_2,
vaccine_status(mem.dob,
''ROTA_VIRUS_1'',
mem.id) as rota_virus_1,
vaccine_status(mem.dob,
''ROTA_VIRUS_2'',
mem.id) as rota_virus_2,
vaccine_status(mem.dob,
''ROTA_VIRUS_3'',
mem.id) as rota_virus_3
from
imt_member mem
inner join imt_family fam on
mem.family_id = fam.family_id
inner join location_hierchy_closer_det lhcd on
lhcd.child_id = fam.location_id
and lhcd.parent_id = #location_id#
where
(current_date - dob) <= 730
and fam.basic_state in (''VERIFIED'',
''NEW'')
and mem.basic_state in (''VERIFIED'',
''NEW'') #limit_offset#) r
left join imt_member mother on
r.mother_id = mother.id ) res',true,'ACTIVE','34911773-173f-4b88-9aba-f9896e5ee7a0'),
	 (297,1,'2019-02-11 17:56:41.269',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Penta 3 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.penta3 is not null
	and c.is_valid_for_tracking_report = true
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','352ee1b6-4529-4df7-a901-37c7d9abecb0'),
	 (321,1,'2019-02-12 16:17:59.958',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','5862b3cb-d363-4ddd-a2c6-a74c7cd07adf');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1232,409,'2019-07-24 10:19:01.972',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','8b04b680-24e3-4625-ba3e-9487231b4f58'),
	 (939,60512,'2019-03-14 19:43:53.4',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 admitted_child_ids as(
	select distinct
	child_cmtc_nrc_admission_detail.id
	from health_infrastructure_details
	inner join child_cmtc_nrc_admission_detail on health_infrastructure_details.id = child_cmtc_nrc_admission_detail.screening_center
	inner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id
	where health_infrastructure_details.location_id in (
		select child_id from location_hierchy_closer_det where parent_id = #location_id#
	) and child_cmtc_nrc_admission_detail.admission_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	#limit_offset#
),det as (
	select child_cmtc_nrc_admission_detail.child_id,
	avg(child_cmtc_nrc_weight_detail.weight) as avg_wt,
	child_cmtc_nrc_admission_detail.screening_center
	from admitted_child_ids
	inner join child_cmtc_nrc_admission_detail on admitted_child_ids.id = child_cmtc_nrc_admission_detail.id
	inner join child_cmtc_nrc_weight_detail on child_cmtc_nrc_weight_detail.admission_id = child_cmtc_nrc_admission_detail.id
	group by child_cmtc_nrc_admission_detail.child_id,child_cmtc_nrc_admission_detail.screening_center
	having avg(child_cmtc_nrc_weight_detail.weight)>5
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No", 
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
get_location_hierarchy(imt_family.location_id) as "Location",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
imt_member.dob as "Child DOB",
health_infrastructure_details.name as "Health Infrastructure"
from det
inner join imt_member on imt_member.id = det.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on det.screening_center = health_infrastructure_details.id',true,'ACTIVE','ae2fc247-285f-4674-bce2-acc54586e300'),
	 (322,1,'2019-02-12 16:17:59.967',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--LBW Child Registered (1 - 1.5 kg)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.delivery_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.delivery_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.birth_weight is not null and c.birth_weight >= 1.0 and c.birth_weight < 1.5
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','bfde3ed7-7ee4-48dd-ae0e-76e2b7db5084'),
	 (993,409,'2019-04-12 16:53:08.426',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','307ad64f-d6f0-40aa-b18b-66b77374d390'),
	 (995,64189,'2019-04-12 17:06:52.612',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','de623ce4-15ab-4f46-9aeb-c987abfabb47'),
	 (298,1,'2019-02-11 17:57:57.882',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','fc82ab54-0e76-4349-8d66-aeafd28d3f37'),
	 (301,1,'2019-02-11 17:58:55.704',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--FIPV 2 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.f_ipv2 is not null
	and c.is_valid_for_tracking_report = true
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','146d3fc6-5f36-4cb8-97be-e47ff03a6063'),
	 (558,57698,'2019-02-18 12:23:44.192',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','e33495aa-215f-402e-85f0-2e6d2a4a4e33'),
	 (68,1027,'2018-08-30 11:37:25.964',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 ldp as(
  select location_id,high_risk,prev_anemia,prev_caesarian,prev_aph_pph,pre_preg_pre_eclampsia,multipara,prev_abortion,chro_tb,chro_diabetes,chro_heart_kidney
  ,chro_hiv,chro_sickle,chro_thalessemia
  from rch_current_state_pregnancy_analytics_data,location_hierchy_closer_det
  where rch_current_state_pregnancy_analytics_data.location_id = location_hierchy_closer_det.child_id and location_hierchy_closer_det.parent_id = #location_id#
 ), w as (
    select
location_hierchy_closer_det.parent_id as loc_id,
    coalesce(sum(high_risk),0) as high_risk_mother,
    coalesce(sum(prev_anemia),0) as prev_anemia,
    coalesce(sum(prev_caesarian),0) as prev_caesarian,
    coalesce(sum(prev_aph_pph),0) as prev_aph_pph,
    coalesce(sum(pre_preg_pre_eclampsia),0) as pre_preg_pre_eclampsia,
    coalesce(sum(prev_abortion),0) as abortion,
    coalesce(sum(multipara),0) as multipara,
    coalesce(sum(chro_tb),0) as tb,
    coalesce(sum(chro_diabetes),0) as diabetes,
    coalesce(sum(chro_heart_kidney),0) as heart_kidney,
    coalesce(sum(chro_hiv),0) as hiv,
    coalesce(sum(chro_sickle),0) as sickle,
    coalesce(sum(chro_thalessemia),0) as thalessemia
    from (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth=1)as t 
inner join location_hierchy_closer_det on t.child_id = location_hierchy_closer_det.parent_id 
inner join ldp on ldp.location_id = location_hierchy_closer_det.child_id
group by location_hierchy_closer_det.parent_id 
),s as (
select case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name
else lm.name end as "Location Name",
    coalesce(high_risk_mother,0) as "Total No of high risk mothers",
    coalesce(prev_anemia,0) as "Anemia",
	round(coalesce(case when high_risk_mother = 0 then 0 else prev_anemia*100.0/high_risk_mother end,0),2)  as "percent_col_Anemia",
    coalesce(prev_caesarian,0) as "Caessarian Section",
	round(coalesce(case when high_risk_mother = 0 then 0 else prev_caesarian*100.0/high_risk_mother end,0),2) as "percent_col_Caessarian Section",
    coalesce(prev_aph_pph,0)  as "Ante Partum Haemorrhage/Post partum Haemorrhage",
	round(coalesce(case when high_risk_mother = 0 then 0 else prev_aph_pph*100.0/high_risk_mother end,0),2) as "percent_col_Ante Partum Haemorrhage/Post partum Haemorrhage",
    coalesce(pre_preg_pre_eclampsia,0) as "Pre-Eclampsia/Eclampsia",
	round(coalesce(case when high_risk_mother = 0 then 0 else pre_preg_pre_eclampsia*100.0/high_risk_mother end,0),2) as "percent_col_Pre-Eclampsia/Eclampsia",
    coalesce(abortion,0) as "Abortion",
	round(coalesce(case when high_risk_mother = 0 then 0 else abortion*100.0/high_risk_mother end,0),2) as "percent_col_Abortion",
    coalesce(multipara,0) as "Ectopic Preg. /Multiple Pregnancy",
	round(coalesce(case when high_risk_mother = 0 then 0 else multipara*100.0/high_risk_mother end,0),2) as "percent_col_Ectopic Preg. /Multiple Pregnancy",
    coalesce(tb,0) as "Tuberculosis",
	round(coalesce(case when high_risk_mother = 0 then 0 else tb*100.0/high_risk_mother end,0),2) as "percent_col_Tuberculosis",
    coalesce(diabetes,0) as "Diabetes mellitus",
	round(coalesce(case when high_risk_mother = 0 then 0 else diabetes*100.0/high_risk_mother end,0),2) as "percent_col_Diabetes mellitus",
    coalesce(heart_kidney,0) as "Heart / kidney disease",
	round(coalesce(case when high_risk_mother = 0 then 0 else heart_kidney*100.0/high_risk_mother end,0),2) as "percent_col_Heart / kidney disease",
    coalesce(hiv,0) as "HIV",
	round(coalesce(case when high_risk_mother = 0 then 0 else hiv*100.0/high_risk_mother end,0),2) as "percent_col_HIV",
    coalesce(sickle,0) as "Sickle cell Anaemia",
	round(coalesce(case when high_risk_mother = 0 then 0 else sickle*100.0/high_risk_mother end,0),2) as "percent_col_Sickle cell Anaemia",
    coalesce(thalessemia,0) as "Thalassaemia",
	round(coalesce(case when high_risk_mother = 0 then 0 else thalessemia*100.0/high_risk_mother end,0),2) as "percent_col_Thalassaemia"
from (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth=1 limit 100) as t
inner join location_master lm on lm.id = t.child_id
left join w on w.loc_id = lm.id
cross join prefered_language
order by lm.name
)
select row_number() over() as "Sr no.",r.* from
(select * from s
union all
select
    ''<b>Total<b>'',
    coalesce(sum(high_risk_mother),0),
	coalesce(sum(prev_anemia),0), 
	round(case when sum(high_risk_mother) = 0 then 0 else sum(prev_anemia)*100.0/sum(high_risk_mother) end,2),
    coalesce(sum(prev_caesarian),0), 
	round(case when sum(high_risk_mother) = 0 then 0 else sum(prev_caesarian)*100.0/sum(high_risk_mother) end,2),
	coalesce(sum(prev_aph_pph),0), 
	round(case when sum(high_risk_mother) = 0 then 0 else sum(prev_aph_pph)*100.0/sum(high_risk_mother) end,2),
	coalesce(sum(pre_preg_pre_eclampsia),0), 
	round(case when sum(high_risk_mother) = 0 then 0 else sum(pre_preg_pre_eclampsia)*100.0/sum(high_risk_mother) end,2),
	coalesce(sum(abortion),0), 
	round(case when sum(high_risk_mother) = 0 then 0 else sum(abortion)*100.0/sum(high_risk_mother) end,2),
	coalesce(sum(multipara),0),
	round(case when sum(high_risk_mother) = 0 then 0 else sum(multipara)*100.0/sum(high_risk_mother) end,2),
	coalesce(sum(tb),0),
	round(case when sum(high_risk_mother) = 0 then 0 else sum(tb)*100.0/sum(high_risk_mother) end,2),
	coalesce(sum(diabetes),0),
	round(case when sum(high_risk_mother) = 0 then 0 else sum(diabetes)*100.0/sum(high_risk_mother) end,2),
	coalesce(sum(heart_kidney),0),
	round(case when sum(high_risk_mother) = 0 then 0 else sum(heart_kidney)*100.0/sum(high_risk_mother) end,2),
	coalesce(sum(hiv),0),
	round(case when sum(high_risk_mother) = 0 then 0 else sum(hiv)*100.0/sum(high_risk_mother) end,2),
	coalesce(sum(sickle),0), 
	round(case when sum(high_risk_mother) = 0 then 0 else sum(sickle)*100.0/sum(high_risk_mother) end,2),
	coalesce(sum(thalessemia),0),
	round(case when sum(high_risk_mother) = 0 then 0 else sum(thalessemia)*100.0/sum(high_risk_mother) end,2)	
from w) r',true,'ACTIVE','66a7a982-2b56-464d-974e-17891d962453'),
	 (303,1,'2019-02-11 18:00:01.243',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Measles given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and measles is not null
	and c.is_valid_for_tracking_report = true
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','faedd03f-9b81-414d-a2d2-4b479519d97a');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (232,57698,'2019-02-04 17:39:08.234',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','b8b1846f-a52f-410f-ab65-a58f28426134'),
	 (578,1,'2019-02-18 13:16:42.087',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','90896479-5a2e-4637-a87f-3cb19df291fd'),
	 (228,57698,'2019-02-04 13:11:42.667',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Children Registered from 1st April(Services Provided to the Children Registered during the Year ( 1 to 6 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 years as ( 
	select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, 
	cast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date
	from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc
), child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and c.is_valid_for_tracking_report = true
	and l.parent_id = #location_id#
	and y.financial_year = ''#financial_year#''
	and c.member_id is not null
	and c.dob between y.from_date and y.too_date
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','66a1c2fd-34a7-4383-9476-42d538abfcce'),
	 (341,1,'2019-02-13 11:23:47.607',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, c.delivery_location_id as loc_id,m.gender,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.delivery_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.member_id is not null
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when child_det.gender = ''M'' then ''Male'' else ''Female'' end as "Gender",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','77c29a9b-b6ac-4964-8831-8ccd13f941d8'),
	 (134,58981,'2019-01-21 10:48:51.841',1,'2021-01-13 20:22:06.427965','limit_offset,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 preg_women as (
	select 
	rch_pregnancy_analytics_details.member_current_location_id as loc_id,
	imt_member.first_name || '' '' || imt_member.middle_name || '' '' || imt_member.last_name || '' ('' || imt_member.unique_health_id || '')'' || ''<br>'' || imt_member.family_id as member_det,
	to_char(imt_member.dob, ''DD/MM/YYYY'') as dob,
	to_char(imt_member.lmp, ''DD/MM/YYYY'') as lmp,
    rch_pregnancy_analytics_details.mobile_number as contactPersonMobileNo,
	case when imt_member.edd is null then cast(''N/A'' as text) else to_char(imt_member.edd, ''DD/MM/YYYY'') end as edd
	from location_hierchy_closer_det ldp, imt_member,rch_pregnancy_analytics_details
	where ldp.child_id = rch_pregnancy_analytics_details.member_current_location_id
	and imt_member.id = rch_pregnancy_analytics_details.member_id
	and ldp.parent_id = #location_id#
	and rch_pregnancy_analytics_details.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')
	and rch_pregnancy_analytics_details.preg_reg_state in (''PENDING'',''PREGNANT'')
	order by imt_member.lmp
	#limit_offset#
), loc as (
	select distinct loc_id from preg_women
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi  
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
preg_women.member_det as "Member Details", 
loc_det.aoi as "Location",
preg_women.dob as "Date of Birth",
preg_women.lmp as "LMP Date",
preg_women.edd as "Estimated Delivery Date",
preg_women.contactPersonMobileNo as "Contact Person MobileNo",
fhw_det.fhw as "FHW Details"
from preg_women 
inner join loc_det on preg_women.loc_id = loc_det.loc_id 
left join fhw_det on preg_women.loc_id = fhw_det.loc_id;',true,'ACTIVE','dfb59d77-a587-4a35-9717-d9b229bedaaa'),
	 (1203,409,'2019-07-15 11:58:46.851',1,'2021-01-13 20:22:06.427965','to_month,from_month,location_id','with loc_det as (
select lm.id as loc_id ,lm.english_name as name,lm.location_code from location_hierchy_closer_det lh,location_master lm
where lm.id = lh.child_id and lh.parent_id = #location_id# and lh.depth= 1
),dates as (
select to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM-DD-YYYY'') as from_date 
,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 milliseconds'' as to_date 
),jsy_payment_det as (
select lh.parent_id,count(*) as tot_jsy_payment 
from rch_pregnancy_analytics_details rpa,location_hierchy_closer_det lh,dates
where lh.child_id = rpa.native_location_id and lh.parent_id in (select loc_id from loc_det)
and rpa.jsy_payment_date between dates.from_date and dates.to_date
group by lh.parent_id
),report_det as (
select 
	jsy_payment_det.tot_jsy_payment,loc_det.name,loc_det.loc_id,loc_det.location_code
from loc_det 
left join jsy_payment_det jsy_payment_det on loc_det.loc_id = jsy_payment_det.parent_id
order by loc_det.name
)
select ROW_NUMBER () OVER (ORDER BY report_det.loc_id) as "S.N."
,location_code as "Location Code"
,name as "Location"
,case when tot_jsy_payment is null then 0 else tot_jsy_payment end as "Number of JSY beneficiaries paid in month"
,case when tot_jsy_payment is null then 0 else tot_jsy_payment end as "Total No. of Transactions for JSY beneficiaries"
,case when tot_jsy_payment is null then 0 else tot_jsy_payment end as "Total No of transations of Jsy beneficiaries through DBT"
,case when tot_jsy_payment is null then 0 else 100 end as "% of JSY beneficaries paid through DBT"
from report_det
union all
select null, null, ''Total'', sum(tot_jsy_payment), sum(tot_jsy_payment),sum(tot_jsy_payment),case when sum(tot_jsy_payment) = 0 then 0 else 100 end
from report_det',true,'ACTIVE','f19c65cf-dc3c-4459-8986-08ec6bb85d15'),
	 (330,1,'2019-02-12 17:38:22.15',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','f7988370-fbab-4d8f-9736-804725b00a8f'),
	 (559,57698,'2019-02-18 12:23:44.215',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
	where l.child_id = c.opv0_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.opv0 is not null
        group by m.id,f.location_id,c.dob,opv0
	having case when extract(month from opv0) > 3 
	then concat(extract(year from opv0), ''-'', extract(year from opv0) + 1)
	else concat(extract(year from opv0) - 1, ''-'', extract(year from opv0)) end = 
		case when #financial_year# is null then 
			case when extract(month from current_date) > 3 
			then concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)
			else concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end
		else ''#financial_year#'' end
		
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','a9a7d47d-cb7f-4384-afd6-74093a13b7af'),
	 (387,1,'2019-02-13 12:19:31.418',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--OPV 1 given(Immunization Services Provided to Children with Date of Birth)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.opv1 is not null
	and c.is_valid_for_tracking_report = true
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','465b4f9c-6cd4-44b6-a891-34d7d6b674c0'),
	 (331,1,'2019-02-12 17:38:22.153',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','0475dc1b-40f3-431c-bada-b248b904a396');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (332,1,'2019-02-12 17:38:22.156',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','d5347419-68b0-4db1-b544-8b50a314cdba'),
	 (136,58981,'2019-01-21 11:47:42.085',1,'2021-01-13 20:22:06.427965','limit_offset,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 infants as (
	select rch_child_analytics_details.loc_id as loc_id,
	imt_member.first_name || '' '' || imt_member.middle_name || '' '' || imt_member.last_name || '' ('' || imt_member.unique_health_id || '')'' || ''<br>'' || imt_member.family_id as member_det,
	to_char(imt_member.dob, ''DD/MM/YYYY'') as dob
	from location_hierchy_closer_det, rch_child_analytics_details, imt_member
	where location_hierchy_closer_det.parent_id = #location_id#
	and location_hierchy_closer_det.child_id = rch_child_analytics_details.loc_id
	and rch_child_analytics_details.dob >= current_date - interval ''1 year''
	and rch_child_analytics_details.member_id = imt_member.id
	and rch_child_analytics_details.death_date is null
	order by rch_child_analytics_details.dob
	#limit_offset#
), loc as (
	select distinct loc_id from infants
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
infants.member_det as "Member Details", 
loc_det.aoi as "Location",
infants.dob as "Date of Birth",
fhw_det.fhw as "FHW Details"
from infants 
inner join loc_det on infants.loc_id = loc_det.loc_id 
left join fhw_det on infants.loc_id = fhw_det.loc_id;',true,'ACTIVE','52cc79dd-3388-4acd-94ed-2aa008bc535b'),
	 (1075,63746,'2019-05-01 14:22:13.412',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #location_id#',true,'ACTIVE','6610870b-e18f-48cc-be89-67dc6c98f09e'),
	 (919,60512,'2019-03-13 15:27:08.103',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_ids as(
	select distinct child_cmtc_nrc_admission_detail.child_id,child_cmtc_nrc_admission_detail.screening_center 
	from health_infrastructure_details
	inner join child_cmtc_nrc_admission_detail on health_infrastructure_details.id = child_cmtc_nrc_admission_detail.screening_center
	inner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id
	where health_infrastructure_details.location_id in (
		select child_id from location_hierchy_closer_det where parent_id = #location_id#
	) and child_cmtc_nrc_admission_detail.admission_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No", 
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
get_location_hierarchy(imt_family.location_id) as "Location",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
imt_member.dob as "Child DOB",
health_infrastructure_details.name as "Health Infrastructure"
from child_ids
inner join imt_member on imt_member.id = child_ids.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on child_ids.screening_center = health_infrastructure_details.id',true,'ACTIVE','382a6d15-cb79-4fad-aded-7e2915bd1a4f'),
	 (1076,63746,'2019-05-01 14:22:13.431',1,'2021-01-13 20:22:06.427965','limit_offset,age_group_or_child_count,location_id','with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)
,age_group as (
    select ''15-19'' as age_group, current_date - interval ''19 years'' as from_date, current_date - interval ''15 years''  as to_date
    union
    select ''20-24'' as age_group,  current_date - interval ''24 years'' as from_date, current_date - interval ''19 years'' - interval ''1 day''  as to_date
    union
    select ''25-29'' as age_group, current_date - interval ''29 years'' as from_date, current_date - interval ''24 years'' - interval ''1 day''  as to_date
    union
    select ''30-34'' as age_group,  current_date - interval ''34 years'' as from_date, current_date - interval ''29 years'' - interval ''1 day''  as to_date
    union
    select ''35-39'' as age_group, current_date - interval ''39 years'' as from_date, current_date - interval ''34 years'' - interval ''1 day''  as to_date
    union
    select ''40-44'' as age_group,  current_date - interval ''44 years'' as from_date, current_date - interval ''39 years'' - interval ''1 day''  as to_date
    union
    select ''45-49'' as age_group, current_date - interval ''49 years'' as from_date, current_date - interval ''44 years'' - interval ''1 day''  as to_date
)
,member_location as (
	select m.member_id, m.loc_id  from rch_eligible_couple_analytics m
	inner join age_group on m.dob between age_group.from_date and age_group.to_date
	inner join locations on locations.child_id = m.loc_id
       where ( case when #age_group_or_child_count# is null then age_group in (''15-19'',''20-24'',''25-29'',''30-34'',''35-39'',''40-44'',''45-49'') else age_group = (''#age_group_or_child_count#'') end)
        #limit_offset#
)
,loc_det as(
	select member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id
	,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id
	from location_master,location_type_master,member_location 
	where 
	location_master.id = member_location.loc_id and location_type_master.type = location_master.type
)
select 
	 ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
	mem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as "Member Name",
	fam.family_id as "Family Id",to_char(r.dob, ''DD/MM/YYYY'') as "Birth Date",
	string_agg(lm.name,''> '' order by lhcd.depth desc) as "Location Hierarchy"  
from rch_eligible_couple_analytics r
inner join loc_det on loc_det.member_id = r.member_id
inner join imt_member mem on mem.id = r.member_id
inner join imt_family fam on mem.family_id = fam.family_id
inner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id
inner join location_master lm on lm.id = lhcd.parent_id
group by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;',true,'ACTIVE','db954db4-ea66-4bdb-bf2f-add24f94f2ee'),
	 (384,1,'2019-02-13 12:19:31.39',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','2bf58ee5-fecc-4695-8262-f20dec794340'),
	 (1242,409,'2019-07-24 10:35:23.45',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','538ef871-a672-43b8-98f5-ceae07985651'),
	 (576,1,'2019-02-18 13:14:51.772',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','09165bf6-f24f-4759-9947-a453d005d504'),
	 (259,1,'2019-02-05 12:17:58.845',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','87ccc84a-f4ab-4d45-8849-ccaf5990f2ea'),
	 (230,57698,'2019-02-04 17:24:27',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Children weighed(Services Provided to the Children Registered during the Year ( 1 to 6 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 years as ( 
	select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, 
	cast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date
	from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc
), child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.is_valid_for_tracking_report = true
	and y.financial_year = ''#financial_year#''
	and c.birth_weight is not null
	and c.dob between y.from_date and y.too_date
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','d9a0916b-cb82-4a36-aacd-8ce9feb269b3');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (231,57698,'2019-02-04 17:33:03.349',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Out of weighed, less than 2.5 kg (1 to 6 Years)(Services Provided to the Children Registered during the Year ( 1 to 6 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 years as ( 
	select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, 
	cast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date
	from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc
), child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.is_valid_for_tracking_report = true
	and y.financial_year = ''#financial_year#''
	and c.birth_weight is not null and c.birth_weight < 2.5
	and c.dob between y.from_date and y.too_date
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','7ef65db5-50a6-45ed-8455-e1743285f1cd'),
	 (1395,66522,'2019-08-28 15:05:51.328',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','ff4886fb-1032-4aff-b6cb-9c1700e9b278'),
	 (577,1,'2019-02-18 13:14:51.783',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
	where l.child_id = c.penta3_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.penta3 is not null
	group by m.id, f.location_id, c.dob, penta3
	having case when extract(month from penta3) > 3 
	then concat(extract(year from penta3), ''-'', extract(year from penta3) + 1)
	else concat(extract(year from penta3) - 1, ''-'', extract(year from penta3)) end = 
		case when #financial_year# is null then 
			case when extract(month from current_date) > 3 
			then concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)
			else concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end
		else ''#financial_year#'' end
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','9b6acb68-61fa-49e7-82f9-d8e0f6228bfb'),
	 (574,1,'2019-02-18 13:13:17.564',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','e01c36e0-49dd-46db-8f68-9fead02e0b9b'),
	 (641,409,'2019-02-19 19:22:01.854',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','2a4797bd-57a6-4f14-928b-c93d7977624c'),
	 (1024,60512,'2019-04-22 16:47:21.074',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id','--1 ANC(ANC Services Provided During The Year)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date,
to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),member_det as (
	select r.member_id, r.anc1_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.anc1,''DD/MM/YYYY'') as anc_date
	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, parameters p
	where r.anc1_location_id  = l.child_id
	and l.parent_id = p.location_id
	and r.anc1 between p.from_date and p.to_date
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))	
	order by r.anc1
	#limit_offset#
), loc_det as (
	select loc.loc_id, 
string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.anc_date as "Anc date",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','2616128d-5e83-4710-8bab-367d78b603d0'),
	 (282,1,'2019-02-11 17:06:17.021',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','c63d667e-0a9c-4719-b629-e45b0ab4938e'),
	 (825,58981,'2019-03-06 18:25:55.206',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','187fbcf5-4b93-45b1-966e-9e0fb9154126'),
	 (717,409,'2019-02-27 13:25:43.237',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--180 IFA(LMP Based Pregnant Women Reg. for ANC Services)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
member_det as (
	select r.member_id, r.native_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.date_of_delivery,''DD/MM/YYYY'') as dod
	,r.ifa as ifa
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, imt_member m
	where r.member_id = m.id
	and r.ifa >= 180
	and r.native_location_id  = l.child_id
	and l.parent_id = #location_id#
	and r.lmp_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date)
	order by r.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
member_det.ifa as "IFA",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','420fb4e5-1a10-4747-a05f-e5f107f1f3b2'),
	 (834,58981,'2019-03-06 18:54:32.387',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--JSY Beneficiaries out of ANC registered(LMP Based JSY Report Of Registered ANCs)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 member_det as (
	select r.member_id, r.native_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, imt_family f, rch_pregnancy_registration_det p
	where r.member_id = m.id and r.native_location_id  = l.child_id and r.pregnancy_reg_id = p.id and m.family_id = f.family_id
	and r.jsy_beneficiary = true
	and l.parent_id = #location_id#
	and r.lmp_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date)
	order by p.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','28aac8e4-3930-4aab-b8cc-0ad2002c7be1');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1026,60512,'2019-04-22 16:49:22.321',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id','--2 ANC(ANC Services Provided During The Year)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date,
to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),member_det as (
	select r.member_id, r.anc2_location_id as loc_id,
	r.unique_health_id, r.family_id, 
	r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.anc2,''DD/MM/YYYY'') as anc_date
	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, parameters p
	where r.anc2_location_id  = l.child_id
	and l.parent_id = p.location_id
	and r.anc2 between p.from_date and p.to_date
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
	( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	order by r.anc2
	#limit_offset#
), loc_det as (
	select loc.loc_id,  
string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.anc_date as "Anc date",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','dd84de1c-228b-412e-b849-05a6a45fe54c'),
	 (280,58981,'2019-02-07 18:04:19.933',1,'2021-01-13 20:22:06.427965','from_date,to_date,user_id','select row_number() over () as "Sr. No",r1."Agent Name" || ''('' || r1."User Name" || '')'' as "Agent Name",r1."Login Count",r1."Logout Count",
r2.min as "First Login Time",r3.max as "Last Logout Time",
r3.max as "Break Time Out",r2.max as "Break Time In",
cast(to_timestamp(r3.max,''DD-MM-YYYY hh24:mi:ss'') -to_timestamp(r2.min,''DD-MM-YYYY hh24:mi:ss'') as text)  as "Total Login Hours",
r4.sum as "Total Productive Time",
cast(to_timestamp(r3.max,''DD-MM-YYYY hh24:mi:ss'') -to_timestamp(r2.min,''DD-MM-YYYY hh24:mi:ss'') - cast(r4.sum as interval) as text) as "Total Break Hours"	 
from
(select us.id,concat(us.first_name,'' '',us.last_name) as "Agent Name",us.user_name as "User Name",
sum(case when act.state = ''com.argusoft.imtecho.gvk.user.state.active'' then 1 else 0 end) as "Login Count",
sum(case when act.state = ''com.argusoft.imtecho.gvk.user.state.inactive'' then 1 else 0 end) as "Logout Count"
from gvk_activity_log act,um_user us
where act.created_by = us.id and
(#from_date# is null or act.created_on >=(case when #from_date# is null then ''01/01/1970'' else ''#from_date#'' end)\:\:Date)
and (#to_date# is null or act.created_on <(case when #to_date# is null then ''01/01/1970'' else (date (case when #to_date# is null then ''01/01/1970'' else ''#to_date#'' end) + integer ''1'')end)\:\:Date)
and (#user_id# is null or #user_id# = act.created_by) and us.role_id in (select role_id from um_role_category cat
inner join listvalue_field_value_detail list on cat.category_id = list.id and list.code = ''GVKEMRI_RO'')
group by us.id) r1 left join 
(
select created_by,to_char(cast(max(created_on) as timestamp),''DD-MM-YYYY HH24:MI:SS AM'') as "max",
to_char(cast(min(created_on) as timestamp),''DD-MM-YYYY HH24:MI:SS AM'') as "min"
from gvk_activity_log 
where
(#from_date# is null or created_on >=(case when #from_date# is null then ''01/01/1970'' else ''#from_date#'' end)\:\:Date)
and (#to_date# is null or created_on <(case when #to_date# is null then ''01/01/1970'' else (date (case when #to_date# is null then ''01/01/1970'' else ''#to_date#'' end) + integer ''1'')end)\:\:Date)
and (#user_id# is null or #user_id# = created_by) 
and state = ''com.argusoft.imtecho.gvk.user.state.active'' 
group by created_by 
) r2 on r1.id = r2.created_by left join 
(
select created_by,to_char(cast(max(created_on) as timestamp),''DD-MM-YYYY HH24:MI:SS AM'') as "max",
to_char(cast(min(created_on) as timestamp),''DD-MM-YYYY HH24:MI:SS AM'') as "min"
from gvk_activity_log 
where
(#from_date# is null or created_on >=(case when #from_date# is null then ''01/01/1970'' else ''#from_date#'' end)\:\:Date)
and (#to_date# is null or created_on <(case when #to_date# is null then ''01/01/1970'' else (date (case when #to_date# is null then ''01/01/1970'' else ''#to_date#'' end) + integer ''1'')end)\:\:Date) 
and state = ''com.argusoft.imtecho.gvk.user.state.inactive'' 
and (#user_id# is null or #user_id# = created_by)
group by created_by 
) r3 on r1.id = r3.created_by left join
(
select t1.created_by,
to_char(sum(cast(t1.max as timestamp) - cast(t1.min as timestamp)),''HH24:MI:SS'') as "sum" from
(select rn,created_by,min(created_on),max(created_on) from
(select created_by,created_on,
(ROW_NUMBER() OVER (PARTITION BY created_by ORDER BY created_on)-1)/2 as rn
from gvk_activity_log where
(#from_date# is null or created_on >=(case when #from_date# is null then ''01/01/1970'' else ''#from_date#'' end)\:\:Date)
and (#to_date# is null or created_on <(case when #to_date# is null then ''01/01/1970'' else (date (case when #to_date# is null then ''01/01/1970'' else ''#to_date#'' end) + integer ''1'')end)\:\:Date)
and (#user_id# is null or #user_id# = created_by) 
) t
group by created_by,rn
order by rn ) t1
group by t1.created_by
) r4 on r1.id = r4.created_by',true,'ACTIVE','bb823b7b-ed91-4e8b-8da2-c1cef760adba'),
	 (235,57698,'2019-02-04 17:49:39.861',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','ae55d163-f2be-4a43-a02e-4d591d5c60a0'),
	 (1084,63746,'2019-05-01 15:08:34.093',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #location_id#',true,'ACTIVE','45bcefa2-ea06-425f-9e78-310d52879979'),
	 (651,409,'2019-02-19 20:10:54.298',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','9b47efd6-2b76-4c1c-aeb2-fe77732756ee'),
	 (1028,60512,'2019-04-22 16:51:50.25',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id','--3 ANC(ANC Services Provided During The Year)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date,
to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),member_det as (
	select r.member_id, r.anc3_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.anc3,''DD/MM/YYYY'') as anc_date	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, parameters p
	where r.anc3_location_id  = l.child_id
	and l.parent_id = p.location_id
	and r.anc3 between p.from_date and p.to_date
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
	( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	order by r.anc3
	#limit_offset#
), loc_det as (
	select loc.loc_id,  
string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.anc_date as "Anc date",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','57429de9-bf15-486e-96b3-1fd5377bc832'),
	 (236,57698,'2019-02-04 17:49:39.877',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--DPT 1 given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 years as ( 
	select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, 
	cast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date
	from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc
), child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.is_valid_for_tracking_report = true
	and y.financial_year = ''#financial_year#''
	and c.dpt1 is not null
	and c.dob between y.from_date and y.too_date
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','1a76b66d-835b-466f-881f-8a91a3eb97b9'),
	 (1085,63746,'2019-05-01 15:08:34.105',1,'2021-01-13 20:22:06.427965','limit_offset,age_group_or_child_count,location_id','with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)
,age_group as (
    select ''15-19'' as age_group, current_date - interval ''19 years'' as from_date, current_date - interval ''15 years''  as to_date
    union
    select ''20-24'' as age_group,  current_date - interval ''24 years'' as from_date, current_date - interval ''19 years'' - interval ''1 day''  as to_date
    union
    select ''25-29'' as age_group, current_date - interval ''29 years'' as from_date, current_date - interval ''24 years'' - interval ''1 day''  as to_date
    union
    select ''30-34'' as age_group,  current_date - interval ''34 years'' as from_date, current_date - interval ''29 years'' - interval ''1 day''  as to_date
    union
    select ''35-39'' as age_group, current_date - interval ''39 years'' as from_date, current_date - interval ''34 years'' - interval ''1 day''  as to_date
    union
    select ''40-44'' as age_group,  current_date - interval ''44 years'' as from_date, current_date - interval ''39 years'' - interval ''1 day''  as to_date
    union
    select ''45-49'' as age_group, current_date - interval ''49 years'' as from_date, current_date - interval ''44 years'' - interval ''1 day''  as to_date
)
,member_location as (
	select m.member_id, m.loc_id  from rch_eligible_couple_analytics m
	inner join age_group on m.dob between age_group.from_date and age_group.to_date
	inner join locations on locations.child_id = m.loc_id
	where ( case when #age_group_or_child_count# is null then age_group in (''15-19'',''20-24'',''25-29'',''30-34'',''35-39'',''40-44'',''45-49'') else age_group = (''#age_group_or_child_count#'') end) 
	and  m.last_method_of_contraception = (''CONDOM'')  
        #limit_offset#
)
,loc_det as(
	select member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id
	,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id
	from location_master,location_type_master,member_location 
	where 
	location_master.id = member_location.loc_id and location_type_master.type = location_master.type
)
select 
	 ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
	mem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as "Member Name",
	fam.family_id as "Family Id",to_char(r.dob, ''DD/MM/YYYY'') as "Birth Date",
	string_agg(lm.name,''> '' order by lhcd.depth desc) as "Location Hierarchy"  
from rch_eligible_couple_analytics r
inner join loc_det on loc_det.member_id = r.member_id
inner join imt_member mem on mem.id = r.member_id
inner join imt_family fam on mem.family_id = fam.family_id
inner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id
inner join location_master lm on lm.id = lhcd.parent_id
group by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;',true,'ACTIVE','eb85a31b-d983-4434-96e7-01cad6cc8da8'),
	 (659,409,'2019-02-19 20:51:39.118',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','02f65bbd-25a8-4b19-a4a6-dff7038e75f0'),
	 (47,1027,'2018-05-28 12:04:54.401',1,'2021-01-13 20:22:06.427965','from_date,to_date,user_id','select row_number() over () as "Sr. No",concat(us.first_name,'' '',us.last_name,''('',us.user_name,'')'') as "Agent Name",
sum(r1."Total Verified Family") as "Total Verified Family",
sum(r1."Sent For Revirification Total Family") as "Sent For Revirification Total Family",
sum(r1."Total Successful Calls") as "Total Successful Calls",
sum(r1."Total Not Reachable Calls") as "Total Not Reachable Calls",
sum(r1."Total Cant Talk Right Now Calls") as "Total Cant Talk Right Now Calls",
sum(r1."Total Unresponsive Calls") as "Total Unresponsive Calls",
sum(r1."Total Calls Attempted") as "Total Calls Attempted"
from 
(select gv.created_by,
sum(case when gv.state = ''com.argusoft.imtecho.family.state.emri.verified.ok'' then 1 else 0 end) as "Total Verified Family",
sum(case when gv.state = ''com.argusoft.imtecho.family.state.emri.fhw.reverification'' then 1 else 0 end) as "Sent For Revirification Total Family",
sum(case when gv.status = ''com.argusoft.imtecho.gvk.call.success'' then 1 else 0 end) as "Total Successful Calls",
sum(case when gv.status = ''com.argusoft.imtecho.gvk.call.not-reachable'' then 1 else 0 end) as "Total Not Reachable Calls",
sum(case when gv.status = ''com.argusoft.imtecho.gvk.call.cant-talk'' then 1 else 0 end) as "Total Cant Talk Right Now Calls",
sum(case when gv.status = ''com.argusoft.imtecho.gvk.call.unresponsive'' then 1 else 0 end) as "Total Unresponsive Calls",
sum(1) as "Total Calls Attempted"
from gvk_verification gv
where (#from_date# is null or gv.created_on >=(case when #from_date# is null then ''01/01/1970'' else ''#from_date#'' end)\:\:Date)
and (#to_date# is null or gv.created_on <=(case when #to_date# is null then ''01/01/1970'' else (date (case when #to_date# is null then ''01/01/1970'' else ''#to_date#'' end) + integer ''1'')end)\:\:Date)
and (#user_id# is null or gv.created_by = (#user_id#))
group by gv.created_by 
union
select av.created_by,
0 as "Total Verified Family",
0 as "Sent For Revirification Total Family",
sum(case when av.status = ''com.argusoft.imtecho.gvk.call.success'' then 1 else 0 end) as "Total Successful Calls",
sum(case when av.status = ''com.argusoft.imtecho.gvk.call.not-reachable'' then 1 else 0 end) as "Total Not Reachable Calls",
sum(case when av.status = ''com.argusoft.imtecho.gvk.call.cant-talk'' then 1 else 0 end) as "Total Cant Talk Right Now Calls",
sum(case when av.status = ''com.argusoft.imtecho.gvk.call.unresponsive'' then 1 else 0 end) as "Total Unresponsive Calls",
sum(1) as "Total Calls Attempted"
from gvk_absent_verification av
where (#from_date# is null or av.created_on >=(case when #from_date# is null then ''01/01/1970'' else ''#from_date#'' end)\:\:Date)
and (#to_date# is null or av.created_on <=(case when #to_date# is null then ''01/01/1970'' else (date (case when #to_date# is null then ''01/01/1970'' else ''#to_date#'' end) + integer ''1'')end)\:\:Date)
and (#user_id# is null or av.created_by = (#user_id#))
group by av.created_by) r1,um_user us
where r1.created_by = us.id and us.role_id in (select role_id from um_role_category cat
inner join listvalue_field_value_detail list on cat.category_id = list.id and list.code = ''GVKEMRI_RO'')
group by us.id',true,'ACTIVE','88d44859-5039-4bd6-a9bd-342be3e36547');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1412,63746,'2019-09-13 12:24:39.242',1,'2021-01-13 20:22:06.427965',NULL,'with eligible_couple as (
	select 
	cast(''Eligible registration'' as text) as "service",
	count(1) as "total count",
	sum(case when eligible_registration_id != ''-1'' then 1 else 0 end) as "success count",
	sum(case when eligible_registration_id = ''-1''  then 1 else 0 end) as "failed count",
	0 as pending
	from anmol_master
)
,tracking as (
	select 
	cast(''Tracking'' as text) as "service",
	count(1) as "total count",
	sum(case when anmol_follow_up_status = ''SUCCESS'' then 1 else 0 end) as "success count",
	sum(case when anmol_follow_up_status = ''FAIL'' then 1 else 0 end) as "failed count",
	sum(case when anmol_follow_up_status is null then 1 else 0 end) as pending
	from anmol_master anmol
	inner join rch_lmp_follow_up lmp on anmol.member_id = lmp.member_id
	where anmol.state=''ACTIVE'' and eligible_registration_id!= ''-1'' 
)
,anc as (
	select 
	cast(''Anc'' as text) as "service",
	count(1) as "total count",
	sum(case when anmol_anc_status = ''SUCCESS'' then 1 else 0 end) as "success count",
	sum(case when anmol_anc_status = ''FAIL'' then 1 else 0 end) as "failed count",
	sum(case when anmol_anc_status is null then 1 else 0 end) as pending
	from anmol_master anmol
	inner join rch_anc_master anc on anmol.member_id = anc.member_id
	where anmol.pregnancy_reg_det_id  = anc.pregnancy_reg_det_id
	AND anmol.mother_medial_registration_status = ''SUCCESS''
	AND anmol.state=''ACTIVE'' 
)
,pnc_mother as (
	select 
	cast(''PNC'' as text) as "service",
	count(1) as "total count",
	sum(case when anmol_pnc_status = ''SUCCESS'' then 1 else 0 end) as "success count",
	sum(case when anmol_pnc_status = ''FAIL'' then 1 else 0 end) as "failed count",
	sum(case when anmol_pnc_status is null then 1 else 0 end) as pending
	from anmol_master anmol
	inner join rch_pnc_mother_master pnc_mother on anmol.member_id = pnc_mother.mother_id
	inner join rch_pnc_master pnc_master on pnc_master.id = pnc_mother.pnc_master_id
	where anmol.pregnancy_reg_det_id  = pnc_master.pregnancy_reg_det_id
	and anmol.child_infant_registration_status =''SUCCESS''
)
,pnc_child as(
	select 
	cast(''Child PNC'' as text) as "service",
	count(1) as "total count",
	sum(case when anmol_pnc_status = ''SUCCESS'' then 1 else 0 end) as "success count",
	sum(case when anmol_pnc_status = ''FAIL'' then 1 else 0 end) as "failed count",
	sum(case when anmol_pnc_status is null then 1 else 0 end) as pending
	from anmol_child_master anmol
	inner join rch_pnc_child_master pnc_child on anmol.child_id = pnc_child.child_id
	and anmol.child_registration_status = ''SUCCESS''
)
,mother_reg as (
	select 
	cast(''Mother registration'' as text) as "service",
	count(1) as "total count",
	sum(case when mother_registration_status = ''SUCCESS'' then 1 else 0 end) as "success count",
	sum(case when mother_registration_status = ''FAIL'' then 1 else 0 end) as "failed count",
	sum(case when  mother_registration_status is null then 1 else 0 end) as pending
	from anmol_master
	where eligible_tracking_status =''SUCCESS''
)
,mother_medical as (
	select 
	cast(''Mother medical'' as text) as "service",
	count(1) as "total count",
	sum(case when mother_medial_registration_status = ''SUCCESS'' then 1 else 0 end) as "success count",
	sum(case when mother_medial_registration_status = ''FAIL'' then 1 else 0 end) as "failed count",
	sum(case when mother_medial_registration_status is null  then 1 else 0 end) as pending
	from anmol_master anmol inner join rch_pregnancy_analytics_details rpad on rpad.pregnancy_reg_id = anmol.pregnancy_reg_det_id
	where anmol.mother_registration_status = ''SUCCESS''
)
, child_infalnt as (
	select 
	cast(''Infant registrations'' as text) as "service",
	count(1) as "total count",
	sum(case when child_infant_registration_status = ''SUCCESS'' then 1 else 0 end) as "success count",
	sum(case when child_infant_registration_status = ''FAIL'' then 1 else 0 end) as "failed count",
	sum(case when child_infant_registration_status is null then 1 else 0 end) as pending
	from anmol_child_master
)
, child_registration as (
	select 
	cast(''Child registration'' as text) as "service",
	count(1) as "total count",
	sum(case when child_registration_status = ''SUCCESS'' then 1 else 0 end) as "success count",
	sum(case when child_registration_status = ''FAIL'' then 1 else 0 end) as "failed count",
	sum(case when child_registration_status is null then 1 else 0 end) as pending
	from anmol_master master inner join anmol_child_master child on master.id = child.anmol_master_id
	where master.mother_delivery_status = ''SUCCESS'' 
)

,immunisation as(
	select 
	cast(''Child immunization'' as text) as "service",
	count(1) as "total count",
	sum(case when imm.anmol_child_tracking_status = ''SUCCESS'' then 1 else 0 end) as "success count",
	sum(case when imm.anmol_child_tracking_status = ''FAIL'' then 1 else 0 end) as "failed count",
	sum(case when imm.anmol_child_tracking_status is null then 1 else 0 end) as pending
	from anmol_child_master acm
                inner join anmol_master am on am.id = acm.anmol_master_id 
                inner join rch_immunisation_master imm on imm.member_id = acm.child_id and imm.member_type=''C'' 
                inner join anmol_immunisation_master amm on case when imm.vitamin_a_no is null then imm.immunisation_given else concat(imm.immunisation_given,''-'',imm.vitamin_a_no) end = amm.immunisation_given
		where 
		acm.child_registration_status =''SUCCESS'' and imm.visit_type!=''FHW_WPD'' 
)
select * from eligible_couple
union 
select * from tracking
union all
select * from anc
union all
select * from pnc_mother
union all
select * from pnc_child
union all
select * from mother_reg
union all
select * from mother_medical
union all
select * from child_infalnt
union all
select * from child_registration
union all
select * from immunisation',true,'ACTIVE','9cd86ece-11b4-4a3f-8e28-e83de6b7f8e0'),
	 (1030,60512,'2019-04-22 17:27:24.775',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id','--4 ANC(ANC Services Provided During The Year)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date,
to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),member_det as (
	select r.member_id, r.anc4_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.anc4,''DD/MM/YYYY'') as anc_date	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, parameters p
	where r.anc4_location_id  = l.child_id
	and l.parent_id = p.location_id
	and r.anc4 between p.from_date and p.to_date
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
	( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	order by r.anc4
	#limit_offset#
), loc_det as (
	select loc.loc_id,  
string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.anc_date as "Anc date",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','dfe265f5-2b7f-406e-8298-e205e332e9e1'),
	 (39,1027,'2018-05-22 11:35:33.461',1,'2021-01-13 20:22:06.427965',NULL,'select id,first_name || '' '' || last_name || ''('' || user_name || '')'' as name from um_user where role_id in (select role_id from um_role_category cat
inner join listvalue_field_value_detail list on cat.category_id = list.id and list.code = ''GVKEMRI_RO'') order by name;',true,'ACTIVE','ffef8d34-9da7-46a4-b6e2-bd82fafb806b'),
	 (921,60512,'2019-03-13 15:29:59.497',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_ids as(
	select distinct child_cmtc_nrc_admission_detail.child_id,child_cmtc_nrc_admission_detail.screening_center 
	from health_infrastructure_details
	inner join child_cmtc_nrc_admission_detail on health_infrastructure_details.id = child_cmtc_nrc_admission_detail.screening_center
	inner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id
	where health_infrastructure_details.location_id in (
		select child_id from location_hierchy_closer_det where parent_id = #location_id#
	) and child_cmtc_nrc_admission_detail.admission_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	and child_cmtc_nrc_admission_detail.specialist_pediatrician_visit_flag=true
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No", 
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
get_location_hierarchy(imt_family.location_id) as "Location",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
imt_member.dob as "Child DOB",
health_infrastructure_details.name as "Health Infrastructure"
from child_ids
inner join imt_member on imt_member.id = child_ids.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on child_ids.screening_center = health_infrastructure_details.id',true,'ACTIVE','150dd8c9-63c6-4e83-8554-18aacfbee7b4'),
	 (668,409,'2019-02-19 20:58:29.628',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','b4feab3d-8484-4387-840f-92031a61913d'),
	 (890,58981,'2019-03-06 19:07:32.329',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--NO Aadhar Id/Reg.no. AND Bank details(LMP Based JSY Report Of Registered ANCs)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
member_det as (
	select r.member_id, r.native_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, imt_family f, rch_pregnancy_registration_det p
	where r.member_id = m.id and r.native_location_id  = l.child_id and r.pregnancy_reg_id = p.id and m.family_id = f.family_id
	and r.jsy_beneficiary and r.no_aadhar_and_bank
	and l.parent_id = #location_id#
	and r.lmp_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date)
	order by p.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','dd81b045-a738-4b4e-a078-92ff07c6f869'),
	 (489,57698,'2019-02-14 14:24:24.76',1,'2021-01-13 20:22:06.427965','role_id','select name as "role_id" from um_role_master where id=#role_id#',true,'ACTIVE','88f131a9-15f9-484f-b571-857494886844'),
	 (49,1027,'2018-05-28 12:09:46.119',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,user_id','select row_number() over () as "Sr. No",concat(us.first_name,'' '',us.last_name,''('',us.user_name,'')'') as "Agent Name" ,
to_char(r1.created_on,''DD-MM-YYYY hh24:mi:ss'') as "Agent Break Time Out",to_char(r1.next_val,''DD-MM-YYYY hh24:mi:ss'') as "Agent Break Time In",
to_char(r1.next_val - r1.created_on,''hh24:mi:ss'') as "Total Break Hours"
from um_user us,
(select state,created_by,created_on,LEAD (created_on,1) OVER (
 PARTITION BY created_by
 ORDER BY
 created_on
 ) AS next_val
  from gvk_activity_log 
where (#from_date# is null or created_on >=(case when #from_date# is null then ''01/01/1970'' else ''#from_date#'' end)\:\:Date)
and (#to_date# is null or created_on <(case when #to_date# is null then ''01/01/1970'' else (date (case when #to_date# is null then ''01/01/1970'' else ''#to_date#'' end) + integer ''1'')end)\:\:Date)
and (created_by = (#user_id#))) r1
where r1.created_by = us.id and  r1.state = ''com.argusoft.imtecho.gvk.user.state.inactive''
and us.role_id in (select role_id from um_role_category cat
inner join listvalue_field_value_detail list on cat.category_id = list.id and list.code = ''GVKEMRI_RO'')
 #limit_offset#;',true,'ACTIVE','814bfef8-ab51-401e-b1f5-803aee709af1'),
	 (1466,75398,'2020-01-08 14:47:57.165',1,'2021-01-13 20:22:06.427965','from_date,to_date','with dates as (
 SELECT to_date(CASE WHEN ''#from_date#'' = ''null'' THEN null ELSE ''#from_date#'' END, ''MM-DD-YYYY'') AS from_date,
        to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_date
),sms_count as(
Select row_number() over() as "Sr. no",
(case when message_type is null then ''Others'' else message_type end) as "Sms Type", 
COUNT (id) "Total",
COUNT(case when carrier_status=''DELIVRD''  then id end)as "Delivered", 
COUNT(case when carrier_status=''EXPIRED''  then id end)as "Expired",
COUNT(case when carrier_status=''UNDELIV''  then id end)as "Undelivered",
COUNT(case when carrier_status is null  then id end)as "Status Blank"
from sms,dates  
where created_on between dates.from_date and dates.to_date
group by message_type
)
select * from sms_count 
UNION all
SELECT null,
        ''Total'', 
        SUM (sms_count."Total"),
        SUM (sms_count."Delivered"),
        SUM (sms_count."Expired"),
        SUM (sms_count."Undelivered"),
        SUM (sms_count."Status Blank")
FROM sms_count;',true,'ACTIVE','0d83b28b-74d8-40b9-9b83-a7e594375e92'),
	 (242,1,'2019-02-05 11:49:31.98',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--FIPV 1 given  (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 years as ( 
	select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, 
	cast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date
	from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc
), child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and y.financial_year = ''#financial_year#''
    and c.is_valid_for_tracking_report = true
	and c.f_ipv1 is not null
	and c.dob between y.from_date and y.too_date
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','eef1ac76-a111-417d-9240-c5706841cded');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (977,60512,'2019-04-11 14:48:23.857',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','84843c69-3346-471c-9172-42f7f7d397df'),
	 (928,60512,'2019-03-13 16:47:15.466',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','897f5c8a-e2a2-4174-b3cf-66a82e490c8c'),
	 (1092,63746,'2019-05-01 15:19:51.494',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #location_id#',true,'ACTIVE','9bd7b7bc-bed8-4889-80c9-70a047bf1c4c'),
	 (1065,64189,'2019-04-29 16:10:33.898',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','b3877858-316f-4a25-b322-c8fa7fc71990'),
	 (1066,64189,'2019-04-29 16:10:33.916',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Measles Rubella given(Services Provided to the Children Registered during the Year ( 1 to 6 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 years as ( 
	select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, 
	cast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date
	from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc
), child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and y.financial_year = ''#financial_year#''
    and c.is_valid_for_tracking_report = true
	and measles_rubella is not null
	and c.dob between y.from_date and y.too_date
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','b433a430-1a4e-425e-80ac-a8b0c90b0a9a'),
	 (485,57698,'2019-02-14 14:23:27.405',1,'2021-01-13 20:22:06.427965','role_id','select name as "role_id" from um_role_master where id=#role_id#',true,'ACTIVE','d4fe83c7-5add-419d-b71e-eb88fc9d99d7'),
	 (986,60512,'2019-04-11 14:59:08.767',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with distinct_health_infra_ids as(
	select distinct health_infrastrucutre_id from facility_performance_master
	where facility_performance_master.performance_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
),health_infra_ids as(
	select health_infrastructure_details.id,health_infrastructure_details.name,
	health_infrastructure_details.address,health_infrastructure_details.location_id
	from distinct_health_infra_ids
	inner join health_infrastructure_details on health_infrastructure_details.id = distinct_health_infra_ids.health_infrastrucutre_id
	where health_infrastructure_details.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and health_infrastructure_details.type=1012
),location_hierarchys as (
	select health_infra_ids.id,string_agg(l2.name,''>'' order by lhcd.depth desc) as location_hierarchy
	from health_infra_ids 
	inner join location_hierchy_closer_det lhcd on lhcd.child_id = health_infra_ids.location_id
	inner join location_master l2 on l2.id = lhcd.parent_id
	group by health_infra_ids.id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
health_infra_ids.name as "Name",
location_hierarchys.location_hierarchy as "Location",
health_infra_ids.address as "Address"
from health_infra_ids
inner join location_hierarchys on health_infra_ids.id = location_hierarchys.id',true,'ACTIVE','2d61d587-a2c2-499d-a53a-5506e07802d3'),
	 (153,58981,'2019-01-22 16:45:43.688',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','37d0d664-15bc-449b-8c7c-2444917f65bb'),
	 (73,1027,'2018-08-30 12:09:10.474',1,'2021-01-13 20:22:06.427965','demographic_location_id,loggedInUserId,location_id','with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
CAST(''#loggedInUserId#'' AS INTEGER) as loggedInUserId,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
w as
(select
	lm.id as id,
    case when ( p.preferred_language and (lm.english_name is not null)) then lm.english_name else lm.name end as loc_name,
    coalesce(sum(reg_preg_women),0) as reg_preg_women,
    coalesce(sum(high_risk),0) as high_risk,
    round(coalesce(case when sum(reg_preg_women) = 0 then 0 else sum(high_risk)*100.0/sum(reg_preg_women) end,0),2) as per_high_risk,
    coalesce(sum(two_or_more_risk),0) as two_or_more_risk,
    round(coalesce(case when sum(reg_preg_women) = 0 then 0 else sum(two_or_more_risk)*100.0/sum(reg_preg_women) end,0),2) as per_two_or_more_risk,
    coalesce(sum(prev_compl),0) as prev_compl,
    round(coalesce(case when sum(reg_preg_women) = 0 then 0 else sum(prev_compl)*100.0/sum(reg_preg_women) end,0),2) as per_prev_compl,
    coalesce(sum(chronic),0) as chronic,
    round(coalesce(case when sum(reg_preg_women) = 0 then 0 else sum(chronic)*100.0/sum(reg_preg_women) end,0),2) as per_chronic,
    coalesce(sum(current_preg_compl),0) as current_preg_compl,
    round(coalesce(case when sum(reg_preg_women) = 0 then 0 else sum(current_preg_compl)*100.0/sum(reg_preg_women) end,0),2) as per_current_preg_compl
from parameters p cross join (select child_id from location_hierchy_closer_det where parent_id in (
select distinct case when (select location_id from parameters) is not null then (select location_id from parameters) else loc_id end 
from um_user_location where user_id = (select loggedInUserId from parameters) and state = ''ACTIVE'')
and depth=1 and ((select demographic_group from parameters)=''null'' or child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = (select demographic_group from parameters))
	) )as t 
inner join location_hierchy_closer_det on t.child_id = location_hierchy_closer_det.parent_id and ((select demographic_group from parameters)=''null'' or location_hierchy_closer_det.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = (select demographic_group from parameters))
	)
inner join location_master lm on lm.id = t.child_id
left join rch_current_state_pregnancy_analytics_data lwrra on lwrra.location_id = location_hierchy_closer_det.child_id
group by lm.id,p.preferred_language
order by lm.name)
select row_number() over() as "Sr. no", id as hidden_location_id ,loc_name as "Location Name"
,(select demographic_group from parameters) as hidden_demographic_location_id
,reg_preg_women as "No of registered pregnant women"
,high_risk "No of high risk mothers identified"
,per_high_risk "percent_col_No of high risk mothers identified"
,two_or_more_risk  "Total high risk mother having two or more risk factors"
,per_two_or_more_risk "percent_col_Total high risk mother having two or more risk factors"
,prev_compl "Previous pregnancy complication"
,per_prev_compl "percent_col_Previous pregnancy complication" 
,chronic "Pre existing chronic illness" 
,per_chronic "percent_col_Pre existing chronic illness" 
,current_preg_compl "Present Pregnancy complications"
,per_current_preg_compl "percent_col_Present Pregnancy complications" 
from w
union all
select null,(select location_id from parameters) as hidden_location_id,''<b>Total<b>''
,(select demographic_group from parameters) as hidden_demographic_location_id
,coalesce(sum(reg_preg_women),0),
coalesce(sum(high_risk),0)
	,round(coalesce(case when sum(reg_preg_women) = 0 then 0 else sum(high_risk)*100.0/sum(reg_preg_women) end,0),2),
coalesce(sum(two_or_more_risk),0)
	,round(coalesce(case when sum(reg_preg_women) = 0 then 0 else sum(two_or_more_risk)*100.0/sum(reg_preg_women) end,0),2),
coalesce(sum(prev_compl),0)
	,round(coalesce(case when sum(reg_preg_women) = 0 then 0 else sum(prev_compl)*100.0/sum(reg_preg_women) end,0),2),
coalesce(sum(chronic),0)
	,round(coalesce(case when sum(reg_preg_women) = 0 then 0 else sum(chronic)*100.0/sum(reg_preg_women) end,0),2),
coalesce(sum(current_preg_compl),0)
	,round(coalesce(case when sum(reg_preg_women) = 0 then 0 else sum(current_preg_compl)*100.0/sum(reg_preg_women) end,0),2)
from w',true,'ACTIVE','f01f3d1f-9d06-4e9a-b5b0-d5b0007b3aaf'),
	 (741,58981,'2019-03-01 19:30:54.256',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','50e4bb2d-e915-4943-b329-f4fc11b3ef16');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (100,1,'2018-11-16 13:54:50.914',1,'2021-01-13 20:22:06.427965','financial_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 ldp as(
	select child_id, case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
else location_master.name end 
	from location_hierchy_closer_det, location_master, prefered_language  
	where parent_id = #location_id# and depth = 1 
	and location_master.id = location_hierchy_closer_det.child_id
), r as(
	select lhcd.parent_id as id, 
	coalesce(sum(stat.total_reg_0_1),0) as total_live_births, 
	coalesce(sum(stat.breast_feeding_within_1_hr),0) as breast_feeding_within_1_hr, 
	coalesce(sum(stat.total_weighed),0) as total_weighed, 
	coalesce(sum(stat.birth_weight_less_than_1),0) as birth_weight_less_than_1, 
	coalesce(sum(stat.birth_weight_btw_1_and_1_5),0) as birth_weight_btw_1_and_1_5, 
	coalesce(sum(stat.birth_weight_btw_1_6_and_2),0) as birth_weight_btw_1_6_and_2,
	coalesce(sum(stat.birth_weight_btw_2_1_and_2_5),0) as birth_weight_btw_2_1_and_2_5,
	coalesce(sum(stat.birth_weight_btw_2_6_and_3),0) as birth_weight_btw_2_6_and_3,
	coalesce(sum(stat.birth_weight_btw_3_1_and_3_5),0) as birth_weight_btw_3_1_and_3_5,
	coalesce(sum(stat.birth_weight_btw_3_6_and_4),0) as birth_weight_btw_3_6_and_4,
	coalesce(sum(stat.birth_weight_above_4),0) as birth_weight_above_4,
	coalesce(sum(stat.birth_weight_not_reg),0) as birth_weight_not_reg
	from ldp
	inner join location_hierchy_closer_det lhcd on lhcd.parent_id = ldp.child_id
	left join child_delivery_location_wise_monthly_analytics stat on lhcd.child_id = stat.location_id
	where stat.financial_year = ''#financial_year#'' 
	group by lhcd.parent_id
), s as(
	select ldp.name,
        ldp.child_id,
	coalesce(r.total_live_births,0) as total_live_births, 
	coalesce(r.breast_feeding_within_1_hr,0) as breast_feeding_within_1_hr, 
	coalesce(r.total_weighed,0) as total_weighed, 
	coalesce(r.birth_weight_less_than_1,0) as birth_weight_less_than_1, 
	coalesce(r.birth_weight_btw_1_and_1_5,0) as birth_weight_btw_1_and_1_5, 
	coalesce(r.birth_weight_btw_1_6_and_2,0) as birth_weight_btw_1_6_and_2,
	coalesce(r.birth_weight_btw_2_1_and_2_5,0) as birth_weight_btw_2_1_and_2_5,
	coalesce(r.birth_weight_btw_2_6_and_3,0) as birth_weight_btw_2_6_and_3,
	coalesce(r.birth_weight_btw_3_1_and_3_5,0) as birth_weight_btw_3_1_and_3_5,
	coalesce(r.birth_weight_btw_3_6_and_4,0) as birth_weight_btw_3_6_and_4,
	coalesce(r.birth_weight_above_4,0) as birth_weight_above_4,
	coalesce(r.birth_weight_not_reg,0) as birth_weight_not_reg
	from ldp left join r on ldp.child_id = r.id 
	order by ldp.name
)
select  row_number() over() as "Sr. no", 
name as  "Location", 
child_id as hidden_location_id,
total_live_births as "Child Registered",
breast_feeding_within_1_hr as "Breast Feeding initiated within one hour of birth",
case when total_live_births = 0 then 0 else round(breast_feeding_within_1_hr*100.0/total_live_births,2) end as "percent_col_Breast Feeding initiated within one hour of birth",
total_weighed as "Children weighed",
case when total_live_births = 0 then 0 else round(total_weighed*100.0/total_live_births ,2) end as "percent_col_Children weighed",
birth_weight_less_than_1  as "Less than 1 kg",
case when total_live_births = 0 then 0 else round(birth_weight_less_than_1*100.0/total_live_births ,2) end as "percent_col_Less than 1 kg",
birth_weight_btw_1_and_1_5 as "1-1.5 kg",
case when total_live_births = 0 then 0 else round(birth_weight_btw_1_and_1_5*100.0/total_live_births,2) end as "percent_col_1-1.5 kg",
birth_weight_btw_1_6_and_2  as "1.6-2 kg",
case when total_live_births = 0 then 0 else round(birth_weight_btw_1_6_and_2*100.0/total_live_births,2) end as "percent_col_1.6-2 kg",
birth_weight_btw_2_1_and_2_5  as "2.1-2.5 kg",
case when total_live_births = 0 then 0 else round(birth_weight_btw_2_1_and_2_5*100.0/total_live_births ,2) end as "percent_col_2.1-2.5 kg",
birth_weight_btw_2_6_and_3 as "2.6-3 kg",
case when total_live_births = 0 then 0 else round(birth_weight_btw_2_6_and_3*100.0/total_live_births ,2) end as "percent_col_2.6-3 kg", 
birth_weight_btw_3_1_and_3_5  as "3.1-3.5 kg",
case when total_live_births = 0 then 0 else round(birth_weight_btw_3_1_and_3_5*100.0/total_live_births,2) end as "percent_col_3.1-3.5 kg",
birth_weight_btw_3_6_and_4  as "3.6-4 kg",
case when total_live_births = 0 then 0 else round(birth_weight_btw_3_6_and_4*100.0/total_live_births,2) end as "percent_col_3.6-4 kg",
birth_weight_above_4  as "Above 4 kg",
case when total_live_births = 0 then 0 else round(birth_weight_above_4*100.0/total_live_births ,2) end as "percent_col_Above 4 kg",
birth_weight_not_reg  as "Weight not registered",
case when total_live_births = 0 then 0 else round(birth_weight_not_reg*100.0/total_live_births ,2) end as "percent_col_Weight not registered"
from s
union all
select 
null, 
''<b>Total</b>'', 
#location_id#,
sum(total_live_births), 
sum(breast_feeding_within_1_hr),
case when sum(total_live_births) = 0 then 0 else round(sum(breast_feeding_within_1_hr)*100.0/sum(total_live_births),2) end, 
sum(total_weighed),
case when sum(total_live_births) = 0 then 0 else round(sum(total_weighed)*100.0/sum(total_live_births),2) end, 
sum(birth_weight_less_than_1),
case when sum(total_live_births) = 0 then 0 else round(sum(birth_weight_less_than_1)*100.0/sum(total_live_births),2) end,
sum(birth_weight_btw_1_and_1_5),
case when sum(total_live_births) = 0 then 0 else round(sum(birth_weight_btw_1_and_1_5)*100.0/sum(total_live_births),2) end, 
sum(birth_weight_btw_1_6_and_2),
case when sum(total_live_births) = 0 then 0 else round(sum(birth_weight_btw_1_6_and_2)*100.0/sum(total_live_births),2) end, 
sum(birth_weight_btw_2_1_and_2_5),
case when sum(total_live_births) = 0 then 0 else round(sum(birth_weight_btw_2_1_and_2_5)*100.0/sum(total_live_births),2) end, 
sum(birth_weight_btw_2_6_and_3),
case when sum(total_live_births) = 0 then 0 else round(sum(birth_weight_btw_2_6_and_3)*100.0/sum(total_live_births),2) end,
sum(birth_weight_btw_3_1_and_3_5),
case when sum(total_live_births) = 0 then 0 else round(sum(birth_weight_btw_3_1_and_3_5)*100.0/sum(total_live_births),2) end, 
sum(birth_weight_btw_3_6_and_4),
case when sum(total_live_births) = 0 then 0 else round(sum(birth_weight_btw_3_6_and_4)*100.0/sum(total_live_births),2) end, 
sum(birth_weight_above_4),
case when sum(total_live_births) = 0 then 0 else round(sum(birth_weight_above_4)*100.0/sum(total_live_births),2) end, 
sum(birth_weight_not_reg),
case when sum(total_live_births) = 0 then 0 else round(sum(birth_weight_not_reg)*100.0/sum(total_live_births),2) end
from s;',true,'ACTIVE','79a75f2e-d511-43b3-b465-a2d475fbb460'),
	 (1041,60512,'2019-04-22 17:34:46.378',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','5e088b90-31c2-4759-86a9-d48122163e56'),
	 (52,1027,'2018-05-28 14:07:20.163',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with ldp as(
select child_id,location_master.name from location_hierchy_closer_det,location_master where parent_id in (
case when #location_id# is not null then #location_id# else 
(select loc_id from um_user_location where user_id = #loggedInUserId# and state = ''ACTIVE'') end)
and depth = 1 and location_master.id = location_hierchy_closer_det.child_id
),r as(
select lhcd.parent_id as id
,coalesce(sum(stat.age_less_15),0) as age_less_15
,coalesce(sum(stat.age_15_19),0) as age_15_19
,coalesce(sum(stat.age_20_24),0) as age_20_24,
coalesce(sum(stat.age_25_29),0) as age_25_29
,coalesce(sum(stat.age_30_34),0) as age_30_34
,coalesce(sum(stat.age_35_39),0) as age_35_39,
coalesce(sum(stat.age_40_44),0) as age_40_44
,coalesce(sum(stat.age_45_49),0) as age_45_49
,coalesce(sum(stat.age_greater_49),0) as age_greater_49
,coalesce(sum(stat.anc_reg),0) as anc_reg
from location_hierchy_closer_det lhcd 
inner join ldp on lhcd.parent_id = ldp.child_id
left join rch_yearly_location_wise_analytics_data stat on lhcd.child_id = stat.location_id
group by lhcd.parent_id
),s as(
select ldp.name,r.* from r,ldp
where ldp.child_id = r.id
order by ldp.name
)select  row_number() over() as "Sr. no"
,name as  "Location"
,age_less_15 as "Age less than 15"
,case when anc_reg = 0 then 0 else round(age_less_15*100.0/anc_reg,2) end as "percent_col_Age less than 15"
,age_15_19 as "15-19"
,case when anc_reg = 0 then 0 else round(age_15_19*100.0/anc_reg,2) end as "percent_col_15-19"
,age_20_24 as "20-24"
,case when anc_reg = 0 then 0 else round(age_20_24*100.0/anc_reg,2) end as "percent_col_20-24"
,age_25_29 as "25-29"
,case when anc_reg = 0 then 0 else round(age_25_29*100.0/anc_reg ,2) end as "percent_col_25-29"
,age_30_34 as "30-34"
,case when anc_reg = 0 then 0 else round(age_30_34*100.0/anc_reg ,2) end as "percent_col_30-34"
,age_35_39 as "35-39"
,case when anc_reg = 0 then 0 else round(age_35_39*100.0/anc_reg ,2) end as "percent_col_35-39"
,age_40_44 as "40-44"
,case when anc_reg = 0 then 0 else round(age_40_44*100.0/anc_reg ,2) end as "percent_col_40-44"
,age_45_49 as "45-49"
,case when anc_reg = 0 then 0 else round(age_45_49*100.0/anc_reg ,2) end as "percent_col_45-49"
,age_greater_49 as "Age greater than 49"
,case when anc_reg = 0 then 0 else round(age_greater_49*100.0/anc_reg,2) end as "percent_col_Age greater than 49"
,anc_reg  as "Total ANC Registered"
from s
union all
select 
null
,''<b>Total</b>''
,sum(age_less_15)
,case when sum(anc_reg) = 0 then 0 else round(sum(age_less_15)*100.0/sum(anc_reg),2) end
,sum(age_15_19)
,case when sum(anc_reg) = 0 then 0 else round(sum(age_15_19)*100.0/sum(anc_reg),2) end
,sum(age_20_24)
,case when sum(anc_reg) = 0 then 0 else round(sum(age_20_24)*100.0/sum(anc_reg),2) end
,sum(age_25_29)
,case when sum(anc_reg) = 0 then 0 else round(sum(age_25_29)*100.0/sum(anc_reg),2) end
,sum(age_30_34)
,case when sum(anc_reg) = 0 then 0 else round(sum(age_30_34)*100.0/sum(anc_reg),2) end
,sum(age_35_39)
,case when sum(anc_reg) = 0 then 0 else round(sum(age_35_39)*100.0/sum(anc_reg),2) end
,sum(age_40_44)
,case when sum(anc_reg) = 0 then 0 else round(sum(age_40_44)*100.0/sum(anc_reg),2) end
,sum(age_45_49)
,case when sum(anc_reg) = 0 then 0 else round(sum(age_45_49)*100.0/sum(anc_reg),2) end
,sum(age_greater_49)
,case when sum(anc_reg) = 0 then 0 else round(sum(age_greater_49)*100.0/sum(anc_reg),2) end
,sum(anc_reg)
from s;',true,'ACTIVE','ae7da1f0-3719-4e01-8f46-e58a93760bd0'),
	 (246,1,'2019-02-05 11:57:29.793',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Penta 2 given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 years as ( 
	select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, 
	cast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date
	from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc
), child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and y.financial_year = ''#financial_year#''
    and c.is_valid_for_tracking_report = true
	and c.penta2 is not null
	and c.dob between y.from_date and y.too_date
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','4d9b2168-cc9f-415a-b1c4-4b5406483630'),
	 (718,409,'2019-02-27 13:25:51.199',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','d1e5d31f-5d1c-4a9e-8e26-f411a47ff641'),
	 (1005,60512,'2019-04-18 15:32:00.808',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','89cccbea-eb53-45c6-baa0-0ed1797c80ee'),
	 (494,1,'2019-02-14 15:22:28.23',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,location_id','with child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
	where l.child_id = c.loc_id and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.member_id is not null
	and c.death_date is null
	and c.bcg is null
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg(l2.name,''>'' order by lhcd.depth desc) as aoi
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','d3130d96-b292-4c7d-a489-1ca777639bce'),
	 (411,1,'2019-02-13 12:34:49.347',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--FIPV 2 given(Immunization Services Provided to Children with Date of Birth)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.f_ipv2 is not null
	and c.is_valid_for_tracking_report = true
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','7e0cedc7-beeb-4a94-9aeb-d56c1d2c2137'),
	 (1007,60512,'2019-04-18 15:33:39.366',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','56535e84-703b-4d49-a4bf-4b0c01d32c5d'),
	 (704,409,'2019-02-27 13:25:06.127',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','167beefd-57d4-4cac-9898-08eb8e96a961');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1346,69973,'2019-08-20 13:06:57.584',1,'2021-01-13 20:22:06.427965','from_date,to_date,location_id','with dates as(
select
to_date(case when ''#from_date#'' =''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when ''#to_date#'' =''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') as to_date
),
loc_det as (
select lm.id as hidden_location_id, lm.name as loc_name, depth_child.child_id as wherecondid
from location_hierchy_closer_det depth_child
 inner join location_hierchy_closer_det lhcd on (lhcd.child_id=depth_child.parent_id and lhcd.depth=1)
 inner join location_master lm on lm.id=lhcd.child_id where  lhcd.parent_id=#location_id#
), 
det as (
select depth_child.hidden_location_id,depth_child.loc_name,
coalesce(sum(case when mm.type=''IN'' then 1 end ),0)as in_migration_cnt,
coalesce(sum(case when mm.type=''IN'' and mm.state in (''CONFIRMED'') then 1 end ),0)as in_completed_cnt,
coalesce(sum(case when mm.type=''IN'' and mm.state in (''ROLLBACK'', ''NO_RESPONSE'') then 1 end ),0)as in_reverted_cnt,
coalesce(sum(case when mm.type=''IN'' and mm.state in (''NOT_HAPPEN'') then 1 end ),0)as in_rejected_cnt,
coalesce(sum(case when (mm.type=''IN'' and mm.state=''REPORTED'' and migrated_location_not_known = false) then 1 end),0) as in_anm_pnd_cnt,
coalesce(sum(case when ((mm.type=''IN'' and mm.state in (''REPORTED'',''NOT_RESOLVED'')) and migrated_location_not_known = true) then 1 end),0) as in_gvk_pnd_cnt,
coalesce(sum(case when mm.type=''OUT'' then 1 end ),0)as out_migration_cnt,
coalesce(sum(case when mm.type=''OUT'' and mm.state in (''CONFIRMED'') then 1 end ),0)as out_completed_cnt,
coalesce(sum(case when mm.type=''OUT'' and mm.state in (''ROLLBACK'', ''NO_RESPONSE'') then 1 end ),0)as out_reverted_cnt,
coalesce(sum(case when mm.type=''OUT'' and mm.state in (''NOT_HAPPEN'') then 1 end ),0)as out_rejected_cnt,
coalesce(sum(case when (mm.type=''OUT'' and mm.state=''REPORTED'' and migrated_location_not_known = false) then 1 end),0) as out_anm_pnd_cnt,
coalesce(sum(case when ((mm.type=''OUT'' and mm.state in (''REPORTED'',''NOT_RESOLVED'')) and migrated_location_not_known = true) then 1 end),0) as out_gvk_pnd_cnt,
coalesce(sum(case when mm.type=''OUT'' and mm.state = ''LFU'' then 1 end),0) as out_lfu
 from (select * from migration_master, dates) mm 
 inner join loc_det depth_child on (depth_child.wherecondid=mm.reported_location_id )
 where (mm.reported_on between mm.from_date and mm.to_date) and mm.state not in (''DUPLICATE'',''REVERTED'')
group by depth_child.hidden_location_id,depth_child.loc_name)
select row_number() over() as "Sr. no", 
	det.loc_name as "Location",
	det.hidden_location_id,
	det.in_migration_cnt as "Migration Request(IN)",
	det.in_completed_cnt as "Completed (IN)",
	det.in_reverted_cnt as "Reverted (IN)",
	det.in_rejected_cnt as "Rejected (IN)",
	det.in_anm_pnd_cnt as "ANM Pending Request (IN)",
	det.in_gvk_pnd_cnt as "GVK Pending Request (IN)",
	det.out_migration_cnt as "Migration Request(OUT)",
	det.out_completed_cnt as "Completed (OUT)",
	det.out_reverted_cnt as "Reverted (OUT)",
	det.out_rejected_cnt as "Rejected (OUT)",
	det.out_anm_pnd_cnt as "ANM Pending Request (OUT)",
	det.out_gvk_pnd_cnt as "GVK Pending Request (OUT)",
	det.out_lfu as "LFU (OUT)"
	from det
union all
select null,
''<b>Total<b>'',
#location_id#,
sum(det.in_migration_cnt),
sum(det.in_completed_cnt),
sum(det.in_reverted_cnt),
sum(det.in_rejected_cnt),
sum(det.in_anm_pnd_cnt),
sum(det.in_gvk_pnd_cnt),
sum(det.out_migration_cnt),
sum(det.out_completed_cnt),
sum(det.out_reverted_cnt),
sum(det.out_rejected_cnt),
sum(det.out_anm_pnd_cnt),
sum(det.out_gvk_pnd_cnt),
sum(det.out_lfu)
from det',true,'ACTIVE','87088a31-28b6-412e-ad85-f822cee640b6'),
	 (1179,409,'2019-07-02 20:39:51.737',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','98f7b140-e0f2-43bd-8f10-fd7a8d2df317'),
	 (713,409,'2019-02-27 13:25:28.194',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--ANC 4(LMP Based Pregnant Women Reg. for ANC Services)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
member_det as (
	select r.member_id, r.native_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.date_of_delivery,''DD/MM/YYYY'') as dod
	,to_char(r.anc4,''DD/MM/YYYY'') as anc4
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, imt_member m
	where r.member_id = m.id
	and r.anc4 is not null
	and r.native_location_id  = l.child_id
	and l.parent_id = #location_id#
	and r.lmp_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date)
	order by r.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
member_det.anc4 as "ANC4 Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','e874a412-1190-4324-9b42-0a8fd500089e'),
	 (562,57698,'2019-02-18 12:26:54.472',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
	where l.child_id = c.bcg_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.bcg is not null
	group by m.id, f.location_id, c.dob, bcg
	having case when extract(month from bcg) > 3 
	then concat(extract(year from bcg), ''-'', extract(year from bcg) + 1)
	else concat(extract(year from bcg) - 1, ''-'', extract(year from bcg)) end = 
		case when #financial_year# is null then 
			case when extract(month from current_date) > 3 
			then concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)
			else concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end
		else ''#financial_year#'' end
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','ef381b79-e372-44e0-bd68-87a6bc7650ec'),
	 (710,409,'2019-02-27 13:25:28.178',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','710bbc96-7477-4221-b29b-b898b6424a81'),
	 (1358,69973,'2019-08-20 17:52:14.259',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
select
to_date(case when ''#from_date#'' =''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when ''#to_date#'' =''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') as to_date
),
migration_master_det as (
select mm.* from (select * from migration_master, dates) mm 
inner join location_hierchy_closer_det depth_child on depth_child.child_id=mm.reported_location_id 
inner join location_hierchy_closer_det lhcd on (lhcd.child_id=depth_child.parent_id)
 where (case when (mm.from_date is not null and mm.to_date is not null) then
reported_on between mm.from_date and mm.to_date else 1=1 end) and mm.state not in (''DUPLICATE'',''REVERTED'')
and mm.type=''OUT'' and mm.state in (''REPORTED'',''NOT_RESOLVED'') and migrated_location_not_known = true and lhcd.parent_id=#location_id# and lhcd.depth=1  #limit_offset#
),
final_Query as (
select concat(im.first_name,'' '', im.middle_name,'' '', im.last_name)|| case when im.unique_health_id is not null then '' (''|| im.unique_health_id||'')'' end
as member_name, concat(uu.first_name,'' '', uu.middle_name,'' '', uu.last_name)|| case when uu.contact_number is not null then '' (''|| uu.contact_number||'')'' end as reported_by, get_location_hierarchy(mm.location_migrated_from) as from_name, get_location_hierarchy(mm.location_migrated_to) as to_name,
to_char(mm.reported_on,''DD/MM/YYYY'') as reported_on,
/* mm.state,*/
 mm.gvk_call_status, to_char(mm.schedule_date,''DD/MM/YYYY'') as schedule_date , mm.call_attempt
from migration_master_det mm
inner join um_user uu on uu.id=mm.reported_by
left join imt_member im on im.id=mm.member_id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
fq.member_name as "Member Name",
fq.reported_by as "Reported By",
fq.reported_on as "Reported On",
fq.from_name as "Migrated From",
fq.to_name as "Migrated To",
/*
fq.state as "Migration Status",
*/
fq.gvk_call_status as "Call Status",
fq.schedule_date as "Schedule Date",
fq.call_attempt as "Call Attempt"
from final_Query fq',true,'ACTIVE','4c0b73a7-293b-422f-901e-b8df544539ca'),
	 (1433,74841,'2019-11-11 14:32:00.216',1,'2021-01-13 20:22:06.427965','location_id','with t as (
select
loc.parent_id as "location",
count(distinct gvk.member_id) as member,
count(case when gvk.gvk_call_response_status = ''com.argusoft.imtecho.gvk.call.success'' then 1 end) as "connected",
sum(case when gvk.gvk_call_response_status = ''com.argusoft.imtecho.gvk.call.success'' and gvk.service_type = ''FHW_DEL_VERI'' then 3
when gvk.gvk_call_response_status = ''com.argusoft.imtecho.gvk.call.success'' and gvk.service_type = ''FHW_TT_VERI'' then 1
when gvk.gvk_call_response_status = ''com.argusoft.imtecho.gvk.call.success'' and gvk.service_type = ''FHW_CH_SER_VERI'' then 1
when gvk.gvk_call_response_status = ''com.argusoft.imtecho.gvk.call.success'' and gvk.service_type = ''FHW_CH_SER_PREG_VERI'' then 4
else 0 end) as "Total services verified",
sum(case when gvk.gvk_call_response_status = ''com.argusoft.imtecho.gvk.call.success'' and gvk.is_delivery_happened is true then 1 else 0 end +

case when gvk.gvk_call_response_status = ''com.argusoft.imtecho.gvk.call.success'' and gvk.delivery_place_verification is true then 1 else 0 end +
case when gvk.gvk_call_response_status = ''com.argusoft.imtecho.gvk.call.success'' and gvk.no_of_child_gender_verification is true then 1 else 0 end +
case when gvk.gvk_call_response_status = ''com.argusoft.imtecho.gvk.call.success'' and gvk.tt_injection_received_status in (''YES'', ''CANNOT_DETERMINE'') then 1 else 0 end +
case when gvk.gvk_call_response_status = ''com.argusoft.imtecho.gvk.call.success'' and gvk.child_service_vaccination_status is true then 1 else 0 end) as "Verfied",
sum(case when gvk.gvk_call_response_status = ''com.argusoft.imtecho.gvk.call.success'' and gvk.is_delivery_happened is false then 1 else 0 end +
case when gvk.gvk_call_response_status = ''com.argusoft.imtecho.gvk.call.success'' and gvk.delivery_place_verification is false then 1 else 0 end +
case when gvk.gvk_call_response_status = ''com.argusoft.imtecho.gvk.call.success'' and gvk.no_of_child_gender_verification is false then 1 else 0 end +
case when gvk.gvk_call_response_status = ''com.argusoft.imtecho.gvk.call.success'' and gvk.tt_injection_received_status = ''NO'' then 1 else 0 end +
case when gvk.gvk_call_response_status = ''com.argusoft.imtecho.gvk.call.success'' and gvk.child_service_vaccination_status is false then 1 else 0 end) as  "Not verified"
from
gvk_anm_verification_response gvk
inner join location_hierchy_closer_det loc on
gvk.location_id = loc.child_id
and loc.parent_id in (
select
loc1.child_id
from
location_hierchy_closer_det loc1
where
parent_id =  #location_id#
and depth = 1)
group by
loc.parent_id
), t1 as (
select
ROW_NUMBER() OVER (ORDER BY t."location") as "S.No",
lm.english_name as "Location",
  t.member as "No of Calls Made to Beneficiaries (Multiple attempts not included)",
  t."connected" as "No of calls Connected",
  t."Total services verified" as "No of Services Verified",
  t."Verfied" as "No of Services Successfully Verified",
  t."Not verified" as "No Services Failed Verification"
from t
 left join location_master lm on lm.id = t.location
 )

  select * from t1
 union all
 select null, ''<b>Total<b>'' as "Location", sum(t.member),  sum(t."connected"),  sum(t."Total services verified"),
 sum(t."Verfied"),sum(t."Not verified") from t
having t.count >0',true,'ACTIVE','a1f1f221-a555-4c7b-847b-f5d825fc6053'),
	 (697,409,'2019-02-27 13:24:32.312',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--TT2+TT Booster(LMP Based Pregnant Women Reg. for ANC Services)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
member_det as (
	select r.member_id, r.native_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.date_of_delivery,''DD/MM/YYYY'') as dod
	,to_char(r.tt2_tt_booster_given,''DD/MM/YYYY'') as tt_boster
	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, imt_member m
	
	where r.member_id = m.id 
	and r.tt2_tt_booster_given is not null
	and r.native_location_id  = l.child_id
	and l.parent_id = #location_id#
	and r.lmp_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date)
	order by r.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
member_det.tt_boster as "TT2_TT_Booster",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','f2819d6f-c1e8-4909-a06b-7bd5baf25b23'),
	 (1261,409,'2019-07-24 11:06:50.056',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','-------Rota Virus 2-------
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
	where l.child_id = c.rota_virus_2_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.rota_virus_2 is not null
	and c.rota_virus_2 >= ''07-01-2019''
    and (case when extract(month from rota_virus_2) > 3 
	then concat(extract(year from rota_virus_2), ''-'', extract(year from rota_virus_2) + 1)
	else concat(extract(year from rota_virus_2) - 1, ''-'', extract(year from rota_virus_2)) end) = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','937f359b-8061-45b0-bdd5-bb843997210c'),
	 (714,409,'2019-02-27 13:25:43.22',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','2902014b-8a53-4c84-9060-c0a06db76a0e');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1100,63746,'2019-05-01 17:10:34.164',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #location_id#',true,'ACTIVE','a3e15ca7-2dcf-4df7-ba93-75c7111518ad'),
	 (1518,74841,'2020-02-10 17:40:05.032',1,'2021-01-13 20:22:06.427965','notification_type,limit_offset,from_date,to_date,role_id,location_id','WITH dates AS ( SELECT to_date( CASE WHEN ''#from_date#'' = ''null'' THEN NULL ELSE ''#from_date#'' END, ''MM-DD-YYYY'') AS from_date, to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date ) ,user_wise_count AS ( SELECT ul.user_id, string_agg(distinct get_location_hierarchy(ul.location_id),''
'') as location_name, sum(ul.missed_count) as missed_count, sum(ul.pending_count) as pending_count, sum(ul.on_completed_count) as on_completed_count, sum(ul.after_due_completed_count) as after_due_completed_count, sum(ul.due_pending) as due_pending FROM location_wise_task_complition_rate_analysis ul, dates,location_hierchy_closer_det lh WHERE ul.month_year BETWEEN dates.from_date AND dates.to_date AND lh.parent_id = #location_id# and lh.child_id = ul.location_id AND ( case when #notification_type# = ''-1'' then ul.notification_type_id in (select id from notification_type_master nt where role_id = #role_id#) else ul.notification_type_id = #notification_type# end) GROUP BY lh.parent_id, ul.user_id order by lh.parent_id, ul.user_id #limit_offset# ), result_set as (select distinct concat_ws('' '', u.first_name, u.last_name, ''('', u.user_name, '')'') "User Detail", string_agg(distinct uwc.location_name, ''
'') as "hidden_Location", coalesce(SUM(coalesce(uwc.on_completed_count, 0) + coalesce(uwc.after_due_completed_count, 0) + coalesce(uwc.pending_count, 0) + coalesce(uwc.due_pending, 0) + coalesce(uwc.missed_count, 0)), 0) as "Total task", coalesce(SUM(uwc.missed_count), 0) as "Missed", COALESCE(round(((SUM(coalesce(uwc.missed_count, 0)) * 100.0)/nullif((coalesce(SUM(uwc.missed_count), 0) + coalesce(SUM(uwc.on_completed_count), 0) + coalesce(SUM(uwc.after_due_completed_count), 0)), 0)), 2), 0) as "percent_col_1", coalesce(SUM(uwc.on_completed_count), 0) as "On time", COALESCE(round(((SUM(uwc.on_completed_count) * 100.0)/nullif(((coalesce(SUM(uwc.missed_count), 0) + coalesce(SUM(uwc.on_completed_count), 0) + coalesce(SUM(uwc.after_due_completed_count), 0))), 0)), 2), 0) as "percent_col_2", coalesce(SUM(uwc.after_due_completed_count), 0) as "After Due", COALESCE(round(((sum(uwc.after_due_completed_count) * 100.0) /nullif(((coalesce(SUM(uwc.missed_count), 0) + coalesce(SUM(uwc.on_completed_count), 0) + coalesce(SUM(uwc.after_due_completed_count), 0))), 0)), 2), 0) as "percent_col_3", coalesce((coalesce(sum(uwc.on_completed_count), 0) + coalesce(sum(uwc.after_due_completed_count), 0)), 0) as "Total", COALESCE(round((((coalesce(sum(uwc.on_completed_count), 0) + coalesce(sum(uwc.after_due_completed_count), 0)) * 100.0) /nullif((coalesce(sum(uwc.on_completed_count), 0) + coalesce(sum(uwc.after_due_completed_count), 0) + coalesce(sum(uwc.missed_count), 0)), 0)), 2), 0) as "percent_col_4", coalesce(SUM(uwc.pending_count), 0) as "On time pending", coalesce(SUM(uwc.due_pending), 0) as "Due pending", coalesce(coalesce(SUM(uwc.due_pending), 0) + coalesce(SUM(uwc.pending_count), 0), 0) as "Tota pending", COALESCE(round((((coalesce(sum(uwc.pending_count), 0) + coalesce(sum(uwc.due_pending), 0)) * 100.0) / NULLIF((coalesce(sum(uwc.on_completed_count), 0) + coalesce(sum(uwc.after_due_completed_count), 0) + coalesce(sum(uwc.pending_count), 0) + coalesce(sum(uwc.due_pending), 0) + coalesce(sum(uwc.missed_count), 0)), 0)), 2), 0) as "percent_col_5" from user_wise_count uwc inner join um_user u on u.id = uwc.user_id group by u.first_name, u.last_name, u.user_name) select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No", rs.* from result_set rs',true,'ACTIVE','b72ec66d-147b-4545-925b-6ab5f382f642'),
	 (281,63746,'2019-02-08 12:00:39.433',1,'2021-01-13 20:22:06.427965','from_date,to_date','with highriskusr as (
select id , member_id, gvk_call_state, schedule_date, call_attempt, diseases,
call_response_message,pickup_schedule_date,gvk_call_previous_state,treatment_performed_info 
from gvk_high_risk_follow_up_usr_info where gvk_call_state in 
(''com.argusoft.imtecho.gvk.call.beneficiary-not-visited-phc-pickedup-schedule'',
''com.argusoft.imtecho.gvk.call.pickedup-schedule'',
''com.argusoft.imtecho.gvk.call.beneficiary-not-pickedup-by-108-pickedup-schedule'',
''com.argusoft.imtecho.gvk.call.pickedup-schedule-for-next-visit'')
and pickup_schedule_date between 
	cast(case when #from_date# is null then ''01/10/1970'' else ''#from_date#'' end as date)
	and 
	cast(case when #to_date# is null then ''01/10/1970'' else ''#to_date#'' end as date)
order by pickup_schedule_date desc
)
,display_det as(
select row_number() over() as "Sr no.", 
mem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')'' as "Name of Beneficiary (Member ID)",
case when mem.mobile_number != null then mem.mobile_number else (case when coninfo.mobile_number is null then ''N/A'' else coninfo.mobile_number end) end as "Phone number of Beneficiary",
string_agg(lm.name,''> '' order by lhcd.depth desc) as "Location",
concat(fam.house_number, '','', fam.address1, '','', fam.address2) as "Address",
(case when hrisk.diseases like ''%SAM%'' then hid_sncu.name || ''('' || hid_sncu.address || '')''  
	when hrisk.diseases like ''%Very Low Birth Weight%'' then hid_cmtc.name || ''('' || hid_cmtc.address || '')''
	else '''' end) as "Health Infrastructure" ,
case when fhwnam.first_name is null then ''N/A'' else concat(fhwnam.first_name, '' '', fhwnam.middle_name, '' '', fhwnam.last_name, '' ('', fhwnam.contact_number , '')'') end as "FHW Name",
case when ashanam.first_name is null then ''N/A'' else concat(ashanam.first_name, '' '', ashanam.middle_name, '' '', ashanam.last_name, '' ('', ashanam.contact_number , '')'') end as "Asha Name",
hrisk.diseases as "High Risk", 
to_char(hrisk.pickup_schedule_date, ''DD/MM/YYYY HH:MI:SS AM'') as "Schedule (Date and Time)"
from highriskusr hrisk 
inner join imt_member mem on hrisk.member_id = mem.id 
inner join imt_family fam on mem.family_id = fam.family_id
left join imt_member hof on fam.hof_id = hof.id 
left join imt_member coninfo on fam.contact_person_id = coninfo.id 
left join um_user_location fhw on fam.location_id = fhw.loc_id  and fhw.state = ''ACTIVE'' 
left join um_user fhwnam on fhw.user_id = fhwnam.id and fhwnam.role_id = 30 and fhwnam.state = ''ACTIVE'' 
left join um_user_location ashaLoc on fam.area_id = ashaLoc.loc_id  and ashaLoc.state = ''ACTIVE'' 
left join um_user ashanam on ashaLoc.user_id = ashanam.id and ashanam.role_id = 24 and ashanam.state = ''ACTIVE''
left join location_hierchy_closer_det lhcd on (case when fam.area_id is null then fam.location_id else cast(fam.area_id as bigint) end) = lhcd.child_id 
left join location_master lm on lm.id = lhcd.parent_id 
left join location_type_master loc_name on lm.type = loc_name.type 
left join location_hierchy_closer_det loc_hel on (case when fam.area_id is null then fam.location_id else cast(fam.area_id as bigint) end) = loc_hel.child_id  and loc_hel.parent_loc_type in (''B'',''Z'') 
left join health_infrastructure_details hid_sncu on loc_hel.parent_id = hid_sncu.location_id and ( hid_sncu.is_sncu = true) 
left join health_infrastructure_details hid_cmtc on loc_hel.parent_id = hid_cmtc.location_id and ( hid_cmtc.is_cmtc = true ) 
where mem.basic_state = ''VERIFIED'' 
group by mem.unique_health_id,mem.first_name ,mem.middle_name,mem.last_name,mem.mobile_number,
coninfo.first_name,coninfo.middle_name,coninfo.last_name,coninfo.mobile_number,fam.house_number,fam.address1,fam.address2,
fhwnam.contact_number,fhwnam.first_name,fhwnam.middle_name,fhwnam.last_name,hid_sncu.name,hid_sncu.address,hid_cmtc.name,hid_cmtc.address,
ashanam.contact_number,ashanam.first_name,ashanam.middle_name,ashanam.last_name,hrisk.diseases,hrisk.pickup_schedule_date,hrisk.schedule_date
) select * from display_det;',true,'ACTIVE','b66ae410-f596-4cd1-9b9f-3c005a5287b3'),
	 (1086,63746,'2019-05-01 15:09:11.31',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #location_id#',true,'ACTIVE','34156af0-e1c4-4730-bb25-cb1438d2565d'),
	 (272,1,'2019-02-05 12:38:58.537',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','55279104-e0a4-4ce1-9422-56e8499affa0'),
	 (1406,66522,'2019-08-28 16:21:57.058',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','98a51dcd-b8a1-42b7-9e73-624348ead13d'),
	 (1359,69973,'2019-08-20 17:53:58.119',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
select
to_date(case when ''#from_date#'' =''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when ''#to_date#'' =''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') as to_date
),
migration_master_det as (
select mm.* from (select * from migration_master, dates) mm 
inner join location_hierchy_closer_det depth_child on depth_child.child_id=mm.reported_location_id 
inner join location_hierchy_closer_det lhcd on (lhcd.child_id=depth_child.parent_id)
 where (case when (mm.from_date is not null and mm.to_date is not null) then
reported_on between mm.from_date and mm.to_date else 1=1 end) and mm.state not in (''DUPLICATE'',''REVERTED'')
and mm.type=''OUT'' and mm.state = ''LFU'' and lhcd.parent_id=#location_id# and lhcd.depth=1  #limit_offset#
),
final_Query as (
select concat(im.first_name,'' '', im.middle_name,'' '', im.last_name)|| case when im.unique_health_id is not null then '' (''|| im.unique_health_id||'')'' end
as member_name, concat(uu.first_name,'' '', uu.middle_name,'' '', uu.last_name)|| case when uu.contact_number is not null then '' (''|| uu.contact_number||'')'' end as reported_by, to_char(mm.reported_on,''DD/MM/YYYY'') as reported_on, get_location_hierarchy(mm.location_migrated_from) as from_name, get_location_hierarchy(mm.location_migrated_to) as to_name
/*, mm.family_migrated_from, mm.family_migrated_to*/
from migration_master_det mm
inner join um_user uu on uu.id=mm.reported_by
left join imt_member im on im.id=mm.member_id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
fq.member_name as "Member Name",
fq.reported_by as "Reported By",
fq.reported_on as "Reported On",
fq.from_name as "Migrated From",
fq.to_name as "Migrated To"
/*
, fq.family_migrated_from as "Family Migrated From",
fq.family_migrated_to as "Family Migrated To"
*/
from final_Query fq',true,'ACTIVE','0acbb067-d9f1-4b91-ac4f-5d401367abd4'),
	 (1016,60512,'2019-04-22 15:46:29.498',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','08691ff4-b6ac-466d-8d95-9fd4867489fa'),
	 (16,1027,'2018-05-14 17:02:49.409',1,'2021-01-13 20:22:06.427965','limit_offset,role_id,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select Distinct user_loc_det.user_name as Username,user_loc_det.name,user_loc_det.role,user_loc_det.contact_number as Phone_No,
case when ( prefered_language.is_enlish and (lm2.english_name is not null)) then lm2.english_name else lm2.name end as District,
case when ( prefered_language.is_enlish and (lm3.english_name is not null)) then lm3.english_name else lm3.name end as block,
case when ( prefered_language.is_enlish and (lm4.english_name is not null)) then lm4.english_name else lm4.name end as phc,
case when ( prefered_language.is_enlish and (lm5.english_name is not null)) then lm5.english_name else lm5.name end as subcenter 
from(
select u.user_name,concat(u.title, '' '' ,u.first_name ,'' '' ,u.last_name) as name
,urm.name as role,u.contact_number,lhm.level2,lhm.level3,lhm.level4,lhm.level5 
from um_user u ,um_role_master urm,um_user_location uul,location_hierchy_closer_det lhc,location_level_hierarchy_master lhm
where (#location_id# is not null and lhc.parent_id = #location_id#) and lhc.child_id = uul.loc_id 
and uul.state = ''ACTIVE'' 
and uul.loc_id = lhm.location_id 
and uul.user_id = u.id
and (#role_id# is null or u.role_id = #role_id#) 
and u.role_id = urm.id
order by u.user_name
#limit_offset#) user_loc_det
left join location_master lm2 on user_loc_det.level2 = lm2.id
left join location_master lm3 on user_loc_det.level3 = lm3.id
left join location_master lm4 on user_loc_det.level4 = lm4.id
left join location_master lm5 on user_loc_det.level5 = lm5.id
cross join prefered_language',true,'ACTIVE','9813c150-a09b-4fea-b273-18e0f27b5a21'),
	 (241,1,'2019-02-05 11:49:31.943',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','926f530b-3cde-4c1e-a6a3-abafa2c34a8b');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (570,1,'2019-02-18 13:09:32.245',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','3cd5a21a-cfbc-4d77-be82-2b0f4b3a1a00'),
	 (567,57698,'2019-02-18 12:42:27.206',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','46fc2179-facf-404e-8605-38d8e6d80138'),
	 (565,57698,'2019-02-18 12:31:32.665',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','7b425ae8-f058-4e14-b213-6ad4499bd468'),
	 (701,409,'2019-02-27 13:24:54.768',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--ANC 1(LMP Based Pregnant Women Reg. for ANC Services)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
member_det as (
	select r.member_id, r.native_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.date_of_delivery,''DD/MM/YYYY'') as dod
	,to_char(r.anc1,''DD/MM/YYYY'') as anc1
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, imt_member m
	where r.member_id = m.id
	and r.anc1 is not null
	and r.native_location_id  = l.child_id
	and l.parent_id = #location_id#
	and r.lmp_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date)
	order by r.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
member_det.anc1 as "ANC1 Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','b7ee2cd3-6aab-4270-8640-dc602210623b'),
	(1048,409,'2019-04-24 17:29:37.367',1,'2023-07-20 16:39:34.999','location_id','with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)
,age_group as(
select 1 as srno,''15-19'' as age
union
select 2 as srno,''20-24'' as age
union
select 3 as srno,''25-29'' as age
union
select 4 as srno,''30-34'' as age
union
select 5 as srno,''35-39'' as age
union
select 6 as srno,''40-44'' as age
union
select 7 as srno,''45-49'' as age
)
,total_number as (
	select r.age_group_or_child_cnt, sum(r.eligiblecouple) as eligiblecouple, sum(r.male) as male, sum(r.female) as female,
	sum(r.coppert) as coppert, sum(r.condom) as condom, sum(r.orelpills) as  orelpills,sum(r.injectable) as injectable, sum(r.none) as none
	from rch_eligible_couple_location_wise_count_anlytics_detail r
	inner join locations on locations.child_id = r.location_id
	where age_group_or_child_cnt in (''15-19'',''20-24'',''25-29'',''30-34'',''35-39'',''40-44'',''45-49'')
	group by r.age_group_or_child_cnt order by r.age_group_or_child_cnt
)
,eligible_couple_data as (
select total_number.age_group_or_child_cnt,total_number.eligiblecouple,total_number.male,
total_number.female,total_number.coppert,total_number.condom,total_number.orelpills,total_number.injectable,
sum ( male + female + coppert + condom + orelpills + injectable) as total ,total_number.none
from total_number
left join age_group on age_group.age = total_number.age_group_or_child_cnt
group by total_number.age_group_or_child_cnt,total_number.eligiblecouple,total_number.male,
total_number.female,total_number.coppert,total_number.condom,total_number.orelpills,total_number.injectable,total_number.none,srno
order by srno
)
select
age_group_or_child_cnt as hidden_age_group_or_child_count,
age_group_or_child_cnt as "Wife''s age group",
eligiblecouple as "Number of eligible couple",
male as "Number of male",
female as "Number of female",
coppert as "Number of coppert users",
condom as "Number of condom users",
orelpills as "Number of orelpills users",
injectable ,
total as "Total",
none as "No method adopted"
from eligible_couple_data
where #location_id# is not null
union all
select
	null,''<b>Total</b>'', sum(eligible_couple_data.eligiblecouple),sum(eligible_couple_data.male),sum(eligible_couple_data.female),
	sum(eligible_couple_data.coppert),sum(eligible_couple_data.condom),sum(eligible_couple_data.orelpills),sum(eligible_couple_data.injectable),
	sum(eligible_couple_data.total),sum(eligible_couple_data.none) 
from eligible_couple_data
where #location_id# is not null',true,'ACTIVE','d016ef53-efc7-48ad-bcdb-e69254e3bbea'),
	 (286,1,'2019-02-11 17:20:28.123',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','0e500448-6369-451f-9e82-9cb5fe07afcc'),
	 (138,58981,'2019-01-21 12:32:51.488',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
death as (
	select rch_member_death_deatil.location_id as loc_id,
	imt_member.first_name || '' '' || imt_member.middle_name || '' '' || imt_member.last_name || '' ('' || imt_member.unique_health_id || '')'' || ''<br>'' || imt_member.family_id as member_det,
	to_char(imt_member.dob, ''DD/MM/YYYY'') as dob,
	to_char(rch_member_death_deatil.dod, ''DD/MM/YYYY'') as dod,
	rch_member_death_deatil.place_of_death
	from rch_member_death_deatil, location_hierchy_closer_det, imt_member
	where location_hierchy_closer_det.parent_id = #location_id#
	and rch_member_death_deatil.location_id = location_hierchy_closer_det.child_id 
	and rch_member_death_deatil.member_id = imt_member.id
	and imt_member.dob > rch_member_death_deatil.dod - interval ''1 year''
	and rch_member_death_deatil.dod between cast (
		case
			when ''#from_date#'' = ''null'' then ''01-01-1970''
			else ''#from_date#''
		end as date) and cast (
		case
			when ''#to_date#'' = ''null'' then ''01-01-1970''
			else ''#to_date#''
		end as date) + interval ''1 day''
	order by rch_member_death_deatil.dod
	#limit_offset#
), loc as (
	select distinct loc_id from death
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
death.member_det as "Member Details", 
loc_det.aoi as "Location",
death.dob as "Date of Birth",
death.dod as "Death Date", 
death.place_of_death as "Place of Death",
fhw_det.fhw as "FHW Details"
from death 
inner join loc_det on death.loc_id = loc_det.loc_id 
left join fhw_det on death.loc_id = fhw_det.loc_id;',true,'ACTIVE','cbe9dc2c-ebef-4ba2-b62c-54e61b95bb91'),
	 (1363,69973,'2019-08-20 18:11:41.545',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','62557404-125e-4579-b279-0bfa6a6af8a2'),
	 (115,409,'2019-01-08 00:59:07.236',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
location_det as (
select
	child_id,
        case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
else location_master.name end 
from
	location_hierchy_closer_det,
	location_master,
        prefered_language
where
	location_master.id = location_hierchy_closer_det.child_id
	and depth = 1
	and location_hierchy_closer_det.parent_id = #location_id#),
location_wise_cnt_det as(
select
	location_hierchy_closer_det.parent_id,
	COALESCE(sum(case when  gvk_verification.state = ''com.argusoft.imtecho.family.state.emri.fhw.reverification'' then 1 else 0 end),0) as reverification,
	COALESCE(sum(case when  gvk_verification.state != ''com.argusoft.imtecho.family.state.emri.fhw.reverification'' then 1 else 0 end),0) as verified,
	COALESCE(sum(1),0) as cnt
from
	imt_family_verification,
	gvk_verification,
	imt_family,
	location_hierchy_closer_det,
	location_det as loc_det
where
	imt_family_verification.family_id = imt_family.family_id
	and location_hierchy_closer_det.parent_id = loc_det.child_id
	and imt_family.location_id = location_hierchy_closer_det.child_id
	and imt_family_verification.gvk_state = ''com.argusoft.imtecho.gvk.call.processed''
	and gvk_verification.family_id = imt_family_verification.family_id
	and (gvk_verification.status = ''com.argusoft.imtecho.gvk.call.success'' or gvk_verification.state = ''com.argusoft.imtecho.family.state.emri.fhw.reverification'')
	and imt_family_verification.modified_on between cast
	(
		case
		when ''#from_date#'' = ''null'' then ''01-01-1970''
		else ''#from_date#''
	end as date) and cast
	(
		case
		when ''#to_date#'' = ''null'' then ''01-01-1970''
		else ''#to_date#''
	end as date) + interval ''1 day''
group by
	location_hierchy_closer_det.parent_id),
final_detail as(
select
	location_det.name,
	COALESCE(cnt,0) as total_family,
	COALESCE(verified,0) as verified,
	COALESCE(reverification,0) as reverification
from
	location_det
left join location_wise_cnt_det on
	location_det.child_id = location_wise_cnt_det.parent_id

order by
	location_det.name )select
	row_number() over() as "Sr. no",
	name as "Location Detail" ,
	total_family as "Number of Families" ,
	verified as "Number of Families Verified",
	reverification as "Number of Families Sent for reverification"
from
	final_detail
union all select
	null,
	''<b>Total</b>'',
	sum(total_family),
	sum(verified),
	sum(reverification)
from
	final_detail',true,'ACTIVE','f58a748e-708b-434a-a7ca-976aa6457568'),
	 (900,58981,'2019-03-07 11:25:30.718',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','a775d6d5-d8a8-4a80-b4ce-85e105f75e01');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (580,1,'2019-02-18 13:18:08.519',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','54153e3f-3009-4d9e-ae18-d5412153eab7'),
	 (579,1,'2019-02-18 13:16:42.107',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
	where l.child_id = c.opv3_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.opv3 is not null
	group by m.id, f.location_id, c.dob, opv3
	having case when extract(month from opv3) > 3 
	then concat(extract(year from opv3), ''-'', extract(year from opv3) + 1)
	else concat(extract(year from opv3) - 1, ''-'', extract(year from opv3)) end = 
		case when #financial_year# is null then 
			case when extract(month from current_date) > 3 
			then concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)
			else concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end
		else ''#financial_year#'' end
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','6a0e6951-71ac-46dc-9f72-78c1347cd0af'),
	 (70,1027,'2018-08-30 11:42:43.076',1,'2021-01-13 20:22:06.427965','from_month_year,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
ldp as(
  select location_id,del_reg_still_live_birth,del_less_eq_34,del_bet_35_37,del_greater_37,cortico_steroid
  from rch_delivery_date_base_location_wise_data_point,location_hierchy_closer_det
  where rch_delivery_date_base_location_wise_data_point.location_id = location_hierchy_closer_det.child_id 
  and location_hierchy_closer_det.parent_id = #location_id#
  and month_year between 
  	(case when #from_month_year# is null then ''01/01/1970'' else to_date(''#from_month_year#'',''MM/DD/YYYY'') end) 
  and 
  	(case when #to_month_year# is null then ''01/01/1970'' else to_date(''#to_month_year#'',''MM/DD/YYYY'') end)
 ), w as (
    select
    location_hierchy_closer_det.parent_id as loc_id,
    coalesce(sum(del_reg_still_live_birth),0) as preg_reg,
    coalesce(sum(del_less_eq_34),0) as del_less_eq_34,
    coalesce(sum(del_bet_35_37),0) as del_bet_35_37,
    coalesce(sum(del_greater_37),0) as del_greater_37,
    coalesce(sum(cortico_steroid),0) as cortico_steroid
    from (select child_id from location_hierchy_closer_det 
    where parent_id = #location_id# and depth=1)as t 
inner join location_hierchy_closer_det on t.child_id = location_hierchy_closer_det.parent_id 
inner join ldp on ldp.location_id = location_hierchy_closer_det.child_id
group by location_hierchy_closer_det.parent_id 
),s as (
	select case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name else lm.name end as "Location Name",
	lm.id AS hidden_location_id,
    coalesce(preg_reg,0) as "Total Delivery regd during the year",
    coalesce(del_less_eq_34,0) as "Delivery before 34 weeks", 
	round(case when preg_reg = 0 then 0 else del_less_eq_34*100.0/preg_reg end,2) as "percent_col_Delivery before 34 weeks",
    coalesce(del_bet_35_37,0) as "Delivery between 34-37 weeks", 
	round(case when preg_reg = 0 then 0 else del_bet_35_37*100.0/preg_reg end,2) as "percent_col_Delivery between 34-37 weeks",
    coalesce(del_greater_37,0) as "Delivery after 37 weeks", 
    round(case when preg_reg = 0 then 0 else del_greater_37*100.0/preg_reg end,2) as "percent_col_Delivery after 37 weeks",
    coalesce(cortico_steroid,0) as "No of antenatal corticosteroid given to delivery before 34 weeks",
	round(case when del_less_eq_34 = 0 then 0 else cortico_steroid*100.0/del_less_eq_34 end,2) as "percent_col_No of antenatal corticosteroid given to delivery before 34 weeks"
	from (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth=1 limit 100) as t
	inner join location_master lm on lm.id = t.child_id
	left join w on w.loc_id = lm.id
        cross join prefered_language
	order by lm.name
)
select row_number() over() as "Sr no.", s.* FROM s
union all
SELECT
	NULL,
    ''<b>Total<b>'',
    #location_id#,
    coalesce(sum(preg_reg),0),
    coalesce(sum(del_less_eq_34),0),
	round(case when sum(preg_reg) = 0 then 0 
		else sum(del_less_eq_34)*100.0/sum(preg_reg) end,2),
    coalesce(sum(del_bet_35_37),0),
	round(case when sum(preg_reg) = 0 then 0 
		else sum(del_bet_35_37)*100.0/sum(preg_reg) end,2),
    coalesce(sum(del_greater_37),0),
	round(case when sum(preg_reg) = 0 then 0 
		else sum(del_greater_37)*100.0/sum(preg_reg) end,2),
    coalesce(sum(cortico_steroid),0),
	round(case when sum(del_less_eq_34) = 0 then 0 
		else sum(cortico_steroid)*100.0/sum(del_less_eq_34) end,2)
from w',true,'ACTIVE','b09487a4-efb4-4cfd-88d0-28cb2d35ad7d'),
	 (285,1,'2019-02-11 17:08:38.25',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--OPV 1 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.opv1 is not null
	and c.is_valid_for_tracking_report = true
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','78eacb80-4875-4125-937b-845265ec517d'),
	 (1200,66522,'2019-07-09 20:18:02.793',1,'2021-01-13 20:22:06.427965',NULL,'select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as year from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by year desc;',true,'ACTIVE','27cda43e-a9f7-4710-b8a1-c05bdafb0093'),
	 (731,64189,'2019-03-01 15:15:46.606',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId# )
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','1f3e4ba4-009c-44b5-8178-21f0c93eb075'),
	 (1364,69973,'2019-08-20 18:12:26.643',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','26228b3d-bbc4-4e8d-ac7b-da9c08a6a7b9'),
	 (287,1,'2019-02-11 17:20:28.132',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--FIPV 1 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.f_ipv1 is not null
	and c.is_valid_for_tracking_report = true
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','cf5e7d47-16c2-474b-80b8-d85b50393e67'),
	 (74,1027,'2018-08-30 12:10:14.213',1,'2021-01-13 20:22:06.427965','to_month,loggedInUserId,from_month,location_id','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#)
,dates as (
select to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date
,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date
),w as(
	select
	lm.id,
    case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name
				else lm.name end as name,
    coalesce(sum(anc_reg),0) as reg_preg_women,
    coalesce(sum(high_risk),0) as high_risk,
    coalesce(sum(severe_anemia),0) as severe_anemia,
    coalesce(sum(blood_pressure),0) as blood_pressure,
    coalesce(sum(diabetes),0) as diabetes,
    coalesce(sum(cur_mal_presentation_issue),0) as cur_mal_presentation_issue,
    coalesce(sum(cur_malaria_issue),0) as cur_malaria_issue,
    coalesce(sum(multipara),0) as multipara,
    coalesce(sum(extreme_age),0) as extreme_age,
    coalesce(sum(interval_bet_preg_less_18_months),0) as interval_bet_preg_less_18_months,
    coalesce(sum(height),0) as height,
    coalesce(sum(weight),0) as weight,
    coalesce(sum(urine_albumin),0) as urine_albumin
	from (
		select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1) as t 
	inner join location_hierchy_closer_det on t.child_id = location_hierchy_closer_det.parent_id 
	inner join location_master lm on lm.id = t.child_id
	cross join dates
	left join rch_service_provided_during_year lwrra on lwrra.location_id = location_hierchy_closer_det.child_id and lwrra.month_year between dates.from_date and dates.to_date
        cross join prefered_language
	group by lm.id,prefered_language.is_enlish
	order by lm.name
)
select row_number() over() as "Sr. no",
id as hidden_location_id,
name as "Location Name",
reg_preg_women as "Total number of PW registered during selected period",
high_risk as "Total No of High risk mothers",
round(case when reg_preg_women = 0 then 0 else high_risk*100.0/reg_preg_women end,2) as "percent_col_high_risk_mother",
severe_anemia  as "Severe anemia (Hb less than 7gm%)",
round(case when high_risk = 0 then 0 else severe_anemia*100.0/high_risk end,2) as "percent_col_Severe anemia (Hb less than 7gm%)",
blood_pressure  as "Blood pressure (More than 140/90)(Either or both)",
round(case when high_risk = 0 then 0 else blood_pressure*100.0/high_risk end,2) as "percent_col_Blood pressure (More than 140/90)(Either or both)",
diabetes  as "Gestational Diabetes Mellitus",
round(case when high_risk = 0 then 0 else diabetes*100.0/high_risk end,2) as "percent_col_Gestational Diabetes Mellitus",
cur_malaria_issue  as "Malaria",
round(case when high_risk = 0 then 0 else cur_malaria_issue*100.0/high_risk end,2) as "percent_col_Malaria",
multipara  as "Grand Multipara",
round(case when high_risk = 0 then 0 else multipara*100.0/high_risk end,2) as "percent_col_Grand Multipara",
cur_mal_presentation_issue  as "Mal Presentation",
round(case when high_risk = 0 then 0 else cur_mal_presentation_issue*100.0/high_risk end,2) as "percent_col_Mal Presentation",
extreme_age  as "Extreme Age (Less than 18 and more than 35 years)",
round(case when high_risk = 0 then 0 else extreme_age*100.0/high_risk end,2) as "percent_col_Extreme Age (Less than 18 and more than 35 years)",
interval_bet_preg_less_18_months  as "Interval less than 18 months between last and present pregnancy",
round(case when high_risk = 0 then 0 else interval_bet_preg_less_18_months*100.0/high_risk end,2) as "percent_col_Interval less than 18 months between last and present pregnancy", 
height  as "Height less than 140 cm",
round(case when high_risk = 0 then 0 else height*100.0/high_risk end,2) as "percent_col_Height less than 140 cm",
weight  as "Weight less than 45kg",
round(case when high_risk = 0 then 0 else weight*100.0/high_risk end,2) as "percent_col_Weight less than 45kg",
urine_albumin  as "Urine Albumin Present",
round(case when high_risk = 0 then 0 else urine_albumin*100.0/high_risk end,2) as "percent_col_Urine Albumin Present"
from w
union all
select
null,
#location_id#,
''<b>Total<b>'',
coalesce(sum(reg_preg_women),0),
coalesce(sum(high_risk),0),
round(case when sum(reg_preg_women) = 0 then 0 else sum(high_risk)*100.0/sum(reg_preg_women) end,2),
coalesce(sum(severe_anemia),0),
round(case when sum(high_risk) = 0 then 0 else sum(severe_anemia)*100.0/sum(high_risk) end,2),
coalesce(sum(blood_pressure),0),
round(case when sum(high_risk) = 0 then 0 else sum(blood_pressure)*100.0/sum(high_risk) end,2),
coalesce(sum(diabetes),0),
round(case when sum(high_risk) = 0 then 0 else sum(diabetes)*100.0/sum(high_risk) end,2),
coalesce(sum(cur_malaria_issue),0),
round(case when sum(high_risk) = 0 then 0 else sum(cur_malaria_issue)*100.0/sum(high_risk) end,2),
coalesce(sum(multipara),0),
round(case when sum(high_risk) = 0 then 0 else sum(multipara)*100.0/sum(high_risk) end,2),
coalesce(sum(cur_mal_presentation_issue),0),
round(case when sum(high_risk) = 0 then 0 else sum(cur_mal_presentation_issue)*100.0/sum(high_risk) end,2),
coalesce(sum(extreme_age),0),
round(case when sum(high_risk) = 0 then 0 else sum(extreme_age)*100.0/sum(high_risk) end,2),
coalesce(sum(interval_bet_preg_less_18_months),0),
round(case when sum(high_risk) = 0 then 0 else sum(interval_bet_preg_less_18_months)*100.0/sum(high_risk) end,2),
coalesce(sum(height),0),
round(case when sum(high_risk) = 0 then 0 else sum(height)*100.0/sum(high_risk) end,2),
coalesce(sum(weight),0),
round(case when sum(high_risk) = 0 then 0 else sum(weight)*100.0/sum(high_risk) end,2),
coalesce(sum(urine_albumin),0),
round(case when sum(high_risk) = 0 then 0 else sum(urine_albumin)*100.0/sum(high_risk) end,2) 
from w',true,'ACTIVE','403f97bd-5994-40a3-a754-724f7de39ddd'),
	 (296,1,'2019-02-11 17:56:41.246',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','2ef032f6-ce63-4060-aa91-4bd8301518af');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (110,409,'2019-01-04 18:18:43.979',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 location_det as (
select child_id, case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
else location_master.name end  from location_hierchy_closer_det,location_master, prefered_language
where location_master.id = location_hierchy_closer_det.child_id and depth = 1 and location_hierchy_closer_det.parent_id = #location_id#
),location_wise_cnt_det as(
select location_hierchy_closer_det.parent_id
,sum(case when gvk_immunisation_verification_response.gvk_call_status = ''com.argusoft.imtecho.gvk.call.cant-talk'' then 1 else 0 end) as cant_talk
,sum(case when gvk_immunisation_verification_response.gvk_call_status = ''com.argusoft.imtecho.gvk.call.goes-private-hospital-for-vaccination'' 
		then 1 else 0 end) as goes_to_pvt_hospital
,sum(case when gvk_immunisation_verification_response.gvk_call_status = ''com.argusoft.imtecho.gvk.call.not-reachable'' 
		then 1 else 0 end) as not_rechable
,sum(case when gvk_immunisation_verification_response.gvk_call_status = ''com.argusoft.imtecho.gvk.call.success'' 
		then 1 else 0 end) as success
,sum(case when gvk_immunisation_verification_response.gvk_call_status = ''com.argusoft.imtecho.gvk.call.unresponsive'' 
		then 1 else 0 end) as unresponsive
,sum(case when gvk_immunisation_verification_response.gvk_call_status = ''com.argusoft.imtecho.gvk.call.wrong-mobile-number'' 
		then 1 else 0 end) as wrong_number
from gvk_immunisation_verification,gvk_immunisation_verification_response,location_hierchy_closer_det,location_det as loc_det
where gvk_immunisation_verification.member_id = gvk_immunisation_verification_response.member_id
and location_hierchy_closer_det.parent_id = loc_det.child_id
and gvk_immunisation_verification.location_id = location_hierchy_closer_det.child_id
and gvk_immunisation_verification_response.created_on between cast(case when ''#from_date#'' = ''null'' then ''01-01-1970'' else ''#from_date#'' end as date) 
	and cast(case when ''#to_date#'' = ''null'' then ''01-01-1970'' else ''#to_date#'' end as date) +interval ''1 day''
group by location_hierchy_closer_det.parent_id
),final_detail as(
select location_det.name,location_wise_cnt_det.*,cant_talk+goes_to_pvt_hospital+not_rechable+success+unresponsive+wrong_number as total
from location_det left join location_wise_cnt_det on location_det.child_id = location_wise_cnt_det.parent_id
order by location_det.name
)select row_number() over() as "Sr. no",name as "Location Detail"
,cant_talk as "Can''t Talk Right Now"
,goes_to_pvt_hospital as "Goes Private Hospital For Vaccination"
,not_rechable as "Not Reachable"
,success as "Successful"
,unresponsive as "Unresponsive"
,wrong_number as "Wrong Number"
,total as "Total"
from final_detail
union all
select null,''<b>Total</b>'',sum(cant_talk)
	,sum(goes_to_pvt_hospital),sum(not_rechable),sum(success),sum(unresponsive),sum(wrong_number),sum(total) from final_detail;',true,'ACTIVE','5def426c-b1cb-4544-97dd-bfd868feb930'),
	 (243,1,'2019-02-05 11:50:49.644',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','54d057b9-129e-4cab-8a89-47a2ffe0ccaf'),
	 (1240,409,'2019-07-24 10:34:07.949',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','a7228e4f-8e66-4c5e-aea2-b1d1424598cd'),
	 (706,409,'2019-02-27 13:25:17.473',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','4a1a49ea-5792-46f6-839c-73776d8f3657'),
	 (108,409,'2019-01-03 21:17:49.403',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 location_det as (
select child_id, case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
else location_master.name end  from location_hierchy_closer_det,location_master, prefered_language
where location_master.id = location_hierchy_closer_det.child_id and depth = 1 and location_hierchy_closer_det.parent_id = #location_id#
),location_wise_cnt_det as(
select location_hierchy_closer_det.parent_id,gvk_immunisation_verification_response.member_id,sum(1) as cnt  
from gvk_immunisation_verification,gvk_immunisation_verification_response,location_hierchy_closer_det,location_det as loc_det
where gvk_immunisation_verification.member_id = gvk_immunisation_verification_response.member_id
and location_hierchy_closer_det.parent_id = loc_det.child_id
and gvk_immunisation_verification.location_id = location_hierchy_closer_det.child_id
and gvk_immunisation_verification_response.created_on between cast(case when ''#from_date#'' = ''null'' then ''01-01-1970'' else ''#from_date#'' end as date) 
	and cast(case when ''#to_date#'' = ''null'' then ''01-01-1970'' else ''#to_date#'' end as date) +interval ''1 day''
group by location_hierchy_closer_det.parent_id,gvk_immunisation_verification_response.member_id
),final_detail as(
select location_det.name,sum(case when cnt>0 then 1 else 0 end) as total_family_conacted,sum(case when cnt>1 then 1 else 0 end) as more_then_one_attempt
from location_det left join location_wise_cnt_det on location_det.child_id = location_wise_cnt_det.parent_id
group by location_det.child_id,location_det.name
order by location_det.name
)select row_number() over() as "Sr. no",name as "Location Detail"
,total_family_conacted as "Number of Families Contacted" 
,more_then_one_attempt as "Number of Families Attempted More Than Once"
from final_detail
union all
select null,''<b>Total</b>'',sum(total_family_conacted),sum(more_then_one_attempt) from final_detail',true,'ACTIVE','571cf7ab-1857-4543-855f-17a1e881464e'),
	 (810,58981,'2019-03-06 17:33:22.785',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','28f9dd35-63c6-4b25-8a2c-0881f855d1e9'),
	 (724,63746,'2019-02-28 12:58:13.189',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #location_id#',true,'ACTIVE','426cb28d-6760-40c6-9827-533a165b102f'),
	 (293,1,'2019-02-11 17:39:34.215',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--OPV 2 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.opv2 is not null
	and c.financial_year = ''#financial_year#''
	and c.is_valid_for_tracking_report = true
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','b6fbe018-b44f-464b-aa04-e86ca0b9eb99'),
	 (709,409,'2019-02-27 13:25:17.49',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--ANC 3(LMP Based Pregnant Women Reg. for ANC Services)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 member_det as (
	select r.member_id, r.native_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.date_of_delivery,''DD/MM/YYYY'') as dod
	,to_char(r.anc3,''DD/MM/YYYY'') as anc3
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, imt_member m
	where r.member_id = m.id
	and r.anc3 is not null
	and r.native_location_id  = l.child_id
	and l.parent_id = #location_id#
	and r.lmp_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date)
	order by r.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
member_det.anc3 as "ANC3 Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','831b7ebb-852d-48ad-9d54-ca5151287ec7'),
	 (107,409,'2019-01-01 13:26:10.364',1,'2021-01-13 20:22:06.427965','role_id,loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
loc_type as(
select location_type from role_hierarchy_management where role_id = #role_id#  and state = ''ACTIVE''
and level = (select max(level) from role_hierarchy_management where role_id = #role_id#)
),loc_det as(
select distinct child_id as id from location_hierchy_closer_det where child_loc_type in (
select location_type from loc_type) and child_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
)
select row_number() over() as "Sr. no",* from (
select string_agg( case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
else location_master.name end,'' > '' order by depth desc) as "Location Name" from location_hierchy_closer_det,location_master,prefered_language,(
select loc_det.id from loc_det
left join (
select distinct loc_det.id from loc_det
inner join location_hierchy_closer_det on loc_det.id = location_hierchy_closer_det.child_id
inner join um_user_location on um_user_location.loc_id = location_hierchy_closer_det.parent_id and um_user_location.state = ''ACTIVE''
inner join um_user on um_user_location.user_id = um_user.id and um_user.role_id = #role_id#)as t on loc_det.id = t.id
where t.id is null) t1
where t1.id = location_hierchy_closer_det.child_id 
and location_hierchy_closer_det.parent_id = location_master.id
group by location_hierchy_closer_det.child_id
order by "Location Name") as t2',true,'ACTIVE','9e6e20a7-38e3-4d85-b519-211baa6b8739');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1353,69973,'2019-08-20 17:39:40.587',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
select
to_date(case when ''#from_date#'' =''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when ''#to_date#'' =''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') as to_date
),
migration_master_det as (
select mm.* from (select * from migration_master, dates) mm 
inner join location_hierchy_closer_det depth_child on depth_child.child_id=mm.reported_location_id 
inner join location_hierchy_closer_det lhcd on (lhcd.child_id=depth_child.parent_id)
 where (case when (mm.from_date is not null and mm.to_date is not null) then
reported_on between mm.from_date and mm.to_date else 1=1 end) and mm.state not in (''DUPLICATE'',''REVERTED'')
and mm.type=''IN'' and mm.state=''REPORTED'' and mm.migrated_location_not_known = false and lhcd.parent_id=#location_id# and lhcd.depth=1  #limit_offset#
),
final_Query as (
select concat(im.first_name,'' '', im.middle_name,'' '', im.last_name)|| case when im.unique_health_id is not null then '' (''|| im.unique_health_id||'')'' end
as member_name, concat(uu.first_name,'' '', uu.middle_name,'' '', uu.last_name)|| case when uu.contact_number is not null then '' (''|| uu.contact_number||'')'' end as reported_by, get_location_hierarchy(mm.location_migrated_from) as from_name, get_location_hierarchy(mm.location_migrated_to) as to_name, to_char(mm.reported_on,''DD/MM/YYYY'') as reported_on
/*, mm.family_migrated_from, mm.family_migrated_to,  mm.state*/
from migration_master_det mm
inner join um_user uu on uu.id=mm.reported_by
left join imt_member im on im.id=mm.member_id 
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
fq.member_name as "Member Name",
fq.reported_by as "Reported By",
fq.reported_on as "Reported On",
fq.from_name as "Migrated From",
fq.to_name as "Migrated To"
/*,
fq.state as "Migration Status",
fq.family_migrated_from as "Family Migrated From",
fq.family_migrated_to as "Family Migrated To"
*/
from final_Query fq',true,'ACTIVE','52b77cc4-075d-4e1b-b847-c1be5346a2e0'),
	 (705,409,'2019-02-27 13:25:06.142',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--ANC 2(LMP Based Pregnant Women Reg. for ANC Services)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
member_det as (
	select r.member_id, r.native_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.date_of_delivery,''DD/MM/YYYY'') as dod
	,to_char(r.anc2,''DD/MM/YYYY'') as anc2
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, imt_member m
	where r.member_id = m.id
	and r.anc2 is not null
	and r.native_location_id  = l.child_id
	and l.parent_id = #location_id#
	and r.lmp_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date)
	order by r.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
member_det.anc2 as "ANC2 Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','469d511c-bf1f-4ed8-b640-628c069987fc'),
	 (606,409,'2019-02-19 12:22:31.096',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','466e31a4-8b2a-424e-8a08-993a5f034175'),
	 (607,409,'2019-02-19 12:22:31.098',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','a627377c-1ac6-4d49-8663-c30b5bcffede'),
	 (1354,69973,'2019-08-20 17:42:30.81',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
select
to_date(case when ''#from_date#'' =''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when ''#to_date#'' =''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') as to_date
),
migration_master_det as (
select mm.* from (select * from migration_master, dates) mm 
inner join location_hierchy_closer_det depth_child on depth_child.child_id=mm.reported_location_id 
inner join location_hierchy_closer_det lhcd on (lhcd.child_id=depth_child.parent_id)
 where (case when (mm.from_date is not null and mm.to_date is not null) then
reported_on between mm.from_date and mm.to_date else 1=1 end) and mm.state not in (''DUPLICATE'',''REVERTED'')
and mm.type=''OUT'' and mm.state in (''CONFIRMED'') and lhcd.parent_id=#location_id# and lhcd.depth=1  #limit_offset#
),
final_Query as (
select concat(im.first_name,'' '', im.middle_name,'' '', im.last_name)|| case when im.unique_health_id is not null then '' (''|| im.unique_health_id||'')'' end
as member_name, concat(uu.first_name,'' '', uu.middle_name,'' '', uu.last_name)|| case when uu.contact_number is not null then '' (''|| uu.contact_number||'')'' end as reported_by, get_location_hierarchy(mm.location_migrated_from) as from_name, get_location_hierarchy(mm.location_migrated_to) as to_name, to_char(mm.reported_on,''DD/MM/YYYY'') as reported_on,
 /*mm.family_migrated_from, mm.family_migrated_to,  mm.state,*/
 concat(cnf.first_name,'' '', cnf.middle_name,'' '', cnf.last_name) as confirmed_by, to_char(mm.confirmed_on,''DD/MM/YYYY'') as confirmed_on
from migration_master_det mm
inner join um_user uu on uu.id=mm.reported_by
left join um_user cnf on cnf.id=mm.confirmed_by
left join imt_member im on im.id=mm.member_id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
fq.member_name as "Member Name",
fq.reported_by as "Reported By",
fq.reported_on as "Reported On",
fq.from_name as "Migrated From",
fq.to_name as "Migrated To",
fq.confirmed_on as "Confirmed On",
fq.confirmed_by as "Confirmed By"
/*
, fq.state as "Migration Status",
fq.family_migrated_from as "Family Migrated From",
fq.family_migrated_to as "Family Migrated To",
*/
from final_Query fq',true,'ACTIVE','b381eba0-2d66-4a0e-8fe8-e52de8624e5a'),
	 (184,58981,'2019-01-23 13:08:44.589',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 children as (
	select imt_family.location_id as loc_id,
	imt_member.first_name || '' '' || imt_member.middle_name || '' '' || imt_member.last_name || '' ('' || imt_member.unique_health_id || '')'' || ''<br>'' || imt_member.family_id as member_det,
	to_char(imt_member.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details, location_hierchy_closer_det, imt_member, imt_family
	where location_hierchy_closer_det.parent_id = #location_id#
	and location_hierchy_closer_det.child_id = rch_child_analytics_details.loc_id
	and rch_child_analytics_details.member_id = imt_member.id
	and imt_member.family_id = imt_family.family_id
	and rch_child_analytics_details.fully_immunization_in_number_of_month <= 12
	and rch_child_analytics_details.full_immunization_date between cast (
		case
			when ''#from_date#'' = ''null'' then ''01-01-1970''
			else ''#from_date#''
		end as date) and cast (
		case
			when ''#to_date#'' = ''null'' then ''01-01-1970''
			else ''#to_date#''
		end as date) + interval ''1 day'' - interval ''1 millisecond''
	order by imt_member.dob
	#limit_offset#
), loc as (
	select distinct loc_id from children
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
children.member_det as "Member Details", 
loc_det.aoi as "Location",
children.dob as "Date of Birth",
fhw_det.fhw as "FHW Details"
from children 
inner join loc_det on children.loc_id = loc_det.loc_id 
left join fhw_det on children.loc_id = fhw_det.loc_id;',true,'ACTIVE','ba1997f4-5646-42bd-b37e-c3d67eeafae4'),
	 (1178,66522,'2019-06-26 09:29:35.389',1,'2021-01-13 20:22:06.427965','location_id','with  counts as (
select 
get_location_hierarchy(lh.parent_id) as "Location",
sum(case when death_reason = ''782'' then 1 else 0 end) as "હેમરેજ (એ.પી.એચ.)",
sum(case when death_reason = ''783'' then 1 else 0 end) as "હેમરેજ (પી.પી.એચ.)",
sum(case when death_reason = ''784'' or death_reason = ''871'' then 1 else 0 end) as "એનેમીયા",
sum(case when death_reason = ''785'' then 1 else 0 end) as "સેપ્સીસ",
sum(case when death_reason = ''786'' then 1 else 0 end) as "ઓબ્સ્ટ્રક્ટેડ લેબર",
sum(case when death_reason = ''787'' then 1 else 0 end) as "માલ પ્રેઝન્ટેશન",
sum(case when death_reason = ''788'' then 1 else 0 end) as "Eclampsia",
sum(case when death_reason = ''789'' then 1 else 0 end) as "Abortion",
sum(case when death_reason = ''790'' then 1 else 0 end) as "સર્જીકલ કોમ્પ્લિકેશન",
sum(case when death_reason = ''791'' then 1 else 0 end) as "બ્લડ ટ્રાન્સફ્યુઝન રિએઅક્શન",
sum(case when death_reason = ''792'' then 1 else 0 end) as "માતા મરણનાં કારણો સિવાયનુ  અન્ય કારણ",
sum(case when death_reason = ''793'' then 1 else 0 end) as "અન્ય",

sum(case when death_reason = ''853'' then 1 else 0 end) as "Congenital Heart Disease",
sum(case when death_reason = ''849'' or death_reason = ''876'' then 1 else 0 end) as "Fever",
sum(case when death_reason = ''847'' or death_reason =''872'' then 1 else 0 end) as "asphyxia",
sum(case when death_reason = ''848'' then 1 else 0 end) as "low birth weight/preterm",
sum(case when death_reason = ''850'' or death_reason = ''875'' then 1 else 0 end) as "Diarrhea",
sum(case when death_reason = ''851'' or death_reason =''874'' then 1 else 0 end) as "Pneumonia",
sum(case when death_reason = ''852'' then 1 else 0 end) as "Sepsis",
sum(case when death_reason = ''855'' then 1 else 0 end) as "Hypothermia",
sum(case when death_reason = ''856'' then 1 else 0 end) as "Milk Aspiration",
sum(case when death_reason = ''857'' then 1 else 0 end) as "SIDS",
sum(case when death_reason = ''858'' then 1 else 0 end) as "Social Neglect",

sum(case when death_reason = ''1155'' then 1 else 0 end) as "Hypertensive disorders in pregnancy, birth and Puperium",
sum(case when death_reason = ''1156'' then 1 else 0 end) as "Hypertensive Disorder in pregnancy - Pre-eclampsia",
sum(case when death_reason = ''1157'' then 1 else 0 end) as "Complication of Anasthesia",
sum(case when death_reason = ''1158'' then 1 else 0 end) as "Other Obstetric Complications",
sum(case when death_reason = ''1159'' then 1 else 0 end) as "Sickle Cell Anaemia",
sum(case when death_reason = ''1160'' then 1 else 0 end) as "Indirect Causes - Non Obstetric Complication- Cardiac Disorders",
sum(case when death_reason = ''1161'' then 1 else 0 end) as "Liver Disorders",
sum(case when death_reason = ''1162'' then 1 else 0 end) as "Respiratory Disorders",
sum(case when death_reason = ''1163'' then 1 else 0 end) as "Renal Disorders",
sum(case when death_reason = ''1164'' then 1 else 0 end) as "Endocrinal Disorders",
sum(case when death_reason = ''1165'' then 1 else 0 end) as "Neurolgical Disorders",
sum(case when death_reason = ''1166'' then 1 else 0 end) as "Indirect Cause - Non Obstetric Causes- Infections / infestations",
sum(case when death_reason = ''1167'' then 1 else 0 end) as "Unspecified Maternal Death",
sum(case when death_reason = ''1168'' then 1 else 0 end) as "Coincidental / incidental causes (due to external causes) (Accidental injuries, Burns, Suicide)",

sum(case when death_reason = ''873'' then 1 else 0 end) as "Low Birth Weight (LBW)",
sum(case when death_reason = ''877'' then 1 else 0 end) as "Measels",

sum(case when death_reason = ''-1'' or death_reason= ''878'' then 1 else 0 end ) as "Other",
sum(case when death_reason = ''NONE'' or death_reason is null then 1 else 0 end) as "None"
from rch_member_death_deatil mdd ,location_hierchy_closer_det lh 
where lh.child_id = mdd.location_id and death_reason != ''1021''  -- for rejected
and lh.parent_id in (select child_id from location_hierchy_closer_det lhcd where lhcd.parent_id=#location_id# and depth = 1)
group by lh.parent_id)
select * from counts
union all 
select 
''Total'' as "Location",
sum("હેમરેજ (એ.પી.એચ.)"),
sum("હેમરેજ (પી.પી.એચ.)"),
sum("એનેમીયા"),
sum("સેપ્સીસ"),
sum("ઓબ્સ્ટ્રક્ટેડ લેબર"),
sum("માલ પ્રેઝન્ટેશન"),
sum("Eclampsia"),
sum("Abortion"),
sum("સર્જીકલ કોમ્પ્લિકેશન"),
sum("બ્લડ ટ્રાન્સફ્યુઝન રિએઅક્શન"),
sum("માતા મરણનાં કારણો સિવાયનુ  અન્ય કારણ"),
sum("અન્ય"),
sum("Congenital Heart Disease"),
sum("Fever"),
sum("asphyxia"),
sum("low birth weight/preterm"),
sum("Diarrhea"),
sum("Pneumonia"),
sum("Sepsis"),
sum("Hypothermia"),
sum("Milk Aspiration"),
sum("SIDS"),
sum("Social Neglect"),
sum("Hypertensive disorders in pregnancy, birth and Puperium"),
sum("Hypertensive Disorder in pregnancy - Pre-eclampsia"),
sum("Complication of Anasthesia"),
sum("Other Obstetric Complications"),
sum("Sickle Cell Anaemia"),
sum("Indirect Causes - Non Obstetric Complication- Cardiac Disorders"),
sum("Liver Disorders"),
sum("Respiratory Disorders"),
sum("Renal Disorders"),
sum("Endocrinal Disorders"),
sum("Neurolgical Disorders"),
sum("Indirect Cause - Non Obstetric Causes- Infections / infestations"),
sum("Unspecified Maternal Death"),
sum("Coincidental / incidental causes (due to external causes) (Accidental injuries, Burns, Suicide)"),
sum("Low Birth Weight (LBW)"),
sum("Measels"),
sum("Other"),
sum("None")
from counts;',true,'ACTIVE','546fb4da-25c5-466f-a2bf-e71747b4353d'),
	 (201,409,'2019-01-23 19:48:56.674',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','56bcf696-f04f-4882-b01b-dfb4a7d93c06'),
	 (927,60512,'2019-03-13 16:40:24.842',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_ids as(
	select distinct child_cmtc_nrc_discharge_detail.child_id,child_cmtc_nrc_admission_detail.screening_center 
	from health_infrastructure_details
	inner join child_cmtc_nrc_admission_detail on health_infrastructure_details.id = child_cmtc_nrc_admission_detail.screening_center
	inner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id
	inner join child_cmtc_nrc_discharge_detail on child_cmtc_nrc_discharge_detail.id = child_cmtc_nrc_screening_detail.discharge_id
	where health_infrastructure_details.location_id in (
		select child_id from location_hierchy_closer_det where parent_id = #location_id#
	) and child_cmtc_nrc_admission_detail.admission_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No", 
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
get_location_hierarchy(imt_family.location_id) as "Location",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
imt_member.dob as "Child DOB",
health_infrastructure_details.name as "Health Infrastructure"
from child_ids
inner join imt_member on imt_member.id = child_ids.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on child_ids.screening_center = health_infrastructure_details.id',true,'ACTIVE','dbde8b17-ad5d-4e75-b696-1be5efeaf6bd'),
	 (935,60512,'2019-03-14 12:15:47.205',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_ids as(
	select distinct child_cmtc_nrc_screening_detail.child_id,child_cmtc_nrc_admission_detail.screening_center 
	from health_infrastructure_details
	inner join child_cmtc_nrc_admission_detail on health_infrastructure_details.id = child_cmtc_nrc_admission_detail.screening_center
	inner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id
	inner join child_cmtc_nrc_follow_up on child_cmtc_nrc_follow_up.admission_id = child_cmtc_nrc_admission_detail.id
	where health_infrastructure_details.location_id in (
		select child_id from location_hierchy_closer_det where parent_id = #location_id#
	) and child_cmtc_nrc_admission_detail.admission_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	and child_cmtc_nrc_follow_up.follow_up_visit=3
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No", 
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
get_location_hierarchy(imt_family.location_id) as "Location",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
imt_member.dob as "Child DOB",
health_infrastructure_details.name as "Health Infrastructure"
from child_ids
inner join imt_member on imt_member.id = child_ids.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on child_ids.screening_center = health_infrastructure_details.id',true,'ACTIVE','1699a24c-7de7-481d-89a9-96bb6f8a0c3e');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (942,409,'2019-03-29 21:10:54.45',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end,''MM-DD-YYYY'') as from_date
,to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_date
),user_wise_count_det as(
select created_by as user_id,count(*) as cnt from ncd_member_cbac_detail,dates
where created_on between dates.from_date and dates.to_date
group by created_by
),user_id_det as(
select distinct um_user.id as user_id,user_name from um_user,um_user_location,location_hierchy_closer_det
where um_user_location.user_id = um_user.id
and um_user.role_id = 24/*ASHA*/
and um_user_location.state = ''ACTIVE'' and um_user.state = ''ACTIVE'' 
and um_user_location.loc_id = location_hierchy_closer_det.child_id
and location_hierchy_closer_det.parent_id = #location_id#
and um_user.id in (select user_id from user_wise_count_det)
/*union
select user_id from user_wise_count_det*/
order by um_user.user_name
#limit_offset#
),location_det as(
select location_hierchy_closer_det.child_id as loc_id,string_agg(name,'' > '' order by depth desc) as loc_name
from location_hierchy_closer_det,location_master
where location_hierchy_closer_det.child_id in (
select loc_id from um_user_location,user_id_det  where user_id_det.user_id = um_user_location.user_id and state = ''ACTIVE'')
and location_hierchy_closer_det.parent_id = location_master.id
group by location_hierchy_closer_det.child_id
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",concat(concat_ws('' '',um_user.first_name,um_user.middle_name,um_user.last_name),''('',um_user.user_name,'')'') as "Asha name"
, string_agg(location_det.loc_name,''<br/>'') as "Location"
,user_wise_count_det.cnt as "Count"
from user_id_det
left join user_wise_count_det on user_wise_count_det.user_id = user_id_det.user_id
inner join um_user on um_user.id  = user_id_det.user_id
inner join um_user_location on um_user.id  = um_user_location.user_id and um_user_location.state = ''ACTIVE''
inner join location_det on um_user_location.loc_id = location_det.loc_id 
group by um_user.first_name,um_user.middle_name,um_user.last_name,um_user.user_name,user_wise_count_det.cnt',true,'ACTIVE','db223953-778d-4a0d-a399-56e25ba4e402'),
	 (1168,60512,'2019-05-31 12:51:21.373',1,'2021-01-13 20:22:06.427965','from_date,to_date,location_id','with dates as (
	select (case when ''#from_date#'' = ''null'' then ''01/01/1970'' else to_date(''#from_date#'',''MM-DD-YYYY'') end) as from_date, 
	(case when ''#to_date#'' = ''null'' then ''01/01/1970'' else to_date(''#to_date#'',''MM-DD-YYYY'') end)+ interval ''1 day'' - interval ''00:00:00.001'' as to_date
),location_type as (
	select parent_loc_type from location_hierchy_closer_det where parent_id = #location_id# and depth = 0
),location_ids as(
	select location_hierchy_closer_det.child_id
	from location_hierchy_closer_det
	LEFT JOIN location_type on true = true
	where parent_id = #location_id#
	and case when 
	location_type.parent_loc_type = ''S'' or location_type.parent_loc_type is null
	then depth = 1
	else depth = 0
	end
),health_infra_ids as (
	select location_ids.child_id,health_infrastructure_details.id
	from location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id
	inner join health_infrastructure_details on location_hierchy_closer_det.child_id = health_infrastructure_details.location_id
	where health_infrastructure_details.type in (1061,1009,1008,1007,1012,1063,1084)
),anc_detail as (
	select distinct health_infra_ids.id
	from health_infra_ids
	inner join rch_anc_master on rch_anc_master.health_infrastructure_id = health_infra_ids.id
	inner join dates on true
	where rch_anc_master.created_on between dates.from_date and dates.to_date
    and rch_anc_master.is_from_web = true
),wpd_detail as (
	select distinct health_infra_ids.id 
	from rch_wpd_mother_master
	inner join health_infra_ids on rch_wpd_mother_master.health_infrastructure_id = health_infra_ids.id
	inner join dates on true
	where created_on between dates.from_date and dates.to_date
	and rch_wpd_mother_master.is_from_web = true
),pnc_detail as (
	select distinct health_infra_ids.id
	from rch_pnc_master
	inner join health_infra_ids on rch_pnc_master.health_infrastructure_id = health_infra_ids.id
	inner join dates on true
	where created_on between dates.from_date and dates.to_date
    and rch_pnc_master.is_from_web = true
),cs_detail as (
	select distinct health_infra_ids.id
	from rch_child_service_master
	inner join health_infra_ids on rch_child_service_master.health_infrastructure_id = health_infra_ids.id
	inner join dates on true
	where created_on between dates.from_date and dates.to_date
    and rch_child_service_master.is_from_web = true
),health_infra_count as (
	select location_ids.child_id,
	sum(case when health_infrastructure_details.type in (1061,1009,1008,1007,1012,1063,1084) then 1 else 0 end) as total_institutions
	from location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id
	inner join health_infrastructure_details on location_hierchy_closer_det.child_id = health_infrastructure_details.location_id
	group by location_ids.child_id
),data_count as (
	select * from anc_detail
	union
	select * from wpd_detail
	union
	select * from pnc_detail
	union
	select * from cs_detail
),not_entered_count as (
	select health_infra_ids.child_id,count(*) as not_entered_count
	from health_infra_ids
	where health_infra_ids.id not in (select id from data_count)
	group by health_infra_ids.child_id
), det as (
	select row_number() over() as sr_no, 
	location_master.name as loc,
	location_master.id as hidden_location_id,
	coalesce(health_infra_count.total_institutions,0) as total_institutions,
	coalesce(not_entered_count.not_entered_count,0) as not_entered_count
	from location_ids
	left join health_infra_count on location_ids.child_id = health_infra_count.child_id
	left join not_entered_count on location_ids.child_id = not_entered_count.child_id
	inner join location_master on location_master.id = location_ids.child_id
)
select row_number() over() as "Sr. no", 
	det.loc as "Location",
	det.hidden_location_id,
	det.total_institutions as "Total Institutions",
	det.not_entered_count as "Facility Count Not Entered Data"
	from det
union all
select null,
''<b>Total<b>'',
#location_id#,
sum(det.total_institutions),
sum(det.not_entered_count)
from det',true,'ACTIVE','24c4a1e1-44f7-43ae-aded-f85d9d840fb1'),
	 (135,58981,'2019-01-21 11:44:59.671',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,loggedInUserId,location_id','with dates as(
select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date
, to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_date
), prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 delivery as (
	select 
	imt_family.location_id as loc_id,
	imt_member.first_name || '' '' || imt_member.middle_name || '' '' || imt_member.last_name || '' ('' || imt_member.unique_health_id || '')'' || ''<br>'' || imt_member.family_id as member_det,
	to_char(imt_member.dob, ''DD/MM/YYYY'') as dob,
	to_char(rch_pregnancy_analytics_details.date_of_delivery, ''DD/MM/YYYY'') as date_of_delivery
	from rch_pregnancy_analytics_details, location_hierchy_closer_det, imt_member, imt_family,dates
	where location_hierchy_closer_det.parent_id = #location_id#
	and rch_pregnancy_analytics_details.delivery_location_id = location_hierchy_closer_det.child_id 
	and rch_pregnancy_analytics_details.member_id = imt_member.id
	and rch_pregnancy_analytics_details.delivery_outcome in (''LBIRTH'',''SBIRTH'')
	and imt_member.family_id = imt_family.family_id
	and rch_pregnancy_analytics_details.date_of_delivery between dates.from_date and dates.to_date
	order by rch_pregnancy_analytics_details.date_of_delivery
	#limit_offset#	
), loc as (
	select distinct loc_id from delivery
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
delivery.member_det as "Member Details", 
loc_det.aoi as "Location",
delivery.dob as "Date of Birth",
delivery.date_of_delivery as "Delivery Date",
fhw_det.fhw as "FHW Details"
from delivery 
inner join loc_det on delivery.loc_id = loc_det.loc_id 
left join fhw_det on delivery.loc_id = fhw_det.loc_id;',true,'ACTIVE','5682a138-44b9-40a8-8471-28ab5fe2c7f6'),
	 (375,1,'2019-02-13 11:48:57.223',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--OPV 0 given(Immunization Services Provided to Children with Date of Birth)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.opv0 is not null
	and c.is_valid_for_tracking_report = true
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','2ba44699-455f-45d6-9d43-7e3df453362b'),
	 (1108,63746,'2019-05-02 14:23:22.872',1,'2021-01-13 20:22:06.427965','limit_offset,age_group_or_child_count,location_id','with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)
,member_location as (
	select m.member_id, m.loc_id  from rch_eligible_couple_analytics m
	inner join locations on locations.child_id = m.loc_id
        where  ( case 
		when ''#age_group_or_child_count#'' = ''5+'' then children_count >= 5
		when ''#age_group_or_child_count#'' = ''0'' then children_count is null 
		when ''#age_group_or_child_count#'' = ''1'' then children_count = 1 
		when ''#age_group_or_child_count#'' = ''2'' then children_count = 2 
		when ''#age_group_or_child_count#'' = ''3'' then children_count = 3 
		when ''#age_group_or_child_count#'' = ''4'' then children_count = 4
		when ''#age_group_or_child_count#'' = ''null'' then true
	end) 	and m.last_method_of_contraception = (''ORALPILLS'') 
        #limit_offset#
)
,loc_det as(
	select member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id
	,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id
	from location_master,location_type_master,member_location 
	where 
	location_master.id = member_location.loc_id and location_type_master.type = location_master.type
)
select 
	 ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
	mem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as "Member Name",
	fam.family_id as "Family Id",to_char(r.dob, ''DD/MM/YYYY'') as "Birth Date",
	string_agg(lm.name,''> '' order by lhcd.depth desc) as "Location Hierarchy"  
from rch_eligible_couple_analytics r
inner join loc_det on loc_det.member_id = r.member_id
inner join imt_member mem on mem.id = r.member_id
inner join imt_family fam on mem.family_id = fam.family_id
inner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id
inner join location_master lm on lm.id = lhcd.parent_id
group by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;',true,'ACTIVE','276bdff5-e41a-42e9-8bbd-2c29ad6f1d4e'),
	 (1315,409,'2019-08-16 18:44:07.561',1,'2021-01-13 20:22:06.427965','date,location_id','with user_det as (
select distinct  DENSE_RANK () OVER ( 
       ORDER BY uus.score desc
   ) rank,uu.id as user_id,concat(concat_ws('' '',uu.first_name,uu.middle_name,uu.last_name),''('',uu.user_name,'')'') as name
,uus.total_service as total_service_entry
,round(uus.service_day_diff/uus.total_service,2) as avg_service_entry_diff
,uus.total_working_day as working_day
,uus.a_score
/*,uus.b_score*/
,uus.c_score
,uus.d_score
,uus.score
,uus.login_day as login_day
,uus.registered_pregnancy 
,uus.expected_pregnancy as expected_pregnancy 
,uus.total_service_call
,uus.total_success_service_call
from um_user_score_rank_details uus
inner join um_user_location uul on uul.user_id=uus.user_id and uul.state = ''ACTIVE''
inner join um_user uu on uu.id=uul.user_id
inner join location_hierchy_closer_det lhcd on uul.loc_id=lhcd.child_id
where lhcd.parent_id=#location_id# 
and uus.score_date = to_date(case when ''#date#'' =''null'' then null else ''#date#'' end,''MM/DD/YYYY'')
ORDER BY rank limit 50
)
select rank,name
,string_agg(distinct get_location_hierarchy(uul.loc_id),''<br/>'') as location
,total_service_entry as "Total Service"
,avg_service_entry_diff as "Avg No of days between date of service and date of entry"
,a_score as "Score A Timely Data entry"
/*,total_service_call as "Total service call made(GVK)"
,total_success_service_call as "Total Correct service call made(GVK)"
,b_score as "Score B Quality of Data"*/
,expected_pregnancy  as "Total number of Expected Pregnancy Registraton"
,registered_pregnancy as "Total Preganacy Registration"
,c_score as "Score C Preganacy Registration"
,working_day as "Total working day"
,login_day as "Total login day"
,d_score as "Score D Login days"
,score "Score( (A + D + C )"
from user_det 
,um_user_location uul where uul.user_id=user_det.user_id and uul.state = ''ACTIVE''
group by rank,name,total_service_entry,avg_service_entry_diff
,working_day
,login_day
,registered_pregnancy
,expected_pregnancy 
,a_score
/*,b_score*/
,c_score
,d_score
,score
/*,total_service_call
,total_success_service_call*/
order by rank;',true,'ACTIVE','44bc9e3b-0b44-4feb-87f1-ef1e4566679d'),
	 (295,1,'2019-02-11 17:40:59.405',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--DPT 3 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.dpt3 is not null
	and c.is_valid_for_tracking_report = true
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','72f698e6-dc8f-4dd7-8d84-7571cb1c1094'),
	 (299,1,'2019-02-11 17:57:57.894',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--OPV 3 given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.opv3 is not null
	and c.is_valid_for_tracking_report = true
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','e9ed0916-1f33-484a-8e4f-25da691ac724'),
	 (240,1,'2019-02-05 11:45:14.133',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--OPV 1 given  (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 years as ( 
	select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, 
	cast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date
	from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc
), child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and y.financial_year = ''#financial_year#''
	and c.is_valid_for_tracking_report = true
	and c.opv1 is not null
	and c.dob between y.from_date and y.too_date
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','56b3f490-21ba-4d8b-8dd2-b0d09b10c739'),
	 (248,1,'2019-02-05 11:59:16.102',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 years as ( 
	select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, 
	cast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date
	from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc
), child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f, years y
	where l.child_id = c.tracking_location_id and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and y.financial_year = ''#financial_year#''
    and c.is_valid_for_tracking_report = true
	and c.opv2 is not null
	and c.dob between y.from_date and y.too_date
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','14c69e82-37f5-424a-a2a5-273d0c0e8664');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (621,409,'2019-02-19 12:32:44.685',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','76a94d98-4e9b-47a0-b112-f8384192a02f'),
	 (901,58981,'2019-03-07 11:25:30.733',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,too_date,loggedInUserId,location_id','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#
),
 member_det as (
	select r.member_id, f.location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, imt_family f, rch_pregnancy_registration_det p
	where r.member_id = m.id and r.member_current_location_id  = l.child_id and r.pregnancy_reg_id = p.id and m.family_id = f.family_id
	and (r.delivery_hospital = ''897'' or r.home_del) and r.delivery_outcome in (''LBIRTH'',''SBIRTH'')
	and l.parent_id = #location_id#
	and r.date_of_delivery between cast (
		case
			when ''#from_date#'' = ''null'' then ''01-01-1970''
			else ''#from_date#''
		end as date) and cast (
		case
			when ''#too_date#'' = ''null'' then ''01-01-1970''
			else ''#too_date#''
		end as date)
	order by p.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','ca3e62ab-9d56-47eb-b2cf-390505381761'),
	 (1068,64189,'2019-04-29 16:46:55.607',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Measles Rubella given(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and measles_rubella is not null
	and c.is_valid_for_tracking_report = true
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','a126ab5a-3bcb-4e8c-aca8-8d5d610ad0fc'),
	 (305,1,'2019-02-11 18:01:05.738',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Fully Immunized Children(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.is_valid_for_tracking_report = true
	and c.fully_immunization_in_number_of_month <= 12	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','edce8d70-0518-4d13-8014-f43a2c8253be'),
	 (1351,69973,'2019-08-20 17:36:28.673',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
select
to_date(case when ''#from_date#'' =''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when ''#to_date#'' =''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') as to_date
),
migration_master_det as (
select mm.* from (select * from migration_master, dates) mm 
inner join location_hierchy_closer_det depth_child on depth_child.child_id=mm.reported_location_id 
inner join location_hierchy_closer_det lhcd on (lhcd.child_id=depth_child.parent_id)
 where (case when (mm.from_date is not null and mm.to_date is not null) then
reported_on between mm.from_date and mm.to_date else 1=1 end) and mm.state not in (''DUPLICATE'',''REVERTED'')
and mm.type=''IN'' and mm.state=''NOT_HAPPEN'' and lhcd.parent_id=#location_id# and lhcd.depth=1  #limit_offset#
),
final_Query as (
select concat(im.first_name,'' '', im.middle_name,'' '', im.last_name)|| case when im.unique_health_id is not null then '' (''|| im.unique_health_id||'')'' end
as member_name, concat(uu.first_name,'' '', uu.middle_name,'' '', uu.last_name)|| case when uu.contact_number is not null then '' (''|| uu.contact_number||'')'' end as reported_by, get_location_hierarchy(mm.location_migrated_from) as from_name, get_location_hierarchy(mm.location_migrated_to) as to_name, to_char(mm.reported_on,''DD/MM/YYYY'') as reported_on
/*, mm.family_migrated_from, mm.family_migrated_to*/
from migration_master_det mm
inner join um_user uu on uu.id=mm.reported_by
left join imt_member im on im.id=mm.member_id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
fq.member_name as "Member Name",
fq.reported_by as "Reported By",
fq.reported_on as "Reported On",
fq.from_name as "Migrated From",
fq.to_name as "Migrated To"
/*,
fq.family_migrated_from as "Family Migrated From",
fq.family_migrated_to as "Family Migrated To"
*/
from final_Query fq',true,'ACTIVE','dfcdc82f-085a-4449-91cd-130fdf59bd0e'),
	 (1367,69973,'2019-08-20 18:14:05.183',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','c175576c-3ed7-43ae-b4aa-2146c32a5b65'),
	 (36,1027,'2018-05-14 17:21:50.285',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','select case when t.name is null then '''' else cast(row_number() over (ORDER BY t.name) as text) end as sr_no,coalesce(t.name,''<b>Total</b>'') as Location,
sum(case when t.code = ''ASHA'' then 1 else 0 end) as Asha,
sum(case when t.code = ''FHW'' then 1 else 0 end) as FHW,
sum(case when t.code in (''mo_phc'',''mo_uphc'',''mo_corporation'',''mo_ayush'') then 1 else 0 end) as MO,
sum(case when t.code = ''MPHW'' then 1 else 0 end) as MPHW,
sum(case when t.code = ''CHO_HWC'' then 1 else 0 end) as CHO
from
(select distinct u.id,um_role_master.code,loc.name
from location_hierchy_closer_det main inner join  
location_hierchy_closer_det loc_hirchy_closer on main.child_id = loc_hirchy_closer.parent_id
inner join um_user_location um_loc on loc_hirchy_closer.child_id = um_loc.loc_id and um_loc.state = ''ACTIVE''
inner join um_user u on um_loc.user_id = u.id
inner join um_role_master on u.role_id = um_role_master.id
inner join location_master loc on main.child_id = loc.id
where ((#location_id# is null and main.parent_id in (select loc_id from um_user_location where user_id = #loggedInUserId#))
or main.parent_id = #location_id#) and main.depth = 1
and um_role_master.code in (''FHW'',''ASHA'',''mo_phc'',''mo_uphc'',''mo_corporation'',''mo_ayush'',''MPHW'',''CHO_HWC'') and u.state = ''ACTIVE'') as t
group by ROLLUP((t.name))
order by  t.name',true,'ACTIVE','738ea2b3-e4bb-4ba2-a198-ac52c1e97b5a'),
	 (76,1027,'2018-08-30 12:12:43.431',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#),
w as
(select
    case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name
				else lm.name end as "Location Name",
    coalesce(sum(anc_in_2or3_trim),0) as "No of ANC in 2nd and 3rd trimester (concurrent)",
    coalesce(sum(alben_given),0) as "Albendazole administration",
    coalesce(case when sum(anc_in_2or3_trim)= 0 then 0 else sum(alben_given)*100/sum(anc_in_2or3_trim) end,0) as "% of albendazole administration",
    coalesce(sum(alben_not_given),0) as "No of ANC (concurrent) not given albendazole"
from (select child_id from location_hierchy_closer_det where parent_id in (select distinct case when #location_id# is not null then #location_id# else loc_id end from um_user_location where user_id = #loggedInUserId# and state = ''ACTIVE'')
 and depth=1)as t 
inner join location_hierchy_closer_det on t.child_id = location_hierchy_closer_det.parent_id 
inner join location_master lm on lm.id = t.child_id
left join rch_current_state_pregnancy_analytics_data lwrra on lwrra.location_id = location_hierchy_closer_det.child_id
cross join prefered_language
group by lm.id,prefered_language.is_enlish)
select row_number() over() as "Sr. no",r.* from (
select * from w
union all
select ''<b>Total<b>'',
coalesce(sum("No of ANC in 2nd and 3rd trimester (concurrent)"),0),
coalesce(sum("Albendazole administration"),0),
round(coalesce(case when sum("No of ANC in 2nd and 3rd trimester (concurrent)") = 0 then 0 else sum("Albendazole administration")*100/sum("No of ANC in 2nd and 3rd trimester (concurrent)") end,0),2), 
coalesce(sum("No of ANC (concurrent) not given albendazole"),0)
from w) r',true,'ACTIVE','89c6137e-85a1-46f9-bb7c-b9fe83ac87a3'),
	 (1432,74841,'2019-11-11 14:32:00.05',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','bb7d4474-667f-453e-8bbf-271e3b11faed'),
	 (234,57698,'2019-02-04 17:42:56.385',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--BCG given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 years as ( 
	select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, 
	cast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date
	from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc
), child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.is_valid_for_tracking_report = true
	and y.financial_year = ''#financial_year#''
	and c.bcg is not null
	and c.dob between y.from_date and y.too_date
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','efa0d757-68ee-490a-bcb2-398ba284396c');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (260,1,'2019-02-05 12:17:58.856',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Measles given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 years as ( 
	select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, 
	cast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date
	from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc
), child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and y.financial_year = ''#financial_year#''
    and c.is_valid_for_tracking_report = true
	and measles is not null
	and c.dob between y.from_date and y.too_date
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','278bd931-5eaf-48a2-ac65-d25f4152d518'),
	 (1434,74840,'2019-11-15 16:11:10.626',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','-----------location wise analytics Report----------
with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#),
ldp as(
	select lc.parent_id as loc_id,sum(lwa.total_children) as total_children,sum(lwa.total_male) as total_male,sum(lwa.total_female) as total_female
	from location_hierchy_closer_det lc,location_wise_analytics lwa
	where lc.child_id = lwa.loc_id
	and lc.parent_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1)
	group by lc.parent_id
)
,lwat as (
	select 
	t.name,total_male,total_female,total_children
	from (select l.id ,l.name as name from location_hierchy_closer_det lc,location_master l  
			where lc.parent_id = #location_id# and depth = 1 and l.id = lc.child_id) as t
	left join ldp on ldp.loc_id = t.id
	order by name
)
select 
	row_number() over() as "Sr. no",	
	name as "Location Name",	
	case when total_male is null then 0 else total_male end as "Male",
	case when total_female is null then 0 else total_female end as "Female",	
	case when total_children is null then 0 else total_children end	as "Children (0-5)"
	from lwat	
union all
select
null,
''<b>Total</b>'',
sum(total_male),
sum(total_female),	
sum(total_children)
from lwat',true,'ACTIVE','32f1308b-6073-447d-918a-dff550890d61'),
	 (989,64189,'2019-04-12 16:01:21.807',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','655142be-8ba2-42cd-a28a-6a28fb451bf6'),
	 (1350,69973,'2019-08-20 17:33:42.915',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
select
to_date(case when ''#from_date#'' =''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when ''#to_date#'' =''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') as to_date
),
migration_master_det as (
select mm.* from (select * from migration_master, dates) mm 
inner join location_hierchy_closer_det depth_child on depth_child.child_id=mm.reported_location_id 
inner join location_hierchy_closer_det lhcd on (lhcd.child_id=depth_child.parent_id)
 where (case when (mm.from_date is not null and mm.to_date is not null) then
reported_on between mm.from_date and mm.to_date else 1=1 end) and mm.state not in (''DUPLICATE'',''REVERTED'')
and mm.type=''IN'' and mm.state in (''ROLLBACK'', ''NO_RESPONSE'') and lhcd.parent_id=#location_id# and lhcd.depth=1  #limit_offset#
),
final_Query as (
select concat(im.first_name,'' '', im.middle_name,'' '', im.last_name)|| case when im.unique_health_id is not null then '' (''|| im.unique_health_id||'')'' end
as member_name, concat(uu.first_name,'' '', uu.middle_name,'' '', uu.last_name)|| case when uu.contact_number is not null then '' (''|| uu.contact_number||'')'' end as reported_by, get_location_hierarchy(mm.location_migrated_from) as from_name, get_location_hierarchy(mm.location_migrated_to) as to_name,
to_char(mm.reported_on,''DD/MM/YYYY'') as reported_on
/*, mm.family_migrated_from, mm.family_migrated_to, mm.state*/
from migration_master_det mm
inner join um_user uu on uu.id=mm.reported_by
left join imt_member im on im.id=mm.member_id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
fq.member_name as "Member Name",
fq.reported_by as "Reported By",
fq.reported_on as "Reported On",
fq.from_name as "Migrated From",
fq.to_name as "Migrated To"
/*,
fq.state as "Migration Status",
fq.family_migrated_from as "Family Migrated From",
fq.family_migrated_to as "Family Migrated To"
*/
from final_Query fq',true,'ACTIVE','63af34c4-f348-453d-acbd-bf25eccc883f'),
	 (249,1,'2019-02-05 12:00:43.651',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','76c7b9f4-1029-4280-be0c-426ab773bee7'),
	 (1414,409,'2019-09-22 21:49:40.172',1,'2021-01-13 20:22:06.427965','demographic_location_id,loggedInUserId,location_id','with parameters as (
select cast(#location_id# as bigint) as location_id
/*,cast (case when #demographic_location_id# is null then null else ''#demographic_location_id#'' end as text) as demographic_group*/
,cast (null as text) as demographic_group
,cast(#loggedInUserId# as bigint) as logged_in_user
),final_detail as (
select 
lh.parent_id as location_id
,COALESCE(sum(lwa.total_10_to_14_unmarried_male),0) as total_10_to_14_unmarried_male
,COALESCE(sum(lwa.total_10_to_14_unmarried_female),0) as total_10_to_14_unmarried_female
,COALESCE(sum(lwa.total_15_to_18_unmarried_male),0) as total_15_to_18_unmarried_male
,COALESCE(sum(lwa.total_15_to_18_unmarried_female),0) as total_15_to_18_unmarried_female
,COALESCE(sum(lwa.total_10_to_14_male),0) as total_10_to_14_male
,COALESCE(sum(lwa.total_10_to_14_female),0) as total_10_to_14_female
,COALESCE(sum(lwa.total_15_to_18_male),0) as total_15_to_18_male
,COALESCE(sum(lwa.total_15_to_18_female),0) as total_15_to_18_female
from 
vw_location_closure_det_by_parent_location_depth lh
cross join parameters p
left join location_wise_analytics lwa on lh.child_id = lwa.loc_id
where lh.location_id = p.location_id 
and lh."depth" = 1
and (p.demographic_group is null or lh.child_demographic_type in (select ld.demographic_type from location_demographic_type_master ld,parameters p where ld.demographic_group = p.demographic_group)) 
group by lh.parent_id 
)
select row_number() over(order by l.location_name) as "Sr. No."	
,l.location_name as "Name"
,total_10_to_14_female as "Total No. of girls(10-14)"
,total_10_to_14_male as "Total No. of boys(10-14)"
,total_10_to_14_male+total_10_to_14_female as "Total(10-14)"
,total_15_to_18_female as "Total No. of girls(15-19)"
,total_15_to_18_male as "Total No. of boys(15-19)"
,total_15_to_18_male+total_15_to_18_female as "Total(15-19)"
,total_10_to_14_male
	+total_10_to_14_female
	+total_15_to_18_female
	+total_15_to_18_male
	as "Total"
from final_detail f
cross join parameters p
inner join vw_location_detail_with_user_prefer_language l
on l.location_id = f.location_id
and l.user_id = p.logged_in_user
union all
select 
null
,''<b>Total</b>''
,sum(total_10_to_14_female)
,sum(total_10_to_14_male)
,sum(total_10_to_14_male+total_10_to_14_female)
,sum(total_15_to_18_female)
,sum(total_15_to_18_male)
,sum(total_15_to_18_male+total_15_to_18_female)
,sum(total_10_to_14_male
	+total_10_to_14_female
	+total_15_to_18_male
	+total_15_to_18_female)
from final_detail',true,'ACTIVE','cdf84ddc-0348-4871-8132-d231fca6f55d'),
	 (1349,69973,'2019-08-20 17:28:12.616',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
select
to_date(case when ''#from_date#'' =''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when ''#to_date#'' =''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') as to_date
),
migration_master_det as (
select mm.* from (select * from migration_master, dates) mm 
inner join location_hierchy_closer_det depth_child on depth_child.child_id=mm.reported_location_id 
inner join location_hierchy_closer_det lhcd on (lhcd.child_id=depth_child.parent_id)
 where (case when (mm.from_date is not null and mm.to_date is not null) then
reported_on between mm.from_date and mm.to_date else 1=1 end) and mm.state not in (''DUPLICATE'',''REVERTED'')
and mm.type=''IN'' and mm.state in (''CONFIRMED'') and lhcd.parent_id=#location_id# and lhcd.depth=1  #limit_offset#
),
final_Query as (
select concat(im.first_name,'' '', im.middle_name,'' '', im.last_name)|| case when im.unique_health_id is not null then '' (''|| im.unique_health_id||'')'' end
as member_name, concat(uu.first_name,'' '', uu.middle_name,'' '', uu.last_name)|| case when uu.contact_number is not null then '' (''|| uu.contact_number||'')'' end as reported_by, get_location_hierarchy(mm.location_migrated_from) as from_name, get_location_hierarchy(mm.location_migrated_to) as to_name,
to_char(mm.reported_on,''DD/MM/YYYY'') as reported_on,
/* mm.family_migrated_from, mm.family_migrated_to, mm.state,*/
 concat(cnf.first_name,'' '', cnf.middle_name,'' '', cnf.last_name) as confirmed_by, to_char(mm.confirmed_on,''DD/MM/YYYY'') as confirmed_on
from migration_master_det mm
inner join um_user uu on uu.id=mm.reported_by
left join um_user cnf on cnf.id=mm.confirmed_by
left join imt_member im on im.id=mm.member_id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
fq.member_name as "Member Name",
fq.reported_by as "Reported By",
fq.reported_on as "Reported On",
fq.from_name as "Migrated From",
fq.to_name as "Migrated To",
fq.confirmed_on as "Confirmed On",
fq.confirmed_by as "Confirmed By"
/*
, fq.state as "Migration Status",
fq.family_migrated_from as "Family Migrated From",
fq.family_migrated_to as "Family Migrated To"
*/
from final_Query fq',true,'ACTIVE','6c3ffa97-275d-4fe6-bf7b-cdb7c0f34186'),
	 (75,1027,'2018-08-30 12:11:39.965',1,'2021-01-13 20:22:06.427965','from_month_year,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#
),ldp as(
  select location_id,regd_live_children,regd_no_live_children,c1_f1,c1_m1,c2_m2,c2_f2,c2_f1_m1,c3_m3,c3_f3,c3_m2_f1,c3_m1_f2
  from rch_service_provided_during_year,location_hierchy_closer_det
  where rch_service_provided_during_year.location_id = location_hierchy_closer_det.child_id 
  and location_hierchy_closer_det.parent_id = #location_id#
  and month_year between 
	(case when #from_month_year# is null then ''01/01/1970'' else to_date(''#from_month_year#'',''MM/DD/YYYY'') end) 
  and 
  	(case when #to_month_year# is null then ''01/01/1970'' else to_date(''#to_month_year#'',''MM/DD/YYYY'') end)
 ), w as (
    select
	location_hierchy_closer_det.parent_id as loc_id,
    coalesce(sum(regd_live_children),0) as regd_live_children,
    coalesce(sum(regd_no_live_children),0) as regd_no_live_children,
    coalesce(sum(c1_m1),0) as c1_m1,
    coalesce(sum(c1_f1),0) as c1_f1,
    coalesce(sum(c1_f1)+sum(c1_m1),0) as tot_1_child,
    coalesce(sum(c2_m2),0) as c2_m2,
    coalesce(sum(c2_f2),0) as c2_f2,
    coalesce(sum(c2_f1_m1),0) as c2_f1_m1,
    coalesce(sum(c2_f1_m1)+sum(c2_f2)+sum(c2_m2),0) as tot_2_child,
    coalesce(sum(c3_m3),0) as c3_m3,
    coalesce(sum(c3_f3),0) as c3_f3,
    coalesce(sum(c3_m2_f1),0) as c3_m2_f1,
    coalesce(sum(c3_m1_f2),0) as c3_m1_f2,
    coalesce(sum(c3_m1_f2)+sum(c3_m2_f1)+sum(c3_f3)+sum(c3_m3),0) as tot_3_child
from (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth=1)as t 
inner join location_hierchy_closer_det on t.child_id = location_hierchy_closer_det.parent_id 
inner join ldp on ldp.location_id = location_hierchy_closer_det.child_id
group by location_hierchy_closer_det.parent_id 
),s as (
select case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name
		else lm.name end as "Location Name",
	lm.id AS hidden_location_id,
   	coalesce(regd_live_children,0) as "Total pregnant women regd with live children",
    coalesce(regd_no_live_children,0) as "Total pregnant women regd with 0 children",
    coalesce(c1_m1,0) as "1 Male",
    coalesce(c1_f1,0) as "1 Female",
    coalesce(tot_1_child,0) as "Total in 1 child",
    coalesce(c2_m2,0) as "2 male",
    coalesce(c2_f2,0) as "2 female",
    coalesce(c2_f1_m1,0) as "1 male 1 female",
    coalesce(tot_2_child,0) as "Total in 2 child",
    coalesce(c3_m3,0) as "3 male",
    coalesce(c3_f3,0) as "3 female",
    coalesce(c3_m2_f1,0) as "2 male 1 female",
    coalesce(c3_m1_f2,0) as "2 female 1 male",
coalesce(tot_3_child,0) as "Total in 3 child"	
from (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth=1 limit 100) as t
inner join location_master lm on lm.id = t.child_id
left join w on w.loc_id = lm.id
cross join prefered_language
order by lm.name,prefered_language.is_enlish
)
select row_number() over() as "Sr. no", s.* from s
union all
SELECT
	NULL,
    ''<b>Total<b>'',
    #location_id#,
coalesce(sum("Total pregnant women regd with live children"),0),
    coalesce(sum("Total pregnant women regd with 0 children"),0)  ,
    coalesce(sum("1 Male"),0),
    coalesce(sum("1 Female"),0),
    coalesce(sum("Total in 1 child"),0),
    coalesce(sum("2 male"),0),
    coalesce(sum("2 female"),0),
    coalesce(sum("1 male 1 female"),0),
    coalesce(sum("Total in 2 child"),0)  ,
    coalesce(sum("3 male"),0),
    coalesce(sum("3 female"),0),
    coalesce(sum("2 male 1 female"),0),
    coalesce(sum("2 female 1 male"),0),
    coalesce(sum("Total in 3 child"),0)    
from s',true,'ACTIVE','b37a0e38-e2fd-4c80-baac-0083d26ca559'),
	 (992,409,'2019-04-12 16:44:14.667',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--LBW Child Registered (3.1-3.5 kg)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.delivery_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.delivery_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.birth_weight is not null and c.birth_weight >= 3 and c.birth_weight < 3.5
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','058d779e-c5f0-4388-8a78-45ff86e609d8'),
	 (1083,63746,'2019-05-01 15:07:07.423',1,'2021-01-13 20:22:06.427965','limit_offset,age_group_or_child_count,location_id','with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)
,age_group as (
    select ''15-19'' as age_group, current_date - interval ''19 years'' as from_date, current_date - interval ''15 years''  as to_date
    union
    select ''20-24'' as age_group,  current_date - interval ''24 years'' as from_date, current_date - interval ''19 years'' - interval ''1 day''  as to_date
    union
    select ''25-29'' as age_group, current_date - interval ''29 years'' as from_date, current_date - interval ''24 years'' - interval ''1 day''  as to_date
    union
    select ''30-34'' as age_group,  current_date - interval ''34 years'' as from_date, current_date - interval ''29 years'' - interval ''1 day''  as to_date
    union
    select ''35-39'' as age_group, current_date - interval ''39 years'' as from_date, current_date - interval ''34 years'' - interval ''1 day''  as to_date
    union
    select ''40-44'' as age_group,  current_date - interval ''44 years'' as from_date, current_date - interval ''39 years'' - interval ''1 day''  as to_date
    union
    select ''45-49'' as age_group, current_date - interval ''49 years'' as from_date, current_date - interval ''44 years'' - interval ''1 day''  as to_date
)
,member_location as (
	select m.member_id, m.loc_id  from rch_eligible_couple_analytics m
	inner join age_group on m.dob between age_group.from_date and age_group.to_date
	inner join locations on locations.child_id = m.loc_id
	where ( case when #age_group_or_child_count# is null then age_group in (''15-19'',''20-24'',''25-29'',''30-34'',''35-39'',''40-44'',''45-49'') else age_group = (''#age_group_or_child_count#'') end) 
	and  m.last_method_of_contraception in (''IUCD5'',''IUCD10'') 
        #limit_offset#
)
,loc_det as(
	select member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id
	,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id
	from location_master,location_type_master,member_location 
	where 
	location_master.id = member_location.loc_id and location_type_master.type = location_master.type
)
select 
	 ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
	mem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as "Member Name",
	fam.family_id as "Family Id",to_char(r.dob, ''DD/MM/YYYY'') as "Birth Date",
	string_agg(lm.name,''> '' order by lhcd.depth desc) as "Location Hierarchy"  
from rch_eligible_couple_analytics r
inner join loc_det on loc_det.member_id = r.member_id
inner join imt_member mem on mem.id = r.member_id
inner join imt_family fam on mem.family_id = fam.family_id
inner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id
inner join location_master lm on lm.id = lhcd.parent_id
group by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;',true,'ACTIVE','bd648895-4ebd-46b7-bf83-cd80746ea835');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1245,409,'2019-07-24 10:37:22.254',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Rota Virus 3(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
    and c.is_valid_for_tracking_report = true
	and c.rota_virus_3 is not null
	and c.rota_virus_3 >= ''07-01-2019''
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','9e16fc0c-0d99-48ae-878e-f932e98df556'),
	 (763,64189,'2019-03-04 11:54:10.877',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,loggedInUserId,location_id,health_infra_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
dates as(
select
	to_date (
	case
		when ''#from_date#'' = ''null'' then null
		else ''#from_date#''
	end,
	''MM/DD/YYYY'') as from_date ,
	to_date (
	case
		when ''#to_date#'' = ''null'' then null
		else ''#to_date#''
	end,
	''MM/DD/YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as too_date ) ,
member_det as(
select
	imt_member.id,
	imt_member.unique_health_id,
	concat(imt_member.first_name, ''  '', imt_member.middle_name, ''  '', imt_member.last_name) as "Member name",
	imt_member.mobile_number,
	imt_family.location_id as loc_id,
	imt_family.area_id as area_id
from
	health_infrastructure_details infra
inner join rch_anc_master ram on
	infra.id = ram.health_infrastructure_id
inner join imt_member on
	imt_member.id = ram.member_id
inner join imt_family on
	imt_member.family_id = imt_family.family_id
inner join dates on
	ram.created_on between dates.from_date and dates.too_date
where
	infra.location_id = #location_id#
	and ram.is_from_web = true
	and infra.id = #health_infra_id# ) ,
loc as (
select
	distinct loc_id
from
	member_det ),
loc_det as (
select
	loc.loc_id,
	string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
from
	loc,
	location_master l1,
	location_hierchy_closer_det lhcd,
	location_master l2,
        prefered_language
where
	l1.id = loc.loc_id
	and lhcd.child_id = l1.id
	and l2.id = lhcd.parent_id
group by
	loc.loc_id ),
fhw_det as (
select
	loc.loc_id,
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' || ''Contact : '' ||
	case
		when u.contact_number is not null then u.contact_number
		else ''N/A''
	end as fhw
from
	um_user_location ul,
	um_user u,
	loc
where
	loc.loc_id = ul.loc_id
	and u.id = ul.user_id
	and u.state = ''ACTIVE''
	and ul.state = ''ACTIVE''
	and u.role_id = (
	select
		id
	from
		um_role_master
	where
		name = ''FHW'')
group by
	loc.loc_id,
	ul.state,
	u.state,
	u.first_name,
	u.last_name,
	u.user_name,
	u.contact_number),
asha_areas as (
select
	distinct area_id
from
	member_det ),
asha_det as (
select
	asha_areas.area_id,
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' || ''Contact : '' ||
	case
		when u.contact_number is not null then u.contact_number
		else ''N/A''
	end as asha
from
	um_user_location ul,
	um_user u,
	asha_areas
where
	asha_areas.area_id = ul.loc_id
	and u.id = ul.user_id
	and u.state = ''ACTIVE''
	and ul.state = ''ACTIVE''
	and u.role_id = (
	select
		id
	from
		um_role_master
	where
		name = ''Asha'')
group by
	asha_areas.area_id,
	ul.state,
	u.state,
	u.first_name,
	u.last_name,
	u.user_name,
	u.contact_number) select
	ROW_NUMBER() over () as "Sr No",
	member_det.unique_health_id as "Member ID",
	member_det."Member name",
	member_det.mobile_number as "Phone number",
	loc_det.aoi as "Location",
	case
		when fhw_det.fhw is null then ''No FHW Assigned''
		else fhw_det.fhw
	end as "FHW Details",
	case
		when asha_det.asha is null then ''No Asha Assigned''
		else asha_det.asha
	end as "Asha Details"
from
	member_det
inner join loc_det on
	member_det.loc_id = loc_det.loc_id
left join fhw_det on
	member_det.loc_id = fhw_det.loc_id
left join asha_det on
	member_det.area_id = asha_det.area_id #limit_offset#;',true,'ACTIVE','686226f9-b38f-405b-be55-8a23a3e72208'),
	 (271,1,'2019-02-05 12:38:34.929',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
	where l.child_id = c.loc_id and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.hep_b is not null
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','fcce168e-3f95-408c-8e83-bbc6e92559d6'),
	 (998,64189,'2019-04-12 17:17:57.145',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--LBW Child Registered (Weight not registered)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.delivery_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.delivery_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.birth_weight is null
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','00cff9a0-df9f-4b6a-99a3-6daeaddb5141'),
	 (1093,63746,'2019-05-01 15:19:51.507',1,'2021-01-13 20:22:06.427965','limit_offset,age_group_or_child_count,location_id','with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)
,age_group as (
    select ''15-19'' as age_group, current_date - interval ''19 years'' as from_date, current_date - interval ''15 years''  as to_date
    union
    select ''20-24'' as age_group,  current_date - interval ''24 years'' as from_date, current_date - interval ''19 years'' - interval ''1 day''  as to_date
    union
    select ''25-29'' as age_group, current_date - interval ''29 years'' as from_date, current_date - interval ''24 years'' - interval ''1 day''  as to_date
    union
    select ''30-34'' as age_group,  current_date - interval ''34 years'' as from_date, current_date - interval ''29 years'' - interval ''1 day''  as to_date
    union
    select ''35-39'' as age_group, current_date - interval ''39 years'' as from_date, current_date - interval ''34 years'' - interval ''1 day''  as to_date
    union
    select ''40-44'' as age_group,  current_date - interval ''44 years'' as from_date, current_date - interval ''39 years'' - interval ''1 day''  as to_date
    union
    select ''45-49'' as age_group, current_date - interval ''49 years'' as from_date, current_date - interval ''44 years'' - interval ''1 day''  as to_date
)
,member_location as (
	select m.member_id, m.loc_id  from rch_eligible_couple_analytics m
	inner join age_group on m.dob between age_group.from_date and age_group.to_date
	inner join locations on locations.child_id = m.loc_id
	where ( case when #age_group_or_child_count# is null then age_group in (''15-19'',''20-24'',''25-29'',''30-34'',''35-39'',''40-44'',''45-49'') else age_group = (''#age_group_or_child_count#'') end) 
	and  m.last_method_of_contraception in (''MLSTR'',''FMLSTR'',''IUCD5'',''IUCD10'',''CONDOM'',''ORALPILLS'',''CHHAYA'',''ANTARA'') 
        #limit_offset#
)
,loc_det as(
	select member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id
	,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id
	from location_master,location_type_master,member_location 
	where 
	location_master.id = member_location.loc_id and location_type_master.type = location_master.type
)
select 
	 ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
	mem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as "Member Name",
	fam.family_id as "Family Id",to_char(r.dob, ''DD/MM/YYYY'') as "Birth Date",
	string_agg(lm.name,''> '' order by lhcd.depth desc) as "Location Hierarchy"  
from rch_eligible_couple_analytics r
inner join loc_det on loc_det.member_id = r.member_id
inner join imt_member mem on mem.id = r.member_id
inner join imt_family fam on mem.family_id = fam.family_id
inner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id
inner join location_master lm on lm.id = lhcd.parent_id
group by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;',true,'ACTIVE','8e8c981d-d288-42bb-ba4d-67ef0efc8a94'),
	 (1520,74841,'2020-02-21 12:48:23.238',1,'2021-01-13 20:22:06.427965','location_id','WITH loc_det AS (
    SELECT
        child_id as id
    FROM
        location_hierchy_closer_det
    WHERE
        parent_id = #location_id#
        AND "depth" = 1
), analytics as (
	select
	lh.parent_id,

    sum(chfc_family_verified_by_fhw) + sum(chfc_family_verified_by_mphw) as total_verified_family,

    sum(chfc_single_member_existing_families) as chfc_single_member_existing_families,
    sum(chfc_single_member_newly_added_families) as chfc_single_member_newly_added_families,
    sum(chfc_two_member_existing_families) as chfc_two_member_existing_families,
    sum(chfc_two_member_newly_added_families) as chfc_two_member_newly_added_families,
    sum(chfc_three_member_existing_families) as chfc_three_member_existing_families,
    sum(chfc_three_member_newly_added_families) as chfc_three_member_newly_added_families,
    sum(chfc_more_then_three_member_existing_families) as chfc_more_then_three_member_existing_families,
    sum(chfc_more_then_three_member_newly_added_families) as chfc_more_then_three_member_newly_added_families

	from 
		location_wise_analytics lw,
		location_hierchy_closer_det lh
	where lh.parent_id IN (select id from loc_det)
        and lh.child_id = lw.loc_id
	GROUP BY
            lh.parent_id
)

select  
lm.english_name AS "Locations",
COALESCE(total_verified_family, 0) as "Total Verified Family",
COALESCE(chfc_single_member_existing_families, 0) as "Single Member Existing Families",
COALESCE(chfc_single_member_newly_added_families, 0) as "Single Member Newly Added Families",
COALESCE(chfc_two_member_existing_families, 0) as "Two Member Existing Families",
COALESCE(chfc_two_member_newly_added_families, 0) as "Two Member Newly Added Families",
COALESCE(chfc_three_member_existing_families, 0) as "Three Member Existing Families",
COALESCE(chfc_three_member_newly_added_families, 0) as "Three Member Newly Added Families",
COALESCE(chfc_more_then_three_member_existing_families, 0) as "More Than Three Member Existing Families",
COALESCE(chfc_more_then_three_member_newly_added_families, 0) as "More Than Three Member Newly Added Families"
from analytics a
inner join location_master lm   
    on lm.id = a.parent_id
union all
select  
''<b>Total</b>'',
COALESCE(sum(total_verified_family), 0) as total_verified_family,
COALESCE(sum(chfc_single_member_existing_families), 0),
COALESCE(sum(chfc_single_member_newly_added_families), 0),
COALESCE(sum(chfc_two_member_existing_families), 0),
COALESCE(sum(chfc_two_member_newly_added_families), 0),
COALESCE(sum(chfc_three_member_existing_families), 0),
COALESCE(sum(chfc_three_member_newly_added_families), 0),
COALESCE(sum(chfc_more_then_three_member_existing_families), 0),
COALESCE(sum(chfc_more_then_three_member_newly_added_families), 0)
from analytics a
inner join location_master lm   
    on lm.id = a.parent_id',true,'ACTIVE','50847baf-abbe-4306-8c5b-ad078a70b212'),
	 (1172,60512,'2019-05-31 14:36:24.896',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as (
	select (case when ''#from_date#'' = ''null'' then ''01/01/1970'' else to_date(''#from_date#'',''MM-DD-YYYY'') end) as from_date, 
	(case when ''#to_date#'' = ''null'' then ''01/01/1970'' else to_date(''#to_date#'',''MM-DD-YYYY'') end)+ interval ''1 day'' - interval ''00:00:00.001'' as to_date
),health_infra_ids as(
	select id from health_infrastructure_details where location_id in
	(select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and type in (1061,1009,1008,1007,1012,1063,1084)
),anc_detail as (
	select distinct health_infra_ids.id
	from health_infra_ids
	inner join rch_anc_master on rch_anc_master.health_infrastructure_id = health_infra_ids.id
	inner join dates on true
	where rch_anc_master.created_on between dates.from_date and dates.to_date
    and rch_anc_master.is_from_web = true
),wpd_detail as (
	select distinct health_infra_ids.id 
	from rch_wpd_mother_master
	inner join health_infra_ids on rch_wpd_mother_master.health_infrastructure_id = health_infra_ids.id
	inner join dates on true
	where created_on between dates.from_date and dates.to_date
    and rch_wpd_mother_master.is_from_web = true
),pnc_detail as (
	select distinct health_infra_ids.id
	from rch_pnc_master
	inner join health_infra_ids on rch_pnc_master.health_infrastructure_id = health_infra_ids.id
	inner join dates on true
	where created_on between dates.from_date and dates.to_date
    and rch_pnc_master.is_from_web = true
),cs_detail as (
	select distinct health_infra_ids.id
	from rch_child_service_master
	inner join health_infra_ids on rch_child_service_master.health_infrastructure_id = health_infra_ids.id
	inner join dates on true
	where created_on between dates.from_date and dates.to_date
    and rch_child_service_master.is_from_web = true
),data_count as (
	select * from anc_detail
	union
	select * from wpd_detail
	union
	select * from pnc_detail
	union
	select * from cs_detail
),not_entered_ids as (
	select health_infra_ids.id
	from health_infra_ids
	where health_infra_ids.id not in (select id from data_count)
),not_entered_details as (
	select health_infrastructure_details.id,
	health_infrastructure_details.name,
	health_infrastructure_details.location_id,
	health_infrastructure_details.address,
	lv.value as type
	from health_infrastructure_details
	inner join not_entered_ids on health_infrastructure_details.id = not_entered_ids.id
	inner join listvalue_field_value_detail lv on lv.id = health_infrastructure_details.type
	#limit_offset#
),location_hierarchys as (
	select not_entered_details.id,string_agg(l2.name,''>'' order by lhcd.depth desc) as location_hierarchy
	from not_entered_details 
	inner join location_hierchy_closer_det lhcd on lhcd.child_id = not_entered_details.location_id
	inner join location_master l2 on l2.id = lhcd.parent_id
	group by not_entered_details.id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
not_entered_details.name as "Name",
location_hierarchys.location_hierarchy as "Location",
not_entered_details.type as "Type",
not_entered_details.address as "Address"
from not_entered_details
inner join location_hierarchys on not_entered_details.id = location_hierarchys.id',true,'ACTIVE','6f3bcce3-89fa-4fa7-8e09-c2a9aa3ba716'),
	 (1552,74841,'2020-03-30 11:32:24.685',1,'2021-01-13 20:22:06.427965','limit_offset,location_id','with dr_techo_reg_det as(
select hid.location_id  as loc_id
,case when u.state = ''ACTIVE'' then true else false end as approved
,case when u.state = ''DISAPPROVED'' then true else false end as disapproved
,case when u.state = ''UNVERIFIED'' then true else false end as pending
,u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' as member_det,
case when u.contact_number is not null then u.contact_number else ''N/A'' end as mobile,
u.address
from um_user u
left join user_health_infrastructure  uhi on u.id = uhi.user_id and uhi.state = ''ACTIVE''
left join health_infrastructure_details hid on hid.id = uhi.health_infrastrucutre_id
left join location_hierchy_closer_det lhc on lhc.child_id = hid.location_id 
where  role_id in (
select id from um_role_master where name = ''DrTecho User'')
and lhc.parent_id = #location_id# and  u.state = ''ACTIVE''
--#limit_offset#
),
loc as (
	select distinct loc_id from dr_techo_reg_det
),
loc_det as (
	select loc.loc_id,  string_agg((case when ((l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
	
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No.",
dr_techo_reg_det.member_det as "Member Details",
dr_techo_reg_det.mobile as "Contact NO.",
loc_det.aoi as "Location",
dr_techo_reg_det.address as "Address"
--dr_techo_reg_det.approved as "Approved"
--dr_techo_reg_det.disapproved as "Disapproved",
--dr_techo_reg_det.pending as "Pending"
from loc_det
left join dr_techo_reg_det on dr_techo_reg_det.loc_id = loc_det.loc_id;',true,'ACTIVE','4185d592-4c46-4d5c-85a4-0f03995c6efa'),
	 (1262,409,'2019-07-24 11:08:06.101',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','3ef0b893-806d-460f-a70b-17b7538bfc54'),
	 (313,57698,'2019-02-12 15:51:11.275',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,loggedInUserId,from_month,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#
),dates as (
select to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM-DD-YYYY'') from_date
,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 milliseconds'' to_date
),child_det as (
	select m.id,c.death_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob,to_char(c.death_date, ''DD/MM/YYYY'') as dod
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m,dates
	where l.child_id = c.death_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.no_of_days_in_death is not null and c.no_of_days_in_death between 0 and 7
	and c.death_date between dates.from_date and dates.to_date
	order by c.death_date
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
child_det.dod as "Date of Death",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','48c1b4c4-92f3-4de4-8b10-713827bd27b4');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (273,1,'2019-02-05 12:40:37.061',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','ba1528c0-0296-4bcb-a674-02e15fe6d715'),
	 (1553,74841,'2020-03-30 11:33:08.08',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','a4438077-d901-46b7-a216-cd3054f92a51'),
	 (274,1,'2019-02-05 12:40:37.073',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
	where l.child_id = c.loc_id and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.opv0 is not null
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','3cef71de-ec5c-4c8f-a4e1-7693fcf7d9a5'),
	 (250,1,'2019-02-05 12:00:43.672',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--DPT 3 given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 years as ( 
	select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, 
	cast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date
	from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc
), child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and y.financial_year = ''#financial_year#''
    and c.is_valid_for_tracking_report = true
	and c.dpt3 is not null
	and c.dob between y.from_date and y.too_date
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','1566114f-a313-45b8-a98c-b36e812f9125'),
	 (149,58981,'2019-01-21 20:28:05.137',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','8c5d27ba-7917-4213-bd61-0af2d8ca9778'),
	 (1400,66522,'2019-08-28 15:27:23.284',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
	select
	to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date ,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end, ''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_date 
),call_master_ids as (
	select id,
        created_on,
        created_by,
        get_location_hierarchy(location_id) as Location_hierarchy
        from gvk_manage_call_master
	inner join dates on gvk_manage_call_master.created_on between dates.from_date and dates.to_date
	where gvk_manage_call_master.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and gvk_manage_call_master.call_response not in (''com.argusoft.imtecho.gvk.call.cant-talk'',
	''com.argusoft.imtecho.gvk.call.no-number-available'',
	''com.argusoft.imtecho.gvk.call.wrong-mobile-number'',
        ''com.argusoft.imtecho.gvk.call.phone-switched-off'',
        ''com.argusoft.imtecho.gvk.call.unresponsive'',
        ''com.argusoft.imtecho.gvk.call.not-reachable'',
''com.argusoft.imtecho.gvk.call.processed'',
''com.argusoft.imtecho.gvk.call.processing''
	)
	and gvk_manage_call_master.call_type = ''MIG_OUT_VERI''
),
response_ids as (
	select gvk_member_migration_call_response.id, call_master_ids.created_on,call_master_ids.created_by,Location_hierarchy
	from call_master_ids
	inner join gvk_member_migration_call_response on call_master_ids.id = gvk_member_migration_call_response.manage_call_master_id
	order by gvk_member_migration_call_response.id desc
	#limit_offset#
),
response as (
	select
Location_hierarchy, 
response_ids.created_on,response_ids.created_by,
	case when response.is_member_called is true then ''Yes''
	     when response.is_member_called is false then ''No''
	     when response.is_member_called is null then ''-'' end is_member_called,
	case when response.is_fhw_called is true then ''Yes''
	     when response.is_fhw_called is false then ''No''
	     when response.is_fhw_called is null then ''-'' end is_fhw_called,
	case when response.is_asha_called is true then ''Yes''
	     when response.is_asha_called is false then ''No''
	     when response.is_asha_called is null then ''-'' end is_asha_called,
	migration.reported_by,
	case when migration.state=''REPORTED'' then ''Reported'' 
	     when migration.state=''CONFIRMED'' then ''Confirmed''
	     when migration.state=''NO_RESPONSE'' then ''No Response''
	     when migration.state=''ROLLBACK'' then ''Rollback''
	     when migration.state=''NOT_RESOLVED'' then ''Not resolved''
	     when migration.state=''NOT_HAPPEN'' then ''Not happen''
	     when migration.state=''LFU'' then ''Loss to folloup''
	     when migration.state=''REVERTED'' then ''Reverted''
	     when migration.state=''DUPLICATE'' then ''Duplicate''
	     else ''other'' end as migation_state,
case when response.performed_action =''create_temp_member'' then ''Created temporory member''
	when response.performed_action =''UPDATE_LOCATION'' then ''Update Location''
	when response.performed_action =''search_for_member'' then ''Search for member''
	when response.performed_action =''ROLLBACK'' then ''Rollback''
	when response.performed_action = ''NOT_RESOLVED'' then ''Not resolved''
	when response.performed_action = ''LFU'' then ''Loss to folloup'' end as performed_action,
	     concat(migration.mobile_data\:\:json->>''firstname'', '' '', migration.mobile_data\:\:json->>''middleName'', '' '', migration.mobile_data\:\:json->>''lastName'') as member_details_f,
	     migration.mobile_data\:\:json->>''fhwOrAshaName'' as fhwOrAshaName_f,
	--gvk_immunisation_verification_response.id as gvk_immunisation_id,
	--gvk_immunisation_verification_response.member_id,
	response_ids.id as gvk_member_migration_id,migration.member_id
	from response_ids
	inner join gvk_member_migration_call_response response on response_ids.id = response.id
	inner join migration_master migration on migration.id = response.migration_id

),
member_location_area_ids as (
	select response.gvk_member_migration_id,response.member_id,imt_family.location_id,imt_family.area_id
	from response
	inner join imt_member on imt_member.id = response.member_id
	inner join imt_family on imt_family.family_id = imt_member.family_id
),asha as (
	select member_location_area_ids.gvk_member_migration_id,asha.id
	from member_location_area_ids
	inner join um_user_location asha_location on member_location_area_ids.area_id = asha_location.loc_id and asha_location.state = ''ACTIVE''
	inner join um_user asha on asha_location.user_id = asha.id and asha.role_id = 24 and asha.state = ''ACTIVE''
),asha_unique as (
	select asha.gvk_member_migration_id,max(asha.id)
	from asha
	group by asha.gvk_member_migration_id
),fhw as (
	select member_location_area_ids.gvk_member_migration_id,fhw.id
	from member_location_area_ids
	inner join um_user_location fhw_location on member_location_area_ids.location_id = fhw_location.loc_id and fhw_location.state = ''ACTIVE''
	inner join um_user fhw on fhw_location.user_id = fhw.id and fhw.role_id = 30 and fhw.state = ''ACTIVE''
),fhw_unique as (
	select fhw.gvk_member_migration_id,max(fhw.id)
	from fhw
	group by fhw.gvk_member_migration_id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
im.unique_health_id as "Unique Health ID",
case when im.id is null then ''NA'' else concat(im.first_name,'' '',im.middle_name,'' '',im.last_name) end as "Member Name" ,
Location_hierarchy as "Location",
to_char(response.created_on,''DD-MM-YYYY HH:MI PM'') as  "Call Date",

-- response.member_details_f as "Member Name *",
-- response.fhwOrAshaName_f as "Asha/FHW Name*",
performed_action as "Performed Action",
migation_state as "Migaration state",
concat(fhw_user.first_name,'' '',fhw_user.middle_name,'' '',fhw_user.last_name) as "FHW Name",
concat(asha_user.first_name,'' '',asha_user.middle_name,'' '',asha_user.last_name) as "ASHA Name",
concat(um.first_name, '' '', um.last_name) as "RO Details",
concat(reported_by.first_name,'' '',reported_by.middle_name,'' '',reported_by.last_name) as "Reported By"
--,response.is_member_called as "Called to Member",
--response.is_fhw_called as "Called to FHW",
--response.is_asha_called as "Called to Asha"

from response
left join imt_member im on response.member_id = im.id
left join asha_unique on response.gvk_member_migration_id = asha_unique.gvk_member_migration_id
left join fhw_unique on response.gvk_member_migration_id = fhw_unique.gvk_member_migration_id
left join um_user asha_user on asha_unique.max = asha_user.id
left join um_user fhw_user on fhw_unique.max = fhw_user.id
left join um_user um on response.created_by = um.id
inner join um_user reported_by on reported_by.id = response.reported_by',true,'ACTIVE','f452dc2a-d2f4-4e88-83cf-e9bfe57251b9'),
	 (438,1,'2019-02-14 00:36:36.542',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','c2760128-c538-4029-bd0d-63d3d2c61d55'),
	 (657,409,'2019-02-19 20:51:30.415',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','0056bb57-00ab-4d80-b2ee-bad1c7f31b06'),
	 (585,1,'2019-02-18 13:34:29.79',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','-------Measles-------
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
	where l.child_id = c.measles_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.measles is not null
	group by m.id, f.location_id, c.dob, c.measles
	having  (case when extract(month from measles) > 3 
	then concat(extract(year from measles), ''-'', extract(year from measles) + 1)
	else concat(extract(year from measles) - 1, ''-'', extract(year from measles)) end = 
		case when #financial_year# is null then 
			case when extract(month from current_date) > 3 
			then concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)
			else concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end
		else ''#financial_year#'' end) 
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','02522085-0e2f-4bcf-adb9-2e7c4534e18d'),
	 (416,1,'2019-02-13 12:53:35.558',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','c3c1f3eb-cb71-4841-a580-d2e5a9ba7b1a');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (302,1,'2019-02-11 18:00:01.234',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','794228b1-59e0-4166-91dc-517eb02c5861'),
	 (148,58981,'2019-01-21 19:55:31.305',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Infants not given BCG(Monitoring BCG Vaccine as per DOB)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, m.unique_health_id, m.family_id, m.dob, c.native_loc_id as loc_id,
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.native_loc_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.member_id is not null
and c.member_state != ''DEAD''
	and c.bcg is null
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.unique_health_id as "Child ID",
child_det.family_id as "Family ID",
child_det.name as "Name",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','8fda4313-09b0-4eca-9fcb-057a3e496872'),
	 (1347,69973,'2019-08-20 16:03:59.197',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
select
to_date(case when ''#from_date#'' =''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when ''#to_date#'' =''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') as to_date
),
migration_master_det as (
select mm.* from (select * from migration_master, dates) mm 
inner join location_hierchy_closer_det depth_child on depth_child.child_id=mm.reported_location_id 
inner join location_hierchy_closer_det lhcd on (lhcd.child_id=depth_child.parent_id)
 where (case when (mm.from_date is not null and mm.to_date is not null) then
reported_on between mm.from_date and mm.to_date else 1=1 end) and mm.state not in (''DUPLICATE'',''REVERTED'')
and mm.type=''IN'' and lhcd.parent_id=#location_id# and lhcd.depth=1  #limit_offset#
),
final_Query as (
select concat(im.first_name,'' '', im.middle_name,'' '', im.last_name)|| case when im.unique_health_id is not null then '' (''|| im.unique_health_id||'')'' end
as member_name, concat(uu.first_name,'' '', uu.middle_name,'' '', uu.last_name)|| case when uu.contact_number is not null then '' (''|| uu.contact_number||'')'' end as reported_by, get_location_hierarchy(mm.location_migrated_from) as from_name, get_location_hierarchy(mm.location_migrated_to) as to_name, to_char(mm.reported_on,''DD/MM/YYYY'') as reported_on, case when mm.state in (''REPORTED'',''NOT_RESOLVED'') then ''PENDING''
when mm.state=''CONFIRMED'' then ''COMPLETED''
when mm.state in (''NO_RESPONSE'', ''ROLLBACK'') then ''REVERTED''
when mm.state=''NOT_HAPPEN'' then ''REJECTED''
when mm.state = ''LFU'' then mm.state end as status
/*, mm.family_migrated_from, mm.family_migrated_to, area_from.name as area_from, area_to.name as area_to, mm.state*/
from migration_master_det mm
inner join um_user uu on uu.id=mm.reported_by
left join imt_member im on im.id=mm.member_id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
fq.member_name as "Member Name",
fq.reported_by as "Reported By",
fq.reported_on as "Reported On",
fq.from_name as "Migrated From",
fq.to_name as "Migrated To",
fq.status as "Migration Status"
/*,
fq.state as "Migration Status",
fq.family_migrated_from as "Family Migrated From",
fq.family_migrated_to as "Family Migrated To"*/
from final_Query fq',true,'ACTIVE','d16a95f8-3f87-435a-a3a2-71a3f7954ea6'),
	 (1078,63746,'2019-05-01 14:47:26.985',1,'2021-01-13 20:22:06.427965','limit_offset,age_group_or_child_count,location_id','with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)
,age_group as (
    select ''15-19'' as age_group, current_date - interval ''19 years'' as from_date, current_date - interval ''15 years''  as to_date
    union
    select ''20-24'' as age_group,  current_date - interval ''24 years'' as from_date, current_date - interval ''19 years'' - interval ''1 day''  as to_date
    union
    select ''25-29'' as age_group, current_date - interval ''29 years'' as from_date, current_date - interval ''24 years'' - interval ''1 day''  as to_date
    union
    select ''30-34'' as age_group,  current_date - interval ''34 years'' as from_date, current_date - interval ''29 years'' - interval ''1 day''  as to_date
    union
    select ''35-39'' as age_group, current_date - interval ''39 years'' as from_date, current_date - interval ''34 years'' - interval ''1 day''  as to_date
    union
    select ''40-44'' as age_group,  current_date - interval ''44 years'' as from_date, current_date - interval ''39 years'' - interval ''1 day''  as to_date
    union
    select ''45-49'' as age_group, current_date - interval ''49 years'' as from_date, current_date - interval ''44 years'' - interval ''1 day''  as to_date
)
,member_location as (
	select m.member_id, m.loc_id  from rch_eligible_couple_analytics m
	inner join age_group on m.dob between age_group.from_date and age_group.to_date
	inner join locations on locations.child_id = m.loc_id
	where ( case when #age_group_or_child_count# is null then age_group in (''15-19'',''20-24'',''25-29'',''30-34'',''35-39'',''40-44'',''45-49'') else age_group = (''#age_group_or_child_count#'') end) 
	and  m.last_method_of_contraception = (''MLSTR'') 
        #limit_offset#
)
,loc_det as(
	select member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id
	,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id
	from location_master,location_type_master,member_location 
	where 
	location_master.id = member_location.loc_id and location_type_master.type = location_master.type
)
select 
	 ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
	mem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as "Member Name",
	fam.family_id as "Family Id",to_char(r.dob, ''DD/MM/YYYY'') as "Birth Date",
	string_agg(lm.name,''> '' order by lhcd.depth desc) as "Location Hierarchy"  
from rch_eligible_couple_analytics r
inner join loc_det on loc_det.member_id = r.member_id
inner join imt_member mem on mem.id = r.member_id
inner join imt_family fam on mem.family_id = fam.family_id
inner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id
inner join location_master lm on lm.id = lhcd.parent_id
group by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;',true,'ACTIVE','f69d6a72-a560-4ff6-b10c-e6fef6c1b102'),
	 (252,1,'2019-02-05 12:02:08.492',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Penta 3 given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 years as ( 
	select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, 
	cast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date
	from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc
), child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and y.financial_year = ''#financial_year#''
    and c.is_valid_for_tracking_report = true
	and c.penta3 is not null
	and c.dob between y.from_date and y.too_date
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','6bca48f5-fec0-4358-8565-7a11f8d52621'),
	 (575,1,'2019-02-18 13:13:17.575',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
	where l.child_id = c.opv2_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.opv2 is not null
	group by m.id, f.location_id, c.dob, opv2
	having case when extract(month from opv2) > 3 
	then concat(extract(year from opv2), ''-'', extract(year from opv2) + 1)
	else concat(extract(year from opv2) - 1, ''-'', extract(year from opv2)) end = 
		case when #financial_year# is null then 
			case when extract(month from current_date) > 3 
			then concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)
			else concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end
		else ''#financial_year#'' end
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','3616187f-1ee2-4de0-bafc-a3f2994a6a25'),
	 (571,1,'2019-02-18 13:09:32.263',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
	where l.child_id = c.penta2_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.penta2 is not null
	group by m.id, f.location_id, c.dob, penta2
	having case when extract(month from penta2) > 3 
	then concat(extract(year from penta2), ''-'', extract(year from penta2) + 1)
	else concat(extract(year from penta2) - 1, ''-'', extract(year from penta2)) end = 
		case when #financial_year# is null then 
			case when extract(month from current_date) > 3 
			then concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)
			else concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end
		else ''#financial_year#'' end
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','a4274782-25e3-44b5-bfb4-02d101f9cd45'),
	 (566,57698,'2019-02-18 12:31:32.677',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
	where l.child_id = c.opv1_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.opv1 is not null
		group by m.id, f.location_id, c.dob, opv1
	having case when extract(month from opv1) > 3 
	then concat(extract(year from opv1), ''-'', extract(year from opv1) + 1)
	else concat(extract(year from opv1) - 1, ''-'', extract(year from opv1)) end = 
		case when #financial_year# is null then 
			case when extract(month from current_date) > 3 
			then concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)
			else concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end
		else ''#financial_year#'' end
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','f9fcf43c-e705-4ee4-9889-f56b9bb55d0f'),
	 (929,60512,'2019-03-13 16:47:15.482',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_ids as(
	select distinct child_cmtc_nrc_discharge_detail.child_id,child_cmtc_nrc_admission_detail.screening_center 
	from health_infrastructure_details
	inner join child_cmtc_nrc_admission_detail on health_infrastructure_details.id = child_cmtc_nrc_admission_detail.screening_center
	inner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id
	inner join child_cmtc_nrc_discharge_detail on child_cmtc_nrc_discharge_detail.id = child_cmtc_nrc_screening_detail.discharge_id
	where health_infrastructure_details.location_id in (
		select child_id from location_hierchy_closer_det where parent_id = #location_id#
	) and child_cmtc_nrc_admission_detail.admission_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	and child_cmtc_nrc_discharge_detail.higher_facility_referral_place is not null
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No", 
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
get_location_hierarchy(imt_family.location_id) as "Location",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
imt_member.dob as "Child DOB",
health_infrastructure_details.name as "Health Infrastructure"
from child_ids
inner join imt_member on imt_member.id = child_ids.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on child_ids.screening_center = health_infrastructure_details.id',true,'ACTIVE','1b9181a8-2d38-437f-adaf-8b1657f24a0c'),
	 (917,60512,'2019-03-13 11:56:42.451',1,'2021-01-13 20:22:06.427965','limit_offset,loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 health_infra_ids as (
	select id,name,location_id,address from health_infrastructure_details where location_id in (
		select child_id from location_hierchy_closer_det where parent_id = #location_id#
	)
	and (health_infrastructure_details.is_cmtc = true or health_infrastructure_details.is_nrc=true)
#limit_offset#
),location_hierarchys as (
	select health_infra_ids.id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_hierarchy
	from health_infra_ids
	inner join location_hierchy_closer_det lhcd on lhcd.child_id = health_infra_ids.location_id
	inner join location_master l2 on l2.id = lhcd.parent_id
        cross join prefered_language
	group by health_infra_ids.id
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
health_infra_ids.name as "Name",
location_hierarchys.location_hierarchy as "Location",
health_infra_ids.address as "Address"
from health_infra_ids
inner join location_hierarchys on health_infra_ids.id = location_hierarchys.id',true,'ACTIVE','f356e8f8-4168-4ad5-8c17-499ececa1504');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1348,69973,'2019-08-20 17:23:24.294',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
select
to_date(case when ''#from_date#'' =''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when ''#to_date#'' =''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') as to_date
),
migration_master_det as (
select mm.* from (select * from migration_master, dates) mm 
inner join location_hierchy_closer_det depth_child on depth_child.child_id=mm.reported_location_id 
inner join location_hierchy_closer_det lhcd on (lhcd.child_id=depth_child.parent_id)
 where (case when (mm.from_date is not null and mm.to_date is not null) then
reported_on between mm.from_date and mm.to_date else 1=1 end) and mm.state not in (''DUPLICATE'',''REVERTED'')
and mm.type=''OUT'' and lhcd.parent_id=#location_id# and lhcd.depth=1  #limit_offset#
),
final_Query as (
select concat(im.first_name,'' '', im.middle_name,'' '', im.last_name)|| case when im.unique_health_id is not null then '' (''|| im.unique_health_id||'')'' end
as member_name, concat(uu.first_name,'' '', uu.middle_name,'' '', uu.last_name)|| case when uu.contact_number is not null then '' (''|| uu.contact_number||'')'' end as reported_by, get_location_hierarchy(mm.location_migrated_from) as from_name, get_location_hierarchy(mm.location_migrated_to) as to_name, to_char(mm.reported_on,''DD/MM/YYYY'') as reported_on, case when mm.state in (''REPORTED'',''NOT_RESOLVED'') then ''PENDING''
when mm.state=''CONFIRMED'' then ''COMPLETED''
when mm.state in (''NO_RESPONSE'', ''ROLLBACK'') then ''REVERTED''
when mm.state=''NOT_HAPPEN'' then ''REJECTED''
when mm.state = ''LFU'' then mm.state end as status
/*,mm.family_migrated_from, mm.family_migrated_to,  mm.state */
from migration_master_det mm
inner join um_user uu on uu.id=mm.reported_by
left join imt_member im on im.id=mm.member_id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
fq.member_name as "Member Name",
fq.reported_by as "Reported By",
fq.reported_on as "Reported On",
fq.from_name as "Migrated From",
fq.to_name as "Migrated To",
fq.status as "Migration Status"
/*
, fq.state as "Migration Status",
fq.family_migrated_from as "Family Migrated From",
fq.family_migrated_to as "Family Migrated To"
*/
from final_Query fq',true,'ACTIVE','c695c636-0f1f-4550-98d1-87b755bbc8df'),
	 (564,57698,'2019-02-18 12:29:51.866',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
	where l.child_id = c.penta1_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.penta1 is not null
	group by m.id, f.location_id, c.dob, penta1
	having case when extract(month from penta1) > 3 
	then concat(extract(year from penta1), ''-'', extract(year from penta1) + 1)
	else concat(extract(year from penta1) - 1, ''-'', extract(year from penta1)) end = 
		case when #financial_year# is null then 
			case when extract(month from current_date) > 3 
			then concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)
			else concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end
		else ''#financial_year#'' end
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','f9059e6c-6bc5-4400-9f1d-067b55bdd042'),
	 (439,1,'2019-02-14 00:36:36.551',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Children with Talipes (club foot) Birth defects(State Level Monthly Compilation Sheet for Screening of Birth Defects)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.delivery_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.delivery_location_id and m.id = c.member_id 
	and l.parent_id = #location_id#
	and c.has_talipes = true
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end), '' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','293bf81a-081c-4f4f-adbd-f289b54b16f3'),
	 (338,1,'2019-02-13 11:23:47.467',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','0a24c220-7039-48c7-a945-c5916724116d'),
	 (103,1027,'2018-11-21 15:11:50.025',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with temp_child as (
   select member_id,string_agg(immunisation_given || '' : '' || to_char(given_on,''DD/MM/YYYY''),''<br>'') as imm
   from rch_immunisation_master rim inner join location_hierchy_closer_det lhcd on rim.location_id = lhcd.child_id 
   where lhcd.parent_id = #location_id#
   and (#from_date# is null or given_on >=(case when #from_date# is null then ''01/01/1970'' else ''#from_date#'' end)\:\:Date)
and (#to_date# is null or given_on <(case when #to_date# is null then ''01/01/1970'' else (date (case when #to_date# is null then ''01/01/1970'' else ''#to_date#'' end) + integer ''1'')end)\:\:Date)
   and member_type = ''C''
   group by member_id
  #limit_offset#
)
select ROW_NUMBER() over ()+SUBSTRING (''#limit_offset#'',POSITION(''offset'' in ''#limit_offset#'')+7)\:\:int as "Sr No",
child.unique_health_id as "Health Id", child.first_name || '' '' || child.last_name as "Child Name",to_char(child.dob,''DD/MM/YYYY'') as "DOB",
coalesce(mother.first_name  || '' '' || mother.last_name,''-'') as "Mother Name",t.imm as "Vaccines" 
from temp_child t inner join imt_member child on t.member_id = child.id
left join imt_member mother on mother.id = child.mother_id',true,'ACTIVE','817f8776-50d3-48e5-bbac-7a0991a9419a'),
	 (262,1,'2019-02-05 12:19:21.092',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Fully immunized (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 years as ( 
	select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, 
	cast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date
	from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc
), child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and y.financial_year = ''#financial_year#''
    and c.is_valid_for_tracking_report = true
	and c.fully_immunization_in_number_of_month is not null
	and c.dob between y.from_date and y.too_date
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','d40c76c8-e87f-477c-9ab0-aac7791db87a'),
	 (943,63746,'2019-04-08 14:49:11.49',1,'2021-01-13 20:22:06.427965','from_date,to_date','with highriskusr as (
	select * from gvk_high_risk_follow_up_responce where 
	is_high_risk_condition_confirmed is not null
	and called_for = ''highriskuserverificationdata'' and 
	created_on between 
	cast(case when ''#from_date#'' = ''null'' then ''01-01-1970'' else ''#from_date#'' end as date)
		and 
	cast(case when ''#to_date#'' = ''null'' then ''01-01-1970'' else ''#to_date#'' end as date) + interval ''1 day''
)
,display_det as(
	select hrisk.is_high_risk_condition_confirmed,fhwnam.id,hrisk.created_on,fhw.loc_id,
	TO_CHAR(hrisk.created_on,''DD-MM-YYYY '') as date,
	TO_CHAR(hrisk.created_on,''HH12:MI:SS AM'') as time,
	creator.first_name || '' '' || creator.middle_name || '' '' || creator.last_name as agent_name,
	fhwnam.first_name || '' '' || fhwnam.middle_name || '' '' || fhwnam.last_name as fhw_name,fhwnam.contact_number as phone_number_used
	
from highriskusr hrisk 
	inner join imt_member mem on hrisk.member_id = mem.id 
	inner join imt_family fam on mem.family_id = fam.family_id 
	inner join um_user creator on hrisk.created_by = creator.id
	inner join um_user_location fhw on fam.location_id = fhw.loc_id  and fhw.state = ''ACTIVE'' 
	inner join um_user fhwnam on fhw.user_id = fhwnam.id and fhwnam.role_id = 30 and fhwnam.state = ''ACTIVE'' and fhwnam.contact_number is not null
        order by hrisk.created_on
)
,fhw_info as (
	select 
	display_det.date,display_det.time,display_det.agent_name,display_det.fhw_name,display_det.phone_number_used,display_det.loc_id,
	coalesce(sum(case when display_det.is_high_risk_condition_confirmed = true then 1 else 0 end ),0) as high_risk_confirmed_yes,
	coalesce(sum(case when display_det.is_high_risk_condition_confirmed = false then 1  else 0 end),0) as high_risk_confirmed_no
	from display_det
	group by 
	display_det.id,display_det.date,display_det.time,display_det.agent_name,display_det.fhw_name,display_det.phone_number_used,display_det.loc_id
)
,with_location as (
	select 
	fhw_info.date as "Date",fhw_info.time as "Time",fhw_info.agent_name as "Agent Name", fhw_info.fhw_name "FHW Name",
	fhw_info.phone_number_used as "Phone Number used",string_agg(lm.name,''> '' order by lhcd.depth desc) as "Location of the FHW" ,
	fhw_info.high_risk_confirmed_yes as "High Risk Confirmed", fhw_info.high_risk_confirmed_no as "High Risk False Positives"
	
	from fhw_info
	inner join location_hierchy_closer_det lhcd on fhw_info.loc_id= lhcd.child_id 
	inner join location_master lm on lm.id = lhcd.parent_id
	group by fhw_info.date,fhw_info.time,fhw_info.agent_name,fhw_info.fhw_name,fhw_info.phone_number_used,
	fhw_info.high_risk_confirmed_yes, fhw_info.high_risk_confirmed_no
        order by fhw_info.date, to_timestamp(fhw_info.time,''HH12:MI:SS AM'') asc
)
select ROW_NUMBER() over () as  "Sr. No",* from with_location
union all
select 
	null,
        ''<b>Total</b>'',
        null,null,null,null,null,
        sum(case when is_high_risk_condition_confirmed = true then 1 end ) as "High Risk Confirmed",
	sum(case when is_high_risk_condition_confirmed = false then 1 end) as "High Risk False Positives" 
	from highriskusr',true,'ACTIVE','35a667de-bdc8-45c5-8609-c200a7d3e510'),
	 (1103,63746,'2019-05-01 17:11:10.504',1,'2021-01-13 20:22:06.427965','limit_offset,age_group_or_child_count,location_id','with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)
,member_location as (
	select m.member_id, m.loc_id  from rch_eligible_couple_analytics m
	inner join locations on locations.child_id = m.loc_id
        where  ( case 
		when ''#age_group_or_child_count#'' = ''5+'' then children_count >= 5
		when ''#age_group_or_child_count#'' = ''0'' then children_count is null 
		when ''#age_group_or_child_count#'' = ''1'' then children_count = 1 
		when ''#age_group_or_child_count#'' = ''2'' then children_count = 2 
		when ''#age_group_or_child_count#'' = ''3'' then children_count = 3 
		when ''#age_group_or_child_count#'' = ''4'' then children_count = 4
		when ''#age_group_or_child_count#'' = ''null'' then true
	end) 	and m.last_method_of_contraception in (''IUCD5'',''IUCD10'') 
        #limit_offset#
)
,loc_det as(
	select member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id
	,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id
	from location_master,location_type_master,member_location 
	where 
	location_master.id = member_location.loc_id and location_type_master.type = location_master.type
)
select 
	 ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
	mem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as "Member Name",
	fam.family_id as "Family Id",to_char(r.dob, ''DD/MM/YYYY'') as "Birth Date",
	string_agg(lm.name,''> '' order by lhcd.depth desc) as "Location Hierarchy"  
from rch_eligible_couple_analytics r
inner join loc_det on loc_det.member_id = r.member_id
inner join imt_member mem on mem.id = r.member_id
inner join imt_family fam on mem.family_id = fam.family_id
inner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id
inner join location_master lm on lm.id = lhcd.parent_id
group by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;',true,'ACTIVE','3f7953da-21a8-4ee1-a009-7522c3a8115f'),
	 (761,64189,'2019-03-04 11:54:10.865',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId# )
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','c4750cd2-97de-48f7-92c8-ed897360f98c'),
	 (946,60512,'2019-04-09 11:19:06.508',1,'2021-01-13 20:22:06.427965','from_date,to_date,location_id','with location_ids as(
	select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1
),health_infra_count as (
	select location_ids.child_id,
	coalesce(sum(case when health_infrastructure_details.type = 1061 then 1 else 0 end),0) as phc_count,
	coalesce(sum(case when health_infrastructure_details.type = 1009 then 1 else 0 end),0) as chc_count,
	coalesce(sum(case when health_infrastructure_details.type = 1008 then 1 else 0 end),0) as sdh_count,
	coalesce(sum(case when health_infrastructure_details.type = 1007 then 1 else 0 end),0) as dh_count,
	coalesce(sum(case when health_infrastructure_details.type = 1012 then 1 else 0 end),0) as mch_count
	from location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id
	inner join health_infrastructure_details on location_hierchy_closer_det.child_id = health_infrastructure_details.location_id
	group by location_ids.child_id
),health_infra_entry_count as (
	select location_ids.child_id,
	coalesce(sum(case when health_infrastructure_details.type = 1061 then 1 else 0 end),0) as phc_entry_count,
	coalesce(sum(case when health_infrastructure_details.type = 1009 then 1 else 0 end),0) as chc_entry_count,
	coalesce(sum(case when health_infrastructure_details.type = 1008 then 1 else 0 end),0) as sdh_entry_count,
	coalesce(sum(case when health_infrastructure_details.type = 1007 then 1 else 0 end),0) as dh_entry_count,
	coalesce(sum(case when health_infrastructure_details.type = 1012 then 1 else 0 end),0) as mch_entry_count
	from location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id
	inner join health_infrastructure_details on location_hierchy_closer_det.child_id = health_infrastructure_details.location_id
	inner join facility_performance_master on health_infrastructure_details.id = facility_performance_master.health_infrastrucutre_id
	and facility_performance_master.performance_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	group by location_ids.child_id
), det as (
	select row_number() over() as sr_no, 
	location_master.name as loc,
	location_master.id as hidden_location_id,
	coalesce(health_infra_count.phc_count,0) as phc_count,
	coalesce(health_infra_count.chc_count,0) as chc_count,
	coalesce(health_infra_count.sdh_count,0) as sdh_count,
	coalesce(health_infra_count.dh_count,0) as dh_count,
	coalesce(health_infra_count.mch_count,0) as mch_count,
	coalesce(phc_count+chc_count+sdh_count+dh_count+mch_count,0) as total_hi_count,
	coalesce(health_infra_entry_count.phc_entry_count,0) as phc_entry_count,
	coalesce(health_infra_entry_count.chc_entry_count,0) as chc_entry_count,
	coalesce(health_infra_entry_count.sdh_entry_count,0) as sdh_entry_count,
	coalesce(health_infra_entry_count.dh_entry_count,0) as dh_entry_count,
	coalesce(health_infra_entry_count.mch_entry_count,0) as mch_entry_count,
	coalesce(phc_entry_count+chc_entry_count+sdh_entry_count+dh_entry_count+mch_entry_count,0) as total_hi_entry_count,
	coalesce(phc_count,0)-coalesce(phc_entry_count,0) as phc_not_entry_count,
	coalesce(chc_count,0)-coalesce(chc_entry_count,0) as chc_not_entry_count,
	coalesce(sdh_count,0)-coalesce(sdh_entry_count,0) as sdh_not_entry_count,
	coalesce(dh_count,0)-coalesce(dh_entry_count,0) as dh_not_entry_count,
	coalesce(mch_count,0)-coalesce(mch_entry_count,0) as mch_not_entry_count,
	coalesce(phc_count+chc_count+sdh_count+dh_count+mch_count,0)-coalesce(phc_entry_count+chc_entry_count+sdh_entry_count+dh_entry_count+mch_entry_count,0) as total_hi_not_entry_count
	from location_ids
	inner join location_master on location_master.id = location_ids.child_id
	left join health_infra_count on location_ids.child_id = health_infra_count.child_id
	left join health_infra_entry_count on location_ids.child_id = health_infra_entry_count.child_id
)
select row_number() over() as "Sr. no", 
	det.loc as "Location",
	det.hidden_location_id,
	det.phc_count as "Total PHC",
	det.chc_count as "Total CHC",
	det.sdh_count as "Total SDH",
	det.dh_count as "Total DH",
	det.mch_count as "Total MCH",
	det.total_hi_count as "Total Institutions",
	det.phc_entry_count as "PHC Entries",
	det.chc_entry_count as "CHC Entries",
	det.sdh_entry_count as "SDH Entries",
	det.dh_entry_count as "DH Entries",
	det.mch_entry_count as "MCH Entries",
	det.total_hi_entry_count as "Total Entries",
	det.phc_not_entry_count as "PHC Not Entered",
	det.chc_not_entry_count as "CHC Not Entered",
	det.sdh_not_entry_count as "SDH Not Entered",
	det.dh_not_entry_count as "DH Not Entered",
	det.mch_not_entry_count as "MCH Not Entered",
	det.total_hi_not_entry_count as "Total Not Entered"
	from det
union all
select null,
''<b>Total<b>'',
#location_id#,
sum(det.phc_count),
sum(det.chc_count),
sum(det.sdh_count),
sum(det.dh_count),
sum(det.mch_count),
sum(det.total_hi_count),
sum(det.phc_entry_count),
sum(det.chc_entry_count),
sum(det.sdh_entry_count),
sum(det.dh_entry_count),
sum(det.mch_entry_count),
sum(det.total_hi_entry_count),
sum(det.phc_not_entry_count),
sum(det.chc_not_entry_count),
sum(det.sdh_not_entry_count),
sum(det.dh_not_entry_count),
sum(det.mch_not_entry_count),
sum(det.total_hi_not_entry_count)
from det',true,'ACTIVE','01b5ae9d-c4e4-41f8-9282-9a766ca79d6a');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1106,63746,'2019-05-02 14:22:57.413',1,'2021-01-13 20:22:06.427965','limit_offset,age_group_or_child_count,location_id','with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)
,member_location as (
	select m.member_id, m.loc_id  from rch_eligible_couple_analytics m
	inner join locations on locations.child_id = m.loc_id
        where  ( case 
		when ''#age_group_or_child_count#'' = ''5+'' then children_count >= 5
		when ''#age_group_or_child_count#'' = ''0'' then children_count is null 
		when ''#age_group_or_child_count#'' = ''1'' then children_count = 1 
		when ''#age_group_or_child_count#'' = ''2'' then children_count = 2 
		when ''#age_group_or_child_count#'' = ''3'' then children_count = 3 
		when ''#age_group_or_child_count#'' = ''4'' then children_count = 4
		when ''#age_group_or_child_count#'' = ''null'' then true
	end) 	and m.last_method_of_contraception = (''CONDOM'') 
        #limit_offset#
)
,loc_det as(
	select member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id
	,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id
	from location_master,location_type_master,member_location 
	where 
	location_master.id = member_location.loc_id and location_type_master.type = location_master.type
)
select 
	 ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
	mem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as "Member Name",
	fam.family_id as "Family Id",to_char(r.dob, ''DD/MM/YYYY'') as "Birth Date",
	string_agg(lm.name,''> '' order by lhcd.depth desc) as "Location Hierarchy"  
from rch_eligible_couple_analytics r
inner join loc_det on loc_det.member_id = r.member_id
inner join imt_member mem on mem.id = r.member_id
inner join imt_family fam on mem.family_id = fam.family_id
inner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id
inner join location_master lm on lm.id = lhcd.parent_id
group by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;',true,'ACTIVE','08574a20-8d24-46ea-b9ff-6b0b0d747b33'),
	 (980,60512,'2019-04-11 14:51:29.16',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with distinct_health_infra_ids as(
	select distinct health_infrastrucutre_id from facility_performance_master
	where facility_performance_master.performance_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
),health_infra_ids as(
	select health_infrastructure_details.id,health_infrastructure_details.name,
	health_infrastructure_details.address,health_infrastructure_details.location_id
	from distinct_health_infra_ids
	inner join health_infrastructure_details on health_infrastructure_details.id = distinct_health_infra_ids.health_infrastrucutre_id
	where health_infrastructure_details.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and health_infrastructure_details.type=1009
),location_hierarchys as (
	select health_infra_ids.id,string_agg(l2.name,''>'' order by lhcd.depth desc) as location_hierarchy
	from health_infra_ids 
	inner join location_hierchy_closer_det lhcd on lhcd.child_id = health_infra_ids.location_id
	inner join location_master l2 on l2.id = lhcd.parent_id
	group by health_infra_ids.id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
health_infra_ids.name as "Name",
location_hierarchys.location_hierarchy as "Location",
health_infra_ids.address as "Address"
from health_infra_ids
inner join location_hierarchys on health_infra_ids.id = location_hierarchys.id',true,'ACTIVE','ab27ffca-3c8c-46e5-ad53-9ba3004ad042'),
	 (945,63746,'2019-04-08 18:20:12.126',1,'2021-01-13 20:22:06.427965','from_date,to_date','with highriskusr as (select * from gvk_high_risk_follow_up_responce 
			where is_beneficiary_willing_to_helped is not null
			and created_on between 
                        cast(case when ''#from_date#'' = ''null'' then ''01-01-1970'' else ''#from_date#'' end as date)
				and 
			cast(case when ''#to_date#'' = ''null'' then ''01-01-1970'' else ''#to_date#'' end as date) + interval ''1 day'')
              ,display_det as(
                select TO_CHAR(hrisk.created_on,''DD-MM-YYYY '') as "Date",
		TO_CHAR(hrisk.created_on,''HH12:MI:SS'') as "Time",
		mem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')'' as "Beneficiary Name",
		fhwnam.first_name || '' '' || fhwnam.middle_name || '' '' || fhwnam.last_name as "Associated FHW",
		ashanam.first_name || '' '' || ashanam.middle_name || '' '' || ashanam.last_name as "Associated ASHA",
		req.diseases  as "High Risk Condition",req.highrisk_reason  as "High Risk Value", 
		case when hrisk.is_beneficiary_willing_to_helped = true then ''Yes'' end as "Consent Provided",
		case when hrisk.is_beneficiary_willing_to_helped = false then ''Yes'' end as "Consent Denied",
		case when hrisk.schedule_date is not null then ''Yes'' end as "Scheduled Visit",
		case when hrisk.is_schedule_pending = true then ''Yes'' end as "Did not Schedule Visit"
		from highriskusr hrisk 
		inner join gvk_high_risk_follow_up_usr_info req on req.id = hrisk.gvk_high_risk_usr_id
                inner join imt_member mem on hrisk.member_id = mem.id 
                inner join imt_family fam on mem.family_id = fam.family_id 
                inner join um_user creator on hrisk.created_by = creator.id
                inner join um_user_location fhw on fam.location_id = fhw.loc_id  and fhw.state = ''ACTIVE'' 
                inner join um_user fhwnam on fhw.user_id = fhwnam.id and fhwnam.role_id = 30 and fhwnam.state = ''ACTIVE'' and fhwnam.contact_number is not null
                left join um_user_location ashaLoc on fam.area_id = ashaLoc.loc_id  and ashaLoc.state = ''ACTIVE'' 
                left join um_user ashanam on ashaLoc.user_id = ashanam.id and ashanam.role_id = 24 and ashanam.state = ''ACTIVE'' 
                left join location_hierchy_closer_det lhcd on (case when fam.area_id is null then fam.location_id else cast(fam.area_id as bigint) end) = lhcd.child_id 
                left join location_master lm on lm.id = lhcd.parent_id 
                left join location_type_master loc_name on lm.type = loc_name.type
                group by hrisk.member_id,mem.unique_health_id,mem.first_name ,mem.middle_name,mem.last_name,mem.unique_health_id,mem.mobile_number,
                fhwnam.contact_number,fhwnam.first_name,fhwnam.middle_name,fhwnam.last_name,req.diseases,req.highrisk_reason,hrisk.is_beneficiary_willing_to_helped,
                hrisk.schedule_date,hrisk.is_schedule_pending,
                ashanam.contact_number,ashanam.first_name,ashanam.middle_name,ashanam.last_name,hrisk.created_on,creator.first_name,creator.middle_name,creator.last_name 
		order by hrisk.created_on
	)
                select ROW_NUMBER() over ()  as "Sr No",* from display_det
                union all 
                select null,''<b>Total</b>'',null,null,null,null,null,null, 
		cast(sum(case when is_beneficiary_willing_to_helped = true then 1 end) as text) as "Consent Provided",
		cast(sum(case when is_beneficiary_willing_to_helped = false then 1 end) as text) as "Consent Denied",
		cast(sum(case when schedule_date is not null then 1 end) as text) as "Scheduled Visit",
		cast(sum(case when is_schedule_pending  = true then 1 end) as text) as "Did not Schedule Visit"
		from highriskusr',true,'ACTIVE','0f3270d7-158c-45d5-9726-1cffea22fd02'),
	 (1404,66522,'2019-08-28 16:17:53.709',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','03b026a2-391e-4840-9353-b7f667e4038c'),
	 (1109,63746,'2019-05-02 14:24:48.023',1,'2021-01-13 20:22:06.427965','location_id','select string_agg(l2.name,''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
where l1.id = #location_id#',true,'ACTIVE','a10b5593-4521-4364-ac98-d1d92fdd1636'),
	 (1384,60512,'2019-08-26 11:40:01.678',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','af7b407d-80d6-4f73-8610-b95d9d056997'),
	 (938,60512,'2019-03-14 19:43:53.389',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','2766a380-821d-4c9d-b285-f72e84b94586'),
	 (625,409,'2019-02-19 12:51:15.654',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','9ce5dabd-0939-43d7-900c-b6b904ada2e1'),
	 (419,1,'2019-02-13 12:53:35.575',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
	where l.child_id = c.loc_id and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.fully_immunization_in_number_of_month <= 12
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','51a3ad08-ea6c-408d-843a-50977808a012'),
	 (1117,60512,'2019-05-02 15:14:45.533',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','cc8be5bc-80e8-4e5e-bd65-5807a5d291c6');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (379,1,'2019-02-13 11:51:08.889',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--BCG Given(Immunization Services Provided to Children with Date of Birth)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.bcg is not null
	and c.is_valid_for_tracking_report = true
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','b45196d9-8603-4010-9a10-41d4c1a97174'),
	 (640,409,'2019-02-19 19:17:12.725',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Reg. After 1st April(ANC Services Provided During The Year)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
dates as (
SELECT to_date(concat(''04-01-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 1)),''MM-DD-YYYY'') as from_date
,to_date(concat(''03-31-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 2)),''MM-DD-YYYY'') as to_date
),member_det as (
	select r.member_id, r.native_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.reg_service_date,''DD/MM/YYYY'') as reg_date
	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, imt_member m
	, rch_pregnancy_registration_det p
	,dates
	
	where r.member_id = m.id and r.native_location_id  = l.child_id and r.pregnancy_reg_id = p.id
	and l.parent_id = #location_id#
	and r.reg_service_date between dates.from_date and dates.to_date
	order by r.reg_service_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2,prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.reg_date as "Reg_date",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','7744503b-23de-4043-bd9d-622ba4281dfc'),
	 (930,60512,'2019-03-14 12:12:51.679',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','4e42e664-c99a-4209-8cd4-96e4caa0fd42'),
	 (1091,63746,'2019-05-01 15:15:28.081',1,'2021-01-13 20:22:06.427965','limit_offset,age_group_or_child_count,location_id','with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)
,age_group as (
    select ''15-19'' as age_group, current_date - interval ''19 years'' as from_date, current_date - interval ''15 years''  as to_date
    union
    select ''20-24'' as age_group,  current_date - interval ''24 years'' as from_date, current_date - interval ''19 years'' - interval ''1 day''  as to_date
    union
    select ''25-29'' as age_group, current_date - interval ''29 years'' as from_date, current_date - interval ''24 years'' - interval ''1 day''  as to_date
    union
    select ''30-34'' as age_group,  current_date - interval ''34 years'' as from_date, current_date - interval ''29 years'' - interval ''1 day''  as to_date
    union
    select ''35-39'' as age_group, current_date - interval ''39 years'' as from_date, current_date - interval ''34 years'' - interval ''1 day''  as to_date
    union
    select ''40-44'' as age_group,  current_date - interval ''44 years'' as from_date, current_date - interval ''39 years'' - interval ''1 day''  as to_date
    union
    select ''45-49'' as age_group, current_date - interval ''49 years'' as from_date, current_date - interval ''44 years'' - interval ''1 day''  as to_date
)
,member_location as (
	select m.member_id, m.loc_id  from rch_eligible_couple_analytics m
	inner join age_group on m.dob between age_group.from_date and age_group.to_date
	inner join locations on locations.child_id = m.loc_id
	where ( case when #age_group_or_child_count# is null then age_group in (''15-19'',''20-24'',''25-29'',''30-34'',''35-39'',''40-44'',''45-49'') else age_group = (''#age_group_or_child_count#'') end) 
	and  (m.last_method_of_contraception is null or m.last_method_of_contraception in (''CONTRA'',''NONE'',''none'',''null'') )
        #limit_offset#
)
,loc_det as(
	select member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id
	,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id
	from location_master,location_type_master,member_location 
	where 
	location_master.id = member_location.loc_id and location_type_master.type = location_master.type
)
select 
	 ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
	mem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as "Member Name",
	fam.family_id as "Family Id",to_char(r.dob, ''DD/MM/YYYY'') as "Birth Date",
	string_agg(lm.name,''> '' order by lhcd.depth desc) as "Location Hierarchy"  
from rch_eligible_couple_analytics r
inner join loc_det on loc_det.member_id = r.member_id
inner join imt_member mem on mem.id = r.member_id
inner join imt_family fam on mem.family_id = fam.family_id
inner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id
inner join location_master lm on lm.id = lhcd.parent_id
group by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;',true,'ACTIVE','b3d3af70-9638-46eb-b310-a5552169aa5d'),
	 (1145,63746,'2019-05-28 15:27:24.559',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id','--Del reg (Inst del + home del)(Service provide to pregnant women with lmp)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_month_year,
to_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') as to_month_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
member_det as (
	select r.member_id, r.native_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p
	where r.native_location_id  = l.child_id
	and l.parent_id = p.location_id
	and ((institutional_del and delivery_outcome in (''LBIRTH'',''SBIRTH'')) 
		or
	((home_del or (home_del=false and institutional_del=false)) and delivery_outcome in (''LBIRTH'',''SBIRTH'')))
	and r.lmp_month_year between p.from_month_year and p.to_month_year
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in ( select distinct demographic_type from location_demographic_type_master 
	where demographic_group = p.demographic_group)) 
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id, 
        string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','7345688c-eafb-4a2b-b009-d9c18b806674'),
	 (182,58981,'2019-01-22 19:33:50.124',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,loggedInUserId,from_month,location_id','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#)
,dates as (
	select to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date
	,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date
)
, member_det as (
	select r.member_id, r.native_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, rch_pregnancy_registration_det p, dates d
	where r.member_id = m.id and r.native_location_id  = l.child_id and m.cur_preg_reg_det_id = p.id
	and l.parent_id = #location_id#
	and r.reg_service_date  between d.from_date and d.to_date
	and r.urine_albumin = true
	--and r.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')
	--and r.preg_reg_state in (''PENDING'',''PREGNANT'')
	order by p.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','2711fa8b-d158-4b7e-980a-2e7b52700f27'),
	 (1113,60512,'2019-05-02 15:11:21.863',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','b635aea6-f94e-4940-b608-18ed4496b1c3'),
	 (1115,60512,'2019-05-02 15:12:57.368',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','38a9f3bf-5945-4063-b7a1-be0339b12bae'),
	 (923,60512,'2019-03-13 15:57:37.17',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_ids as(
	select distinct child_cmtc_nrc_admission_detail.child_id,child_cmtc_nrc_admission_detail.screening_center 
	from health_infrastructure_details
	inner join child_cmtc_nrc_admission_detail on health_infrastructure_details.id = child_cmtc_nrc_admission_detail.screening_center
	inner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id
	where health_infrastructure_details.location_id in (
		select child_id from location_hierchy_closer_det where parent_id = #location_id#
	) and child_cmtc_nrc_admission_detail.admission_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	and child_cmtc_nrc_screening_detail.state=''DEFAULTER''
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No", 
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
get_location_hierarchy(imt_family.location_id) as "Location",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
imt_member.dob as "Child DOB",
health_infrastructure_details.name as "Health Infrastructure"
from child_ids
inner join imt_member on imt_member.id = child_ids.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on child_ids.screening_center = health_infrastructure_details.id',true,'ACTIVE','cc06837c-9d11-49fc-a155-3fb39f50d5ea'),
	 (161,58981,'2019-01-22 19:17:08.5',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','01dffc88-e1dc-4b41-b836-9faeeb61501a');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (996,64189,'2019-04-12 17:06:52.623',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--LBW Child Registered (Above 4 kg)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.delivery_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.delivery_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.birth_weight is not null and c.birth_weight >= 4
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','9b2cf909-3ad9-4a8d-9dc9-ef4156a4b160'),
	 (931,60512,'2019-03-14 12:12:51.742',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_ids as(
	select distinct child_cmtc_nrc_screening_detail.child_id,child_cmtc_nrc_admission_detail.screening_center 
	from health_infrastructure_details
	inner join child_cmtc_nrc_admission_detail on health_infrastructure_details.id = child_cmtc_nrc_admission_detail.screening_center
	inner join child_cmtc_nrc_screening_detail on child_cmtc_nrc_admission_detail.case_id = child_cmtc_nrc_screening_detail.id
	inner join child_cmtc_nrc_follow_up on child_cmtc_nrc_follow_up.admission_id = child_cmtc_nrc_admission_detail.id
	where health_infrastructure_details.location_id in (
		select child_id from location_hierchy_closer_det where parent_id = #location_id#
	) and child_cmtc_nrc_admission_detail.admission_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	and child_cmtc_nrc_follow_up.follow_up_visit=1
	#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No", 
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
get_location_hierarchy(imt_family.location_id) as "Location",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Child Name",
concat(m2.first_name,'' '',m2.middle_name,'' '',m2.last_name) as "Mother Name",
imt_member.dob as "Child DOB",
health_infrastructure_details.name as "Health Infrastructure"
from child_ids
inner join imt_member on imt_member.id = child_ids.child_id
inner join imt_family on imt_member.family_id = imt_family.family_id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join health_infrastructure_details on child_ids.screening_center = health_infrastructure_details.id',true,'ACTIVE','f4f99ad5-2db3-466f-9919-e013086908ac'),
	 (1129,60512,'2019-05-02 15:53:55.191',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','04e5bcbd-34f3-4b6e-950e-2d68573a14a6'),
	 (1116,60512,'2019-05-02 15:12:57.388',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
	select 
	case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end as from_date,
	case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end + interval ''1 day'' - interval ''00:00:00.001'' as to_date
),child_service_ids as (
	select child_service_id from rch_child_cp_suspects
	inner join dates on created_on between from_date and to_date
	inner join imt_member on rch_child_cp_suspects.member_id = imt_member.id
	where location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and status is null
	and imt_member.gender=''F''
	#limit_offset#
)
select
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
row_number() over() as "Sr.No",
concat(imt_member.unique_health_id,'' ('',imt_member.family_id,'')'') as "Unique Health ID (Family ID)",
concat(imt_member.first_name,'' '',imt_member.last_name) as "Child Name",
imt_member.dob as "Date of Birth",
m2.mobile_number as "Mother Contact No.",
to_char(rch_child_service_master.service_date,''DD-MM-YYYY'') as "Child Service Date"
from rch_child_service_master
inner join imt_member on rch_child_service_master.member_id = imt_member.id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join child_service_ids on rch_child_service_master.id = child_service_ids.child_service_id',true,'ACTIVE','4d70391e-cd10-4310-bc37-26a09916c0dc'),
	 (1114,60512,'2019-05-02 15:11:21.88',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
	select 
	case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end as from_date,
	case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end + interval ''1 day'' - interval ''00:00:00.001'' as to_date
),child_service_ids as (
	select child_service_id from rch_child_cp_suspects
	inner join dates on created_on between from_date and to_date
	inner join imt_member on rch_child_cp_suspects.member_id = imt_member.id
	where location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and status is null
	and imt_member.gender=''M''
	#limit_offset#
)
select
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
concat(imt_member.unique_health_id,'' ('',imt_member.family_id,'')'') as "Unique Health ID (Family ID)",
concat(imt_member.first_name,'' '',imt_member.last_name) as "Child Name",
imt_member.dob as "Date of Birth",
m2.mobile_number as "Mother Contact No.",
to_char(rch_child_service_master.service_date,''DD-MM-YYYY'') as "Child Service Date"
from rch_child_service_master
inner join imt_member on rch_child_service_master.member_id = imt_member.id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join child_service_ids on rch_child_service_master.id = child_service_ids.child_service_id',true,'ACTIVE','b48813a0-28ad-4303-97be-6de71cef719e'),
	 (1123,60512,'2019-05-02 15:45:55.044',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','cb828cc6-d762-4b03-8523-2ded6cb54648'),
	 (308,57698,'2019-02-12 15:46:31.974',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','b51707c5-112e-41a8-85d4-ff0b42ccd1ec'),
	 (1139,57698,'2019-05-13 12:29:32.732',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select report_preferred_language		
as language 
from um_user where id = #loggedInUserId#)
select ROW_NUMBER() OVER() as "Sr No.",t1.* from (select get_location_hierarchy_language_wise(id,prefered_language.language) as "Location",(case when type = ''B'' then ''Taluka'' when type =''D'' then ''District''
when type = ''C'' then ''Corporation'' when type = ''V'' then ''Village'' when type = ''Z'' then ''Zone'' when type = ''U'' then ''UPHC'' when type = ''ANM'' then ''ANM Area'' end) as "Location Type"  from location_master cross join prefered_language where id in 
(select child_id from location_hierchy_closer_det  where parent_id  = #location_id#
and child_loc_type in (''D'',''B'',''C'',''V'',''ANM'',''Z'')) and (lgd_code is null or trim(lgd_code) = '''')
and id not in (select child_id from location_hierchy_closer_det  where parent_id  in (756,4,1180)) and state = ''ACTIVE''
order by id) as t1;',true,'ACTIVE','ecd14d25-30ca-46e7-9bd1-b712bafa406c'),
	 (309,57698,'2019-02-12 15:46:31.986',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,loggedInUserId,from_month,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#
),dates as (
select to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM-DD-YYYY'') from_date
,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM-DD-YYYY'')  + interval ''1 month'' - interval ''1 milliseconds'' to_date
),child_det as (
	select m.id,c.death_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob,to_char(c.death_date, ''DD/MM/YYYY'') as dod
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m,dates
	where l.child_id = c.death_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.no_of_days_in_death is not null and c.no_of_days_in_death between 0 and 28
	and c.death_date between dates.from_date and dates.to_date
	order by c.death_date
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
child_det.dod as "Date of Death",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','38bf9b50-41cf-4234-9d62-6aaceea76b45'),
	 (1125,60512,'2019-05-02 15:50:39.088',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','29890e9e-27f5-409e-b583-d66e761403ab');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1522,409,'2020-02-24 21:21:52.157',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id','with prefered_language as (
select 	case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end as is_enlish
from um_user where id = #loggedInUserId#
),
dates AS (
    SELECT
        to_date(
            CASE WHEN ''#from_date#'' = ''null'' THEN
                NULL
            ELSE
                ''#from_date#''
            END, ''MM/DD/YYYY'') AS  from_date,
        to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date
)
,ldp as (
	select child_id, case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
				else location_master.name end
	from location_hierchy_closer_det,location_master,prefered_language
        where parent_id = #location_id# 
	and depth = 1 and location_master.id = location_hierchy_closer_det.child_id
)
, r as (
	select lhcd.parent_id as id
--	,ldp.name 
	,coalesce(sum(stat.hr_anc_regd),0) as anc_reg
	,coalesce(sum(stat.hr_tt1),0) as tt1
	,coalesce(sum(stat.hr_tt2_and_tt_boster),0) as tt2_tt_booster
	,coalesce(sum(stat.hr_early_anc),0) as early_anc
	,coalesce(sum(stat.hr_anc1),0) as anc1
	,coalesce(sum(stat.hr_anc2),0) as anc2
	,coalesce(sum(stat.hr_anc3),0) as anc3
	,coalesce(sum(stat.hr_anc4),0) as anc4
	,coalesce(sum(stat.hr_no_of_delivery),0) as no_of_del
	,coalesce(sum(stat.hr_mtp),0) as mtp
	,coalesce(sum(stat.hr_abortion),0) as abortion
	,coalesce(sum(stat.hr_pnc1),0) as pnc1
	,coalesce(sum(stat.hr_pnc2),0) as pnc2
	,coalesce(sum(stat.hr_pnc3),0) as pnc3
	,coalesce(sum(stat.hr_pnc4),0) as pnc4
	,coalesce(sum(stat.hr_maternal_death),0) as maternal_detah
    ,coalesce(sum(stat.hr_sc), 0) as sc
    ,coalesce(sum(stat.hr_phc), 0) as phc
    ,coalesce(sum(stat.hr_non_fru_chc), 0) as non_fru_chc
    ,coalesce(sum(stat.hr_fru_chc), 0) as fru_chc
    ,coalesce(sum(stat.hr_sdh), 0) as sdh
    ,coalesce(sum(stat.hr_medi_college), 0) as mch
    ,coalesce(sum(stat.hr_taluka_hospi), 0) as dh
    ,coalesce(sum(stat.hr_home_del_by_sba), 0) as home_non_sba
    ,coalesce(sum(stat.hr_home_del_by_non_sba), 0) as home_sba
    ,coalesce(sum(stat.hr_chiranjivi), 0) as chiranjivi
    ,coalesce(sum(stat.hr_pvt), 0) as other_private
	from location_hierchy_closer_det lhcd 
	inner join ldp on lhcd.parent_id = ldp.child_id
	left join rch_lmp_base_location_wise_data_point stat on lhcd.child_id = stat.location_id
	inner join dates on stat.month_year between dates.from_date and dates.to_date
	group by lhcd.parent_id
),
s as (
	select ldp.name,r.* from r,ldp
	where ldp.child_id = r.id
	order by ldp.name
)
select  row_number() over() as "Sr. no"
,id as hidden_location_id
,name as  "Location"
,anc_reg as "Reg. during selected period"
,tt1 as "TT1 given"
,tt2_tt_booster as "TT2+TT Booster"
,early_anc as "Early ANC"
,anc1 as "1 ANC"
,anc2 as "2 ANC"
,anc3 as "3 ANC"
,anc4 as "4 ANC"
,no_of_del as "No of Del"
,sc as "SC"
,phc as "PHC"
,non_fru_chc as "Non FRU CHC"
,fru_chc as "FRU CHC"
,sdh as "SDH"
, mch+dh  as "DH & MCH"
,home_non_sba as "Home non SBA"
,home_sba as "Home SBA"
,chiranjivi as "Chiranjivi"
,other_private as "Other Private"
,mtp as "MTP"
,abortion as "Abortion"
,pnc1 as "1 PNC"
,pnc2 as "2 PNC"
,pnc3 as "3 PNC"
,pnc4 as "4 PNC"
,maternal_detah as "Maternal Deaths"
from s
union all
select 
null
,#location_id#
,''<b>Total</b>''
,sum(anc_reg)
,sum(tt1)
,sum(tt2_tt_booster)
,sum(early_anc)
,sum(anc1)
,sum(anc2)
,sum(anc3)
,sum(anc4)
,sum(no_of_del)
,sum(sc)
,sum(phc)
,sum(non_fru_chc)
,sum(fru_chc)
,sum(sdh)
,sum(mch) + sum(dh)
,sum(home_non_sba)
,sum(home_sba)
,sum(chiranjivi)
,sum(other_private)
,sum(mtp)
,sum(abortion)
,sum(pnc1)
,sum(pnc2)
,sum(pnc3)
,sum(pnc4)
,sum(maternal_detah)
from s;',true,'ACTIVE','d94dd975-0214-4cbc-a5e4-324684711ca2'),
	 (936,60512,'2019-03-14 19:30:37.299',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','5049c514-1f20-4210-b176-dcfbdf81c557'),
	 (1002,60512,'2019-04-18 13:01:28.769',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with distinct_health_infra_ids as(
	select distinct health_infrastrucutre_id from facility_performance_master
	where facility_performance_master.performance_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
),health_infra_ids as(
	select health_infrastructure_details.id,health_infrastructure_details.name,
	health_infrastructure_details.address,health_infrastructure_details.location_id
	from distinct_health_infra_ids
	inner join health_infrastructure_details on health_infrastructure_details.id = distinct_health_infra_ids.health_infrastrucutre_id
	where health_infrastructure_details.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and health_infrastructure_details.type in (1061,1009,1008,1007,1012)
),location_hierarchys as (
	select health_infra_ids.id,string_agg(l2.name,''>'' order by lhcd.depth desc) as location_hierarchy
	from health_infra_ids 
	inner join location_hierchy_closer_det lhcd on lhcd.child_id = health_infra_ids.location_id
	inner join location_master l2 on l2.id = lhcd.parent_id
	group by health_infra_ids.id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
health_infra_ids.name as "Name",
location_hierarchys.location_hierarchy as "Location",
health_infra_ids.address as "Address"
from health_infra_ids
inner join location_hierarchys on health_infra_ids.id = location_hierarchys.id',true,'ACTIVE','fa884bf1-84e8-46fb-aef5-eda30a73dd18'),
	 (87,1027,'2018-10-05 15:17:38.28',1,'2021-01-13 20:22:06.427965','from_date,too_date,loggedInUserId,location_id','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#
)
, loc_det as(
	select lhcd.child_id as loc_id, case when ( prefered_language.is_enlish and (l.english_name is not null)) then l.english_name
				else l.name end as loc_name
	from location_hierchy_closer_det lhcd
	inner join location_master l on lhcd.child_id = l.id
	cross join prefered_language
	where lhcd.parent_id = #location_id# and depth = 1
), det as (
	select loc_det.loc_id, loc_det.loc_name,
	coalesce(sum(case when (r.delivery_hospital = ''897'' or r.home_del) and r.delivery_outcome in (''LBIRTH'',''SBIRTH'') then 1 else 0 end),0) as sc_or_home,
	coalesce(sum(case when r.delivery_hospital = ''897'' and r.delivery_outcome in (''LBIRTH'',''SBIRTH'') then 1 else 0 end),0) as sc,
	coalesce(sum(case when r.home_del and r.delivery_outcome in (''LBIRTH'',''SBIRTH'') then 1 else 0 end),0) as home
	from loc_det inner join location_hierchy_closer_det lhcd on loc_det.loc_id = lhcd.parent_id
	left join rch_pregnancy_analytics_details r on lhcd.child_id = r.member_current_location_id
	where r.date_of_delivery between 
		(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
		(case when #too_date# is null then ''01/01/1970'' else to_date(''#too_date#'',''MM/DD/YYYY'') end)
	group by loc_det.loc_id, loc_det.loc_name
)
select row_number() over() as "Sr. no",
det.loc_id as hidden_location_id,
det.loc_name as "Location",
det.sc_or_home as "Total del at SC and Home",
cast(''NA'' as text) as "Misoprostol Administration at SC and Home",
cast(''NA'' as text) as "% at SC and Home",
det.home as "Total del at Home",
cast(''NA'' as text) as "Misoprostol Administration at Home",
cast(''NA'' as text) as "% at Home",
det.sc as "Total del at SC",
cast(''NA'' as text) as "Misoprostol Administration at SC",
cast(''NA'' as text) as "% at SC"
from det
union all
select null,
#location_id#,
''<b>Total<b>'',
sum(det.sc_or_home),
cast(''NA'' as text),
cast(''NA'' as text),
sum(det.home),
cast(''NA'' as text),
cast(''NA'' as text),
sum(det.sc),
cast(''NA'' as text),
cast(''NA'' as text)
from det',true,'ACTIVE','aa0ca38c-a9a8-4ab0-bebd-64cf809d8569'),
	 (157,58981,'2019-01-22 19:03:38.035',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','b158ec26-508f-4772-bba5-f9c7dbd56e7f'),
	 (1124,60512,'2019-05-02 15:45:55.052',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
	select 
	case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end as from_date,
	case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end + interval ''1 day'' - interval ''00:00:00.001'' as to_date
),child_service_ids as (
	select child_service_id from rch_child_cp_suspects
	inner join dates on remarks_date between from_date and to_date
	where location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and status =''DELAYED_DEVELOPMENT''
	#limit_offset#
)
select
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
concat(imt_member.unique_health_id,'' ('',imt_member.family_id,'')'') as "Unique Health ID (Family ID)",
concat(imt_member.first_name,'' '',imt_member.last_name) as "Child Name",
imt_member.dob as "Date of Birth",
m2.mobile_number as "Mother Contact No.",
to_char(rch_child_service_master.service_date,''DD-MM-YYYY'') as "Child Service Date"
from rch_child_service_master
inner join imt_member on rch_child_service_master.member_id = imt_member.id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join child_service_ids on rch_child_service_master.id = child_service_ids.child_service_id',true,'ACTIVE','d7fca364-45d1-4767-933c-15cb2a864dfc'),
	 (769,64189,'2019-03-04 12:20:34.759',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,loggedInUserId,location_id,health_infra_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
, dates as(
select
	to_date (
	case
		when ''#from_date#'' = ''null'' then null
		else ''#from_date#''
	end,
	''MM/DD/YYYY'') as from_date ,
	to_date (
	case
		when ''#to_date#'' = ''null'' then null
		else ''#to_date#''
	end,
	''MM/DD/YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as too_date ),
member_det as(
select
	imt_member.id,
	imt_member.mother_id,
	imt_member.unique_health_id,
	concat(imt_member.first_name, ''  '', imt_member.middle_name, ''  '', imt_member.last_name) as "Child name",
	imt_family.location_id as loc_id,
	imt_family.area_id as area_id,
	to_char(rcsm.service_date,
	''DD/MM/YYYY'') as "Service Date"
from
	health_infrastructure_details infra
inner join rch_child_service_master rcsm on
	infra.id = rcsm.health_infrastructure_id
inner join imt_member on
	imt_member.id = rcsm.member_id
inner join imt_family on
	imt_member.family_id = imt_family.family_id
inner join dates on
	rcsm.created_on between dates.from_date and dates.too_date
where
	infra.location_id = #location_id#
	and rcsm.is_from_web=true
	and infra.id = #health_infra_id# ),
imt_mother as(
select
	imt_member.id,
	imt_member.unique_health_id,
	imt_member.mother_id,
	concat(imt_member.first_name, ''  '', imt_member.middle_name, ''  '', imt_member.last_name) as "Mother name",
	imt_member.mobile_number
from
	imt_member
where
	imt_member.id in(
	select
		mother_id
	from
		member_det )),
loc as (
select
	distinct loc_id
from
	member_det ),
loc_det as (
select
	loc.loc_id,
	string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
from
	loc,
	location_master l1,
	location_hierchy_closer_det lhcd,
	location_master l2,
        prefered_language
where
	l1.id = loc.loc_id
	and lhcd.child_id = l1.id
	and l2.id = lhcd.parent_id
group by
	loc.loc_id ),
fhw_det as (
select
	loc.loc_id,
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' || ''Contact : '' ||
	case
		when u.contact_number is not null then u.contact_number
		else ''N/A''
	end as fhw
from
	um_user_location ul,
	um_user u,
	loc
where
	loc.loc_id = ul.loc_id
	and u.id = ul.user_id
	and u.state = ''ACTIVE''
	and ul.state = ''ACTIVE''
	and u.role_id = (
	select
		id
	from
		um_role_master
	where
		name = ''FHW'')
group by
	loc.loc_id,
	ul.state,
	u.state,
	u.first_name,
	u.last_name,
	u.user_name,
	u.contact_number),
asha_areas as (
select
	distinct area_id
from
	member_det ),
asha_det as (
select
	asha_areas.area_id,
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' || ''Contact : '' ||
	case
		when u.contact_number is not null then u.contact_number
		else ''N/A''
	end as asha
from
	um_user_location ul,
	um_user u,
	asha_areas
where
	asha_areas.area_id = ul.loc_id
	and u.id = ul.user_id
	and u.state = ''ACTIVE''
	and ul.state = ''ACTIVE''
	and u.role_id = (
	select
		id
	from
		um_role_master
	where
		name = ''Asha'')
group by
	asha_areas.area_id,
	ul.state,
	u.state,
	u.first_name,
	u.last_name,
	u.user_name,
	u.contact_number) select
	ROW_NUMBER() over () as "Sr No",
	member_det.unique_health_id as "Child ID",
	member_det."Child name",
	member_det."Service Date",
	loc_det.aoi as "Location",
	case when imt_mother.unique_health_id is null then ''N/A''
	else imt_mother.unique_health_id
	end as "Mother ID",
	case when imt_mother."Mother name" is null then ''N/A''
	else imt_mother."Mother name" end,
	case when imt_mother.mobile_number is null then ''N/A''
	else imt_mother.mobile_number
	end as "Mobile number",
	case
		when fhw_det.fhw is null then ''No FHW Assigned''
		else fhw_det.fhw
	end as "FHW Details",
	case
		when asha_det.asha is null then ''No Asha Assigned''
		else asha_det.asha
	end as "Asha Details"
from
	member_det
inner join loc_det on
	member_det.loc_id = loc_det.loc_id
left join imt_mother on
	imt_mother.id = member_det.mother_id
left join fhw_det on
	member_det.loc_id = fhw_det.loc_id
left join asha_det on
	member_det.area_id = asha_det.area_id #limit_offset#;',true,'ACTIVE','4f9361b4-1363-4563-bef9-5378c4dcf37e'),
	 (978,60512,'2019-04-11 14:48:23.977',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with distinct_health_infra_ids as(
	select distinct health_infrastrucutre_id from facility_performance_master
	where facility_performance_master.performance_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
),health_infra_ids as(
	select health_infrastructure_details.id,health_infrastructure_details.name,
	health_infrastructure_details.address,health_infrastructure_details.location_id
	from distinct_health_infra_ids
	inner join health_infrastructure_details on health_infrastructure_details.id = distinct_health_infra_ids.health_infrastrucutre_id
	where health_infrastructure_details.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and health_infrastructure_details.type=1061
),location_hierarchys as (
	select health_infra_ids.id,string_agg(l2.name,''>'' order by lhcd.depth desc) as location_hierarchy
	from health_infra_ids 
	inner join location_hierchy_closer_det lhcd on lhcd.child_id = health_infra_ids.location_id
	inner join location_master l2 on l2.id = lhcd.parent_id
	group by health_infra_ids.id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
health_infra_ids.name as "Name",
location_hierarchys.location_hierarchy as "Location",
health_infra_ids.address as "Address"
from health_infra_ids
inner join location_hierarchys on health_infra_ids.id = location_hierarchys.id',true,'ACTIVE','b685aab2-afdf-4661-8d85-3ed627ede19b'),
	 (1270,60512,'2019-08-01 16:52:06.113',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','b06ee950-9052-4395-a9c8-f48827b05b94'),
	 (982,60512,'2019-04-11 14:55:34.847',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with distinct_health_infra_ids as(
	select distinct health_infrastrucutre_id from facility_performance_master
	where facility_performance_master.performance_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
),health_infra_ids as(
	select health_infrastructure_details.id,health_infrastructure_details.name,
	health_infrastructure_details.address,health_infrastructure_details.location_id
	from distinct_health_infra_ids
	inner join health_infrastructure_details on health_infrastructure_details.id = distinct_health_infra_ids.health_infrastrucutre_id
	where health_infrastructure_details.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and health_infrastructure_details.type=1008
),location_hierarchys as (
	select health_infra_ids.id,string_agg(l2.name,''>'' order by lhcd.depth desc) as location_hierarchy
	from health_infra_ids 
	inner join location_hierchy_closer_det lhcd on lhcd.child_id = health_infra_ids.location_id
	inner join location_master l2 on l2.id = lhcd.parent_id
	group by health_infra_ids.id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
health_infra_ids.name as "Name",
location_hierarchys.location_hierarchy as "Location",
health_infra_ids.address as "Address"
from health_infra_ids
inner join location_hierarchys on health_infra_ids.id = location_hierarchys.id',true,'ACTIVE','b4e9dd85-2aea-4d5f-8625-b2e4e70641c2');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (984,60512,'2019-04-11 14:57:13.204',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with distinct_health_infra_ids as(
	select distinct health_infrastrucutre_id from facility_performance_master
	where facility_performance_master.performance_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
),health_infra_ids as(
	select health_infrastructure_details.id,health_infrastructure_details.name,
	health_infrastructure_details.address,health_infrastructure_details.location_id
	from distinct_health_infra_ids
	inner join health_infrastructure_details on health_infrastructure_details.id = distinct_health_infra_ids.health_infrastrucutre_id
	where health_infrastructure_details.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and health_infrastructure_details.type=1007
),location_hierarchys as (
	select health_infra_ids.id,string_agg(l2.name,''>'' order by lhcd.depth desc) as location_hierarchy
	from health_infra_ids 
	inner join location_hierchy_closer_det lhcd on lhcd.child_id = health_infra_ids.location_id
	inner join location_master l2 on l2.id = lhcd.parent_id
	group by health_infra_ids.id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
health_infra_ids.name as "Name",
location_hierarchys.location_hierarchy as "Location",
health_infra_ids.address as "Address"
from health_infra_ids
inner join location_hierarchys on health_infra_ids.id = location_hierarchys.id',true,'ACTIVE','351d6033-9460-45ae-999f-64c2b574f629'),
	 (949,60512,'2019-04-09 11:47:28.854',1,'2021-01-13 20:22:06.427965','from_date,to_date,location_id','with location_ids as(
	select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1
),health_infra_count as (
	select location_ids.child_id,
	coalesce(sum(case when health_infrastructure_details.type = 1061 then 1 else 0 end),0) as phc_count,
	coalesce(sum(case when health_infrastructure_details.type = 1009 then 1 else 0 end),0) as chc_count,
	coalesce(sum(case when health_infrastructure_details.type = 1008 then 1 else 0 end),0) as sdh_count,
	coalesce(sum(case when health_infrastructure_details.type = 1007 then 1 else 0 end),0) as dh_count,
	coalesce(sum(case when health_infrastructure_details.type = 1012 then 1 else 0 end),0) as mch_count
	from location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id
	inner join health_infrastructure_details on location_hierchy_closer_det.child_id = health_infrastructure_details.location_id
	group by location_ids.child_id
), dist_health_infra as (
	select distinct health_infrastrucutre_id from facility_performance_master
	where facility_performance_master.performance_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
),health_infra_entry_count as (
	select location_ids.child_id,
	coalesce(sum(case when health_infrastructure_details.type = 1061 then 1 else 0 end),0) as phc_entry_count,
	coalesce(sum(case when health_infrastructure_details.type = 1009 then 1 else 0 end),0) as chc_entry_count,
	coalesce(sum(case when health_infrastructure_details.type = 1008 then 1 else 0 end),0) as sdh_entry_count,
	coalesce(sum(case when health_infrastructure_details.type = 1007 then 1 else 0 end),0) as dh_entry_count,
	coalesce(sum(case when health_infrastructure_details.type = 1012 then 1 else 0 end),0) as mch_entry_count
	from location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id
	inner join health_infrastructure_details on location_hierchy_closer_det.child_id = health_infrastructure_details.location_id
	inner join dist_health_infra on health_infrastructure_details.id = dist_health_infra.health_infrastrucutre_id
	group by location_ids.child_id
), det as (
	select row_number() over() as sr_no, 
	location_master.name as loc,
	location_master.id as hidden_location_id,
	coalesce(health_infra_count.phc_count,0) as phc_count,
	coalesce(health_infra_count.chc_count,0) as chc_count,
	coalesce(health_infra_count.sdh_count,0) as sdh_count,
	coalesce(health_infra_count.dh_count,0) as dh_count,
	coalesce(health_infra_count.mch_count,0) as mch_count,
	coalesce(phc_count+chc_count+sdh_count+dh_count+mch_count,0) as total_hi_count,
	coalesce(health_infra_entry_count.phc_entry_count,0) as phc_entry_count,
	coalesce(health_infra_entry_count.chc_entry_count,0) as chc_entry_count,
	coalesce(health_infra_entry_count.sdh_entry_count,0) as sdh_entry_count,
	coalesce(health_infra_entry_count.dh_entry_count,0) as dh_entry_count,
	coalesce(health_infra_entry_count.mch_entry_count,0) as mch_entry_count,
	coalesce(phc_entry_count+chc_entry_count+sdh_entry_count+dh_entry_count+mch_entry_count,0) as total_hi_entry_count,
	coalesce(phc_count,0)-coalesce(phc_entry_count,0) as phc_not_entry_count,
	coalesce(chc_count,0)-coalesce(chc_entry_count,0) as chc_not_entry_count,
	coalesce(sdh_count,0)-coalesce(sdh_entry_count,0) as sdh_not_entry_count,
	coalesce(dh_count,0)-coalesce(dh_entry_count,0) as dh_not_entry_count,
	coalesce(mch_count,0)-coalesce(mch_entry_count,0) as mch_not_entry_count,
	coalesce(phc_count+chc_count+sdh_count+dh_count+mch_count,0)-coalesce(phc_entry_count+chc_entry_count+sdh_entry_count+dh_entry_count+mch_entry_count,0) as total_hi_not_entry_count
	from location_ids
	inner join location_master on location_master.id = location_ids.child_id
	left join health_infra_count on location_ids.child_id = health_infra_count.child_id
	left join health_infra_entry_count on location_ids.child_id = health_infra_entry_count.child_id
)
select row_number() over() as "Sr. no", 
	det.loc as "Location",
	det.hidden_location_id,
	det.phc_count as "Total PHC",
	det.chc_count as "Total CHC",
	det.sdh_count as "Total SDH",
	det.dh_count as "Total DH",
	det.mch_count as "Total MCH",
	det.total_hi_count as "Total Institutions",
	det.phc_entry_count as "PHC Entries",
	det.chc_entry_count as "CHC Entries",
	det.sdh_entry_count as "SDH Entries",
	det.dh_entry_count as "DH Entries",
	det.mch_entry_count as "MCH Entries",
	det.total_hi_entry_count as "Total Entries",
	det.phc_not_entry_count as "PHC Not Entered",
	det.chc_not_entry_count as "CHC Not Entered",
	det.sdh_not_entry_count as "SDH Not Entered",
	det.dh_not_entry_count as "DH Not Entered",
	det.mch_not_entry_count as "MCH Not Entered",
	det.total_hi_not_entry_count as "Total Not Entered"
	from det
union all
select null,
''<b>Total<b>'',
#location_id#,
sum(det.phc_count),
sum(det.chc_count),
sum(det.sdh_count),
sum(det.dh_count),
sum(det.mch_count),
sum(det.total_hi_count),
sum(det.phc_entry_count),
sum(det.chc_entry_count),
sum(det.sdh_entry_count),
sum(det.dh_entry_count),
sum(det.mch_entry_count),
sum(det.total_hi_entry_count),
sum(det.phc_not_entry_count),
sum(det.chc_not_entry_count),
sum(det.sdh_not_entry_count),
sum(det.dh_not_entry_count),
sum(det.mch_not_entry_count),
sum(det.total_hi_not_entry_count)
from det',true,'ACTIVE','2384cb8a-7f4e-4a5a-b649-635fb2cec70f'),
	 (175,58981,'2019-01-22 19:29:53.395',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','dd3d2d38-6d8c-4339-a26d-cdb40a32f93b'),
	 (1004,60512,'2019-04-18 15:19:31.277',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with distinct_health_infra_ids as(
	select distinct health_infrastrucutre_id from facility_performance_master
	where facility_performance_master.performance_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
),health_infra_ids as(
	select health_infrastructure_details.id,health_infrastructure_details.name,
	health_infrastructure_details.address,health_infrastructure_details.location_id
	from health_infrastructure_details 
	where health_infrastructure_details.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and health_infrastructure_details.type = 1061
	and health_infrastructure_details.id not in
	(select health_infrastrucutre_id from distinct_health_infra_ids)
),location_hierarchys as (
	select health_infra_ids.id,string_agg(l2.name,''>'' order by lhcd.depth desc) as location_hierarchy
	from health_infra_ids 
	inner join location_hierchy_closer_det lhcd on lhcd.child_id = health_infra_ids.location_id
	inner join location_master l2 on l2.id = lhcd.parent_id
	group by health_infra_ids.id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
health_infra_ids.name as "Name",
location_hierarchys.location_hierarchy as "Location",
health_infra_ids.address as "Address"
from health_infra_ids
inner join location_hierarchys on health_infra_ids.id = location_hierarchys.id',true,'ACTIVE','c11991d9-097a-4228-b36d-9f1f2d15b9fc'),
	 (1006,60512,'2019-04-18 15:32:00.816',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with distinct_health_infra_ids as(
	select distinct health_infrastrucutre_id from facility_performance_master
	where facility_performance_master.performance_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
),health_infra_ids as(
	select health_infrastructure_details.id,health_infrastructure_details.name,
	health_infrastructure_details.address,health_infrastructure_details.location_id
	from health_infrastructure_details 
	where health_infrastructure_details.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and health_infrastructure_details.type = 1009
	and health_infrastructure_details.id not in
	(select health_infrastrucutre_id from distinct_health_infra_ids)
),location_hierarchys as (
	select health_infra_ids.id,string_agg(l2.name,''>'' order by lhcd.depth desc) as location_hierarchy
	from health_infra_ids 
	inner join location_hierchy_closer_det lhcd on lhcd.child_id = health_infra_ids.location_id
	inner join location_master l2 on l2.id = lhcd.parent_id
	group by health_infra_ids.id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
health_infra_ids.name as "Name",
location_hierarchys.location_hierarchy as "Location",
health_infra_ids.address as "Address"
from health_infra_ids
inner join location_hierarchys on health_infra_ids.id = location_hierarchys.id',true,'ACTIVE','d55800f8-b351-4950-bc6f-18741116d176'),
	 (168,58981,'2019-01-22 19:20:45.347',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,loggedInUserId,from_month,location_id','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#)
,dates as (
	select to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date
	,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date
)
, member_det as (
	select r.member_id, r.native_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, rch_pregnancy_registration_det p, dates d
	where r.member_id = m.id and r.native_location_id  = l.child_id and m.cur_preg_reg_det_id = p.id
	and l.parent_id = #location_id#
	and r.reg_service_date  between d.from_date and d.to_date
	and r.cur_mal_presentation_issue = true
	--and r.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')
	--and r.preg_reg_state in (''PENDING'',''PREGNANT'')
	order by p.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','17ec4793-0f4e-41bd-9fe6-644888f3c743'),
	 (1133,60512,'2019-05-02 15:57:35.881',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','a17a496d-c7d8-47cb-853a-a67a0c48f0d6'),
	 (730,64189,'2019-03-01 14:02:56.368',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,loggedInUserId,location_id,health_infra_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
dates as(
select
	to_date
	(
		case
		when ''#from_date#'' = ''null'' then null
		else ''#from_date#''
	end,
	''MM/DD/YYYY'') as from_date ,
	to_date
	(
		case
		when ''#to_date#'' = ''null'' then null
		else ''#to_date#''
	end,
	''MM/DD/YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as too_date )
, 
member_det as(
select
imt_member.id,
imt_member.unique_health_id,
concat(imt_member.first_name,''  '',imt_member.middle_name,''  '',imt_member.last_name) as "Member name",
imt_member.mobile_number,
imt_family.location_id as loc_id,
imt_family.area_id as area_id,
wpd.pregnancy_outcome
from
	health_infrastructure_details infra
inner join rch_wpd_mother_master wpd on
	infra.id = wpd.health_infrastructure_id
inner join imt_member on imt_member.id=wpd.member_id  
inner join imt_family on imt_member.family_id=imt_family.family_id
inner join dates on wpd.created_on between dates.from_date and dates.too_date
where
	infra.location_id = #location_id#
	and wpd.is_from_web = true
and infra.id = #health_infra_id#
)
,
loc as (
select
	distinct loc_id
from
	member_det ),
	
loc_det as (
select
	loc.loc_id,
	string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
from
	loc,
	location_master l1,
	location_hierchy_closer_det lhcd,
	location_master l2,
        prefered_language
where
	l1.id = loc.loc_id
	and lhcd.child_id = l1.id
	and l2.id = lhcd.parent_id
group by
	loc.loc_id ),
fhw_det as (
select
	loc.loc_id,
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' || ''Contact : '' ||
	case
		when u.contact_number is not null then u.contact_number
		else ''N/A''
	end as fhw
from
	um_user_location ul,
	um_user u,
	loc
where
	loc.loc_id = ul.loc_id
	and u.id = ul.user_id
	and u.state = ''ACTIVE''
	and ul.state = ''ACTIVE''
	and u.role_id = (
		select id
	from
		um_role_master
	where
		name = ''FHW'')
group by
	loc.loc_id,
	ul.state,
	u.state,
	u.first_name,
	u.last_name,
	u.user_name,
	u.contact_number),
asha_areas as (
 select distinct area_id from member_det
),
asha_det as (
select
	asha_areas.area_id,
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' || ''Contact : '' ||
	case
		when u.contact_number is not null then u.contact_number
		else ''N/A''
	end as asha
from
	um_user_location ul,
	um_user u,
	asha_areas
where
	asha_areas.area_id = ul.loc_id
	and u.id = ul.user_id
	and u.state = ''ACTIVE''
	and ul.state = ''ACTIVE''
	and u.role_id = (
		select id
	from
		um_role_master
	where
		name = ''Asha'')
group by
	asha_areas.area_id,
	ul.state,
	u.state,
	u.first_name,
	u.last_name,
	u.user_name,
	u.contact_number)
	
select 
ROW_NUMBER() over () as "Sr No",
member_det.unique_health_id as "Member ID",
member_det."Member name",
member_det.mobile_number as "Phone number",
case
		when member_det.pregnancy_outcome is null then ''N/A''
		else member_det.pregnancy_outcome
	end as "Delivery outcome",
loc_det.aoi as "Location",
case
		when fhw_det.fhw is null then ''No FHW Assigned''
		else fhw_det.fhw
	end as "FHW Details",
case
		when asha_det.asha is null then ''No Asha Assigned''
		else asha_det.asha
	end as "Asha Details"	
from member_det 
inner join loc_det on member_det.loc_id = loc_det.loc_id
left join fhw_det on member_det.loc_id = fhw_det.loc_id
left join asha_det on member_det.area_id =asha_det.area_id #limit_offset#;',true,'ACTIVE','2317de6e-1b74-46a2-ba11-e90e383e1a3b'),
	 (1008,60512,'2019-04-18 15:33:39.373',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with distinct_health_infra_ids as(
	select distinct health_infrastrucutre_id from facility_performance_master
	where facility_performance_master.performance_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
),health_infra_ids as(
	select health_infrastructure_details.id,health_infrastructure_details.name,
	health_infrastructure_details.address,health_infrastructure_details.location_id
	from health_infrastructure_details 
	where health_infrastructure_details.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and health_infrastructure_details.type = 1008
	and health_infrastructure_details.id not in
	(select health_infrastrucutre_id from distinct_health_infra_ids)
),location_hierarchys as (
	select health_infra_ids.id,string_agg(l2.name,''>'' order by lhcd.depth desc) as location_hierarchy
	from health_infra_ids 
	inner join location_hierchy_closer_det lhcd on lhcd.child_id = health_infra_ids.location_id
	inner join location_master l2 on l2.id = lhcd.parent_id
	group by health_infra_ids.id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
health_infra_ids.name as "Name",
location_hierarchys.location_hierarchy as "Location",
health_infra_ids.address as "Address"
from health_infra_ids
inner join location_hierarchys on health_infra_ids.id = location_hierarchys.id',true,'ACTIVE','70d26f5b-f722-424c-b811-6d20afa96753'),
	 (1134,60512,'2019-05-02 15:57:35.898',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
	select 
	case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end as from_date,
	case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end + interval ''1 day'' - interval ''00:00:00.001'' as to_date
),child_service_ids as (
	select child_service_id from rch_child_cp_suspects
	inner join dates on remarks_date between from_date and to_date
	inner join imt_member on rch_child_cp_suspects.member_id = imt_member.id
	where location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and status =''TREATMENT_COMMENCED''
	and imt_member.gender=''M''
	#limit_offset#
)
select
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
concat(imt_member.unique_health_id,'' ('',imt_member.family_id,'')'') as "Unique Health ID (Family ID)",
concat(imt_member.first_name,'' '',imt_member.last_name) as "Child Name",
imt_member.dob as "Date of Birth",
m2.mobile_number as "Mother Contact No.",
to_char(rch_child_service_master.service_date,''DD-MM-YYYY'') as "Child Service Date"
from rch_child_service_master
inner join imt_member on rch_child_service_master.member_id = imt_member.id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join child_service_ids on rch_child_service_master.id = child_service_ids.child_service_id',true,'ACTIVE','e2ca5611-ac2f-49eb-ad3c-c2aae7211238');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1010,60512,'2019-04-18 15:35:55.231',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with distinct_health_infra_ids as(
	select distinct health_infrastrucutre_id from facility_performance_master
	where facility_performance_master.performance_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
),health_infra_ids as(
	select health_infrastructure_details.id,health_infrastructure_details.name,
	health_infrastructure_details.address,health_infrastructure_details.location_id
	from health_infrastructure_details 
	where health_infrastructure_details.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and health_infrastructure_details.type = 1007
	and health_infrastructure_details.id not in
	(select health_infrastrucutre_id from distinct_health_infra_ids)
),location_hierarchys as (
	select health_infra_ids.id,string_agg(l2.name,''>'' order by lhcd.depth desc) as location_hierarchy
	from health_infra_ids 
	inner join location_hierchy_closer_det lhcd on lhcd.child_id = health_infra_ids.location_id
	inner join location_master l2 on l2.id = lhcd.parent_id
	group by health_infra_ids.id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
health_infra_ids.name as "Name",
location_hierarchys.location_hierarchy as "Location",
health_infra_ids.address as "Address"
from health_infra_ids
inner join location_hierarchys on health_infra_ids.id = location_hierarchys.id',true,'ACTIVE','f31f913a-32ec-4472-9520-1baac8d5e4fa'),
	 (1274,66522,'2019-08-05 11:03:30.429',1,'2021-01-13 20:22:06.427965',NULL,'/* select location.*,anmol.eligible_registration_id, im.unique_health_id  		from anmol_master anmol 		inner join anmol_location_master location on anmol.location_id = location.location_id 		inner join imt_member im on anmol.member_id = im.id 		where anmol.location_id is not null limit 100  */

select 
child.child_registration_id,
master.eligible_registration_id,
mother.unique_health_id as MotherId,
child1.unique_health_id as ChildId
from anmol_child_master child
inner join anmol_master master on child.anmol_master_id = master.id
inner join imt_member mother on mother.id = master.member_id
inner join imt_member child1 on child1.id = child.child_id
limit 100',true,'ACTIVE','8dd83e64-99be-4478-b4f0-ba14f865618a'),
	 (1136,60512,'2019-05-02 15:58:56.106',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
	select 
	case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end as from_date,
	case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end + interval ''1 day'' - interval ''00:00:00.001'' as to_date
),child_service_ids as (
	select child_service_id from rch_child_cp_suspects
	inner join dates on remarks_date between from_date and to_date
	inner join imt_member on rch_child_cp_suspects.member_id = imt_member.id
	where location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and status =''TREATMENT_COMMENCED''
	and imt_member.gender=''F''
	#limit_offset#
)
select
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
concat(imt_member.unique_health_id,'' ('',imt_member.family_id,'')'') as "Unique Health ID (Family ID)",
concat(imt_member.first_name,'' '',imt_member.last_name) as "Child Name",
imt_member.dob as "Date of Birth",
m2.mobile_number as "Mother Contact No.",
to_char(rch_child_service_master.service_date,''DD-MM-YYYY'') as "Child Service Date"
from rch_child_service_master
inner join imt_member on rch_child_service_master.member_id = imt_member.id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join child_service_ids on rch_child_service_master.id = child_service_ids.child_service_id',true,'ACTIVE','d6cccbe7-bc4e-4dd2-b747-9d2d79fcd52d'),
	 (1012,60512,'2019-04-18 15:39:00.732',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with distinct_health_infra_ids as(
	select distinct health_infrastrucutre_id from facility_performance_master
	where facility_performance_master.performance_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
),health_infra_ids as(
	select health_infrastructure_details.id,health_infrastructure_details.name,
	health_infrastructure_details.address,health_infrastructure_details.location_id
	from health_infrastructure_details 
	where health_infrastructure_details.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and health_infrastructure_details.type = 1012
	and health_infrastructure_details.id not in
	(select health_infrastrucutre_id from distinct_health_infra_ids)
),location_hierarchys as (
	select health_infra_ids.id,string_agg(l2.name,''>'' order by lhcd.depth desc) as location_hierarchy
	from health_infra_ids 
	inner join location_hierchy_closer_det lhcd on lhcd.child_id = health_infra_ids.location_id
	inner join location_master l2 on l2.id = lhcd.parent_id
	group by health_infra_ids.id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
health_infra_ids.name as "Name",
location_hierarchys.location_hierarchy as "Location",
health_infra_ids.address as "Address"
from health_infra_ids
inner join location_hierarchys on health_infra_ids.id = location_hierarchys.id',true,'ACTIVE','e2f34103-8bd5-4a40-898f-cd9709c1a964'),
	 (1173,66522,'2019-06-19 12:00:30.478',1,'2021-01-13 20:22:06.427965',NULL,'with  countByDist as(
select count(1) as total ,lh.parent_id as district_id from imt_member im 
inner join imt_family imf on imf.family_id = im.family_id
inner join location_hierchy_closer_det lh  on imf.location_id = lh.child_id and parent_loc_type in (''D'',''C'')
where im.dob is not null and age(im.dob) >= interval ''1 year'' and age(im.dob) < interval ''19 year''
and im.basic_state in (''VERIFIED'',''TEMPORARY'',''NEW'')
group by lh.parent_id)
select lm.name,cd.total from countByDist cd
inner join location_master lm on cd.district_id = lm.id',true,'ACTIVE','8db3d8be-b073-48db-9c7c-5a0a1aa25b20'),
	 (1014,60512,'2019-04-18 15:47:21.111',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with distinct_health_infra_ids as(
	select distinct health_infrastrucutre_id from facility_performance_master
	where facility_performance_master.performance_date between 
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
),health_infra_ids as(
	select health_infrastructure_details.id,health_infrastructure_details.name,
	health_infrastructure_details.address,health_infrastructure_details.location_id
	from health_infrastructure_details 
	where health_infrastructure_details.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and health_infrastructure_details.type in (1061,1009,1008,1007,1012)
	and health_infrastructure_details.id not in
	(select health_infrastrucutre_id from distinct_health_infra_ids)
),location_hierarchys as (
	select health_infra_ids.id,string_agg(l2.name,''>'' order by lhcd.depth desc) as location_hierarchy
	from health_infra_ids 
	inner join location_hierchy_closer_det lhcd on lhcd.child_id = health_infra_ids.location_id
	inner join location_master l2 on l2.id = lhcd.parent_id
	group by health_infra_ids.id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
health_infra_ids.name as "Name",
location_hierarchys.location_hierarchy as "Location",
health_infra_ids.address as "Address"
from health_infra_ids
inner join location_hierarchys on health_infra_ids.id = location_hierarchys.id',true,'ACTIVE','76069c23-c6b5-4022-b395-df3b49530c0f'),
	 (117,58981,'2019-01-09 14:42:47.68',1,'2021-01-13 20:22:06.427965','from_month_year,to_month_year,loggedInUserId,location_id','----------BCG Monthly Report----------

with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 ldp as(
	select child_id, case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
else location_master.name end 
	from location_hierchy_closer_det, location_master, prefered_language  
	where parent_id = #location_id# and depth = 1 
	and location_master.id = location_hierchy_closer_det.child_id
), r as(
	select lhcd.parent_id as id, 
	coalesce(sum(stat.total_live_births),0) as total_live_births, 
	coalesce(sum(stat.bcg_given_on_dob),0) as bcg_given_on_dob, 
	coalesce(sum(stat.bcg_given_within_1_month),0) as bcg_given_within_1_month, 
	coalesce(sum(stat.bcg_given_within_6_months),0) as bcg_given_within_6_months, 
	coalesce(sum(stat.bcg_given_within_12_months),0) as bcg_given_within_12_months, 
--	coalesce(sum(stat.bcg_given_after_12_months),0) as bcg_given_after_12_months, 
	coalesce(sum(stat.bcg_not_given),0) as bcg_not_given
	from ldp
	inner join location_hierchy_closer_det lhcd on lhcd.parent_id = ldp.child_id
	left join child_monthly_location_wise_analytics stat on lhcd.child_id = stat.location_id
	where stat.month_year between (case when #from_month_year# is null then ''01/01/1970'' else to_date(''#from_month_year#'',''MM/DD/YYYY'') end) 
	and (case when #to_month_year# is null then current_date else to_date(''#to_month_year#'',''MM/DD/YYYY'') end)
	group by lhcd.parent_id
), s as(
	select r.id, ldp.name,
	coalesce(r.total_live_births,0) as total_live_births,
	coalesce(r.bcg_given_on_dob,0) as bcg_given_on_dob,
	coalesce(r.bcg_given_within_1_month,0) as bcg_given_within_1_month,
	coalesce(r.bcg_given_within_6_months,0) as bcg_given_within_6_months,
	coalesce(bcg_given_on_dob+bcg_given_within_1_month+bcg_given_within_6_months,0) as total_bcg_given,
	coalesce(r.bcg_given_within_12_months,0) as bcg_given_within_12_months,
--	coalesce(r.bcg_given_after_12_months,0) as bcg_given_after_12_months,
	coalesce(r.bcg_not_given,0) as bcg_not_given
	from ldp left join r on ldp.child_id = r.id 
	order by ldp.name
)
select  row_number() over() as "Sr. no", 
id as hidden_location_id, name as  "Location", 
total_live_births as "Live Birth reported",
bcg_given_on_dob  as "No. of Infants given BCG on the same day of DOB", 
case when total_live_births = 0 then 0 else round(bcg_given_on_dob*100.0/total_live_births,2) end as "percent_col_No. of Infants given BCG on the same day of DOB",
bcg_given_within_1_month as "No. of Infants given BCG within 1 month of DOB", 
case when total_live_births = 0 then 0 else round(bcg_given_within_1_month*100.0/total_live_births,2) end as "percent_col_No. of Infants given BCG within 1 month of DOB",
bcg_given_within_6_months  as "No. of Infants given BCG within 6 months of DOB",
case when total_live_births = 0 then 0 else round(bcg_given_within_6_months*100.0/total_live_births ,2) end as "percent_col_No. of Infants given BCG within 6 months of DOB",
total_bcg_given as "Total No. of Infants given BCG",
case when total_live_births = 0 then 0 else round(total_bcg_given*100.0/total_live_births ,2) end as "percent_col_Total No. of Infants given BCG",
bcg_given_within_12_months as "No. of Infants given BCG within 12 month of DOB",
case when total_live_births = 0 then 0 else round(bcg_given_within_12_months*100.0/total_live_births ,2) end as "percent_col_No. of Infants given BCG within 12 month of DOB",
--bcg_given_after_12_months as "No. of Infants given BCG after 12 months of DOB",
--case when total_live_births = 0 then 0 else round(bcg_given_after_12_months*100.0/total_live_births ,2) end as "percent_col_No. of Infants given BCG after 12 months of DOB",
bcg_not_given as "No. of Infants not given BCG",
case when total_live_births = 0 then 0 else round(bcg_not_given*100.0/total_live_births ,2) end as "percent_col_No. of Infants not given BCG"
from s
union all
select 
null, 
#location_id#,
''<b>Total</b>'', 
sum(total_live_births), 
sum(bcg_given_on_dob),
case when sum(total_live_births) = 0 then 0 else round(sum(bcg_given_on_dob)*100.0/sum(total_live_births),2) end,
sum(bcg_given_within_1_month),
case when sum(total_live_births) = 0 then 0 else round(sum(bcg_given_within_1_month)*100.0/sum(total_live_births),2) end,
sum(bcg_given_within_6_months),
case when sum(total_live_births) = 0 then 0 else round(sum(bcg_given_within_6_months)*100.0/sum(total_live_births),2) end,
sum(total_bcg_given),
case when sum(total_live_births) = 0 then 0 else round(sum(total_bcg_given)*100.0/sum(total_live_births),2) end,
sum(bcg_given_within_12_months),
case when sum(total_live_births) = 0 then 0 else round(sum(bcg_given_within_12_months)*100.0/sum(total_live_births),2) end,
--sum(bcg_given_after_12_months),
--case when sum(total_live_births) = 0 then 0 else round(sum(bcg_given_after_12_months)*100.0/sum(total_live_births),2) end,
sum(bcg_not_given),
case when sum(total_live_births) = 0 then 0 else round(sum(bcg_not_given)*100.0/sum(total_live_births),2) end
from s;',true,'ACTIVE','4c89e829-93ea-450e-88cf-38d8be2c022d'),
	 (1140,57698,'2019-05-13 18:56:49.995',1,'2021-01-13 20:22:06.427965',NULL,'select mv.pid as "E-mamta Code",mv.name_e as "PHC Name",ld.name as "District",lt.name as "Taluka" from mcts_health_phc mv 
left join location_master l on mv.pid = l.location_code and l.type = ''P''
left join location_master ld on mv.dcode = ld.location_code and ld.type = ''D''
left join location_master lt on cast(mv.tcode as bigint) = lt.location_code and lt.type = ''B''
left join mcts_all_taluka mt on mv.tcode = mt.tcode
where l.id is null and  mv.isactive = 1 order by "District","Taluka";',true,'ACTIVE','8da38814-99fb-43cf-9380-1cbaa8b045a7'),
	 (86,1027,'2018-10-04 15:18:13.562',1,'2021-01-13 20:22:06.427965','from_month_year,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
ldp as(
  select location_id,anc_reg,early_anc,ifa_30_tablet_in_30_day,ifa_30_tablet_in_31_to_61_day,ifa_30_tablet_in_61_to_90_day
  ,hb_done,hb_more_then_11_in_91_to_360_days,ifa_180_with_hb_in_4_to_9_month,hb_between_7_to_11,ifa_360_with_hb_between_7_to_11_in_4_to_9_month
  ,ca_180_given_in_2nd_trimester,ca_180_given_in_3rd_trimester
  from rch_lmp_base_location_wise_data_point,location_hierchy_closer_det
  where rch_lmp_base_location_wise_data_point.location_id = location_hierchy_closer_det.child_id 
  and location_hierchy_closer_det.parent_id = #location_id#
  and month_year between 
  	(case when #from_month_year# is null then ''01/01/1970'' else to_date(''#from_month_year#'',''MM/DD/YYYY'') end) 
  and 
  	(case when #to_month_year# is null then ''01/01/1970'' else to_date(''#to_month_year#'',''MM/DD/YYYY'') end)
 ), w as (
    select
	location_hierchy_closer_det.parent_id as loc_id,
    coalesce(sum(anc_reg),0) as anc_reg,
    coalesce(sum(early_anc),0) as early_anc,
    coalesce(sum(ifa_30_tablet_in_30_day),0) as ifa_30_tablet_in_30_day,
    coalesce(sum(ifa_30_tablet_in_31_to_61_day),0) as ifa_30_tablet_in_31_to_61_day,
    coalesce(sum(ifa_30_tablet_in_61_to_90_day),0) as ifa_30_tablet_in_61_to_90_day,
    coalesce(sum(hb_done),0) as hb_done,
    coalesce(sum(hb_more_then_11_in_91_to_360_days),0) as hb_more_then_11_in_91_to_360_days,
    coalesce(sum(ifa_180_with_hb_in_4_to_9_month),0) as ifa_180_with_hb_in_4_to_9_month,
    coalesce(sum(hb_between_7_to_11),0) as hb_between_7_to_11,
    coalesce(sum(ifa_360_with_hb_between_7_to_11_in_4_to_9_month),0) as ifa_360_with_hb_between_7_to_11_in_4_to_9_month,
	coalesce(sum(ca_180_given_in_2nd_trimester),0) as ca_180_given_in_2nd_trimester,
	coalesce(sum(ca_180_given_in_3rd_trimester),0) as ca_180_given_in_3rd_trimester
	
from (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth=1)as t 
inner join location_hierchy_closer_det on t.child_id = location_hierchy_closer_det.parent_id 
inner join ldp on ldp.location_id = location_hierchy_closer_det.child_id
group by location_hierchy_closer_det.parent_id 
),s as (
select case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name
else lm.name end as "Location Name",
	lm.id AS hidden_location_id,
    coalesce(anc_reg,0) as "Total ANC Registered",
    coalesce(early_anc,0) as "Early ANC",
    /*round(coalesce(case when anc_reg = 0 then 0 else early_anc*100/anc_reg end,0),2) as "Percentage of Early ANC",*/
    coalesce(ifa_30_tablet_in_30_day,0) as "30 Folic acid tab Given in 1st month of pregnancy",
    /*round(coalesce(case when anc_reg = 0 then 0 else tt2_boster*100/anc_reg end,0),2) as "Percentage of TT2+TT Booster",*/
    coalesce(ifa_30_tablet_in_31_to_61_day,0) as "30 Folic acid tab Given in 2nd month of pregnancy",
    /*round(coalesce(case when anc_reg = 0 then 0 else anc1*100/anc_reg end,0),2) as "Percentage of ANC 1",*/
    coalesce(ifa_30_tablet_in_61_to_90_day,0) as "30 Folic acid tab Given in 3rd month of pregnancy",
    /*round(coalesce(case when anc_reg = 0 then 0 else anc2*100/anc_reg end,0),2) as "Percentage of ANC 2",*/
    coalesce(hb_done,0) as "Mother with Hb data entry",
    /*round(coalesce(case when anc_reg = 0 then 0 else anc3*100/anc_reg end,0),2) as "Percentage of ANC 3",*/
    coalesce(hb_more_then_11_in_91_to_360_days,0) as "ANC in  4 to 9 months of pregnancy  with Hb more then 11gms",
    /*round(coalesce(case when anc_reg = 0 then 0 else anc4*100/anc_reg end,0),2) as "Percentage of ANC 4",*/
    coalesce(ifa_180_with_hb_in_4_to_9_month,0) as "180 IFA given for 4 to 9 months of pregnancy  with Hb more then 11 gms",
    /*round(coalesce(ifa_180*100/anc_reg,0),2) as "Percentage of 180 IFA",*/
    coalesce(hb_between_7_to_11,0) as "Mild & Moderate anemic mothers with HB 11gms to 7 gms",
    /*round(coalesce(full_anc*100/anc_reg,0),2) as "Percentage of Full ANC"*/
	coalesce(ifa_360_with_hb_between_7_to_11_in_4_to_9_month,0) as "360 IFA given to mild and moderate anemic mothers in 4th to 9th",
    coalesce(ca_180_given_in_2nd_trimester,0) as "180 Ca given in 2nd trimester of pregnancy",
    coalesce(ca_180_given_in_3rd_trimester,0) as "180 Ca given in 3rd trimester of pregnancy"    
from (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth=1 limit 100) as t
inner join location_master lm on lm.id = t.child_id
left join w on w.loc_id = lm.id
cross join prefered_language
order by lm.name
)
select row_number() over() as "Sr. no", s.* FROM s
union all
SELECT
	NULL,
    ''<b>Total<b>'',
    #location_id#,
    coalesce(sum("Total ANC Registered"),0),
    coalesce(sum("Early ANC"),0),
    /*round(coalesce(case when sum("Total ANC registered") = 0 then 0 else sum("Early ANC")*100/sum("Total ANC registered") end,0),2), */
    coalesce(sum("30 Folic acid tab Given in 1st month of pregnancy"),0),
    /*round(coalesce(case when sum("Total ANC registered") = 0 then 0 else sum("TT2+TT Booster")*100/sum("Total ANC registered") end,0),2),*/ 
    coalesce(sum("30 Folic acid tab Given in 2nd month of pregnancy"),0),
    /*round(coalesce(case when sum("Total ANC registered") = 0 then 0 else sum("ANC 1")*100/sum("Total ANC registered") end,0),2),*/ 
    coalesce(sum("30 Folic acid tab Given in 3rd month of pregnancy"),0),
    /*round(coalesce(case when sum("Total ANC registered") = 0 then 0 else sum("ANC 2")*100/sum("Total ANC registered") end,0),2),*/ 
    coalesce(sum("Mother with Hb data entry"),0),
    /*round(coalesce(case when sum("Total ANC registered") = 0 then 0 else sum("ANC 3")*100/sum("Total ANC registered") end,0),2),*/ 
    coalesce(sum("ANC in  4 to 9 months of pregnancy  with Hb more then 11gms"),0),
    /*round(coalesce(case when sum("Total ANC registered") = 0 then 0 else sum("ANC 4")*100/sum("Total ANC registered") end,0),2),*/ 
    coalesce(sum("180 IFA given for 4 to 9 months of pregnancy  with Hb more then 11 gms"),0),
    /*round(coalesce(case when sum("Total ANC registered") = 0 then 0 else sum("180 IFA")*100/sum("Total ANC registered") end,0),2),*/ 
    coalesce(sum("Mild & Moderate anemic mothers with HB 11gms to 7 gms"),0),
    coalesce(sum("360 IFA given to mild and moderate anemic mothers in 4th to 9th"),0),
    coalesce(sum("180 Ca given in 2nd trimester of pregnancy"),0),
    coalesce(sum("180 Ca given in 3rd trimester of pregnancy"),0)
    /*round(coalesce(case when sum("Total ANC registered") = 0 then 0 else sum("Full ANC")*100/sum("Total ANC registered") end,0),2)*/
from s',true,'ACTIVE','69ac7898-61ab-4011-89eb-1805bc0b9cd5'),
	 (1601,74840,'2020-04-20 18:43:29.544',1,'2021-01-13 20:22:06.427965','limit_offset,demographic_location_id,from_date,to_date,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
parameters as (
	select distinct (case when #location_id# is null then 2
		else CAST(#location_id# AS INTEGER) end) as location_id,
	(case when #location_id# is null then ''null'' else CAST(''#demographic_location_id#'' AS TEXT) end) as demographic_group
	,(case when ''#from_date#'' = ''null'' then current_date else  to_date(''#from_date#'',''MM-DD-YYYY'') end) as from_date
	,(case when ''#to_date#'' = ''null'' then current_date  else to_date(''#to_date#'',''MM-DD-YYYY'') end) as to_date
), loc_det as (
    select vlc.child_id 
    from parameters p 
    cross join vw_location_closure_det_by_parent_location_depth vlc
    where vlc.location_id=p.location_id and vlc.depth=1 
    and (p.demographic_group=''null'' or vlc.child_demographic_type in 
    (select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
    )
), opd_detail as (
select 
	idsp2.*
	from parameters p
	cross join idsp_2_member_screening_details idsp2
	where
	idsp2.location_id in (select distinct child_id from loc_det) 

    and cast(idsp2.service_date as date) between p.from_date and p.to_date
     
    and (idsp2.treatment_started != 1 )  
    
    and (idsp2.symptoms ilike ''%FEVER%'' OR idsp2.symptoms ilike ''%COUGH%'' or idsp2.symptoms ilike ''%BREATHING_DIFFICULTY%'')
    
    order by idsp2.member_id 
    #limit_offset#
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
concat( im.first_name, '' '', im.middle_name, '' '', im.last_name, ''('' , im.unique_health_id , '')'', ''('' , im.family_id , '')'') as "Member Details", 
get_location_hierarchy(idsp2.location_id) as "Location",
case when idsp2.any_illness_or_discomfort = 1 then true else false end as "Any illness or discomfort",
case when idsp2.symptoms ilike ''%FEVER%'' then true else false end as "fever",
case when idsp2.symptoms ilike ''%COUGH%'' then true else false end as "Cough",
case when idsp2.symptoms ilike ''%BREATHING_DIFFICULTY%'' then true else false end as "Breathing difficulty",
case when (idsp2.symptoms ilike ''%FEVER%'' and (idsp2.symptoms ilike ''%COUGH%'' or idsp2.symptoms ilike ''%BREATHING_DIFFICULTY%'')) then true else false end as "Fever with cough or breathing difficulty",
case when (idsp2.symptoms ilike ''%FEVER%'' OR idsp2.symptoms ilike ''%COUGH%'' or idsp2.symptoms ilike ''%BREATHING_DIFFICULTY%'') then true else false end as "Symptomic",
--case when (idsp2.treatment_started = 1) then true else false end as "Treatment started",
case when idsp2.member_id is not null then true else false end as "Examined by mo"
from opd_detail idsp2
left join imt_member im on im.id = idsp2.member_id',true,'ACTIVE','4f1c7620-2ed3-4fa8-81d5-303ba6679539');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (383,1,'2019-02-13 12:17:26.885',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Penta 1 given(Immunization Services Provided to Children with Date of Birth)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.penta1 is not null
	and c.is_valid_for_tracking_report = true
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','23acd3a7-7a45-4645-95de-c6990d517212'),
	 (803,58981,'2019-03-06 17:02:40.313',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Total Reactive (Report For HbsAg Test In Antenatal Mother During Year)
with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#),
member_det as (
	select r.member_id, r.native_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, imt_family f, rch_pregnancy_registration_det p
	where r.member_id = m.id and r.native_location_id  = l.child_id and r.pregnancy_reg_id = p.id and m.family_id = f.family_id
	and hbsag_reactive_cnt > 0
	and l.parent_id = #location_id#
	and r.reg_service_financial_year = ''#financial_year#''
	order by p.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, 
        string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','a8d90237-30b5-41c3-9880-d9165a0aa591'),
	 (1141,57698,'2019-05-16 12:40:10.118',1,'2021-01-13 20:22:06.427965','location_id','select ROW_NUMBER() OVER() as "Sr No.",t1.* from (select get_location_hierarchy(id) as "Location Hierarchy",(case when type = ''Z'' then ''Zone'' when type = ''ANG'' then ''Anganwadi'' when type = ''P'' then ''PHC''
when type = ''B'' then ''Taluka'' when type =''D'' then ''District''when type = ''C'' then ''Corporation'' 
when type = ''V'' then ''Village'' when type = ''Z'' then ''Zone'' when type = ''U'' then ''UPHC'' when type = ''ANM'' then ''ANM Area'' else type end) 
as "Location Type" from location_master  where id in (select child_id from location_hierchy_closer_det  where parent_id  = #location_id#
and child_loc_type in (''D'',''B'',''C'',''V'',''Z'',''ANG'',''P'',''U'')) and location_code  is null and type not in (''A'',''AA'') and name not ilike ''%delete%''
and id not in (select child_id from location_hierchy_closer_det  where child_loc_type  not in (''A'',''AA'') and parent_id in (select id from location_master where name ilike ''%delete%''))) as t1',true,'ACTIVE','63fb1be0-3a54-4952-a82b-0d9a03783910'),
	 (162,58981,'2019-01-22 19:17:08.514',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,loggedInUserId,from_month,location_id','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#)
,dates as (
	select to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date
	,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date
)
, member_det as (
	select r.member_id, r.native_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, rch_pregnancy_registration_det p, dates d
	where r.member_id = m.id and r.native_location_id = l.child_id and m.cur_preg_reg_det_id = p.id
	and l.parent_id = #location_id#
	and r.reg_service_date  between d.from_date and d.to_date
	and r.cur_gestational_diabetes_issue = true
	--and r.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')
	--and r.preg_reg_state in (''PENDING'',''PREGNANT'')
	order by p.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','72f34950-4995-4dd0-9b09-94604929970e'),
	 (159,58981,'2019-01-22 19:08:40.005',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','dc621660-6537-452c-8cd4-b290b9ad4492'),
	 (1183,409,'2019-07-05 10:57:19.762',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','d4cd682e-1a1b-4af1-af28-f73efbc4b250'),
	 (1037,60512,'2019-04-22 17:32:09.655',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','7a6ea5d3-3940-4d3a-a28d-a0268a0c9218'),
	 (1039,60512,'2019-04-22 17:33:39.482',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','8b1ea3da-94dd-4293-9282-4c2cb1ad8472'),
	 (1184,409,'2019-07-05 10:57:19.8',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Live Birth from 1st April(Yearly)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.native_loc_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	case when m.gender = ''M'' then ''Male'' else ''Female'' end as gender,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.native_loc_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.member_id is not null
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.gender as "Gender",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','90980f8f-5d36-4c73-83ce-172149c36ade'),
	 (1138,60512,'2019-05-02 16:51:12.454',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
	select 
	case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end as from_date,
	case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end + interval ''1 day'' - interval ''00:00:00.001'' as to_date
),child_service_ids as (
	select child_service_id from rch_child_cp_suspects
	inner join dates on remarks_date between from_date and to_date
	where location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and status =''TREATMENT_COMMENCED''
	#limit_offset#
)
select
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
concat(imt_member.unique_health_id,'' ('',imt_member.family_id,'')'') as "Unique Health ID (Family ID)",
concat(imt_member.first_name,'' '',imt_member.last_name) as "Child Name",
imt_member.dob as "Date of Birth",
m2.mobile_number as "Mother Contact No.",
to_char(rch_child_service_master.service_date,''DD-MM-YYYY'') as "Child Service Date"
from rch_child_service_master
inner join imt_member on rch_child_service_master.member_id = imt_member.id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join child_service_ids on rch_child_service_master.id = child_service_ids.child_service_id',true,'ACTIVE','c68a9c65-7fcf-440d-ab3a-c04f0b11cbc6');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1131,60512,'2019-05-02 15:55:17.865',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','a6b00526-c7cf-45d6-9ced-8f066702022d'),
	 (1132,60512,'2019-05-02 15:55:17.874',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
	select 
	case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end as from_date,
	case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end + interval ''1 day'' - interval ''00:00:00.001'' as to_date
),child_service_ids as (
	select child_service_id from rch_child_cp_suspects
	inner join dates on remarks_date between from_date and to_date
	where location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and status =''NORMAL_DEVELOPMENT''
	#limit_offset#
)
select
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
concat(imt_member.unique_health_id,'' ('',imt_member.family_id,'')'') as "Unique Health ID (Family ID)",
concat(imt_member.first_name,'' '',imt_member.last_name) as "Child Name",
imt_member.dob as "Date of Birth",
m2.mobile_number as "Mother Contact No.",
to_char(rch_child_service_master.service_date,''DD-MM-YYYY'') as "Child Service Date"
from rch_child_service_master
inner join imt_member on rch_child_service_master.member_id = imt_member.id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join child_service_ids on rch_child_service_master.id = child_service_ids.child_service_id',true,'ACTIVE','ddaaeb05-4a70-4c69-a984-5d971d91ade8'),
	 (1130,60512,'2019-05-02 15:53:55.204',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
	select 
	case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end as from_date,
	case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end + interval ''1 day'' - interval ''00:00:00.001'' as to_date
),child_service_ids as (
	select child_service_id from rch_child_cp_suspects
	inner join dates on remarks_date between from_date and to_date
	inner join imt_member on rch_child_cp_suspects.member_id = imt_member.id
	where location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and status =''NORMAL_DEVELOPMENT''
	and imt_member.gender=''F''
	#limit_offset#
)
select
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
concat(imt_member.unique_health_id,'' ('',imt_member.family_id,'')'') as "Unique Health ID (Family ID)",
concat(imt_member.first_name,'' '',imt_member.last_name) as "Child Name",
imt_member.dob as "Date of Birth",
m2.mobile_number as "Mother Contact No.",
to_char(rch_child_service_master.service_date,''DD-MM-YYYY'') as "Child Service Date"
from rch_child_service_master
inner join imt_member on rch_child_service_master.member_id = imt_member.id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join child_service_ids on rch_child_service_master.id = child_service_ids.child_service_id',true,'ACTIVE','6888a711-ad6e-4db3-910d-940bc3509c81'),
	 (165,58981,'2019-01-22 19:19:49.099',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','e15c9a1c-4404-4ae7-a0d1-acd02198de43'),
	 (1379,60512,'2019-08-22 14:06:26.896',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
	select
	to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date ,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end, ''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_date 
),call_master_ids as (
	select id,
        created_on,
        created_by,
        get_location_hierarchy(location_id) as Location_hierarchy
        from gvk_manage_call_master
	inner join dates on gvk_manage_call_master.created_on between dates.from_date and dates.to_date
	where gvk_manage_call_master.location_id in(select child_id from location_hierchy_closer_det where parent_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1))
	and gvk_manage_call_master.call_response not in (''com.argusoft.imtecho.gvk.call.cant-talk'',
	''com.argusoft.imtecho.gvk.call.no-number-available'',
	''com.argusoft.imtecho.gvk.call.wrong-mobile-number'',
        ''com.argusoft.imtecho.gvk.call.phone-switched-off'',
        ''com.argusoft.imtecho.gvk.call.unresponsive'',
        ''com.argusoft.imtecho.gvk.call.not-reachable'',
''com.argusoft.imtecho.gvk.call.processed'',
''com.argusoft.imtecho.gvk.call.processing''
	)
	and gvk_manage_call_master.call_type = ''FHW_HIGH_RISK_CONF''
),response_ids as (
	select gvk_high_risk_follow_up_responce.id, call_master_ids.created_on, call_master_ids.created_by,Location_hierarchy
	from call_master_ids
	inner join gvk_high_risk_follow_up_responce on call_master_ids.id = gvk_high_risk_follow_up_responce.manage_call_master_id
	order by gvk_high_risk_follow_up_responce.id desc
	#limit_offset#
),response as (
	select 
	gvk_high_risk_follow_up_responce.id as gvk_follow_up_id,
	gvk_high_risk_follow_up_responce.member_id,
    response_ids.created_on,response_ids.created_by,
    Location_hierarchy,
	case when gvk_high_risk_follow_up_responce.is_high_risk_condition_confirmed is true then ''Yes'' 
		when gvk_high_risk_follow_up_responce.is_high_risk_condition_confirmed is false then ''No'' 
		else ''N/A'' end as is_high_risk_condition_confirmed
	from response_ids
	inner join gvk_high_risk_follow_up_responce on response_ids.id = gvk_high_risk_follow_up_responce.id
),member_location_area_ids as (
	select response.gvk_follow_up_id,response.member_id,imt_family.location_id,imt_family.area_id    
	from response
	inner join imt_member on imt_member.id = response.member_id
	inner join imt_family on imt_family.family_id = imt_member.family_id    
),asha as (
	select member_location_area_ids.gvk_follow_up_id,asha.id
	from member_location_area_ids
	inner join um_user_location asha_location on member_location_area_ids.area_id = asha_location.loc_id and asha_location.state = ''ACTIVE''
	inner join um_user asha on asha_location.user_id = asha.id and asha.role_id = 24 and asha.state = ''ACTIVE''
),asha_unique as (
	select asha.gvk_follow_up_id,max(asha.id)
	from asha
	group by asha.gvk_follow_up_id
),fhw as (
	select member_location_area_ids.gvk_follow_up_id,fhw.id
	from member_location_area_ids
	inner join um_user_location fhw_location on member_location_area_ids.location_id = fhw_location.loc_id and fhw_location.state = ''ACTIVE''
	inner join um_user fhw on fhw_location.user_id = fhw.id and fhw.role_id = 30 and fhw.state = ''ACTIVE''
),fhw_unique as (
	select fhw.gvk_follow_up_id,max(fhw.id)
	from fhw
	group by fhw.gvk_follow_up_id
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Member Name",
Location_hierarchy as "Location",
to_char(response.created_on,''DD-MM-YYYY HH:MI PM'') as  "Call Date",
concat(fhw_user.first_name,'' '',fhw_user.middle_name,'' '',fhw_user.last_name) as "FHW Name",
concat(asha_user.first_name,'' '',asha_user.middle_name,'' '',asha_user.last_name) as "ASHA Name",
concat(um.first_name, '' '', um.last_name) as "RO Details",
response.is_high_risk_condition_confirmed as "Is Beneficiary confirmed as High Risk"
from response
inner join imt_member on response.member_id = imt_member.id
inner join imt_family on imt_family.family_id = imt_member.family_id
left join asha_unique on response.gvk_follow_up_id = asha_unique.gvk_follow_up_id
left join fhw_unique on response.gvk_follow_up_id = fhw_unique.gvk_follow_up_id
left join um_user asha_user on asha_unique.max = asha_user.id
left join um_user fhw_user on fhw_unique.max = fhw_user.id
left join um_user um on response.created_by = um.id',true,'ACTIVE','f34aa138-2568-4368-9768-d110cce75260'),
	 (721,409,'2019-02-27 13:25:51.224',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Full ANC(LMP Based Pregnant Women Reg. for ANC Services)
with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
member_det as (
	select r.member_id, r.native_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.date_of_delivery,''DD/MM/YYYY'') as dod
	,r.ifa as ifa
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, imt_member m
	where r.member_id = m.id
	and r.ifa >= 180
	and r.total_regular_anc >=4
	and r.native_location_id  = l.child_id
        and (r.tt2_given is not null or r.tt_boster is not null)
	and l.parent_id = #location_id#
	and r.lmp_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date)
	order by r.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, 
        string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
member_det.ifa as "IFA",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','dc9de81a-1b75-46ef-90aa-2047563b5eec'),
	 (306,1,'2019-02-12 15:36:08.335',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','026178a0-eb08-4f87-af43-28c5861e788d'),
	 (1126,60512,'2019-05-02 15:50:39.109',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
	select 
	case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end as from_date,
	case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end + interval ''1 day'' - interval ''00:00:00.001'' as to_date
),child_service_ids as (
	select child_service_id from rch_child_cp_suspects
	inner join dates on remarks_date between from_date and to_date
	inner join imt_member on rch_child_cp_suspects.member_id = imt_member.id
	where location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and status =''NORMAL_DEVELOPMENT''
	and imt_member.gender=''M''
	#limit_offset#
)
select
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
concat(imt_member.unique_health_id,'' ('',imt_member.family_id,'')'') as "Unique Health ID (Family ID)",
concat(imt_member.first_name,'' '',imt_member.last_name) as "Child Name",
imt_member.dob as "Date of Birth",
m2.mobile_number as "Mother Contact No.",
to_char(rch_child_service_master.service_date,''DD-MM-YYYY'') as "Child Service Date"
from rch_child_service_master
inner join imt_member on rch_child_service_master.member_id = imt_member.id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join child_service_ids on rch_child_service_master.id = child_service_ids.child_service_id',true,'ACTIVE','af0eb207-bf39-4a70-909d-ba5abe7917f1'),
	 (1615,74841,'2020-05-22 12:30:17.785',1,'2021-01-13 20:22:06.427965','demographic_location_id,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
parameters as (
	select distinct CAST(#location_id# AS INTEGER) as location_id,
	(case when #location_id# is null then ''null'' else CAST(''#demographic_location_id#'' AS TEXT) end) as demographic_group
	--from um_user_location where user_id = #loggedInUserId# and state = ''ACTIVE''
),location_ids as(
    select vlc.parent_id from parameters p, vw_location_closure_det_by_parent_location_depth vlc 
    where vlc.location_id=p.location_id and vlc.depth=1 
    and (p.demographic_group=''null'' or vlc.child_demographic_type in 
    (select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
    ) group by vlc.parent_id
),age_info as (
    select vlc.parent_id as loc_id,sum(total_0to5_children) as child_0_5, 
    sum(total_0to5_children) as total_0to5_children,
    sum(total_6_to_10) as total_6_to_10,
    sum(total_11_to_49) as total_11_to_49,
    sum(total_50_to_59) as total_50_to_59,
    sum(total_60_plus) as total_60_plus
    from parameters p 
	cross join vw_location_closure_det_by_parent_location_depth vlc  
    left join location_wise_analytics loc_anlyts on vlc.child_id = loc_anlyts.loc_id
    where 
    vlc.location_id=p.location_id and vlc.depth=1 
    and (p.demographic_group=''null'' or vlc.child_demographic_type in 
    (select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
    )
    group by vlc.parent_id
)
select  
    row_number() over(order by location_master.english_name) as "Sr No.",
    location_master.id as hidden_location_id,
    (select demographic_group from parameters) as hidden_demographic_location_id,
    case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name else location_master.name end as "Location",
    total_0to5_children as "Total 0 to 5 Children",
    total_6_to_10 as "Total 6 to 10",
    total_11_to_49 as "Total 11 to 49",
    total_50_to_59 as "Total 50 to 59",
    total_60_plus as "Total 60 plus",
    coalesce(total_0to5_children + total_6_to_10 + total_11_to_49 + total_50_to_59 + total_60_plus, 0) as "Total"
    from location_ids
    inner join prefered_language on true
    inner join location_master on location_master.id = location_ids.parent_id
    left join age_info ai on ai.loc_id = location_ids.parent_id
union all
select
null,
(case when #location_id# is null then 2 else #location_id# end)  as hidden_location_id,
(select demographic_group from parameters) as hidden_demographic_location_id,
''<b>Total<b>'',
sum(total_0to5_children),
sum(total_6_to_10),
sum(total_11_to_49),
sum(total_50_to_59),
sum(total_60_plus),
coalesce(sum(total_0to5_children) + sum(total_6_to_10) + sum(total_11_to_49) + sum(total_50_to_59) + sum(total_60_plus), 0)
from location_ids
left join age_info ai on ai.loc_id = location_ids.parent_id',true,'ACTIVE','67486e88-a6f6-4aab-b8f6-69443d4d951f'),
	 (1122,60512,'2019-05-02 15:42:55.496',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
	select 
	case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end as from_date,
	case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end + interval ''1 day'' - interval ''00:00:00.001'' as to_date
),child_service_ids as (
	select child_service_id from rch_child_cp_suspects
	inner join dates on remarks_date between from_date and to_date
	inner join imt_member on rch_child_cp_suspects.member_id = imt_member.id
	where location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and status =''DELAYED_DEVELOPMENT''
	and imt_member.gender=''F''
	#limit_offset#
)
select
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
concat(imt_member.unique_health_id,'' ('',imt_member.family_id,'')'') as "Unique Health ID (Family ID)",
concat(imt_member.first_name,'' '',imt_member.last_name) as "Child Name",
imt_member.dob as "Date of Birth",
m2.mobile_number as "Mother Contact No.",
to_char(rch_child_service_master.service_date,''DD-MM-YYYY'') as "Child Service Date"
from rch_child_service_master
inner join imt_member on rch_child_service_master.member_id = imt_member.id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join child_service_ids on rch_child_service_master.id = child_service_ids.child_service_id',true,'ACTIVE','ca4f7452-2c4e-4982-b619-3f4c0d0bc25c');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1120,60512,'2019-05-02 15:40:07.936',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
	select 
	case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end as from_date,
	case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end + interval ''1 day'' - interval ''00:00:00.001'' as to_date
),child_service_ids as (
	select child_service_id from rch_child_cp_suspects
	inner join dates on remarks_date between from_date and to_date
	inner join imt_member on rch_child_cp_suspects.member_id = imt_member.id
	where location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and status =''DELAYED_DEVELOPMENT''
	and imt_member.gender=''M''
	#limit_offset#
)
select
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
concat(imt_member.unique_health_id,'' ('',imt_member.family_id,'')'') as "Unique Health ID (Family ID)",
concat(imt_member.first_name,'' '',imt_member.last_name) as "Child Name",
imt_member.dob as "Date of Birth",
m2.mobile_number as "Mother Contact No.",
to_char(rch_child_service_master.service_date,''DD-MM-YYYY'') as "Child Service Date"
from rch_child_service_master
inner join imt_member on rch_child_service_master.member_id = imt_member.id
left join imt_member m2 on imt_member.mother_id = m2.id
inner join child_service_ids on rch_child_service_master.id = child_service_ids.child_service_id',true,'ACTIVE','7661471c-0aec-4835-b385-5411a286ba63'),
	 (1289,63746,'2019-08-07 14:13:59.566',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,call_type,location_id','with unsuccess_calls as(
	select 
	*
	from ccc_manage_call_master  master
	where call_response in (''com.argusoft.imtecho.ccc.call.wrong-mobile-number'')
	and location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
       and case when ''all'' = ''#call_type#'' then true else call_type = ''#call_type#'' end
       and created_on between case when ''#from_date#'' = ''null'' then now() else to_date(''#from_date#'',''MM-DD-YYYY'') end and to_date(case when ''#to_date#'' = ''null'' then null 
       else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds''
       order by id #limit_offset#
),
unsuccess_calls_details as (
	select 
	concat(im.first_name,'' '',im.last_name, ''('',im.unique_health_id ,'')'') as name,
	master.mobile_number,
	master.created_on,
	master.call_type,
	master.location_id,
	master.id,
	master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join imt_member im on im.id = master.member_id
	where call_response != ''com.argusoft.imtecho.ccc.call.success''
	
	union all 
	select 
	concat(uu.first_name,'' '',uu.last_name, ''('',role.name ,'')'') as name,
	master.mobile_number,
	master.created_on,
	master.call_type,
	master.location_id,
	master.id,
	master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join um_user uu on uu.id = master.user_id
	inner join um_role_master role on uu.role_id = role.id 
	where call_response != ''com.argusoft.imtecho.ccc.call.success''

),
response as (
select 
master.name,
case when call_response = ''com.argusoft.imtecho.ccc.call.no-number-available'' then ''No number available''
when call_response = ''com.argusoft.imtecho.ccc.call.cant-talk'' then ''Can''''t talk''
when call_response = ''com.argusoft.imtecho.ccc.call.wrong-mobile-number'' then ''Wrong mobile number''
when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-asha-husband'' then ''Number belongs to asha''	-- todo
--when call_response = ''com.argusoft.imtecho.ccc.call.not-interested-in-treatment'' then ''Not intersted in treatment''
when call_response = ''com.argusoft.imtecho.ccc.call.unresponsive'' then ''Unreponsive''
when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-anm-husband'' then ''Number belongs to anm'' 
when call_response = ''com.argusoft.imtecho.ccc.call.not-reachable'' then ''Not reachable''
when call_response = ''com.argusoft.imtecho.ccc.call.phone-switched-off'' then ''Phone switched off''
when call_response = ''com.argusoft.imtecho.ccc.call.number-collection-pending'' then ''Number collection pending''			-- todo
--when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-beneficiary-husband'' then ''number of beneficiary''
--when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-beneficiary''
--when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-beneficiarys-family-member''
--when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-beneficiarys-neighbour''
when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-anm-or-anm-husband'' then ''ANM or husband''			-- todo
when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-ashah-or-asha-husband'' then ''Asha or husband''			-- todo
else ''Other'' end reason,
master.mobile_number\:\:json,
master.location_id,
master.created_on,
master.call_type,
master.created_by,
master.id
from unsuccess_calls_details master
 ),
mo as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code in (''mo_phc'',''mo_uphc''))
),
mo_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	mo group by location_id
),
mo_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from mo_unique mo
	inner join um_user um on um.id = mo.mo_id
),
asha as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code = ''ASHA'')
),
asha_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	asha group by location_id
),
asha_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from asha_unique mo
	inner join um_user um on um.id = mo.mo_id
),
anm as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code = ''FHW'')
),
anm_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	anm group by location_id
),
anm_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from anm_unique mo
	inner join um_user um on um.id = mo.mo_id
),

contacts as (
	select json_array_elements(mobile_number)->>''mobileNumber'' as contact ,json_array_elements(mobile_number)->>''isCalled'' as isCalled ,id
	from response where mobile_number is not null ),
contacts_display_date as (	
	select string_agg(
	case when isCalled=''true'' then concat(''<b>'',contact,''</b>'') else contact end
	,'','') as contact,id from contacts
	group by id)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
resp.name as "Called Person",
contacts.contact as "Dialed Number",
to_char(resp.created_on,''DD-MM-YYYY HH:MI PM'') as  "Call Date",

case when resp.call_type = ''FOLL_OVE_SERV'' then ''Overdue services follow'' end as "Call Type",
--resp.reason as "Reason for Unsuccessful Calling",
mo.name as "MO Details",
anm.name as "ANM Details",
asha.name as "ASHA Details"
,concat(um.first_name, '' '', um.last_name) as "RO Details" 
--fhw.name
from response resp
left join contacts_display_date contacts on resp.id = contacts.id
left join mo_details mo on mo.location_id = resp.location_id
left join anm_details anm on anm.location_id = resp.location_id
left join asha_details asha on asha.location_id = resp.location_id
left join um_user um on resp.created_by = um.id',true,'ACTIVE','9d0d0b6f-4c33-4cd4-b399-7e406b515cfc'),
	 (1335,60512,'2019-08-19 17:08:40.366',1,'2021-01-13 20:22:06.427965','to_month','select to_char(cast(''#to_month#'' as date),''MM/YYYY'') as to_month',true,'ACTIVE','e5c4d6f0-36c2-42b9-b7fe-2f0d43450c95'),
	 (1142,63746,'2019-05-28 15:27:24.514',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','75a88560-1fd0-43a2-8e1f-2bb84c763083'),
	 (1334,60512,'2019-08-19 17:08:40.364',1,'2021-01-13 20:22:06.427965','from_month','select to_char(cast(''#from_month#'' as date),''MM/YYYY'') as from_month',true,'ACTIVE','e342d88b-0a16-45b3-b048-c8d3e40f975c'),
	 (1352,60512,'2019-08-20 17:39:12.689',1,'2021-01-13 20:22:06.427965','from_date,to_date,location_id','with dates as(
	select
	to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date ,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end, ''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_date 
),location_ids as(
	select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1
),counts as (
	select location_ids.child_id,
	count(*) as maternal_death_counts,	
	count(*) filter (where rch_pregnancy_analytics_details.date_of_delivery is null) as anc_death_count,
	count(*) filter (where rch_pregnancy_analytics_details.date_of_delivery = rch_member_death_deatil.dod) as intrapartum_death_count,
	count(*) filter (where rch_pregnancy_analytics_details.date_of_delivery < rch_member_death_deatil.dod) as postpartum_death_count,
    count(*) filter (where rch_member_death_deatil.place_of_death = ''HOSP'') as death_at_hosp,
    count(*) filter (where rch_member_death_deatil.place_of_death = ''HOME'') as death_at_home,
	count(*) filter (where rch_member_death_deatil.place_of_death = ''ON_THE_WAY'') as on_the_way_count,
	count(*) filter (where extract(year from age(rch_member_death_deatil.dod,rch_pregnancy_analytics_details.dob)) < 19) as below_19_count,
	count(*) filter (where extract(year from age(rch_member_death_deatil.dod,rch_pregnancy_analytics_details.dob)) between 19 and 30) as between_19_30_count,
	count(*) filter (where extract(year from age(rch_member_death_deatil.dod,rch_pregnancy_analytics_details.dob)) between 31 and 35) as between_31_35_count,
	count(*) filter (where extract(year from age(rch_member_death_deatil.dod,rch_pregnancy_analytics_details.dob)) > 35) as above_35_count,	
	count(*) filter (where rch_pregnancy_analytics_details.type_of_delivery = ''ASSIST'') as assist_delivery_count,
	count(*) filter (where rch_pregnancy_analytics_details.type_of_delivery = ''NORMAL'') as normal_delivery_count,
	count(*) filter (where rch_pregnancy_analytics_details.type_of_delivery = ''CAESAREAN'') as c_delivery_count
	from location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id
	inner join rch_pregnancy_analytics_details on location_hierchy_closer_det.child_id = rch_pregnancy_analytics_details.member_current_location_id
	and rch_pregnancy_analytics_details.maternal_detah
	inner join rch_member_death_deatil on rch_pregnancy_analytics_details.member_id = rch_member_death_deatil.member_id
	inner join dates on rch_member_death_deatil.dod between dates.from_date and dates.to_date
	group by location_ids.child_id
),det as (
	select row_number() over() as sr_no,
	location_master.name as loc,
	location_master.id as hidden_location_id,
	coalesce(counts.maternal_death_counts,0) as maternal_death_counts,	
	coalesce(counts.anc_death_count,0) as anc_death_count,
	coalesce(counts.intrapartum_death_count,0) as intrapartum_death_count,
	coalesce(counts.postpartum_death_count,0) as postpartum_death_count,	
    coalesce(counts.death_at_hosp,0) as death_at_hosp,
    coalesce(counts.death_at_home,0) as death_at_home,
    coalesce(counts.on_the_way_count,0) as on_the_way_count,
	coalesce(counts.below_19_count,0) as below_19_count,
	coalesce(counts.between_19_30_count,0) as between_19_30_count,
	coalesce(counts.between_31_35_count,0) as between_31_35_count,
	coalesce(counts.above_35_count,0) as above_35_count,	
	coalesce(counts.assist_delivery_count,0) as assist_delivery_count,
	coalesce(counts.normal_delivery_count,0) as normal_delivery_count,
	coalesce(counts.c_delivery_count,0) as c_delivery_count
	from location_ids
	left join counts on location_ids.child_id = counts.child_id
	inner join location_master on location_ids.child_id = location_master.id
)
select row_number() over() as "Sr. no",
det.loc as "Location",
det.hidden_location_id,
det.maternal_death_counts as "No. of Maternal Deaths",
det.anc_death_count as "ANC",
det.intrapartum_death_count as "Intrapartum Death",
det.postpartum_death_count as "Postpartum Death",
det.death_at_hosp as "Hospital",
det.death_at_home as "Home",
det.on_the_way_count as "On the Way",

det.below_19_count as "Below 19 year",
det.between_19_30_count as "19-30 years",
det.between_31_35_count as "30-35 years",
det.above_35_count as "Above 35 years",
det.normal_delivery_count as "Normal Delivery",
det.c_delivery_count as "C-section",
det.assist_delivery_count as "Assisted Delivery"
from det
union all
select null,
''<b>Total<b>'',
#location_id#,
sum(det.maternal_death_counts),
sum(det.anc_death_count),
sum(det.intrapartum_death_count),
sum(det.postpartum_death_count),
sum(det.death_at_hosp),
sum(det.death_at_home),
sum(det.on_the_way_count),

sum(det.below_19_count),
sum(det.between_19_30_count),
sum(det.between_31_35_count),
sum(det.above_35_count),
sum(det.normal_delivery_count),
sum(det.c_delivery_count),
sum(det.assist_delivery_count)
from det;',true,'ACTIVE','bb32b58f-bbf1-4fe2-a512-4b5d189ffcab'),
	 (345,1,'2019-02-13 11:26:15.21',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob,to_char(c.death_date, ''DD/MM/YYYY'') as dod
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
	where l.child_id = c.loc_id and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.is_infant_death = true
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
child_det.dod as "Date of Death",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','6d8d43dd-ce5b-4a49-8ab3-275171cb0e14'),
	 (1290,63746,'2019-08-07 14:18:34.634',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','8fc566c2-5234-48d5-bbc4-1626f49031a8'),
	 (1291,63746,'2019-08-07 14:18:34.646',1,'2021-01-13 20:22:06.427965',NULL,'with  types as (
select ''all'' as key, ''All'' as value, 1 as ord
union
select ''FOLL_OVE_SERV'' as key,''Overdue services follow'' as value, 2 as ord)
select * from types order by ord',true,'ACTIVE','b2c6c54d-8582-4b3d-80ca-bad13cc8c778'),
	 (1292,63746,'2019-08-07 14:18:34.649',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','720b7620-51e8-4021-bf81-2f6147668206');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1293,63746,'2019-08-07 14:18:34.651',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','c1d4e86c-9308-4756-950e-1f314e8d7fc4'),
	 (1294,63746,'2019-08-07 14:18:34.678',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,call_type,location_id','with unsuccess_calls as(
	select 
	*
	from ccc_manage_call_master master
	where call_response in (''com.argusoft.imtecho.ccc.call.no-number-available'')
	and location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
        and case when ''all'' = ''#call_type#'' then true else call_type = ''#call_type#'' end
       and created_on between case when ''#from_date#'' = ''null'' then now() else to_date(''#from_date#'',''MM-DD-YYYY'') end and to_date(case when ''#to_date#'' = ''null'' then null 
       else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds''
      order by id #limit_offset#
),
unsuccess_calls_details as (
	select 
	concat(im.first_name,'' '',im.last_name, ''('',im.unique_health_id ,'')'') as name,
	master.mobile_number,
	master.created_on,
	master.call_type,
	master.location_id,
	master.id,
	master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join imt_member im on im.id = master.member_id
	where call_response != ''com.argusoft.imtecho.ccc.call.success''
	
	union all 
	select 
	concat(uu.first_name,'' '',uu.last_name, ''('',role.name ,'')'') as name,
	master.mobile_number,
	master.created_on,
	master.call_type,
	master.location_id,
	master.id,
	master.created_by,
	master.call_response
	from unsuccess_calls master
	inner join um_user uu on uu.id = master.user_id
	inner join um_role_master role on uu.role_id = role.id 
	where call_response != ''com.argusoft.imtecho.ccc.call.success''
),
response as (
select 
master.name,
case when call_response = ''com.argusoft.imtecho.ccc.call.no-number-available'' then ''No number available''
when call_response = ''com.argusoft.imtecho.ccc.call.cant-talk'' then ''Can''''t talk''
when call_response = ''com.argusoft.imtecho.ccc.call.wrong-mobile-number'' then ''Wrong mobile number''
when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-asha-husband'' then ''Number belongs to asha''	-- todo
--when call_response = ''com.argusoft.imtecho.ccc.call.not-interested-in-treatment'' then ''Not intersted in treatment''
when call_response = ''com.argusoft.imtecho.ccc.call.unresponsive'' then ''Unreponsive''
when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-anm-husband'' then ''Number belongs to anm'' 
when call_response = ''com.argusoft.imtecho.ccc.call.not-reachable'' then ''Not reachable''
when call_response = ''com.argusoft.imtecho.ccc.call.phone-switched-off'' then ''Phone switched off''
when call_response = ''com.argusoft.imtecho.ccc.call.number-collection-pending'' then ''Number collection pending''			-- todo
--when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-beneficiary-husband'' then ''number of beneficiary''
--when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-beneficiary''
--when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-beneficiarys-family-member''
--when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-beneficiarys-neighbour''
when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-anm-or-anm-husband'' then ''ANM or husband''			-- todo
when call_response = ''com.argusoft.imtecho.ccc.call.number-belongs-to-ashah-or-asha-husband'' then ''Asha or husband''			-- todo
else ''Other'' end reason,
master.mobile_number\:\:json,
master.location_id,
master.created_on,
master.call_type,
master.created_by,
master.id
from unsuccess_calls_details master
 ),
mo as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code in (''mo_phc'',''mo_uphc''))
),
mo_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	mo group by location_id
),
mo_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from mo_unique mo
	inner join um_user um on um.id = mo.mo_id
),
asha as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code = ''ASHA'')
),
asha_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	asha group by location_id
),
asha_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from asha_unique mo
	inner join um_user um on um.id = mo.mo_id
),
anm as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code = ''FHW'')
),
anm_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	anm group by location_id
),
anm_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from anm_unique mo
	inner join um_user um on um.id = mo.mo_id
),

contacts as (
	select json_array_elements(mobile_number)->>''mobileNumber'' as contact ,json_array_elements(mobile_number)->>''isCalled'' as isCalled ,id
	from response where mobile_number is not null ),
contacts_display_date as (	
	select string_agg(
	case when isCalled=''true'' then concat(''<b>'',contact,''</b>'') else contact end
	,'','') as contact,id from contacts
	group by id)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
resp.name as "Called Person",
contacts.contact as "Dialed Number",
to_char(resp.created_on,''DD-MM-YYYY HH:MI PM'') as  "Call Date",


case when resp.call_type = ''FOLL_OVE_SERV'' then ''Overdue services follow'' end as "Call Type",
--resp.reason as "Reason for Unsuccessful Calling",
mo.name as "MO Details",
anm.name as "ANM Details",
asha.name as "ASHA Details"
,concat(um.first_name, '' '', um.last_name) as "RO Details"
--fhw.name
from response resp
left join contacts_display_date contacts on resp.id = contacts.id
left join mo_details mo on mo.location_id = resp.location_id
left join anm_details anm on anm.location_id = resp.location_id
left join asha_details asha on asha.location_id = resp.location_id
left join um_user um on resp.created_by = um.id',true,'ACTIVE','e8a29463-97ad-4d71-aba7-616e9bd1afe3'),
	 (395,1,'2019-02-13 12:24:06.803',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Penta 2 given(Immunization Services Provided to Children with Date of Birth)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.is_valid_for_tracking_report = true
	and c.penta2 is not null
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','296a90c4-8d0e-421d-97ca-0f3e6affc9d6'),
	 (1299,63746,'2019-08-07 14:22:06.76',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','2a91c424-e5a9-4420-9298-4f11e1fc7477'),
	 (1490,74840,'2020-01-09 16:23:11.343',1,'2021-01-13 20:22:06.427965','code','select row_data -> ''query'' as Query,row_data -> ''modified_on'' as Modified_On from logged_actions where table_name = ''report_query_master''  and cast(row_data -> ''id'' as int) in (
select cast(json_array_elements(cast(config_json as json) -> ''containers'' -> ''tableContainer'')  ->> ''queryId'' as int) as query_id
from report_master where id = #code# )',true,'ACTIVE','49c5c6c1-12ce-468a-84db-df3b2883b497'),
	 (1300,63746,'2019-08-07 14:22:06.769',1,'2021-01-13 20:22:06.427965',NULL,'with  types as (
select ''all'' as key, ''All'' as value, 1 as ord
union
select ''FOLL_OVE_SERV'' as key,''Overdue services follow'' as value, 2 as ord)
select * from types order by ord',true,'ACTIVE','8b4ad031-e2f2-4c64-b615-606294e465d7'),
	 (1301,63746,'2019-08-07 14:22:06.781',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','b64ea26a-bb00-4909-a40a-bf27666ca969'),
	 (1302,63746,'2019-08-07 14:22:06.782',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','f69f031f-889f-45bb-abac-cf0c66f86868'),
	 (1154,63746,'2019-05-28 18:33:17.279',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','5305db70-46ce-4cb9-938c-20d5e4a55ac7'),
	 (1155,63746,'2019-05-28 18:33:17.281',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','b4729d63-5c38-4728-bf2b-ef66715321e7');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (72,1027,'2018-08-30 11:50:01.402',1,'2021-01-13 20:22:06.427965','from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id','with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_month_year,
to_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') as to_month_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
), w as (
    select
	vlc.parent_id as loc_id,
    coalesce(sum(anc_reg),0) as anc_reg,
    coalesce(sum(early_anc),0) as early_anc,
    coalesce(sum(anc1),0) as anc1,
    coalesce(sum(anc2),0) as anc2,
    coalesce(sum(anc3),0) as anc3,
    coalesce(sum(anc4),0) as anc4,
    coalesce(sum(tt1),0) as tt1,
    coalesce(sum(tt2+tt_booster),0) as tt2_boster,
    coalesce(sum(mtp),0) as mtp,
    coalesce(sum(abortion),0) as abortion,
    coalesce(sum(no_of_inst_del+no_of_home_del+delivery_108),0) as inst_home_del,
    coalesce(sum(no_of_inst_del+delivery_108),0) as no_of_inst_del,
    coalesce(sum(sc)+sum(phc)+sum(chc)+sum(sdh)+sum(uhc)+sum(chiranjivi),0) as del_govt_hosp,   
    coalesce(sum(chiranjivi),0) as chiranjivi,
    coalesce(sum(pvt),0) as pvt,
    coalesce(sum(no_of_home_del),0) as no_of_home_del,
    coalesce(sum(no_of_maternal_death),0) as no_of_maternal_death,
	coalesce(sum(no_of_missing_del),0) as no_of_missing_del,
	coalesce(sum(home_del_by_sba),0) as home_del_by_sba,
	coalesce(sum(home_del_by_non_sba),0) as home_del_by_non_sba,
	coalesce(sum(delivery_out_of_state_govt+delivery_out_of_state_pvt),0) as out_of_state_delivery,
	coalesce(sum(del_over_due),0) as del_over_due
from vw_location_closure_det_by_parent_location_depth vlc cross join parameters p
inner join rch_lmp_base_location_wise_data_point on rch_lmp_base_location_wise_data_point.location_id = vlc.child_id 
and vlc.location_id = p.location_id and vlc.depth=1
where month_year between p.from_month_year and p.to_month_year
and (p.demographic_group=''null'' or vlc.child_demographic_type in 
	( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
)
group by vlc.parent_id
)
,s as (
select case when ( p.preferred_language and (lm.english_name is not null)) then lm.english_name
else lm.name end as "Location Name",
    lm.id as hidden_location_id,
    (select demographic_group from parameters) as hidden_demographic_location_id,
    coalesce(anc_reg,0) as "PW regd. with LMP",
    coalesce(early_anc,0) as "Early ANC",
    round(coalesce(case when anc_reg = 0 then 0 else early_anc*100/anc_reg end,0),2) as "Percentage of Early ANC",
    coalesce(anc1,0) as "ANC - 1",
    round(coalesce(case when anc_reg = 0 then 0 else anc1*100/anc_reg end,0),2) as "Percentage of ANC - 1",
    coalesce(anc2,0) as "ANC - 2",
    round(coalesce(case when anc_reg = 0 then 0 else anc2*100/anc_reg end,0),2) as "Percentage of ANC - 2",
    coalesce(anc3,0) as "ANC - 3",
    round(coalesce(case when anc_reg = 0 then 0 else anc3*100/anc_reg end,0),2) as "Percentage of ANC - 3",
    coalesce(anc4,0) as "ANC - 4",
    round(coalesce(case when anc_reg = 0 then 0 else anc4*100/anc_reg end,0),2) as "Percentage of ANC - 4",
    coalesce(tt1,0) as "TT1",
    coalesce(tt2_boster,0) as "TT2 / Booster",
    coalesce(mtp,0) as "MTP",
    coalesce(abortion,0) as "Abortion",
    coalesce(inst_home_del,0) as "Del reg (Inst del + home del)",
    round(coalesce(case when anc_reg = 0 then 0 else inst_home_del*100/anc_reg end,0),2) as "Percentage of Del reg (Inst del + home del)",
    coalesce(no_of_inst_del,0) as "Inst Del (Gvt + Pvt)",
    round(coalesce(case when anc_reg = 0 then 0 else no_of_inst_del*100/anc_reg end,0),2) as "Percentage of Inst Del (Gvt + Pvt)",
    coalesce(del_govt_hosp,0) as "Del in Gvt Hospital",   
    round(coalesce(case when anc_reg = 0 then 0 else del_govt_hosp*100/anc_reg end,0),2) as "Percentage of Del in Gvt Hospital",
    coalesce(chiranjivi,0) as "Of which CY",
    coalesce(pvt,0) as "Del in pvt. hospital",
    round(coalesce(case when anc_reg = 0 then 0 else pvt*100/anc_reg end,0),2) as "Percentage of Del in pvt. hospital",
    coalesce(home_del_by_sba,0) as "Home Delivey by SBA",
	coalesce(home_del_by_non_sba,0) as "Home Del by Non SBA",
	coalesce(no_of_home_del,0) as "Home del",
    round(coalesce(case when anc_reg = 0 then 0 else no_of_home_del*100/anc_reg end,0),2) as "Percentage of Home del",
    coalesce(out_of_state_delivery,0) as "Out of state delivery",
	coalesce(no_of_maternal_death,0) as "Maternal Death",
	coalesce(no_of_missing_del,0) as "MISSING DELIVERY",
	coalesce(del_over_due,0) as "Del. Overdue"	
from parameters p cross join (select child_id from location_hierchy_closer_det where parent_id = (select location_id from parameters)
 and depth=1) as t
inner join location_master lm on lm.id = t.child_id
left join w on w.loc_id = lm.id
order by lm.name
)
select row_number() over() as "Sr. no",r.* from
(select * from s
union all
select
     ''<b>Total<b>'',
    (select location_id from parameters) as hidden_location_id,
    (select demographic_group from parameters) as hidden_demographic_location_id,
    coalesce(sum("PW regd. with LMP"),0),
    coalesce(sum("Early ANC"),0),
    round(case when sum("PW regd. with LMP") = 0 then 0 else sum("Early ANC")*100/sum("PW regd. with LMP") end,2),
    coalesce(sum("ANC - 1"),0),
    round(case when sum("PW regd. with LMP") = 0 then 0 else sum("ANC - 1")*100/sum("PW regd. with LMP") end,2),
    coalesce(sum("ANC - 2"),0),
    round(case when sum("PW regd. with LMP") = 0 then 0 else sum("ANC - 2")*100/sum("PW regd. with LMP") end,2),
    coalesce(sum("ANC - 3"),0),
    round(case when sum("PW regd. with LMP") = 0 then 0 else sum("ANC - 3")*100/sum("PW regd. with LMP") end,2),
    coalesce(sum("ANC - 4"),0),
    round(case when sum("PW regd. with LMP") = 0 then 0 else sum("ANC - 4")*100/sum("PW regd. with LMP") end,2),
    coalesce(sum("TT1"),0),
    coalesce(sum("TT2 / Booster"),0),
    coalesce(sum("MTP"),0),
    coalesce(sum("Abortion"),0),
    coalesce(sum("Del reg (Inst del + home del)"),0),
    round(case when sum("PW regd. with LMP") = 0 then 0 else sum("Del reg (Inst del + home del)")*100/sum("PW regd. with LMP") end,2),
    coalesce(sum("Inst Del (Gvt + Pvt)"),0),
    round(case when sum("PW regd. with LMP") = 0 then 0 else sum("Inst Del (Gvt + Pvt)")*100/sum("PW regd. with LMP") end,2),
    coalesce(sum("Del in Gvt Hospital"),0),
    round(case when sum("PW regd. with LMP") = 0 then 0 else sum("Del in Gvt Hospital")*100/sum("PW regd. with LMP") end,2),
    coalesce(sum("Of which CY"),0),
    coalesce(sum("Del in pvt. hospital"),0),
    round(case when sum("PW regd. with LMP") = 0 then 0 else sum("Del in pvt. hospital")*100/sum("PW regd. with LMP") end,2),
    coalesce(sum("Home Delivey by SBA"),0),
	coalesce(sum("Home Del by Non SBA"),0),
    coalesce(sum("Home del"),0),
    round(case when sum("PW regd. with LMP") = 0 then 0 else sum("Home del")*100/sum("PW regd. with LMP") end,2),
    coalesce(sum("Out of state delivery"),0),
	coalesce(sum("Maternal Death"),0),
	coalesce(sum("MISSING DELIVERY"),0),
	coalesce(sum("Del. Overdue"),0)
from s)r',true,'ACTIVE','f4765c1c-ba36-475b-8f2b-49aa120ce1b9'),
	 (613,409,'2019-02-19 12:25:55.909',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','aa2a97b5-127c-4056-9341-7452728836e6'),
	 (614,409,'2019-02-19 12:25:55.914',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','81e81bcc-7a31-416f-b8b0-8716faa25753'),
	 (615,409,'2019-02-19 12:25:55.916',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','d3208ddb-9837-41ea-91c6-c89d631af439'),
	 (1190,409,'2019-07-05 13:19:59.12',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Children weighed (Yearly)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.native_loc_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.delivery_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.birth_weight is not null
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','7bb15454-7f5b-469e-be67-61371ddfac2c'),
	 (1555,74841,'2020-04-02 10:54:53.774',1,'2021-01-13 20:22:06.427965','limit_offset,loggedInUserId','with idsp_screening as (
select
	clt.id as "id",
	ltd.id as lab_id,
	ltd.lab_collection_on as collection_date,
	clt.location_id as loc_id,
	imt_member.id as member_id,
	case when clt.member_id is null
		then concat_ws('' '',clt.first_name,clt.middle_name,clt.last_name)
		else concat(concat_ws('' '',imt_member.first_name,imt_member.middle_name,imt_member.last_name)
			, '' ('' , imt_member.unique_health_id , '')'' , ''<br>'' , imt_member.family_id) end as member_det,
	concat(case when clt.member_id is null
		then cast(clt.age as text)
		else cast(EXTRACT(YEAR FROM age(imt_member.dob)) as text) end,'' Year'') as age,
	to_char(clt.admission_date,''DD/MM/YYYY'') as admission_date,
	hiwd.ward_name,
	sample_from."name" as sample_from_health_infra,
	sample_from.is_covid_lab,
	clt.current_ward_id as ward_id,
	cacd.on_ventilator as on_ventilator,
	cacd.ventilator_type1 as ventilator_type1,
	cacd.ventilator_type2 as ventilator_type2,
	cacd.on_o2 as on_o2,
	cacd.on_air as on_air,
	cacd.remarks as remarks,
	clt.is_hiv as hiv,
	clt.current_bed_no,
	cacd.health_status as health_status,
	cacd.service_date as last_check_up_time
	from covid19_lab_test_detail ltd
	inner join covid19_admission_detail clt on ltd.covid_admission_detail_id = clt.id
	left join health_infrastructure_ward_details hiwd on hiwd.id = clt.current_ward_id
	left join covid19_admitted_case_daily_status cacd on cacd.id = clt.last_check_up_detail_id
	left join health_infrastructure_details sample_from on sample_from.id = ltd.sample_health_infra
	left join imt_member on clt.member_id = imt_member.id
	left join imt_family on imt_member.family_id = imt_family.family_id
	where
	ltd.sample_health_infra_send_to = (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = ''#loggedInUserId#'' and uhi.state = ''ACTIVE'')
	and clt.status not in (''DISCHARGED'',''DEAD'',''REFER'') and ltd.lab_collection_status = ''SAMPLE_COLLECTED''
	order by cacd.service_date
#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No"
,member_det as "Member Details"
,to_char(collection_date,''DD/MM/YYYY'') as "Sample Collection Date"
,get_location_hierarchy(loc_id) as "Location"
,age as "age"
,admission_date as "Admission Date"
,ward_name as "Ward Name"
,ward_id as "Ward ID"
,current_bed_no as "Bed Number"
,health_status as "Health Status"
,to_char(last_check_up_time,''DD/MM/YYYY'') as "Last checkup time"
,sample_from_health_infra as "Sample From Health Infrastructure"
from idsp_screening;',true,'ACTIVE','18bbec39-ccb6-4c73-9f7c-ca3c11a4e2a8'),
	 (170,58981,'2019-01-22 19:21:54.372',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,loggedInUserId,from_month,location_id','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#)
,dates as (
	select to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date
	,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date
)
, member_det as (
	select r.member_id, r.native_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, rch_pregnancy_registration_det p, dates d
	where r.member_id = m.id and r.native_location_id  = l.child_id and m.cur_preg_reg_det_id = p.id
	and l.parent_id = #location_id#
	and r.reg_service_date  between d.from_date and d.to_date
	and r.cur_extreme_age = true
	--and r.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')
	--and r.preg_reg_state in (''PENDING'',''PREGNANT'')
	order by p.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','516969f3-81f0-4e2b-b7a7-d1ec8f06f0f0'),
	 (887,58981,'2019-03-06 19:07:32.316',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','b6d546ef-d860-4f11-a4f9-309b9e010ac8'),
	 (888,58981,'2019-03-06 19:07:32.319',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','6ab3b9e4-df96-4444-b91b-73e73beaae15'),
	 (889,58981,'2019-03-06 19:07:32.321',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''MM/YYYY'') as to_month_year',true,'ACTIVE','492ddd68-6d70-4ea0-a6f8-84f8d2b2143c');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (958,60512,'2019-04-10 17:51:42.017',1,'2021-01-13 20:22:06.427965','depth_flag,limit_offset,loggedInUserId,location_id','with prefered_language as (
select 	case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end as is_enlish
from um_user where id = #loggedInUserId# 
), health_infra_ids as(
	select id,name,location_id,address from health_infrastructure_details where location_id in
	(select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth <= (case when #depth_flag# = -1 then 0 else 8 end))
	and type = 1007
	#limit_offset#
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
health_infra_ids.name as "Name",
case when prefered_language.is_enlish then get_location_hierarchy_language_wise(health_infra_ids.location_id, ''EN'')
				else get_location_hierarchy(health_infra_ids.location_id) end as "Location",
case when health_infra_ids.address is not null and health_infra_ids.address !='''' and health_infra_ids.address !=''null'' then health_infra_ids.address else ''N.A'' end as "Address"
from health_infra_ids
inner join prefered_language on true',true,'ACTIVE','262b9e9e-1ae8-4eb8-87a6-62d2b4e48627'),
	 (1357,69973,'2019-08-20 17:50:12.501',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
select
to_date(case when ''#from_date#'' =''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when ''#to_date#'' =''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') as to_date
),
migration_master_det as (
select mm.* from (select * from migration_master, dates) mm 
inner join location_hierchy_closer_det depth_child on depth_child.child_id=mm.reported_location_id 
inner join location_hierchy_closer_det lhcd on (lhcd.child_id=depth_child.parent_id)
 where (case when (mm.from_date is not null and mm.to_date is not null) then
reported_on between mm.from_date and mm.to_date else 1=1 end) and mm.state not in (''DUPLICATE'',''REVERTED'')
and mm.type=''OUT'' and mm.state=''REPORTED'' and migrated_location_not_known = false and lhcd.parent_id=#location_id# and lhcd.depth=1  #limit_offset#
),
final_Query as (
select concat(im.first_name,'' '', im.middle_name,'' '', im.last_name) || case when im.unique_health_id is not null then '' (''|| im.unique_health_id||'')'' end
as member_name, concat(uu.first_name,'' '', uu.middle_name,'' '', uu.last_name,'' ('',uu.contact_number,'')'') as reported_by,
to_char(mm.reported_on,''DD/MM/YYYY'') as reported_on, get_location_hierarchy(mm.location_migrated_from) as from_name, get_location_hierarchy(mm.location_migrated_to) as to_name
 /*, mm.family_migrated_from, mm.family_migrated_to, mm.state*/
from migration_master_det mm
inner join um_user uu on uu.id=mm.reported_by
left join imt_member im on im.id=mm.member_id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
fq.member_name as "Member Name",
fq.reported_by as "Reported By",
fq.reported_on as "Reported On",
fq.from_name as "Migrated From",
fq.to_name as "Migrated To"
/*
, fq.state as "Migration Status",
fq.family_migrated_from as "Family Migrated From",
fq.family_migrated_to as "Family Migrated To"
*/
from final_Query fq',true,'ACTIVE','ef7be1ef-bc23-4f37-96b9-5f1ba02ae959'),
	 (40,1027,'2018-05-22 11:35:33.5',1,'2021-01-13 20:22:06.427965','from_date,to_date,user_id','select row_number() over () as "Sr. No",r1."Agent Name" || ''('' || r1."User Name" || '')'' as "Agent Name",r2.rn as "Login Instance",r2.rn as "Logout Instance",
to_char(r2.min,''DD-MM-YYYY hh24:MI:SS am'') as "Agent Login Time",
case when r2.min = r2.max then null else to_char(r2.max,''DD-MM-YYYY hh24:MI:SS am'') end  as "Agent Logout Time",
case when r2.min <> r2.max then to_char(r2.max - r2.min,''hh24:MI:SS'') else null end as "Total Login Hours"
from 
(select distinct us.id,concat(us.first_name,'' '',us.last_name) as "Agent Name",us.user_name as "User Name"
from gvk_activity_log act,um_user us
where act.created_by = us.id 
and (#from_date# is null or act.created_on >=(case when #from_date# is null then ''01/01/1970'' else ''#from_date#'' end)\:\:Date)
and (#to_date# is null or act.created_on <(case when #to_date# is null then ''01/01/1970'' else (date (case when #to_date# is null then ''01/01/1970'' else ''#to_date#'' end) + integer ''1'')end)\:\:Date)
and (act.created_by = #user_id#) and us.role_id in (select role_id from um_role_category cat
inner join listvalue_field_value_detail list on cat.category_id = list.id and list.code = ''GVKEMRI_RO'')
) r1 left join 
(select rn,created_by,min(created_on),max(created_on)
from 
(    select created_by,created_on,(ROW_NUMBER() over (partition by created_by order by created_on)+1)/2 as rn
     from gvk_activity_log where
     (#from_date# is null or created_on >=(case when #from_date# is null then ''01/01/1970'' else ''#from_date#'' end)\:\:Date)
and (#to_date# is null or created_on <(case when #to_date# is null then ''01/01/1970'' else (date (case when #to_date# is null then ''01/01/1970'' else ''#to_date#'' end) + integer ''1'')end)\:\:Date)
and (created_by = #user_id#) 	
) a
group by rn,created_by
order by rn) r2 on r1.id = r2.created_by',true,'ACTIVE','5c81053a-5c2f-46a1-8eec-1c60c61393a9'),
	 (1411,69973,'2019-09-04 15:44:18.423',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,from_month,location_id','with user_detail as (
	select uu.id, uu.first_name, uu.middle_name, uu.last_name, uu.state from um_user uu, um_user_location ul, 
location_hierchy_closer_det lhcd where uu.id=ul.user_id and ul.loc_id = lhcd.child_id and role_id=30 and lhcd.parent_id=#location_id# and uu.state=''ACTIVE''
)
select distinct rd.score_date as "Date", concat(ud.first_name, '' '', ud.middle_name, '' '', ud.first_name) as "Name", rd.over_due_pending_task as "Overdue / Pending Task", rd.login_rate as "Login Rate", rd.timely_task_complete_rate as "Task Completion Rate" , rd.diff_bwn_service_entry_date_rate as "Timely Data Entry Rate"
from um_user_score_rank_details rd inner join user_detail ud
on rd.user_id=ud.id where rd.score_date between
to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM-DD-YYYY'')
and to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM-DD-YYYY'') #limit_offset#',true,'ACTIVE','26e532a5-ad58-4a74-ad73-9e44bc30e55a'),
	 (263,1,'2019-02-05 12:31:40.371',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','164de883-483f-4633-8ef5-13b937a90ee9'),
	 (1089,63746,'2019-05-01 15:09:46.17',1,'2021-01-13 20:22:06.427965','limit_offset,age_group_or_child_count,location_id','with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)
,age_group as (
    select ''15-19'' as age_group, current_date - interval ''19 years'' as from_date, current_date - interval ''15 years''  as to_date
    union
    select ''20-24'' as age_group,  current_date - interval ''24 years'' as from_date, current_date - interval ''19 years'' - interval ''1 day''  as to_date
    union
    select ''25-29'' as age_group, current_date - interval ''29 years'' as from_date, current_date - interval ''24 years'' - interval ''1 day''  as to_date
    union
    select ''30-34'' as age_group,  current_date - interval ''34 years'' as from_date, current_date - interval ''29 years'' - interval ''1 day''  as to_date
    union
    select ''35-39'' as age_group, current_date - interval ''39 years'' as from_date, current_date - interval ''34 years'' - interval ''1 day''  as to_date
    union
    select ''40-44'' as age_group,  current_date - interval ''44 years'' as from_date, current_date - interval ''39 years'' - interval ''1 day''  as to_date
    union
    select ''45-49'' as age_group, current_date - interval ''49 years'' as from_date, current_date - interval ''44 years'' - interval ''1 day''  as to_date
)
,member_location as (
	select m.member_id, m.loc_id  from rch_eligible_couple_analytics m
	inner join age_group on m.dob between age_group.from_date and age_group.to_date
	inner join locations on locations.child_id = m.loc_id
	where ( case when #age_group_or_child_count# is null then age_group in (''15-19'',''20-24'',''25-29'',''30-34'',''35-39'',''40-44'',''45-49'') else age_group = (''#age_group_or_child_count#'') end) 
	and  m.last_method_of_contraception in (''ANTARA'')   
        #limit_offset#
)
,loc_det as(
	select member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id
	,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id
	from location_master,location_type_master,member_location 
	where 
	location_master.id = member_location.loc_id and location_type_master.type = location_master.type
)
select 
	 ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
	mem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as "Member Name",
	fam.family_id as "Family Id",to_char(r.dob, ''DD/MM/YYYY'') as "Birth Date",
	string_agg(lm.name,''> '' order by lhcd.depth desc) as "Location Hierarchy"  
from rch_eligible_couple_analytics r
inner join loc_det on loc_det.member_id = r.member_id
inner join imt_member mem on mem.id = r.member_id
inner join imt_family fam on mem.family_id = fam.family_id
inner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id
inner join location_master lm on lm.id = lhcd.parent_id
group by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;',true,'ACTIVE','6f01e254-a53e-494b-98b7-9be10633bdae'),
	 (1160,63746,'2019-05-28 18:41:49.626',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','c52c1e07-ec41-4984-9094-a1cdfa3d6b89'),
	 (1276,63746,'2019-08-06 18:38:35.349',1,'2021-01-13 20:22:06.427965','from_date,to_date,location,call_type','with loc_det as (
	select lm.id as loc_id ,lm.english_name as name,lm.location_code from location_hierchy_closer_det lh,location_master lm
	where lm.id = lh.child_id and lh.parent_id = #location# and lh.depth= 1
),
call_response as (
	select count(1) as total,
	lhcd.parent_id,
	sum(case when call_response not in (''com.argusoft.imtecho.ccc.call.cant-talk'',
		''com.argusoft.imtecho.ccc.call.no-number-available'',
		''com.argusoft.imtecho.ccc.call.wrong-mobile-number'',
		''com.argusoft.imtecho.ccc.call.phone-switched-off''
		) then 1 else 0 end ) as success_call,
	sum(case when call_response in 
	(
	''com.argusoft.imtecho.ccc.call.cant-talk'',
		''com.argusoft.imtecho.ccc.call.no-number-available'',
		''com.argusoft.imtecho.ccc.call.wrong-mobile-number'',
		''com.argusoft.imtecho.ccc.call.phone-switched-off''
	) then 1 else 0 end ) as umsuccess_call,
	sum(case when call_response = ''com.argusoft.imtecho.ccc.call.cant-talk'' then 1 else 0 end ) as cant_talk_now,
	sum(case when call_response = ''com.argusoft.imtecho.ccc.call.no-number-available'' then 1 else 0 end ) as no_mobile_no,
	sum(case when call_response = ''com.argusoft.imtecho.ccc.call.wrong-mobile-number'' then 1 else 0 end ) as wrong_mobile_no
	from ccc_manage_call_master master inner join location_hierchy_closer_det lhcd on lhcd.child_id = master.location_id 
	where 
	lhcd.parent_id in (select loc_id from loc_det)
	and master.location_id = lhcd.child_id
	and case when ''all'' = ''#call_type#'' then true else call_type = ''#call_type#'' end
	and created_on between case when ''#from_date#'' = ''null'' then now() else to_date(''#from_date#'',''MM-DD-YYYY'') end and to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds'' 
	group by lhcd.parent_id 
)
select 
location.id as hidden_location_id,
location.name,
total as "Total Calls",
success_call as "Successful Calls",
round(((success_call*100.0)/total),2) as "Successful %",
umsuccess_call as "Unsuccessful calls",
round(((umsuccess_call*100.0)/total),2) as "Unsuccessful %",
cant_talk_now as "Can’t talk right now",
no_mobile_no as "No. not displayed",
wrong_mobile_no as "Wrong number"
from call_response call , location_master location
where call.parent_id = location.id
union all 
select
#location# as hidden_location_id,
''Grand Total'' ,
sum(total),
sum(success_call),
round(((sum(success_call)*100.0)/sum(total)),2) ,
sum(umsuccess_call),
round(((sum(umsuccess_call))*100.0/sum(total)),2) ,
sum(cant_talk_now),
sum(no_mobile_no),
sum(wrong_mobile_no)
from call_response',true,'ACTIVE','60ae59d0-07d4-4cad-9433-19c589a90eeb'),
	 (1362,69973,'2019-08-20 18:11:07.107',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','32d3ff35-a928-4df6-ab3e-575694d5157f'),
	 (1087,63746,'2019-05-01 15:09:11.322',1,'2021-01-13 20:22:06.427965','limit_offset,age_group_or_child_count,location_id','with locations as ( select child_id from location_hierchy_closer_det where parent_id = #location_id#)
,age_group as (
    select ''15-19'' as age_group, current_date - interval ''19 years'' as from_date, current_date - interval ''15 years''  as to_date
    union
    select ''20-24'' as age_group,  current_date - interval ''24 years'' as from_date, current_date - interval ''19 years'' - interval ''1 day''  as to_date
    union
    select ''25-29'' as age_group, current_date - interval ''29 years'' as from_date, current_date - interval ''24 years'' - interval ''1 day''  as to_date
    union
    select ''30-34'' as age_group,  current_date - interval ''34 years'' as from_date, current_date - interval ''29 years'' - interval ''1 day''  as to_date
    union
    select ''35-39'' as age_group, current_date - interval ''39 years'' as from_date, current_date - interval ''34 years'' - interval ''1 day''  as to_date
    union
    select ''40-44'' as age_group,  current_date - interval ''44 years'' as from_date, current_date - interval ''39 years'' - interval ''1 day''  as to_date
    union
    select ''45-49'' as age_group, current_date - interval ''49 years'' as from_date, current_date - interval ''44 years'' - interval ''1 day''  as to_date
)
,member_location as (
	select m.member_id, m.loc_id  from rch_eligible_couple_analytics m
	inner join age_group on m.dob between age_group.from_date and age_group.to_date
	inner join locations on locations.child_id = m.loc_id
	where ( case when #age_group_or_child_count# is null then age_group in (''15-19'',''20-24'',''25-29'',''30-34'',''35-39'',''40-44'',''45-49'') else age_group = (''#age_group_or_child_count#'') end) 
	and  m.last_method_of_contraception in (''ORALPILLS'',''CHHAYA'')   
        #limit_offset#
)
,loc_det as(
	select member_id,case when location_type_master.level = 7 then location_master.id else null end as area_id
	,case when location_type_master.level = 7 then location_master.parent else location_master.id end as location_id
	from location_master,location_type_master,member_location 
	where 
	location_master.id = member_location.loc_id and location_type_master.type = location_master.type
)
select 
	 ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
	mem.first_name || '' '' || mem.middle_name || '' '' || mem.last_name || '' ('' || mem.unique_health_id || '')''  as "Member Name",
	fam.family_id as "Family Id",to_char(r.dob, ''DD/MM/YYYY'') as "Birth Date",
	string_agg(lm.name,''> '' order by lhcd.depth desc) as "Location Hierarchy"  
from rch_eligible_couple_analytics r
inner join loc_det on loc_det.member_id = r.member_id
inner join imt_member mem on mem.id = r.member_id
inner join imt_family fam on mem.family_id = fam.family_id
inner join location_hierchy_closer_det lhcd on (case when loc_det.area_id is null then loc_det.location_id else cast(loc_det.area_id as bigint) end) = lhcd.child_id
inner join location_master lm on lm.id = lhcd.parent_id
group by mem.first_name, mem.middle_name, mem.last_name, mem.unique_health_id,r.member_id,r.dob,fam.family_id;',true,'ACTIVE','40d79aab-aec4-4eba-94f8-3c4201b4ed06');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (961,60512,'2019-04-10 18:00:22.817',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','a163704f-1ecf-4342-91ad-698b7aa90e6f'),
	 (1304,63746,'2019-08-07 14:25:14.637',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','ad8c8ff6-bbd3-4808-8588-8d7e183fc76c'),
	 (1056,409,'2019-04-28 18:07:01.381',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','-------Measles rubella-------
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
	where l.child_id = c.measles_rubella_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.measles_rubella is not null
	group by m.id, f.location_id, c.dob, c.measles_rubella
	having  (case when extract(month from measles_rubella) > 3 
	then concat(extract(year from measles_rubella), ''-'', extract(year from measles_rubella) + 1)
	else concat(extract(year from measles_rubella) - 1, ''-'', extract(year from measles_rubella)) end = 
		case when #financial_year# is null then 
			case when extract(month from current_date) > 3 
			then concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)
			else concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end
		else ''#financial_year#'' end) 
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','939d773b-3993-4094-82d2-545cd8f4b539'),
	 (962,60512,'2019-04-10 18:00:22.827',1,'2021-01-13 20:22:06.427965','depth_flag,limit_offset,loggedInUserId,location_id','with prefered_language as (
select 	case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end as is_enlish
from um_user where id = #loggedInUserId# 
), health_infra_ids as(
	select id,name,location_id,address from health_infrastructure_details where location_id in
	(select child_id from location_hierchy_closer_det where parent_id = #location_id#  and  depth <= (case when #depth_flag# = -1 then 0 else 8 end))
	and type in (1061,1009,1084,1008,1007,1012,1063)
	#limit_offset#
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
health_infra_ids.name as "Name",
case when prefered_language.is_enlish then get_location_hierarchy_language_wise(health_infra_ids.location_id, ''EN'')
				else get_location_hierarchy(health_infra_ids.location_id) end as "Location",
case when health_infra_ids.address is not null and health_infra_ids.address !='''' and health_infra_ids.address !=''null'' then health_infra_ids.address else ''N.A'' end as "Address"
from health_infra_ids
inner join prefered_language on true',true,'ACTIVE','d0fa860f-d283-4f00-8536-49b34c246b5e'),
	 (1453,74840,'2019-12-13 19:35:36.846',1,'2021-01-13 20:22:06.427965','from_date,to_date,location_id','with dates as(
    select
    to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date ,
    to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end, ''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_date 
),location_ids as(
    select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1
),counts as (
    select
        location_ids.child_id,
        count(*) as maternal_death_counts,
        count(*) filter (where member_death.death_reason = ''782'' ) as "hemorrhage(A.P.H)",
        count(*) filter (where member_death.death_reason = ''783'' ) as "hemorrhage(P.P.H)",
        count(*) filter (where member_death.death_reason = ''784'' ) as "Anemia",        
        count(*) filter (where member_death.death_reason in (''785'',''852'')) as "Sepsis",
        count(*) filter (where member_death.death_reason = ''786'' ) as "Obstructed labor",
        count(*) filter (where member_death.death_reason = ''787'' ) as "Goods presentation",
        count(*) filter (where member_death.death_reason = ''788'' ) as "Eclampsia",
        count(*) filter (where member_death.death_reason = ''853'' ) as "Congenital Heart Disease",
        count(*) filter (where member_death.death_reason = ''849'' ) as "Fever",
        count(*) filter (where member_death.death_reason = ''847'' ) as "asphyxia",
        count(*) filter (where member_death.death_reason = ''848'' ) as "low birth weight/preterm",
        count(*) filter (where member_death.death_reason = ''789'' ) as "Abortion",
        count(*) filter (where member_death.death_reason = ''790'' ) as "Surgical Complication",
        count(*) filter (where member_death.death_reason = ''791'' ) as "Blood Trans Fusion Reaction",
        count(*) filter (where member_death.death_reason = ''792'' ) as "Causes of maternal death Other causes of death",
        count(*) filter (where member_death.death_reason = ''850'' ) as "Diarrhea",
        count(*) filter (where member_death.death_reason = ''851'' ) as "Pneumonia",
        count(*) filter (where member_death.death_reason = ''854'' ) as "Multiple Congenital Abnormality",
        count(*) filter (where member_death.death_reason = ''855'' ) as "Hypothermia",
        count(*) filter (where member_death.death_reason = ''856'' ) as "Milk Aspiration",
        count(*) filter (where member_death.death_reason = ''857'' ) as "SIDS",
        count(*) filter (where member_death.death_reason = ''858'' ) as "Social Neglect",        
        count(*) filter (where member_death.death_reason in (''1155'',''1295'')) as "Hypertensive disorders in pregnancy, birth and Puperium",
        count(*) filter (where member_death.death_reason = ''1156'' ) as "Hypertensive Disorder in pregnancy (Pre-eclampsia)",
        count(*) filter (where member_death.death_reason = ''1157'' ) as "Complication of Anasthesia",
        count(*) filter (where member_death.death_reason = ''1158'' ) as "Other Obstetric Complications",
        count(*) filter (where member_death.death_reason = ''1159'' ) as "Sickle Cell Anaemia",
        count(*) filter (where member_death.death_reason = ''1160'' ) as "Indirect Causes-Non Obstetric Complication-Cardiac Disorders",
        count(*) filter (where member_death.death_reason = ''1161'' ) as "Liver Disorders",
        count(*) filter (where member_death.death_reason = ''1162'' ) as "Respiratory Disorders",
        count(*) filter (where member_death.death_reason = ''1163'' ) as "Renal Disorders",
        count(*) filter (where member_death.death_reason = ''1164'' ) as "Endocrinal Disorders",
        count(*) filter (where member_death.death_reason = ''1165'' ) as "Neurolgical Disorders",
        count(*) filter (where member_death.death_reason = ''1166'' ) as "Indirect Cause-Non Obstetric Causes-Infections/infestations",
        count(*) filter (where member_death.death_reason = ''1167'' ) as "Unspecified Maternal Death",
        count(*) filter (where member_death.death_reason = ''1168'' ) as "Coincidental/incidental causes (due to external causes) (Accidental injuries, Burns, Suicide)",        
        count(*) filter (where member_death.death_reason is null or member_death.death_reason in (''793'',''-1'')) as "Other"
    
    from location_ids   
    inner join location_hierchy_closer_det loc on loc.parent_id = location_ids.child_id
    inner join rch_pregnancy_analytics_details on loc.child_id = rch_pregnancy_analytics_details.member_current_location_id
    and rch_pregnancy_analytics_details.maternal_detah
    inner join rch_member_death_deatil member_death on rch_pregnancy_analytics_details.member_id = member_death.member_id
    inner join dates on member_death.dod between dates.from_date and dates.to_date
    group by location_ids.child_id      
),
det as (
    select row_number() over() as sr_no,
    location_master.name as loc,
    coalesce(counts.maternal_death_counts,0) as "maternal_death_counts",
    coalesce(counts."hemorrhage(A.P.H)" , 0) as "hemorrhage(A.P.H)",
    coalesce(counts."hemorrhage(P.P.H)" , 0) as "hemorrhage(P.P.H)",
    coalesce(counts."Anemia" , 0) as "Anemia",
    coalesce(counts."Sepsis" , 0) as "Sepsis",
    coalesce(counts."Obstructed labor" , 0) as "Obstructed labor",
    coalesce(counts."Goods presentation" , 0) as "Goods presentation",
    coalesce(counts."Eclampsia" , 0) as "Eclampsia",
    coalesce(counts."Congenital Heart Disease" , 0) as "Congenital Heart Disease",
    coalesce(counts."Fever" , 0) as "Fever",
    coalesce(counts."asphyxia" , 0) as "asphyxia",
    coalesce(counts."low birth weight/preterm" , 0) as "low birth weight/preterm",
    coalesce(counts."Abortion" , 0) as "Abortion",
    coalesce(counts."Surgical Complication" , 0) as "Surgical Complication",
    coalesce(counts."Blood Trans Fusion Reaction" , 0) as "Blood Trans Fusion Reaction",
    coalesce(counts."Causes of maternal death Other causes of death" , 0) as "Causes of maternal death Other causes of death",
    coalesce(counts."Diarrhea" , 0) as "Diarrhea",
    coalesce(counts."Pneumonia" , 0) as "Pneumonia",    
    coalesce(counts."Multiple Congenital Abnormality" , 0) as "Multiple Congenital Abnormality",
    coalesce(counts."Hypothermia" , 0) as "Hypothermia",
    coalesce(counts."Milk Aspiration" , 0) as "Milk Aspiration",
    coalesce(counts."SIDS" , 0) as "SIDS",
    coalesce(counts."Social Neglect" , 0) as "Social Neglect",    
    coalesce(counts."Hypertensive disorders in pregnancy, birth and Puperium",0) as "Hypertensive disorders in pregnancy, birth and Puperium",
    coalesce(counts."Hypertensive Disorder in pregnancy (Pre-eclampsia)",0) as "Hypertensive Disorder in pregnancy (Pre-eclampsia)",
    coalesce(counts."Complication of Anasthesia",0) as "Complication of Anasthesia",
    coalesce(counts."Other Obstetric Complications",0) as "Other Obstetric Complications",
    coalesce(counts."Sickle Cell Anaemia",0) as "Sickle Cell Anaemia",
    coalesce(counts."Indirect Causes-Non Obstetric Complication-Cardiac Disorders",0) as "Indirect Causes-Non Obstetric Complication-Cardiac Disorders",
    coalesce(counts."Liver Disorders",0) as "Liver Disorders",
    coalesce(counts."Respiratory Disorders",0) as "Respiratory Disorders",
    coalesce(counts."Renal Disorders",0) as "Renal Disorders",
    coalesce(counts."Endocrinal Disorders",0) as "Endocrinal Disorders",
    coalesce(counts."Neurolgical Disorders",0) as "Neurolgical Disorders",
    coalesce(counts."Indirect Cause-Non Obstetric Causes-Infections/infestations",0) as "Indirect Cause-Non Obstetric Causes-Infections/infestations",
    coalesce(counts."Unspecified Maternal Death",0) as "Unspecified Maternal Death",
    coalesce(counts."Coincidental/incidental causes (due to external causes) (Accidental injuries, Burns, Suicide)",0) as "Coincidental/incidental causes (due to external causes) (Accidental injuries, Burns, Suicide)",

    coalesce(counts."Other" , 0) as "Other"
    from location_ids
    left join counts on location_ids.child_id = counts.child_id
    inner join location_master on location_ids.child_id = location_master.id    
)
select row_number() over() as "Sr. no",
det.loc as "Location",
det."maternal_death_counts" as "No. of Maternal Deaths",
det."hemorrhage(A.P.H)" as "hemorrhage(A.P.H)",
det."hemorrhage(P.P.H)" as "hemorrhage(P.P.H)",
det."Anemia" as "Anemia",
det."Sepsis" as "Sepsis",
det."Obstructed labor" as "Obstructed labor",
--det."Goods presentation" as "Goods presentation",
det."Eclampsia" as "Eclampsia",
--det."Congenital Heart Disease" as "Congenital Heart Disease",
--det."Fever" as "Fever",
--det."asphyxia" as "asphyxia",
--det."low birth weight/preterm" as "low birth weight/preterm",
det."Abortion" as "Abortion",
det."Surgical Complication" as "Surgical Complication",
det."Blood Trans Fusion Reaction" as "Blood Trans Fusion Reaction",
--det."Causes of maternal death Other causes of death" as "Causes of maternal death Other causes of death",
--det."Diarrhea" as "Diarrhea",
--det."Pneumonia" as "Pneumonia",
--det."Multiple Congenital Abnormality" as "Multiple Congenital Abnormality",
--det."Hypothermia" as "Hypothermia",
--det."Milk Aspiration" as "Milk Aspiration",
--det."SIDS" as "SIDS",
--det."Social Neglect" as "Social Neglect",
det."Hypertensive disorders in pregnancy, birth and Puperium" as "Hypertensive disorders in pregnancy, birth and Puperium",
det."Hypertensive Disorder in pregnancy (Pre-eclampsia)" as "Hypertensive Disorder in pregnancy (Pre-eclampsia)",
det."Complication of Anasthesia" as "Complication of Anasthesia",
det."Other Obstetric Complications" as "Other Obstetric Complications",
det."Sickle Cell Anaemia" as "Sickle Cell Anaemia",
det."Indirect Causes-Non Obstetric Complication-Cardiac Disorders" as "Indirect Causes-Non Obstetric Complication-Cardiac Disorders",
det."Liver Disorders" as "Liver Disorders",
det."Respiratory Disorders" as "Respiratory Disorders",
det."Renal Disorders" as "Renal Disorders",
det."Endocrinal Disorders" as "Endocrinal Disorders",
det."Neurolgical Disorders" as "Neurolgical Disorders",
det."Indirect Cause-Non Obstetric Causes-Infections/infestations" as "Indirect Cause-Non Obstetric Causes-Infections/infestations",
det."Unspecified Maternal Death" as "Unspecified Maternal Death",
det."Coincidental/incidental causes (due to external causes) (Accidental injuries, Burns, Suicide)" as "Coincidental/incidental causes (due to external causes) (Accidental injuries, Burns, Suicide)"
--det."Other" as "Other"
from det

union all
select null,
''<b>Total<b>'',
sum(det."maternal_death_counts"),
sum(det."hemorrhage(A.P.H)"),
sum(det."hemorrhage(P.P.H)"),
sum(det."Anemia"),
sum(det."Sepsis"),
sum(det."Obstructed labor"),
--sum(det."Goods presentation"),
sum(det."Eclampsia"),
--sum(det."Congenital Heart Disease"),
--sum(det."Fever"),
--sum(det."asphyxia"),
--sum(det."low birth weight/preterm"),
sum(det."Abortion"),
sum(det."Surgical Complication"),
sum(det."Blood Trans Fusion Reaction"),
--sum(det."Causes of maternal death Other causes of death"),
--sum(det."Diarrhea"),
--sum(det."Pneumonia"),
--sum(det."Multiple Congenital Abnormality"),
--sum(det."Hypothermia"),
--sum(det."Milk Aspiration"),
--sum(det."SIDS"),
--sum(det."Social Neglect"),
sum("Hypertensive disorders in pregnancy, birth and Puperium"),
sum("Hypertensive Disorder in pregnancy (Pre-eclampsia)"),
sum("Complication of Anasthesia"),
sum("Other Obstetric Complications"),
sum("Sickle Cell Anaemia"),
sum("Indirect Causes-Non Obstetric Complication-Cardiac Disorders"),
sum("Liver Disorders"),
sum("Respiratory Disorders"),
sum("Renal Disorders"),
sum("Endocrinal Disorders"),
sum("Neurolgical Disorders"),
sum("Indirect Cause-Non Obstetric Causes-Infections/infestations"),
sum("Unspecified Maternal Death"),
sum("Coincidental/incidental causes (due to external causes) (Accidental injuries, Burns, Suicide)")
--sum(det."Other")
from det',true,'ACTIVE','1e6a7d2c-5332-437c-bbb8-05c6e013ab0a'),
	 (130,58981,'2019-01-12 11:31:48.398',1,'2021-01-13 20:22:06.427965',NULL,'select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as year from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by year desc;',true,'ACTIVE','ed1f92ef-22c8-45b4-9c74-d96a761388ef'),
	 (918,60512,'2019-03-13 15:27:08.049',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','07fae664-0bde-4cca-8a7c-c7dc4c3f0a88'),
	 (1163,63746,'2019-05-28 18:54:10.359',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','e6d4b162-a3d3-418d-921a-d57cc3a3b5db'),
	 (1608,92665,'2020-05-06 11:55:12.501',1,'2021-01-13 20:22:06.427965','limit_offset','with anmol_location as (
	select s.rch_code as state_code,d.rch_code as district_code,db.rch_code  as health_block_code,
	t.rch_code as taluka_code, alm.rch_code as health_facility_code ,
	case when alm.english_name is null then alm."name" else alm.english_name end as facility_name,
	case when db.english_name is null then db."name" else db.english_name end as block_name 
	from 
	anmol_location_master alm 
	left join anmol_location_master t on t.rch_code = alm.parent_rch_code and  t."type" = ''T''
	left join anmol_location_master d on t.parent_rch_code =  d.rch_code and d.type=''D''
	left join anmol_location_master S on d.parent_rch_code =  S.rch_code and s.type=''S''
	left join anmol_location_master db on db.parent_rch_code =  t.rch_code and  db.type=''HB''
	where  alm."type" =''F''
)
, counts as(
	select
	alm.health_facility_code,
	(sum(coalesce (lwa.total_members ,0))*21)/1000 as estimated_mother,
	(sum(coalesce(lwa.total_members,0))*19)/1000 as estimated_infant,
	sum(coalesce(lwa.r11_eligible_couple ,0)) estimated_ec,
	sum(coalesce (lwa.total_members ,0)) as population
	from 
	anmol_location alm
	left join location_master lm on lm.rch_code = cast(alm.health_facility_code as bigint) and lm."type" = ''P''
	left join location_hierchy_closer_det lhcd on lhcd.parent_id = lm.id
	left join location_wise_analytics lwa on lwa.loc_id = lhcd.child_id
	where alm.state_code = ''24'' 
	group by  lm.english_name,health_facility_code
)
,total_row  as (
	select cast(''Total'' as varchar) "State_code",
	cast(null as int) as "Yr",
	cast('''' as varchar) "HealthFacility_Code",
	cast('''' as varchar)  "HealthFacility_Name",
	sum(coalesce(estimated_mother,0)) "Estimated_Mother",
	sum(coalesce(estimated_infant , 0)) "Estimated_Infant",
	cast('''' as text) as "Created_Date",
	cast('''' as text) "Financial_Year",
	sum(coalesce(estimated_ec,0)) "Estimated_EC",
	cast('''' as varchar) "health_block_code" ,
	cast('''' as varchar) "HealthBlock_Name"
	from 
	counts
)
,det as (
	select alm.state_code "State_code",
	2019 as "Yr",
	alm.health_facility_code "HealthFacility_Code",
	alm.facility_name  "HealthFacility_Name",
	c.estimated_mother "Estimated_Mother",
	c.estimated_infant "Estimated_Infant",
	to_char(now(), ''yyyy-MM-dd'') as "Created_Date",
	cast(''2020-21'' as text) "Financial_Year",
	c.estimated_ec "Estimated_EC",
	alm.district_code "health_block_code" ,
	alm.block_name "HealthBlock_Name"
	from 
	anmol_location alm inner join counts c on c.health_facility_code = alm.health_facility_code 
	#limit_offset# 
)
select * from det
union all
select * from total_row
;',true,'ACTIVE','cd4df9a6-f781-436c-a673-5212394e740b'),
	 (152,58981,'2019-01-22 14:36:37.635',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Infant Deaths Report(Immunization Services Provided to Children with Date of Birth)
with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
child_det as (
	select m.unique_health_id, m.family_id, m.dob, c.tracking_location_id as loc_id,
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	c.death_date
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.member_id is not null
	and c.death_date is not null
    and c.is_valid_for_tracking_report = true
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
child_det.unique_health_id as "Child ID",
child_det.family_id as "Family ID",
child_det.name as "Name",
child_det.dob as "Date of Birth",
child_det.death_date as "Death Date",
loc_det.aoi as "Location",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','45f6b84c-7380-4460-8c14-98ad980d99c4');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1201,409,'2019-07-10 23:14:01.705',1,'2021-01-13 20:22:06.427965',NULL,'select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as year from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by year desc;',true,'ACTIVE','97c796da-422f-4c52-981d-b2d3aedeb0de'),
	 (1181,409,'2019-07-02 20:39:51.868',1,'2021-01-13 20:22:06.427965','to_month_year','select to_char(cast(''#to_month_year#'' as date),''DD/MM/YYYY'') as to_month_year',true,'ACTIVE','c471f93e-0cdb-44cd-b5e9-06b47cebc65f'),
	 (143,58981,'2019-01-21 14:21:01.901',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','4f0ac581-8be6-4793-9966-99106faefd68'),
	 (471,1,'2019-02-14 13:21:57.62',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Children with No Birth defects observed(State Level Monthly Compilation Sheet for Screening of Birth Defects)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.delivery_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.delivery_location_id and m.id = c.member_id 
	and l.parent_id = #location_id#
	and c.has_neural_tube_def = false 
	and c.has_downs_syndrome = false 
	and c.has_cleft_lip = false
	and c.has_talipes = false 
	and c.has_develop_mental_dysplasia_of_hip = false 
	and c.has_congenital_cataract = false 
	and c.has_congenital_deafness = false 
	and c.has_congenital_heart_disease = false 
	and c.has_retinopathy_of_prematurity = false
	and c.has_any_other_birth_defect = false
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end), '' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','0436288e-33e5-46dd-8533-cfebc7cac5b2'),
	 (587,1,'2019-02-18 13:36:15.544',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
child_det as (
	select m.id, c.native_loc_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.native_loc_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.fully_immunization_in_number_of_month <= 12
		group by m.id, c.native_loc_id, c.dob, full_immunization_date
	having case when extract(month from full_immunization_date) > 3 
	then concat(extract(year from full_immunization_date), ''-'', extract(year from full_immunization_date) + 1)
	else concat(extract(year from full_immunization_date) - 1, ''-'', extract(year from full_immunization_date)) end = 
		case when #financial_year# is null then 
			case when extract(month from current_date) > 3 
			then concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)
			else concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end
		else ''#financial_year#'' end
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','74528c2a-ae89-4971-89eb-8b6423a2a88b'),
	 (158,58981,'2019-01-22 19:03:38.07',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,loggedInUserId,from_month,location_id','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#)
,dates as (
	select to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date
	,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date
)
, member_det as (
	select r.member_id, r.native_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, dates d
	where r.member_id = m.id and r.native_location_id  = l.child_id 
	and l.parent_id = #location_id#
	and r.reg_service_date between d.from_date and d.to_date
	and r.cur_severe_anemia = true
	--and r.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')
	--and r.preg_reg_state in (''PENDING'',''PREGNANT'')
	order by r.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','77878b31-02ed-4ff5-be55-2d4f8a58d7a7'),
	 (1199,66522,'2019-07-09 20:04:47.318',1,'2021-01-13 20:22:06.427965','to_month,location,from_month','with loc_det as (
select lm.id as loc_id ,lm.english_name as name,lm.location_code from location_hierchy_closer_det lh,location_master lm
where lm.id = lh.child_id and lh.parent_id = #location# and lh.depth= 1
),dates as (
select to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM-DD-YYYY'') as from_date 
,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM-DD-YYYY'') as to_date
)
,register as (
	select parent_id, sum(chiranjivi) count 
	from rch_delivery_date_base_location_wise_data_point rwmm 
	inner join location_hierchy_closer_det lhcd on lhcd.child_id = rwmm.location_id 
	inner join dates on true    
	where 
        lhcd.parent_id in (select loc_id from loc_det)
        and rwmm.location_id = lhcd.child_id
	and month_year between dates.from_date and dates.to_date 
	group by lhcd.parent_id 
),
health_infa as (
	select count(1) as healthCount,location.parent_id 
	from health_infrastructure_details health, location_hierchy_closer_det location
	where location.child_id =  health.location_id 
	and is_chiranjeevi_scheme = true
	and location.parent_id in (select loc_id from loc_det)
	group by location.parent_id
),report_det as (
select 
	high.count,loc_det.name, health.parent_id,health.healthCount,loc_det.loc_id,loc_det.location_code
from loc_det 
left join register high on loc_det.loc_id = high.parent_id
left join health_infa health on health.parent_id = high.parent_id
order by loc_det.name
)
select ROW_NUMBER () OVER (ORDER BY report_det.loc_id) as "S.N.",
location_code as "District Code",
name as "Location",
case when healthCount is null then 0 else healthCount end as "Number of Enrolled Doctors",
count as "Number of Deliveries"
from report_det
union all
select null, null, ''Total'', sum(healthCount), sum(count)
from report_det',true,'ACTIVE','31bd1190-6b24-4be3-9388-fa3f4a5fd14d'),
	 (1000,60512,'2019-04-16 11:13:35.676',1,'2021-01-13 20:22:06.427965','depth_flag,limit_offset,loggedInUserId,location_id','with prefered_language as (
select 	case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end as is_enlish
from um_user where id = #loggedInUserId# 
), health_infra_ids as(
	select id,name,location_id,address from health_infrastructure_details where location_id in
	(select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth <= (case when #depth_flag# = -1 then 0 else 8 end))
	and type = 1063 and is_no_reporting_unit is not true
	#limit_offset#
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
health_infra_ids.name as "Name",
case when prefered_language.is_enlish then get_location_hierarchy_language_wise(health_infra_ids.location_id, ''EN'')
				else get_location_hierarchy(health_infra_ids.location_id) end as "Location",
case when health_infra_ids.address is not null and health_infra_ids.address !='''' and health_infra_ids.address !=''null'' then health_infra_ids.address else ''N.A'' end as "Address"
from health_infra_ids
inner join prefered_language on true',true,'ACTIVE','4d593128-4833-4791-8825-7f4ade66320e'),
	 (67,1027,'2018-08-30 11:26:16.885',1,'2021-01-13 20:22:06.427965','from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id','with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') as to_date,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
CAST(#loggedInUserId# AS INTEGER) as logged_in_user_id
),location_wise_data as(
select lcd.parent_id as loc_id, sum(anc_reg) as anc_reg, coalesce(sum(abortion),0) as abortion,coalesce(sum(mtp),0) as mtp,
coalesce(sum(no_of_inst_del),0) as no_of_inst_del, coalesce(sum(no_of_home_del),0) as no_of_home_del,
coalesce(sum(no_of_maternal_death),0) as no_of_maternal_death,
coalesce(sum(no_of_missing_del),0) as no_of_missing_del,
coalesce(sum(no_of_not_missing_del),0) as no_of_not_missing_del
from rch_lmp_base_location_wise_data_point, vw_location_closure_det_by_parent_location_depth lcd, parameters p
where rch_lmp_base_location_wise_data_point.location_id = lcd.child_id and lcd.location_id = p.location_id
and lcd.depth=1 and month_year between p.from_date and p.to_date
and (p.demographic_group=''null'' or lcd.child_demographic_type in ( select distinct demographic_type from location_demographic_type_master where
demographic_group = p.demographic_group))
group by lcd.parent_id
), final_data as (
select
lhcd.child_id as hidden_location_id,
p.demographic_group as hidden_demographic_location_id,
pl.location_name as "Location Name",
coalesce(anc_reg,0) as "Number of PW registered with LMP",
  coalesce(abortion,0) as "Number of abortion registered with LMP",
  round(coalesce(case when anc_reg = 0 then 0 else abortion*100.0/anc_reg end,0),2)  as "percent_col_Number of abortion registered with LMP",
  coalesce(mtp,0) as "Number of MTP registered with LMP",
  round(coalesce(case when anc_reg = 0 then 0 else mtp*100.0/anc_reg end,0),2)  as "percent_col_Number of MTP registered with LMP",
  coalesce(no_of_inst_del,0)  as "Number of institutional delivery registered with LMP",
  round(coalesce(case when anc_reg = 0 then 0 else no_of_inst_del*100.0/anc_reg end,0),2)  as "percent_col_Number of institutional delivery registered with LMP",
  coalesce(no_of_home_del,0) as "Number of Home delivery and who registered with LMP",
  round(coalesce(case when anc_reg = 0 then 0 else no_of_home_del*100.0/anc_reg end,0),2)  as "percent_col_Number of Home delivery and who registered with LMP",
  coalesce(no_of_maternal_death,0) as "Number of maternal death who registered with LMP",
  round(coalesce(case when anc_reg = 0 then 0 else no_of_maternal_death*100.0/anc_reg end,0),2)  as "percent_col_Number of maternal death who registered with LMP",
  coalesce(no_of_missing_del,0) as "Edd Lapsed",
  round(coalesce(case when anc_reg = 0 then 0 else no_of_missing_del*100.0/anc_reg end,0),2)  as "percent_col_Edd Lapsed",
  coalesce(no_of_not_missing_del,0) as "Edd not lapsed",
  round(coalesce(case when anc_reg = 0 then 0 else no_of_not_missing_del*100.0/anc_reg end,0),2)  as "percent_col_Edd not lapsed"
from location_hierchy_closer_det lhcd 
cross join parameters p 
inner join vw_location_detail_with_user_prefer_language pl on pl.location_id = lhcd.child_id and pl.user_id = p.logged_in_user_id
left join location_wise_data lwd on lwd.loc_id=lhcd.child_id
where lhcd.parent_id= p.location_id and lhcd.depth = 1
and 
(p.demographic_group=''null'' or 
lhcd.child_loc_demographic_type in ( select distinct demographic_type from location_demographic_type_master 
where  demographic_group = p.demographic_group))
order by "Location Name"
)
select row_number() over() as "Sr no.",* from final_data
union all
select
null,
(select location_id from parameters),
(select demographic_group as demographic_location_id from parameters),
  ''<b>Total<b>'',
  coalesce(sum(anc_reg),0),
  coalesce(sum(abortion),0),
round(case when sum(anc_reg) = 0 then 0 else sum(abortion)*100.0/sum(anc_reg) end,2),
  coalesce(sum(mtp),0),
round(case when sum(anc_reg) = 0 then 0 else sum(mtp)*100.0/sum(anc_reg) end,2),
  coalesce(sum(no_of_inst_del),0),
round(case when sum(anc_reg) = 0 then 0 else sum(no_of_inst_del)*100.0/sum(anc_reg) end,2),
  coalesce(sum(no_of_home_del),0),
round(case when sum(anc_reg) = 0 then 0 else sum(no_of_home_del)*100.0/sum(anc_reg) end,2),
  coalesce(sum(no_of_maternal_death),0),
round(case when sum(anc_reg) = 0 then 0 else sum(no_of_maternal_death)*100.0/sum(anc_reg) end,2),
  coalesce(sum(no_of_missing_del),0),
round(case when sum(anc_reg) = 0 then 0 else sum(no_of_missing_del)*100.0/sum(anc_reg) end,2),
coalesce(sum(no_of_not_missing_del),0),
round(case when sum(anc_reg) = 0 then 0 else sum(no_of_not_missing_del)*100.0/sum(anc_reg) end,2)
from location_wise_data;',true,'ACTIVE','1aa46bc6-a964-4385-a08a-730fab9da823'),
	 (960,60512,'2019-04-10 17:53:27.897',1,'2021-01-13 20:22:06.427965','depth_flag,limit_offset,loggedInUserId,location_id','with prefered_language as (
select 	case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end as is_enlish
from um_user where id = #loggedInUserId# 
), health_infra_ids as(
	select id,name,location_id,address from health_infrastructure_details where location_id in
	(select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth <= (case when #depth_flag# = -1 then 0 else 8 end))
	and type = 1012
	#limit_offset#
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
health_infra_ids.name as "Name",
case when prefered_language.is_enlish then get_location_hierarchy_language_wise(health_infra_ids.location_id, ''EN'')
				else get_location_hierarchy(health_infra_ids.location_id) end as "Location",
case when health_infra_ids.address is not null and health_infra_ids.address !='''' and health_infra_ids.address !=''null'' then health_infra_ids.address else ''N.A'' end as "Address"
from health_infra_ids
inner join prefered_language on true',true,'ACTIVE','918ecb6c-a5eb-4913-bb08-3a67cb257069');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1309,66522,'2019-08-14 15:20:59.306',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','d7cf1b92-3538-4e7d-b66a-a0b0ce269f33'),
	 (821,58981,'2019-03-06 18:04:06.559',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''MM/YYYY'') as from_month_year',true,'ACTIVE','546ec7cc-e6bc-4a9d-a38b-2f9d0070e8f2'),
	 (1164,63746,'2019-05-28 18:54:10.362',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','cf261710-12b5-472b-be29-67bf960a94d7'),
	 (800,58981,'2019-03-06 15:50:42.582',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','06f03d99-7892-457d-9a44-6d336e1a8626'),
	 (628,409,'2019-02-19 12:51:15.686',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id','--Number of maternal death who registered with LMP(Delivery monitoring of Registered LMP)
with parameters as(
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') + interval ''1 day'' as to_date,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
 member_det as (
	select r.member_id, r.native_location_id as loc_id,
	r.unique_health_id, r.family_id, 
	r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.death_date,''DD/MM/YYYY'') as dod
	,r.maternal_death_type as death_type
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, parameters p		
	where r.native_location_id  = l.child_id
	and l.parent_id = p.location_id
	and r.maternal_detah = true
	and r.lmp_month_year between p.from_date and p.to_date
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
member_det.dod as "Date of Death",
member_det.death_type as "Death Type",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','fbfc86e4-3b8b-4d83-bdb9-0cd226a698bc'),
	 (160,58981,'2019-01-22 19:08:40.015',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,loggedInUserId,from_month,location_id','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#)
,dates as (
	select to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date
	,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date
)
, member_det as (
	select r.member_id, r.native_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, rch_pregnancy_registration_det p, dates d
	where r.member_id = m.id and r.native_location_id  = l.child_id and m.cur_preg_reg_det_id = p.id
	and l.parent_id = #location_id#
	and r.reg_service_date  between d.from_date and d.to_date
	and r.cur_blood_pressure_issue = true
	--and r.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')
	--and r.preg_reg_state in (''PENDING'',''PREGNANT'')
	order by p.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','80e70912-ba10-4839-9cfb-c85514b40e44'),
	 (1144,63746,'2019-05-28 15:27:24.547',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','d8a57125-cd41-464f-9ecd-b4ebcdcd1936'),
	 (164,58981,'2019-01-22 19:18:19.337',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,loggedInUserId,from_month,location_id','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#)
,dates as (
	select to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date
	,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date
)
, member_det as (
	select r.member_id, r.native_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, rch_pregnancy_registration_det p, dates d
	where r.member_id = m.id and r.native_location_id = l.child_id and m.cur_preg_reg_det_id = p.id
	and l.parent_id = #location_id#
	and r.reg_service_date  between d.from_date and d.to_date
	and r.cur_malaria_issue = true
	--and r.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')
	--and r.preg_reg_state in (''PENDING'',''PREGNANT'')
	order by p.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','89e9c439-e1b9-432c-9db7-35fd0565fc8e'),
	 (176,58981,'2019-01-22 19:29:53.406',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,loggedInUserId,from_month,location_id','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#)
,dates as (
	select to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date
	,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date
)
, member_det as (
	select r.member_id, r.native_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, rch_pregnancy_registration_det p, dates d
	where r.member_id = m.id and r.native_location_id  = l.child_id and m.cur_preg_reg_det_id = p.id
	and l.parent_id = #location_id#
	and r.reg_service_date  between d.from_date and d.to_date
	and r.cur_less_than_18_month_interval = true
	--and r.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')
	--and r.preg_reg_state in (''PENDING'',''PREGNANT'')
	order by p.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','5f868a6b-e7c4-4698-8744-be7d7f595630'),
	 (957,60512,'2019-04-10 17:51:42.008',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','a25fb2fe-b6ee-4247-9330-fd016907835d');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1387,60512,'2019-08-26 11:40:01.849',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
	select
	to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date ,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end, ''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_date 
),call_master_ids as (
	select id,
        created_on,
        created_by,
        get_location_hierarchy(location_id) as Location_hierarchy
        from gvk_manage_call_master
	inner join dates on gvk_manage_call_master.created_on between dates.from_date and dates.to_date
	where gvk_manage_call_master.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and gvk_manage_call_master.call_response not in (''com.argusoft.imtecho.gvk.call.cant-talk'',
	''com.argusoft.imtecho.gvk.call.no-number-available'',
	''com.argusoft.imtecho.gvk.call.wrong-mobile-number'',
        ''com.argusoft.imtecho.gvk.call.phone-switched-off'',
        ''com.argusoft.imtecho.gvk.call.unresponsive'',
        ''com.argusoft.imtecho.gvk.call.not-reachable'',
         ''com.argusoft.imtecho.gvk.call.processed'',
''com.argusoft.imtecho.gvk.call.processed'',
''com.argusoft.imtecho.gvk.call.processing''
	)
	and gvk_manage_call_master.call_type = ''IMMUN_VERI''
),response_ids as (
	select gvk_immunisation_verification_response.id, call_master_ids.created_on,call_master_ids.created_by,Location_hierarchy
	from call_master_ids
	inner join gvk_immunisation_verification_response on call_master_ids.id = gvk_immunisation_verification_response.manage_call_master_id
	order by gvk_immunisation_verification_response.id desc
	#limit_offset#
),response as (
	select 
response_ids.created_on,
response_ids.created_by,
	gvk_immunisation_verification_response.id as gvk_immunisation_id,
	gvk_immunisation_verification_response.member_id,
    Location_hierarchy,
	case when gvk_immunisation_verification_response.healthworker_visited = ''true'' then ''Yes'' 
		when gvk_immunisation_verification_response.healthworker_visited = ''false'' then ''No'' 
		else ''-'' end as healthworker_visited,
	case when gvk_immunisation_verification_response.asked_child_vaccination = ''true'' then ''Yes'' 
		when gvk_immunisation_verification_response.asked_child_vaccination = ''false'' then ''No'' 
		else ''-'' end as asked_child_vaccination,
	case when gvk_immunisation_verification_response.date_asked_to_come is not null then to_char(gvk_immunisation_verification_response.date_asked_to_come,''MM/DD/YYYY'')
		else ''-'' end as date_asked_to_come
	from response_ids
	inner join gvk_immunisation_verification_response on response_ids.id = gvk_immunisation_verification_response.id
),member_location_area_ids as (
	select response.gvk_immunisation_id,response.member_id,imt_family.location_id,imt_family.area_id
	from response
	inner join imt_member on imt_member.id = response.member_id
	inner join imt_family on imt_family.family_id = imt_member.family_id
),asha as (
	select member_location_area_ids.gvk_immunisation_id,asha.id
	from member_location_area_ids
	inner join um_user_location asha_location on member_location_area_ids.area_id = asha_location.loc_id and asha_location.state = ''ACTIVE''
	inner join um_user asha on asha_location.user_id = asha.id and asha.role_id = 24 and asha.state = ''ACTIVE''
),asha_unique as (
	select asha.gvk_immunisation_id,max(asha.id)
	from asha
	group by asha.gvk_immunisation_id
),fhw as (
	select member_location_area_ids.gvk_immunisation_id,fhw.id
	from member_location_area_ids
	inner join um_user_location fhw_location on member_location_area_ids.location_id = fhw_location.loc_id and fhw_location.state = ''ACTIVE''
	inner join um_user fhw on fhw_location.user_id = fhw.id and fhw.role_id = 30 and fhw.state = ''ACTIVE''
),fhw_unique as (
	select fhw.gvk_immunisation_id,max(fhw.id)
	from fhw
	group by fhw.gvk_immunisation_id
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Member Name",
response.Location_hierarchy as "Location",
to_char(response.created_on,''DD-MM-YYYY HH:MI PM'') as  "Call Date",
concat(fhw_user.first_name,'' '',fhw_user.middle_name,'' '',fhw_user.last_name) as "FHW Name",
concat(asha_user.first_name,'' '',asha_user.middle_name,'' '',asha_user.last_name) as "ASHA Name",
concat(um.first_name, '' '', um.last_name) as "RO Details",  
response.healthworker_visited as "Did Health Worker Visit Child For Vaccination",
response.asked_child_vaccination as "Did Health Worker request child to visit hospital for vaccination",
response.date_asked_to_come as "Child Visit Scheduled Date"
from response
inner join imt_member on response.member_id = imt_member.id
inner join imt_family on imt_family.family_id = imt_member.family_id
left join asha_unique on response.gvk_immunisation_id = asha_unique.gvk_immunisation_id
left join fhw_unique on response.gvk_immunisation_id = fhw_unique.gvk_immunisation_id
left join um_user asha_user on asha_unique.max = asha_user.id
left join um_user fhw_user on fhw_unique.max = fhw_user.id
left join um_user um on response.created_by = um.id',true,'ACTIVE','456f1d52-9987-4b37-bec8-af2bb43e3b88'),
	 (307,1,'2019-02-12 15:36:08.373',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,loggedInUserId,from_month,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#
),dates as (
select to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM-DD-YYYY'') from_date
,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM-DD-YYYY'') to_date
),child_det as (
	select m.id, c.delivery_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(c.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m,dates
	where l.child_id = c.delivery_location_id and m.id = c.mother_id
	and l.parent_id = #location_id#
	and c.day_of_delivery is not null and c.member_id is null
	and c.dob_month_year between dates.from_date and dates.to_date
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Mother Details",
child_det.dob as "Date of Delivery",
--case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','3a326be7-1623-4e31-abb2-7d513eebed17'),
	 (178,58981,'2019-01-22 19:31:24.128',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,loggedInUserId,from_month,location_id','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#)
,dates as (
	select to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date
	,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date
)
, member_det as (
	select r.member_id, r.native_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, rch_pregnancy_registration_det p, dates d
	where r.member_id = m.id and r.native_location_id  = l.child_id and m.cur_preg_reg_det_id = p.id
	and l.parent_id = #location_id#
	and r.reg_service_date  between d.from_date and d.to_date
	and r.low_height = true
	--and r.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')
	--and r.preg_reg_state in (''PENDING'',''PREGNANT'')
	order by p.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','a8830ac8-26c7-4d40-b02a-4a5fb903905d'),
	 (1337,60512,'2019-08-19 17:10:49.137',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','76e257a5-a2de-45d1-92f9-8525db2565d8'),
	 (179,58981,'2019-01-22 19:32:40.862',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','7abbb45c-09ff-4fcb-9e87-92277d48d287'),
	 (755,58981,'2019-03-01 19:43:55.722',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','ddd92b66-35bf-4865-b657-2a9dde1057d2'),
	 (1527,74841,'2020-03-04 15:19:35.758',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','faa9fa3a-ded2-4fe6-b23d-d53f11a0a680'),
	 (1528,74841,'2020-03-04 15:19:35.78',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','c7a28f66-a5c2-4275-925f-6b3881bc7e2d'),
	 (180,58981,'2019-01-22 19:32:40.872',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,loggedInUserId,from_month,location_id','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#)
,dates as (
	select to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date
	,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date
)
, member_det as (
	select r.member_id, r.native_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, rch_pregnancy_registration_det p, dates d
	where r.member_id = m.id and r.native_location_id  = l.child_id and m.cur_preg_reg_det_id = p.id
	and l.parent_id = #location_id#
	and r.reg_service_date  between d.from_date and d.to_date
	and r.cur_low_weight = true
	--and r.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')
	--and r.preg_reg_state in (''PENDING'',''PREGNANT'')
	order by p.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','794582cc-0a4b-4659-9e33-de394f72c43e'),
	 (673,409,'2019-02-20 11:55:34.824',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','ea51f41f-f480-4180-9a7f-c492be86884c');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1320,66522,'2019-08-19 13:46:02.791',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','8351dff8-7256-41ec-be0c-f473a1abb7ab'),
	 (1322,66522,'2019-08-19 13:46:02.799',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','e228ed1b-4741-4483-ad51-3b773d5e521b'),
	 (1330,60512,'2019-08-19 16:52:34.737',1,'2021-01-13 20:22:06.427965','from_month','select to_char(cast(''#from_month#'' as date),''MM/YYYY'') as from_month',true,'ACTIVE','69b2f96f-bbb8-42ee-bddf-d16ecd14b35c'),
	 (1331,60512,'2019-08-19 16:52:34.74',1,'2021-01-13 20:22:06.427965','to_month','select to_char(cast(''#to_month#'' as date),''MM/YYYY'') as to_month',true,'ACTIVE','4f33b9c1-9f8f-4fa7-b71e-aff477f04114'),
	 (1336,60512,'2019-08-19 17:08:40.377',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,demographic_location_id,from_month,location_id','with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
	to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end, ''MM-DD-YYYY'') as from_date ,
	to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end, ''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date 
),member_ids as (
select * from (
select 
distinct on(rch_anc_master.pregnancy_reg_det_id) pregnancy_reg_det_id
,rch_anc_master.member_id
,rch_anc_master.haemoglobin_count as haemoglobin_count
,rch_anc_master.service_date as reg_service_date
,rch_anc_master.location_id as location_id
from location_hierchy_closer_det 
inner join rch_anc_master on location_hierchy_closer_det.child_id = rch_anc_master.location_id
inner join parameters on rch_anc_master.service_date between parameters.from_date and parameters.to_date
where rch_anc_master.haemoglobin_count is not null
and location_hierchy_closer_det.parent_id = parameters.location_id
and (parameters.demographic_group=''null'' or location_hierchy_closer_det.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = parameters.demographic_group))
order by rch_anc_master.pregnancy_reg_det_id,rch_anc_master.id desc) as t
where t.haemoglobin_count between  10 and 10.999
#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No", 
imt_member.unique_health_id as "Unique Health ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Member Name",
get_location_hierarchy(member_ids.location_id) as "Location",
to_char(member_ids.reg_service_date,''DD/MM/YYYY'') as "ANC Reg. Date",
member_ids.haemoglobin_count as "Haemoglobin"
from member_ids
inner join imt_member on member_ids.member_id = imt_member.id',true,'ACTIVE','39326e91-e187-41f2-8d03-9b1d157a5f41'),
	 (1143,63746,'2019-05-28 15:27:24.544',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','ad49dd3e-7c47-41e2-b91f-66b61480494e'),
	 (1332,60512,'2019-08-19 16:52:34.751',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,demographic_location_id,from_month,location_id','with parameters as(
select CAST(#location_id# AS INTEGER) as location_id,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
	to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end, ''MM-DD-YYYY'') as from_date ,
	to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end, ''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_date 
),member_ids as (
	select rch_pregnancy_analytics_details.member_id,rch_pregnancy_analytics_details.reg_service_date
	from rch_pregnancy_analytics_details
	inner join parameters on rch_pregnancy_analytics_details.reg_service_date_month_year between parameters.from_date and parameters.to_date
	where rch_pregnancy_analytics_details.pregnancy_reg_location_id in (
select child_id from location_hierchy_closer_det , parameters p where parent_id = p.location_id
and (p.demographic_group=''null'' or location_hierchy_closer_det.child_loc_demographic_type in 
( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
)
	#limit_offset#
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Member Name",
get_location_hierarchy(imt_family.location_id) as "Location",
to_char(member_ids.reg_service_date,''MM/DD/YYYY'') as "ANC Reg. Date"
from member_ids
inner join imt_member on member_ids.member_id = imt_member.id
inner join imt_family on imt_member.family_id = imt_family.family_id',true,'ACTIVE','d1e37878-5311-45a2-8b77-477fbc602dc0'),
	 (1374,60512,'2019-08-21 12:29:07.519',1,'2021-01-13 20:22:06.427965','to_month,from_month,location_id','with dates as(
	select
	to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end, ''MM-DD-YYYY'') as from_month ,
	to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end, ''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_month 
),location_ids as(
	select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1
),counts as (
	select location_ids.child_id,
	sum(anc_reg) as anc_reg_count,
	sum(beneficiaries_with_aadhar_reg_no) as beneficiaries_with_aadhar_reg_no_count,
	sum(jsy_beneficiary) as jsy_beneficiary_count,
	sum(jsy_beneficiary_in_third_trimenster) as jsy_beneficiary_in_third_trimenster_count,
	sum(jsy_beneficiaries_with_aadhar_and_bank_no) as jsy_beneficiaries_with_aadhar_and_bank_no_count,
	sum(jsy_beneficiaries_with_aadhar_reg_no) as jsy_beneficiaries_with_aadhar_reg_no_count,
	sum(jsy_beneficiaries_with_bank_acc_but_no_aadhar_details) as jsy_beneficiaries_with_bank_acc_but_no_aadhar_details_count,
	sum(jsy_beneficiaries_with_no_aadhar_and_bank_details) as jsy_beneficiaries_with_no_aadhar_and_bank_details_count
	from location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id
	inner join rch_service_provided_during_year on location_hierchy_closer_det.child_id = rch_service_provided_during_year.location_id
	inner join dates on rch_service_provided_during_year.month_year between dates.from_month and dates.to_month
	group by location_ids.child_id
),det as (
	select row_number() over() as sr_no,
	location_master.name as loc,
	location_master.id as hidden_location_id,
	coalesce(counts.anc_reg_count,0) as anc_reg_count,
	coalesce(counts.beneficiaries_with_aadhar_reg_no_count,0) as beneficiaries_with_aadhar_reg_no_count,
	coalesce(counts.jsy_beneficiary_count,0) as jsy_beneficiary_count,
	coalesce(counts.jsy_beneficiary_in_third_trimenster_count,0) as jsy_beneficiary_in_third_trimenster_count,
	coalesce(counts.jsy_beneficiaries_with_aadhar_and_bank_no_count,0) as jsy_beneficiaries_with_aadhar_and_bank_no_count,
	coalesce(counts.jsy_beneficiaries_with_aadhar_reg_no_count,0) as jsy_beneficiaries_with_aadhar_reg_no_count,
	coalesce(counts.jsy_beneficiaries_with_bank_acc_but_no_aadhar_details_count,0) as jsy_beneficiaries_with_bank_acc_but_no_aadhar_details_count,
	coalesce(counts.jsy_beneficiaries_with_no_aadhar_and_bank_details_count,0) as jsy_beneficiaries_with_no_aadhar_and_bank_details_count
	from location_ids
	left join counts on location_ids.child_id = counts.child_id
	inner join location_master on location_ids.child_id = location_master.id
)
select row_number() over() as "Sr. no",
det.loc as "Location",
det.hidden_location_id,
det.anc_reg_count as "No. of ANC Registered",
det.beneficiaries_with_aadhar_reg_no_count as "No. of ANC Reg. with Aadhar Reg.",
	case when (det.beneficiaries_with_aadhar_reg_no_count = 0 or det.beneficiaries_with_aadhar_reg_no_count is null) then 0 else 
	round(det.beneficiaries_with_aadhar_reg_no_count*100.0/det.anc_reg_count,2) end as "percent_col_No. of ANC Reg. with Aadhar Reg.",
det.jsy_beneficiary_count as "No. of JSY Beneficiaries out of ANC Reg.",
det.jsy_beneficiary_in_third_trimenster_count as "No. of JSY Beneficiaries in third trimester",
det.jsy_beneficiaries_with_aadhar_and_bank_no_count as "No. of JSY Beneficiaries with Aadhar Reg. and Bank A/c No.",
	case when (det.jsy_beneficiaries_with_aadhar_and_bank_no_count = 0 or det.jsy_beneficiaries_with_aadhar_and_bank_no_count is null) then 0 else 
	round(det.jsy_beneficiaries_with_aadhar_and_bank_no_count*100.0/det.anc_reg_count,2) end as "percent_col_No. of JSY Beneficiaries with Aadhar Reg. and Bank A/c No.",
det.jsy_beneficiaries_with_aadhar_reg_no_count as "No. of JSY Beneficiaries with Aadhar Reg. No but no bank details",
	case when (det.jsy_beneficiaries_with_aadhar_reg_no_count = 0 or det.jsy_beneficiaries_with_aadhar_reg_no_count is null) then 0 else 
	round(det.jsy_beneficiaries_with_aadhar_reg_no_count*100.0/det.anc_reg_count,2) end as "percent_col_No. of JSY Beneficiaries with Aadhar Reg. No but no bank details",
det.jsy_beneficiaries_with_bank_acc_but_no_aadhar_details_count as "No. of JSY Beneficiaries with Bank A/c No. but no Aadhar Details",
	case when (det.jsy_beneficiaries_with_bank_acc_but_no_aadhar_details_count = 0 or det.jsy_beneficiaries_with_bank_acc_but_no_aadhar_details_count is null) then 0 else 
	round(det.jsy_beneficiaries_with_bank_acc_but_no_aadhar_details_count*100.0/det.anc_reg_count,2) end as "percent_col_No. of JSY Beneficiaries with Bank A/c No. but no Aadhar Details",
det.jsy_beneficiaries_with_no_aadhar_and_bank_details_count as "No. of JSY Beneficiaries with No Aadhar Reg. NOR Bank A/c No.",
	case when (det.jsy_beneficiaries_with_no_aadhar_and_bank_details_count = 0 or det.jsy_beneficiaries_with_no_aadhar_and_bank_details_count is null) then 0 else 
	round(det.jsy_beneficiaries_with_no_aadhar_and_bank_details_count*100.0/det.anc_reg_count,2) end as "percent_col_No. of JSY Beneficiaries with No Aadhar Reg. NOR Bank A/c No."
from det
union all
select null,
''<b>Total<b>'',
#location_id#,
sum(det.anc_reg_count),
sum(det.beneficiaries_with_aadhar_reg_no_count),
	case when (sum(det.beneficiaries_with_aadhar_reg_no_count) = 0 or sum(det.beneficiaries_with_aadhar_reg_no_count) is null) then 0 else 
	round(sum(det.beneficiaries_with_aadhar_reg_no_count)*100.0/sum(det.anc_reg_count),2) end,
sum(det.jsy_beneficiary_count),
sum(det.jsy_beneficiary_in_third_trimenster_count),
sum(det.jsy_beneficiaries_with_aadhar_and_bank_no_count),
	case when (sum(det.jsy_beneficiaries_with_aadhar_and_bank_no_count) = 0 or sum(det.jsy_beneficiaries_with_aadhar_and_bank_no_count) is null) then 0 else 
	round(sum(det.jsy_beneficiaries_with_aadhar_and_bank_no_count)*100.0/sum(det.anc_reg_count),2) end,
sum(det.jsy_beneficiaries_with_aadhar_reg_no_count),
	case when (sum(det.jsy_beneficiaries_with_aadhar_reg_no_count) = 0 or sum(det.jsy_beneficiaries_with_aadhar_reg_no_count) is null) then 0 else 
	round(sum(det.jsy_beneficiaries_with_aadhar_reg_no_count)*100.0/sum(det.anc_reg_count),2) end,
sum(det.jsy_beneficiaries_with_bank_acc_but_no_aadhar_details_count),
	case when (sum(det.jsy_beneficiaries_with_bank_acc_but_no_aadhar_details_count) = 0 or sum(det.jsy_beneficiaries_with_bank_acc_but_no_aadhar_details_count) is null) then 0 else 
	round(sum(det.jsy_beneficiaries_with_bank_acc_but_no_aadhar_details_count)*100.0/sum(det.anc_reg_count),2) end,
sum(det.jsy_beneficiaries_with_no_aadhar_and_bank_details_count),
	case when (sum(det.jsy_beneficiaries_with_no_aadhar_and_bank_details_count) = 0 or sum(det.jsy_beneficiaries_with_no_aadhar_and_bank_details_count) is null) then 0 else 
	round(sum(det.jsy_beneficiaries_with_no_aadhar_and_bank_details_count)*100.0/sum(det.anc_reg_count),2) end
from det;',true,'ACTIVE','8eb5bbf4-8ce5-4056-8537-beec3e3d72a2'),
	 (823,58981,'2019-03-06 18:04:06.57',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Total Pregnant women regd. With 1 live children (Mothers Registered With Child Birth Order)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 member_det as (
	select r.member_id, r.native_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, imt_family f, rch_pregnancy_registration_det p
	where r.member_id = m.id and r.native_location_id  = l.child_id and r.pregnancy_reg_id = p.id and m.family_id = f.family_id
	and registered_with_no_of_child = 1
	and l.parent_id = #location_id#
	and r.reg_service_date between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 month'' - interval ''1 milliseconds''
	order by p.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','e974471f-b345-4e31-acd8-034a76a5e857'),
	 (798,58981,'2019-03-06 15:49:15.525',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','6d7072fa-44d8-4df8-b8f9-0ad9fc473caf');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (816,58981,'2019-03-06 17:58:39.422',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','0ae1928c-d5ef-40c8-85ea-8e282c59d585'),
	 (819,58981,'2019-03-06 17:58:39.444',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Total Pregnant Women Regd. With 0 Child (Mothers Registered With Child Birth Order)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 member_det as (
	select r.member_id, r.native_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, imt_family f, rch_pregnancy_registration_det p
	where r.member_id = m.id and r.native_location_id  = l.child_id and r.pregnancy_reg_id = p.id and m.family_id = f.family_id
	and (registered_with_no_of_child = 0 or registered_with_no_of_child is null)
	and l.parent_id = #location_id#
	and r.reg_service_date between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date)  + interval ''1 month'' - interval ''1 milliseconds''
	order by p.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','c2688772-bb61-448c-bacd-b24b83aa710b'),
	 (1151,63746,'2019-05-28 18:33:14.055',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','d903c868-427b-4e6e-afc9-6480d78c74f8'),
	 (799,58981,'2019-03-06 15:49:15.542',1,'2021-01-13 20:22:06.427965','limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id','--4 PNC (Maternal Health Services provided to the mother registered during the year)
with parameters as(
select CAST(#location_id# AS INTEGER) as location_id,
CAST(''#financial_year#'' AS TEXT) as financial_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
 member_det as (
	select r.member_id, r.tracking_location_id as loc_id, r.unique_health_id, r.family_id, 
	r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p
	where r.tracking_location_id  = l.child_id
	and pnc4 is not null
	and l.parent_id = p.location_id
	and r.reg_service_financial_year = p.financial_year
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
    and r.is_valid_for_tracking_report
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det)loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id  and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det)loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','823e9e41-ec59-49d9-833a-77baa759ba38'),
	 (1152,63746,'2019-05-28 18:33:14.058',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','76c200a1-f61c-42b1-8d7e-ade4ceea3226'),
	 (1323,66522,'2019-08-19 13:46:02.818',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with response as (
select case when is_pregnant is true then ''Yes''
       when is_pregnant is false then ''No''
       else ''N/A'' end as Pregnant,
       case when gvk_call_response_status = ''com.argusoft.imtecho.gvk.call.success'' then ''SUCCESS''
	    when gvk_call_response_status = ''com.argusoft.imtecho.gvk.call.number-belongs-to-anm-or-anm-husband'' then ''Number of ANM or husband''
       end as call_Status,
       resp.member_id,
       resp.created_by,
       resp.created_on,
       master.location_id,
       get_location_hierarchy(location_id) as Location_hierarchy,
       lvalue.value
from gvk_emri_pregnant_member_responce resp
inner join gvk_manage_call_master master on resp.manage_call_master_id = master.id
left join listvalue_field_value_detail lvalue on resp.verification_reason = lvalue.id

where resp.gvk_call_response_status not in (''com.argusoft.imtecho.gvk.call.cant-talk'',
	''com.argusoft.imtecho.gvk.call.no-number-available'',
	''com.argusoft.imtecho.gvk.call.wrong-mobile-number'',
        ''com.argusoft.imtecho.gvk.call.phone-switched-off'',
        ''com.argusoft.imtecho.gvk.call.unresponsive'',
        ''com.argusoft.imtecho.gvk.call.not-reachable'',
''com.argusoft.imtecho.gvk.call.processed'',
''com.argusoft.imtecho.gvk.call.processing''
)
and resp.created_on between case when ''#from_date#'' = ''null'' then now() else to_date(''#from_date#'',''MM-DD-YYYY'') end and to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 milliseconds''
and master.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
order by resp.id #limit_offset#
), 
--and resp.created_on between ''2019-08-19'' and ''2019-08-20'')


mo as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id
	inner join um_user uu on uu.id = uml.user_id  and 
	uu.role_id in (select id from um_role_master where code in (''mo_phc'',''mo_uphc''))
),
mo_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	mo group by location_id
),
mo_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from mo_unique mo
	inner join um_user um on um.id = mo.mo_id
),
asha as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id
    and uml.state = ''ACTIVE''
	inner join um_user uu on uu.id = uml.user_id  
    and uu.role_id in (select id from um_role_master where code = ''ASHA'') 
    where uu.state = ''ACTIVE''
),
asha_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	asha group by location_id
),
asha_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from asha_unique mo
	inner join um_user um on um.id = mo.mo_id
),
anm as (
	select master.location_id, uu.id as mo_id from response master
	inner join location_hierchy_closer_det hierchy on hierchy.child_id = master.location_id
	inner join um_user_location uml on uml.loc_id =  hierchy.parent_id
    and uml.state = ''ACTIVE''
	inner join um_user uu on uu.id = uml.user_id
    and uu.role_id in (select id from um_role_master where code = ''FHW'')
    where uu.state = ''ACTIVE''
),
anm_unique as (
	select location_id, max(mo_id) as mo_id
	from 
	anm group by location_id
),
anm_details as (
	select concat(um.first_name, '' '', um.last_name, ''('', um.contact_number,'')'') as name, mo.location_id from anm_unique mo
	inner join um_user um on um.id = mo.mo_id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
concat(im.first_name,'' '',im.last_name, ''('',im.unique_health_id ,'')'') as "Member Name",
Location_hierarchy as "Location",
to_char(resp.created_on,''DD-MM-YYYY HH:MI PM'') as  "Call Date",
resp.Pregnant as "Is Pregnant",
case when resp.value is null then ''     -     '' else resp.value end as "False Verification Reason",
resp.call_Status as "Call Status",
mo.name as "MO Details",
anm.name as "ANM Details",
asha.name as "ASHA Details"
,concat(um.first_name, '' '', um.last_name) as "RO Details"
from response resp
--left join contacts_display_date contacts on resp.id = contacts.id
left join mo_details mo on mo.location_id = resp.location_id
left join anm_details anm on anm.location_id = resp.location_id
left join asha_details asha on asha.location_id = resp.location_id
left join um_user um on resp.created_by = um.id
inner join imt_member im on im.id = resp.member_id',true,'ACTIVE','00e04d0c-e48f-4924-83b0-90a0b3638980'),
	 (739,58981,'2019-03-01 19:28:06.392',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','da4b1c1e-1196-4411-b577-bb5b9c1a881b'),
	 (1382,60512,'2019-08-22 17:20:56.67',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','304b6c67-b8cc-4ad9-b15b-f356d1748747'),
	 (1356,69973,'2019-08-20 17:47:54.232',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,location_id','with dates as(
select
to_date(case when ''#from_date#'' =''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when ''#to_date#'' =''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') as to_date
),
migration_master_det as (
select mm.* from (select * from migration_master, dates) mm 
inner join location_hierchy_closer_det depth_child on depth_child.child_id=mm.reported_location_id 
inner join location_hierchy_closer_det lhcd on (lhcd.child_id=depth_child.parent_id)
 where (case when (mm.from_date is not null and mm.to_date is not null) then
reported_on between mm.from_date and mm.to_date else 1=1 end) and mm.state not in (''DUPLICATE'',''REVERTED'')
and mm.type=''OUT'' and mm.state=''NOT_HAPPEN'' and lhcd.parent_id=#location_id# and lhcd.depth=1  #limit_offset#
),
final_Query as (
select concat(im.first_name,'' '', im.middle_name,'' '', im.last_name)|| case when im.unique_health_id is not null then '' (''|| im.unique_health_id||'')'' end
as member_name, concat(uu.first_name,'' '', uu.middle_name,'' '', uu.last_name)|| case when uu.contact_number is not null then '' (''|| uu.contact_number||'')'' end as reported_by,
to_char(mm.reported_on,''DD/MM/YYYY'') as reported_on, get_location_hierarchy(mm.location_migrated_from) as from_name, get_location_hierarchy(mm.location_migrated_to) as to_name
from migration_master_det mm
inner join um_user uu on uu.id=mm.reported_by
left join imt_member im on im.id=mm.member_id
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
fq.member_name as "Member Name",
fq.reported_by as "Reported By",
fq.reported_on as "Reported On",
fq.from_name as "Migrated From",
fq.to_name as "Migrated To"
from final_Query fq',true,'ACTIVE','a6a5b585-a36d-4058-ba85-ce77b9d473ec'),
	 (1340,60512,'2019-08-19 17:10:49.181',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,demographic_location_id,from_month,location_id','with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
	to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end, ''MM-DD-YYYY'') as from_date ,
	to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end, ''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date 
),member_ids as (
select * from (
select 
distinct on(rch_anc_master.pregnancy_reg_det_id) pregnancy_reg_det_id
,rch_anc_master.member_id
,rch_anc_master.haemoglobin_count as haemoglobin_count
,rch_anc_master.service_date as reg_service_date
,rch_anc_master.location_id as location_id
from location_hierchy_closer_det 
inner join rch_anc_master on location_hierchy_closer_det.child_id = rch_anc_master.location_id
inner join parameters on rch_anc_master.service_date between parameters.from_date and parameters.to_date
where rch_anc_master.haemoglobin_count is not null
and location_hierchy_closer_det.parent_id = parameters.location_id
and (parameters.demographic_group=''null'' or location_hierchy_closer_det.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = parameters.demographic_group))
order by rch_anc_master.pregnancy_reg_det_id,rch_anc_master.id desc) as t
where t.haemoglobin_count between  7 and 9.999
#limit_offset#
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No", 
imt_member.unique_health_id as "Unique Health ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Member Name",
get_location_hierarchy(member_ids.location_id) as "Location",
to_char(member_ids.reg_service_date,''DD/MM/YYYY'') as "ANC Reg. Date",
member_ids.haemoglobin_count as "Haemoglobin"
from member_ids
inner join imt_member on member_ids.member_id = imt_member.id',true,'ACTIVE','f184324d-1d37-484d-ae09-338c962ac8e0');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1403,66522,'2019-08-28 16:17:53.702',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','d310c88f-24ad-4f10-a279-ef93d546465b'),
	 (1390,60512,'2019-08-26 13:02:37.434',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','42c32564-1e3e-4b87-86e1-93b491e1e0a3'),
	 (1391,60512,'2019-08-26 13:02:37.439',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','4e79a547-fc8b-430e-8e9c-f1a489e33014'),
	 (1385,60512,'2019-08-26 11:40:01.815',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','05b4d24b-781b-4273-90d2-fcf7f1ddd77b'),
	 (1386,60512,'2019-08-26 11:40:01.817',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','6cdd5128-cff5-4038-9429-5d1aa39009b4'),
	 (1508,409,'2020-01-30 19:22:04.939',1,'2021-01-13 20:22:06.427965','reason_for_change,unique_health_id','with insert_change_log_detail as (
insert into support_change_request_log(member_id,change_type,other_detail,reason_for_change,created_on)
select id as member_id,''REMOVE_LAST_METHOD_OF_CONTRACEPTION'',null,(case when ''null'' = ''#reason_for_change#'' then null else  ''#reason_for_change#'' end ),created_on from imt_member 
where unique_health_id = ''#unique_health_id#'' and last_method_of_contraception is not null
returning id
),update_imt_member as (
update imt_member set last_method_of_contraception = null,modified_on = now() where  unique_health_id = ''#unique_health_id#'' and last_method_of_contraception is not null
returning id)
select cast(''Changes done'' as text) result from update_imt_member;',true,'ACTIVE','1843afde-abdf-40e9-80bf-467edb0fbc8b'),
	 (1165,63746,'2019-05-28 18:54:10.372',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id','--Del in pvt. hospital(Service provide to pregnant women with lmp)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_month_year,
to_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') as to_month_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
member_det as (
	select r.member_id, r.native_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p
	where r.native_location_id  = l.child_id 
	and l.parent_id = p.location_id
        and (delivery_hospital in (''893'',''898'',''1013'',''1010'')) 
	and r.lmp_month_year between p.from_month_year and p.to_month_year
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in ( select distinct demographic_type from location_demographic_type_master 
	where demographic_group = p.demographic_group))        
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id, 
        string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc,  location_hierchy_closer_det lhcd, location_master l2, parameters p
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','433707da-2787-47d9-bf7c-142f5dcd153d'),
	 (1378,60512,'2019-08-22 14:06:26.861',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','347dc0d2-0d61-48cb-81e8-9fce8a359d08'),
	 (733,58981,'2019-03-01 19:23:53.295',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','66503735-9766-4a41-a12c-a934697b5690'),
	 (314,1,'2019-02-12 16:08:03.49',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','b733862f-75a2-4b88-81d3-5bc59af6c1c7');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (315,1,'2019-02-12 16:08:03.514',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Less then 1 kg(LBW Child Registered)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.delivery_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.delivery_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.birth_weight is not null and c.birth_weight < 1.0
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','e39e5d8c-409b-42dc-936d-0c5e179b770c'),
	 (1147,63746,'2019-05-28 16:35:10.578',1,'2021-01-13 20:22:06.427965','from_month_year','select to_char(cast(''#from_month_year#'' as date),''DD/MM/YYYY'') as from_month_year',true,'ACTIVE','766262c8-3414-4e4c-a077-9a2abef0c6c1'),
	 (324,1,'2019-02-12 16:19:46.979',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--LBW Child Registered (1.6 - 2 kg)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.delivery_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.delivery_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.birth_weight is not null and c.birth_weight >= 1.5 and c.birth_weight < 2.0
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','be01e418-6c84-42d9-9c66-2bd75cb268ce'),
	 (1507,74840,'2020-01-29 15:32:40.033',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','a36f211c-189f-44ed-a069-b1a6f145eeda'),
	 (674,409,'2019-02-20 11:55:34.836',1,'2021-01-13 20:22:06.427965','limit_offset,demographic_location_id,loggedInUserId,location_id','--No of registered pregnant women(Concurrent High Risk Mother Report)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
CAST(''#loggedInUserId#'' AS INTEGER) as loggedInUserId,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
)
,member_det as (
	select r.member_id, r.member_current_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, parameters p
	where r.member_current_location_id  = l.child_id 
	and r.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')
	and r.preg_reg_state in (''PENDING'',''PREGNANT'')
	and l.parent_id = p.location_id
                     and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name
						else l2.name end),''>'' order by lhcd.depth desc) as aoi
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id, p.preferred_language
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','96eb5143-886a-47de-b0fb-cb9988dbfbe2'),
	 (990,64189,'2019-04-12 16:01:21.818',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--LBW Child Registered (2.6-3 kg)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.delivery_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.delivery_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.birth_weight is not null and c.birth_weight >= 2.5 and c.birth_weight < 3
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','48dbace0-95a6-4af5-9183-720b8524f0ac'),
	 (994,409,'2019-04-12 16:53:08.439',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--LBW Child Registered (3.6-4 kg)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.delivery_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.delivery_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.birth_weight is not null and c.birth_weight >= 3.5 and c.birth_weight < 4
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','63312961-7650-4b49-9baf-3a8b1c9d4799'),
	 (1192,409,'2019-07-05 15:00:30.639',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','d2ffbb61-7d00-49d0-83c9-a78a24ac44be'),
	 (913,409,'2019-03-07 16:01:46.045',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id','--ANC-1 (Service provide to pregnant women with lmp)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_month_year,
to_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') as to_month_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
member_det as (
	select r.member_id, r.native_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.date_of_delivery,''DD/MM/YYYY'') as dod
	,to_char(r.anc1,''DD/MM/YYYY'') as anc1
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, parameters p
	where r.anc1 is not null
	and r.native_location_id  = l.child_id
	and l.parent_id = p.location_id
	and r.lmp_month_year between p.from_month_year and p.to_month_year
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in ( select distinct demographic_type from location_demographic_type_master 
	where demographic_group = p.demographic_group)) 
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id, 
        string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
member_det.anc1 as "ANC1 Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','94df235d-57c2-4db5-b6e7-9ffbbc9a12b6'),
	 (1551,74841,'2020-03-29 13:22:58.576',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','a1b1537c-1025-4c10-ae5a-2ed54f7210fd');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (744,58981,'2019-03-01 19:30:54.275',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id','--ANC-2 (Service provide to pregnant women with lmp)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_month_year,
to_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') as to_month_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
member_det as (
	select r.member_id, r.native_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.date_of_delivery,''DD/MM/YYYY'') as dod
	,to_char(r.anc2,''DD/MM/YYYY'') as anc2
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, parameters p
	where r.anc2 is not null
	and r.native_location_id  = l.child_id
	and l.parent_id = p.location_id
	and r.lmp_month_year between p.from_month_year and p.to_month_year
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in ( select distinct demographic_type from location_demographic_type_master 
	where demographic_group = p.demographic_group)) 
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id,       
        string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi  
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
member_det.anc2 as "ANC2 Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','60956eae-bf4f-4b38-8690-f322a0d7e162'),
	 (955,60512,'2019-04-10 17:49:48.66',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','378539ae-c44a-4e25-802e-9bb38662aaf6'),
	 (1258,409,'2019-07-24 11:05:40.493',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','5a2539ac-be96-42cb-a5d0-fe0e2828fd39'),
	 (736,58981,'2019-03-01 19:23:53.328',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id','--PW Registered with LMP (Service provide to pregnant women with lmp)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_month_year,
to_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') as to_month_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
member_det as (
	select r.member_id, r.native_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p
	where r.native_location_id  = l.child_id 
	and l.parent_id = p.location_id
	and r.lmp_month_year between p.from_month_year and p.to_month_year
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in ( select distinct demographic_type from location_demographic_type_master 
	where demographic_group = p.demographic_group)) 
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id, 
        string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name
						else l2.name end),''>'' order by lhcd.depth desc) as aoi
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','f352ec22-7949-4d79-9500-091539f1b532'),
	 (1161,63746,'2019-05-28 18:41:49.636',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id','--Del in Gvt Hospital (Service provide to pregnant women with lmp)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_month_year,
to_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') as to_month_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
member_det as (
	select r.member_id, r.native_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l , parameters p
	where r.native_location_id  = l.child_id 
	and l.parent_id = p.location_id
	and ( delivery_hospital in (''897'',''1062'',''899'',''1061'',''895'',''1009'',''890'',''1008'',''894'',''1063'',''892''))
	and r.lmp_month_year between p.from_month_year and p.to_month_year
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in ( select distinct demographic_type from location_demographic_type_master 
	where demographic_group = p.demographic_group))     
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id, 
        string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p
	where  lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','16fbe7bd-f5f0-4c99-8983-ede2ec02f5f5'),
	 (1496,74840,'2020-01-23 15:51:05.283',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','769f2326-018f-45d9-bed3-01008b8945dc'),
	 (1157,63746,'2019-05-28 18:33:17.293',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id','--Home Del by Non SBA (Service provide to pregnant women with lmp)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_month_year,
to_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') as to_month_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
member_det as (
	select r.member_id, r.native_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p
	where r.native_location_id  = l.child_id
	and l.parent_id = p.location_id
	and (home_del and delivery_outcome in (''LBIRTH'',''SBIRTH'')
		and (delivery_done_by is not null  and delivery_done_by = ''NON-TBA''))
	and r.lmp_month_year between p.from_month_year  and p.to_month_year
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in ( select distinct demographic_type from location_demographic_type_master 
	where demographic_group = p.demographic_group))     
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id, 
        string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det)  loc, location_hierchy_closer_det lhcd, location_master l2, parameters p
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','a301afd4-60b1-4ad4-be10-c4e9fecb171d'),
	 (1259,409,'2019-07-24 11:05:40.532',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','-------Rota Virus 1-------
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
	where l.child_id = c.rota_virus_1_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.rota_virus_1 is not null
	and c.rota_virus_1 >= ''07-01-2019''
	and (case when extract(month from rota_virus_1) > 3 
	then concat(extract(year from rota_virus_1), ''-'', extract(year from rota_virus_1) + 1)
	else concat(extract(year from rota_virus_1) - 1, ''-'', extract(year from rota_virus_1)) end) = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','f45e93a9-1c4d-4e2d-97a6-b279738ec20b'),
	 (1153,63746,'2019-05-28 18:33:14.068',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id','--Home Delivey by SBA (Service provide to pregnant women with lmp)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_month_year,
to_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') as to_month_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
member_det as (
	select r.member_id, r.native_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p
	where r.native_location_id  = l.child_id
	and l.parent_id = p.location_id
	and (home_del and delivery_outcome in (''LBIRTH'',''SBIRTH'') 
		and (delivery_done_by is null  or delivery_done_by != ''NON-TBA''))
	and r.lmp_month_year between p.from_month_year and p.to_month_year
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in ( select distinct demographic_type from location_demographic_type_master 
	where demographic_group = p.demographic_group)) 
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id, 
        string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','04ee3c00-6a03-4052-98b5-2f3713f68ea6'),
	 (1271,60512,'2019-08-01 16:52:06.126',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,loggedInUserId,location_id','with prefered_language as (
select 	case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end as is_enlish
from um_user where id = #loggedInUserId# 
), child_service_ids as (
	select distinct on (cmtc_child_screening_analytics_details.member_id)
	cmtc_child_screening_analytics_details.member_id
	from cmtc_child_screening_analytics_details
	where cmtc_child_screening_analytics_details.screening_id is not null
	and cmtc_child_screening_analytics_details.admission_id is not null
	and cmtc_child_screening_analytics_details.disease_id is null
	and cmtc_child_screening_analytics_details.apetite_test = ''PASS''
	and cmtc_child_screening_analytics_details.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and cmtc_child_screening_analytics_details.rch_child_service_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	and (cmtc_child_screening_analytics_details.muac < 11.5 
			or cmtc_child_screening_analytics_details.have_pedal_edema 
			or (cmtc_child_screening_analytics_details.sd_score = ''SD3'' or cmtc_child_screening_analytics_details.sd_score = ''SD4''))
	order by cmtc_child_screening_analytics_details.member_id,cmtc_child_screening_analytics_details.id desc
    #limit_offset#
)
select
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Name",
case when prefered_language.is_enlish then get_location_hierarchy_language_wise(imt_family.location_id, ''EN'')
				else get_location_hierarchy(imt_family.location_id) end as "Location"
from child_service_ids
inner join imt_member on child_service_ids.member_id = imt_member.id
inner join imt_family on imt_member.family_id = imt_family.family_id
inner join prefered_language on true',true,'ACTIVE','a22f0f1c-c5a3-44a3-87a8-36130f9c3118');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1263,409,'2019-07-24 11:08:06.124',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','-------Rota Virus 3-------
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
child_det as (
	select m.id, f.location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, imt_family f
	where l.child_id = c.rota_virus_3_loc and m.id = c.member_id and f.family_id = m.family_id
	and l.parent_id = #location_id#
	and c.rota_virus_3 is not null
	and c.rota_virus_3 >= ''07-01-2019''
	and (case when extract(month from rota_virus_3) > 3 
	then concat(extract(year from rota_virus_3), ''-'', extract(year from rota_virus_3) + 1)
	else concat(extract(year from rota_virus_3) - 1, ''-'', extract(year from rota_virus_3)) end) = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat(u.first_name, '' '', u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '', case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','a66f497f-540e-4e74-9946-23fa1e681fe4'),
	 (748,58981,'2019-03-01 19:33:33.759',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id','--ANC-3 (Service provide to pregnant women with lmp)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_month_year,
to_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') as to_month_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
member_det as (
	select r.member_id, r.native_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.date_of_delivery,''DD/MM/YYYY'') as dod
	,to_char(r.anc3,''DD/MM/YYYY'') as anc3
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, parameters p
	where r.anc3 is not null
	and r.native_location_id  = l.child_id
	and l.parent_id = p.location_id
	and r.lmp_month_year between p.from_month_year and p.to_month_year
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in ( select distinct demographic_type from location_demographic_type_master 
	where demographic_group = p.demographic_group)) 
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id,         
        string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det)  loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
member_det.anc3 as "ANC3 Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','31d3fe85-22b8-4705-b8a1-7e87ed1b91d1'),
	 (1454,74840,'2019-12-17 19:44:05.903',1,'2021-01-13 20:22:06.427965','to_from_month_year,loggedInUserId,location_id,from_from_month_year','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#)
,location_ids as(
    select l.id as child_id,l.name as name from location_hierchy_closer_det lc,location_master l  
			where lc.parent_id = #location_id# and depth = 1 and l.id = lc.child_id
)
,
month_filter as (
	select
	cast (
		case
			when ''#from_from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_from_month_year#''
		end as date) as "from_month",
	
	 cast (
		case
			when ''#to_from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_from_month_year#''
	end as date) as "to_month"
)
,ldp as(
	select 
	location_ids.child_id as loc_id,
	location_ids.name as "name",
	sum(lwa.total_population_0_to_18) as "total_population_0_to_18",
	sum(lwa.total_population_19_to_40) as "total_population_19_to_40",
	sum(lwa.total_population_more_than_40) as "total_population_more_than_40"
	from location_ids
	inner join location_hierchy_closer_det loc on loc.parent_id = location_ids.child_id	
	inner join location_wise_analytics lwa on loc.child_id = lwa.loc_id		
	group by location_ids.child_id,location_ids.name
)
,screening_details as(
	select 	
	location_ids.child_id as loc_id,
	location_ids.name as "name",
	count(1) filter(where nmsm.member_id is not null) as "total_screened_by_ASHA",
	count(1) filter(where nmsm.health_infrastructure_id is not null) as "Refered_to_OA"	
	from location_ids
	inner join location_hierchy_closer_det loc on loc.parent_id = location_ids.child_id	
	inner join npcb_member_screening_master nmsm on loc.child_id = nmsm.location_id
	inner join month_filter on cast(date_trunc(''month'', nmsm.service_date) as date)  between month_filter.from_month and month_filter.to_month
	group by location_ids.child_id,location_ids.name
)
,screend_details as (
	select 
	location_ids.child_id as loc_id,
	location_ids.name as "name",
	count(1) as "examined_by_OA",
	count(1) filter(where examination.minor_elements_treatment = true) as "treated_by_OA",
	count(1) filter(where examination.referral_health_infrastructure is not null) as "refered_to_higher_center"	
	from location_ids
	inner join location_hierchy_closer_det loc on loc.parent_id = location_ids.child_id	
	inner join npcb_member_screening_master nmsm on loc.child_id = nmsm.location_id
    left join npcb_member_examination_detail examination on nmsm.examine_id = examination.id
	inner join month_filter on cast(date_trunc(''month'', examination.service_date) as date)  between month_filter.from_month and month_filter.to_month
	group by location_ids.child_id,location_ids.name
)
,final_det as(
 select
	location_ids.name as "Location",
	-- location_ids.child_id,
	coalesce(ldp."total_population_0_to_18",0) as "0-18 years",
	coalesce(ldp."total_population_19_to_40",0) as "18-40 years",
	coalesce(ldp."total_population_more_than_40",0) as "> 40 years",
	coalesce(screening."total_screened_by_ASHA",0) as "Screened by ASHA",
	coalesce(round((screening."total_screened_by_ASHA")*100 / sum(ldp."total_population_0_to_18" + ldp."total_population_19_to_40" + ldp."total_population_more_than_40"),2),0) as "%",	
	coalesce(screening."Refered_to_OA",0) as "Refered to OA",
	coalesce(sd."examined_by_OA",0) as "Examined by OA",
	coalesce(sd."treated_by_OA",0) as "Treated by OA",
	coalesce(sd."refered_to_higher_center",0) as "Refered to hihger center"
from
	location_ids
left join ldp on
	location_ids.child_id = ldp.loc_id
left join screening_details screening
	on screening.loc_id = location_ids.child_id
left join screend_details sd on
	sd.loc_id = location_ids.child_id
group by location_ids.name,location_ids.child_id
,ldp.total_population_0_to_18,ldp.total_population_19_to_40,ldp.total_population_more_than_40,
screening."total_screened_by_ASHA",screening."Refered_to_OA",sd."examined_by_OA",
sd."treated_by_OA",sd."refered_to_higher_center"
)
select 
row_number() over() as sr_no,
* 
from
final_det
union all
select
null,
''<b>Total<b>'',  
 coalesce(sum("0-18 years"),0),
 coalesce(sum("18-40 years"),0),
 coalesce(sum("> 40 years"),0),
 coalesce(sum("Screened by ASHA"),0),
 coalesce(sum("%"),0),
 coalesce(sum("Refered to OA"),0),
 coalesce(sum("Examined by OA"),0),
 coalesce(sum("Treated by OA"),0),
 coalesce(sum("Refered to hihger center"),0) 
from
final_det',true,'ACTIVE','c5a66d18-5401-45bf-be7c-c915ecdaa51d'),
	 (1408,66522,'2019-08-28 19:17:01.809',1,'2021-01-13 20:22:06.427965','from_date','select to_char(cast(''#from_date#'' as date),''DD/MM/YYYY'') as from_date',true,'ACTIVE','02c50784-6cd3-4a08-9973-2c7bf814778c'),
	 (1409,66522,'2019-08-28 19:17:01.82',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','1c11aaf9-2b0c-41c0-a9be-73f225f44b20'),
	 (391,1,'2019-02-13 12:21:52.085',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--FIPV 1 given(Immunization Services Provided to Children with Date of Birth)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.f_ipv1 is not null
	and c.is_valid_for_tracking_report = true
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','d184d3ae-17c6-46a9-86e3-d3b7ab93d0fa'),
	 (1475,74841,'2020-01-08 18:18:55.024',1,'2021-01-13 20:22:06.427965','role_id','select -1 as id, ''All'' as "name"
union
select id,name from notification_type_master 
where role_id = #role_id# and  id != 1
order by id',true,'ACTIVE','371861aa-a08c-4567-96c8-78f37489f921'),
	 (399,1,'2019-02-13 12:25:58.561',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,location_id','--OPV 2 given(Immunization Services Provided to Children with Date of Birth)
with child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.opv2 is not null
	and c.is_valid_for_tracking_report = true
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg(l2.name,'' >'' order by lhcd.depth desc) as aoi
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','5a147941-c76f-41cf-be48-f1635bdecab1'),
	 (1523,74840,'2020-02-28 12:23:10.972',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as (
select 	case
		when report_preferred_language = ''EN'' then true
		else false
	end as is_enlish
from um_user where id = #loggedInUserId#
)
,location_det as(
	select
	child_id,
	case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
		else location_master.name end
	from location_hierchy_closer_det,location_master,prefered_language
        where parent_id = #location_id#
	and depth = 1 and location_master.id = location_hierchy_closer_det.child_id
)
,school_det as (
	select
	lhcd.parent_id,
	count(1) FILTER (WHERE sm.is_pre_primary_school is true) as  pre_primary_count,
	count(1) FILTER (WHERE sm.is_primary_school is true) as primary_count,
	count(1) FILTER (WHERE sm.is_higher_secondary_school is true) as higher_secondary_count,
	count(1) as total_school_count
	from location_det
	inner join location_hierchy_closer_det lhcd on lhcd.parent_id = location_det.child_id
	inner join school_master sm on sm.location_id = lhcd.child_id
	group by lhcd.parent_id
)
,final_det as (
	select
	child_id,
	coalesce(pre_primary_count,0) as pre_primary_count,
	coalesce(primary_count,0) as primary_count,
	coalesce(higher_secondary_count,0) as higher_secondary_count,
	name,
	coalesce(total_school_count,0) as total_school_count
	from
	location_det inner join prefered_language on true = true
	left join school_det on location_det.child_id  = school_det.parent_id

)
select
	row_number() over() as "Sr. no",
	child_id as hidden_location_id,
	name as "Location Name",
	pre_primary_count as "Total Pre-Primary School",
	primary_count as "Total Primary School",
	higher_secondary_count as "Total Higher Secondary School",
	total_school_count as "Total Schools"
from final_det
union all
select
null,
#location_id#,
''<b>Total</b>'',
coalesce(sum(pre_primary_count),0),
coalesce(sum(primary_count),0),
coalesce(sum(higher_secondary_count),0),
coalesce(sum(total_school_count),0)
from
final_det',true,'ACTIVE','a219967c-69ef-494c-84ec-3aba8495fffb'),
	 (1585,74841,'2020-04-09 20:55:05.961',1,'2021-01-13 20:22:06.427965','limit_offset,demographic_location_id,from_date,to_date,filter_type,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
parameters as (
	select distinct (case when #location_id# is null then 2
		else CAST(#location_id# AS INTEGER) end) as location_id,
	(case when #location_id# is null then ''null'' else CAST(''#demographic_location_id#'' AS TEXT) end) as demographic_group
	,(case when ''#from_date#'' = ''null'' then current_date else  to_date(''#from_date#'',''MM-DD-YYYY'') end) as from_date
	,(case when ''#to_date#'' = ''null'' then current_date  else to_date(''#to_date#'',''MM-DD-YYYY'') end) as to_date
), loc_det as (
    select vlc.child_id 
    from parameters p 
    cross join vw_location_closure_det_by_parent_location_depth vlc
    where vlc.location_id=p.location_id and vlc.depth=1 
    and (p.demographic_group=''null'' or vlc.child_demographic_type in 
    (select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
    )
), opd_detail as (
select idsp2.*,
case when roltd.id is not null then true else false end as sent_for_test
from parameters p
cross join idsp_2_member_screening_details idsp2
inner join rch_opd_member_registration rom on rom.reference_id = idsp2.id
inner join rch_opd_member_master opd_master on opd_master.opd_member_registration_id = rom.id
left join rch_opd_lab_test_details roltd
on roltd.lab_test_id = (select id from rch_opd_lab_test_master where name = ''COVID-19'') 
and roltd.opd_member_master_id = opd_master.id
left join covid19_lab_test_recommendation cltr on cltr.opd_lab_test_id = roltd.id
left join covid19_admission_detail cad on cad.covid19_lab_test_recommendation_id = cltr.id
left join covid19_lab_test_detail cltd on cltd.id = cad.last_lab_test_id
where
	idsp2.location_id in (select distinct child_id from loc_det) 

    and cast(rom.registration_date as date) between p.from_date and p.to_date
     
    and reference_type = ''IDSP_REF_2'' 
    
    and 
	case 
		when #filter_type# = ''sent for test'' then  roltd.id is not null 
		when #filter_type# = ''mo'' then true		
		when #filter_type# = ''Decision by district'' then cltr.lab_test_status is not null and cltr.lab_test_status != ''PENDING'' 
		when #filter_type# = ''Sent for admission'' then cltr.refer_health_infra_id is not null 
		when #filter_type# = ''Samples Collected for testing'' 
			then cad.status is not null and (cad.status != ''SUSPECT'' or cltd.lab_collection_on is not null) 
		when #filter_type# = ''Samples tested'' 
			then cad.status is not null and (cad.status != ''SUSPECT'' or cltd.lab_result_entry_on is not null)	
		
		else false end 
order by idsp2.member_id 
    #limit_offset#
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
concat( im.first_name, '' '', im.middle_name, '' '', im.last_name, ''('' , im.unique_health_id , '')'', ''('' , im.family_id , '')'') as "Member Details", 
get_location_hierarchy(idsp2.location_id) as "Location",
case when idsp2.any_illness_or_discomfort = 1 then true else false end as "Any illness or discomfort",
case when idsp2.symptoms ilike ''%FEVER%'' then true else false end as "fever",
case when idsp2.symptoms ilike ''%COUGH%'' then true else false end as "Cough",
case when idsp2.symptoms ilike ''%BREATHING_DIFFICULTY%'' then true else false end as "Breathing difficulty",
case when (idsp2.symptoms ilike ''%FEVER%'' and (idsp2.symptoms ilike ''%COUGH%'' or idsp2.symptoms ilike ''%BREATHING_DIFFICULTY%'')) then true else false end as "Fever with cough or breathing difficulty",
case when (idsp2.symptoms ilike ''%FEVER%'' OR idsp2.symptoms ilike ''%COUGH%'' or idsp2.symptoms ilike ''%BREATHING_DIFFICULTY%'') then true else false end as "Symptomic",
case when (idsp2.treatment_started = 1) then true else false end as "Treatment started",
case when idsp2.member_id is not null then true else false end as "Examined by mo",
case when sent_for_test then sent_for_test else false end as "Sent for test"
from opd_detail idsp2
left join imt_member im on im.id = idsp2.member_id',true,'ACTIVE','1f011db8-a52f-454e-822f-e4178a3c612b');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1600,74840,'2020-04-20 18:43:29.539',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''DD/MM/YYYY'') as to_date',true,'ACTIVE','181e6d0a-d694-4ce0-9a4e-a25b36e89e36'),
	 (1636,74841,'2020-05-24 12:05:43.687',1,'2021-01-13 20:22:06.427965','limit_offset,location_id','WITH family_head AS (
	select mbd.family_id as family_id,
	max(mbd.location_id) as location_id,
	count(1) as member_count
	from member_basic_detail mbd
	,location_hierchy_closer_det lh
	where mbd.location_id = lh.child_id and lh.parent_id = #location_id#
	group by mbd.family_id
    #limit_offset#	
)select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No.",
get_location_hierarchy_from_district(fh.location_id) as "Location name"
,fh.family_id as "Family Id"
,concat_ws('' '',m.first_name,m.middle_name,m.last_name) as "HOF Name"
,m.mobile_number as "Mobile Number"
,fh.member_count as "Member count"
from family_head fh
inner join imt_family f on f.family_id = fh.family_id
left join imt_member m on m.id = (case when f.contact_person_id is not null then f.contact_person_id else f.hof_id end)',true,'ACTIVE','2f69c301-3a44-4922-9232-16946b64bd97'),
	 (1561,74840,'2020-04-09 13:41:00.196',1,'2021-01-13 20:22:06.427965','infra_id,location_id,status','with location_det as (
	select child_id as loc_id
	from location_hierchy_closer_det lhc
	where 
	parent_id = #location_id# 
), lab_test_det as (
	select
	distinct on
	(covid_admission_detail_id) *
	from covid19_lab_test_detail ctd   
    order by covid_admission_detail_id,id
), infra_info as (
	select
	hid.id as infra_id,
	hid.location_id,
	hid.name infra_name
	from health_infrastructure_details  hid
	inner join location_hierchy_closer_det loch on loch.child_id = hid.location_id
	left join health_infrastructure_ward_details hiwd on hiwd.health_infra_id = hid.id
	where (is_covid_hospital or is_covid_lab)
    and (case when #infra_id# is null then (loch.parent_id in (select distinct loc_id from location_det)) else hid.id = cast(#infra_id# as integer) end)
	group by hid.id,hid.location_id,hid.name
)
,member_det as (
	select
    cad.id,
	concat_ws('' '', cad.first_name, cad.last_name, cad.middle_name) as member_name,
	cad.age as age,
	cad.gender as gender,
	cad.address as address,
	cad.occupation as occupation,
	cad.contact_number as contact_number,
	d.english_name as district,
	s.english_name as state,
	cast(''N/A'' as text) as date_of_arrival_in_india,
	cad.travelled_place as travelled_to_covid_affected_country,
	cad.flight_no as flight_no,
	cast(''N/A'' as text) as seat_no,
	case
		when cad.in_contact_with_covid19_paitent is not null then cad.in_contact_with_covid19_paitent
		else ''No''
	end as had_contact_with_covid19_case,
	to_char(cad.date_of_onset_symptom,''DD/MM/YYYY'') as date_of_onset_of_symptoms,
	
	concat_ws('', '' ,(case when cad.is_fever then ''Fever'' else null end) 
	,(case when cad.is_cough then ''Cough'' else null end)
	,(case when cad.is_breathlessness then ''Breathlessness'' else null end)
	,(case when cad.is_sari then ''SARI'' else null end)
	) as symptoms_at_admission,
	
	to_char(cad.admission_date,''DD/MM/YYYY'') as date_of_isolation,
	
	case
		when ltd.id is not null then ''Yes''
		else ''No''
	end sample_collected,
	ltd.lab_test_number as sample_id,
	to_char(ltd.lab_collection_on,''DD/MM/YYYY'') as date_of_sample_collected,
	
	hid_sample.name_in_english as sample_collection_center,
	hid_tested.name_in_english as sample_tested_at,
	hid_tested.name_in_english as lab_that_have_confirmed_the_result,
	
	concat_ws('', '' ,(case when cad.is_hiv then ''HIV'' else null end) 
	,(case when cad.is_heart_patient then ''Heart Patient'' else null end)
	,(case when cad.is_diabetes then ''Diabetes'' else null end)
	,(case when cad.is_copd then ''COPD'' else null end)
	,(case when cad.is_hypertension then ''Hypertension'' else null end)
	,(case when cad.is_renal_condition then ''Renal Condition'' else null end)
	,(case when cad.is_immunocompromized then ''Immunocompromized'' else null end)
	,(case when cad.is_malignancy then ''Malignancy'' else null end)
	,(case when cad.is_other_co_mobidity then cad.other_co_mobidity else null end)
	) as underlying_medical_condition,
	
	cacds.health_status as health_status,
	case when cad.discharge_status is null then ''Admitted'' else cad.discharge_status end as outcome,
	to_char(cad.discharge_date,''DD/MM/YYYY'') as date_of_outcome,
	cast(''N/A'' as text) as is_patitnet_member_of_covid_19,
	cast(''N/A'' as text) as household_contact,
	cast(''N/A'' as text) as workplace_contact,
	cast(''N/A'' as text) as community_contact,
	cast(''N/A'' as text) as health_care_contact,
	cast(''N/A'' as text) as co_traveller
	
	from infra_info info
     inner join health_infrastructure_ward_details hiwd on hiwd.health_infra_id = info.infra_id 
	left join covid19_admission_detail cad on cad.current_ward_id = hiwd.id
	left join lab_test_det ltd on cad.id = ltd.covid_admission_detail_id    
	left join covid19_admitted_case_daily_status cacds on cad.last_check_up_detail_id = cacds.id
	left join location_master lm on lm.id = cad.location_id
	left join location_level_hierarchy_master lh on	lh.id = lm.location_hierarchy_id
	left join health_infrastructure_details hid_sample on hid_sample.id = ltd.sample_health_infra
	left join health_infrastructure_details hid_tested on hid_tested.id = ltd.sample_health_infra_send_to
	left join location_master s on lh.level1 = s.id and s.state = ''ACTIVE''
	and s.name not ilike ''%delete%''	left join location_master d on
	lh.level3 = d.id and d.state = ''ACTIVE''
	and d.name not ilike ''%delete%''	
	where case when #infra_id# is null then true else ltd.sample_health_infra_send_to = cast(#infra_id# as integer) end
	and case when ''#status#'' is not null then lab_collection_status = ''#status#'' else true end

)
select
row_number() over (ORDER BY id),
member_name as "Name",
age as "Age",
gender as "Gender",
address as "Address",
occupation as "Occupation",
contact_number as "Contact Number",
district as "District",
state as "State",
date_of_arrival_in_india as "Date of arrival in India",
travelled_to_covid_affected_country as "Travel to COVID affected country (Name of country)",
flight_no as "Flight No",
seat_no as "Seat No",
had_contact_with_covid19_case as "H/O contact with COVID-19 case",
date_of_onset_of_symptoms as "Date of onset of symptoms",
symptoms_at_admission as "Symptoms at admission",
date_of_isolation as "Date of isolation",
sample_collected as "Sample collected (yes/No)",
sample_id as "Sample ID",
date_of_sample_collected as "Date of sample collection",
sample_collection_center "Sample collection centre",
sample_tested_at as "Sample tested at",
lab_that_have_confirmed_the_result as "Lab that confirmed the result",
underlying_medical_condition as "Underlying medical condition",
health_status as "Health Status",
outcome as "Outcome (Discharged/ Death/ Admitted)",
date_of_outcome as "Date of outcome",
is_patitnet_member_of_covid_19 as "is patient member of covid 19",
household_contact as "house hold contact",
workplace_contact as "workplace contact",
community_contact as "community contact",
health_care_contact as "health care contact",
co_traveller as "co traveller"
from member_det',true,'ACTIVE','69d41f43-f042-4532-af5a-f20ca48f20d3'),
	 (256,1,'2019-02-05 12:09:46.719',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--OPV 3 given (Services Provided to the Children Registered during the Year ( 1 to 6 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 years as ( 
	select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as financial_year, 
	cast(curr - interval ''4 years'' as date) as from_date, cast(''03-31-'' || extract(year from curr) as date) as too_date
	from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by financial_year desc
), child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m, years y
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
    and c.is_valid_for_tracking_report = true
	and y.financial_year = ''#financial_year#''
	and c.opv3 is not null
	and c.dob between y.from_date and y.too_date
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','e38551bf-f8fc-487d-acf4-bee182bfe19a'),
	 (1525,74840,'2020-02-28 15:40:13.624',1,'2021-01-13 20:22:06.427965','school_type_flag,loggedInUserId,location_id','with prefered_language as (
select 	case
		when report_preferred_language = ''EN'' then true
		else false
	end as is_enlish
from um_user where id = #loggedInUserId#
)
,location_det as(
	select
	child_id,
	case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
		else location_master.name end
	from location_hierchy_closer_det,location_master,prefered_language
        where parent_id = #location_id#
	and location_master.id = location_hierchy_closer_det.child_id
)
,school_det as (
	select
	get_location_hierarchy(sm.location_id) as location_name,
	case when prefered_language.is_enlish is true then sm.english_name else sm.name end as name,
	case
		when ''#school_type_flag#'' = ''Pre-Primary-school'' then ''Pre-Primary School''
		when ''#school_type_flag#'' = ''Primary-school'' then ''Primary school''
		when ''#school_type_flag#'' = ''All''
			then (
				case
				when sm.is_pre_primary_school is true then ''Pre-Primary School''
				when sm.is_primary_school is true then ''Primary School''
				else ''Higher Secondary School''
				end
				)
		else ''Higher Secondary School''
	end as school_type,
	case when sm.contact_person_name is null or sm.contact_person_name = '''' then ''N/A'' else sm.contact_person_name end as contact_person_name,
	sm.contact_number
	from
	school_master sm inner join prefered_language on true = true
	inner join location_det on sm.location_id = location_det.child_id
	where
	case
	 when ''#school_type_flag#'' = ''Pre-Primary-school'' then sm.is_pre_primary_school is true
	 when ''#school_type_flag#'' = ''Primary-school'' then sm.is_primary_school is true
	 when ''#school_type_flag#'' = ''All'' then true
	 else sm.is_higher_secondary_school is true
	end
)
select
row_number() over() as "Sr. no",
location_name as "Location Name",
name as "School Name",
school_type as "School type",
contact_person_name as "Contact Person Name",
contact_number as "Contact No."
from school_det',true,'ACTIVE','f759cc83-5e59-4292-9fd3-7139e822ef6e'),
	 (1492,74840,'2020-01-20 16:59:46.8',1,'2021-01-13 20:22:06.427965','from_date,to_date','with dates AS (
    SELECT
        to_date(
            CASE WHEN ''#from_date#'' = ''null'' THEN
                NULL
            ELSE
                ''#from_date#''
            END, ''MM-DD-YYYY'') AS from_date,
        to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'')  as to_date
),
number_of_working_days AS (
    SELECT
        count(1) AS count_working_days
    FROM (
        SELECT
            to_date,
            from_date,
            generate_series(from_date, to_date, ''1 day'') as dt
        FROM
            dates) AS d
    WHERE
        extract(''ISODOW'' FROM dt) < 7
)
select count_working_days as total_working_days from number_of_working_days',true,'ACTIVE','c759463a-5ea3-4335-8491-315a2f7a7cbf'),
	 (1532,74841,'2020-03-04 15:21:56.285',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,location_id','with dates as (
select
	to_date( case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM/DD/YYYY'') as from_date),
daily_login_report as (
select
	distinct ulc.user_id,
lh.parent_id
from
	um_user_location_change_detail ulc
inner join dates on
	true
left join um_user_attendance_info uai on
	ulc.user_id = uai.user_id
	and uai.attendance_date = dates.from_date
inner join location_hierchy_closer_det lh on
	lh.child_id = ulc.location_id
where
	uai.user_id is null and uai.attendance_date is null
	and ulc.role_id in (179)
	and lh.parent_id = #location_id#
	and date(ulc.activation_date) <= dates.from_date
	and (ulc.deactivation_date is null
	or date(ulc.deactivation_date) > dates.from_date)
group by
	lh.parent_id, ulc.user_id 
order by ulc.user_id
#limit_offset#)
select
	row_number() over () + cast(substring(''#limit_offset#'', position(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
get_location_hierarchy(lm.id) AS "Location",
concat_ws('' '', uu.first_name, uu.last_name, ''('', uu.user_name, '')'') "User Detail"
from
	daily_login_report dlr
inner join um_user uu on
	uu.id = dlr.user_id
inner join location_master lm   
    on lm.id = dlr.parent_id',true,'ACTIVE','efd035d2-9fbe-47f7-9c7d-b70a369e8eec'),
	 (415,1,'2019-02-13 12:51:25.286',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Measles given(Immunization Services Provided to Children with Date of Birth)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.measles is not null
    and c.is_valid_for_tracking_report = true
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','adfd7671-a0f8-4a08-9b3d-e2eb1385d22f'),
	 (1244,409,'2019-07-24 10:37:22.224',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','fa628395-9c3d-4e7a-b3fa-71abd6be10fc'),
	 (1243,409,'2019-07-24 10:35:23.463',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Rota Virus 2(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.rota_virus_2 is not null
	and c.rota_virus_2 >= ''07-01-2019''
    and c.is_valid_for_tracking_report = true
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','5cc7bbef-25f0-47cc-9e5a-ac356bff5532');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1241,409,'2019-07-24 10:34:07.96',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Rota Virus 1(Services Provided to the Children Registered during the Year ( 0 to 1 Year ))
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.rota_virus_1 is not null
	and c.rota_virus_1 >= ''07-01-2019''
    and c.is_valid_for_tracking_report = true
	and c.financial_year = ''#financial_year#''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','2edda414-a3e7-4ffc-9a1b-0a1add054a1f'),
	 (1493,74840,'2020-01-20 18:06:27.858',1,'2021-01-13 20:22:06.427965','from_date,to_date','with dates AS (
    SELECT
        to_date(
            CASE WHEN ''#from_date#'' = ''null'' THEN
                NULL
            ELSE
                ''#from_date#''
            END, ''MM-DD-YYYY'') AS from_date,
        to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') + interval ''1 month'' - interval ''1 millisecond''  as to_date
),
number_of_working_days AS (
    SELECT
        count(1) AS count_working_days
    FROM (
        SELECT
            to_date,
            from_date,
            generate_series(from_date, to_date, ''1 day'') as dt
        FROM
            dates) AS d
    WHERE
        extract(''ISODOW'' FROM dt) < 7
)
select count_working_days as total_working_days from number_of_working_days',true,'ACTIVE','025bef67-d640-483f-a3b7-f71f2e18ebb5'),
	 (1526,74841,'2020-03-04 15:15:28.447',1,'2021-01-13 20:22:06.427965','from_date,location_id','with dates as (
    select
        to_date( case when ''#from_date#'' = ''null'' then null else  ''#from_date#'' end, ''MM/DD/YYYY'') as from_date),
loc_det AS (
    SELECT
        lhcd.child_id
    FROM
        location_hierchy_closer_det lhcd
    WHERE
        lhcd.parent_id = #location_id#
        AND lhcd.depth = 1
), hwc_details as (
	select lh.parent_id, count(1) as number_of_hwc from location_hierchy_closer_det lh
	left join health_infrastructure_details hid on lh.child_id = hid.location_id
	where is_hwc is true and lh.parent_id IN (select child_id from loc_det) and hid.location_id is not null
	group by lh.parent_id
),
daily_login_report as (
select
	lh.parent_id,
	count(distinct ulc.user_id) as number_of_cho,
	count(distinct ulc.user_id) filter(where uai.attendance_date is not null) as present_user
from
um_user_location_change_detail ulc
inner join dates on
	true
left join um_user_attendance_info uai on
	ulc.user_id = uai.user_id
	and uai.attendance_date = dates.from_date
inner join location_hierchy_closer_det lh on lh.child_id = ulc.location_id
where
	ulc.role_id in (179) and lh.parent_id IN (select child_id from loc_det)
	and date(ulc.activation_date) <= dates.from_date
	and (ulc.deactivation_date is null
	or date(ulc.deactivation_date) > dates.from_date)
group by
	lh.parent_id, ulc.role_id 
)
select
	lm.id as "hidden_location_id",
    lm.english_name AS "Location",
    COALESCE(hd.number_of_hwc, 0) as "No of HWCs",
    COALESCE(dlr.number_of_cho, 0) as "No of CHOs",
    COALESCE(dlr.present_user, 0) as "No Present",
    COALESCE((dlr.number_of_cho - dlr.present_user), 0) as "No Absent"
from loc_det ld
left join hwc_details hd on hd.parent_id = ld.child_id
left join daily_login_report dlr on dlr.parent_id = ld.child_id
left join location_master lm   
    on lm.id = ld.child_id
union all
select
	#location_id#,
	''<b>Total</b>'',
    COALESCE(sum(hd.number_of_hwc), 0),
    COALESCE(sum(dlr.number_of_cho), 0),
    COALESCE(sum(dlr.present_user), 0),
    COALESCE((sum(dlr.number_of_cho) - sum(dlr.present_user)), 0)
from loc_det ld
left join hwc_details hd on hd.parent_id = ld.child_id
left join daily_login_report dlr on dlr.parent_id = ld.child_id',true,'ACTIVE','7991e16a-6445-4e8c-988c-512fb7163188'),
	 (1529,74841,'2020-03-04 15:19:35.79',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,location_id','with dates as (
select
	to_date( case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM/DD/YYYY'') as from_date),
daily_login_report as (
select
	lh.parent_id,
	uai.user_id,
	min(uai.start_time) as start_time,
	max(uai.end_time) as end_time
from
	um_user_attendance_info uai
inner join dates on
	true
inner join um_user_location_change_detail ulc on
	ulc.user_id = uai.user_id
	and date(ulc.activation_date) <= dates.from_date
	and (ulc.deactivation_date is null
	or date(ulc.deactivation_date) > dates.from_date)
inner join location_hierchy_closer_det lh on lh.child_id = ulc.location_id
where
	ulc.role_id in (179) and lh.parent_id = #location_id# and uai.attendance_date = dates.from_date
group by lh.parent_id, uai.user_id
order by uai.user_id
#limit_offset#
)
select
row_number() over () + cast(substring(''#limit_offset#'', position(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
   get_location_hierarchy(lm.id) AS "Location",
concat_ws('' '', uu.first_name, uu.last_name, ''('', uu.user_name, '')'') "User Detail",
TO_CHAR(dlr.start_time, ''DD-MM-YYYY HH24:MI:SS'') as "In",
  TO_CHAR(dlr.end_time, ''DD-MM-YYYY HH24:MI:SS'') as "Out"
from daily_login_report dlr
inner join um_user uu on uu.id = dlr.user_id
inner join location_master lm   
    on lm.id = dlr.parent_id',true,'ACTIVE','23544ccb-abd1-4688-976d-eae36f7706bb'),
	 (1609,92665,'2020-05-06 11:58:01.203',1,'2021-01-13 20:22:06.427965','limit_offset','with anmol_location as (
	select 
	s.rch_code as state_code,
	d.rch_code as district_code,
	db.rch_code  as health_block_code,
	t.rch_code as taluka_code,
	alm.rch_code as health_subfacility_code,
	f.rch_code as health_facility_code, 
	case when alm.english_name is null then alm."name" else alm.english_name end as sub_facility_name,
	case when f.english_name is null then f."name" else f.english_name end as facility_name
	from 
	anmol_location_master alm 
	left join anmol_location_master f on alm.parent_rch_code =  f.rch_code and f.type=''F''
	left join anmol_location_master t on t.rch_code = f.parent_rch_code and  t."type" = ''T''
	left join anmol_location_master d on t.parent_rch_code =  d.rch_code and d.type=''D''
	left join anmol_location_master S on d.parent_rch_code =  S.rch_code and s.type=''S''
	left join anmol_location_master db on db.parent_rch_code =  t.rch_code and  db.type=''HB''
	where  alm."type" =''SF''
) 
,
counts as(
	select 
	alm."health_subfacility_code" as health_subfacility_code,
	(sum(coalesce (lwa.total_members ,0))*21)/1000 as estimated_mother,
	(sum(coalesce(lwa.total_members,0))*19)/1000 as estimated_infant,
	sum(coalesce(lwa.r11_eligible_couple ,0)) as estimated_ec

	from 
	anmol_location alm
	left join location_master lm on lm.rch_code = cast(alm.health_subfacility_code as bigint) and lm."type" = ''SC''
	left join location_hierchy_closer_det lhcd on lhcd.parent_id = lm.id
	left join location_wise_analytics lwa on lwa.loc_id = lhcd.child_id
	where alm.state_code = ''24'' 
	group by alm.health_subfacility_code

)
,total_row as(
	select 
	cast(''Total'' as varchar) "State_code",
	cast(null as int) as "Yr",
	cast('''' as varchar) "HealthFacility_Code",
	cast('''' as varchar)  "HealthFacility_Name",
	cast('''' as varchar) "HealthSubFacility_Code",
	cast('''' as varchar) "HealthSubFacility_Name",
	sum(coalesce(estimated_mother,0) ) "Estimated_Mother",
	sum(coalesce(estimated_infant,0)) "Estimated_Infant",
	cast('''' as text) as "Created_Date",
	cast('''' as text) "Financial_Year",
	sum(coalesce (estimated_ec, 0 ) ) "Estimated_EC" 
	from counts 
)
,det as (
	select alm.state_code "State_code",
	2019 as "Yr",
	alm.health_facility_code "HealthFacility_Code",
	alm.facility_name  "HealthFacility_Name",
	alm.health_subfacility_code "HealthSubFacility_Code",
	alm.sub_facility_name "HealthSubFacility_Name",
	c.estimated_mother "Estimated_Mother",
	c.estimated_infant "Estimated_Infant",
	to_char(now(), ''yyyy-MM-dd'') as "Created_Date",
	cast(''2020-21'' as text) "Financial_Year",
	c.estimated_ec "Estimated_EC" 
	from anmol_location alm inner join counts c on c.health_subfacility_code = alm.health_subfacility_code 	
	#limit_offset#   
)
select * from det
union all
select * from total_row
;',true,'ACTIVE','87b061aa-7abe-432f-84cd-c5c3c75cf72f'),
	 (407,1,'2019-02-13 12:31:41.93',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--OPV 3 given(Immunization Services Provided to Children with Date of Birth)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.opv3 is not null
	and c.is_valid_for_tracking_report = true
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','0038c4f6-f6a2-4f70-83f5-034e9b7046a0'),
	 (403,1,'2019-02-13 12:28:25.139',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Infants given Penta 3(Child for monitoring of Pentavalent 3 Vaccine as per Date of Birth)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.member_id is not null
	and c.is_valid_for_tracking_report = true
	and c.penta3 is not null
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','8496d524-82c9-4fc8-9033-0f883b936740'),
	 (1530,74841,'2020-03-04 15:21:56.227',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','c80b9eb6-83d7-4b57-ab0a-88fe91c93da4'),
	 (334,1,'2019-02-12 17:40:38.294',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','f0f8d02e-fdbd-4cb8-ae62-57b0db39b797'),
	 (337,1,'2019-02-12 17:40:38.308',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Infants not given Penta 3(Child for monitoring of Pentavalent 3 Vaccine as per Date of Birth)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.member_id is not null
	and c.penta3 is null
and c.is_valid_for_tracking_report = true
    and (c.member_state != ''DEAD'' or (c.member_state = ''DEAD'' and (c.death_date is null or (cast(c.death_date as date) - cast(c.dob as date)) > 98)))

	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','2a494a8d-8604-4deb-a161-aa211475622c');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1535,74840,'2020-03-05 16:59:22.647',1,'2021-01-13 20:22:06.427965',NULL,'select distinct page_title from request_response_page_title_mapping where page_title is not null and page_title != '''' 
order by page_title',true,'ACTIVE','e2d01126-9ea3-492c-9cbb-1edc57fa2d33'),
	 (1533,74840,'2020-03-05 16:55:36.891',1,'2021-01-13 20:22:06.427965',NULL,'with role_det as (
select ''ALL'' as name, 1 as ord
union all
select name,2 as ord from um_role_master urm where state = ''ACTIVE'' order by name asc
)
select name from role_det order by ord asc',true,'ACTIVE','78b259fd-7a75-49ab-83e1-de35727e0180'),
	 (1598,74840,'2020-04-20 18:43:29.48',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','47e48d86-5950-4a73-a083-f0b31de7b617'),
	 (1463,74841,'2020-01-06 15:16:07.411',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','0014b247-df0f-49a8-bd9e-a3c6b31c3476'),
	 (1438,74840,'2019-12-06 17:51:51.888',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,loggedInUserId,location_id','with prefered_language as(
select
(case
when report_preferred_language = ''EN'' then true
else false end) as is_enlish
from
um_user
where
id = #loggedInUserId#), 
rch_child_analytics as(
	select
	analytics.middle_name,
	analytics.loc_id,
	analytics.member_id,
	analytics.member_name,
	analytics.last_name,
	analytics.mother_id,
    analytics.live_birth_no,
	im.dob,
    im.unique_health_id,
	im.family_id
	from
	rch_child_analytics_details analytics
	inner join imt_member im on
	im.id = analytics.member_id
	where
im.dob between to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end,''MM-DD-YYYY'') and to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'')	and im.gender = ''F''
	and im.basic_state in (''NEW'', ''VERIFIED'', ''REVERIFICATION'')
	and analytics.loc_id in ( select child_id from  location_hierchy_closer_det where parent_id = #location_id#) -- #location_id#
	order by
	im.dob
#limit_offset#
)
,member_location_detail as (
	select
	loc.id as loc_id,
	lm1.name as level1,
	lm2.name as level2,
	lm3.name as level3,
	lm4.name as level4,
	lm5.name as level5 ,
	lm6.name as level6,
	lm7.name as level7,

	loc.name as loc_name
	from
	location_level_hierarchy_master llhm
	inner join location_master loc on
	loc.id = llhm.location_id
	left join location_master lm1 on
	lm1.id = llhm.level1
	left join location_master lm2 on
	lm2.id = llhm.level2
	left join location_master lm3 on
	lm3.id = llhm.level3
	left join location_master lm4 on
	lm4.id = llhm.level4
	left join location_master lm5 on
	lm5.id = llhm.level5
	left join location_master lm6 on
	lm6.id = llhm.level6
left join location_master lm7 on
	lm7.id = llhm.level7
	where
	llhm.location_id in (
	select
	distinct loc_id
	from
	rch_child_analytics) )
,head_of_family_temp as (
	select
	analytics.member_id as child_id ,
	max(ims.id) as member_id 
	from 	rch_child_analytics analytics 
	inner join imt_member ims on ims.family_id = analytics.family_id where ims.family_head is true
	group by analytics.member_id  
),
head_of_family as (
	select
	head.child_id as child_id ,
	im.id as head_member_id ,
	im.first_name,
	im.mobile_number
	from
	head_of_family_temp head 
	inner join imt_member im on im.id = head.member_id 
	)
,final_det as( 
	select
	level3,
	level4,
	level7,
    analytics.unique_health_id,
	analytics.member_name as "member_name",	
	to_char(analytics.dob, ''dd-MM-yyyy'') as "dob",
	concat(analytics.middle_name, '' '', analytics.last_name) as "parent_name",
	--level5 as "Subcenter",
	--level4 as "PHC",
	--level1 as "State"
     analytics.live_birth_no as "live_birth_no",
	 coalesce(mother.mobile_number, ''NA'') as "p_mob_no",
	 head.mobile_number as "alter_mob_no"
from
rch_child_analytics analytics
left join imt_member mother on mother.id = analytics.mother_id
left join member_location_detail on analytics.loc_id = member_location_detail.loc_id
left join head_of_family head on head.child_id = analytics.member_id
)
select 
--row_number() over() as "Sr. no",
ROW_NUMBER() over ()+SUBSTRING (''#limit_offset#'',POSITION(''offset'' in ''#limit_offset#'')+7)\:\:int as "Sr No",
fd.level3 as "District",
fd.level4 as "Taluka",
fd.level7 as "Village",
fd.unique_health_id as "Health Id",
fd.member_name as "Name of Girl Child",
fd.dob as "Date of Birth",
fd.parent_name as "Parent Name",
fd.live_birth_no as "Live Birth No.",
fd.p_mob_no as "Parent Mobile No",
fd.alter_mob_no as "Alternate Parent Mobile No"	
from 
final_det fd',true,'ACTIVE','77c61e17-9610-4612-ba0c-82394beebeb1'),
	 (639,409,'2019-02-19 19:17:12.713',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','f8469a45-576a-4bf5-8f2a-ad0126ce3517'),
	 (1235,409,'2019-07-24 10:19:02.002',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Rota virus 2 (Immunization Services Provided to Children with Date of Birth)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.rota_virus_2 is not null
	and c.is_valid_for_tracking_report = true
	and c.rota_virus_2 >= ''07-01-2019''
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','806fc927-c8f3-4ec7-bd4e-61f676dd1bb3'),
	 (1572,74841,'2020-04-09 18:05:35.756',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','65ef2e45-ad72-4d3f-95da-ebea9c316996'),
	 (1045,60512,'2019-04-22 17:37:11.651',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','239c9769-53dd-433a-a3f1-2ebb358b2b1f'),
	 (1485,74841,'2020-01-08 18:25:14.636',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','61835dc2-8499-40ac-8c9a-afef271e3bde');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1461,74841,'2020-01-03 12:12:47.306',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,role_id,location_id,total_working_days','WITH
dates AS (
    SELECT
        to_date(
            CASE WHEN ''#from_date#'' = ''null'' THEN
                NULL
            ELSE
                ''#from_date#''
            END, ''MM-DD-YYYY'') AS from_date,
        to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date
)
,user_wise_count AS (
    SELECT
 		ul.user_id,
 		string_agg(distinct get_location_hierarchy(ul.location_id),''<br>'') as location_name,
 		1 as number_of_days,
 		max(case when is_logged_in = true then 1 else 0 end) as number_of_logged_in_days
    FROM
        um_user_day_wise_login_detail ul,
        dates,location_hierchy_closer_det lh	
    WHERE
        ul.month_year BETWEEN dates.from_date AND dates.to_date
and extract(''ISODOW'' FROM ul.login_date) <= 6
        AND lh.parent_id = #location_id#
        and lh.child_id = ul.location_id
        AND role_id = #role_id#
        GROUP BY
          ul.login_date, ul.user_id
order by ul.login_date, ul.user_id
        
)

select distinct
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
	concat_ws('' '', u.first_name, u.last_name, ''('', u.user_name, '')'') "User Detail",
	string_agg(distinct uw.location_name, ''<br>'') as "Location",
    case when sum(uw.number_of_days) =  #total_working_days# then CONCAT(sum(uw.number_of_days),'''') else CONCAT(sum(uw.number_of_days),''**'') end as "Working Days",
    sum(uw.number_of_logged_in_days) as "Login Days",    
	round(((sum(uw.number_of_logged_in_days) * 100.0) / NULLIF(sum(uw.number_of_days), 0)), 2) as "Login Rate"
	from user_wise_count uw
inner join um_user u
on u.id  = uw.user_id
group by u.first_name, u.last_name, u.user_name
#limit_offset#',true,'ACTIVE','e2e2607c-77b1-44e9-a421-02e9d3d125fd'),
	 (187,58981,'2019-01-23 14:46:06.761',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','273d47cb-8329-4609-825c-b231b68ed4fc'),
	 (55,1027,'2018-05-28 15:26:55.316',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#)
select coalesce(case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name else lm.name end,''<b>Total</b>'') as "Location",
sum(lwa.tb) as "TB",sum(lwa.hiv) as "HIV",sum(lwa.leprosy) as "Leprosy",sum(lwa.blindness) as "Blindness",
sum(lwa.sickle_cell) as "Sickle Cell Disease",sum(lwa.diabetes) as "Diabetes",sum(lwa.thalessemia) as "Thalessemia"
from location_hierchy_closer_det lhcd,location_wise_analytics lwa,location_master lm ,prefered_language
where lwa.loc_id = lhcd.child_id  and lm.id = lhcd.parent_id 
and lhcd.parent_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth=1)
group by rollup((lm.name,prefered_language.is_enlish,lm.english_name))',true,'ACTIVE','626989c8-3f35-4643-bd80-4b6e62d649a7'),
	 (1575,74841,'2020-04-09 18:05:44.267',1,'2021-01-13 20:22:06.427965','limit_offset,demographic_location_id,from_date,to_date,filter_type,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
parameters as (
	select distinct (case when #location_id# is null then 2
		else CAST(#location_id# AS INTEGER) end) as location_id,
	(case when #location_id# is null then ''null'' else CAST(''#demographic_location_id#'' AS TEXT) end) as demographic_group
	,(case when ''#from_date#'' = ''null'' then current_date else  to_date(''#from_date#'',''MM-DD-YYYY'') end) as from_date
	,(case when ''#to_date#'' = ''null'' then current_date  else to_date(''#to_date#'',''MM-DD-YYYY'') end) as to_date
), loc_det as (
    select vlc.child_id 
    from parameters p 
    cross join vw_location_closure_det_by_parent_location_depth vlc
    where vlc.location_id=p.location_id and vlc.depth=1 
    and (p.demographic_group=''null'' or vlc.child_demographic_type in 
    (select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
    )
), idsp2_survey_det as (
    select idsp2.* from idsp_2_member_screening_details idsp2
    cross join parameters p
    where idsp2.location_id in (select distinct child_id from loc_det) 
    and cast(idsp2.service_date as date) between p.from_date and p.to_date
    and
    case when #filter_type# = ''feaver'' then idsp2.symptoms ilike ''%FEVER%'' 
	when #filter_type# = ''cough'' then  idsp2.symptoms ilike ''%COUGH%''
	when #filter_type# = ''breathlessness'' then idsp2.symptoms ilike ''%BREATHING_DIFFICULTY%''
	end 
    order by member_id 
    #limit_offset#
), opd_detail as (
select idsp2.member_id,
case when roltd.id is not null then true else false end as sent_for_test
from idsp2_survey_det idsp2
inner join rch_opd_member_registration rom on rom.reference_id = idsp2.id
inner join rch_opd_member_master opd_master on opd_master.opd_member_registration_id = rom.id
left join rch_opd_lab_test_details roltd
on roltd.lab_test_id = (select id from rch_opd_lab_test_master where name = ''COVID-19'') 
and roltd.opd_member_master_id = opd_master.id
where reference_type = ''IDSP_REF_2''
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
concat( im.first_name, '' '', im.middle_name, '' '', im.last_name, ''('' , im.unique_health_id , '')'', ''('' , im.family_id , '')'') as "Member Details", 
get_location_hierarchy(idsp2.location_id) as "Location",
case when idsp2.any_illness_or_discomfort = 1 then true else false end as "Any illness or discomfort",
case when idsp2.symptoms ilike ''%FEVER%'' then true else false end as "fever",
case when idsp2.symptoms ilike ''%COUGH%'' then true else false end as "Cough",
case when idsp2.symptoms ilike ''%BREATHING_DIFFICULTY%'' then true else false end as "Breathing difficulty",
case when (idsp2.symptoms ilike ''%FEVER%'' and (idsp2.symptoms ilike ''%COUGH%'' or idsp2.symptoms ilike ''%BREATHING_DIFFICULTY%'')) then true else false end as "Fever with cough or breathing difficulty",
case when (idsp2.symptoms ilike ''%FEVER%'' OR idsp2.symptoms ilike ''%COUGH%'' or idsp2.symptoms ilike ''%BREATHING_DIFFICULTY%'') then true else false end as "Symptomic",
case when (idsp2.treatment_started = 1) then true else false end as "Treatment started",
case when opd_detail.member_id is not null then true else false end as "Examined by mo",
case when sent_for_test then sent_for_test else false end as "Sent for test"
from idsp2_survey_det idsp2
left join opd_detail on opd_detail.member_id = idsp2.member_id
left join imt_member im on im.id = idsp2.member_id',true,'ACTIVE','a11452d8-5311-412e-9b0e-5efc2687eb5a'),
	 (1540,74840,'2020-03-06 19:58:13.893',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,order_by,response_time,loggedInUserId,api_key_word','with prefered_language as (
select 	case
		when report_preferred_language = ''EN'' then true
		else false
	end as is_enlish
from um_user where id = #loggedInUserId#
),
dates as(
    select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
    to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'')+interval ''1 day'' - interval ''1 millisecond'' as to_date
),
parameter_filter as (
    select
    case when #response_time# is null then 0 else cast(#response_time# as INTEGER) end as response_time,
    case when ''#api_key_word#'' is null then null else ''#api_key_word#'' end as api_key_word
)
,api_details as(
	select
--     page_map.page_title,
     url_map.url,
     EXTRACT(EPOCH FROM end_time-start_time) as time_taken
    from request_response_details_master master
    inner join request_response_url_mapping url_map on master.url = url_map.id
    inner join request_response_page_title_mapping page_map on master.page_title = page_map.id
    left join dates on true = true
    left join parameter_filter on true = true
    where
        (end_time is not null and start_time is not null ) and
        start_time between dates.from_date and dates.to_date
    and
        case
            when parameter_filter.response_time = 0 then true
            else EXTRACT(EPOCH FROM end_time-start_time) > parameter_filter.response_time
        end
    and
    url_map.url ilike (concat(''%'',parameter_filter.api_key_word,''%''))
  #limit_offset#
)
,group_by_filter as (
	select
	url,
	count(1) as no_of_time,
	avg(time_taken) as avg_time_taken,
	max(time_taken) as max_time_taken
	from api_details
	group by url

)
,sort_by_filter as(
	select
	url,
	no_of_time,
	avg_time_taken,
	max_time_taken
	from group_by_filter
	order by
	case
		when ''#order_by#'' = ''No of Time'' then no_of_time
		when ''#order_by#'' = ''Avg. Time'' then avg_time_taken
		when ''#order_by#'' = ''Max Time'' then max_time_taken
		else avg_time_taken
	end
	desc

)
select
	row_number() over () + cast(substring(''#limit_offset#'', position(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
--	page_title as "Page Title",
	url as "URL",
	coalesce(no_of_time,0) as "No of Time",
    TO_CHAR(cast (avg_time_taken || '' second'' as interval), ''HH24 h MI m SS s'') as "Avg.Time",
    TO_CHAR(cast (max_time_taken || '' second'' as interval), ''HH24 h MI m SS s'') as "Max.Time"
	from sort_by_filter',true,'ACTIVE','eaa2331e-3029-4e2c-bbd9-8166a5907028'),
	 (1328,60512,'2019-08-19 14:52:32.614',1,'2021-01-13 20:22:06.427965','from_date,to_date,location_id','with location_ids as(
	select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1
)
,data_filter as (
    SELECT to_date(CASE WHEN ''#from_date#'' = ''null'' THEN NULL ELSE ''#from_date#'' END, ''MM-DD-YYYY'') AS from_date,
           to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_date,
           to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') -
           to_date(CASE WHEN ''#from_date#'' = ''null'' THEN NULL ELSE ''#from_date#'' END, ''MM-DD-YYYY'') as day_difference,
           case 
           		when  
           		extract(month from to_date(''#from_date#'',''MM/DD/YYYY'')) > 3 then concat(extract(year from to_date(''#from_date#'',''MM/DD/YYYY'')),''-'',extract(year from to_date(''#from_date#'',''MM/DD/YYYY''))+1)
					else concat(extract(year from to_date(''#from_date#'',''MM/DD/YYYY''))-1,''-'',extract(year from to_date(''#from_date#'',''MM/DD/YYYY'')))				
           end as financial_year
)
,expected_mother_reg_count as (
	select location_ids.child_id,
	sum(location_wise_expected_target.expected_mother_reg) as expected_mother_reg_count
	from location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id
	inner join location_wise_expected_target on location_hierchy_closer_det.child_id = location_wise_expected_target.location_id
	and location_hierchy_closer_det.child_loc_type in (''P'',''U'')
	and location_wise_expected_target.financial_year = (select data_filter.financial_year from data_filter)
	group by location_ids.child_id
),preg_hiv_counts as (
	select location_ids.child_id,
	count(*) as preg_count,
	count(*) filter (where rch_pregnancy_analytics_details.cur_hiv_issue is not null) as hiv_tested_count,
	count(*) filter (where rch_pregnancy_analytics_details.cur_hiv_issue) as hiv_positive_count,
	count(*) filter (where rch_pregnancy_analytics_details.cur_hiv_issue = false) as hiv_negative_count
	from location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id
	inner join rch_pregnancy_analytics_details on location_hierchy_closer_det.child_id = rch_pregnancy_analytics_details.pregnancy_reg_location_id
	and rch_pregnancy_analytics_details.reg_service_financial_year = (select data_filter.financial_year from data_filter)
	group by location_ids.child_id
),det as (
	select row_number() over() as sr_no,
	location_master.name as loc,
	location_master.id as hidden_location_id,
	expected_mother_reg_count.expected_mother_reg_count as expected_mother_reg_count,
	coalesce(preg_hiv_counts.preg_count,0) as preg_count,
	coalesce(preg_hiv_counts.hiv_tested_count,0) as hiv_tested_count,
	coalesce(preg_hiv_counts.hiv_positive_count,0) as hiv_positive_count,
	coalesce(preg_hiv_counts.hiv_negative_count,0) as hiv_negative_count
	from location_ids
	left join expected_mother_reg_count on location_ids.child_id = expected_mother_reg_count.child_id
	left join preg_hiv_counts on location_ids.child_id = preg_hiv_counts.child_id
	inner join location_master on location_ids.child_id = location_master.id
)
select row_number() over() as "Sr. no",
det.loc as "Location",
det.hidden_location_id,
case when det.expected_mother_reg_count is null then ''Not available'' else cast(det.expected_mother_reg_count as text) end as "Expected Mother Registration",
det.preg_count as "Pregnant Women Registration during period",
det.hiv_tested_count as "Total pregnant women investigated for HIV",
	case when (det.hiv_tested_count = 0 or det.hiv_tested_count is null) then 0 else 
	round(det.hiv_tested_count*100.0/det.preg_count,2) end as "percent_col_Total pregnant women investigated for HIV",
det.hiv_positive_count as "Total No. of Pregnant Women with HIV Reactive",
	case when (det.hiv_positive_count = 0 or det.hiv_positive_count is null) then 0 else 
	round(det.hiv_positive_count*100.0/det.hiv_tested_count,2) end as "percent_col_Total No. of Pregnant Women with HIV Reactive",
det.hiv_negative_count as "Total No. of Pregnant Women with HIV Non Reactive",
	case when (det.hiv_negative_count = 0 or det.hiv_negative_count is null) then 0 else 
	round(det.hiv_negative_count*100.0/det.hiv_tested_count,2) end as "percent_col_Total No. of Pregnant Women with HIV Non Reactive"
from det
union all
select null,
''<b>Total<b>'',
#location_id#,
cast(sum(case when det.expected_mother_reg_count is not null then det.expected_mother_reg_count else 0 end) as text),
sum(det.preg_count),
sum(det.hiv_tested_count),
	case when (sum(det.hiv_tested_count) = 0 or sum(det.hiv_tested_count) is null) then 0 else 
	round(sum(det.hiv_tested_count)*100.0/sum(det.preg_count),2) end,
sum(det.hiv_positive_count),
	case when (sum(det.hiv_positive_count) = 0 or sum(det.hiv_positive_count) is null) then 0 else 
	round(sum(det.hiv_positive_count)*100.0/sum(det.hiv_tested_count),2) end,
sum(det.hiv_negative_count),
	case when (sum(det.hiv_negative_count) = 0 or sum(det.hiv_negative_count) is null) then 0 else 
	round(sum(det.hiv_negative_count)*100.0/sum(det.hiv_tested_count),2) end
from det;',true,'ACTIVE','e6036230-26b5-457c-94c0-f97c1b7c8c32'),
	 (1064,64189,'2019-04-29 15:46:37.798',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','---Measles Rubella given(Immunization Services Provided to Children with Date of Birth)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.measles_rubella is not null
	and c.is_valid_for_tracking_report = true
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','d59ac980-cc10-47be-a449-5fcb09611827'),
	 (1516,74841,'2020-02-10 17:40:05.023',1,'2021-01-13 20:22:06.427965','notification_type','select case when  #notification_type# = -1 then ''All'' end  as notification_type  
union 
select "name" as notification_type from notification_type_master where id = #notification_type#',true,'ACTIVE','e61f9b0c-51a1-4f53-aff5-e6d9a8aa1510'),
	 (1538,74840,'2020-03-05 19:10:25.431',1,'2021-01-13 20:22:06.427965',NULL,'select ''No of Time'' as order_by
union all
select ''Avg. Active Time'' as order_by
union all
select ''Max Active Time'' as order_by',true,'ACTIVE','ded63e26-ae4c-4ada-9617-21e92a9252ff'),
	 (1536,74840,'2020-03-05 16:59:22.682',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,feature_name,order_by,loggedInUserId','with prefered_language as (
select 	case
		when report_preferred_language = ''EN'' then true
		else false
	end as is_enlish
from um_user where id = #loggedInUserId#
)
,dates as(
	select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') as upto_to_date
)
,final_det as (
	select
	 um_role_master.name as role_name,
	 sum(analytic.no_of_times) as no_of_times,
	 round(avg(avg_active_time)/1000,2) as avg_active_time,
	 max((max_active_time)/1000) as max_active_time
	 from user_wise_feature_time_taken_detail_analytics analytic
	inner join dates on true = true
	inner join request_response_page_title_mapping title_map on title_map.id =  analytic.page_title_id
	inner join um_role_master on analytic.role_id = um_role_master.id
	where analytic.on_date between dates.from_date and dates.upto_to_date
	and case when ''#feature_name#'' != ''ALL'' then title_map.page_title = ''#feature_name#'' else true end
	group by um_role_master.name
	-- order by avg_active_time desc #limit_offset#

)
,order_filter as (
	select
	role_name as "Role Name",
	no_of_times as "No.of Times",
	TO_CHAR(cast (avg_active_time || '' second'' as interval), ''HH24 h MI m SS s'') as "Avg. Time",
	TO_CHAR(cast (max_active_time || '' second'' as interval), ''HH24 h MI m SS s'') as "Max. Time"
	from final_det
	order by
	case
		when ''#order_by#'' = ''No of Time'' then no_of_times
		when ''#order_by#'' = ''Avg. Active Time'' then avg_active_time
		when ''#order_by#'' = ''Max Active Time'' then max_active_time
		else avg_active_time
	end
	desc #limit_offset#
)
select
row_number() over () + cast(substring(''#limit_offset#'', position(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
*
from
order_filter',true,'ACTIVE','98387c0d-1565-402e-bca8-d777a1880051');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1534,74840,'2020-03-05 16:55:36.979',1,'2021-01-13 20:22:06.427965','role_name,limit_offset,from_date,to_date,order_by,loggedInUserId','with prefered_language as (
select 	case
		when report_preferred_language = ''EN'' then true
		else false
	end as is_enlish
from um_user where id = #loggedInUserId#
)
,dates as(
	select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end,''MM/DD/YYYY'') as from_date,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') as upto_to_date
)
,final_det as (
	select
	 title_map.page_title,
	 sum(analytic.no_of_times) as no_of_times,
	 round(avg(avg_active_time)/1000,2) as avg_active_time,
	 max((max_active_time)/1000) as max_active_time

	from user_wise_feature_time_taken_detail_analytics analytic
	inner join dates on true = true
	inner join request_response_page_title_mapping title_map on title_map.id =  analytic.page_title_id
	inner join um_role_master on analytic.role_id = um_role_master.id
	where analytic.on_date between dates.from_date and dates.upto_to_date
        and title_map.page_title != '''' and title_map.page_title is not null
	and case when ''#role_name#'' != ''ALL'' then um_role_master.name = ''#role_name#'' else true end
	group by title_map.page_title
	-- order by avg_active_time desc
)
,order_filter as (
    select
    page_title as "Feature",
    no_of_times as "No.of Times",
    TO_CHAR(cast (avg_active_time || '' second'' as interval), ''HH24 h MI m SS s'') as "Avg. Time",
    TO_CHAR(cast (max_active_time || '' second'' as interval), ''HH24 h MI m SS s'') as "Max. Time"
from final_det
order by
	case
		when ''#order_by#'' = ''No of Time'' then no_of_times
		when ''#order_by#'' = ''Avg. Active Time'' then avg_active_time
		when ''#order_by#'' = ''Max Active Time'' then max_active_time
		else avg_active_time
	end
	desc #limit_offset#
)
select
row_number() over () + cast(substring(''#limit_offset#'', position(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
*
from 
order_filter',true,'ACTIVE','a2cdccfa-09ad-4e2e-971f-3e2b88117d23'),
	 (662,409,'2019-02-19 20:57:38.082',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','42bdc7cd-f64b-4ed9-94af-193fbfd122a7'),
	 (663,409,'2019-02-19 20:57:38.093',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--1 PNC(Delivery Services Provided During The Year)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
dates as (
SELECT to_date(concat(''04-01-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 1)),''MM-DD-YYYY'') as from_date
,to_date(concat(''03-31-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 2)),''MM-DD-YYYY'') as to_date
),member_det as (
	select r.member_id, r.pnc1_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.pnc1,''DD/MM/YYYY'') as pnc_date
	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, imt_member m
	, rch_pregnancy_registration_det p
	,dates
	
	where r.member_id = m.id and r.pnc1_location_id  = l.child_id and r.pregnancy_reg_id = p.id
	and l.parent_id = #location_id#
	and r.pnc1 between dates.from_date and dates.to_date
	order by r.pnc1
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id,  
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.pnc_date as "Pnc date",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','c665bb5e-74d1-48d2-84cd-b4aed8be8434'),
	 (1605,92665,'2020-05-06 10:58:09.593',1,'2021-01-13 20:22:06.427965','limit_offset','with anmol_location as (
	select
	s.rch_code as state_code,
	d.rch_code as district_code,
	t.rch_code as taluka_code,
	db.rch_code as health_block_code,
	f.rch_code as health_facility_code,
	sf.rch_code health_subfacility_code,
	village.rch_code as village_code
	from anmol_location_master village
	left join anmol_location_master sf on village.parent_rch_code = sf.rch_code and sf.type=''SF''
	left join anmol_location_master f on sf.parent_rch_code =  f.rch_code and f.type=''F''
	left join anmol_location_master t on f.parent_rch_code =  t.rch_code and t.type=''T''
	left join anmol_location_master d on t.parent_rch_code =  d.rch_code and d.type=''D''
	left join anmol_location_master S on d.parent_rch_code =  S.rch_code and s.type=''S''
	left join anmol_location_master db on db.parent_rch_code =  t.rch_code and  db.type=''HB''
	where village.type=''V'' 
)
,
counts as(
	select  cast (alm.village_code as integer), 
	sum(coalesce (lwa.total_members )) village_population,
	sum(coalesce(lwa.r11_eligible_couple ,0)) eligible_couples ,
	(sum(coalesce (lwa.total_members ,0))*21)/1000 estimated_pw,
	(sum(coalesce(lwa.total_members,0))*19)/1000 estimated_infant
	from 
	anmol_location alm
	left join location_master lm on lm.rch_code = cast (alm.village_code as bigint) and lm."type" = ''V''
	left join location_wise_analytics lwa on lwa.loc_id = lm.id
	where alm.state_code = ''24'' 
	group by alm.village_code 
)
,total_counts as (	
	select 
	cast(''Total'' as varchar) "State_code",
	cast('''' as varchar) "District_code",
	cast('''' as varchar) "Rural_Urban",
	cast('''' as varchar) "HealthBlock_code" ,
	cast('''' as varchar) "Taluka_code"
	,cast(null  as int)  "HealthFacility_Type"
	,cast('''' as varchar) "HealthFacility_code" 
	,cast('''' as varchar) "HealthSubCentre_code"
	,cast('''' as varchar) "Village_code",
	sum(coalesce(village_population,0)) "Village_Population",
	sum(coalesce(eligible_couples,0)) "Eligible_Couples" ,
	sum(coalesce(estimated_pw,0)) "Estimated_PW",
	sum(coalesce(estimated_infant,0)) "Estimated_Infant",
	cast('''' as text)   "PHC_LL",
	cast('''' as text) "PHC_Mob",
	cast('''' as text) "FRU_Name",
	cast('''' as text) "FRU_LL",
	cast('''' as text) "FRU_Mob",
	cast('''' as text) "Trsprt_LL",
	cast('''' as text) "Trsprt_Mob",
	cast('''' as text) "Created_By",
	cast('''' as text)  "Created_On",
	cast(null as text) "Updated_By",
	cast('''' as text) "Updated_On",
	cast('''' as text) "PHC_Name",
	cast('''' as text) "PHC_Address",
	cast('''' as text) "FRU_Address",
	cast(null as text) "anmCount",
	cast(null as text) "ashaCount",
	cast(null as text) "awwCount",
	cast(null as text) "mpwCount",
	cast('''' as text) "Finanacial_Yr"
	from counts
)
--select * from total_counts
,det as (
	select alm.state_code "State_code",
	alm.district_code "District_code",cast(''R'' as text) "Rural_Urban", alm.health_block_code "HealthBlock_code" ,
	alm.taluka_code "Taluka_code"
	,cast(1 as integer)  "HealthFacility_Type",alm.health_facility_code "HealthFacility_code" ,
	alm.health_subfacility_code "HealthSubCentre_code", alm.village_code "Village_code",
	c.village_population "Village_Population",
	c.eligible_couples "Eligible_Couples" ,
	c.estimated_pw "Estimated_PW",
	c.estimated_infant "Estimated_Infant",
	cast('''' as text)   "PHC_LL",
	cast('''' as text) "PHC_Mob",
	cast('''' as text) "FRU_Name",
	cast('''' as text) "FRU_LL",
	cast('''' as text) "FRU_Mob",
	cast('''' as text) "Trsprt_LL",
	cast('''' as text) "Trsprt_Mob",
	cast('''' as text) "Created_By",
	to_char(now(), ''yyyy-MM-dd'')  "Created_On",
	cast(null as text) "Updated_By",
	cast('''' as text) "Updated_On",
	cast('''' as text) "PHC_Name",
	cast('''' as text) "PHC_Address",
	cast('''' as text) "FRU_Address",
	cast(null as text) "anmCount",
	cast(null as text) "ashaCount",
	cast(null as text) "awwCount",
	cast(null as text) "mpwCount",
	cast(''2020-21'' as text) "Finanacial_Yr"
	from anmol_location alm inner join counts c on c.village_code = cast (alm.village_code as integer)  
       #limit_offset#
)
select * from det 

union all 

select * from total_counts
;',true,'ACTIVE','aafe7e12-5d5a-400b-b05b-f87addf91aec'),
	 (1606,92665,'2020-05-06 11:33:30.116',1,'2021-01-13 20:22:06.427965',NULL,'with anmol_location as (
	select alm.rch_code as district_code , alm.parent_rch_code as state_code from anmol_location_master alm where alm."type" = ''D'' 
)
,counts as (
	select
	alm.district_code
	,lm.english_name as district_name
	,(sum(coalesce(lwa.total_members,0))*21)/1000 as estimated_mother
	,(sum(coalesce(lwa.total_members,0))*19)/1000 as estimated_infant
	,sum(coalesce(lwa.r11_eligible_couple ,0)) as estimated_ec
 	from 
	anmol_location alm
	left join location_master lm on lm.rch_code = cast (alm.district_code as bigint) and lm."type" = ''D''
	inner join location_hierchy_closer_det lhcd on lhcd.parent_id = lm.id
	left join location_wise_analytics lwa on lwa.loc_id = lhcd.child_id 
	where alm.state_code = ''24'' 
	group by alm.district_code , lm.english_name 
)
--select * from counts
, det as (
	select 
	alm.state_code "State_code",
	alm.district_code "District_code",
	c.district_name "District_Name",
	c.estimated_mother "Estimated_Mother",
	c.estimated_infant "Estimated_Infant",
	to_char(now(), ''yyyy-MM-dd'') as "Created_Date",
	estimated_ec "Estimated_EC" 
	from anmol_location alm left join counts c on  alm.district_code = c.district_code
	 
) 
,total_row as (
select 
	cast(''Total'' as varchar ) "State_code",
	cast('''' as varchar ) "District_code",
	cast('''' as text) "District_Name",
	sum(coalesce(estimated_mother,0) ) "Estimated_Mother",
	sum(coalesce(estimated_infant)) "Estimated_Infant",
	cast('''' as text) as "Created_Date",
	sum(coalesce(estimated_ec,0)) as  "Estimated_EC" 
	from 
 	counts
)
select * from det 
union all
select * from total_row;',true,'ACTIVE','c2095ad2-c45b-4415-b40a-0abc4029bc5a'),
	 (665,409,'2019-02-19 20:58:11.669',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--2 PNC(Delivery Services Provided During The Year)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
dates as (
SELECT to_date(concat(''04-01-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 1)),''MM-DD-YYYY'') as from_date
,to_date(concat(''03-31-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 2)),''MM-DD-YYYY'') as to_date
),member_det as (
	select r.member_id, r.pnc2_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.pnc2,''DD/MM/YYYY'') as pnc_date
	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, imt_member m
	, rch_pregnancy_registration_det p
	,dates
	
	where r.member_id = m.id and r.pnc2_location_id  = l.child_id and r.pregnancy_reg_id = p.id
	and l.parent_id = #location_id#
	and r.pnc2 between dates.from_date and dates.to_date
	order by r.pnc2
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id,  
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.pnc_date as "Pnc date",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','f1680c71-0a98-4715-be81-40b6c6449d3b'),
	 (1586,74840,'2020-04-10 11:13:46.394',1,'2021-01-13 20:22:06.427965','limit_offset,location_id','with location_det as (
	select child_id as loc_id
	from location_hierchy_closer_det lhc
	where 
	parent_id = #location_id# and depth = 1
)
,infra_info as (
	select
	hid.id as infra_id,
	hid.location_id,
	hid.name infra_name		
	from health_infrastructure_details  hid
	inner join location_hierchy_closer_det loch on loch.child_id = hid.location_id
	where loch.parent_id in (select distinct loc_id from location_det) and (is_covid_hospital or is_covid_lab)
	group by hid.id,hid.location_id,hid.name 		
)

,lab_wise_analytics as (
	select cad.health_infra_id,
	count(1) filter(where cltd.lab_sample_received_on is not null) total_sample_received,
	count(1) filter(where cltd.lab_sample_received_on is null) total_pending_sample,
	count(1) filter(where cltd.lab_sample_received_on is not null and cltd.lab_sample_rejected_on is null) total_accepted_for_testing,
	count(1) filter(where cltd.lab_sample_received_on is not null and cltd.lab_sample_rejected_on is not null) total_Rejected_for_testing,
	count(1) filter(where cltd.lab_result_entry_on is not null and cltd.lab_sample_rejected_on is null) total_case_tested,
	count(1) filter(where cltd.lab_result_entry_on is null) total_case_in_queue_for_testing,
	count(distinct cad.id) filter (where cltd.lab_result = ''POSITIVE'') as positive_cases,
	count(distinct cad.id) filter (where cltd.lab_result = ''NEGATIVE'') as negative_cases,
	count(distinct cad.id) filter (where cltd.lab_result = ''INDETERMINATE'') as inderminate_cases
	from covid19_lab_test_detail cltd,covid19_admission_detail cad
	where cltd.covid_admission_detail_id = cad.id
	group by cad.health_infra_id
)
,final_det as (
	select
	infra_info.location_id,
	infra_info.infra_name,
	infra_info.infra_id,
	analytics.total_sample_received,
	total_accepted_for_testing,
	total_Rejected_for_testing,
	analytics.total_pending_sample,
	analytics.total_case_tested,
	analytics.total_case_in_queue_for_testing,
	analytics.positive_cases,
	analytics.negative_cases,
	analytics.inderminate_cases
	from infra_info left join lab_wise_analytics analytics on infra_info.infra_id = analytics.health_infra_id
	#limit_offset#

)
select
row_number() over () + cast(substring(''#limit_offset#'', position(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
location_id as hidden_location_id,
infra_name as "Lab Name",
coalesce(total_sample_received,0) as "Total Sample Received",
coalesce(total_pending_sample,0) as "Total Pending Sample to Receive",
coalesce(total_accepted_for_testing,0) as "Total Accepted Sample For Testing",
coalesce(total_Rejected_for_testing,0) as "Total Rejected Sample for Testing",
coalesce(total_case_tested,0) as "Total Cases Tested",
coalesce(total_case_in_queue_for_testing,0) as "Total cases In Queue for Testing",
coalesce (positive_cases,0) as "Positive Case",
coalesce (negative_cases,0) as "Negative Case",
coalesce (inderminate_cases,0) as "interminate Case"
from final_det',true,'ACTIVE','33541cb0-8bae-43b1-aa69-74521918fc39'),
	 (667,409,'2019-02-19 20:58:20.28',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--3 PNC(Delivery Services Provided During The Year)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
dates as (
SELECT to_date(concat(''04-01-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 1)),''MM-DD-YYYY'') as from_date
,to_date(concat(''03-31-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 2)),''MM-DD-YYYY'') as to_date
),member_det as (
	select r.member_id, r.pnc3_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.pnc3,''DD/MM/YYYY'') as pnc_date
	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, imt_member m
	, rch_pregnancy_registration_det p
	,dates
	
	where r.member_id = m.id and r.pnc3_location_id  = l.child_id and r.pregnancy_reg_id = p.id
	and l.parent_id = #location_id#
	and r.pnc3 between dates.from_date and dates.to_date
	order by r.pnc3
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id,  
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.pnc_date as "Pnc date",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','a446a790-e0d3-42d3-8567-583b67e88709'),
	 (43,409,'2018-05-25 19:16:36.753',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#)
select lm.id as techo_code,case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name else lm.name end as location_name,lm.location_code as emamta_code from location_hierchy_closer_det lh ,location_master lm ,prefered_language
where lh.parent_id = #location_id# and depth = 1 and lh.child_id = lm.id 
order by name;',true,'ACTIVE','e258774e-8738-4de3-908f-b70daa974f21'),
	 (90,1027,'2018-10-11 14:23:04.629',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id','with loc_detail as (
select child_id from location_hierchy_closer_det where parent_id = #location_id#
), prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#),
rch_anc_detail as (
select created_by,count(*) as rch
from rch_anc_master
where location_id in (select child_id from loc_detail) 
and created_by != -1 and
(''#from_date#'' = ''null'' or created_on >= cast ((case when ''#from_date#'' = ''null'' then ''01-01-1970'' else ''#from_date#'' end) as date)) 
and (''#to_date#'' = ''null'' or created_on <= cast((case when ''#to_date#'' = ''null'' then ''01-01-1970'' else ''#to_date#'' end) as date) + interval ''1 day'' - interval ''1 millisecond'')
group by created_by
),rch_lmp_detail as (
select created_by,count(*) as rch
from rch_lmp_follow_up
where location_id in (select child_id from loc_detail) 
and created_by != -1 and
(''#from_date#'' = ''null'' or created_on >= cast ((case when ''#from_date#'' = ''null'' then ''01-01-1970'' else ''#from_date#'' end) as date)) 
and (''#to_date#'' = ''null'' or created_on <= cast((case when ''#to_date#'' = ''null'' then ''01-01-1970'' else ''#to_date#'' end) as date) + interval ''1 day'' - interval ''1 millisecond'')
group by created_by
),rch_wpd_detail as (
select created_by,count(*) as rch
from rch_wpd_mother_master
where location_id in (select child_id from loc_detail) 
and created_by != -1 and
(''#from_date#'' = ''null'' or created_on >= cast ((case when ''#from_date#'' = ''null'' then ''01-01-1970'' else ''#from_date#'' end) as date)) 
and (''#to_date#'' = ''null'' or created_on <= cast((case when ''#to_date#'' = ''null'' then ''01-01-1970'' else ''#to_date#'' end) as date) + interval ''1 day'' - interval ''1 millisecond'')
group by created_by 
),rch_pnc_detail as (
select created_by,count(*) as rch
from rch_pnc_master
where location_id in (select child_id from loc_detail) 
and created_by != -1 and
(''#from_date#'' = ''null'' or created_on >= cast ((case when ''#from_date#'' = ''null'' then ''01-01-1970'' else ''#from_date#'' end) as date)) 
and (''#to_date#'' = ''null'' or created_on <= cast((case when ''#to_date#'' = ''null'' then ''01-01-1970'' else ''#to_date#'' end) as date) + interval ''1 day'' - interval ''1 millisecond'')
group by created_by
),rch_child_detail as (
select created_by,count(*) as rch
from rch_child_service_master
where location_id in (select child_id from loc_detail) 
and created_by != -1 and
(''#from_date#'' = ''null'' or created_on >= cast ((case when ''#from_date#'' = ''null'' then ''01-01-1970'' else ''#from_date#'' end) as date)) 
and (''#to_date#'' = ''null'' or created_on <= cast((case when ''#to_date#'' = ''null'' then ''01-01-1970'' else ''#to_date#'' end) as date) + interval ''1 day'' - interval ''1 millisecond'')
group by created_by
),user_detail as(
select distinct user_id from (
/*select created_by as user_id from rch_anc_detail
union
select created_by as user_id from rch_lmp_detail
union
select created_by as user_id from rch_wpd_detail
union
select created_by as user_id from rch_pnc_detail
union
select created_by as user_id from rch_child_detail
union
*/
select um_user.id as user_id from um_user,um_user_location 
where  um_user.id = um_user_location.user_id and um_user.state = ''ACTIVE'' and um_user_location.state = ''ACTIVE''
and um_user.role_id= 30
and um_user_location.loc_id in (select * from loc_detail)
) as user_det
),user_loc_detail as(
select user_id as id
,string_agg(loc_det,''<BR/>'')location_detail from(
select user_detail.user_id,string_agg( case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name else location_master.name end ,'' > '' order by depth desc) as loc_det 
from user_detail,um_user_location,location_hierchy_closer_det,location_master,prefered_language
where user_detail.user_id = um_user_location.user_id 
and um_user_location.state = ''ACTIVE''
and location_hierchy_closer_det.child_id = um_user_location.loc_id and location_master.id = location_hierchy_closer_det.parent_id
group by user_detail.user_id,um_user_location.loc_id) as u
group by u.user_id
)select um_user.first_name || '' '' ||um_user.last_name ||''(''||um_user.user_name||'')'' as "User Name",location_detail as "Current Location"
,COALESCE(rch_lmp_detail.rch,0) as "Lmp Follow Up"
,COALESCE(rch_anc_detail.rch,0) as "ANC"
,COALESCE(rch_wpd_detail.rch,0) as "WPD"
,COALESCE(rch_pnc_detail.rch,0) as "PNC"
,COALESCE(rch_child_detail.rch,0) as "CHV"
from user_loc_detail u
inner join um_user on um_user.id = u.id
left join rch_lmp_detail on u.id = rch_lmp_detail.created_by
left join rch_anc_detail on u.id = rch_anc_detail.created_by
left join rch_wpd_detail on u.id = rch_wpd_detail.created_by
left join rch_pnc_detail on u.id = rch_pnc_detail.created_by
left join rch_child_detail on u.id = rch_child_detail.created_by
order by user_name',true,'ACTIVE','d8a8d5f8-1c12-4960-9603-3ae6dc42ff0b');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (827,58981,'2019-03-06 18:25:55.219',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
member_det as (
	select r.member_id, f.location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, imt_family f, rch_pregnancy_registration_det p
	where r.member_id = m.id and r.delivery_location_id  = l.child_id and r.pregnancy_reg_id = p.id and m.family_id = f.family_id
	and del_week <= 34
and delivery_outcome in(''LBIRTH'',''SBIRTH'')
	and l.parent_id = #location_id#
	and r.date_of_delivery_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date)
	order by p.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, 
        string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2,prefered_language
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc
	where loc.loc_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','c56d8cec-da5c-424b-9944-aed1da063faa'),
	 (1042,60512,'2019-04-22 17:34:46.394',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id','--3 PNC(Delivery Services Provided During The Year)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date,
to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),member_det as (
	select r.member_id, r.pnc3_location_id as loc_id,
	r.unique_health_id, r.family_id, 
	r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.pnc3,''DD/MM/YYYY'') as pnc_date	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, parameters p
	where r.pnc3_location_id  = l.child_id
	and l.parent_id = p.location_id
	and r.pnc3 between p.from_date and p.to_date
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
	(select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
	order by r.pnc3
	#limit_offset#
), loc_det as (
	select loc.loc_id,  
string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.pnc_date as "Pnc date",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','7f3be13f-15a0-4aef-9579-61b7cef05bdf'),
	 (1587,74840,'2020-04-10 17:43:42.656',1,'2021-01-13 20:22:06.427965','limit_offset,location_id','with location_det as (
	select child_id as loc_id
	from location_hierchy_closer_det lhc
	where 
	parent_id = #location_id# and depth = 1
)
,test_capacity as (
	select 
	DISTINCT ON (health_infra_id)
	compo.health_infra_id,compo.receipt_date,compo.test_capacity,compo.rna_extraction,kit.list_of_kits 
	from covid19_lab_infrastructure_component_history compo inner join covid19_lab_infrastructure_kit_history  kit on compo.health_infra_id =kit.health_infra_id 
	order by health_infra_id asc,receipt_date desc,kit.receipt_date desc
)
,infra_info as (
	select
	hid.id as infra_id,
	hid.location_id,
	hid.name as infra_name		
	from health_infrastructure_details  hid
	inner join location_hierchy_closer_det loch on loch.child_id = hid.location_id
	where loch.parent_id in (select distinct loc_id from location_det) and (is_covid_hospital or is_covid_lab)
	group by hid.id,hid.location_id,hid.name 		
)
,lab_sample_report_sent as (
	select 
	distinct on (infra.id)
	infra.id,
	lab.sample_health_infra,
	coalesce (infra.name,''N/A'') as sample_sent_infra_name,
	to_char(cast(lab.lab_collection_on as timestamp),''DD/MM/YYYY HH24:MI:SS'') as date_and_time_of_sending
	from 
	covid19_lab_test_detail lab inner join health_infrastructure_details infra on lab.sample_health_infra_send_to = infra.id
)

,lab_wise_analytics as (
	select cad.health_infra_id,
	count(1) filter(where cltd.lab_sample_received_on is not null 
					and cltd.lab_sample_received_on = current_date
					and (cltd.lab_sample_received_on < current_date + interval ''20 hours'' )) total_sample_received_before_8pm,
					
	count(1) filter(where cltd.lab_sample_received_on is not null) cumilative_samples_receieved_till_today,

	count(1) filter(where cltd.lab_result_entry_on is not null 
		and cltd.lab_sample_rejected_on is null
		and cltd.lab_result_entry_on = current_date) sample_tested_today,
		
	count(1) filter(where cltd.lab_result_entry_on is not null 
		and cltd.lab_sample_rejected_on is null) cumilative_sample_tested_till_today,
		
	count(1) filter(where cltd.lab_sample_received_on is null and EXTRACT(EPOCH FROM current_timestamp-cltd.lab_collection_on)/3600 between 0 and 11) hours_0_to_12,
	count(1) filter(where cltd.lab_sample_received_on is null and EXTRACT(EPOCH FROM current_timestamp-cltd.lab_collection_on)/3600 between 12 and 23) hours_12_to_24,
	count(1) filter(where cltd.lab_sample_received_on is null and EXTRACT(EPOCH FROM current_timestamp-cltd.lab_collection_on)/3600 > 23) more_than_24,
	
	count(1) filter (where cltd.sample_health_infra_send_to is not null) as no_of_sample_sent
	from covid19_lab_test_detail cltd,covid19_admission_detail cad
	where cltd.covid_admission_detail_id = cad.id
	group by cad.health_infra_id
        #limit_offset#
)


,final_det as (
	select
	infra_info.location_id,
	infra_info.infra_name,
	infra_info.infra_id,
	coalesce(total_sample_received_before_8pm,0) as total_sample_received_before_8pm,
	coalesce(cumilative_samples_receieved_till_today,0) as cumilative_samples_receieved_till_today,
	coalesce(sample_tested_today,0) as sample_tested_today,
	coalesce(cumilative_sample_tested_till_today,0) as cumilative_sample_tested_till_today,
	coalesce(hours_0_to_12,0) as hours_0_to_12,
	coalesce(hours_12_to_24,0) as hours_12_to_24,
	coalesce(more_than_24,0) as more_than_24,	
	case when lab.sample_sent_infra_name is null then ''N/A'' else lab.sample_sent_infra_name end as sample_sent_infra_name,
	case when lab.date_and_time_of_sending is null then ''N/A'' else lab.date_and_time_of_sending end as date_and_time_of_sending,
	coalesce(no_of_sample_sent,0) as no_of_sample_sent,
	coalesce(test.rna_extraction,0) as rna_extraction,
	coalesce(test.list_of_kits,0) as list_of_kits
	from infra_info left join lab_wise_analytics analytics on infra_info.infra_id = analytics.health_infra_id
	left join test_capacity test on infra_info.infra_id = test.health_infra_id
	left join lab_sample_report_sent lab on lab.id = infra_info.infra_id
	

)
select
row_number() over () + cast(substring(''#limit_offset#'', position(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
location_id as hidden_location_id,
infra_name as "Name Of Lab",
infra_id as hidden_infra_id,
total_sample_received_before_8pm as "Samples received today till 8 PM",
cumilative_samples_receieved_till_today as "Cumulative Samples received till today",
sample_tested_today as "Samples Tested Today",
cumilative_sample_tested_till_today as "Total Tested (Cumulative)",
hours_0_to_12 as " Nos (for 0-12 Hours)",
hours_12_to_24 as "Nos (for 12 to 24 hours)",
more_than_24 as "Nos (for More than 24 hours)",
sample_sent_infra_name as "Name of the Lab where samples sent to",
date_and_time_of_sending as "Date and Time of Sending",
no_of_sample_sent as "No of Samples Sent",
rna_extraction as "RNA Extraction- No of Tests",
list_of_kits as "RTPCR- No of Tests"
from final_det

union all

select
null,
null,
''<b>Total</b>'',
null,
sum(total_sample_received_before_8pm),
sum(cumilative_samples_receieved_till_today),
sum(sample_tested_today),
sum(cumilative_sample_tested_till_today),
sum(hours_0_to_12),
sum(hours_12_to_24),
sum(more_than_24),
null,
null,
sum(no_of_sample_sent),
sum(rna_extraction),
sum(list_of_kits)
from 
final_det',true,'ACTIVE','d33a8d9e-7b67-4313-b5ae-1ea376b1e6dd'),
	 (57,1027,'2018-07-04 21:03:14.665',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#)
select ROW_NUMBER() over () as "S No.",coalesce(r1.name,''<b>Total</b>'') as "Location",
case when sum(total.count) is null then 0 else sum(total.count) end as "Total users created",
case when sum(scheduled.count) is null then 0 else sum(scheduled.count) end as "Total Scheduled",
case when sum(practicing.count) is null then 0 else sum(practicing.count) end as "No of FHW in practice",
case when sum(pending.count) is null then 0 else sum(pending.count) end as "Total Pending training",
case when sum(production.count) is null then 0 else sum(production.count) end as "No of FHW on production"
from (select lhcd.child_id,case when ( lm.is_enlish and (lm.english_name is not null)) then lm.english_name else lm.name end as name from location_hierchy_closer_det lhcd 
inner join (location_master cross join prefered_language) as lm on lhcd.child_id = lm.id where lhcd.parent_id = #location_id# and lhcd.depth = 1) r1
left join 
(select count(distinct us.id),lhcd.parent_id from um_user us inner join um_user_location ul on us.id = ul.user_id
inner join location_hierchy_closer_det lhcd on lhcd.child_id = ul.loc_id
where us.role_id = 30 and lhcd.parent_id in
(select child_id from location_hierchy_closer_det  
where parent_id = #location_id# and depth = 1
) and us.state = ''ACTIVE'' and ul.state = ''ACTIVE''
group by lhcd.parent_id) total
on r1.child_id = total.parent_id
left join 
(select count(distinct us.id),lhcd.parent_id from tr_certificate_master tcm inner join um_user us on tcm.user_id = us.id 
inner join um_user_location ul on us.id = ul.user_id inner join tr_training_master tm on tm.training_id = tcm.training_id
inner join location_hierchy_closer_det lhcd on lhcd.child_id = ul.loc_id
where us.role_id = 30 and tcm.certificate_type = ''COURSECOMPLETION'' and tm.training_state = ''SUBMITTED'' and lhcd.parent_id in
(select child_id from location_hierchy_closer_det  
where parent_id = #location_id# and depth = 1
) and us.state = ''ACTIVE'' and tcm.course_id = 1 and us.id not in (select user_id from user_form_access) and ul.state = ''ACTIVE''
group by lhcd.parent_id) practicing on r1.child_id = practicing.parent_id
left join 
(select count(distinct us.id),lhcd.parent_id from tr_training_master tm inner join tr_training_course_rel tcr using(training_id)
inner join
(select * from tr_training_attendee_rel union select * from tr_training_additional_attendee_rel) attendee on 
attendee.training_id = tm.training_id
inner join um_user us on us.id = attendee.attendee_id 
inner join um_user_location ul on us.id = ul.user_id 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = ul.loc_id
where tcr.course_id = 1 and us.role_id = 30 and ul.state = ''ACTIVE'' and lhcd.parent_id in
(select child_id from location_hierchy_closer_det  
where parent_id = #location_id# and depth = 1 
) and us.state = ''ACTIVE''  and tm.training_state = ''DRAFT'' and tm.expiration_date >= now()
group by lhcd.parent_id) scheduled on r1.child_id = scheduled.parent_id
left join 
(select count(distinct us.id),lhcd.parent_id from um_user us inner join um_user_location ul on us.id = ul.user_id
inner join location_hierchy_closer_det lhcd on lhcd.child_id = ul.loc_id
where us.role_id = 30 and ul.state = ''ACTIVE'' and lhcd.parent_id in
(select child_id from location_hierchy_closer_det  
where parent_id = #location_id# and depth = 1) and us.state = ''ACTIVE'' and us.id not in 
(select user_id from tr_certificate_master inner join tr_training_master using (training_id) 
where course_id = 1 and certificate_type = ''COURSECOMPLETION'' and training_state = ''SUBMITTED'')
and us.id not in ( select attendee.attendee_id from tr_training_master tm inner join tr_training_course_rel tcr on tm.training_id = tcr.training_id
inner join
(select * from tr_training_attendee_rel union select * from tr_training_additional_attendee_rel) attendee on 
attendee.training_id = tm.training_id
where tm.training_state = ''DRAFT'' and tm.expiration_date >= now() and tcr.course_id = 1
) and us.id not in (select user_id from user_form_access)
group by lhcd.parent_id) pending on r1.child_id = pending.parent_id
left join 
(select count(distinct us.id),lhcd.parent_id from user_form_access ufa inner join um_user us on us.id = ufa.user_id
inner join um_user_location ul  on us.id = ul.user_id
inner join location_hierchy_closer_det lhcd on lhcd.child_id = ul.loc_id
where lhcd.parent_id in
(select child_id from location_hierchy_closer_det  
where parent_id = #location_id# and depth = 1) and us.role_id = 30 and us.state = ''ACTIVE'' and ul.state = ''ACTIVE''
group by lhcd.parent_id) production on r1.child_id = production.parent_id
group by rollup(r1.name)',true,'ACTIVE','4c86e5df-9ada-4f0e-b129-5d6beaba6a28'),
	 (54,1027,'2018-05-28 15:22:14.736',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#)
select row_number() over () as "Sr. No",coalesce(case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name else lm.name end,''<b>Total</b>'') as "Location",
sum(lwa.sickle_male) as "Male",sum(lwa.sickle_female) as  "Female",sum(lwa.sickle_0_5) as "0-5",sum(lwa.sickle_5_15) as "5-15",
sum(lwa.sickle_15_45) as "15-45",sum(lwa.sickle_above_45) as "Above 45",sum(lwa.sickle_bpl) as "BPL",sum(lwa.sickle_apl) as "APL",
sum(lwa.sickle_sc) as "SC",sum(lwa.sickle_st) as "ST",sum(lwa.sickle_obc) as "OBC",sum(lwa.sickle_gen) as "GEN",
sum(lwa.sickle_abandon) as "Abandon",sum(lwa.sickle_married) as "Married",sum(lwa.sickle_unmarried) as "Unmarried",sum(lwa.sickle_widow) as "Widow",
sum(lwa.sickle_widower) as "Widower"
from location_hierchy_closer_det lhcd,location_wise_analytics lwa,location_master lm, prefered_language
where lwa.loc_id = lhcd.child_id  and lm.id = lhcd.parent_id 
and lhcd.parent_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth=1)
group by rollup((lm.name,lm.english_name,prefered_language.is_enlish))',true,'ACTIVE','ae0c323b-b314-4d35-87c8-4a663fd961fb'),
	 (1040,60512,'2019-04-22 17:33:39.494',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id','--2 PNC(Delivery Services Provided During The Year)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
 to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date,
to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
), member_det as (
	select r.member_id, r.pnc2_location_id as loc_id,
	r.unique_health_id, r.family_id, 
	r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.pnc2,''DD/MM/YYYY'') as pnc_date
	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, parameters p
	where r.pnc2_location_id  = l.child_id 
	and l.parent_id = p.location_id
	and r.pnc2 between p.from_date and p.to_date
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
	(select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	) 
	order by r.pnc2
	#limit_offset#
), loc_det as (
	select loc.loc_id,  
string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det)loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.pnc_date as "Pnc date",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','69503814-bae8-4338-8a4c-0cf3f2cf07c3'),
	 (1588,74840,'2020-04-11 16:31:57.545',1,'2021-01-13 20:22:06.427965','date_of_receipt,limit_offset,location_id','with location_det as (
	select child_id as loc_id
	from location_hierchy_closer_det lhc
	where 
	parent_id = #location_id# and depth = 1
)
,infra_info as (
	select
	hid.id as infra_id,
	hid.location_id,
	hid.name infra_name	
	from health_infrastructure_details  hid
	inner join location_hierchy_closer_det loch on loch.child_id = hid.location_id
	where loch.parent_id in (select distinct loc_id from location_det) and (is_covid_hospital or is_covid_lab)
	group by hid.id,hid.location_id,hid.name
 		
),
compo_avail as (
	select
	distinct on (health_infra_id)
	health_infra_id,rna_extraction,eg_available,confirmatory_assay,ag_path,test_capacity,receipt_date
	from covid19_lab_infrastructure_component_history
	where case when #date_of_receipt# is not null then receipt_date  < to_date(''#date_of_receipt#'',''MM/DD/YYYY'') else receipt_date < current_date end 
	order by health_infra_id asc,receipt_date desc
)
,final_det as (
	select 
	infra_id,
	location_id,
	infra_name,
	coalesce(rna_extraction,0) as rna_extraction,
	coalesce(eg_available,0) as eg_available,
	coalesce(confirmatory_assay,0) as confirmatory_assay,
	coalesce(ag_path,0) as ag_path,
	coalesce(test_capacity,0) as test_capacity,
	to_char(cast(receipt_date as timestamp),''DD/MM/YYYY HH24:MI:SS'') as last_updated_on
	from infra_info left join compo_avail on infra_info.infra_id = compo_avail.health_infra_id
	#limit_offset#
)
select
row_number() over () + cast(substring(''#limit_offset#'', position(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
location_id as hidden_location_id,
infra_name as "Lab Name",
rna_extraction as "No of RNA Extraction Available (Test)",
eg_available as "No of test available NIV primer and Probe (EG)",
confirmatory_assay as "No of test available-NIV primer and probe (Confirmatory assay)",
ag_path as "Ag Path no of reactions available",
test_capacity as "No of test can be performed with available resources as on today"
from final_det

union all

select 
null,
null,
''<b>Total</b>'',
sum(rna_extraction),
sum(eg_available),
sum(confirmatory_assay),
sum(ag_path),
sum(test_capacity)
from final_det',true,'ACTIVE','3cd74517-94ec-4c38-a503-1f953c5354bd'),
	 (53,1027,'2018-05-28 15:07:40.949',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#)
select ROW_NUMBER() over() as "Sr. No", coalesce(case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name else lm.name end,''<b>Total</b>'') as "Location",
case when sum(lwa.total_family) is null then 0 else sum(lwa.total_family) end as "No of Families",
case when sum(lwa.total_members) is null then 0 else sum(lwa.total_members) end as "No of Members",
case when sum(lwa.total_alive) is null then 0 else sum(lwa.total_alive) end as "Members Alive",
case when sum(lwa.total_male) is null then 0 else sum(lwa.total_male) end as "No of Males",
case when sum(lwa.total_female) is null then 0 else sum(lwa.total_female) end as "No of Females",
case when sum(lwa.total_women) is null then 0 else sum(lwa.total_women) end as "Women(15 to 49 Years)",
case when sum(lwa.total_children) is null then 0 else sum(lwa.total_children) end as "Children(0 to 5 Years)",
case when sum(lwa.total_adolescents) is null then 0 else sum(lwa.total_adolescents) end as "Adolescents(10-19 Years)" 
from location_wise_analytics lwa,location_master lm,location_hierchy_closer_det lhcd, prefered_language
where lhcd.child_id = lwa.loc_id and lhcd.parent_id = lm.id
and lhcd.parent_id in 
(select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1)
group by rollup((lm.name,lm.english_name,prefered_language.is_enlish))',true,'ACTIVE','a70a975a-171c-4414-8b0c-d2a5f9b05daa'),
	 (1272,60512,'2019-08-02 18:54:58.084',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','ea866af1-7145-4a0a-ab18-b8cd9b5bd45e'),
	 (1273,60512,'2019-08-02 18:54:58.105',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,loggedInUserId,location_id','with prefered_language as (
select 	case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end as is_enlish
from um_user where id = #loggedInUserId# 
), child_service_ids as (
	select distinct on (cmtc_child_screening_analytics_details.member_id)
	cmtc_child_screening_analytics_details.member_id
	from cmtc_child_screening_analytics_details
	where cmtc_child_screening_analytics_details.screening_id is not null
	and cmtc_child_screening_analytics_details.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and cmtc_child_screening_analytics_details.rch_child_service_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	and (cmtc_child_screening_analytics_details.muac < 11.5 
			or cmtc_child_screening_analytics_details.have_pedal_edema 
			or (cmtc_child_screening_analytics_details.sd_score = ''SD3'' or cmtc_child_screening_analytics_details.sd_score = ''SD4''))
	order by cmtc_child_screening_analytics_details.member_id,cmtc_child_screening_analytics_details.id desc
    #limit_offset#
)
select
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Name",
case when prefered_language.is_enlish then get_location_hierarchy_language_wise(imt_family.location_id, ''EN'')
				else get_location_hierarchy(imt_family.location_id) end as "Location"
from child_service_ids
inner join imt_member on child_service_ids.member_id = imt_member.id
inner join imt_family on imt_member.family_id = imt_family.family_id
inner join prefered_language on true',true,'ACTIVE','afa67e21-8654-4225-be71-29376a015596');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1267,60512,'2019-08-01 16:00:21.83',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','6bb1b534-2163-4107-9eff-6f623774a347'),
	 (1043,60512,'2019-04-22 17:35:52.271',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','95c32c21-4e68-42ff-bb84-3ab0607ef492'),
	 (1044,60512,'2019-04-22 17:35:52.293',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id','--4 PNC(Delivery Services Provided During The Year)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month# is null then null else ''#from_month#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when #to_month# is null then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' as to_date,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),member_det as (
	select r.member_id, r.pnc4_location_id as loc_id,
	r.unique_health_id, r.family_id, 
	r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.pnc4,''DD/MM/YYYY'') as pnc_date	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, parameters p
	where r.pnc4_location_id  = l.child_id
	and l.parent_id = p.location_id
	and r.pnc4 between p.from_date and p.to_date
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
	(select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	) 
	order by r.pnc4
	#limit_offset#
), loc_det as (
	select loc.loc_id,  
string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det)loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws(u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det)loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.pnc_date as "Pnc date",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','691cdd50-6ec2-44ae-84a9-b8475582738a'),
	 (642,409,'2019-02-19 19:22:01.866',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--TT1 given(ANC Services Provided During The Year)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
dates as (
SELECT to_date(concat(''04-01-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 1)),''MM-DD-YYYY'') as from_date
,to_date(concat(''03-31-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 2)),''MM-DD-YYYY'') as to_date
),member_det as (
	select r.member_id, r.tt1_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.tt1_given,''DD/MM/YYYY'') as tt1_given
	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, imt_member m
	, rch_pregnancy_registration_det p
	,dates
	
	where r.member_id = m.id and r.tt1_location_id  = l.child_id and r.pregnancy_reg_id = p.id
	and l.parent_id = #location_id#
	and r.tt1_given between dates.from_date and dates.to_date
	order by r.tt1_given
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2,prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.tt1_given as "TT1 given",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','63878ab7-e075-4836-87d6-86c1af882290'),
	 (1268,60512,'2019-08-01 16:00:21.848',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,loggedInUserId,location_id','with prefered_language as (
select 	case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end as is_enlish
from um_user where id = #loggedInUserId# 
), child_service_ids as (
	select distinct on (cmtc_child_screening_analytics_details.member_id)
	cmtc_child_screening_analytics_details.member_id
	from cmtc_child_screening_analytics_details
	where cmtc_child_screening_analytics_details.location_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
	and cmtc_child_screening_analytics_details.rch_child_service_date between
	(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	and (cmtc_child_screening_analytics_details.muac < 11.5 
			or cmtc_child_screening_analytics_details.have_pedal_edema 
			or (cmtc_child_screening_analytics_details.sd_score = ''SD3'' or cmtc_child_screening_analytics_details.sd_score = ''SD4''))
	order by cmtc_child_screening_analytics_details.member_id,cmtc_child_screening_analytics_details.id desc
    #limit_offset#
)
select
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
imt_member.unique_health_id as "Unique Health ID",
imt_member.family_id as "Family ID",
concat(imt_member.first_name,'' '',imt_member.middle_name,'' '',imt_member.last_name) as "Name",
case when prefered_language.is_enlish then get_location_hierarchy_language_wise(imt_family.location_id, ''EN'')
				else get_location_hierarchy(imt_family.location_id) end as "Location"
from child_service_ids
inner join imt_member on child_service_ids.member_id = imt_member.id
inner join imt_family on imt_member.family_id = imt_family.family_id
inner join prefered_language on true',true,'ACTIVE','2e604b1d-b650-4045-aebb-fbedbadcd8ea'),
	 (127,58981,'2019-01-10 11:53:00.628',1,'2021-01-13 20:22:06.427965','loggedInUserId','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#),
users as (
	select distinct created_by from ncd_member_breast_detail
	union
	select distinct created_by from ncd_member_cervical_detail
	union
	select distinct created_by from ncd_member_diabetes_detail
	union
	select distinct created_by from ncd_member_hypertension_detail
	union
	select distinct created_by from ncd_member_oral_detail
), aoi as (
	select usr.id as id, usr.user_name, usr.first_name, usr.last_name, 
	string_agg(loc_name,''<br>'') as aoi, 
	(select count(*) from ncd_member_breast_detail where created_by = usr.id) as breast,
	(select count(*) from ncd_member_cervical_detail where created_by = usr.id) as cervical,
	(select count(*) from ncd_member_diabetes_detail where created_by = usr.id) as diabetes,
	(select count(*) from ncd_member_hypertension_detail where created_by = usr.id) as hyper,
	(select count(*) from ncd_member_oral_detail where created_by = usr.id) as oral
	from (select usr.id,u_loc.loc_id,string_agg(case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name else lm.name end ,'' >'' order by lh.depth desc) as loc_name 
	from (select distinct usr.id from um_user usr,um_user_location u_loc,location_hierchy_closer_det lcloser 
	where usr.id in (select * from users) and usr.id = u_loc.user_id and u_loc.state = ''ACTIVE''
	and lcloser.child_id = u_loc.loc_id
	) as usr, um_user_location u_loc, location_hierchy_closer_det lh, location_master lm ,prefered_language
	where usr.id = u_loc.user_id and u_loc.state = ''ACTIVE'' and u_loc.loc_id = lh.child_id and lh.parent_id = lm.id 
	group by usr.id,u_loc.loc_id) as user_loc_det, um_user usr
	where user_loc_det.id = usr.id 
	group by usr.id
	order by aoi
)
select  row_number() over() as "Sr. no", 
aoi.user_name as "User Name", 
aoi.first_name || '' '' || aoi.last_name as "Name",
aoi.aoi as "Area of Intervention",
breast as "Breast Form Filled",
cervical as "Cervical Form Filled",
diabetes as "Diabetes Form Filled",
hyper as "Hypertension Form Filled",
oral as "Oral Form Filled"
from aoi 
union all
select null, null, null, ''<b>Total Forms Filled</b>'',
sum(breast), sum(cervical), sum(diabetes), sum(hyper), sum(oral)
from aoi',true,'ACTIVE','e761dc24-22fb-4f36-9375-b4802102db57'),
	 (85,1027,'2018-09-26 19:27:57.124',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#)
select  row_number() over(order by loc.name) as "Sr no",case when ( prefered_language.is_enlish and (loc.english_name is not null)) then loc.english_name else loc.name end as "Location",loc_wise_summary."importedFromEmamta" as "Imported From eMamta",
loc_wise_summary."importedFromEmamtaMember" as "Imported eMamta Member",
loc_wise_summary."unverifiedFHS" as "To be processed",loc_wise_summary."inReverification" as "In Reverification",
loc_wise_summary."verifiedFHS" as "Verified",loc_wise_summary."archivedFHS" as "Archived",
loc_wise_summary."newFamily" as "New Families Added",
loc_wise_summary."newFamily" + loc_wise_summary."verifiedFHS" as "Total Families in TeCHO+",
loc_wise_summary."totalMember" as "Total Members in TeCHO+",
case when loc_wise_summary."importedFromEmamta" = 0 then 0 else
round(((loc_wise_summary."verifiedFHS" + loc_wise_summary."archivedFHS")*100)/loc_wise_summary."importedFromEmamta"\:\:numeric,2) end as "Percentage" 
from (
select 
sel_loc_closer.parent_id as id,
coalesce(sum(fhs_imported_from_emamta_family),0) as "importedFromEmamta" 
,coalesce(sum(fhs_imported_from_emamta_member),0) as "importedFromEmamtaMember" 
,coalesce(sum(fhs_to_be_processed_family),0) as "unverifiedFHS" 
,coalesce(sum(fhs_verified_family),0) as "verifiedFHS" 
,coalesce(sum(fhs_archived_family),0) as "archivedFHS" 
,coalesce(sum(fhs_new_family),0)  as "newFamily" 
,coalesce(sum(fhs_total_member),0) as "totalMember" 
,coalesce(sum(fhs_inreverification_family),0) as "inReverification" 
from  location_wise_analytics loc_anlyts inner join location_hierchy_closer_det sel_loc_closer
on loc_anlyts.loc_id = sel_loc_closer.child_id
inner join location_hierchy_closer_det p1 on p1.child_id =  loc_anlyts.loc_id and p1.parent_loc_type = ''U''
inner join location_hierchy_closer_det p2 on p2.child_id =  loc_anlyts.loc_id and p2.parent_loc_type = ''B''
where sel_loc_closer.parent_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1 )
group by sel_loc_closer.parent_id) loc_wise_summary 
inner join location_master loc 
on loc_wise_summary.id = loc.id
cross join prefered_language
left join (select parent_id,count(*) as worker_cnt from (select Distinct sel_loc_closer.parent_id, um_user.id from  um_user,um_user_location user_loc,location_hierchy_closer_det sel_loc_closer
	where role_id = (select id from um_role_master where name = ''FHW'') and um_user.state = ''ACTIVE'' and um_user.id = user_loc.user_id and user_loc.state = ''ACTIVE'' and
	user_loc.loc_id = sel_loc_closer.child_id and sel_loc_closer.parent_id in (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1 )) as temp group by parent_id
) as worker_det on worker_det.parent_id = loc.id
/*inner join location_hierchy_closer_det parent on parent.child_id = loc.id and parent.depth = 1*/
order by loc.name',true,'ACTIVE','45749dd9-2927-498c-b8fa-125f204aa2f6'),
	 (96,1027,'2018-10-24 15:12:53.299',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id','with 
prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#)
select ROW_NUMBER() over() as "Sr No",res.name as "Location",res."Male",res."Female",res."Male" + res."Female" as "Total",
res."Male ",res."Female ",res."Male "+res."Female " as "Total ",(res."Male" + res."Female")-(res."Male "+res."Female ") as "Difference"
from
(select parent.name,sum(case when gender = ''M'' then 1 else 0 end) as "Male",
sum(case when gender = ''F'' then 1 else 0 end) as "Female",
sum(case when gender = ''M'' and pregnancy_outcome = ''LBIRTH'' then 1 else 0 end) as "Male ",
sum(case when gender = ''F'' and pregnancy_outcome = ''LBIRTH'' then 1 else 0 end) as "Female "
from (select lm.id,case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name else lm.name end as name from location_master lm cross join prefered_language inner join location_hierchy_closer_det lhcd  on 
lm.id = lhcd.child_id and lhcd.parent_id = #location_id# and depth = 1) parent inner join 
location_hierchy_closer_det lhcd on lhcd.parent_id = parent.id  
left join rch_wpd_child_master rwcm  on rwcm.location_id = lhcd.child_id
where (#from_date# is not null and created_on >=(case when #from_date# is null then ''01/01/1970'' else ''#from_date#'' end)\:\:Date)
and (#to_date# is not null and created_on <(case when #to_date# is null then ''01/01/1970'' else (date (case when #to_date# is null then ''01/01/1970'' else ''#to_date#'' end) + integer ''1'')end)\:\:Date)
and extract (year from age(date_of_delivery)) between 0 and 1
group by lhcd.parent_id,parent.name ) res',true,'ACTIVE','6ea2778c-f338-43ea-8df6-3d79922dea45'),
	 (81,1027,'2018-09-21 17:39:12.491',1,'2023-07-17 15:23:34.634','limit_offset,loggedInUserId,location_id','with prefered_language as(
select (case
		when report_preferred_language = ''EN'' then true
		else false
	end) as is_enlish
from um_user where id = #loggedInUserId#)
,pregnancy_analytics_details as(
select *
from rch_pregnancy_analytics_details
where rch_pregnancy_analytics_details.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')
and rch_pregnancy_analytics_details.preg_reg_state in (''PENDING'',''PREGNANT'')
and rch_pregnancy_analytics_details.member_current_location_id
in (select child_id from location_hierchy_closer_det where parent_id = #location_id#)
order by rch_pregnancy_analytics_details.lmp_date
#limit_offset#
),member_location_detail as (
select loc.id as loc_id,
STRING_AGG(case when ( prefered_language.is_enlish and (lm1.english_name is not null)) then lm1.english_name else lm1.name end,'''') as level1,
STRING_AGG(case when ( prefered_language.is_enlish and (lm2.english_name is not null)) then lm2.english_name else lm2.name end,'''') as level2,
STRING_AGG(case when ( prefered_language.is_enlish and (lm3.english_name is not null)) then lm3.english_name else lm3.name end,'''') as level3,
STRING_AGG(case when ( prefered_language.is_enlish and (lm4.english_name is not null)) then lm4.english_name else lm4.name end,'''')  as level4,
STRING_AGG(case when ( prefered_language.is_enlish and (lm5.english_name is not null)) then lm5.english_name else lm5.name end,'''') as level5,
STRING_AGG(case when ( prefered_language.is_enlish and (lm6.english_name is not null)) then lm6.english_name else lm6.name end,'''') as level6,
STRING_AGG(case when ( prefered_language.is_enlish and (lm7.english_name is not null)) then lm7.english_name else lm7.name end,'''') as level7,
case when ( prefered_language.is_enlish and (loc.english_name is not null)) then loc.english_name else loc.name end as loc_name
from location_hierchy_closer_det lhcd
inner join location_master loc on loc.id = lhcd.child_id
left join location_master lm1 on lm1.id = lhcd.parent_id and lhcd.depth = 0
left join location_master lm2 on lm2.id = lhcd.parent_id and lhcd.depth = 1
left join location_master lm3 on lm3.id = lhcd.parent_id and lhcd.depth = 2
left join location_master lm4 on lm4.id = lhcd.parent_id and lhcd.depth = 3
left join location_master lm5 on lm5.id = lhcd.parent_id and lhcd.depth = 4
left join location_master lm6 on lm6.id = lhcd.parent_id and lhcd.depth = 5
left join location_master lm7 on lm7.id = lhcd.parent_id and lhcd.depth = 6 cross join prefered_language
where lhcd.child_id in (select distinct child_id from location_hierchy_closer_det where parent_id = 3)
	group by loc_id,loc_name
),asha_det as(
select distinct um_user_location.loc_id,um_user.first_name || '' '' || um_user.last_name as asha_name
,um_user.contact_number
from um_user_location,um_user
where um_user_location.loc_id in(select distinct member_current_location_id from pregnancy_analytics_details)
and um_user_location.user_id= um_user.id and um_user.state = ''ACTIVE'' and um_user_location.state = ''ACTIVE''
and um_user.role_id = 24
)
select ROW_NUMBER() over ()+SUBSTRING (''#limit_offset#'',POSITION(''offset'' in ''#limit_offset#'')+7)\:\:int as "Sr No"
,imt_member.first_name as "Mother First Name",imt_member.middle_name as "Mother Middle Name",
imt_member.last_name as "Mother Last Name",imt_member.unique_health_id as "Mother Health Id",
case when reg_service_date is not null then  to_char(reg_service_date,''DD/MM/YYYY'') else ''NA'' end as "Registration Date",
case when pregnancy_analytics_details.lmp_date is null then ''NA'' else to_char(pregnancy_analytics_details.lmp_date,''DD/MM/YYYY'') end as "LMP Date",
case when pregnancy_analytics_details.lmp_date is not null then to_char(pregnancy_analytics_details.lmp_date + interval ''281 days'',''DD/MM/YYYY'') else ''NA'' end as "EDD",
case when concat(imt_family.address1,imt_family.address2) = '''' then ''NA'' else concat(imt_family.address1,'' '',imt_family.address2) end as "Address"
,case when member_location_detail.loc_name is null then ''NA'' else member_location_detail.loc_name end as "Area"
,level6 as "Village",level5 as "Subcenter",level4 as "PHC",level3 as "Block",level2 as "District",level1 as "State"
,coalesce(imt_member.mobile_number,''NA'') as "Mother Mobile No",
case when hsbn.id is not null then hsbn.first_name || '' '' || hsbn.last_name else ''NA'' end as "Husband Name",
coalesce(hsbn.mobile_number,''NA'') as "Husband Mobile No",
case when anc1 is not null then  to_char(anc1,''DD/MM/YYYY'') else ''NA'' end as "ANC1",
case when anc2 is not null then  to_char(anc2,''DD/MM/YYYY'') else ''NA'' end as "ANC2",
case when anc3 is not null then  to_char(anc3,''DD/MM/YYYY'') else ''NA'' end as "ANC3",
case when anc4 is not null then  to_char(anc4,''DD/MM/YYYY'') else ''NA'' end as "ANC4",
case when tt1_given is not null then  to_char(tt1_given,''DD/MM/YYYY'') else ''NA'' end as "TT1",
case when tt2_tt_booster_given is not null then  to_char(tt2_tt_booster_given,''DD/MM/YYYY'') else ''NA'' end as "TT2_TT_Booster",
case when asha_det.asha_name is not null then asha_det.asha_name else ''NA'' end as "Asha Name",
case when asha_det.contact_number is not null then asha_det.contact_number else ''NA''  end as "Asha Mobile No"
from
pregnancy_analytics_details
inner join imt_member on imt_member.id = pregnancy_analytics_details.member_id
inner join imt_family on imt_family.family_id = imt_member.family_id
left join imt_member hsbn on hsbn.family_id = imt_member.family_id and hsbn.first_name = imt_member.middle_name
left join member_location_detail on pregnancy_analytics_details.member_current_location_id = member_location_detail.loc_id
left join asha_det on pregnancy_analytics_details.member_current_location_id = asha_det.loc_id',true,'ACTIVE','ee79f53d-1302-4a7f-95a8-cfd2f09f15e4'),
	 (644,409,'2019-02-19 19:35:49.73',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--TT2+TT Booster(ANC Services Provided During The Year)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 dates as (
SELECT to_date(concat(''04-01-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 1)),''MM-DD-YYYY'') as from_date
,to_date(concat(''03-31-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 2)),''MM-DD-YYYY'') as to_date
),member_det as (
	select r.member_id, r.tt2_tt_booster_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.tt2_tt_booster_given,''DD/MM/YYYY'') as tt2_tt_booster_given
	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, imt_member m
	, rch_pregnancy_registration_det p
	,dates
	
	where r.member_id = m.id and r.tt2_tt_booster_location_id  = l.child_id and r.pregnancy_reg_id = p.id
	and l.parent_id = #location_id#
	and r.tt2_tt_booster_given between dates.from_date and dates.to_date
	order by r.tt2_tt_booster_given
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2,prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.tt2_tt_booster_given as "TT2/TTBooster given",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','d1b5350d-25a6-42a2-b9eb-e6c0be7849c2');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1104,60512,'2019-05-01 18:23:04.903',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id','with location_ids as(
	select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1
),
prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#),
screened_count as(
	select location_master.name,location_master.id,
	sum(case when rch_child_cp_suspects.status is null and imt_member.gender=''M'' then 1 else 0 end) as screened_male,
	sum(case when rch_child_cp_suspects.status is null and imt_member.gender=''F'' then 1 else 0 end) as screened_female,
	sum(case when rch_child_cp_suspects.status is null then 1 else 0 end) as total_screened
	from location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id
	inner join rch_child_cp_suspects on location_hierchy_closer_det.child_id = rch_child_cp_suspects.location_id
	inner join imt_member on rch_child_cp_suspects.member_id = imt_member.id
	inner join location_master on location_ids.child_id = location_master.id
	where rch_child_cp_suspects.status is null
	and rch_child_cp_suspects.created_on between 
		(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	group by location_master.name,location_master.id
),result_count as (
	select location_master.name,location_master.id,
	sum(case when rch_child_cp_suspects.status=''DD'' and imt_member.gender=''M'' then 1 else 0 end) as delayed_male,
	sum(case when rch_child_cp_suspects.status=''DD'' and imt_member.gender=''F'' then 1 else 0 end) as delayed_female,
	sum(case when rch_child_cp_suspects.status=''DD'' then 1 else 0 end) as delayed_total,
	sum(case when rch_child_cp_suspects.status=''ND'' and imt_member.gender=''M'' then 1 else 0 end) as reviewed_male,
	sum(case when rch_child_cp_suspects.status=''ND'' and imt_member.gender=''F'' then 1 else 0 end) as reviewed_female,
	sum(case when rch_child_cp_suspects.status=''ND'' then 1 else 0 end) as reviewed_total,
	sum(case when rch_child_cp_suspects.status=''TC'' and imt_member.gender=''M'' then 1 else 0 end) as confirmed_male,
	sum(case when rch_child_cp_suspects.status=''TC'' and imt_member.gender=''F'' then 1 else 0 end) as confirmed_female,
	sum(case when rch_child_cp_suspects.status=''TC'' then 1 else 0 end) as confirmed_total
	from location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id
	inner join rch_child_cp_suspects on location_hierchy_closer_det.child_id = rch_child_cp_suspects.location_id
	inner join imt_member on rch_child_cp_suspects.member_id = imt_member.id
	inner join location_master on location_ids.child_id = location_master.id
	where rch_child_cp_suspects.status is not null
	and rch_child_cp_suspects.remarks_date between 
		(case when #from_date# is null then ''01/01/1970'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) 
	and 
	(case when #to_date# is null then ''01/01/1970'' else to_date(''#to_date#'',''MM/DD/YYYY'') end)+ interval ''1 day'' - interval ''00:00:01''
	group by location_master.name,location_master.id
)
,det as(
	select row_number() over() as sr_no,
	case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name else location_master.name end as loc,
	location_master.id as hidden_location_id,
	coalesce(screened_count.screened_male,0) as screened_male,
	coalesce(screened_count.screened_female,0) as screened_female,
	coalesce(screened_count.total_screened,0) as total_screened,
	coalesce(result_count.delayed_male,0) as delayed_male,
	coalesce(result_count.delayed_female,0) as delayed_female,
	coalesce(result_count.delayed_total,0) as delayed_total,
	coalesce(result_count.reviewed_male,0) as reviewed_male,
	coalesce(result_count.reviewed_female,0) as reviewed_female,
	coalesce(result_count.reviewed_total,0) as reviewed_total,
	coalesce(result_count.confirmed_male,0) as confirmed_male,
	coalesce(result_count.confirmed_female,0) as confirmed_female,
	coalesce(result_count.confirmed_total,0) as confirmed_total
	from location_ids
	left join screened_count on location_ids.child_id = screened_count.id
	left join result_count on location_ids.child_id = result_count.id
	inner join location_master on location_ids.child_id = location_master.id
	cross join prefered_language

)
select row_number() over() as "Sr. no",
det.loc as "Location",
det.hidden_location_id,
det.screened_male as "Screened Boys",
det.screened_female as "Screened Girls",
det.total_screened as "Total Screened",
det.delayed_male as "Delayed Boys",
det.delayed_female as "Delayed Girls",
det.delayed_total as "Total Delayed",
det.reviewed_male as "Reviewed Boys",
det.reviewed_female as "Reviewed Girls",
det.reviewed_total as "Total Reviewed",
det.confirmed_male as "Confirmed Boys",
det.confirmed_female as "Confirmed Girls",
det.confirmed_total as "Total Confirmed"
from det
union all
select null,
''<b>Total<b>'',
#location_id#,
sum(det.screened_male),
sum(det.screened_female),
sum(det.total_screened),
sum(det.delayed_male),
sum(det.delayed_female),
sum(det.delayed_total),
sum(det.reviewed_male),
sum(det.reviewed_female),
sum(det.reviewed_total),
sum(det.confirmed_male),
sum(det.confirmed_female),
sum(det.confirmed_total)
from det',true,'ACTIVE','01617c12-8d8f-496c-8c17-b4f3f6f32ec1'),
	 (1177,409,'2019-06-25 21:01:36.807',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id','with 
prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#),
loc_det as (
select
	*
from
	location_hierchy_closer_det
where
	parent_id = #location_id#
	and "depth" = 1 
),dates as (
select
	to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date ,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end, ''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_date 
),ncd_member_breast_detail_cnt as (
select
	lhc.parent_id as loc_id,
	count(*) as member_breast_detail_cnt
from
	location_hierchy_closer_det lhc ,
	ncd_member_breast_detail nmb,
	dates
where
	nmb.location_id = lhc.child_id
	and lhc.parent_id in (
		select child_id
	from
		loc_det)
	and nmb.created_on between dates.from_date and dates.to_date
group by
	lhc.parent_id )
,ncd_member_cervical_detail_cnt as(
select
	lhc.parent_id as loc_id,
	count(*) as member_cervical_detail_cnt
from
	location_hierchy_closer_det lhc ,
	ncd_member_cervical_detail nmb,
	dates
where
	nmb.location_id = lhc.child_id
	and lhc.parent_id in (
		select child_id
	from
		loc_det)
	and nmb.created_on between dates.from_date and dates.to_date
group by
	lhc.parent_id ),
ncd_member_diabetes_detail_cnt as(
select
	lhc.parent_id as loc_id,
	count(*) as member_diabetes_detail_cnt
from
	location_hierchy_closer_det lhc ,
	ncd_member_diabetes_detail nmb,
	dates
where
	nmb.location_id = lhc.child_id
	and lhc.parent_id in (
		select child_id
	from
		loc_det)
	and nmb.created_on between dates.from_date and dates.to_date
group by
	lhc.parent_id ),
ncd_member_hypertension_detail_cnt as(
select
	lhc.parent_id as loc_id,
	count(*) as member_hypertension_detail_cnt
from
	location_hierchy_closer_det lhc ,
	ncd_member_hypertension_detail nmb,
	dates
where
	nmb.location_id = lhc.child_id
	and lhc.parent_id in (
		select child_id
	from
		loc_det)
	and nmb.created_on between dates.from_date and dates.to_date
group by
	lhc.parent_id ),
ncd_member_oral_detail_cnt as (
select
	lhc.parent_id as loc_id,
	count(*) as member_oral_detail_cnt
from
	location_hierchy_closer_det lhc ,
	ncd_member_oral_detail nmb,
	dates
where
	nmb.location_id = lhc.child_id
	and lhc.parent_id in (
		select child_id
	from
		loc_det)
	and nmb.created_on between dates.from_date and dates.to_date
group by
	lhc.parent_id 
	), final_det as ( 
select
	case when ( prefered_language.is_enlish and (l.english_name is not null)) then l.english_name else l.name end as location
	,coalesce(ncd_member_breast_detail_cnt.member_breast_detail_cnt,0) as member_breast_detail_cnt
	,coalesce(ncd_member_cervical_detail_cnt.member_cervical_detail_cnt,0) as member_cervical_detail_cnt
	,coalesce(ncd_member_diabetes_detail_cnt.member_diabetes_detail_cnt,0) as member_diabetes_detail_cnt
	,coalesce(ncd_member_hypertension_detail_cnt.member_hypertension_detail_cnt,0) as member_hypertension_detail_cnt
	,coalesce(ncd_member_oral_detail_cnt.member_oral_detail_cnt,0) as member_oral_detail_cnt
from
	loc_det ld
inner join location_master l on
	ld.child_id = l.id
left join ncd_member_breast_detail_cnt on ncd_member_breast_detail_cnt.loc_id = ld.child_id
left join ncd_member_cervical_detail_cnt on ncd_member_cervical_detail_cnt.loc_id = ld.child_id
left join ncd_member_diabetes_detail_cnt on ncd_member_diabetes_detail_cnt.loc_id = ld.child_id
left join ncd_member_hypertension_detail_cnt on ncd_member_hypertension_detail_cnt.loc_id = ld.child_id
left join ncd_member_oral_detail_cnt on ncd_member_oral_detail_cnt.loc_id = ld.child_id
cross join prefered_language
order by location
)
select row_number() over() as "Sr. no"
,location as "Location"
,member_breast_detail_cnt as "Breast Form Filled"
,member_cervical_detail_cnt as "Cervical Form Filled"
,member_diabetes_detail_cnt as "Diabetes Form Filled"
,member_hypertension_detail_cnt as "Hypertension Form Filled"
,member_oral_detail_cnt as "Oral Form Filled"
from final_det 
union all
select null
,''Total''
,sum(member_breast_detail_cnt)
,sum(member_cervical_detail_cnt)
,sum(member_diabetes_detail_cnt)
,sum(member_hypertension_detail_cnt)
,sum(member_oral_detail_cnt)
from final_det',true,'ACTIVE','c7444c65-e0dc-4acf-91c4-2f8d5a0491dc'),
	 (646,409,'2019-02-19 19:56:34.071',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--Early ANC(ANC Services Provided During The Year)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 dates as (
SELECT to_date(concat(''04-01-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 1)),''MM-DD-YYYY'') as from_date
,to_date(concat(''03-31-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 2)),''MM-DD-YYYY'') as to_date
),member_det as (
	select r.member_id, r.native_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.reg_service_date,''DD/MM/YYYY'') as reg_date
	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, imt_member m
	, rch_pregnancy_registration_det p
	,dates
	
	where r.member_id = m.id and r.native_location_id  = l.child_id and r.pregnancy_reg_id = p.id
	and r.early_anc = true
	and l.parent_id = #location_id#
	and r.reg_service_date between dates.from_date and dates.to_date
	order by r.reg_service_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2,prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.reg_date as "Reg_date",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','0bbdb5ed-1fb7-4a2e-80e1-f46898868c70'),
	 (647,409,'2019-02-19 20:04:03.393',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','40f7b479-43ff-42f1-b8fd-f067ea5b7ebc'),
	 (648,409,'2019-02-19 20:04:03.406',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--1 ANC(ANC Services Provided During The Year)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
dates as (
SELECT to_date(concat(''04-01-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 1)),''MM-DD-YYYY'') as from_date
,to_date(concat(''03-31-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 2)),''MM-DD-YYYY'') as to_date
),member_det as (
	select r.member_id, r.anc1_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.anc1,''DD/MM/YYYY'') as anc_date
	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, imt_member m
	, rch_pregnancy_registration_det p
	,dates
	
	where r.member_id = m.id and r.anc1_location_id  = l.child_id and r.pregnancy_reg_id = p.id
	and l.parent_id = #location_id#
	and r.anc1 between dates.from_date and dates.to_date
	order by r.anc1
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2,prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.anc_date as "Anc date",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','b108fe5f-eb8e-4d31-99bb-5b243b2846d6'),
	 (649,409,'2019-02-19 20:08:12.663',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','89b775f3-3d5e-4788-906f-1e4b7e4c1d13'),
	 (650,409,'2019-02-19 20:08:12.674',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--2 ANC(ANC Services Provided During The Year)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
dates as (
SELECT to_date(concat(''04-01-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 1)),''MM-DD-YYYY'') as from_date
,to_date(concat(''03-31-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 2)),''MM-DD-YYYY'') as to_date
),member_det as (
	select r.member_id, r.anc2_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.anc2,''DD/MM/YYYY'') as anc_date
	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, imt_member m
	, rch_pregnancy_registration_det p
	,dates
	
	where r.member_id = m.id and r.anc2_location_id  = l.child_id and r.pregnancy_reg_id = p.id
	and l.parent_id = #location_id#
	and r.anc2 between dates.from_date and dates.to_date
	order by r.anc2
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id,  
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2,prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.anc_date as "Anc date",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','a7efc8c5-5caa-4431-8ae1-4cc34e5df433'),
	 (652,409,'2019-02-19 20:10:54.309',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--3 ANC(ANC Services Provided During The Year)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
dates as (
SELECT to_date(concat(''04-01-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 1)),''MM-DD-YYYY'') as from_date
,to_date(concat(''03-31-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 2)),''MM-DD-YYYY'') as to_date
),member_det as (
	select r.member_id, r.anc3_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.anc3,''DD/MM/YYYY'') as anc_date
	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, imt_member m
	, rch_pregnancy_registration_det p
	,dates
	
	where r.member_id = m.id and r.anc3_location_id  = l.child_id and r.pregnancy_reg_id = p.id
	and l.parent_id = #location_id#
	and r.anc3 between dates.from_date and dates.to_date
	order by r.anc3
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id,  
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2,prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.anc_date as "Anc date",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','3d2e248e-102f-44c4-a2b4-42a0562f4f52'),
	 (1541,74841,'2020-03-12 14:10:29.613',1,'2021-01-13 20:22:06.427965','location_id','with location_ids as(
	select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1
),
result_set as (
select
	lch.parent_id as loc_id,
	sum(case when status = ''Suspected'' and modified_by = 204 then 1 else 0 end) as suspected_by_mphw,
	sum(case when status = ''Suspected'' and modified_by = 30 then 1 else 0 end) as suspected_by_fhw,

	sum(case when type_of_disease = ''Malaria'' and status = ''Suspected'' then 1 else 0 end) as suspected_malaria,
	sum(case when type_of_disease = ''Chikungunya'' and status = ''Suspected'' then 1 else 0 end) as suspected_chikungunya,
	sum(case when type_of_disease = ''Dengue'' and status = ''Suspected'' then 1 else 0 end) as suspected_dengue,
	sum(case when type_of_disease = ''TB'' and status = ''Suspected'' then 1 else 0 end) as suspected_tb,
	sum(case when type_of_disease = ''Leprosy'' and status = ''Suspected'' then 1 else 0 end) as suspected_leprosy,
	
	sum(case when type_of_disease = ''Malaria'' and status in (''Confirmed'', ''Treatment Started'') then 1 else 0 end) as examined_mo_malaria,
	sum(case when type_of_disease = ''Chikungunya'' and status in (''Confirmed'', ''Treatment Started'') then 1 else 0 end) as examined_mo_chikungunya,
	sum(case when type_of_disease = ''Dengue'' and status in (''Confirmed'', ''Treatment Started'') then 1 else 0 end) as examined_mo_dengue,
	sum(case when type_of_disease = ''TB'' and status in (''Confirmed'', ''Treatment Started'') then 1 else 0 end) as examined_mo_tb,
	sum(case when type_of_disease = ''Leprosy'' and status in (''Confirmed'', ''Treatment Started'') then 1 else 0 end) as examined_mo_leprosy,

	sum(case when type_of_disease = ''Malaria'' and status = ''Confirmed'' then 1 else 0 end) as positive_malaria,
	sum(case when type_of_disease = ''Chikungunya'' and status = ''Confirmed'' then 1 else 0 end) as positive_chikungunya,
	sum(case when type_of_disease = ''Dengue'' and status = ''Confirmed'' then 1 else 0 end) as positive_dengue,
	sum(case when type_of_disease = ''TB'' and status = ''Confirmed'' then 1 else 0 end) as positive_tb,
	sum(case when type_of_disease = ''Leprosy'' and status = ''Confirmed'' then 1 else 0 end) as positive_leprosy,
	
	sum(case when type_of_disease = ''Malaria'' and status = ''Treatment Started'' then 1 else 0 end) as treatment_malaria,
	sum(case when type_of_disease = ''Chikungunya'' and status = ''Treatment Started'' then 1 else 0 end) as treatment_chikungunya,
	sum(case when type_of_disease = ''Dengue'' and status = ''Treatment Started'' then 1 else 0 end) as treatment_dengue,
	sum(case when type_of_disease = ''TB'' and status = ''Treatment Started'' then 1 else 0 end) as treatment_tb,
	sum(case when type_of_disease = ''Leprosy'' and status = ''Treatment Started'' then 1 else 0 end) as treatment_leprosy
	
	from wt_cfhc_suspected_disease wcsd
	inner join location_hierchy_closer_det lch
	on lch.child_id = wcsd.location_id
	and lch.parent_id in (select child_id from location_hierchy_closer_det where parent_id in (select distinct child_id from location_ids))
	group by lch.parent_id
)
select 
	row_number() over() as "Sr No.",
	location_master.name as "Location",
	coalesce(suspected_malaria, 0) as "Suspected for Malaria",
	coalesce(suspected_chikungunya, 0) as "Suspected for Chickengunya",
	coalesce(suspected_dengue, 0) as "Suspected for Dengue",
	coalesce(suspected_tb, 0) as "Suspected for TB",
	coalesce(suspected_leprosy, 0) as "Suspected for Leprosy",
	coalesce(suspected_by_fhw, 0) as "Total Suspeceted identified by fhw",
	coalesce(suspected_by_mphw, 0) as "Total Suspeceted identified by mphw",
	coalesce(examined_mo_malaria, 0) as "Examined by MO for Malaria",
	coalesce(examined_mo_chikungunya, 0) as "Examined by MO for Chickengunya",
	coalesce(examined_mo_dengue, 0) as "Examined by MO for Dengue",
	coalesce(examined_mo_tb, 0) as "Examined by MO for TB",
	coalesce(examined_mo_leprosy, 0) as "Examined by MO for Leprosy",
	coalesce(positive_malaria, 0) as "Found positive for Malaria",
	coalesce(positive_chikungunya, 0) as "Found positive for Chickengunya",
	coalesce(positive_dengue, 0) as "Found positive for Dengue",
	coalesce(positive_tb, 0) as "Found positive for TB",
	coalesce(positive_leprosy, 0) as "Found positive for Leprosy",
	coalesce(treatment_malaria, 0) as "Treatment started for Malaria",
	coalesce(treatment_chikungunya, 0) as "Treatment started for Chickengunya",
	coalesce(treatment_dengue, 0) as "Treatment started for Dengue",
	coalesce(treatment_tb, 0) as "Treatment started for TB",
	coalesce(treatment_leprosy, 0) as "Treatment started for Leprosy"
from location_ids 
inner join location_master on location_master.id = location_ids.child_id
left join result_set rs on rs.loc_id = location_ids.child_id
union all
select 
null,
''<b>Total<b>'',
coalesce(sum(suspected_malaria), 0),
coalesce(sum(suspected_chikungunya), 0),
coalesce(sum(suspected_dengue), 0),
coalesce(sum(suspected_tb), 0),
coalesce(sum(suspected_leprosy), 0),
coalesce(sum(suspected_by_fhw), 0),
coalesce(sum(suspected_by_mphw), 0),
coalesce(sum(examined_mo_malaria), 0),
coalesce(sum(examined_mo_chikungunya), 0),
coalesce(sum(examined_mo_dengue), 0),
coalesce(sum(examined_mo_tb), 0),
coalesce(sum(examined_mo_leprosy), 0),
coalesce(sum(positive_malaria), 0),
coalesce(sum(positive_chikungunya), 0),
coalesce(sum(positive_dengue), 0),
coalesce(sum(positive_tb), 0),
coalesce(sum(positive_leprosy), 0),
coalesce(sum(treatment_malaria), 0),
coalesce(sum(treatment_chikungunya), 0),
coalesce(sum(treatment_dengue), 0),
coalesce(sum(treatment_tb), 0),
coalesce(sum(treatment_leprosy), 0)
from location_ids 
inner join location_master on location_master.id = location_ids.child_id
left join result_set rs on rs.loc_id = location_ids.child_id',true,'ACTIVE','30d58f10-2e8e-43ea-b480-a0d2b0161c60'),
	 (654,409,'2019-02-19 20:12:35.434',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--4 ANC(ANC Services Provided During The Year)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 dates as (
SELECT to_date(concat(''04-01-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 1)),''MM-DD-YYYY'') as from_date
,to_date(concat(''03-31-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 2)),''MM-DD-YYYY'') as to_date
),member_det as (
	select r.member_id, r.anc4_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.anc4,''DD/MM/YYYY'') as anc_date
	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, imt_member m
	, rch_pregnancy_registration_det p
	,dates
	
	where r.member_id = m.id and r.anc4_location_id  = l.child_id and r.pregnancy_reg_id = p.id
	and l.parent_id = #location_id#
	and r.anc4 between dates.from_date and dates.to_date
	order by r.anc4
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id,  
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2,prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.anc_date as "Anc date",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','7b8a4712-1e51-4908-aba2-c672bc327051');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (658,409,'2019-02-19 20:51:30.427',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--MTP(ANC Services Provided During The Year)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
dates as (
SELECT to_date(concat(''04-01-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 1)),''MM-DD-YYYY'') as from_date
,to_date(concat(''03-31-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 2)),''MM-DD-YYYY'') as to_date
),member_det as (
	select r.member_id, r.delivery_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.date_of_delivery, ''DD/MM/YYYY'') as dod
	,to_char(r.delivery_reg_date,''DD/MM/YYYY'') as reg_date
	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, imt_member m
	, rch_pregnancy_registration_det p
	,dates
	
	where r.member_id = m.id and r.delivery_location_id  = l.child_id and r.pregnancy_reg_id = p.id
	and r.delivery_outcome in (''MTP'')
	and l.parent_id = #location_id#
	and r.delivery_reg_date between dates.from_date and dates.to_date
	order by r.delivery_reg_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id,  
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.reg_date as "Registration date",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.dod as "MTP Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','b242b7d8-f213-4b60-82b4-7da4d9a04a01'),
	 (1542,409,'2020-03-23 01:00:35.869',1,'2021-01-13 20:22:06.427965','limit_offset,location_id','select concat_ws('' '',m.first_name,m.middle_name,m.last_name) as "Name"
,m.unique_health_id as "Techo Id"
,m.family_id as "Family Id"
,to_char(m.dob,''DD/MM/YYYY'') as "DOB"
,extract (year from age(m.dob)) as "Age"
,get_location_hierarchy(imgl.loc_id) as "Location"
,imgl.contact_detail
from imt_member_geniatric_list imgl,imt_member m
,location_hierchy_closer_det lhc
where imgl.member_id = m.id
and imgl.loc_id = lhc.child_id 
and lhc.parent_id = #location_id#
order by  "Location","Age" desc
#limit_offset#',true,'ACTIVE','406c042d-8022-4a4a-b21c-9bb69ce6b7ab'),
	 (1610,74841,'2020-05-06 19:19:13.322',1,'2021-01-13 20:22:06.427965','from_date,to_date,location_id','with 
dates as (
	SELECT
    to_date(
        CASE WHEN ''#from_date#'' = ''null'' THEN
            NULL
        ELSE
            ''#from_date#''
        END, ''MM/DD/YYYY'') AS from_date,
    to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date)
,loc as (
	select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1
),parameters as (
	select
	    concat(CASE WHEN date_part(''Month'',  from_date) >= 4
	THEN concat_ws(''-'', date_part(''year'', from_date ), date_part(''year'', from_date ) + 1)
	    ELSE concat_ws(''-'', date_part(''year'', from_date ) - 1, date_part(''year'', from_date ))
	END) as financial_year,
	(DATE_PART(''month'', (select to_date from dates)) - DATE_PART(''month'', (select from_date from dates)) + 1) as number_of_month
	from dates
)
,
live_birth_det as(
select lhcd.parent_id ,count(1) cnt
from rch_child_analytics_details ,location_hierchy_closer_det lhcd, dates d
where dob between d.from_date and d.to_date and  delivery_location_id  = lhcd.child_id and member_id is not null 
and lhcd.parent_id in (select child_id from loc)	
group by lhcd.parent_id 
),taho_screening_det as(
select lhcd.parent_id,sum(new_born_screened) as cnt
from rbsk_location_wise_monthly_analytics htt,location_hierchy_closer_det lhcd, dates d
where htt.location_id = lhcd.child_id and lhcd.parent_id in (select child_id from loc)
and htt.month_year between d.from_date and d.to_date
group by lhcd.parent_id
), expexted_target as (
	select loc.child_id,
		sum(location_wise_expected_target.expected_delivery_reg) as expected_delivery_reg
		from loc cross join parameters p
		inner join location_hierchy_closer_det on loc.child_id = location_hierchy_closer_det.parent_id
		inner join location_wise_expected_target on location_hierchy_closer_det.child_id = location_wise_expected_target.location_id
		and location_wise_expected_target.financial_year = p.financial_year
		group by loc.child_id
), final_det as (
	select 
	l.english_name as location,
	(expected_delivery_reg / 12) *  (select number_of_month from parameters) as expected_delivery_reg,
	lb.cnt as lbirth,
	tsd.cnt as screening
	from loc
	left join location_master l on l.id = loc.child_id
	left join expexted_target et on et.child_id  = l.id 
	left join live_birth_det lb on lb.parent_id = l.id
	left join taho_screening_det tsd on tsd.parent_id = l.id
	order by l.name
)
select 
row_number() over () as "Sr No",
location as "Location Name",
coalesce(expected_delivery_reg, 0) as "Live Birth Target",
coalesce(lbirth, 0) as "No.of Live Births",
coalesce(screening, 0) as "Number of newborns screened",
coalesce(round(((screening) / nullif(lbirth, 0)), 2), 0) as "% of Achievements (Against Live Birth)"
from final_det
union all
select 
null,
''<b>Total</b>'',
coalesce(sum(expected_delivery_reg), 0) as "Live Birth Target",
coalesce(sum(lbirth), 0) as "No.of Live Births",
coalesce(sum(screening), 0) as "Number of newborns screened",
coalesce(round(((sum(screening)) / nullif(sum(lbirth), 0)), 2), 0) as "% of Achievements (Against Live Birth)"
from final_det',true,'ACTIVE','c7fae20c-eea1-4117-8829-076f8e68a474'),
	 (1607,92665,'2020-05-06 11:38:47.548',1,'2021-01-13 20:22:06.427965',NULL,'with anmol_location as (
	select 
	s.rch_code as state_code,
	d.rch_code as district_code,
	alm.rch_code  as health_block_code,
	t.rch_code as taluka_code,
	case when alm.english_name is null then alm."name" else alm.english_name end as health_block_name,
	case when d.english_name is null then d."name" else d.english_name end as district_name
	from 
	anmol_location_master alm 
	left join anmol_location_master t on t.rch_code = alm.parent_rch_code and  t."type" = ''T''
	left join anmol_location_master d on t.parent_rch_code =  d.rch_code and d.type=''D''
	left join anmol_location_master S on d.parent_rch_code =  S.rch_code and s.type=''S''
	where  alm."type" =''HB''	
)
,
counts as(
	select 
	alm.health_block_code,
	(sum(coalesce (lwa.total_members ,0))*21)/1000 as estimated_mother,
	(sum(coalesce(lwa.total_members,0))*19)/1000 as estimated_infant,
	sum(coalesce(lwa.r11_eligible_couple ,0)) as estimated_ec
	,sum(coalesce(lwa.total_members,0)) as population
	from 
	anmol_location alm
	left join location_master lm on lm.rch_code = cast(alm.taluka_code as bigint) and lm."type" = ''B''
	left join location_hierchy_closer_det lhcd on lhcd.parent_id = lm.id
	left join location_wise_analytics lwa on lwa.loc_id = lhcd.child_id
	group by  alm.health_block_code 
)
,total_row as (
	select 
	cast(''Total'' as varchar) "State_code",
	cast('''' as varchar) "HealthBlock_Code",
	cast('''' as varchar)  "HealthBlock_Name",
	sum(coalesce(estimated_mother,0)) "Estimated_Mother",
	sum(coalesce(estimated_infant,0 )) "Estimated_Infant",
	cast('''' as text) as "Created_Date",
	cast('''' as text) "Financial_Year",
	sum(coalesce(estimated_ec,0) ) "Estimated_EC",
	cast('''' as varchar) "District_code",
	cast('''' as text) "District_Name"
	from counts 
)
,det as (
	select 
	alm.state_code "State_code",
	alm.health_block_code "HealthBlock_Code",
	alm.health_block_name  "HealthBlock_Name",
	c.estimated_mother "Estimated_Mother",
	c.estimated_infant "Estimated_Infant",
	to_char(now(), ''yyyy-MM-dd'') as "Created_Date",
	cast(''2020-21'' as text) "Financial_Year",
	c.estimated_ec "Estimated_EC",
	alm.district_code "District_code",
	alm.district_name "District_Name" 
	from 
	anmol_location alm
	inner join counts c on c.health_block_code = alm.health_block_code
)
select * from det
union all
select * from total_row
;',true,'ACTIVE','c63261b1-5e34-450f-9d41-b73d3015eb8b'),
	 (669,409,'2019-02-19 20:58:29.639',1,'2021-01-13 20:22:06.427965','limit_offset,financial_year,loggedInUserId,location_id','--4 PNC(Delivery Services Provided During The Year)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
dates as (
SELECT to_date(concat(''04-01-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 1)),''MM-DD-YYYY'') as from_date
,to_date(concat(''03-31-'',split_part(case when ''#financial_year#'' = ''null'' then ''2017-2018'' else ''#financial_year#'' end, ''-'', 2)),''MM-DD-YYYY'') as to_date
),member_det as (
	select r.member_id, r.pnc4_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.pnc4,''DD/MM/YYYY'') as pnc_date
	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, imt_member m
	, rch_pregnancy_registration_det p
	,dates
	
	where r.member_id = m.id and r.pnc4_location_id  = l.child_id and r.pregnancy_reg_id = p.id
	and l.parent_id = #location_id#
	and r.pnc4 between dates.from_date and dates.to_date
	order by r.pnc4
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id,  
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.pnc_date as "Pnc date",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','ea0386b6-8d61-45e2-be1f-44470be12b21'),
	 (778,58981,'2019-03-06 15:09:20.349',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','70685489-b3a7-4a91-82d3-a68f038c8182'),
	 (779,58981,'2019-03-06 15:09:20.363',1,'2021-01-13 20:22:06.427965','limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id','--1 ANC (Maternal Health Services provided to the mother registered during the year)
with parameters as(
select CAST(#location_id# AS INTEGER) as location_id,
CAST(''#financial_year#'' AS TEXT) as financial_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
 member_det as (
	select r.member_id, r.tracking_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.anc1, ''DD/MM/YYYY'') as anc1
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p
	where r.tracking_location_id  = l.child_id 
	and anc1 is not null
	and l.parent_id = p.location_id
	and r.reg_service_financial_year = p.financial_year
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
	and r.is_valid_for_tracking_report
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, concat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
member_det.anc1 as "ANC1 Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','583c2cfd-bfc2-436c-9b78-9d3ed19b80f0'),
	 (780,58981,'2019-03-06 15:25:38.339',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','8bc2e9b3-8293-4cc0-8f0a-fbd908d1f516'),
	 (777,58981,'2019-03-06 15:07:40.447',1,'2021-01-13 20:22:06.427965','limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id','with parameters as(
select CAST(#location_id# AS INTEGER) as location_id,
CAST(''#financial_year#'' AS TEXT) as financial_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
 member_det as (
	select r.member_id, r.tracking_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p
	where r.tracking_location_id  = l.child_id
	and early_anc
	and l.parent_id = p.location_id
	and r.reg_service_financial_year = p.financial_year
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
    and r.is_valid_for_tracking_report
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','1f644d08-efc2-45ae-929c-e864aead6cfb'),
	 (781,58981,'2019-03-06 15:25:38.355',1,'2021-01-13 20:22:06.427965','limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id','--2 ANC (Maternal Health Services provided to the mother registered during the year)
with parameters as(
select CAST(#location_id# AS INTEGER) as location_id,
CAST(''#financial_year#'' AS TEXT) as financial_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
 member_det as (
	select r.member_id, r.tracking_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.anc2, ''DD/MM/YYYY'') as anc2
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p
	where r.tracking_location_id  = l.child_id 
	and anc2 is not null
	and l.parent_id = p.location_id
	and r.reg_service_financial_year = p.financial_year
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
	and r.is_valid_for_tracking_report
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, concat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
member_det.anc2 as "ANC2 Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','18ac39e9-e853-4776-8974-f343ce362373');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (783,58981,'2019-03-06 15:29:47.924',1,'2021-01-13 20:22:06.427965','limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id','--3 ANC (Maternal Health Services provided to the mother registered during the year)
with parameters as(
select CAST(#location_id# AS INTEGER) as location_id,
CAST(''#financial_year#'' AS TEXT) as financial_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
 member_det as (
	select r.member_id, r.tracking_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.anc3, ''DD/MM/YYYY'') as anc3
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p 
	where r.tracking_location_id  = l.child_id 
	and anc3 is not null
	and l.parent_id = p.location_id
	and r.reg_service_financial_year = p.financial_year
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
	and r.is_valid_for_tracking_report
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, concat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
member_det.anc3 as "ANC3 Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','ee8e7735-6909-4575-800a-cec0a8835e76'),
	 (952,60512,'2019-04-10 14:56:33.37',1,'2021-01-13 20:22:06.427965','depth_flag,limit_offset,loggedInUserId,location_id','with prefered_language as (
select 	case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end as is_enlish
from um_user where id = #loggedInUserId# 
), health_infra_ids as(
	select id,name,location_id,address from health_infrastructure_details where location_id in
	(select child_id from location_hierchy_closer_det where parent_id = #location_id#
        and depth <= (case when #depth_flag# = -1 then 0 else 8 end)
    )
	and type = 1061 and is_no_reporting_unit is not true
	#limit_offset#
)
select 
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
health_infra_ids.name as "Name",
case when prefered_language.is_enlish then get_location_hierarchy_language_wise(health_infra_ids.location_id, ''EN'')
				else get_location_hierarchy(health_infra_ids.location_id) end as "Location",
case when health_infra_ids.address is not null and health_infra_ids.address !='''' and health_infra_ids.address !=''null'' then health_infra_ids.address else ''N.A'' end as "Address"
from health_infra_ids
inner join prefered_language on true',true,'ACTIVE','45c8e691-9eca-417d-9e92-f6adf3e17eab'),
	 (1502,74840,'2020-01-24 16:09:52.372',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','dd5bfb8c-7689-4554-a9fc-4717f3d9c929'),
	 (788,58981,'2019-03-06 15:37:15.091',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','414e5048-798b-4ab4-a277-05ce3a30088d'),
	 (793,58981,'2019-03-06 15:41:19.881',1,'2021-01-13 20:22:06.427965','limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id','--1 PNC (Maternal Health Services provided to the mother registered during the year)
with parameters as(
select CAST(#location_id# AS INTEGER) as location_id,
CAST(''#financial_year#'' AS TEXT) as financial_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
 member_det as (
	select r.member_id, r.tracking_location_id as loc_id,
	r.unique_health_id, r.family_id, 
	r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p
	where r.tracking_location_id  = l.child_id
	and pnc1 is not null
	and l.parent_id = p.location_id
	and r.reg_service_financial_year = p.financial_year
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
    and r.is_valid_for_tracking_report
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','d38369e0-b9bc-4d30-8cf6-44878f79ef0b'),
	 (794,58981,'2019-03-06 15:46:45.222',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','d1bcbfd0-a44d-4b8b-b167-399cbceda3eb'),
	 (795,58981,'2019-03-06 15:46:45.233',1,'2021-01-13 20:22:06.427965','limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id','--2 PNC (Maternal Health Services provided to the mother registered during the year)
with parameters as(
select CAST(#location_id# AS INTEGER) as location_id,
CAST(''#financial_year#'' AS TEXT) as financial_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
 member_det as (
	select r.member_id, r.tracking_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p
	where r.tracking_location_id  = l.child_id 
	and pnc2 is not null
	and l.parent_id = p.location_id
	and r.reg_service_financial_year = p.financial_year
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
    and r.is_valid_for_tracking_report
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','dd631ad6-44fd-44eb-a67b-20cdbe4bfc88'),
	 (801,58981,'2019-03-06 15:50:42.595',1,'2021-01-13 20:22:06.427965','limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id','--Maternal Deaths (Maternal Health Services provided to the mother registered during the year)
with parameters as(
select CAST(#location_id# AS INTEGER) as location_id,
CAST(''#financial_year#'' AS TEXT) as financial_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
member_det as (
	select r.member_id, r.tracking_location_id as loc_id,
	r.unique_health_id, r.family_id, 
	r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
        ,to_char(r.death_date,''DD/MM/YYYY'') as death_date
	,to_char(pr.delivery_date,''DD/MM/YYYY'') as delivery_date
	,r.maternal_death_type as death_type
	 from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, rch_pregnancy_registration_det pr,
	parameters p
	where r.tracking_location_id  = l.child_id and r.pregnancy_reg_id = pr.id 
	and maternal_detah
	and l.parent_id = p.location_id
	and r.reg_service_financial_year = p.financial_year
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
    and r.is_valid_for_tracking_report
	order by r.lmp_date
	#limit_offset#
) ,loc_det as (
	select loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id 
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.death_date as "Death Date",
member_det.death_type as "Death Type",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when member_det.delivery_date is null then ''N/A'' else member_det.delivery_date end as "Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','03a0ed8e-d739-4f7c-bbb8-ae0e83ebe9ab'),
	 (796,58981,'2019-03-06 15:48:07.507',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','bc00c786-184a-436c-b1f5-f677eb75eab0'),
	 (797,58981,'2019-03-06 15:48:07.516',1,'2021-01-13 20:22:06.427965','limit_offset,demographic_location_id,financial_year,loggedInUserId,location_id','--3 PNC (Maternal Health Services provided to the mother registered during the year)
with parameters as(
select CAST(#location_id# AS INTEGER) as location_id,
CAST(''#financial_year#'' AS TEXT) as financial_year,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
 member_det as (
	select r.member_id, r.tracking_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, parameters p
	where r.tracking_location_id  = l.child_id 
	and pnc3 is not null
	and l.parent_id = p.location_id
	and r.reg_service_financial_year = p.financial_year
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
    and r.is_valid_for_tracking_report
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id, string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','9514b25f-c77f-45f6-96f2-e839fb833227');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1021,60512,'2019-04-22 16:44:28.19',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','32d918a5-b323-4f35-911d-97db29c6f802'),
	 (1019,60512,'2019-04-22 16:41:29.178',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','9f87dca9-779e-4a69-b1ab-09fe83dc3f38'),
	 (1022,60512,'2019-04-22 16:44:28.205',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,demographic_location_id,loggedInUserId,from_month,location_id','--Early ANC(ANC Services Provided During The Year) (Monthly)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date,
to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),member_det as (
	select r.member_id, r.native_location_id as loc_id,
	r.unique_health_id, r.family_id, 
	r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.reg_service_date,''DD/MM/YYYY'') as reg_date
	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, parameters p
	where r.native_location_id  = l.child_id
	and r.early_anc = true
	and l.parent_id = p.location_id
	and r.reg_service_date between p.from_date and p.to_date
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group))
	order by r.reg_service_date
	#limit_offset#
), loc_det as (
	select loc.loc_id, 
string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '' , u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.reg_date as "Reg_date",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','7504271c-3076-4532-bd2f-97af558011b8'),
	 (604,409,'2019-02-19 12:09:23.102',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id','--Number of PW registered with LMP(Delivery monitoring of Registered LMP)

with parameters as(
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') + interval ''1 day'' as to_date,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
 member_det as (
	select r.member_id, r.tracking_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.date_of_delivery,''DD/MM/YYYY'') as dod
	
	from rch_pregnancy_analytics_details r 
	, location_hierchy_closer_det l
	, parameters p	
	where r.tracking_location_id  = l.child_id 
	and l.parent_id = p.location_id
	and r.lmp_month_year between p.from_date and p.to_date
	and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
    and r.is_valid_for_tracking_report
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id,  string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
member_det.dod as "Date of delivery",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','9a980cb4-5c46-4809-9e46-d6b60c32a270'),
	 (1503,74840,'2020-01-27 12:56:25.001',1,'2021-01-13 20:22:06.427965','to_month,demographic_location_id,loggedInUserId,from_month,location_id','with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month# is null then null else ''#from_month#'' end,''MM/DD/YYYY'') as from_month,
to_date(case when #to_month# is null then null else ''#to_month#'' end,''MM/DD/YYYY'') as to_month,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
), r as (
	select vlc.parent_id as id
	,coalesce(sum(stat.anc_reg),0) as anc_reg
	,coalesce(sum(stat.tt1),0) as tt1
	,coalesce(sum(stat.tt2_tt_booster),0) as tt2_tt_booster
	,coalesce(sum(stat.early_anc),0) as early_anc
	,coalesce(sum(stat.anc1),0) as anc1
	,coalesce(sum(stat.anc2),0) as anc2
	,coalesce(sum(stat.anc3),0) as anc3
	,coalesce(sum(stat.anc4),0) as anc4
    ,coalesce(sum(stat.ifa_180_anc_date),0) as ifa_180_anc
    ,coalesce(sum(stat.complete_anc_date),0) as complete_anc
	,coalesce(sum(stat.mtp),0) as mtp
	,coalesce(sum(stat.abortion),0) as abortion
	from parameters p cross join vw_location_closure_det_by_parent_location_depth vlc
	left join rch_service_provided_during_year stat on vlc.child_id = stat.location_id
	and stat.month_year between p.from_month and p.to_month
	where vlc.location_id=p.location_id and vlc.depth=1
	and (p.demographic_group=''null'' or vlc.child_demographic_type in
	(select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	) group by vlc.parent_id
),
s as (
	select case when ( p.preferred_language and (lm.english_name is not null))
		then lm.english_name
		else lm.name end as location_name,
	r.* from r, parameters p, location_master lm
	where lm.id=r.id
	order by location_name
)
select  row_number() over() as "Sr. no"
,id as hidden_location_id
,(select demographic_group from parameters) as hidden_demographic_location_id
,location_name as  "Location"
-- ,case when expected_mother_reg is null then ''Not available'' else cast(expected_mother_reg as text) end as "Expected Mother Registration"
,anc_reg as "Total Registered"
-- ,case when expected_mother_reg is null then 0 else round(anc_reg*100.0/expected_mother_reg,2) end as "percent_col_ANC Regd. against ELA"
,early_anc  as "Early ANC"
,case when anc_reg = 0 then 0 else round(early_anc*100.0/anc_reg ,2) end as "percent_col_Early ANC"
,tt1 as "TT1 given"
,case when anc_reg = 0 then 0 else round(tt1*100.0/anc_reg,2) end as "percent_col_TT1 given"
,tt2_tt_booster as "TT2+TT Booster"
,case when anc_reg = 0 then 0 else round(tt2_tt_booster*100.0/anc_reg,2) end as "percent_col_TT2+TT Booster"
,anc1  as "1 ANC"
,case when anc_reg = 0 then 0 else round(anc1*100.0/anc_reg ,2) end as "percent_col_1 ANC"
,anc2 as "2 ANC"
,case when anc_reg = 0 then 0 else round(anc2*100.0/anc_reg ,2) end as "percent_col_2 ANC"
,anc3  as "3 ANC"
,case when anc_reg = 0 then 0 else round(anc3*100.0/anc_reg ,2) end as "percent_col_3 ANC"
,anc4  as "4 ANC"
,case when anc_reg = 0 then 0 else round(anc4*100.0/anc_reg ,2) end as "percent_col_4 ANC"
,ifa_180_anc as "IFA 180"
,case when anc_reg = 0 then 0 else round(ifa_180_anc*100.0/anc_reg ,2) end as "percent_col_IFA 180 to ANC Regd"
,complete_anc as "complete ANC"
,case when anc_reg = 0 then 0 else round(complete_anc*100.0/anc_reg ,2) end as "percent_col_complete ANC"
,mtp  as "MTP"
,case when anc_reg = 0 then 0 else round(mtp*100.0/anc_reg ,2) end as "percent_col_MTP"
,abortion  as "Abortion"
,case when anc_reg = 0 then 0 else round(abortion*100.0/anc_reg ,2) end as "percent_col_Abortion"
from s
union all
select
null
,(select location_id from parameters) as hidden_location_id
,(select demographic_group from parameters) as hidden_demographic_location_id
,''<b>Total</b>''
-- ,case when sum(case when expected_mother_reg is not null then expected_mother_reg else 0 end) = 0 then 0 else round(sum(anc_reg)*100.0/sum(expected_mother_reg),2) end
,sum(anc_reg)
-- ,case when sum(case when expected_mother_reg is not null then expected_mother_reg else 0 end) = 0 then 0 else round(sum(anc_reg)*100.0/sum(expected_mother_reg),2) end
,sum(early_anc)
,case when sum(anc_reg) = 0 then 0 else round(sum(early_anc)*100.0/sum(anc_reg),2) end
,sum(tt1)
,case when sum(anc_reg) = 0 then 0 else round(sum(tt1)*100.0/sum(anc_reg),2) end
,sum(tt2_tt_booster)
,case when sum(anc_reg) = 0 then 0 else round(sum(tt2_tt_booster)*100.0/sum(anc_reg),2) end
,sum(anc1)
,case when sum(anc_reg) = 0 then 0 else round(sum(anc1)*100.0/sum(anc_reg),2) end
,sum(anc2)
,case when sum(anc_reg) = 0 then 0 else round(sum(anc2)*100.0/sum(anc_reg),2) end
,sum(anc3)
,case when sum(anc_reg) = 0 then 0 else round(sum(anc3)*100.0/sum(anc_reg),2) end
,sum(anc4)
,case when sum(anc_reg) = 0 then 0 else round(sum(anc4)*100.0/sum(anc_reg),2) end
,sum(ifa_180_anc)
,case when sum(anc_reg) = 0 then 0 else round(sum(ifa_180_anc)*100.0/sum(anc_reg),2) end
,sum(complete_anc)
,case when sum(anc_reg) = 0 then 0 else round(sum(complete_anc)*100.0/sum(anc_reg),2) end
,sum(mtp)
,case when sum(anc_reg) = 0 then 0 else round(sum(mtp)*100.0/sum(anc_reg),2) end
,sum(abortion)
,case when sum(anc_reg) = 0 then 0 else round(sum(abortion)*100.0/sum(anc_reg),2) end
from s;',true,'ACTIVE','3e27584f-3ed4-42dc-b708-57f9dcbfa40d'),
	 (605,409,'2019-02-19 12:22:31.093',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','6a68d6d3-4a67-4259-8d3e-92f16689aea3'),
	 (608,409,'2019-02-19 12:22:31.106',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id','--Number of abortion registered with LMP(Delivery monitoring of Registered LMP)
with parameters as(
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') + interval ''1 day'' as to_date,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
 member_det as (
	select r.member_id, r.tracking_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.date_of_delivery,''DD/MM/YYYY'') as dod	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, parameters p		
	where r.tracking_location_id  = l.child_id
	and l.parent_id = p.location_id
	and r.delivery_outcome in (''ABORTION'', ''SPONT_ABORTION'')
	and r.lmp_month_year between p.from_date and p.to_date
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
    and r.is_valid_for_tracking_report
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id,  string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '',u.first_name , u.last_name, '' ('' , u.user_name , '')<br>'' , ''Contact : '' ,
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
member_det.dod as "Date of ABORTION",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','2e45fb29-f9b0-42cd-b9ad-c564483e3c4f'),
	 (616,409,'2019-02-19 12:25:55.926',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id','with parameters as(
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') + interval ''1 day'' as to_date,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
), 
 member_det as (
	select r.member_id, r.tracking_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.date_of_delivery,''DD/MM/YYYY'') as dod	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l	
	, parameters p	
	where r.tracking_location_id  = l.child_id 
	and l.parent_id = p.location_id
	and r.delivery_outcome = ''MTP''
	and r.lmp_month_year between p.from_date and p.to_date
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
    and r.is_valid_for_tracking_report
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id,  string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p	
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, concat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
member_det.dod as "Date of ABORTION",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','8f2f9ce5-267b-429e-8f11-aafb7a67e2f4'),
	 (1504,74840,'2020-01-27 13:17:54.571',1,'2021-01-13 20:22:06.427965','to_month,demographic_location_id,loggedInUserId,from_month,location_id','with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month# is null then null else ''#from_month#'' end,''MM/DD/YYYY'') as from_month,
to_date(case when #to_month# is null then null else ''#to_month#'' end,''MM/DD/YYYY'') as to_month,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
), r as (
	select vlc.parent_id as id
	,coalesce(sum(stat.anc_reg),0) as anc_reg
	,coalesce(sum(stat.no_of_delivery),0) as no_of_del	
	,coalesce(sum(stat.pnc1),0) as pnc1
	,coalesce(sum(stat.pnc2),0) as pnc2
	,coalesce(sum(stat.pnc3),0) as pnc3
	,coalesce(sum(stat.pnc4),0) as pnc4
	,coalesce(sum(stat.mother_death),0) as maternal_detah
    ,coalesce(sum(stat.live_birth),0) as live_birth
    ,coalesce(sum(stat.still_birth),0) as still_birth
	from parameters p cross join vw_location_closure_det_by_parent_location_depth vlc 
	left join rch_service_provided_during_year stat on vlc.child_id = stat.location_id
	and stat.month_year between p.from_month and p.to_month
	where vlc.location_id=p.location_id and vlc.depth=1 
	and (p.demographic_group=''null'' or vlc.child_demographic_type in 
	(select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	) group by vlc.parent_id
),
s as (
	select case when ( p.preferred_language and (lm.english_name is not null)) 
		then lm.english_name 
		else lm.name end as location_name,
	r.* from r, parameters p, location_master lm
	where lm.id=r.id
	order by location_name
)
select  row_number() over() as "Sr. no"
,id as hidden_location_id
,(select demographic_group from parameters) as hidden_demographic_location_id
,location_name as  "Location"
-- ,case when expected_delivery_reg is null then ''Not available'' else cast(expected_delivery_reg as text) end as "Expected Delivery Registration"
,no_of_del  as "No of del"
-- ,case when expected_delivery_reg is null then 0 else round(no_of_del*100.0/expected_delivery_reg,2) end as "percent_col_Del. Regd. Against ELA"
,pnc1 as "1 PNC"
,case when anc_reg = 0 then 0 else round(pnc1*100.0/anc_reg ,2) end as "percent_col_1 PNC"
,pnc2  as "2 PNC"
,case when anc_reg = 0 then 0 else round(pnc2*100.0/anc_reg ,2) end as "percent_col_2 PNC"
,pnc3  as "3 PNC"
,case when anc_reg = 0 then 0 else round(pnc3*100.0/anc_reg ,2) end as "percent_col_3 PNC"
,pnc4  as "4 PNC"
,case when anc_reg = 0 then 0 else round(pnc4*100.0/anc_reg ,2) end as "percent_col_4 PNC"
,live_birth as "Live births reported"
,case when no_of_del= 0 then 0 else round(live_birth*100.0/no_of_del,2) end as "percent_col_Live births reported"
,still_birth as "Still births reported"
,case when no_of_del= 0 then 0 else round(still_birth*100.0/no_of_del,2) end as "percent_col_Still births reported"
,maternal_detah  as "Maternal deaths"
,case when anc_reg = 0 then 0 else round(maternal_detah*100.0/anc_reg ,2) end as "percent_col_Maternal deaths"
from s
union all
select 
null
,(select location_id from parameters) as hidden_location_id
,(select demographic_group from parameters) as hidden_demographic_location_id
,''<b>Total</b>''
-- ,cast(sum(case when expected_delivery_reg is not null then expected_delivery_reg else 0 end) as text)
,sum(no_of_del)
-- ,case when sum(case when expected_delivery_reg is not null then expected_delivery_reg else 0 end) = 0 then 0 else round(sum(no_of_del)*100.0/sum(expected_delivery_reg),2) end
,sum(pnc1)
,case when sum(anc_reg) = 0 then 0 else round(sum(pnc1)*100.0/sum(anc_reg),2) end
,sum(pnc2)
,case when sum(anc_reg) = 0 then 0 else round(sum(pnc2)*100.0/sum(anc_reg),2) end
,sum(pnc3)
,case when sum(anc_reg) = 0 then 0 else round(sum(pnc3)*100.0/sum(anc_reg),2) end
,sum(pnc4)
,case when sum(anc_reg) = 0 then 0 else round(sum(pnc4)*100.0/sum(anc_reg),2) end
,sum(live_birth)
,case when sum(no_of_del) = 0 then 0 else round(sum(live_birth)*100.0/sum(no_of_del),2) end
,sum(still_birth)
,case when sum(no_of_del) = 0 then 0 else round(sum(still_birth)*100.0/sum(no_of_del),2) end
,sum(maternal_detah)
,case when sum(anc_reg) = 0 then 0 else round(sum(maternal_detah)*100.0/sum(anc_reg),2) end
from s;',true,'ACTIVE','eda5aa22-00ed-4d22-bce7-76ffeae5e00b'),
	 (1029,60512,'2019-04-22 17:27:24.752',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','a08d69a0-ac52-4048-b52b-e9a8db8d9d1f');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (156,58981,'2019-01-22 18:19:19.608',1,'2021-01-13 20:22:06.427965','to_month,limit_offset,loggedInUserId,from_month,location_id','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#)
,dates as (
	select to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'') from_date
	,to_date(case when ''#to_month#'' = ''null'' then null else ''#to_month#'' end,''MM/DD/YYYY'')+interval ''1 month'' - interval ''1 millisecond'' to_date
)
, member_det as (
	select r.member_id, r.native_location_id as loc_id,
	m.unique_health_id, m.family_id, 
	m.first_name || '' '' || m.middle_name || '' '' || m.last_name as name,
	to_char(p.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(p.edd, ''DD/MM/YYYY'') as edd,
	r.high_risk_reasons
	from rch_pregnancy_analytics_details r, location_hierchy_closer_det l, imt_member m, rch_pregnancy_registration_det p, dates
	where r.member_id = m.id and r.native_location_id  = l.child_id and m.cur_preg_reg_det_id = p.id
	and r.reg_service_date between from_date and to_date
	and l.parent_id = #location_id#
	and r.high_risk_mother = true
	--and r.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')
	--and r.preg_reg_state in (''PENDING'',''PREGNANT'')
	order by p.lmp_date
	#limit_offset#
), loc as (
	select distinct loc_id from member_det
), loc_det as (
	select loc.loc_id, string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details",
member_det.high_risk_reasons as "Highrisk Reasons"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','6e4c748f-69aa-4e44-a1cd-97c6bd41ded1'),
	 (1594,74840,'2020-04-13 17:39:52.209',1,'2021-01-13 20:22:06.427965','infra_id,limit_offset,from_date,location_id','with location_det as (
	select child_id as loc_id
	from location_hierchy_closer_det lhc
	where 
	parent_id = #location_id# 
), paratemeter_det as (
	select
	(case when ''#from_date#'' = ''null'' then current_date else to_date(''#from_date#'',''MM/DD/YYYY'') end) as from_date
	,(case when ''#from_date#'' = ''null'' then current_date + interval ''1 day'' - interval ''1 milliseconds'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) + interval ''1 day'' - interval ''1 milliseconds'' as upto_date
)
,lab_test_det as (
	select
	distinct on
	(id)
	cad.id,cad.health_infra_id,cltd.covid_admission_detail_id,cltd.sample_health_infra,
	cltd.sample_health_infra_send_to,cltd.lab_test_number,cltd.lab_collection_on
	from covid19_admission_detail cad 
	inner join covid19_lab_test_detail cltd on cad.id = cltd.covid_admission_detail_id 
	left join health_infrastructure_details  hid on hid.id = cad.health_infra_id
	left join location_hierchy_closer_det loch on loch.child_id = hid.location_id
	inner join paratemeter_det on true = true
	where 
	(case when #infra_id# is null then (loch.parent_id in (select distinct loc_id from location_det)) else hid.id = cast(#infra_id# as integer) end)
	and (cad.discharge_date is null or paratemeter_det.upto_date <= cad.discharge_date)
	
	order by id
)
	select
	row_number() over (ORDER BY cad.id) as "Sr. No",
	concat_ws('' '', cad.first_name, cad.last_name, cad.middle_name) as "Name",
	cad.age as "Age",
	cad.gender as "Gender",
	cad.address as "Address",
	cad.occupation as "Occupation",
	cad.contact_number as "Contact Number",
	d.english_name as "District",
	s.english_name as "State",
	cast(''N/A'' as text) as "Date of arrival in India",
	cad.travelled_place as "Travel to COVID affected country (Name of country)",
	cad.flight_no as "Flight No",
	cast(''N/A'' as text) as "Seat No",
	case
		when cad.in_contact_with_covid19_paitent is not null then cad.in_contact_with_covid19_paitent
		else ''No''
	end as "H/O contact with COVID-19 case",
	cad.date_of_onset_symptom as "Date of onset of symptoms",
	concat_ws('', '' ,(case when cad.is_fever then ''Fever'' else null end) 
	,(case when cad.is_cough then ''Cough'' else null end)
	,(case when cad.is_breathlessness then ''Breathlessness'' else null end)
	,(case when cad.is_sari then ''SARI'' else null end)
	) as "Symptoms at admission",
	to_char(cad.admission_date,''DD/MM/YYYY'') as "Date of isolation",
	case
		when ltd.id is not null then ''Yes''
		else ''No''
	end "Sample collected (yes/No)",
	ltd.lab_test_number as "Sample ID",
	to_char(ltd.lab_collection_on,''DD/MM/YYYY'') as "Date of sample collection",
	hid_sample.name_in_english as "Sample collection centre",
	hid_tested.name_in_english as "Sample tested at",
	hid_tested.name_in_english as "Lab that confirmed the result",
	concat_ws('', '' ,(case when cad.is_hiv then ''HIV'' else null end) 
	,(case when cad.is_heart_patient then ''Heart Patient'' else null end)
	,(case when cad.is_diabetes then ''Diabetes'' else null end)
	,(case when cad.is_copd then ''COPD'' else null end)
	,(case when cad.is_hypertension then ''Hypertension'' else null end)
	,(case when cad.is_renal_condition then ''Renal Condition'' else null end)
	,(case when cad.is_immunocompromized then ''Immunocompromized'' else null end)
	,(case when cad.is_malignancy then ''Malignancy'' else null end)
	,(case when cad.is_other_co_mobidity then cad.other_co_mobidity else null end)
	) as "Underlying medical condition",
	cacds.health_status as "Health Status",
	case when cad.discharge_status is null then ''Admitted'' else cad.discharge_status end as "Outcome (Discharged/ Death/ Admitted)",
	to_char(cad.discharge_date,''DD/MM/YYYY'') as "Date of outcome",
	cast(''N/A'' as text) as "is patient member of covid 19",
	cast(''N/A'' as text) as "house hold contact",
	cast(''N/A'' as text) as "workplace contact",
	cast(''N/A'' as text) as "community contact",
	cast(''N/A'' as text) as "health care contact",
	cast(''N/A'' as text) as "co traveller"
from
	covid19_admission_detail cad
inner join lab_test_det ltd on
	cad.id = ltd.covid_admission_detail_id
left join covid19_admitted_case_daily_status cacds on
	cad.last_check_up_detail_id = cacds.id
left join location_master lm on
	lm.id = cad.location_id
left join location_level_hierarchy_master lh on
	lh.id = lm.location_hierarchy_id
left join health_infrastructure_details hid_sample on
	hid_sample.id = ltd.sample_health_infra
left join health_infrastructure_details hid_tested on
	hid_tested.id = ltd.sample_health_infra_send_to
left join location_master s on
	lh.level1 = s.id
	and s.state = ''ACTIVE''
	and s.name not ilike ''%delete%''
left join location_master d on
	lh.level3 = d.id
	and d.state = ''ACTIVE''
	and d.name not ilike ''%delete%''
order by
	cad.id
#limit_offset#',true,'ACTIVE','fb6e127a-7cfa-406b-aa83-6f306d7303d7'),
	 (676,409,'2019-02-20 11:55:45.869',1,'2021-01-13 20:22:06.427965','limit_offset,demographic_location_id,loggedInUserId,location_id','--Number of High Risk Mothers Identified(Concurrent High Risk Mother Report)
with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
)
,member_det as (
	select r.member_id, r.member_current_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd,
         r.high_risk_reasons	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, parameters p
	where r.member_current_location_id  = l.child_id
	and r.member_basic_state in (''NEW'',''VERIFIED'',''REVERIFICATION'')
	and r.preg_reg_state in (''PENDING'',''PREGNANT'')
	and r.high_risk_mother = true
	and l.parent_id = p.location_id
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
	order by r.reg_service_date
	#limit_offset#
), loc_det as (
	select loc.loc_id, 
        string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name
						else l2.name end),''>'' order by lhcd.depth desc) as aoi
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id,p.preferred_language
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details",
member_det.high_risk_reasons as "High Risk Reasons"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','f535550d-b05d-49f8-9a36-b57e66959eaa'),
	 (624,409,'2019-02-19 12:32:44.701',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id','--Number of Home delivery and who registered with LMP(Delivery monitoring of Registered LMP)
with parameters as(
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_date,
to_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') + interval ''1 day'' as to_date,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
),
 member_det as (
	select r.member_id, r.tracking_location_id as loc_id,
	r.unique_health_id, r.family_id, r.member_name as name,
	to_char(r.lmp_date, ''DD/MM/YYYY'') as lmp, to_char(r.edd, ''DD/MM/YYYY'') as edd
	,to_char(r.date_of_delivery,''DD/MM/YYYY'') as dod	
	from rch_pregnancy_analytics_details r
	, location_hierchy_closer_det l
	, parameters p	
	where r.tracking_location_id  = l.child_id
	and l.parent_id = p.location_id
	and institutional_del=false
	and r.delivery_outcome in (''LBIRTH'',''SBIRTH'')
	and r.lmp_month_year between p.from_date and p.to_date
        and (p.demographic_group=''null'' or l.child_loc_demographic_type in 
		( select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	)
    and r.is_valid_for_tracking_report
	order by r.lmp_date
	#limit_offset#
), loc_det as (
	select loc.loc_id,  string_agg((case when ( p.preferred_language and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as aoi 
	from (select distinct loc_id from member_det) loc, location_hierchy_closer_det lhcd, location_master l2, parameters p 
	where lhcd.child_id = loc.loc_id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	concat_ws('' '', u.first_name, u.last_name, '' ('', u.user_name, '')'', ''<br>'', ''Contact : '',
	case when u.contact_number is not null then u.contact_number else ''N/A'' end) as fhw
	from um_user_location ul, um_user u, (select distinct loc_id from member_det) loc,location_hierchy_closer_det
	where loc.loc_id = location_hierchy_closer_det.child_id and
	location_hierchy_closer_det.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
)
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
member_det.unique_health_id as "Member ID",
member_det.family_id as "Family ID",
member_det.name as "Name",
member_det.lmp as "LMP Date",
member_det.edd as "Estimated Delivery Date",
member_det.dod as "Date of Delivery",
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from member_det
inner join loc_det on member_det.loc_id = loc_det.loc_id 
left join fhw_det on member_det.loc_id = fhw_det.loc_id;',true,'ACTIVE','e45aff3f-9b87-4126-9f1d-cd22f1837f10'),
	 (1505,74840,'2020-01-28 14:27:13.534',1,'2021-01-13 20:22:06.427965','from_month,location_id','-- Eligible For Services Under PMSMA During This Month(PMSMA Services Statistics Report)

with location_det as (
    select lm.id,lm.english_name as name,lm.location_code from location_hierchy_closer_det lh1,location_master lm
    where lh1.parent_id = #location_id# and lm.id = lh1.child_id
)
,dates as (
    select date_trunc(''month'',to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'')) from_date,
    date_trunc(''month'',to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM/DD/YYYY'')) to_date

)
,report_det as (
	select    
    get_location_hierarchy(pmsma.location_id) as location_name        
    -- ,pmsma.pregnancy_reg_id
    ,concat(im.first_name,'' '',im.middle_name,'' '',im.last_name, ''('',im.unique_health_id ,'')'') as person_name
    ,to_char(preg.lmp_date, ''DD-MM-YYYY'') as lmp_date
    ,to_char(preg.edd, ''DD-MM-YYYY'') as edd_date   
    from
	pmsma_eligilible_pw_for_service pmsma inner join dates on pmsma.month_year between dates.from_date and dates.to_date
    inner join rch_pregnancy_registration_det preg on preg.id = pmsma.pregnancy_reg_id
	inner join imt_member im on pmsma.member_id = im.id
	inner join location_det det on pmsma.location_id = det.id
)
select 
row_number() over() as "Sr. no"
,location_name as "Location Name"
-- ,pregnancy_reg_id as "Pregnancy Registration Id"
,person_name as "Name of Person"
,lmp_date as "LMP Date"
,edd_date as "EDD Date"
from 
report_det',true,'ACTIVE','a6014a8c-6d6b-4d87-a207-983dcdaa0ad5'),
	 (1604,74841,'2020-04-22 18:35:23.622',1,'2021-01-13 20:22:06.427965','app_name','with total_user as (
	select 
	count(1) filter(where case when #app_name# = ''DRTECHO'' and role_id = 203 then true 
	when #app_name# = ''SOH'' then true else false end ) as total_user
	from um_user
	where state = ''ACTIVE''
),
um_user_app_access_details_t as (
	select distinct on(user_id)
		*
	from um_user_app_access_details
	where app_name = #app_name# and (app_version != ''null'')
	order by user_id, id desc
),
final_det as (
	select 
	(select total_user from total_user) as total_user,
	app_version as app_version,
count(1) as active_user,
count(1) filter (where cast(created_on as date) = current_date) as todays_active,
	device_type as device_type
	from um_user_app_access_details_t
    group by app_version, device_type
)
select 
cast(total_user as text) as "Total Users",
app_version as hidden_app_version,
app_version as "App Version",
active_user as "Active Users",
todays_active as "Today''s Active",
device_type as hidden_device_type,
device_type as "Device Type"
from final_det
union all
select 
''<b>Total</b>'',
null,
null,
sum(active_user),
sum(todays_active),
null,
null
from final_det',true,'ACTIVE','7cbf618f-5304-49f3-a128-1da566c78f98'),
	 (1595,74841,'2020-04-13 23:30:48.499',1,'2021-01-13 20:22:06.427965','limit_offset,from_date,to_date,loggedInUserId','with parameters as (
select hid.id as health_infra_id,hid.name_in_english as name
,(case when ''#from_date#'' = ''null'' then current_date else to_date(''#from_date#'',''MM-DD-YYYY'') end) as from_date
,(case when ''#to_date#'' = ''null'' then current_date else to_date(''#to_date#'',''MM-DD-YYYY'') end) + interval ''1 day'' - interval ''1 milliseconds'' as to_date
from health_infrastructure_details hid
where hid.id in (select uhi.health_infrastrucutre_id from user_health_infrastructure uhi where uhi.user_id = ''#loggedInUserId#'' and uhi.state = ''ACTIVE'')
)
select 
ltd.lab_test_id as "Lab Test Number",
p.name as "Health Infra Name",
case when clt.member_id is null 
    then concat_ws('' '',clt.first_name,clt.middle_name,clt.last_name)
    else concat(concat_ws('' '',imt_member.first_name,imt_member.middle_name,imt_member.last_name)
        , '' ('' , imt_member.unique_health_id , '')'' , ''<br>'' , imt_member.family_id) end as "Patients Info",
concat(case when clt.member_id is null 
    then cast(clt.age as text)
    else cast(EXTRACT(YEAR FROM age(imt_member.dob)) as text) end,'' Year'') as "Age",
case when clt.gender = ''F'' then ''Female'' else ''Male'' end as "Gender",
sample_to.name_in_english as "Testing lab name",
clt.indications as "Indications"
from parameters p 
inner join covid19_lab_test_detail ltd on ltd.sample_health_infra = p.health_infra_id
inner join covid19_admission_detail clt on ltd.covid_admission_detail_id = clt.id
left join health_infrastructure_details sample_to on sample_to.id = ltd.sample_health_infra_send_to
left join imt_member on clt.member_id = imt_member.id
where cast(lab_collection_on as date) between p.from_date and p.to_date
order by ltd.sample_health_infra, ltd.covid_admission_detail_id
#limit_offset#',true,'ACTIVE','ec3e691b-5600-4b2c-a15a-bfce9a6a27a7'),
	 (1548,74840,'2020-03-28 16:53:39.187',1,'2021-01-13 20:22:06.427965','mobileno','with param_input as (
	select 
	case when ''#mobileno#'' is not null then ''#mobileno#'' else null end as mobile_no
	--case when ''#mobileno#'' is not null then length(''#mobileno#'') else 0 end as mobile_length
)
,
final_det as (
	select
	mobile_number,
	otp	
	from otp_master,param_input where mobile_number = param_input.mobile_no 
    and state = ''ACTIVE''
	group by mobile_number,otp,expiry 
order by expiry desc limit 1
)
select
mobile_number as "Mobile No",
otp as "OTP"
--length(''#mobileno#'') as "Given Input Mobile Length"

from final_det',true,'ACTIVE','e03876a1-5d7b-4cd1-b9b2-0d12f508c3e7'),
	 (1544,74841,'2020-03-23 16:52:05.477',1,'2021-01-13 20:22:06.427965','demographic_location_id,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
parameters as (
	select distinct (case when #location_id# is null then (case when loc_id = 2 then -1 else 2 end)
		else CAST(#location_id# AS INTEGER) end) as location_id,
	(case when #location_id# is null then ''null'' else CAST(''#demographic_location_id#'' AS TEXT) end) as demographic_group
	from um_user_location where user_id = #loggedInUserId# and state = ''ACTIVE''
	/*
    select CAST(#location_id# AS INTEGER) as location_id,
    CAST(''#demographic_location_id#'' AS TEXT) as demographic_group*/
),location_ids as(
    select vlc.parent_id from parameters p, vw_location_closure_det_by_parent_location_depth vlc 
    where vlc.location_id=p.location_id and vlc.depth=1 
    and (p.demographic_group=''null'' or vlc.child_demographic_type in 
    (select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
    ) group by vlc.parent_id
),
result_set as (
    select 
    vlc.parent_id as loc_id,
    sum(total_member) as memebr,
    sum(total_family) as family,
    sum(member_having_illness_or_discomfart) as illness,
    sum(member_having_cough) as cough,
    sum(member_haivng_fever) as fever,
    sum(member_with_traveled) as is_traveled,
    sum(member_haivng_breathlessness) as breathlessness,
    sum(member_haivng_all_three) as all_three,
    sum(member_having_multiple_symptoms) as multiple_symt,
    sum(member_with_local_travel) as member_with_local_travel,
    sum(member_with_int_travel) as member_with_int_travel,
    sum(member_with_travel_and_symptoms_local) as member_with_travel_and_symptoms_local,
    sum(member_with_travel_and_symptoms_out_of_country) as member_with_travel_and_symptoms_out_of_country,
    sum(member_with_travel_and_all_symptoms_local) as member_with_travel_and_all_symptoms_local,
    sum(member_with_travel_and_all_symptoms_out_of_country) as member_with_travel_and_all_symptoms_out_of_country,
    sum(examin_mo_with_symt_and_int_travel) as examin_mo_with_symt_and_int_travel,
    sum(examin_mo_with_symt_and_local_travel) as examin_mo_with_symt_and_local_travel,
    sum(covid_test_with_int_travel) as covid_test_with_int_travel,
    sum(covid_test_with_local_travel) as covid_test_with_local_travel,
sum(member_with_no_traveled_and_any_symptoms) as member_with_no_traveled_and_any_symptoms    
    from parameters p cross join vw_location_closure_det_by_parent_location_depth vlc 
    left join idsp_location_wise_analytics idsp on vlc.child_id = idsp.location_id
    where vlc.location_id=p.location_id and vlc.depth=1 
    and (p.demographic_group=''null'' or vlc.child_demographic_type in 
    (select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
    ) group by vlc.parent_id
),
total_member as (
    select 
    SUM(fhs_total_member) as total_memebr, vlc.parent_id as loc_id
    from parameters p cross join vw_location_closure_det_by_parent_location_depth vlc 
    left join location_wise_analytics iwa on vlc.child_id = iwa.loc_id
    where vlc.location_id=p.location_id and vlc.depth=1 
    and (p.demographic_group=''null'' or vlc.child_demographic_type in 
    (select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
    ) group by vlc.parent_id
)
select  
    row_number() over() as "Sr No.",
        location_master.id as hidden_location_id,
  (select demographic_group from parameters) as hidden_demographic_location_id,
    case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name else location_master.name end as "Location",
    coalesce(total_member.total_memebr, 0) as "Total Population",
    coalesce(memebr, 0) as "Screened",
    coalesce(round(((memebr * 100.0) / NULLIF(total_member.total_memebr, 0)), 2), 0) as "% coverage",
    coalesce(fever, 0) as "Fever",
    coalesce(cough, 0) as "Cough",
    coalesce(breathlessness, 0) as "Breathlessness",
    coalesce(multiple_symt, 0) as "Multiple Symptoms",
    coalesce(all_three, 0) as "All symptoms",
	coalesce(member_with_no_traveled_and_any_symptoms, 0) as "No Travel but F, C or B",
	coalesce(is_traveled, 0) as "Person with travel history",
    coalesce(member_with_local_travel, 0) as "Domestic travel history",
    coalesce(member_with_travel_and_symptoms_local, 0) as "Domestic Travel with F,C or B",
	coalesce(member_with_local_travel - member_with_travel_and_symptoms_local, 0) as "Domestic Travel. NO F,C or B",
	coalesce(member_with_travel_and_all_symptoms_local, 0) as "Domestic Travel with all symptoms",
    coalesce(member_with_int_travel, 0) as "International travel history",
    coalesce(member_with_travel_and_symptoms_out_of_country, 0) as "Intl. Travel with F,C or B",
	coalesce(member_with_int_travel - member_with_travel_and_symptoms_out_of_country, 0) as "Intl. Travel NO F,C or B",
	coalesce(member_with_travel_and_all_symptoms_out_of_country, 0) as "Intl. Travel with all symptoms",
	coalesce(examin_mo_with_symt_and_local_travel, 0) as "Domestic Travel. examined by mo",
	coalesce(examin_mo_with_symt_and_int_travel, 0) as "Intl. Travel examined by mo",
	coalesce(covid_test_with_local_travel, 0) as "Domestic Travel Send for test",
	coalesce(covid_test_with_int_travel, 0) as "Intl. Travel Send for test"
from location_ids 
inner join prefered_language on true
inner join location_master on location_master.id = location_ids.parent_id
left join total_member on total_member.loc_id = location_ids.parent_id
left join result_set rs on rs.loc_id = location_ids.parent_id
union all
select null,(case when #location_id# is null then 2 else #location_id# end)  as hidden_location_id,
(select demographic_group from parameters) as hidden_demographic_location_id,
''<b>Total<b>'',
coalesce(sum(total_member.total_memebr), 0) as "Total Population",
    coalesce(sum(memebr), 0) as "Screened",
    round(((sum(memebr) * 100.0) / NULLIF(sum(total_member.total_memebr), 0)), 2),
    coalesce(sum(fever), 0) as "Person with Fever",
    coalesce(sum(cough), 0) as "Person with Cough",
    coalesce(sum(breathlessness), 0) as "Person with Breathlessness",
    coalesce(sum(multiple_symt), 0) as "Multiple Symptoms",
    coalesce(sum(all_three), 0) as "Person with all symptoms",
    coalesce(sum(member_with_no_traveled_and_any_symptoms), 0),
    coalesce(sum(is_traveled), 0) as "Person with positive travel history",
    coalesce(sum(member_with_local_travel), 0) as "Person with local travel history",
    coalesce(sum(member_with_travel_and_symptoms_local), 0) as "Person with International travel history",
    coalesce(sum(member_with_local_travel - member_with_travel_and_symptoms_local), 0) as "Person with Local positive travel history + symptoms",
    coalesce(sum(member_with_travel_and_all_symptoms_local), 0) as "Person with International positive travel history + symptoms",
     coalesce(sum(member_with_int_travel), 0),
    coalesce(sum(member_with_travel_and_symptoms_out_of_country), 0),
    coalesce(sum(member_with_int_travel - member_with_travel_and_symptoms_out_of_country), 0),
    coalesce(sum(member_with_travel_and_all_symptoms_out_of_country), 0),
    coalesce(sum(examin_mo_with_symt_and_local_travel), 0),
    coalesce(sum(examin_mo_with_symt_and_int_travel), 0) ,
	coalesce(sum(covid_test_with_local_travel), 0),
	coalesce(sum(covid_test_with_int_travel), 0)
from location_ids
inner join location_master on location_master.id = location_ids.parent_id
left join total_member on total_member.loc_id = location_ids.parent_id
left join result_set rs on rs.loc_id = location_ids.parent_id',true,'ACTIVE','b011bd94-68b5-4a0f-bfd6-0989fd2dd3c2'),
	 (1515,74841,'2020-02-10 17:40:05.021',1,'2021-01-13 20:22:06.427965','to_date','select to_char(cast(''#to_date#'' as date),''MM/YYYY'') as to_date',true,'ACTIVE','25c599c6-c5ac-43f7-8f15-45c1933d43b6');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1582,74841,'2020-04-09 20:55:02.105',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','103022f9-50af-45d2-8468-28ca737cb5d8'),
	 (1182,409,'2019-07-02 20:39:51.88',1,'2021-01-13 20:22:06.427965','limit_offset,from_month_year,to_month_year,loggedInUserId,location_id','--Child Register(Immunization Services Provided to Children with Date of Birth)
with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 child_det as (
	select m.id, c.tracking_location_id as loc_id,
	concat(m.first_name, '' '', m.middle_name, '' '', m.last_name, '' ('', m.unique_health_id, '')'', ''<br>'', m.family_id) as member_det,
	to_char(m.dob, ''DD/MM/YYYY'') as dob
	from rch_child_analytics_details c, location_hierchy_closer_det l, imt_member m
	where l.child_id = c.tracking_location_id and m.id = c.member_id
	and l.parent_id = #location_id#
	and c.member_id is not null
	and c.is_valid_for_tracking_report = true
	and c.dob_month_year between cast (
		case
			when ''#from_month_year#'' = ''null'' then ''01-01-1970''
			else ''#from_month_year#''
		end as date) and cast (
		case
			when ''#to_month_year#'' = ''null'' then ''01-01-1970''
			else ''#to_month_year#''
		end as date) + interval ''1 day''
	order by c.dob
	#limit_offset#
), loc as (
	select distinct loc_id from child_det
), loc_det as (
	select loc.loc_id,  string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),'' >'' order by lhcd.depth desc) as aoi 
	from loc, location_master l1, location_hierchy_closer_det lhcd, location_master l2, prefered_language 
	where l1.id = loc.loc_id and lhcd.child_id = l1.id and l2.id = lhcd.parent_id
	group by loc.loc_id
), fhw_det as (
	select loc.loc_id, 
	u.first_name || '' '' || u.last_name || '' ('' || u.user_name || '')'' || ''<br>'' 
	|| ''Contact : '' || case when u.contact_number is not null then u.contact_number else ''N/A'' end as fhw
	from um_user_location ul, um_user u, loc,location_hierchy_closer_det lh
	where lh.child_id = loc.loc_id and
	lh.parent_id = ul.loc_id and u.id = ul.user_id
	and u.state = ''ACTIVE'' and ul.state = ''ACTIVE''
	and u.role_id = (select id from um_role_master where name = ''FHW'')
	group by loc.loc_id, ul.state, u.state, u.first_name, u.last_name, u.user_name, u.contact_number
), immunisation as (
	select i.member_id, 
	REPLACE(REPLACE(REPLACE(cast(ARRAY_AGG(concat_ws('' - '', i.immunisation_given, to_char(i.given_on, ''DD/MM/YYYY'')) order by i.given_on) as text), cast(''","'' as text), cast(''<br>''as text)), cast(''{"'' as text), cast('''' as text)), cast(''"}'' as text), cast('''' as text)) as immunisation
	from rch_immunisation_master i, child_det c
	where i.member_id = c.id
	group by i.member_id
) 
select ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No",
loc_det.aoi as "Location",
child_det.member_det as "Child Details",
child_det.dob as "Date of Birth",
case when immunisation.immunisation is null then ''N/A'' else immunisation.immunisation end as "Immunisations Given", 
case when fhw_det.fhw is null then ''No FHW Assigned'' else fhw_det.fhw end as "FHW Details"
from child_det
inner join loc_det on child_det.loc_id = loc_det.loc_id 
left join fhw_det on child_det.loc_id = fhw_det.loc_id
left join immunisation on immunisation.member_id = child_det.id;',true,'ACTIVE','ea4b2e5c-a1db-41f9-8cb2-2aa49549906e'),
	 (1476,74841,'2020-01-08 18:18:55.05',1,'2021-01-13 20:22:06.427965','notification_type,from_date,to_date,role_id,location_id','WITH loc_det AS (
    SELECT
        child_id as id
    FROM
        location_hierchy_closer_det
    WHERE
        parent_id = #location_id#
        AND "depth" = 1
),
dates AS (
    SELECT
        to_date(
            CASE WHEN ''#from_date#'' = ''null'' THEN
                NULL
            ELSE
                ''#from_date#''
            END, ''MM-DD-YYYY'') AS from_date,
        to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date
)
,location_wise_task_complition_rate AS (
    SELECT
        lh.parent_id,
        sum(ul.missed_count) as missed_count,
        sum(ul.pending_count) as pending_count,
        sum(ul.on_completed_count) as on_completed_count,
        sum(ul.after_due_completed_count) as after_due_completed_count,
        sum(ul.due_pending) as due_pending
    FROM
        location_wise_task_complition_rate_analysis ul,
        dates,location_hierchy_closer_det lh
    WHERE
        ul.month_year BETWEEN dates.from_date AND dates.to_date
        AND lh.parent_id IN (select id from loc_det)
        and lh.child_id = ul.location_id		
        and (
			case 
			when #notification_type# = ''-1'' then ul.notification_type_id in (select id from notification_type_master nt where role_id = #role_id#) 
			else ul.notification_type_id = #notification_type# end)
        GROUP BY
            lh.parent_id
)
SELECT
    lm.id as "hidden_location_id",
    lm.english_name AS "Location",
    COALESCE(round((((uwc.on_completed_count +  uwc.after_due_completed_count) * 100.0) / NULLIF((uwc.on_completed_count +  uwc.after_due_completed_count + uwc.pending_count + 
    uwc.due_pending + uwc.missed_count), 0)), 2), 0) as "Task Completion Rate",
    COALESCE(uwc.on_completed_count, 0) as "On time Complete",
    COALESCE(uwc.after_due_completed_count, 0) as "After Due Completed Count",
    COALESCE(uwc.pending_count, 0) as "Pending Count",
    COALESCE(uwc.due_pending, 0) as "Due Pending",
    COALESCE(uwc.missed_count, 0) as "Missed",
    COALESCE((uwc.on_completed_count + uwc.after_due_completed_count + uwc.pending_count + uwc.due_pending + uwc.missed_count), 0) as "Total"
FROM
    location_wise_task_complition_rate uwc
    inner join location_master lm   
    on lm.id = uwc.parent_id
union all
select
	null,
		''<b>Total</b>'',
        COALESCE(round(((sum(uwc.on_completed_count +  uwc.after_due_completed_count) * 100.0) / NULLIF(sum(uwc.on_completed_count +  uwc.after_due_completed_count + uwc.pending_count + 
    uwc.due_pending + uwc.missed_count), 0)), 2),0),
		COALESCE(sum(uwc.on_completed_count), 0) as "On time Complete",
        COALESCE(sum(uwc.after_due_completed_count), 0) as "After Due Completed Count",
        COALESCE(sum(uwc.pending_count), 0) as "Pending Count",
        COALESCE(sum(uwc.due_pending), 0) as "Due Pending",
        COALESCE(sum(uwc.missed_count), 0) as "Missed",
        COALESCE(sum(uwc.on_completed_count) + sum(uwc.after_due_completed_count) + sum(uwc.pending_count) + sum(uwc.due_pending) + sum(uwc.missed_count), 0)
	from location_wise_task_complition_rate uwc
        inner join location_master lm
        on lm.id = uwc.parent_id',true,'ACTIVE','ed582e7e-ff5f-44ed-8f58-a1ef4fca7cff'),
	 (1597,74840,'2020-04-18 07:42:41.556',1,'2021-01-13 20:22:06.427965','infra_id,from_date,location_id','with location_det as (
	select child_id as loc_id
	from location_hierchy_closer_det lhc
	where 
	parent_id = #location_id# 
), paratemeter_det as (
	select
	(case when ''#from_date#'' = ''null'' then current_date else to_date(''#from_date#'',''MM/DD/YYYY'') end) as from_date
	,(case when ''#from_date#'' = ''null'' then current_date + interval ''1 day'' - interval ''1 milliseconds'' else to_date(''#from_date#'',''MM/DD/YYYY'') end) + interval ''1 day'' - interval ''1 milliseconds'' as upto_date
)
,lab_test_det as (
	select
	distinct on
	(id)
	cad.id,cad.health_infra_id,cltd.covid_admission_detail_id,cltd.sample_health_infra,
	cltd.sample_health_infra_send_to,cltd.lab_test_number,cltd.lab_collection_on
	from covid19_admission_detail cad inner join covid19_lab_test_detail cltd on cad.id = cltd.covid_admission_detail_id 
	left join health_infrastructure_details  hid on hid.id = cad.health_infra_id
	left join location_hierchy_closer_det loch on loch.child_id = hid.location_id
	inner join paratemeter_det on true = true
	where		
    (case when ''#infra_id#'' = ''null'' then (loch.parent_id in (select distinct loc_id from location_det)) else hid.id = cast(#infra_id# as integer) end)
    and  
	cad.admission_date between paratemeter_det.from_date and paratemeter_det.upto_date	
	and cad.admission_entry_by != -1
	order by id
)
	select
	row_number() over (ORDER BY cad.id) as "Sr. No",
	concat_ws('' '', cad.first_name, cad.last_name, cad.middle_name) as "Name",
	cad.age as "Age",
	cad.gender as "Gender",
	cad.address as "Address",
	cad.occupation as "Occupation",
	cad.contact_number as "Contact Number",
	d.english_name as "District",
	s.english_name as "State",
	cast(''N/A'' as text) as "Date of arrival in India",
	cad.travelled_place as "Travel to COVID affected country (Name of country)",
	cad.flight_no as "Flight No",
	cast(''N/A'' as text) as "Seat No",
	case
		when cad.in_contact_with_covid19_paitent is not null then cad.in_contact_with_covid19_paitent
		else ''No''
	end as "H/O contact with COVID-19 case",
	cad.date_of_onset_symptom as "Date of onset of symptoms",
	concat_ws('', '' ,(case when cad.is_fever then ''Fever'' else null end) 
	,(case when cad.is_cough then ''Cough'' else null end)
	,(case when cad.is_breathlessness then ''Breathlessness'' else null end)
	,(case when cad.is_sari then ''SARI'' else null end)
	) as "Symptoms at admission",
	to_char(cad.admission_date,''DD/MM/YYYY'') as "Date of isolation",
	case
		when ltd.id is not null then ''Yes''
		else ''No''
	end "Sample collected (yes/No)",
	ltd.lab_test_number as "Sample ID",
	to_char(ltd.lab_collection_on,''DD/MM/YYYY'') as "Date of sample collection",
	hid_sample.name_in_english as "Sample collection centre",
	hid_tested.name_in_english as "Sample tested at",
	hid_tested.name_in_english as "Lab that confirmed the result",
	concat_ws('', '' ,(case when cad.is_hiv then ''HIV'' else null end) 
	,(case when cad.is_heart_patient then ''Heart Patient'' else null end)
	,(case when cad.is_diabetes then ''Diabetes'' else null end)
	,(case when cad.is_copd then ''COPD'' else null end)
	,(case when cad.is_hypertension then ''Hypertension'' else null end)
	,(case when cad.is_renal_condition then ''Renal Condition'' else null end)
	,(case when cad.is_immunocompromized then ''Immunocompromized'' else null end)
	,(case when cad.is_malignancy then ''Malignancy'' else null end)
	,(case when cad.is_other_co_mobidity then cad.other_co_mobidity else null end)
	) as "Underlying medical condition",
	cacds.health_status as "Health Status",
	case when cad.discharge_status is null then ''Admitted'' else cad.discharge_status end as "Outcome (Discharged/ Death/ Admitted)",
	to_char(cad.discharge_date,''DD/MM/YYYY'') as "Date of outcome",
	cast(''N/A'' as text) as "is patient member of covid 19",
	cast(''N/A'' as text) as "house hold contact",
	cast(''N/A'' as text) as "workplace contact",
	cast(''N/A'' as text) as "community contact",
	cast(''N/A'' as text) as "health care contact",
	cast(''N/A'' as text) as "co traveller"
from
	covid19_admission_detail cad
inner join lab_test_det ltd on
	cad.id = ltd.covid_admission_detail_id
left join covid19_admitted_case_daily_status cacds on
	cad.last_check_up_detail_id = cacds.id
left join location_master lm on
	lm.id = cad.location_id
left join location_level_hierarchy_master lh on
	lh.id = lm.location_hierarchy_id
left join health_infrastructure_details hid_sample on
	hid_sample.id = ltd.sample_health_infra
left join health_infrastructure_details hid_tested on
	hid_tested.id = ltd.sample_health_infra_send_to
left join location_master s on
	lh.level1 = s.id
	and s.state = ''ACTIVE''
	and s.name not ilike ''%delete%''
left join location_master d on
	lh.level3 = d.id
	and d.state = ''ACTIVE''
	and d.name not ilike ''%delete%''
order by
	cad.id',true,'ACTIVE','6f41aecb-2313-4cfb-868a-ed7903c87adc'),
	 (1202,409,'2019-07-10 23:14:01.895',1,'2021-01-13 20:22:06.427965','from_month,location_id','with location_det as (
select lm.id,lm.english_name as name,lm.location_code from location_hierchy_closer_det lh1,location_master lm
where lh1.parent_id = #location_id# and depth = 1 and lm.id = lh1.child_id
),dates as (
select to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM-DD-YYYY'') as from_date 
,to_date(case when ''#from_month#'' = ''null'' then null else ''#from_month#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 milliseconds'' as to_date
),report_det as (
select location_det.name,location_det.location_code as code,t.* from (
select lh.parent_id as loc_id
,sum(high_risk_mother_2nd_trimester) as high_risk_mother_2nd_trimester
,sum(total_anc_under_pmsma) as total_anc_under_pmsma
,sum(total_beneficiary_under_pmsma) as total_beneficiary_under_pmsma
,sum(total_beneficiary_under_pmsma_at_least_once) as total_beneficiary_under_pmsma_at_least_once
,sum(eligible_high_risk_mother_for_pmsma) as eligible_high_risk_mother_for_pmsma
from rch_pmsma_service_statatics as pmsma , location_hierchy_closer_det lh,dates
where pmsma.month_year between dates.from_date and to_date
and pmsma.location_id = lh.child_id and lh.parent_id in (select id from location_det)
group by lh.parent_id 
) as t,location_det
where t.loc_id = location_det.id
order by name
)
select row_number() over() as "Sr. no"
,code as "Code"
,name as "Location Name"
,loc_id as hidden_location_id
,high_risk_mother_2nd_trimester as "2nd and 3rd trimester High Risk mother registered in Techo (A)"
,eligible_high_risk_mother_for_pmsma as "Eligible for Services under PMSMA during this month (B)"
--,total_anc_under_pmsma as "Total number of pregnant women Received ANC under PMSMA (C)"
--,total_beneficiary_under_pmsma as "No. of H.R. PW given PMSMA services during this month (D)"
,total_beneficiary_under_pmsma_at_least_once as "No. of H.R. PW given PMSMA services once in each trimester (C)"
,ROUND(case when high_risk_mother_2nd_trimester = 0 then 0.00 else cast(total_beneficiary_under_pmsma_at_least_once as numeric)* 100 / (high_risk_mother_2nd_trimester) end,2) 
as "% of H.R. PW given PMSMA serivces once in each trimester ((C/A)*100)"
from report_det
union all
select 
null
,null,
''<b>Total</b>''
,#location_id#
,round(sum(high_risk_mother_2nd_trimester),0)
,sum(eligible_high_risk_mother_for_pmsma)
--,sum(total_anc_under_pmsma)
--,sum(total_beneficiary_under_pmsma)
,sum(total_beneficiary_under_pmsma_at_least_once)
,ROUND(case when sum(high_risk_mother_2nd_trimester) = 0 then 0 else  sum(total_beneficiary_under_pmsma_at_least_once) * 100 / (sum(high_risk_mother_2nd_trimester))  end,2)
from report_det',true,'ACTIVE','0faec28f-8e86-4ee8-b65b-d8e7998a390b'),
	 (1455,74840,'2019-12-18 19:05:22.625',1,'2021-01-13 20:22:06.427965','to_from_month_year,loggedInUserId,location_id,from_from_month_year','with prefered_language as(
select (case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end) as is_enlish 
from um_user where id = #loggedInUserId#)
,location_ids as(
    select l.id as child_id,l.name as name from location_hierchy_closer_det lc,location_master l  
			where lc.parent_id = #location_id# and depth = 1 and l.id = lc.child_id
),
month_filter as (
	select
	cast (
		case
			when ''#from_from_month_year#'' = ''null'' then ''01-01-2018''
			else ''#from_from_month_year#''
		end as date) as "from_month",
	
	 cast (
		case
			when ''#to_from_month_year#'' = ''null'' then ''01-01-2019''
			else ''#to_from_month_year#''
	end as date) as "to_month"
)
,ppiucd_det_count as (
	select 
	loc_det.child_id,
	sum(rch_service.no_of_delivery) as "institutional_del",
	sum(rch_service.ppiucd) as "ppiubcd_inserted",
	sum(phi_del) as "phi_del",
	sum(phi_del_with_ppiucd) as "phi_del_with_ppiucd"
	from 
	location_ids loc_det
	inner join location_hierchy_closer_det loc on loc.parent_id = loc_det.child_id
	inner join rch_service_provided_during_year rch_service on rch_service.location_id = loc.child_id
	inner join month_filter on cast(date_trunc(''month'', rch_service.month_year) as date)  between month_filter.from_month and month_filter.to_month
	group by loc_det.child_id	
)

,final_det as (
	select 
--	loc_det.child_id,
	loc_det.name as "Location",
	coalesce(ppiucd_det_count."institutional_del",0) as "No. of Institutional Deliveries",
	coalesce(ppiucd_det_count."ppiubcd_inserted",0) as "No. PPIUCD inserted",
    round(coalesce(ppiucd_det_count."ppiubcd_inserted"*100.0 / ppiucd_det_count."institutional_del",0),2) as "%",
	coalesce(ppiucd_det_count.phi_del, 0) as "No. of PHI deliveries",
	coalesce(ppiucd_det_count.phi_del_with_ppiucd, 0) as "No. PPIUCD inserted for PHI Deliveries",
	round(coalesce(ppiucd_det_count."phi_del_with_ppiucd"*100.0 / ppiucd_det_count."phi_del",0),2) as "% "
	from 
	location_ids loc_det
	left join ppiucd_det_count on ppiucd_det_count.child_id = loc_det.child_id
)
select
row_number() over() as sr_no,
* 
from final_det
union all
select 
null,
''<b>Total<b>'',
coalesce(sum("No. of Institutional Deliveries"),0),
coalesce(sum("No. PPIUCD inserted"),0),
coalesce( round(sum("No. PPIUCD inserted")*100.0 / sum("No. of Institutional Deliveries"),2),0),
coalesce(sum("No. of PHI deliveries") , 0),
coalesce(sum("No. PPIUCD inserted for PHI Deliveries"), 0),
round(coalesce(sum("No. PPIUCD inserted for PHI Deliveries")*100.0 / sum("No. of PHI deliveries"),0),2)
from 
final_det',true,'ACTIVE','9b388c63-509d-4511-97da-78cc6f2276e5'),
	 (1825,74841,'2020-12-07 17:48:41.273',1,'2021-01-13 20:22:06.427965','filter_type','select 
case when #filter_type# = ''all'' then ''All'' 
 when #filter_type# = ''total_0_to_5'' then ''Age 0 to 5'' 
 when #filter_type# = ''total_6_to_10'' then ''Age 6 to 10'' 
 when #filter_type# = ''total_11_to_20'' then ''Age 11 to 20'' 
 when #filter_type# = ''total_21_to_30'' then ''Age 21 to 30'' 
 when #filter_type# = ''total_31_to_40'' then ''Age 31 to 40'' 
 when #filter_type# = ''total_41_to_50'' then ''Age 41 to 50'' 
 when #filter_type# = ''total_51_to_60'' then ''Age 51 to 60'' 
 when #filter_type# = ''total_60_plus'' then ''Age 60+'' 
end
as filter_type',true,'ACTIVE','cd255c7f-4370-470d-8a4b-4e3216dbd9f2'),
	 (1826,74841,'2020-12-07 17:48:41.302',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
case when  prefered_language.is_enlish then get_location_hierarchy_language_wise(#location_id#, ''EN'') else 
get_location_hierarchy(#location_id#) 
end as location_id
from  prefered_language',true,'ACTIVE','3dfc3479-f5b9-4418-a5bf-31807ee6a776'),
	 (1827,74841,'2020-12-07 17:48:41.306',1,'2021-01-13 20:22:06.427965','gender','select case when #gender# = ''M'' then ''Male'' when #gender# = ''F'' then ''Female'' else ''Other'' end as gender',true,'ACTIVE','00e74a96-e7e4-4659-82b1-b6d2c698ab7b'),
	 (1828,74841,'2020-12-07 17:48:41.327',1,'2021-01-13 20:22:06.427965','limit_offset,comorbidity,gender,filter_type,loggedInUserId,location_id','with prefered_language as(
select (case
when report_preferred_language = ''EN'' then true  
else false
end) as is_enlish
from um_user where id = #loggedInUserId#
),age_info as (
    select loc_anlyts.location_id as loc_id,
	member_id,
    concat(name,''<br>'',''('',unique_health_id,'')'',''<br>'',''('',family_id,'')'')  as name,
    name as member_name,
    unique_health_id,
    case when EXTRACT(YEAR FROM age(cast(dob as date))) = 0  then concat(EXTRACT(month FROM age(cast(dob as date))),'' Months'') else concat(EXTRACT(YEAR FROM age(cast(dob as date))),'' Years'')  end as age,
    to_char(dob, ''dd/mm/yyyy'') as dateOfBirth,
    comorbidity,
    case when gender = ''M'' then ''Male'' when gender = ''F'' then ''Female'' else ''Other'' end as gender
    from member_basic_detail loc_anlyts,location_hierchy_closer_det vlc
    where  vlc.child_id = loc_anlyts.location_id 
    and vlc.parent_id = #location_id#
    and (
    case when #filter_type# = ''total_0_to_5'' and EXTRACT(YEAR FROM age(cast(dob as date))) between 0 and 4 then true
    when #filter_type# = ''total_6_to_10'' and EXTRACT(YEAR FROM age(cast(dob as date))) between 5 and 9 then true
    when #filter_type# = ''total_11_to_20'' and EXTRACT(YEAR FROM age(cast(dob as date))) between 10 and 19 then true
    when #filter_type# = ''total_21_to_30'' and EXTRACT(YEAR FROM age(cast(dob as date))) between 20 and 29 then true
    when #filter_type# = ''total_31_to_40'' and EXTRACT(YEAR FROM age(cast(dob as date))) between 30 and 39 then true
    when #filter_type# = ''total_41_to_50'' and EXTRACT(YEAR FROM age(cast(dob as date))) between 40 and 49 then true
    when #filter_type# = ''total_51_to_60'' and EXTRACT(YEAR FROM age(cast(dob as date))) between 50 and 59 then true
    when #filter_type# = ''total_60_plus'' and EXTRACT(YEAR FROM age(cast(dob as date))) >=60  then true
    when #filter_type# = ''all'' then true
    else false end )
    and (
    #gender# is null or
    case when #gender# = ''M'' and gender = #gender# then true
    when #gender# = ''F'' and gender = #gender# then true
    else false end
    )
    and (
     #comorbidity# is null or 
     case when #comorbidity# = ''false'' and comorbidity is null then true 
     when #comorbidity# = ''true'' and comorbidity is not null then true 
     else false end
    )
    order by loc_anlyts.location_id,family_id desc
	 #limit_offset#
),
loc as (
	select distinct loc_id from age_info
), loc_det as (
    select
        case 
            when lm.type in (''D'', ''C'') then ''D''
            when lm.type in (''T'', ''B'', ''Z'') then ''T''
            when lm.type in (''P'', ''U'') then ''P''
            when lm.type in (''V'', ''AA'') then ''V''
            when lm.type in (''A'') then ''A''
            else lm.type end,
        lm.id as loc_id,
        lh.location_id,
        s.english_name as stateName,
        d.english_name as districtName,
        b.english_name as talukaName,
        p.english_name as facilityName,
        sc.english_name as subCenterName,
        v.english_name as villageName,
        a.english_name as areaName,
        case when  lm.demographic_type in (''U'', ''C'') then ''Urban'' 
        when lm.demographic_type in (''R'') then ''Rural'' end as locationType
    from loc 
    inner join location_master lm
    on lm.id = loc.loc_id
    left join location_level_hierarchy_master lh
    on lh.id = lm.location_hierarchy_id
    left join location_master s
    on lh.level1 = s.id and s.state = ''ACTIVE'' and s.name not ilike ''%delete%''
    left join location_master d
    on lh.level3 = d.id and d.state = ''ACTIVE'' and d.name not ilike ''%delete%''
    left join location_master b
    on lh.level4 = b.id and b.state = ''ACTIVE'' and b.name not ilike ''%delete%''
    left join location_master p
    on lh.level5 = p.id and p.state = ''ACTIVE'' and p.name not ilike ''%delete%''
    left join location_master sc
    on lh.level6 = sc.id and sc.state = ''ACTIVE'' and sc.name not ilike ''%delete%''
    left join location_master v
    on lh.level7 = v.id and v.state = ''ACTIVE'' and v.name not ilike ''%delete%''
    left join location_master a
    on lh.level8 = a.id and a.state = ''ACTIVE'' and a.name not ilike ''%delete%''
    where lm.state = ''ACTIVE'' and lm.name not ilike ''%delete%'' 
),
family_head as (
	select a.member_id as member_id,
	concat(im2.first_name,'' '',im2.middle_name,'' '',im2.last_name) as FamilyHead,
	im2.mobile_number as FamilyHeadMobileNo
	from imt_member im inner join age_info a on a.member_id = im.id
	inner join imt_family imf on imf.family_id = im.family_id
	inner join imt_member im2 on imf.hof_id = im2.id
),
final_det as (
select age_info.*,
loc_det.*,
case when m.mobile_number is null then family_head.FamilyHeadMobileNo else m.mobile_number end as mobile_number,
case when m.mobile_number is null and  family_head.FamilyHeadMobileNo is null then ''-''
when m.mobile_number is null then ''Family'' else ''Self'' end as mobile_number_belong_to,
case when address1 is null and address2 is null then ''-'' else concat(address1,'','',address2) end as address
from age_info 
left join imt_member m on age_info.member_id = m.id
left join loc_det on loc_det.loc_id = age_info.loc_id
left  join imt_family on imt_family.family_id = m.family_id
left join family_head on family_head.member_id = age_info.member_id
)
select  
ROW_NUMBER() over () + cast(SUBSTRING(''#limit_offset#'', POSITION(''offset'' in ''#limit_offset#'') + 7) as int) as "Sr No.",
stateName as "State",
districtName as "District/Corporation",
talukaName as "Block/Zone",
villageName as "Village Name",
ai.address as "Address Line",
locationType as "Location (Rural/ Urban)",
ai.member_name as "Member Name EN",
ai.unique_health_id as "Member Health Id",
ai.gender as "Gender",
dateOfBirth as "Date of Birth",
age as "Age",
case when ai.mobile_number is not null then ai.mobile_number else ''-'' end as "Mobile No",
ai.mobile_number_belong_to as "Mobile number belongs to",
case when comorbidity is null then ''-'' else initcap(replace(comorbidity, ''_'', '' '')) end as "Comorbidities"
from final_det ai',true,'ACTIVE','b46d6243-4733-4a00-8529-4cc4d799fce9');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (1783,74841,'2020-10-12 14:10:20.783',1,'2021-01-13 20:22:06.427965',NULL,'select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as year 
from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by year desc;',true,'ACTIVE','8fabdcd8-38ab-4fcb-9941-a00871323639'),
	 (1498,74840,'2020-01-23 15:51:05.352',1,'2021-01-13 20:22:06.427965','financial_year,loggedInUserId,location_id','with prefered_language as (
select 	case
		when report_preferred_language = ''EN'' then true
		else false
	end as is_enlish
from um_user where id = #loggedInUserId#
)
,ldp as (
	select child_id, case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
				else location_master.name end
	from location_hierchy_closer_det,location_master,prefered_language
        where parent_id = #location_id#
	and depth = 1 and location_master.id = location_hierchy_closer_det.child_id
),expected_target as (
	select ldp.child_id,
	location_wise_expected_target.expected_mother_reg as expected_mother_reg,
	location_wise_expected_target.expected_delivery_reg as expected_delivery_reg,
	location_wise_expected_target.ela_dpt_opv_mes_vita_1dose as ela_dpt_opv_mes_vita_1dose
	from ldp
	inner join location_wise_expected_target on ldp.child_id = location_wise_expected_target.location_id
	and location_wise_expected_target.financial_year = ''#financial_year#''
    and location_wise_expected_target.state = ''LOCKED''
)
, r as (
	select lhcd.parent_id as id
--	,ldp.name
	,coalesce(sum(stat.anc_reg),0) as anc_reg
	,coalesce(sum(stat.tt1),0) as tt1
	,coalesce(sum(stat.tt2_tt_booster),0) as tt2_tt_booster
	,coalesce(sum(stat.early_anc),0) as early_anc
	,coalesce(sum(stat.anc1),0) as anc1
	,coalesce(sum(stat.anc2),0) as anc2
	,coalesce(sum(stat.anc3),0) as anc3
	,coalesce(sum(stat.anc4),0) as anc4
    ,coalesce(sum(stat.ifa_180_anc_date),0) as ifa_180_anc
    ,coalesce(sum(stat.complete_anc_date),0) as complete_anc
    ,coalesce(sum(stat.mtp),0) as mtp
    ,coalesce(sum(stat.abortion),0) as abortion
	from location_hierchy_closer_det lhcd
	inner join ldp on lhcd.parent_id = ldp.child_id
	left join rch_service_provided_during_year stat on lhcd.child_id = stat.location_id
	and stat.financial_year = ''#financial_year#''
	/*case when ''#financial_year#'' != ''null'' then ''#financial_year#''
		else (
			case when extract(month from current_date) > 3
				then concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)
				else concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end
		) end*/
	group by lhcd.parent_id
	--,ldp.name
	--order by ldp.name
), s as (
	select ldp.name,r.*,expected_target.* from r,ldp
	left join expected_target on ldp.child_id = expected_target.child_id
	where ldp.child_id = r.id
	order by ldp.name
)
select  row_number() over() as "Sr. no"
,id as hidden_location_id
,name as  "Location"
,case when expected_mother_reg is null then ''Not available'' else cast(expected_mother_reg as text) end as "Expected Mother Registration"
,anc_reg as "Reg. After 1st April"
,case when expected_mother_reg is null then 0 else round(anc_reg*100.0/expected_mother_reg,2) end as "percent_col_ANC Regd. against ELA"
,early_anc as "Early ANC"
,case when anc_reg = 0 then 0 else round(early_anc*100.0/anc_reg ,2) end as "percent_col_Early ANC"
,tt1 as "TT1 given"
,case when anc_reg = 0 then 0 else round(tt1*100.0/anc_reg,2) end as "percent_col_TT1 given"
,tt2_tt_booster as "TT2+TT Booster"
,case when anc_reg = 0 then 0 else round(tt2_tt_booster*100.0/anc_reg,2) end as "percent_col_TT2+TT Booster"
,anc1 as "1 ANC"
,case when anc_reg = 0 then 0 else round(anc1*100.0/anc_reg ,2) end as "percent_col_1 ANC"
,anc2 as "2 ANC"
,case when anc_reg = 0 then 0 else round(anc2*100.0/anc_reg ,2) end as "percent_col_2 ANC"
,anc3 as "3 ANC"
,case when anc_reg = 0 then 0 else round(anc3*100.0/anc_reg ,2) end as "percent_col_3 ANC"
,anc4 as "4 ANC"
,case when anc_reg = 0 then 0 else round(anc4*100.0/anc_reg ,2) end as "percent_col_4 ANC"
,ifa_180_anc as "IFA 180"
,case when anc_reg = 0 then 0 else round(ifa_180_anc*100.0/anc_reg ,2) end as "percent_col_IFA 180 to ANC Regd"
,complete_anc as "complete ANC"
,case when anc_reg = 0 then 0 else round(complete_anc*100.0/anc_reg ,2) end as "percent_col_complete ANC"
,mtp as "MTP reported"
,case when anc_reg = 0 then 0 else round(mtp*100.0/anc_reg,2) end as "percent_col_MTP to total ANC Regd."
,abortion as "Abortion Reported"
,case when anc_reg = 0 then 0 else round(abortion*100.0/anc_reg,2) end as "percent_col_Abortion to ANC Regd."
from s

union all

select
null
,#location_id#
,''<b>Total</b>''
,cast(sum(case when expected_mother_reg is not null then expected_mother_reg else null end) as text)
,sum(anc_reg)
,case when sum(case when expected_mother_reg is not null then expected_mother_reg else 0 end) = 0 then 0 else round(sum(anc_reg)*100.0/sum(expected_mother_reg),2) end
,sum(early_anc)
,case when sum(anc_reg) = 0 then 0 else round(sum(early_anc)*100.0/sum(anc_reg),2) end
,sum(tt1)
,case when sum(anc_reg) = 0 then 0 else round(sum(tt1)*100.0/sum(anc_reg),2) end
,sum(tt2_tt_booster)
,case when sum(anc_reg) = 0 then 0 else round(sum(tt2_tt_booster)*100.0/sum(anc_reg),2) end
,sum(anc1)
,case when sum(anc_reg) = 0 then 0 else round(sum(anc1)*100.0/sum(anc_reg),2) end
,sum(anc2)
,case when sum(anc_reg) = 0 then 0 else round(sum(anc2)*100.0/sum(anc_reg),2) end
,sum(anc3)
,case when sum(anc_reg) = 0 then 0 else round(sum(anc3)*100.0/sum(anc_reg),2) end
,sum(anc4)
,case when sum(anc_reg) = 0 then 0 else round(sum(anc4)*100.0/sum(anc_reg),2) end
,sum(ifa_180_anc)
,case when sum(anc_reg) = 0 then 0 else round(sum(ifa_180_anc)*100.0/sum(anc_reg),2) end
,sum(complete_anc)
,case when sum(anc_reg) = 0 then 0 else round(sum(complete_anc)*100.0/sum(anc_reg),2) end
,sum(mtp)
,case when sum(anc_reg) = 0 then 0 else round(sum(mtp)*100.0/sum(anc_reg),2) end
,sum(abortion)
,case when sum(anc_reg) = 0 then 0 else round(sum(abortion)*100.0/sum(anc_reg),2) end
from s',true,'ACTIVE','782958f1-231c-4b3f-84ac-428137b02918'),
	 (1821,74841,'2020-12-07 16:00:25.713',66522,'2021-03-18 15:31:07.848','demographic_location_id,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
parameters as (
	select distinct CAST(#location_id# AS INTEGER) as location_id,
	(case when #location_id# is null then ''null'' else CAST(''#demographic_location_id#'' AS TEXT) end) as demographic_group
	--from um_user_location where user_id = #loggedInUserId# and state = ''ACTIVE''
),location_ids as(
    select vlc.parent_id from parameters p, vw_location_closure_det_by_parent_location_depth vlc 
    where vlc.location_id=p.location_id and vlc.depth=1 
    and (p.demographic_group=''null'' or vlc.child_demographic_type in 
    (select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
    ) group by vlc.parent_id
),age_info as (
    select vlc.parent_id as loc_id,
    sum(member_0_to_5_male) as member_0_to_5_male,
    sum(member_0_to_5_male_with_comorbid) as member_0_to_5_male_with_comorbid,
    sum(member_0_to_5_female) as member_0_to_5_female,
    sum(member_0_to_5_female_with_comorbid) as member_0_to_5_female_with_comorbid,
    sum(member_6_to_10_male) as member_6_to_10_male,
    sum(member_6_to_10_male_with_comorbid) as member_6_to_10_male_with_comorbid,
    sum(member_6_to_10_female) as member_6_to_10_female,
    sum(member_6_to_10_female_with_comorbid) as member_6_to_10_female_with_comorbid,
    sum(member_11_to_20_male) as member_11_to_20_male,
    sum(member_11_to_20_male_with_comorbid) as member_11_to_20_male_with_comorbid,
    sum(member_11_to_20_female) as member_11_to_20_female,
    sum(member_11_to_20_female_with_comorbid) as member_11_to_20_female_with_comorbid,
    sum(member_21_to_30_male) as member_21_to_30_male,
    sum(member_21_to_30_male_with_comorbid) as member_21_to_30_male_with_comorbid,
    sum(member_21_to_30_female) as member_21_to_30_female,
    sum(member_21_to_30_female_with_comorbid) as member_21_to_30_female_with_comorbid,
    sum(member_31_to_40_male) as member_31_to_40_male,
    sum(member_31_to_40_male_with_comorbid) as member_31_to_40_male_with_comorbid,
    sum(member_31_to_40_female) as member_31_to_40_female,
    sum(member_31_to_40_female_with_comorbid) as member_31_to_40_female_with_comorbid,
    sum(member_41_to_50_male) as member_41_to_50_male,
    sum(member_41_to_50_male_with_comorbid) as member_41_to_50_male_with_comorbid,
    sum(member_41_to_50_female) as member_41_to_50_female,
    sum(member_41_to_50_female_with_comorbid) as member_41_to_50_female_with_comorbid,
    sum(member_51_to_60_male) as member_51_to_60_male,
    sum(member_51_to_60_male_with_comorbid) as member_51_to_60_male_with_comorbid,
    sum(member_51_to_60_female) as member_51_to_60_female,
    sum(member_51_to_60_female_with_comorbid) as member_51_to_60_female_with_comorbid,
    sum(member_60_plus_male) as member_60_plus_male,
    sum(member_60_plus_male_with_comorbid) as member_60_plus_male_with_comorbid,
    sum(member_60_plus_female) as member_60_plus_female,
    sum(member_60_plus_female_with_comorbid) as member_60_plus_female_with_comorbid
    from parameters p 
	cross join vw_location_closure_det_by_parent_location_depth vlc  
    left join location_wise_analytics loc_anlyts on vlc.child_id = loc_anlyts.loc_id
    where 
    vlc.location_id=p.location_id and vlc.depth=1 
    and (p.demographic_group=''null'' or vlc.child_demographic_type in 
    (select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
    )
    group by vlc.parent_id
)
select  
    row_number() over(order by location_master.english_name) as "Sr No.",
    location_master.id as hidden_location_id,
    (select demographic_group from parameters) as hidden_demographic_location_id,
    case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name else location_master.name end as "Location",

COALESCE(member_0_to_5_male + member_6_to_10_male + member_11_to_20_male + member_21_to_30_male + member_31_to_40_male + member_41_to_50_male + member_51_to_60_male + member_60_plus_male, 0) as "Total Male",
COALESCE(member_0_to_5_female + member_6_to_10_female + member_11_to_20_female + member_21_to_30_female + member_31_to_40_female + member_41_to_50_female + member_51_to_60_female + member_60_plus_female, 0) as "Total Female",

COALESCE(member_0_to_5_male_with_comorbid + member_6_to_10_male_with_comorbid + member_11_to_20_male_with_comorbid + member_21_to_30_male_with_comorbid + member_31_to_40_male_with_comorbid + member_41_to_50_male_with_comorbid + member_51_to_60_male_with_comorbid + member_60_plus_male_with_comorbid, 0) as "Total Male with Comorbidities",
COALESCE(member_0_to_5_female_with_comorbid + member_6_to_10_female_with_comorbid + member_11_to_20_female_with_comorbid + member_21_to_30_female_with_comorbid + member_31_to_40_female_with_comorbid + member_41_to_50_female_with_comorbid + member_51_to_60_female_with_comorbid + member_60_plus_female_with_comorbid, 0) as "Total Female with Comorbidities",

COALESCE(member_0_to_5_male + member_6_to_10_male + member_11_to_20_male + member_21_to_30_male + member_31_to_40_male + member_41_to_50_male + member_51_to_60_male + member_60_plus_male + member_0_to_5_female + member_6_to_10_female + member_11_to_20_female + member_21_to_30_female + member_31_to_40_female + member_41_to_50_female + member_51_to_60_female + member_60_plus_female, 0) as "Total Population",
COALESCE(member_0_to_5_male_with_comorbid + member_6_to_10_male_with_comorbid + member_11_to_20_male_with_comorbid + member_21_to_30_male_with_comorbid + member_31_to_40_male_with_comorbid + member_41_to_50_male_with_comorbid + member_51_to_60_male_with_comorbid + member_60_plus_male_with_comorbid + member_0_to_5_female_with_comorbid + member_6_to_10_female_with_comorbid + member_11_to_20_female_with_comorbid + member_21_to_30_female_with_comorbid + member_31_to_40_female_with_comorbid + member_41_to_50_female_with_comorbid + member_51_to_60_female_with_comorbid + member_60_plus_female_with_comorbid, 0) as "Total Population with Comorbidities",

COALESCE(member_0_to_5_male, 0) as "0 to 5 Male",
COALESCE(member_0_to_5_male - member_0_to_5_male_with_comorbid, 0) as "0 TO 5 Male No Comorbidities",
COALESCE(member_0_to_5_male_with_comorbid, 0) as "0 to 5 Male with Comorbidities",

COALESCE(member_0_to_5_female, 0) as "0 to 5 Female",
COALESCE(member_0_to_5_female - member_0_to_5_female_with_comorbid, 0) as "0 TO 5 Female No Comorbidities",
COALESCE(member_0_to_5_female_with_comorbid, 0) as "0 to 5 Female with Comorbidities",

COALESCE(member_6_to_10_male, 0) as "6 to 10 Male",
COALESCE(member_6_to_10_male - member_6_to_10_male_with_comorbid, 0) as "6 to 10 Male No Comorbidities",
COALESCE(member_6_to_10_male_with_comorbid, 0) as "6 to 10 Male With Comorbidities",

COALESCE(member_6_to_10_female, 0) as "6 to 10 Female",
COALESCE(member_6_to_10_female - member_6_to_10_female_with_comorbid, 0) as "6 to 10 Female No Comorbidities",
COALESCE(member_6_to_10_female_with_comorbid, 0) as "6 to 10 Female Comorbidities",

COALESCE(member_11_to_20_male, 0) as "11 to 20 Male",
COALESCE(member_11_to_20_male - member_11_to_20_male_with_comorbid, 0) as "11 to 20 Male No Comorbidities",
COALESCE(member_11_to_20_male_with_comorbid, 0) as "11 to 20 Male Comorbidities",

COALESCE(member_11_to_20_female, 0) as "11 to 20 Female",
COALESCE(member_11_to_20_female - member_11_to_20_female_with_comorbid, 0) as "11 to 20 Female No Comorbidities",
COALESCE(member_11_to_20_female_with_comorbid, 0) as  "11 to 20 Female With Comorbidities",

COALESCE(member_21_to_30_male, 0) as  "21 to 30 Male",
COALESCE(member_21_to_30_male - member_21_to_30_male_with_comorbid, 0) as "21 to 30 Male No Comorbidities",
COALESCE(member_21_to_30_male_with_comorbid, 0) as "21 to 30 Male With Comorbidities",

COALESCE(member_21_to_30_female, 0) as "21 to 30 Female",
COALESCE(member_21_to_30_female - member_21_to_30_female_with_comorbid, 0) as "21 to 30 Female No Comorbidities",
COALESCE(member_21_to_30_female_with_comorbid, 0) as "21 to 30 Female With Comorbidities",

COALESCE(member_31_to_40_male, 0) as "31 to 40 Male",
COALESCE(member_31_to_40_male - member_31_to_40_male_with_comorbid, 0) as "31 to 40 Male No Comorbidities",
COALESCE(member_31_to_40_male_with_comorbid, 0) as "31 to 40 Male With Comorbidities",

COALESCE(member_31_to_40_female, 0) as "31 to 40 Female",
COALESCE(member_31_to_40_female - member_31_to_40_female_with_comorbid, 0) as "31 to 40 Female No Comorbidities",
COALESCE(member_31_to_40_female_with_comorbid, 0) as "31 to 40 Female With Comorbidities",

COALESCE(member_41_to_50_male, 0) as "41 to 50 Male",
COALESCE(member_41_to_50_male - member_41_to_50_male_with_comorbid, 0) as "41 to 50 Male No Comorbidities",
COALESCE(member_41_to_50_male_with_comorbid, 0) as "41 to 50 Male With Comorbidities",

COALESCE(member_41_to_50_female, 0) as "41 to 50 Female",
COALESCE(member_41_to_50_female - member_41_to_50_female_with_comorbid, 0) as "41 to 50 Female No Comorbidities",
COALESCE(member_41_to_50_female_with_comorbid, 0) as "41 to 50 Female With Comorbidities",

COALESCE(member_51_to_60_male, 0) as "51 to 60 Male",
COALESCE(member_51_to_60_male - member_51_to_60_male_with_comorbid, 0) as "51 to 60 Male No Comorbidities",
COALESCE(member_51_to_60_male_with_comorbid, 0) as "51 to 60 Male With Comorbidities",

COALESCE(member_51_to_60_female, 0) as "51 to 60 Female",
COALESCE(member_51_to_60_female - member_51_to_60_female_with_comorbid, 0) as "51 to 60 Female No Comorbidities",
COALESCE(member_51_to_60_female_with_comorbid, 0) as "51 to 60 Female With Comorbidities",

COALESCE(member_60_plus_male, 0) as "60+ Male",
COALESCE(member_60_plus_male - member_60_plus_male_with_comorbid, 0) as "60+ Male No Comorbidities",
COALESCE(member_60_plus_male_with_comorbid, 0) as "60+ Male With Comorbidities",

COALESCE(member_60_plus_female, 0) as "60+ Female",
COALESCE(member_60_plus_female - member_60_plus_female_with_comorbid, 0) as "60+ Female No Comorbidities",
COALESCE(member_60_plus_female_with_comorbid, 0) as "60+ Female With Comorbidities"
    from location_ids
    inner join prefered_language on true
    inner join location_master on location_master.id = location_ids.parent_id
    left join age_info ai on ai.loc_id = location_ids.parent_id
union all
select
null,
(case when #location_id# is null then 2 else #location_id# end)  as hidden_location_id,
(select demographic_group from parameters) as hidden_demographic_location_id,
''<b>Total<b>'',
COALESCE(sum(member_0_to_5_male) + sum(member_6_to_10_male) + sum(member_11_to_20_male) + sum(member_21_to_30_male) + sum(member_31_to_40_male) + sum(member_41_to_50_male) + sum(member_51_to_60_male) + sum(member_60_plus_male), 0),
COALESCE(sum(member_0_to_5_female) + sum(member_6_to_10_female) + sum(member_11_to_20_female) + sum(member_21_to_30_female) + sum(member_31_to_40_female) + sum(member_41_to_50_female) + sum(member_51_to_60_female) + sum(member_60_plus_female), 0),

COALESCE(sum(member_0_to_5_male_with_comorbid) + sum(member_6_to_10_male_with_comorbid) + sum(member_11_to_20_male_with_comorbid) + sum(member_21_to_30_male_with_comorbid) + sum(member_31_to_40_male_with_comorbid) + sum(member_41_to_50_male_with_comorbid) + sum(member_51_to_60_male_with_comorbid) + sum(member_60_plus_male_with_comorbid), 0),
COALESCE(sum(member_0_to_5_female_with_comorbid) + sum(member_6_to_10_female_with_comorbid) + sum(member_11_to_20_female_with_comorbid) + sum(member_21_to_30_female_with_comorbid) + sum(member_31_to_40_female_with_comorbid) + sum(member_41_to_50_female_with_comorbid) + sum(member_51_to_60_female_with_comorbid) + sum(member_60_plus_female_with_comorbid), 0),

COALESCE(sum(member_0_to_5_male) + sum(member_6_to_10_male) + sum(member_11_to_20_male) + sum(member_21_to_30_male) + sum(member_31_to_40_male) + sum(member_41_to_50_male) + sum(member_51_to_60_male) + sum(member_60_plus_male) + sum(member_0_to_5_female) + sum(member_6_to_10_female) + sum(member_11_to_20_female) + sum(member_21_to_30_female) + sum(member_31_to_40_female) + sum(member_41_to_50_female) + sum(member_51_to_60_female) + sum(member_60_plus_female), 0),
COALESCE(sum(member_0_to_5_male_with_comorbid) + sum(member_6_to_10_male_with_comorbid) + sum(member_11_to_20_male_with_comorbid) + sum(member_21_to_30_male_with_comorbid) + sum(member_31_to_40_male_with_comorbid) + sum(member_41_to_50_male_with_comorbid) + sum(member_51_to_60_male_with_comorbid) + sum(member_60_plus_male_with_comorbid) + sum(member_0_to_5_female_with_comorbid) + sum(member_6_to_10_female_with_comorbid) + sum(member_11_to_20_female_with_comorbid) + sum(member_21_to_30_female_with_comorbid) + sum(member_31_to_40_female_with_comorbid) + sum(member_41_to_50_female_with_comorbid) + sum(member_51_to_60_female_with_comorbid) + sum(member_60_plus_female_with_comorbid), 0),

COALESCE(sum(member_0_to_5_male), 0),
COALESCE(sum(member_0_to_5_male) - sum(member_0_to_5_male_with_comorbid), 0),
COALESCE(sum(member_0_to_5_male_with_comorbid), 0),
COALESCE(sum(member_0_to_5_female), 0),
COALESCE(sum(member_0_to_5_female) - sum(member_0_to_5_female_with_comorbid), 0),
COALESCE(sum(member_0_to_5_female_with_comorbid), 0),
COALESCE(sum(member_6_to_10_male), 0),
COALESCE(sum(member_6_to_10_male) - sum(member_6_to_10_male_with_comorbid), 0),
COALESCE(sum(member_6_to_10_male_with_comorbid), 0),
COALESCE(sum(member_6_to_10_female), 0),
COALESCE(sum(member_6_to_10_female) - sum(member_6_to_10_female_with_comorbid), 0),
COALESCE(sum(member_6_to_10_female_with_comorbid), 0),
COALESCE(sum(member_11_to_20_male), 0),
COALESCE(sum(member_11_to_20_male) - sum(member_11_to_20_male_with_comorbid), 0),
COALESCE(sum(member_11_to_20_male_with_comorbid), 0),
COALESCE(sum(member_11_to_20_female), 0),
COALESCE(sum(member_11_to_20_female) - sum(member_11_to_20_female_with_comorbid), 0),
COALESCE(sum(member_11_to_20_female_with_comorbid), 0),
COALESCE(sum(member_21_to_30_male), 0),
COALESCE(sum(member_21_to_30_male) - sum(member_21_to_30_male_with_comorbid), 0),
COALESCE(sum(member_21_to_30_male_with_comorbid), 0),
COALESCE(sum(member_21_to_30_female), 0),
COALESCE(sum(member_21_to_30_female) - sum(member_21_to_30_female_with_comorbid), 0),
COALESCE(sum(member_21_to_30_female_with_comorbid), 0),
COALESCE(sum(member_31_to_40_male), 0),
COALESCE(sum(member_31_to_40_male) - sum(member_31_to_40_male_with_comorbid), 0),
COALESCE(sum(member_31_to_40_male_with_comorbid), 0),
COALESCE(sum(member_31_to_40_female), 0),
COALESCE(sum(member_31_to_40_female) - sum(member_31_to_40_female_with_comorbid), 0),
COALESCE(sum(member_31_to_40_female_with_comorbid), 0),
COALESCE(sum(member_41_to_50_male), 0),
COALESCE(sum(member_41_to_50_male) - sum(member_41_to_50_male_with_comorbid), 0),
COALESCE(sum(member_41_to_50_male_with_comorbid), 0),
COALESCE(sum(member_41_to_50_female), 0),
COALESCE(sum(member_41_to_50_female) - sum(member_41_to_50_female_with_comorbid), 0),
COALESCE(sum(member_41_to_50_female_with_comorbid), 0),
COALESCE(sum(member_51_to_60_male), 0),
COALESCE(sum(member_51_to_60_male) - sum(member_51_to_60_male_with_comorbid), 0),
COALESCE(sum(member_51_to_60_male_with_comorbid), 0),
COALESCE(sum(member_51_to_60_female), 0),
COALESCE(sum(member_51_to_60_female) - sum(member_51_to_60_female_with_comorbid), 0),
COALESCE(sum(member_51_to_60_female_with_comorbid), 0),
COALESCE(sum(member_60_plus_male), 0),
COALESCE(sum(member_60_plus_male) - sum(member_60_plus_male_with_comorbid), 0),
COALESCE(sum(member_60_plus_male_with_comorbid), 0),
COALESCE(sum(member_60_plus_female), 0),
COALESCE(sum(member_60_plus_female) - sum(member_60_plus_female_with_comorbid), 0),
COALESCE(sum(member_60_plus_female_with_comorbid), 0)
from location_ids
left join age_info ai on ai.loc_id = location_ids.parent_id',true,'ACTIVE','4709ad84-246c-4fe1-a23d-ac4d24f49494'),
	 (1435,409,'2019-11-22 16:13:14.353',1,'2021-01-13 20:22:06.427965','from_month_year,to_month_year,loggedInUserId,location_id','----------Child services provided for the 2nd Year Immunization----------

with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 ldp as(
	select child_id, case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
else location_master.name end 
	from location_hierchy_closer_det, location_master, prefered_language  
	where parent_id = #location_id# and depth = 1 
	and location_master.id = location_hierchy_closer_det.child_id
), expected_target as (
	select ldp.child_id as id,
	((extract(month from to_date(''#to_month_year#'',''MM/DD/YYYY''))  - extract(month from to_date(''#from_month_year#'',''MM/DD/YYYY'')) + 1)*location_wise_expected_target.ela_dpt_opv_mes_vita_2dose/12) as ela_dpt_opv_mes_vita_2dose
	from ldp
	inner join location_wise_expected_target on ldp.child_id = location_wise_expected_target.location_id
	and location_wise_expected_target.financial_year = 
    case when #from_month_year# is null then ''2020-2021'' else concat(extract(year from to_date(''#from_month_year#'',''MM/DD/YYYY'')) - 1, ''-'', extract(year from to_date(''#to_month_year#'',''MM/DD/YYYY''))) end 
    and location_wise_expected_target.state = ''LOCKED''
), r as(
	select lhcd.parent_id as id, 
	coalesce(sum(stat.opv_booster_given),0) as opv_booster, 
	coalesce(sum(stat.dpt_booster_given),0) as dpt_booster, 
	coalesce(sum(stat.measles_or_rubella_2_given),0) as measles_or_rubella_2, 
	coalesce(sum(stat.complete_immunized),0) as complete_immunization_before_24_month
	from ldp
	inner join location_hierchy_closer_det lhcd on lhcd.parent_id = ldp.child_id
	left join child_services_given_analytics stat on lhcd.child_id = stat.location_id
	where stat.month_year between (case when #from_month_year# is null then ''01/01/1970'' else to_date(''#from_month_year#'',''MM/DD/YYYY'') end) 
	and (case when #to_month_year# is null then current_date else to_date(''#to_month_year#'',''MM/DD/YYYY'') end)
	group by lhcd.parent_id
), s as(
	select r.id, ldp.name,
	coalesce(r.opv_booster,0) as opv_booster,
	coalesce(r.dpt_booster,0) as dpt_booster,
	coalesce(r.measles_or_rubella_2,0) as measles_or_rubella_2,
	coalesce(complete_immunization_before_24_month,0) as complete_immunization_before_24_month ,
	coalesce(ela_dpt_opv_mes_vita_2dose,0) as ela_dpt_opv_mes_vita_2dose
	from ldp left join r on ldp.child_id = r.id 
    left join expected_target on ldp.child_id = expected_target.id
	order by ldp.name
)
select  row_number() over() as "Sr. no", 
id as hidden_location_id, name as  "Location", 
ela_dpt_opv_mes_vita_2dose as "ELA for 2nd year immunization",
opv_booster  as "OPV Booster", 
dpt_booster  as "DPT Booster", 
measles_or_rubella_2  as "Measles-2", 
complete_immunization_before_24_month  as "Complete Immunization"
from s
union all
select 
null, 
#location_id#,
''<b>Total</b>'', 
sum(ela_dpt_opv_mes_vita_2dose) as "ELA for 2nd year immunization", 
sum(opv_booster) as "OPV Booster", 
sum(dpt_booster) as "DPT Booster", 
sum(measles_or_rubella_2)  as "Measles-2", 
sum(complete_immunization_before_24_month)  as "Complete Immunization"
from s;',true,'ACTIVE','95c9022d-af6f-40d1-877f-8a12de3db90a'),
	 (219,58981,'2019-01-30 19:47:52.471',1,'2021-01-13 20:22:06.427965',NULL,'select concat(extract(year from curr), ''-'', extract(year from curr) + 1) as year 
from generate_series(date ''2013-04-01'', current_date, ''1 year'') as curr order by year desc;',true,'ACTIVE','317c36f2-3261-407a-83cc-90ebe394bf8e'),
	 (216,58981,'2019-01-30 16:02:41.082',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when prefered_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#)
select 
string_agg((case when ( prefered_language.is_enlish and (l2.english_name is not null)) then l2.english_name else l2.name end),''>'' order by lhcd.depth desc) as location_id
from location_master l1 
inner join location_hierchy_closer_det lhcd on lhcd.child_id = l1.id
inner join location_master l2 on l2.id = lhcd.parent_id
cross join prefered_language
where l1.id = #location_id#',true,'ACTIVE','3dbee497-65db-4741-ae34-ac153dee812c'),
	 (98,1027,'2018-11-14 17:03:49.057',1,'2021-01-13 20:22:06.427965','loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
 ldp as(
	select child_id, case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
else location_master.name end 
	from location_hierchy_closer_det, location_master, prefered_language 
	where parent_id = #location_id# and depth = 1 
	and location_master.id = location_hierchy_closer_det.child_id
),expected_target as (
	select ldp.child_id,
	location_wise_expected_target.ela_dpt_opv_mes_vita_1dose as ela_dpt_opv_mes_vita_1dose
	from ldp
	inner join location_wise_expected_target on ldp.child_id = location_wise_expected_target.location_id
	and location_wise_expected_target.financial_year = case when extract(month from current_date) > 3 
		then concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)
		else concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end
    and location_wise_expected_target.state = ''LOCKED''
), r as(
	select lhcd.parent_id as id, 
	coalesce(sum(stat.live_births_since_april_1),0) as live_births_since_april_1,
	coalesce(sum(stat.infant_death),0) as infant_death,
	coalesce(sum(stat.weighed),0) as weighed,
	coalesce(sum(stat.weighed_less_than_2_5),0) as weighed_less_than_2_5,
	coalesce(sum(stat.hep_b_given),0) as hep_b_given,
	coalesce(sum(stat.opv_0_given),0) as opv_0_given,
	coalesce(sum(stat.vitamin_k_given),0) as vitamin_k_given,
	coalesce(sum(stat.bcg_given),0) as bcg_given,
	coalesce(sum(stat.penta_1_given),0) as penta_1_given,
	coalesce(sum(stat.opv_1_given),0) as opv_1_given,
	coalesce(sum(stat.fipv_1_given),0) as fipv_1_given,
	coalesce(sum(stat.penta_2_given),0) as penta_2_given,
	coalesce(sum(stat.opv_2_given),0) as opv_2_given,
	coalesce(sum(stat.penta_3_given),0) as penta_3_given,
	coalesce(sum(stat.opv_3_given),0) as opv_3_given,
	coalesce(sum(stat.fipv_2_given),0) as fipv_2_given,
	coalesce(sum(stat.measles_1_given),0) as measles_1_given,
	coalesce(sum(stat.measles_rubella_1_given),0) as measles_rubella_1_given,
	coalesce(sum(stat.fully_immunized),0) as fully_immunized
	from ldp
	inner join location_hierchy_closer_det lhcd on lhcd.parent_id = ldp.child_id
	left join child_services_given_analytics stat on lhcd.child_id = stat.location_id
	where stat.financial_year = case when extract(month from current_date) > 3 
		then concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)
		else concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end
	group by lhcd.parent_id
), s as(
	select ldp.name,
	ldp.child_id,
	expected_target.ela_dpt_opv_mes_vita_1dose,
	coalesce(r.live_births_since_april_1,0) as live_births_since_april_1,
	coalesce(r.infant_death,0) as infant_death,
	coalesce(r.weighed,0) as weighed,
	coalesce(r.weighed_less_than_2_5,0) as weighed_less_than_2_5,
	coalesce(r.hep_b_given,0) as hep_b_given,
	coalesce(r.opv_0_given,0) as opv_0_given,
	coalesce(r.vitamin_k_given,0) as vitamin_k_given,
	coalesce(r.bcg_given,0) as bcg_given,
	coalesce(r.penta_1_given,0) as penta_1_given,
	coalesce(r.opv_1_given,0) as opv_1_given,
	coalesce(r.fipv_1_given,0) as fipv_1_given,
	coalesce(r.penta_2_given,0) as penta_2_given,
	coalesce(r.opv_2_given,0) as opv_2_given,
	coalesce(r.penta_3_given,0) as penta_3_given,
	coalesce(r.opv_3_given,0) as opv_3_given,
	coalesce(r.fipv_2_given,0) as fipv_2_given,
	coalesce(r.measles_1_given,0) as measles_1_given,
	coalesce(r.measles_rubella_1_given,0) as measles_rubella_1_given,
	coalesce(r.fully_immunized,0) as fully_immunized
	from ldp left join r on ldp.child_id = r.id
	left join expected_target on ldp.child_id = expected_target.child_id
	order by ldp.name
)
select  row_number() over() as "Sr. no", 
name as  "Location", 
child_id as hidden_location_id,
live_births_since_april_1 as "Live Birth from 1st April",
case when ela_dpt_opv_mes_vita_1dose is null then ''Not available'' else cast(ela_dpt_opv_mes_vita_1dose as text) end as "Expected Vaccination Dose",
infant_death as "Infant Death",
weighed as "Children weighed",
weighed_less_than_2_5 as "Out of weighed, less than 2.5 kg",
hep_b_given as "Hep B given",
opv_0_given as "OPV 0 given",
vitamin_k_given as "Vitamin K given",
bcg_given as "BCG given",
penta_1_given as "Penta 1 given",
opv_1_given as "OPV 1 given",
fipv_1_given as "FIPV 1 given",
penta_2_given as "Penta 2 given",
opv_2_given as "OPV 2 given",
penta_3_given as "Penta 3 given",
opv_3_given as "OPV 3 given",
fipv_2_given as "FIPV 2 given",
measles_1_given as "Measles given",
measles_rubella_1_given as "Measles Rubella given",
fully_immunized as "Fully Immunized Children"
from s
union all
select 
null, 
''<b>Total</b>'', 
#location_id#,
sum(live_births_since_april_1),
cast(sum(case when ela_dpt_opv_mes_vita_1dose is not null then ela_dpt_opv_mes_vita_1dose else 0 end) as text),
sum(infant_death), 
sum(weighed), 
sum(weighed_less_than_2_5), 
sum(hep_b_given), 
sum(opv_0_given), 
sum(vitamin_k_given),
sum(bcg_given),
sum(penta_1_given),
sum(opv_1_given),
sum(fipv_1_given),
sum(penta_2_given),
sum(opv_2_given),
sum(penta_3_given),
sum(opv_3_given),
sum(fipv_2_given),
sum(measles_1_given),
sum(measles_rubella_1_given),
sum(fully_immunized)
from s;',true,'ACTIVE','c4a75aff-a4ce-462a-990e-56ef21236db1'),
	 (1501,74840,'2020-01-23 18:48:54.947',1,'2021-01-13 20:22:06.427965','financial_year,loggedInUserId,location_id','with prefered_language as (
select 	case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end as is_enlish
from um_user where id = #loggedInUserId#
)
,ldp as (
	select child_id, case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
				else location_master.name end
	from location_hierchy_closer_det,location_master,prefered_language
        where parent_id = #location_id# 
	and depth = 1 and location_master.id = location_hierchy_closer_det.child_id
),expected_target as (
	select ldp.child_id,
	location_wise_expected_target.expected_mother_reg as expected_mother_reg,
	location_wise_expected_target.expected_delivery_reg as expected_delivery_reg,
	location_wise_expected_target.ela_dpt_opv_mes_vita_1dose as ela_dpt_opv_mes_vita_1dose
	from ldp
	inner join location_wise_expected_target on ldp.child_id = location_wise_expected_target.location_id
	and location_wise_expected_target.financial_year = ''#financial_year#''
    and location_wise_expected_target.state = ''LOCKED''
)
, r as (
	select lhcd.parent_id as id
--	,ldp.name 
	,coalesce(sum(stat.anc_reg),0) as anc_reg	
	,coalesce(sum(stat.no_of_delivery),0) as no_of_del	
	,coalesce(sum(stat.pnc1),0) as pnc1
	,coalesce(sum(stat.pnc2),0) as pnc2
	,coalesce(sum(stat.pnc3),0) as pnc3
	,coalesce(sum(stat.pnc4),0) as pnc4
	,coalesce(sum(stat.mother_death),0) as maternal_detah
    ,coalesce(sum(stat.live_birth),0) as live_birth
    ,coalesce(sum(stat.still_birth),0) as still_birth
	from location_hierchy_closer_det lhcd 
	inner join ldp on lhcd.parent_id = ldp.child_id
	left join rch_service_provided_during_year stat on lhcd.child_id = stat.location_id
	and stat.financial_year = ''#financial_year#''
	/*case when ''#financial_year#'' != ''null'' then ''#financial_year#''
		else (
			case when extract(month from current_date) > 3 
				then concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)
				else concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end
		) end*/
	group by lhcd.parent_id
	--,ldp.name
	--order by ldp.name
), s as (
	select ldp.name,r.*,expected_target.* from r,ldp
	left join expected_target on ldp.child_id = expected_target.child_id
	where ldp.child_id = r.id
	order by ldp.name
)
select  row_number() over() as "Sr. no"
,id as hidden_location_id
,name as  "Location"
,case when expected_delivery_reg is null then ''Not available'' else cast(expected_delivery_reg as text) end as "Expected Delivery Registration"
,no_of_del as "No of del"
,case when expected_delivery_reg is null then 0 else round(no_of_del*100.0/expected_delivery_reg,2) end as "percent_col_Del. Regd. Against ELA"
,pnc1 as "1 PNC"
,case when no_of_del= 0 then 0 else round(pnc1*100.0/no_of_del,2) end as "percent_col_1 PNC"
,pnc2 as "2 PNC"
,case when no_of_del= 0 then 0 else round(pnc2*100.0/no_of_del,2) end as "percent_col_2 PNC"
,pnc3 as "3 PNC"
,case when no_of_del= 0 then 0 else round(pnc3*100.0/no_of_del ,2) end as "percent_col_3 PNC"
,pnc4 as "4 PNC"
,case when no_of_del= 0 then 0 else round(pnc4*100.0/no_of_del,2) end as "percent_col_4 PNC"
,live_birth as "Live births reported"
,case when no_of_del= 0 then 0 else round(live_birth*100.0/no_of_del,2) end as "percent_col_Live births reported"
,still_birth as "Still births reported"
,case when no_of_del= 0 then 0 else round(still_birth*100.0/no_of_del,2) end as "percent_col_Still births reported"
,maternal_detah as "Maternal deaths"
,case when anc_reg = 0 then 0 else round(maternal_detah*100.0/anc_reg ,2) end as "percent_col_Maternal deaths"
from s

union all

select 
null
,#location_id#
,''<b>Total</b>''
,cast(sum(case when expected_delivery_reg is not null then expected_delivery_reg else 0 end) as text)
,sum(no_of_del)
,case when sum(case when expected_delivery_reg is not null then expected_delivery_reg else 0 end) = 0 then 0 else round(sum(no_of_del)*100.0/sum(expected_delivery_reg),2) end
,sum(pnc1)
,case when sum(no_of_del) = 0 then 0 else round(sum(pnc1)*100.0/sum(no_of_del),2) end
,sum(pnc2)
,case when sum(no_of_del) = 0 then 0 else round(sum(pnc2)*100.0/sum(no_of_del),2) end
,sum(pnc3)
,case when sum(no_of_del) = 0 then 0 else round(sum(pnc3)*100.0/sum(no_of_del),2) end
,sum(pnc4)
,case when sum(no_of_del) = 0 then 0 else round(sum(pnc4)*100.0/sum(no_of_del),2) end
,sum(live_birth)
,case when sum(no_of_del) = 0 then 0 else round(sum(live_birth)*100.0/sum(no_of_del),2) end
,sum(still_birth)
,case when sum(no_of_del) = 0 then 0 else round(sum(still_birth)*100.0/sum(no_of_del),2) end
,sum(maternal_detah)
,case when sum(anc_reg) = 0 then 0 else round(sum(maternal_detah)*100.0/sum(anc_reg),2) end
from s',true,'ACTIVE','96c94b57-7d09-437b-8a87-6587fe6bd345'),
	 (97,1027,'2018-11-01 17:47:22.02',1,'2021-01-13 20:22:06.427965','financial_year,loggedInUserId,location_id','with prefered_language as (
select 	case 
		when report_preferred_language = ''EN'' then true  
		else false 
	end as is_enlish
from um_user where id = #loggedInUserId#
)
,ldp as (
	select child_id, 
	case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
				else location_master.name end as name,
	case when ( prefered_language.is_enlish and (parent.english_name is not null)) then parent.english_name
				else parent.name end as parent_name
	from location_hierchy_closer_det,location_master,prefered_language, location_master parent
        where parent_id = #location_id# and parent.id = location_master.parent
	and depth = 1 and location_master.id = location_hierchy_closer_det.child_id
),expected_target as (
	select ldp.child_id,
	location_wise_expected_target.expected_mother_reg as expected_mother_reg,
	location_wise_expected_target.expected_delivery_reg as expected_delivery_reg,
	location_wise_expected_target.ela_dpt_opv_mes_vita_1dose as ela_dpt_opv_mes_vita_1dose
	from ldp
	inner join location_wise_expected_target on ldp.child_id = location_wise_expected_target.location_id
	and location_wise_expected_target.financial_year = ''#financial_year#''
    and location_wise_expected_target.state = ''LOCKED''
)
, r as (
	select lhcd.parent_id as id
--	,ldp.name 
	,coalesce(sum(stat.anc_reg),0) as anc_reg
	,coalesce(sum(stat.tt1),0) as tt1
	,coalesce(sum(stat.tt2_tt_booster),0) as tt2_tt_booster
	,coalesce(sum(stat.early_anc),0) as early_anc
	,coalesce(sum(stat.anc1),0) as anc1
	,coalesce(sum(stat.anc2),0) as anc2
	,coalesce(sum(stat.anc3),0) as anc3
	,coalesce(sum(stat.anc4),0) as anc4
	,coalesce(sum(stat.no_of_delivery),0) as no_of_del
	,coalesce(sum(stat.mtp),0) as mtp
	,coalesce(sum(stat.abortion),0) as abortion
	,coalesce(sum(stat.pnc1),0) as pnc1
	,coalesce(sum(stat.pnc2),0) as pnc2
	,coalesce(sum(stat.pnc3),0) as pnc3
	,coalesce(sum(stat.pnc4),0) as pnc4
	,coalesce(sum(stat.mother_death),0) as maternal_detah
	from location_hierchy_closer_det lhcd 
	inner join ldp on lhcd.parent_id = ldp.child_id
	left join rch_service_provided_during_year stat on lhcd.child_id = stat.location_id
	and stat.financial_year = ''#financial_year#''
	/*case when ''#financial_year#'' != ''null'' then ''#financial_year#''
		else (
			case when extract(month from current_date) > 3 
				then concat(extract(year from current_date), ''-'', extract(year from current_date) + 1)
				else concat(extract(year from current_date) - 1, ''-'', extract(year from current_date)) end
		) end*/
	group by lhcd.parent_id
	--,ldp.name
	--order by ldp.name
), s as (
	select ldp.name,ldp.parent_name,r.*,expected_target.* from r,ldp
	left join expected_target on ldp.child_id = expected_target.child_id
	where ldp.child_id = r.id
	order by ldp.name
)
select  row_number() over() as "Sr. no"
,id as hidden_location_id
,name as  "Location"
,parent_name as "Parent Location Name"
,anc_reg as "Reg. After 1st April"
,case when expected_mother_reg is null then ''Not available'' else cast(expected_mother_reg as text) end as "Expected Mother Registration"
,tt1 as "TT1 given"
,case when anc_reg = 0 then 0 else round(tt1*100.0/anc_reg,2) end as "percent_col_TT1 given"
,tt2_tt_booster as "TT2+TT Booster"
,case when anc_reg = 0 then 0 else round(tt2_tt_booster*100.0/anc_reg,2) end as "percent_col_TT2+TT Booster"
,early_anc as "Early ANC"
,case when anc_reg = 0 then 0 else round(early_anc*100.0/anc_reg ,2) end as "percent_col_Early ANC"
,anc1 as "1 ANC"
,case when anc_reg = 0 then 0 else round(anc1*100.0/anc_reg ,2) end as "percent_col_1 ANC"
,anc2 as "2 ANC"
,case when anc_reg = 0 then 0 else round(anc2*100.0/anc_reg ,2) end as "percent_col_2 ANC"
,anc3 as "3 ANC"
,case when anc_reg = 0 then 0 else round(anc3*100.0/anc_reg ,2) end as "percent_col_3 ANC"
,anc4 as "4 ANC"
,case when anc_reg = 0 then 0 else round(anc4*100.0/anc_reg ,2) end as "percent_col_4 ANC"
,no_of_del as "No of del"
,case when coalesce(expected_delivery_reg, 0) = 0 then 0 else round(no_of_del*100.0/expected_delivery_reg,2) end as "percent_col_No of del"
,case when coalesce(expected_delivery_reg, 0) = 0 then ''Not available'' else cast(expected_delivery_reg as text) end as "Expected Delivery Registration"
,mtp as "MTP"
,case when anc_reg = 0 then 0 else round(mtp*100.0/anc_reg ,2) end as "percent_col_MTP"
,abortion as "Abortion"
,case when anc_reg = 0 then 0 else round(abortion*100.0/anc_reg ,2) end as "percent_col_Abortion"
,pnc1 as "1 PNC"
,case when no_of_del= 0 then 0 else round(pnc1*100.0/no_of_del,2) end as "percent_col_1 PNC"
,pnc2 as "2 PNC"
,case when no_of_del= 0 then 0 else round(pnc2*100.0/no_of_del,2) end as "percent_col_2 PNC"
,pnc3 as "3 PNC"
,case when no_of_del= 0 then 0 else round(pnc3*100.0/no_of_del ,2) end as "percent_col_3 PNC"
,pnc4 as "4 PNC"
,case when no_of_del= 0 then 0 else round(pnc4*100.0/no_of_del,2) end as "percent_col_4 PNC"
,maternal_detah as "Maternal deaths"
,case when anc_reg = 0 then 0 else round(maternal_detah*100.0/anc_reg ,2) end as "percent_col_Maternal deaths"
from s
union all
select 
null
,#location_id#
,''<b>Total</b>''
,null
,sum(anc_reg)
,cast(sum(case when expected_mother_reg is not null then expected_mother_reg else 0 end) as text)
,sum(tt1)
,case when sum(anc_reg) = 0 then 0 else round(sum(tt1)*100.0/sum(anc_reg),2) end
,sum(tt2_tt_booster)
,case when sum(anc_reg) = 0 then 0 else round(sum(tt2_tt_booster)*100.0/sum(anc_reg),2) end
,sum(early_anc)
,case when sum(anc_reg) = 0 then 0 else round(sum(early_anc)*100.0/sum(anc_reg),2) end
,sum(anc1)
,case when sum(anc_reg) = 0 then 0 else round(sum(anc1)*100.0/sum(anc_reg),2) end
,sum(anc2)
,case when sum(anc_reg) = 0 then 0 else round(sum(anc2)*100.0/sum(anc_reg),2) end
,sum(anc3)
,case when sum(anc_reg) = 0 then 0 else round(sum(anc3)*100.0/sum(anc_reg),2) end
,sum(anc4)
,case when sum(anc_reg) = 0 then 0 else round(sum(anc4)*100.0/sum(anc_reg),2) end
,sum(no_of_del)
,case when sum(expected_delivery_reg) = 0 then 0 else round(sum(no_of_del)*100.0/sum(expected_delivery_reg),2) end
,cast(sum(case when expected_delivery_reg is not null then expected_delivery_reg else 0 end) as text)
,sum(mtp)
,case when sum(anc_reg) = 0 then 0 else round(sum(mtp)*100.0/sum(anc_reg),2) end
,sum(abortion)
,case when sum(anc_reg) = 0 then 0 else round(sum(abortion)*100.0/sum(anc_reg),2) end
,sum(pnc1)
,case when sum(no_of_del) = 0 then 0 else round(sum(pnc1)*100.0/sum(no_of_del),2) end
,sum(pnc2)
,case when sum(no_of_del) = 0 then 0 else round(sum(pnc2)*100.0/sum(no_of_del),2) end
,sum(pnc3)
,case when sum(no_of_del) = 0 then 0 else round(sum(pnc3)*100.0/sum(no_of_del),2) end
,sum(pnc4)
,case when sum(no_of_del) = 0 then 0 else round(sum(pnc4)*100.0/sum(no_of_del),2) end
,sum(maternal_detah)
,case when sum(anc_reg) = 0 then 0 else round(sum(maternal_detah)*100.0/sum(anc_reg),2) end
from s;',true,'ACTIVE','8520bcbe-643e-42d4-b1e7-2f18e789856b'),
	 (1264,409,'2019-07-29 06:58:40.322',1,'2021-01-13 20:22:06.427965','from_date,to_date,location_id','with location_detail as (
	select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1
),dates as (
	select to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM-DD-YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date
),details as (
	select location_detail.child_id,
	coalesce(sum(member_enrolled),0) as member_enrolled,
	coalesce(sum(member_30_plus),0) as member_30_plus,
	coalesce(sum(number_of_asha),0) as number_of_asha,
	coalesce(sum(number_of_inactive_asha),0) as number_of_inactive_asha,
	coalesce(sum(number_of_fhw),0) as number_of_fhw,
	coalesce(sum(number_of_inactive_fhw),0) as number_of_inactive_fhw,
	coalesce(sum(number_of_mo),0) as number_of_mo,
	coalesce(sum(number_of_active_mo),0) as number_of_active_mo
	from location_detail
	inner join location_hierchy_closer_det on location_detail.child_id = location_hierchy_closer_det.parent_id
	inner join ncd_analytics_detail on location_hierchy_closer_det.child_id = ncd_analytics_detail.location_id
	inner join dates on ncd_analytics_detail.month_year = dates.from_date
	group by location_detail.child_id
),analytics as (
	select location_detail.child_id,
	coalesce(sum(number_of_cbac_form_filled),0) as number_of_cbac_form_filled,
	coalesce(sum(number_of_member_at_risk),0) as number_of_member_at_risk,
	coalesce(sum(fhw_screened_diabetes_male),0) as fhw_screened_diabetes_male,
	coalesce(sum(fhw_screened_diabetes_female),0) as fhw_screened_diabetes_female,
	coalesce(sum(fhw_screened_hypertension_male),0) as fhw_screened_hypertension_male,
	coalesce(sum(fhw_screened_hypertension_female),0) as fhw_screened_hypertension_female,
	coalesce(sum(fhw_screened_oral_male),0) as fhw_screened_oral_male,
	coalesce(sum(fhw_screened_oral_female),0) as fhw_screened_oral_female,
	coalesce(sum(fhw_screened_breast_female),0) as fhw_screened_breast_female,
	coalesce(sum(fhw_screened_cervical_female),0) as fhw_screened_cervical_female,
	coalesce(sum(no_abnormally_detected_male),0) as no_abnormally_detected_male,
	coalesce(sum(no_abnormally_detected_female),0) as no_abnormally_detected_female,
	coalesce(sum(fhw_referred_diabetes_male),0) as fhw_referred_diabetes_male,
	coalesce(sum(fhw_referred_diabetes_female),0) as fhw_referred_diabetes_female,
	coalesce(sum(fhw_referred_hypertension_male),0) as fhw_referred_hypertension_male,
	coalesce(sum(fhw_referred_hypertension_female),0) as fhw_referred_hypertension_female,
	coalesce(sum(fhw_referred_oral_male),0) as fhw_referred_oral_male,
	coalesce(sum(fhw_referred_oral_female),0) as fhw_referred_oral_female,
	coalesce(sum(fhw_referred_breast_female),0) as fhw_referred_breast_female,
	coalesce(sum(fhw_referred_cervical_female),0) as fhw_referred_cervical_female,
	coalesce(sum(mo_examined_diabetes_male),0) as mo_examined_diabetes_male,
	coalesce(sum(mo_examined_diabetes_female),0) as mo_examined_diabetes_female,
	coalesce(sum(mo_examined_hypertension_male),0) as mo_examined_hypertension_male,
	coalesce(sum(mo_examined_hypertension_female),0) as mo_examined_hypertension_female,
	coalesce(sum(mo_examined_oral_male),0) as mo_examined_oral_male,
	coalesce(sum(mo_examined_oral_female),0) as mo_examined_oral_female,
	coalesce(sum(mo_examined_breast_female),0) as mo_examined_breast_female,
	coalesce(sum(mo_examined_cervical_female),0) as mo_examined_cervical_female,
	coalesce(sum(mo_diagnosed_diabetes_male),0) as mo_diagnosed_diabetes_male,
	coalesce(sum(mo_diagnosed_diabetes_female),0) as mo_diagnosed_diabetes_female,
	coalesce(sum(mo_diagnosed_hypertension_male),0) as mo_diagnosed_hypertension_male,
	coalesce(sum(mo_diagnosed_hypertension_female),0) as mo_diagnosed_hypertension_female,
	coalesce(sum(mo_diagnosed_oral_male),0) as mo_diagnosed_oral_male,
	coalesce(sum(mo_diagnosed_oral_female),0) as mo_diagnosed_oral_female,
	coalesce(sum(mo_diagnosed_breast_female),0) as mo_diagnosed_breast_female,
	coalesce(sum(mo_diagnosed_cervical_female),0) as mo_diagnosed_cervical_female,
	coalesce(sum(under_treatment_diabetes_male),0) as under_treatment_diabetes_male,
	coalesce(sum(under_treatment_diabetes_female),0) as under_treatment_diabetes_female,
	coalesce(sum(under_treatment_hypertension_male),0) as under_treatment_hypertension_male,
	coalesce(sum(under_treatment_hypertension_female),0) as under_treatment_hypertension_female,
	coalesce(sum(under_treatment_oral_male),0) as under_treatment_oral_male,
	coalesce(sum(under_treatment_oral_female),0) as under_treatment_oral_female,
	coalesce(sum(under_treatment_breast_female),0) as under_treatment_breast_female,
	coalesce(sum(under_treatment_cervical_female),0) as under_treatment_cervical_female,
	coalesce(sum(secondary_referred_diabetes_male),0) as secondary_referred_diabetes_male,
	coalesce(sum(secondary_referred_diabetes_female),0) as secondary_referred_diabetes_female,
	coalesce(sum(secondary_referred_hypertension_male),0) as secondary_referred_hypertension_male,
	coalesce(sum(secondary_referred_hypertension_female),0) as secondary_referred_hypertension_female,
	coalesce(sum(secondary_referred_oral_male),0) as secondary_referred_oral_male,
	coalesce(sum(secondary_referred_oral_female),0) as secondary_referred_oral_female,
	coalesce(sum(secondary_referred_breast_female),0) as secondary_referred_breast_female,
	coalesce(sum(secondary_referred_cervical_female),0) as secondary_referred_cervical_female
	from location_detail
	inner join location_hierchy_closer_det on location_detail.child_id = location_hierchy_closer_det.parent_id
	inner join ncd_analytics_detail on location_hierchy_closer_det.child_id = ncd_analytics_detail.location_id
	inner join dates on ncd_analytics_detail.month_year between dates.from_date and dates.to_date
	group by location_detail.child_id
)
select row_number() over() as "Sr.no",
location_master.name as "Location",
location_master.id as hidden_location_id,
member_enrolled as "Population enrollment",
member_30_plus as "Population ≥ 30 years",
number_of_asha as "Number of ASHAs",
number_of_inactive_asha as "Number of Inactive ASHAs",
number_of_cbac_form_filled as "Number of CBAC forms filled",
number_of_member_at_risk as "Number of Members At Risk",
number_of_fhw as "Number of ANMs/CHO",
number_of_inactive_fhw as "Number of Inactive ANMs/CHOs",
fhw_screened_diabetes_male as "Screened by ANM/CHOs Diabetes Male",
fhw_screened_diabetes_female as "Screened by ANM/CHOs Diabetes Female",
fhw_screened_hypertension_male as "Screened by ANM/CHOs Hypertension Male",
fhw_screened_hypertension_female as "Screened by ANM/CHOs Hypertension Female",
fhw_screened_oral_male as "Screened by ANM/CHOs Oral Cancer Male",
fhw_screened_oral_female as "Screened by ANM/CHOs Oral Cancer Female",
fhw_screened_breast_female as "Screened by ANM/CHOs Breast Cancer Female",
fhw_screened_cervical_female as "Screened by ANM/CHOs Cervical Cancer Female",
no_abnormally_detected_male as "Number of No Abnormality Detected Male",
no_abnormally_detected_female as "Number of No Abnormality Detected Female",
fhw_referred_diabetes_male as "Referred to PHC Diabetes Male",
fhw_referred_diabetes_female as "Referred to PHC Diabetes Female",
fhw_referred_hypertension_male as "Referred to PHC Hypertension Male",
fhw_referred_hypertension_female as "Referred to PHC Hypertension Female",
fhw_referred_oral_male as "Referred to PHC Oral Cancer Male",
fhw_referred_oral_female as "Referred to PHC Oral Cancer Female",
fhw_referred_breast_female as "Referred to PHC Breast Cancer Female",
fhw_referred_cervical_female as "Referred to PHC Cervical Cancer Female",
number_of_mo as "Number of MO",
number_of_active_mo as "Number of Active Mos",
mo_examined_diabetes_male as "Examined at PHC Diabetes Male",
mo_examined_diabetes_female as "Examined at PHC Diabetes Female",
mo_examined_hypertension_male as "Examined at PHC Hypertension Male",
mo_examined_hypertension_female as "Examined at PHC Hypertension Female",
mo_examined_oral_male as "Examined at PHC Oral Cancer Male",
mo_examined_oral_female as "Examined at PHC Oral Cancer Female",
mo_examined_breast_female as "Examined at PHC Breast Cancer Female",
mo_examined_cervical_female as "Examined at PHC Cervical Cancer Female",
mo_diagnosed_diabetes_male as "Diagnosed Cases Diabetes Male",
mo_diagnosed_diabetes_female as "Diagnosed Cases Diabetes Female",
mo_diagnosed_hypertension_male as "Diagnosed Cases Hypertension Male",
mo_diagnosed_hypertension_female as "Diagnosed Cases Hypertension Female",
mo_diagnosed_oral_male as "Diagnosed Cases Oral Cancer Male",
mo_diagnosed_oral_female as "Diagnosed Cases Oral Cancer Female",
mo_diagnosed_breast_female as "Diagnosed Cases Breast Cancer Female",
mo_diagnosed_cervical_female as "Diagnosed Cases Cervical Cancer Female",
under_treatment_diabetes_male as "Under Treatment Diabetes Male",
under_treatment_diabetes_female as "Under Treatment Diabetes Female",
under_treatment_hypertension_male as "Under Treatment Hypertension Male",
under_treatment_hypertension_female as "Under Treatment Hypertension Female",
under_treatment_oral_male as "Under Treatment Oral Cancer Male",
under_treatment_oral_female as "Under Treatment Oral Cancer Female",
under_treatment_breast_female as "Under Treatment Breast Cancer Female",
under_treatment_cervical_female as "Under Treatment Cervical Cancer Female",
secondary_referred_diabetes_male as "Referred to Secondary Diabetes Male",
secondary_referred_diabetes_female as "Referred to Secondary Diabetes Female",
secondary_referred_hypertension_male as "Referred to Secondary Hypertension Male",
secondary_referred_hypertension_female as "Referred to Secondary Hypertension Female",
secondary_referred_oral_male as "Referred to Secondary Oral Cancer Male",
secondary_referred_oral_female as "Referred to Secondary Oral Cancer Female",
secondary_referred_breast_female as "Referred to Secondary Breast Cancer Female",
secondary_referred_cervical_female as "Referred to Secondary Cervical Cancer Female"
from location_master
inner join analytics on location_master.id = analytics.child_id
inner join details on location_master.id = details.child_id
union all
select null,
''<b>Total<b>'',
#location_id#,
sum(member_enrolled),
sum(member_30_plus),
sum(number_of_asha),
sum(number_of_inactive_asha),
sum(number_of_cbac_form_filled),
sum(number_of_member_at_risk),
sum(number_of_fhw),
sum(number_of_inactive_fhw),
sum(fhw_screened_diabetes_male),
sum(fhw_screened_diabetes_female),
sum(fhw_screened_hypertension_male),
sum(fhw_screened_hypertension_female),
sum(fhw_screened_oral_male),
sum(fhw_screened_oral_female),
sum(fhw_screened_breast_female),
sum(fhw_screened_cervical_female),
sum(no_abnormally_detected_male),
sum(no_abnormally_detected_female),
sum(fhw_referred_diabetes_male),
sum(fhw_referred_diabetes_female),
sum(fhw_referred_hypertension_male),
sum(fhw_referred_hypertension_female),
sum(fhw_referred_oral_male),
sum(fhw_referred_oral_female),
sum(fhw_referred_breast_female),
sum(fhw_referred_cervical_female),
sum(number_of_mo),
sum(number_of_active_mo),
sum(mo_examined_diabetes_male),
sum(mo_examined_diabetes_female),
sum(mo_examined_hypertension_male),
sum(mo_examined_hypertension_female),
sum(mo_examined_oral_male),
sum(mo_examined_oral_female),
sum(mo_examined_breast_female),
sum(mo_examined_cervical_female),
sum(mo_diagnosed_diabetes_male),
sum(mo_diagnosed_diabetes_female),
sum(mo_diagnosed_hypertension_male),
sum(mo_diagnosed_hypertension_female),
sum(mo_diagnosed_oral_male),
sum(mo_diagnosed_oral_female),
sum(mo_diagnosed_breast_female),
sum(mo_diagnosed_cervical_female),
sum(under_treatment_diabetes_male),
sum(under_treatment_diabetes_female),
sum(under_treatment_hypertension_male),
sum(under_treatment_hypertension_female),
sum(under_treatment_oral_male),
sum(under_treatment_oral_female),
sum(under_treatment_breast_female),
sum(under_treatment_cervical_female),
sum(secondary_referred_diabetes_male),
sum(secondary_referred_diabetes_female),
sum(secondary_referred_hypertension_male),
sum(secondary_referred_hypertension_female),
sum(secondary_referred_oral_male),
sum(secondary_referred_oral_female),
sum(secondary_referred_breast_female),
sum(secondary_referred_cervical_female)
from location_master
inner join analytics on location_master.id = analytics.child_id
inner join details on location_master.id = details.child_id',true,'ACTIVE','2f841f54-170e-4c03-818b-b5228fb4f3a6');
INSERT INTO public.report_query_master (id,created_by,created_on,modified_by,modified_on,params,query,returns_result_set,state,uuid) VALUES
	 (950,60512,'2019-04-10 11:41:17.278',1,'2021-01-13 20:22:06.427965','to_month,demographic_location_id,loggedInUserId,from_month,location_id','with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month# is null then null else ''#from_month#'' end,''MM/DD/YYYY'') as from_month,
to_date(case when #to_month# is null then null else ''#to_month#'' end,''MM/DD/YYYY'') as to_month,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
), r as (
	select vlc.parent_id as id
	,coalesce(sum(stat.anc_reg),0) as anc_reg
	,coalesce(sum(stat.tt1),0) as tt1
	,coalesce(sum(stat.tt2_tt_booster),0) as tt2_tt_booster
	,coalesce(sum(stat.early_anc),0) as early_anc
	,coalesce(sum(stat.anc1),0) as anc1
	,coalesce(sum(stat.anc2),0) as anc2
	,coalesce(sum(stat.anc3),0) as anc3
	,coalesce(sum(stat.anc4),0) as anc4
	,coalesce(sum(stat.no_of_delivery),0) as no_of_del
	,coalesce(sum(stat.mtp),0) as mtp
	,coalesce(sum(stat.abortion),0) as abortion
	,coalesce(sum(stat.pnc1),0) as pnc1
	,coalesce(sum(stat.pnc2),0) as pnc2
	,coalesce(sum(stat.pnc3),0) as pnc3
	,coalesce(sum(stat.pnc4),0) as pnc4
	,coalesce(sum(stat.mother_death),0) as maternal_detah
	from parameters p cross join vw_location_closure_det_by_parent_location_depth vlc 
	left join rch_service_provided_during_year stat on vlc.child_id = stat.location_id
	and stat.month_year between p.from_month and p.to_month
	where vlc.location_id=p.location_id and vlc.depth=1 
	and (p.demographic_group=''null'' or vlc.child_demographic_type in 
	(select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	) group by vlc.parent_id
),
s as (
	select case when ( p.preferred_language and (lm.english_name is not null)) 
		then lm.english_name 
		else lm.name end as location_name,
		case when ( p.preferred_language and (parent.english_name is not null)) 
		then parent.english_name 
		else parent.name end as parnet_location_name,
	r.* from r, parameters p, location_master lm, location_master parent
	where lm.id=r.id and parent.id = lm.parent
	order by location_name
)
select  row_number() over() as "Sr. no"
,id as hidden_location_id
,(select demographic_group from parameters) as hidden_demographic_location_id
,location_name as  "Location"
,parnet_location_name as "Parent Location Name"
,anc_reg as "Total Registered"
,tt1 as "TT1 given"
,case when anc_reg = 0 then 0 else round(tt1*100.0/anc_reg,2) end as "percent_col_TT1 given"
,tt2_tt_booster as "TT2+TT Booster"
,case when anc_reg = 0 then 0 else round(tt2_tt_booster*100.0/anc_reg,2) end as "percent_col_TT2+TT Booster"
,early_anc  as "Early ANC"
,case when anc_reg = 0 then 0 else round(early_anc*100.0/anc_reg ,2) end as "percent_col_Early ANC"
,anc1  as "1 ANC"
,case when anc_reg = 0 then 0 else round(anc1*100.0/anc_reg ,2) end as "percent_col_1 ANC"
,anc2 as "2 ANC"
,case when anc_reg = 0 then 0 else round(anc2*100.0/anc_reg ,2) end as "percent_col_2 ANC" 
,anc3  as "3 ANC"
,case when anc_reg = 0 then 0 else round(anc3*100.0/anc_reg ,2) end as "percent_col_3 ANC"
,anc4  as "4 ANC"
,case when anc_reg = 0 then 0 else round(anc4*100.0/anc_reg ,2) end as "percent_col_4 ANC"
,no_of_del  as "No of del"
,case when anc_reg = 0 then 0 else round(no_of_del*100.0/anc_reg,2) end as "percent_col_No of del"
,mtp  as "MTP"
,case when anc_reg = 0 then 0 else round(mtp*100.0/anc_reg ,2) end as "percent_col_MTP"
,abortion  as "Abortion"
,case when anc_reg = 0 then 0 else round(abortion*100.0/anc_reg ,2) end as "percent_col_Abortion"
,pnc1 as "1 PNC"
,case when anc_reg = 0 then 0 else round(pnc1*100.0/anc_reg ,2) end as "percent_col_1 PNC"
,pnc2  as "2 PNC"
,case when anc_reg = 0 then 0 else round(pnc2*100.0/anc_reg ,2) end as "percent_col_2 PNC"
,pnc3  as "3 PNC"
,case when anc_reg = 0 then 0 else round(pnc3*100.0/anc_reg ,2) end as "percent_col_3 PNC"
,pnc4  as "4 PNC"
,case when anc_reg = 0 then 0 else round(pnc4*100.0/anc_reg ,2) end as "percent_col_4 PNC"
,maternal_detah  as "Maternal deaths"
,case when anc_reg = 0 then 0 else round(maternal_detah*100.0/anc_reg ,2) end as "percent_col_Maternal deaths"
from s
union all
select 
null
,(select location_id from parameters) as hidden_location_id
,(select demographic_group from parameters) as hidden_demographic_location_id
,''<b>Total</b>''
,null
,sum(anc_reg)
,sum(tt1)
,case when sum(anc_reg) = 0 then 0 else round(sum(tt1)*100.0/sum(anc_reg),2) end
,sum(tt2_tt_booster)
,case when sum(anc_reg) = 0 then 0 else round(sum(tt2_tt_booster)*100.0/sum(anc_reg),2) end
,sum(early_anc)
,case when sum(anc_reg) = 0 then 0 else round(sum(early_anc)*100.0/sum(anc_reg),2) end
,sum(anc1)
,case when sum(anc_reg) = 0 then 0 else round(sum(anc1)*100.0/sum(anc_reg),2) end
,sum(anc2)
,case when sum(anc_reg) = 0 then 0 else round(sum(anc2)*100.0/sum(anc_reg),2) end
,sum(anc3)
,case when sum(anc_reg) = 0 then 0 else round(sum(anc3)*100.0/sum(anc_reg),2) end
,sum(anc4)
,case when sum(anc_reg) = 0 then 0 else round(sum(anc4)*100.0/sum(anc_reg),2) end
,sum(no_of_del)
,case when sum(anc_reg) = 0 then 0 else round(sum(no_of_del)*100.0/sum(anc_reg),2) end
,sum(mtp)
,case when sum(anc_reg) = 0 then 0 else round(sum(mtp)*100.0/sum(anc_reg),2) end
,sum(abortion)
,case when sum(anc_reg) = 0 then 0 else round(sum(abortion)*100.0/sum(anc_reg),2) end
,sum(pnc1)
,case when sum(anc_reg) = 0 then 0 else round(sum(pnc1)*100.0/sum(anc_reg),2) end
,sum(pnc2)
,case when sum(anc_reg) = 0 then 0 else round(sum(pnc2)*100.0/sum(anc_reg),2) end
,sum(pnc3)
,case when sum(anc_reg) = 0 then 0 else round(sum(pnc3)*100.0/sum(anc_reg),2) end
,sum(pnc4)
,case when sum(anc_reg) = 0 then 0 else round(sum(pnc4)*100.0/sum(anc_reg),2) end
,sum(maternal_detah)
,case when sum(anc_reg) = 0 then 0 else round(sum(maternal_detah)*100.0/sum(anc_reg),2) end
from s;',true,'ACTIVE','7c01b9af-825e-4060-9f88-302a282d8291'),
	 (1345,60512,'2019-08-19 19:30:42.015',1,'2021-01-13 20:22:06.427965','from_date,to_date,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
dates as(
	select
	to_date(case when ''#from_date#'' = ''null'' then null else ''#from_date#'' end, ''MM-DD-YYYY'') as from_date ,
	to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end, ''MM-DD-YYYY'') + interval ''1 day'' - interval ''1 millisecond'' as to_date 
),location_ids as(
	select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth = 1
),counts as (
	select location_ids.child_id,
	count(*) filter (where rch_child_analytics_details.gender = ''M'') as male_live_births,
	count(*) filter (where rch_child_analytics_details.gender = ''F'') as female_live_births
	from location_ids
	inner join location_hierchy_closer_det on location_hierchy_closer_det.parent_id = location_ids.child_id
	inner join rch_child_analytics_details on location_hierchy_closer_det.child_id = rch_child_analytics_details.delivery_location_id
	and rch_child_analytics_details.member_id is not null
	inner join dates on rch_child_analytics_details.dob between dates.from_date and dates.to_date
	group by location_ids.child_id
),det as (
	select row_number() over() as sr_no,
	-- location_master.name as loc,
       case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
else location_master.name end as loc,
case when ( prefered_language.is_enlish and (parent.english_name is not null)) then parent.english_name
else parent.name end as parent_loc,
	location_master.id as hidden_location_id,
	coalesce(counts.male_live_births,0) as male_live_births,
	coalesce(counts.female_live_births,0) as female_live_births,
	case when coalesce(counts.male_live_births,0) = 0 then cast(''N/A'' as text) 
		else cast(coalesce(counts.female_live_births,0)*1000/coalesce(counts.male_live_births,0) as text) end as sex_ratio
	from location_ids
	left join counts on location_ids.child_id = counts.child_id
	inner join location_master on location_ids.child_id = location_master.id
	inner join location_master parent on parent.id = location_master.parent
       cross join prefered_language

)
select row_number() over() as "Sr. no",
det.loc as "Location",
det.parent_loc as "Parent Location Name",
det.hidden_location_id,
det.male_live_births as "Male Live Birth",
det.female_live_births as "Female Live Birth",
det.sex_ratio as "Sex Ratio At Birth"
from det
union all
select null,
''<b>Total<b>'',
null,
#location_id#,
sum(det.male_live_births),
sum(det.female_live_births),
case when sum(det.male_live_births) = 0 then cast(''N/A'' as text)
	else cast(cast(sum(det.female_live_births)*1000/sum(det.male_live_births) as integer)as text) end
from det',true,'ACTIVE','d887535a-20e8-4d4f-956c-a60c47334517'),
	 (69,1027,'2018-08-30 11:40:25.403',1,'2021-01-13 20:22:06.427965','from_month_year,to_month_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#),
ldp as(
  select location_id,anc_reg,early_anc,tt2_tt_booster,anc1,anc2,anc3,anc4,ifa,full_anc
  from rch_lmp_base_location_wise_data_point,location_hierchy_closer_det
  where rch_lmp_base_location_wise_data_point.location_id = location_hierchy_closer_det.child_id 
  and location_hierchy_closer_det.parent_id = #location_id#
  and month_year between 
  	(case when #from_month_year# is null then ''01/01/1970'' else to_date(''#from_month_year#'',''MM/DD/YYYY'') end) 
  and 
  	(case when #to_month_year# is null then ''01/01/1970'' else to_date(''#to_month_year#'',''MM/DD/YYYY'') end)
 ), w as (
    select
	location_hierchy_closer_det.parent_id as loc_id,
    coalesce(sum(anc_reg),0) as anc_reg,
    coalesce(sum(early_anc),0) as early_anc,
    coalesce(sum(tt2_tt_booster),0) as tt2_boster,
    coalesce(sum(anc1),0) as anc1,
    coalesce(sum(anc2),0) as anc2,
    coalesce(sum(anc3),0) as anc3,
    coalesce(sum(anc4),0) as anc4,
    coalesce(sum(ifa),0) as ifa_180,
    coalesce(sum(full_anc),0) as full_anc
from (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth=1)as t 
inner join location_hierchy_closer_det on t.child_id = location_hierchy_closer_det.parent_id 
inner join ldp on ldp.location_id = location_hierchy_closer_det.child_id
group by location_hierchy_closer_det.parent_id 
),s as (
select 
case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name
else lm.name end as "Location Name",
case when ( prefered_language.is_enlish and (parent.english_name is not null)) then parent.english_name
else parent.name end as "Parent Location Name",
	lm.id AS hidden_location_id,
    coalesce(anc_reg,0) as "Total ANC registered",
    coalesce(early_anc,0) as "Early ANC",
    round(coalesce(case when anc_reg = 0 then 0 else early_anc*100/anc_reg end,0),2) as "Percentage of Early ANC",
    coalesce(tt2_boster,0) as "TT2+TT Booster",
    round(coalesce(case when anc_reg = 0 then 0 else tt2_boster*100/anc_reg end,0),2) as "Percentage of TT2+TT Booster",
    coalesce(anc1,0) as "ANC 1",
    round(coalesce(case when anc_reg = 0 then 0 else anc1*100/anc_reg end,0),2) as "Percentage of ANC 1",
    coalesce(anc2,0) as "ANC 2",
    round(coalesce(case when anc_reg = 0 then 0 else anc2*100/anc_reg end,0),2) as "Percentage of ANC 2",
    coalesce(anc3,0) as "ANC 3",
    round(coalesce(case when anc_reg = 0 then 0 else anc3*100/anc_reg end,0),2) as "Percentage of ANC 3",
    coalesce(anc4,0) as "ANC 4",
    round(coalesce(case when anc_reg = 0 then 0 else anc4*100/anc_reg end,0),2) as "Percentage of ANC 4",
    coalesce(ifa_180,0) as "180 IFA",
    round(coalesce(ifa_180*100/anc_reg,0),2) as "Percentage of 180 IFA",
    coalesce(full_anc,0) as "Full ANC",
    round(coalesce(full_anc*100/anc_reg,0),2) as "Percentage of Full ANC"
from (select child_id from location_hierchy_closer_det where parent_id = #location_id# and depth=1 limit 500) as t
inner join location_master lm on lm.id = t.child_id
inner join location_master parent on lm.parent = parent.id
left join w on w.loc_id = lm.id
cross join prefered_language
order by (case when ( prefered_language.is_enlish and (lm.english_name is not null)) then lm.english_name
else lm.name end)
)
select row_number() over() as "Sr. no", s.* FROM s
union all
SELECT
	NULL,
    ''<b>Total<b>'',
    null,
    #location_id#,
    coalesce(sum("Total ANC registered"),0),
    coalesce(sum("Early ANC"),0),
    round(coalesce(case when sum("Total ANC registered") = 0 then 0 else sum("Early ANC")*100/sum("Total ANC registered") end,0),2), 
    coalesce(sum("TT2+TT Booster"),0),
    round(coalesce(case when sum("Total ANC registered") = 0 then 0 else sum("TT2+TT Booster")*100/sum("Total ANC registered") end,0),2), 
    coalesce(sum("ANC 1"),0),
    round(coalesce(case when sum("Total ANC registered") = 0 then 0 else sum("ANC 1")*100/sum("Total ANC registered") end,0),2), 
    coalesce(sum("ANC 2"),0),
    round(coalesce(case when sum("Total ANC registered") = 0 then 0 else sum("ANC 2")*100/sum("Total ANC registered") end,0),2), 
    coalesce(sum("ANC 3"),0),
    round(coalesce(case when sum("Total ANC registered") = 0 then 0 else sum("ANC 3")*100/sum("Total ANC registered") end,0),2), 
    coalesce(sum("ANC 4"),0),
    round(coalesce(case when sum("Total ANC registered") = 0 then 0 else sum("ANC 4")*100/sum("Total ANC registered") end,0),2), 
    coalesce(sum("180 IFA"),0),
    round(coalesce(case when sum("Total ANC registered") = 0 then 0 else sum("180 IFA")*100/sum("Total ANC registered") end,0),2), 
    coalesce(sum("Full ANC"),0),
    round(coalesce(case when sum("Total ANC registered") = 0 then 0 else sum("Full ANC")*100/sum("Total ANC registered") end,0),2)
from s',true,'ACTIVE','f0c5cb40-4da7-451d-a8f7-59bc512ab18e'),
	 (131,58981,'2019-01-12 11:31:48.406',1,'2021-01-13 20:22:06.427965','financial_year,loggedInUserId,location_id','with prefered_language as(
select (case 
when report_preferred_language = ''EN'' then true  
else false 
end) as is_enlish 
from um_user where id = #loggedInUserId#), 
ldp as(
	select child_id, case when ( prefered_language.is_enlish and (location_master.english_name is not null)) then location_master.english_name
else location_master.name end as name, 
case when ( prefered_language.is_enlish and (parent.english_name is not null)) then parent.english_name
else parent.name end as parent_name
	from location_hierchy_closer_det, location_master,  prefered_language , location_master parent
	where parent_id = #location_id# and depth = 1 
	and location_master.id = location_hierchy_closer_det.child_id and parent.id = location_master.parent
),expected_target as (
	select ldp.child_id,
	location_wise_expected_target.ela_dpt_opv_mes_vita_1dose as ela_dpt_opv_mes_vita_1dose
	from ldp
	inner join location_wise_expected_target on ldp.child_id = location_wise_expected_target.location_id
	and location_wise_expected_target.financial_year = ''#financial_year#''
    and location_wise_expected_target.state = ''LOCKED''
), r as(
	select lhcd.parent_id as id, 
	coalesce(sum(stat.live_births_since_april_1),0) as live_births_since_april_1,
	coalesce(sum(stat.infant_death),0) as infant_death,
	coalesce(sum(stat.weighed),0) as weighed,
	coalesce(sum(stat.weighed_less_than_2_5),0) as weighed_less_than_2_5,
	coalesce(sum(stat.hep_b_given),0) as hep_b_given,
	coalesce(sum(stat.opv_0_given),0) as opv_0_given,
	coalesce(sum(stat.vitamin_k_given),0) as vitamin_k_given,
	coalesce(sum(stat.bcg_given),0) as bcg_given,
	coalesce(sum(stat.penta_1_given),0) as penta_1_given,
	coalesce(sum(stat.opv_1_given),0) as opv_1_given,
	coalesce(sum(stat.fipv_1_given),0) as fipv_1_given,
	coalesce(sum(stat.penta_2_given),0) as penta_2_given,
	coalesce(sum(stat.opv_2_given),0) as opv_2_given,
	coalesce(sum(stat.penta_3_given),0) as penta_3_given,
	coalesce(sum(stat.opv_3_given),0) as opv_3_given,
	coalesce(sum(stat.fipv_2_given),0) as fipv_2_given,
	coalesce(sum(stat.measles_1_given),0) as measles_1_given,
	coalesce(sum(stat.measles_rubella_1_given),0) as measles_rubella_1_given,
	coalesce(sum(stat.rota_virus_1_given),0) as rota_virus_1_given,
	coalesce(sum(stat.rota_virus_2_given),0) as rota_virus_2_given,
	coalesce(sum(stat.rota_virus_3_given),0) as rota_virus_3_given,
	coalesce(sum(stat.fully_immunized),0) as fully_immunized
	from ldp
	inner join location_hierchy_closer_det lhcd on lhcd.parent_id = ldp.child_id
	left join child_services_given_analytics stat on lhcd.child_id = stat.location_id
	where stat.financial_year = ''#financial_year#''
	group by lhcd.parent_id
), s as(
	select ldp.name,
	ldp.parent_name,
	ldp.child_id,
	expected_target.ela_dpt_opv_mes_vita_1dose,
	coalesce(r.live_births_since_april_1,0) as live_births_since_april_1,
	coalesce(r.infant_death,0) as infant_death,
	coalesce(r.weighed,0) as weighed,
	coalesce(r.weighed_less_than_2_5,0) as weighed_less_than_2_5,
	coalesce(r.hep_b_given,0) as hep_b_given,
	coalesce(r.opv_0_given,0) as opv_0_given,
	coalesce(r.vitamin_k_given,0) as vitamin_k_given,
	coalesce(r.bcg_given,0) as bcg_given,
	coalesce(r.penta_1_given,0) as penta_1_given,
	coalesce(r.opv_1_given,0) as opv_1_given,
	coalesce(r.fipv_1_given,0) as fipv_1_given,
	coalesce(r.penta_2_given,0) as penta_2_given,
	coalesce(r.opv_2_given,0) as opv_2_given,
	coalesce(r.penta_3_given,0) as penta_3_given,
	coalesce(r.opv_3_given,0) as opv_3_given,
	coalesce(r.fipv_2_given,0) as fipv_2_given,
	coalesce(r.measles_1_given,0) as measles_1_given,
	coalesce(r.measles_rubella_1_given,0) as measles_rubella_1_given,
	coalesce(r.rota_virus_1_given,0) as rota_virus_1_given,
	coalesce(r.rota_virus_2_given,0) as rota_virus_2_given,
	coalesce(r.rota_virus_3_given,0) as rota_virus_3_given,
	coalesce(r.fully_immunized,0) as fully_immunized
	from ldp left join r on ldp.child_id = r.id 
	left join expected_target on ldp.child_id = expected_target.child_id
	order by ldp.name
)
select  row_number() over() as "Sr. no", 
name as  "Location", 
parent_name as "Parent Location Name",
child_id as hidden_location_id,
live_births_since_april_1 as "Live Birth from 1st April",
case when ela_dpt_opv_mes_vita_1dose is null then ''Not available'' else cast(ela_dpt_opv_mes_vita_1dose as text) end as "Expected Vaccination Dose",
infant_death as "Infant Death",
weighed as "Children weighed",
weighed_less_than_2_5 as "Out of weighed, less than 2.5 kg",
hep_b_given as "Hep B given",
opv_0_given as "OPV 0 given",
vitamin_k_given as "Vitamin K given",
bcg_given as "BCG given",
penta_1_given as "Penta 1 given",
opv_1_given as "OPV 1 given",
fipv_1_given as "FIPV 1 given",
penta_2_given as "Penta 2 given",
opv_2_given as "OPV 2 given",
penta_3_given as "Penta 3 given",
opv_3_given as "OPV 3 given",
fipv_2_given as "FIPV 2 given",
measles_1_given as "Measles given",
measles_rubella_1_given as "Measles Rubella given",
rota_virus_1_given as "Rota Virus 1",
rota_virus_2_given as "Rota Virus 2",
rota_virus_3_given as "Rota Virus 3",
fully_immunized as "Fully Immunized Children"
from s
union all
select 
null, 
''<b>Total</b>'', 
null,
#location_id#,
sum(live_births_since_april_1),
cast(sum(case when ela_dpt_opv_mes_vita_1dose is not null then ela_dpt_opv_mes_vita_1dose else 0 end) as text),
sum(infant_death), 
sum(weighed), 
sum(weighed_less_than_2_5), 
sum(hep_b_given), 
sum(opv_0_given), 
sum(vitamin_k_given),
sum(bcg_given),
sum(penta_1_given),
sum(opv_1_given),
sum(fipv_1_given),
sum(penta_2_given),
sum(opv_2_given),
sum(penta_3_given),
sum(opv_3_given),
sum(fipv_2_given),
sum(measles_1_given),
sum(measles_rubella_1_given),
sum(rota_virus_1_given),
sum(rota_virus_2_given),
sum(rota_virus_3_given),
sum(fully_immunized)
from s;',true,'ACTIVE','6b70a876-c444-405f-a254-fda7fca877e2'),
	 (122,58981,'2019-01-09 16:51:39.516',1,'2021-01-13 20:22:06.427965','from_month_year,to_month_year,demographic_location_id,loggedInUserId,location_id','with parameters as (
select CAST(#location_id# AS INTEGER) as location_id,
to_date(case when #from_month_year# is null then null else ''#from_month_year#'' end,''MM/DD/YYYY'') as from_month,
to_date(case when #to_month_year# is null then null else ''#to_month_year#'' end,''MM/DD/YYYY'') as to_month,
CAST(''#demographic_location_id#'' AS TEXT) as demographic_group,
(select report_preferred_language=''EN'' from um_user where id = CAST(''#loggedInUserId#'' AS INTEGER)) as preferred_language
), r as(
	select vlc.parent_id as id, 
	coalesce(sum(stat.live_births_since_april_1),0) as live_births_since_april_1,
	coalesce(sum(stat.infant_death),0) as infant_death,
	coalesce(sum(stat.weighed),0) as weighed,
	coalesce(sum(stat.weighed_less_than_2_5),0) as weighed_less_than_2_5,
	coalesce(sum(stat.hep_b_given),0) as hep_b_given,
	coalesce(sum(stat.opv_0_given),0) as opv_0_given,
	coalesce(sum(stat.vitamin_k_given),0) as vitamin_k_given,
	coalesce(sum(stat.bcg_given),0) as bcg_given,
	coalesce(sum(stat.penta_1_given),0) as penta_1_given,
	coalesce(sum(stat.opv_1_given),0) as opv_1_given,
	coalesce(sum(stat.fipv_1_given),0) as fipv_1_given,
	coalesce(sum(stat.penta_2_given),0) as penta_2_given,
	coalesce(sum(stat.opv_2_given),0) as opv_2_given,
	coalesce(sum(stat.penta_3_given),0) as penta_3_given,
	coalesce(sum(stat.opv_3_given),0) as opv_3_given,
	coalesce(sum(stat.fipv_2_given),0) as fipv_2_given,
	coalesce(sum(stat.measles_1_given),0) as measles_1_given,
	coalesce(sum(stat.measles_rubella_1_given),0) as measles_rubella_1_given,
	coalesce(sum(stat.rota_virus_1_given),0) as rota_virus_1_given,
	coalesce(sum(stat.rota_virus_2_given),0) as rota_virus_2_given,
	coalesce(sum(stat.rota_virus_3_given),0) as rota_virus_3_given,
	coalesce(sum(stat.fully_immunized),0) as fully_immunized
	from
	parameters p cross join vw_location_closure_det_by_parent_location_depth vlc 
	left join child_services_given_analytics stat on vlc.child_id = stat.location_id
	and stat.month_year between p.from_month and p.to_month
	where vlc.location_id=p.location_id and vlc.depth=1 
	and (p.demographic_group=''null'' or vlc.child_demographic_type in 
	(select distinct demographic_type from location_demographic_type_master where demographic_group = p.demographic_group)
	) group by vlc.parent_id
),
s as (
	select case when ( p.preferred_language and (lm.english_name is not null)) 
		then lm.english_name 
		else lm.name end as location_name,
		case when ( p.preferred_language and (parent.english_name is not null)) 
		then parent.english_name 
		else parent.name end as parent_location_name,
	r.* from r, parameters p, location_master lm, location_master parent
	where lm.id=r.id and parent.id = lm.parent
	order by location_name
)
select  row_number() over() as "Sr. no", 
location_name as  "Location",
parent_location_name as "Parent Location Name",
id as hidden_location_id,
(select demographic_group from parameters) as hidden_demographic_location_id,
live_births_since_april_1 as "Live Birth",
infant_death as "Infant Death",
weighed as "Children weighed",
weighed_less_than_2_5 as "Out of weighed, less than 2.5 kg",
hep_b_given as "Hep B given",
opv_0_given as "OPV 0 given",
vitamin_k_given as "Vitamin K given",
bcg_given as "BCG given",
penta_1_given as "Penta 1 given",
opv_1_given as "OPV 1 given",
fipv_1_given as "FIPV 1 given",
penta_2_given as "Penta 2 given",
opv_2_given as "OPV 2 given",
penta_3_given as "Penta 3 given",
opv_3_given as "OPV 3 given",
fipv_2_given as "FIPV 2 given",
measles_1_given as "Measles given",
measles_rubella_1_given as "Measles Rubella Given",
rota_virus_1_given as "Rota Virus 1",
rota_virus_2_given as "Rota Virus 2",
rota_virus_3_given as "Rota Virus 3",
fully_immunized as "Fully Immunized Children"
from s
union all
select 
null, 
''<b>Total</b>'', 
null,
#location_id#,
(select demographic_group from parameters) as hidden_demographic_location_id,
sum(live_births_since_april_1), 
sum(infant_death), 
sum(weighed), 
sum(weighed_less_than_2_5), 
sum(hep_b_given), 
sum(opv_0_given), 
sum(vitamin_k_given),
sum(bcg_given),
sum(penta_1_given),
sum(opv_1_given),
sum(fipv_1_given),
sum(penta_2_given),
sum(opv_2_given),
sum(penta_3_given),
sum(opv_3_given),
sum(fipv_2_given),
sum(measles_1_given),
sum(measles_rubella_1_given),
sum(rota_virus_1_given),
sum(rota_virus_2_given),
sum(rota_virus_3_given),
sum(fully_immunized)
from s;',true,'ACTIVE','993579dd-29fa-4677-b0aa-b38ebef00ccd'),
	 (1191,57698,'2019-07-05 14:50:55.722',1,'2021-01-13 20:22:06.427965','from_date,to_date,role_id,location_id','WITH loc_det AS (
    SELECT
        child_id as id
    FROM
        location_hierchy_closer_det
    WHERE
        parent_id = #location_id#
        AND "depth" = 1
),
dates AS (
    select from_date,
	case when to_date > current_date - interval ''1 millisecond'' then current_date - interval ''1 millisecond'' else to_date end as to_date
	from (
	SELECT
        to_date(
            CASE WHEN ''#from_date#'' = ''null'' THEN
                NULL
            ELSE
                ''#from_date#''
            END, ''MM-DD-YYYY'') AS from_date,
        to_date(case when ''#to_date#'' = ''null'' then null else ''#to_date#'' end,''MM/DD/YYYY'') + interval ''1 month'' - interval ''1 millisecond'' as to_date) as t
),
number_of_working_days AS (
    SELECT
        count(1) AS count_working_days
    FROM (
        SELECT
            to_date,
            from_date,
            generate_series(from_date, to_date, ''1 day'') as dt
        FROM
            dates) AS d
    WHERE
        extract(''ISODOW'' FROM dt) < 7
)
,location_wise_count AS (
select t.parent_id,
		t.role_id,
		count(t.user_id) AS number_of_active_user,    
        sum(t.number_of_days) as number_of_days,
        sum(t.number_of_days_login) as number_of_days_login
from (  SELECT
		distinct on(
        lh.parent_id,
        ul.role_id,
        ul.user_id)
		lh.parent_id,
		ul.role_id,
		ul.user_id,		
        case when ul.number_of_days is not null then ul.number_of_days else 0 end as number_of_days,
        case when ul.number_of_days_login is not null then ul.number_of_days_login else 0 end as number_of_days_login
    FROM
        analytics.um_user_month_wise_login_rate ul,
        dates,location_hierchy_closer_det lh
    WHERE
        ul.month_year BETWEEN dates.from_date AND dates.to_date
        AND lh.parent_id IN (select id from loc_det)
        and lh.child_id = ul.location_id
        AND role_id = #role_id#
    order by lh.parent_id,
        ul.role_id,
        ul.user_id,
		lh.depth) as t 
		GROUP BY
            t.parent_id, t.role_id
)
SELECT
lm.id as "hidden_location_id",
    lm.english_name AS "Location",
    um."name" as "Role",
    uwc.number_of_active_user AS "Number Of User",
    nw.count_working_days "total_working_days",
    round(((uwc.number_of_days_login * 100.0) / NULLIF(uwc.number_of_days, 0)), 2) as "Login Rate"
FROM
    location_wise_count uwc
    inner join location_master lm
    on lm.id = uwc.parent_id
    left join um_role_master um
    on uwc.role_id = um.id
    inner join number_of_working_days nw on true
union all 
	select 
#location_id#,
		''<b>Total</b>'',
		null,
		sum(uwc.number_of_active_user) as "Number Of Users",
		nw.count_working_days as "total_working_days",
		round(((sum(uwc.number_of_days_login) * 100.0) / NULLIF(sum(uwc.number_of_days), 0)), 2)
		from location_wise_count uwc
        inner join number_of_working_days nw on true
        group by nw.count_working_days',true,'ACTIVE','1b4e0e28-82f8-4ee4-a42b-b5f20cc4893b');